id WKUILocationBundle()
{
  if (WKUILocationBundle_onceToken != -1)
    dispatch_once(&WKUILocationBundle_onceToken, &__block_literal_global);
  return (id)WKUILocationBundle_bundle;
}

id WKUILocationBundlePath()
{
  if (WKUILocationBundlePath_onceToken[0] != -1)
    dispatch_once(WKUILocationBundlePath_onceToken, &__block_literal_global_1);
  return (id)WKUILocationBundlePath_bundlePath;
}

id generateSplitMetadata(int a1, int a2, double a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v29;
  _QWORD v30[7];
  _QWORD v31[9];

  v31[7] = *MEMORY[0x24BDAC8D0];
  if (a2)
    v9 = 3;
  else
    v9 = 1;
  v30[0] = *MEMORY[0x24BE37890];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", v9);
  v10 = objc_claimAutoreleasedReturnValue();
  v29 = (void *)v10;
  v11 = *MEMORY[0x24BE378B0];
  v12 = &unk_251C05000;
  if (a1)
    v12 = &unk_251C04FE8;
  v31[0] = v10;
  v31[1] = v12;
  v13 = *MEMORY[0x24BE378A8];
  v30[1] = v11;
  v30[2] = v13;
  v14 = (void *)MEMORY[0x24BDD3E50];
  objc_msgSend(MEMORY[0x24BDD4048], "meterUnit");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "quantityWithUnit:doubleValue:", v15, a3);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v16;
  v30[3] = *MEMORY[0x24BE37898];
  v17 = (void *)MEMORY[0x24BDD3E50];
  objc_msgSend(MEMORY[0x24BDD4048], "secondUnit");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "quantityWithUnit:doubleValue:", v18, a4);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v19;
  v30[4] = *MEMORY[0x24BE378B8];
  v20 = (void *)MEMORY[0x24BDD3E50];
  objc_msgSend(MEMORY[0x24BDD4048], "meterUnit");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "quantityWithUnit:doubleValue:", v21, a5);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v22;
  v30[5] = *MEMORY[0x24BE378A0];
  v23 = (void *)MEMORY[0x24BDD3E50];
  objc_msgSend(MEMORY[0x24BDD4048], "wattUnit");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "quantityWithUnit:doubleValue:", v24, 0.0);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v25;
  v30[6] = *MEMORY[0x24BE37888];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", 0);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v31[6] = v26;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v31, v30, 7);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  return v27;
}

void addSimpleSumStats(void *a1, uint64_t a2, void *a3, void *a4, void *a5, double a6)
{
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  v11 = (void *)MEMORY[0x24BDD3E80];
  v12 = a5;
  v13 = a4;
  v14 = a3;
  v15 = a1;
  objc_msgSend(v11, "quantityTypeForIdentifier:", a2);
  v18 = (id)objc_claimAutoreleasedReturnValue();
  v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD3FF0]), "initWithDataType:startDate:endDate:", v18, v14, v13);

  objc_msgSend(MEMORY[0x24BDD3E50], "quantityWithUnit:doubleValue:", v12, a6);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v16, "setSumQuantity:", v17);
  objc_msgSend(v15, "setObject:forKeyedSubscript:", v16, v18);

}

uint64_t WKUISessionFakeSummaryEnabled()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x24BDBCF50], "standardUserDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "BOOLForKey:", CFSTR("NLSessionFakeSummaryEnabled"));

  return v1;
}

id WKUISessionFakeSummaryWorkout()
{
  void *v0;
  double v1;
  double v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  objc_msgSend(MEMORY[0x24BDBCF50], "standardUserDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v0, "integerForKey:", CFSTR("NLSessionFakeSummaryActivityType"));
  v39 = objc_msgSend(v0, "integerForKey:", CFSTR("NLSessionFakeSummaryGoalType"));
  objc_msgSend(v0, "doubleForKey:", CFSTR("NLSessionFakeSummaryGoalValue"));
  v2 = v1;
  objc_msgSend(v0, "objectForKey:", CFSTR("NLSessionFakeSummaryStartDate"));
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKey:", CFSTR("NLSessionFakeSummaryEndDate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "doubleForKey:", CFSTR("NLSessionFakeSummaryTotalEnergyBurned"));
  v5 = v4;
  objc_msgSend(v0, "doubleForKey:", CFSTR("NLSessionFakeSummaryTotalDistance"));
  v7 = v6;
  v8 = objc_msgSend(v0, "BOOLForKey:", CFSTR("NLSessionFakeSummaryIsIndoor"));
  objc_msgSend(v0, "doubleForKey:", CFSTR("NLSessionFakeSummaryWeatherTemperature"));
  v10 = v9;
  objc_msgSend(v0, "doubleForKey:", CFSTR("NLSessionFakeSummaryWeatherHumidity"));
  v12 = v11;
  v13 = objc_msgSend(v0, "integerForKey:", CFSTR("NLSessionFakeSummaryWeatherCondition"));
  v14 = objc_msgSend(v0, "integerForKey:", CFSTR("NLSessionFakeSummaryAirQualityIndex"));
  v15 = objc_alloc_init(MEMORY[0x24BDBCED8]);
  v16 = v15;
  if (v8)
    objc_msgSend(v15, "setObject:forKey:", &unk_251C05018, *MEMORY[0x24BDD31C0]);
  if (v13)
  {
    v17 = (void *)MEMORY[0x24BDD3E50];
    objc_msgSend(MEMORY[0x24BDD4048], "degreeFahrenheitUnit");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "quantityWithUnit:doubleValue:", v18, v10);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v16, "setObject:forKey:", v19, *MEMORY[0x24BDD3240]);
    v20 = (void *)MEMORY[0x24BDD3E50];
    objc_msgSend(MEMORY[0x24BDD4048], "percentUnit");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "quantityWithUnit:doubleValue:", v21, v12);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v16, "setObject:forKey:", v22, *MEMORY[0x24BDD3238]);
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", v14);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setObject:forKey:", v23, *MEMORY[0x24BE378E8]);
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", v13);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setObject:forKey:", v24, *MEMORY[0x24BDD4458]);

    objc_msgSend(MEMORY[0x24BDBCF38], "localTimeZone");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "name");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setObject:forKey:", v26, *MEMORY[0x24BDD3220]);

    objc_msgSend(v16, "setObject:forKey:", MEMORY[0x24BDBD1C8], *MEMORY[0x24BDD4478]);
  }
  v27 = (void *)MEMORY[0x24BDD4118];
  v28 = (void *)MEMORY[0x24BDD3E50];
  objc_msgSend(MEMORY[0x24BDD4048], "kilocalorieUnit");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "quantityWithUnit:doubleValue:", v29, v5);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = (void *)MEMORY[0x24BDD3E50];
  objc_msgSend(MEMORY[0x24BDD4048], "meterUnit");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "quantityWithUnit:doubleValue:", v32, v7);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:metadata:", v37, v38, v3, 0, v30, v33, v16);
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  MEMORY[0x24BD19B7C](v39, v2);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "_setGoal:", v35);

  objc_msgSend(v34, "_setGoalType:", v39);
  return v34;
}

uint64_t sub_24A63B208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  char v41;

  v37 = a1;
  v38 = a2;
  v3 = sub_24A77AD50();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B20);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B28);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B30);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *((_QWORD *)v2 + 1);
  v15 = v2[16];
  v39 = *v2;
  v13 = v39;
  v40 = v14;
  v41 = v15;
  sub_24A63BEC0(v14, v15);
  sub_24A63B4C8();
  sub_24A77AE04();
  sub_24A77AD38();
  v16 = sub_24A77AE10();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24A63BEDC(v14, v15);
  KeyPath = swift_getKeyPath();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v37, v18);
  v19 = (uint64_t *)&v8[*(int *)(v34 + 36)];
  *v19 = KeyPath;
  v19[1] = v16;
  v20 = swift_getKeyPath();
  sub_24A63CCC0((uint64_t)v8, (uint64_t)v10, &qword_257946B20);
  v21 = 1;
  if (v13)
    v21 = 2;
  v22 = &v10[*(int *)(v35 + 36)];
  *(_QWORD *)v22 = v20;
  *((_QWORD *)v22 + 1) = v21;
  v22[16] = 0;
  sub_24A63CD04((uint64_t)v8, &qword_257946B20);
  v23 = sub_24A77ACD8();
  sub_24A77A390();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_24A63CCC0((uint64_t)v10, (uint64_t)v12, &qword_257946B28);
  v32 = &v12[*(int *)(v36 + 36)];
  *v32 = v23;
  *((_QWORD *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  sub_24A63CD04((uint64_t)v10, &qword_257946B28);
  return sub_24A63CB4C((uint64_t)v12, v38);
}

uint64_t sub_24A63B4C8()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  char v3;
  id v4;
  char v6;
  unsigned __int8 v7;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = v0[16];
  sub_24A63BEC0(v2, v3);
  sub_24A63E608(v2, v3, &v7);
  sub_24A63BEDC(v2, v3);
  if (v7 - 3 > 2)
  {
    if (v1)
    {
      if (qword_257946730 != -1)
        swift_once();
    }
    else
    {
      sub_24A63BEC0(v2, v3);
      sub_24A63E608(v2, v3, &v6);
      sub_24A63BEDC(v2, v3);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0(&v6);
    }
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    sub_24A6CDE34();

  }
  return FIUICurrentLanguageRequiresTallScript();
}

void sub_24A63B600()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257959830 = v0;
}

double sub_24A63B638()
{
  double result;

  if (qword_257946730 != -1)
    swift_once();
  result = *(double *)&qword_257959830;
  qword_257959838 = qword_257959830;
  return result;
}

uint64_t sub_24A63B688()
{
  return sub_24A77A4A4();
}

uint64_t sub_24A63B6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unsigned __int8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a2;
  v24 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B48);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  v14 = *((_QWORD *)v2 + 2);
  v15 = v2[24];
  sub_24A63BEC0(v14, v15);
  sub_24A63E608(v14, v15, &v25);
  sub_24A63BEDC(v14, v15);
  if (v25 <= 8u && ((1 << v25) & 0x181) != 0
    || (FIUICurrentLanguageNeedsExtendedLineSpacing() & v13 & 1) == 0)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B58);
    v17 = sub_24A63CFF0(&qword_257946B60, &qword_257946B58, MEMORY[0x24BDEFB78]);
    sub_24A77B1A0();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
    swift_storeEnumTagMultiPayload();
    sub_24A63CC24();
    v25 = v16;
    v26 = v17;
    swift_getOpaqueTypeConformance2();
    sub_24A77AB28();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    KeyPath = swift_getKeyPath();
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B58);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v12, v24, v20);
    v21 = (uint64_t *)&v12[*(int *)(v10 + 36)];
    *v21 = KeyPath;
    v21[1] = 0x3FF0000000000000;
    sub_24A63CCC0((uint64_t)v12, (uint64_t)v9, &qword_257946B50);
    swift_storeEnumTagMultiPayload();
    sub_24A63CC24();
    v22 = sub_24A63CFF0(&qword_257946B60, &qword_257946B58, MEMORY[0x24BDEFB78]);
    v25 = v20;
    v26 = v22;
    swift_getOpaqueTypeConformance2();
    sub_24A77AB28();
    return sub_24A63CD04((uint64_t)v12, &qword_257946B50);
  }
}

uint64_t View.metricDescriptionFont(multiline:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v6 = sub_24A77A5F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - v8;
  sub_24A63BAD0(a1, a2, a3);
  if (qword_257946738 != -1)
    swift_once();
  v10 = *(double *)&qword_257959838;
  if (FIUICurrentLanguageRequiresTallScript())
    v10 = v10 + 1.0;
  v11 = sub_24A63BBE0();
  v14[0] = a3;
  v14[1] = v11;
  v12 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v14);
  sub_24A63BB50(a1 & 1, v6, v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24A63BAD0(char a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[8];
  uint64_t KeyPath;
  char v8;

  v6[0] = a1;
  KeyPath = swift_getKeyPath();
  v8 = 0;
  MEMORY[0x24BD188D4](v6, a2, &type metadata for MetricDescriptionCoreFont, a3);
  return swift_release();
}

uint64_t sub_24A63BB50(char a1, uint64_t a2, uint64_t a3, double a4)
{
  _BYTE v7[8];
  double v8;
  uint64_t KeyPath;
  char v10;

  v7[0] = a1;
  v8 = a4;
  KeyPath = swift_getKeyPath();
  v10 = 0;
  MEMORY[0x24BD188D4](v7, a2, &type metadata for ExtendedLineSpacingSupport, a3);
  return swift_release();
}

unint64_t sub_24A63BBE0()
{
  unint64_t result;

  result = qword_257946A50;
  if (!qword_257946A50)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77E328, &type metadata for MetricDescriptionCoreFont);
    atomic_store(result, (unint64_t *)&qword_257946A50);
  }
  return result;
}

uint64_t sub_24A63BC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_24A77A5F4();
  v3 = sub_24A77A5F4();
  v7[0] = v1;
  v7[1] = sub_24A63BBE0();
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_24A63BCB8();
  return MEMORY[0x24BD1A1F4](v4, v3, v6);
}

unint64_t sub_24A63BCB8()
{
  unint64_t result;

  result = qword_257946A58;
  if (!qword_257946A58)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77E250, &type metadata for ExtendedLineSpacingSupport);
    atomic_store(result, (unint64_t *)&qword_257946A58);
  }
  return result;
}

void type metadata accessor for FIUIWorkoutSectionType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A60);
}

void type metadata accessor for FIUIEnergyType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A68);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A70);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A78);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_24A63BD68(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24A63BD88(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A80);
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A88);
}

void type metadata accessor for FIUIWorkoutIconSize(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A90);
}

void type metadata accessor for ARUIRingType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946A98);
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AA0);
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AA8);
}

void type metadata accessor for FIUIDistanceUnit(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AB0);
}

void type metadata accessor for FIUIDistanceType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AB8);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AC0);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AC8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AD0);
}

uint64_t initializeBufferWithCopyOfBuffer for ExtendedLineSpacingSupport(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_24A63BEC0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for ExtendedLineSpacingSupport(uint64_t a1)
{
  return sub_24A63BEDC(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_24A63BEDC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for ExtendedLineSpacingSupport(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 24);
  sub_24A63BEC0(v3, v4);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for ExtendedLineSpacingSupport(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  sub_24A63BEC0(v3, v4);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ExtendedLineSpacingSupport(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedLineSpacingSupport(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[25])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedLineSpacingSupport(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedLineSpacingSupport()
{
  return &type metadata for ExtendedLineSpacingSupport;
}

void type metadata accessor for HKWorkoutSwimmingLocationType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AD8);
}

void type metadata accessor for _HKWorkoutGoalType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AE0);
}

void type metadata accessor for HKWorkoutMetricType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946AE8);
}

uint64_t destroy for MetricDescriptionCoreFont(uint64_t a1)
{
  return sub_24A63BEDC(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9WorkoutUI25MetricDescriptionCoreFontVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_24A63BEC0(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for MetricDescriptionCoreFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_24A63BEC0(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MetricDescriptionCoreFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricDescriptionCoreFont(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricDescriptionCoreFont(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricDescriptionCoreFont()
{
  return &type metadata for MetricDescriptionCoreFont;
}

void sub_24A63C298(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_24A63C2A0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_24A63C2B4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_24A63C2C8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24A63C2DC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_24A63C30C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_24A63C338@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_24A63C35C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_24A63C370(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_24A63C384(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_24A63C398@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24A63C3AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_24A63C3C0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_24A63C3D4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_24A63C3E8()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_24A63C3F8()
{
  return sub_24A77BE9C();
}

_QWORD *sub_24A63C410(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_24A63C424()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A63C468()
{
  return sub_24A77C238();
}

uint64_t sub_24A63C490()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A63C4D0(uint64_t a1, uint64_t a2)
{
  return sub_24A63C62C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_24A63C4E8(uint64_t a1, uint64_t a2)
{
  return sub_24A63C62C(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_24A63C4FC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_24A77B998();
  *a2 = 0;
  return result;
}

uint64_t sub_24A63C570(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_24A77B9A4();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24A63C5EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_24A77B9B0();
  v2 = sub_24A77B980();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24A63C62C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_24A77B9B0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A63C668()
{
  sub_24A77B9B0();
  sub_24A77BA1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A63C6A8()
{
  uint64_t v0;

  sub_24A77B9B0();
  sub_24A77C22C();
  sub_24A77BA1C();
  v0 = sub_24A77C25C();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_24A63C718(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24A63C72C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_24A719620(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_24A63C768@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24A63C77C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24A77B9B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24A63C7A4()
{
  sub_24A63C880((unint64_t *)&qword_257946B90, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_24A77E2E4);
  sub_24A63C880(&qword_257946B98, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_24A77E084);
  return sub_24A77C064();
}

uint64_t sub_24A63C828()
{
  return sub_24A63C880(&qword_257946AF0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_24A77E048);
}

uint64_t sub_24A63C854()
{
  return sub_24A63C880(&qword_257946AF8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_24A77E01C);
}

uint64_t sub_24A63C880(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BD1A1F4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A63C8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_24A77B9B0();
  v2 = v1;
  if (v0 == sub_24A77B9B0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_24A77C184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_QWORD *sub_24A63C948@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_24A63C958(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_24A63C964@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24A77B980();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24A63C9A8()
{
  sub_24A63C880((unint64_t *)&qword_257946B80, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_24A77E2A0);
  sub_24A63C880(&qword_257946B88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_24A77E1A4);
  return sub_24A77C064();
}

uint64_t sub_24A63CA2C()
{
  return sub_24A63C880(&qword_257946B00, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_24A77E168);
}

uint64_t sub_24A63CA58()
{
  return sub_24A63C880(&qword_257946B08, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_24A77E13C);
}

uint64_t sub_24A63CA84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A63CA94()
{
  return sub_24A63C880(&qword_257946B10, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_24A77E1D8);
}

uint64_t sub_24A63CAC0()
{
  return sub_24A63C880(&qword_257946B18, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_24A77E0B8);
}

uint64_t sub_24A63CAEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD1A1DC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_24A63CB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A63CB94@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24A77A714();
  *a1 = v3;
  return result;
}

uint64_t sub_24A63CBBC()
{
  return sub_24A77A720();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BD1A1E8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_24A63CC24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946B68;
  if (!qword_257946B68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B50);
    v2[0] = sub_24A63CFF0(&qword_257946B60, &qword_257946B58, MEMORY[0x24BDEFB78]);
    v2[1] = sub_24A63CFF0(&qword_257946B70, &qword_257946B78, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946B68);
  }
  return result;
}

uint64_t sub_24A63CCC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A63CD04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for HKWorkoutActivityType(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946BA0);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946BA8);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946BB0);
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946BB8);
}

void type metadata accessor for FIUIHeartRateViewState(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946BC0);
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946BC8);
}

uint64_t getEnumTagSinglePayload for EffortMiniGraph.ZoneSection(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EffortMiniGraph.ZoneSection(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
  sub_24A63CE1C(a1, &qword_257946BD0);
}

void sub_24A63CE1C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

unint64_t sub_24A63CE64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946BD8;
  if (!qword_257946BD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B30);
    v2[0] = sub_24A63CED0();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946BD8);
  }
  return result;
}

unint64_t sub_24A63CED0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946BE0;
  if (!qword_257946BE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B28);
    v2[0] = sub_24A63CF54();
    v2[1] = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946BE0);
  }
  return result;
}

unint64_t sub_24A63CF54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946BE8;
  if (!qword_257946BE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B20);
    v2[0] = sub_24A63CFF0(&qword_257946BF0, &qword_257946B38, MEMORY[0x24BDEFB78]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946BE8);
  }
  return result;
}

uint64_t sub_24A63CFF0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD1A1F4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A63D034()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[4];

  result = qword_257946C18;
  if (!qword_257946C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C20);
    v2 = sub_24A63CC24();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B58);
    v3[3] = sub_24A63CFF0(&qword_257946B60, &qword_257946B58, MEMORY[0x24BDEFB78]);
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257946C18);
  }
  return result;
}

uint64_t sub_24A63D0E8()
{
  return sub_24A63C880(&qword_257946C28, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_24A77E508);
}

uint64_t sub_24A63D114()
{
  return sub_24A63C880(&qword_257946C30, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_24A77E4D4);
}

uint64_t sub_24A63D140()
{
  return sub_24A63C880(&qword_257946C38, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_24A77E534);
}

uint64_t sub_24A63D16C()
{
  return sub_24A63C880(&qword_257946C40, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_24A77E570);
}

uint64_t sub_24A63D198()
{
  return sub_24A63C880(&qword_257946C48, (uint64_t (*)(uint64_t))type metadata accessor for HKWorkoutActivityType, (uint64_t)&unk_24A77E6BC);
}

void sub_24A63D1F8()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257946C50 = v0;
}

uint64_t MetricValueFont.init(includesSlashes:smallCaps:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_BYTE *)a3 = a1;
  *(_BYTE *)(a3 + 1) = a2;
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t MetricValueFont.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char v152;

  v142 = a1;
  v148 = a2;
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C58);
  v3 = MEMORY[0x24BDAC7A8](v149);
  v117 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v119 = (uint64_t)&v116 - v5;
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C60);
  MEMORY[0x24BDAC7A8](v125);
  v126 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C68);
  MEMORY[0x24BDAC7A8](v138);
  v127 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C70);
  v8 = MEMORY[0x24BDAC7A8](v134);
  v116 = (uint64_t)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v118 = (uint64_t)&v116 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v121 = (uint64_t)&v116 - v12;
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C78);
  v123 = *(_QWORD *)(v132 - 8);
  v13 = MEMORY[0x24BDAC7A8](v132);
  v120 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v122 = (char *)&v116 - v15;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C80);
  MEMORY[0x24BDAC7A8](v145);
  v147 = (uint64_t)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C88);
  MEMORY[0x24BDAC7A8](v135);
  v137 = (uint64_t)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C90);
  MEMORY[0x24BDAC7A8](v129);
  v130 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946C98);
  MEMORY[0x24BDAC7A8](v136);
  v131 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CA0);
  MEMORY[0x24BDAC7A8](v146);
  v139 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_24A77AD50();
  v140 = *(_QWORD *)(v21 - 8);
  v141 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CA8);
  v24 = MEMORY[0x24BDAC7A8](v143);
  v128 = (char *)&v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v116 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v116 - v29;
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CB0);
  v133 = *(_QWORD *)(v144 - 8);
  v31 = MEMORY[0x24BDAC7A8](v144);
  v33 = (char *)&v116 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v124 = (char *)&v116 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v116 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v116 - v39;
  v41 = *v2;
  v42 = v2[1];
  v43 = *((_QWORD *)v2 + 1);
  v44 = v2[16];
  sub_24A63BEC0(v43, v44);
  sub_24A63E608(v43, v44, &v152);
  sub_24A63BEDC(v43, v44);
  switch(v152)
  {
    case 0:
    case 7:
    case 8:
      sub_24A63BEC0(v43, v44);
      sub_24A63E608(v43, v44, &v150);
      sub_24A63BEDC(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v150);
      sub_24A77ADEC();
      sub_24A77AD38();
      sub_24A77AE10();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v23, v141);
      v45 = sub_24A77AD5C();
      swift_release();
      if (v42)
      {
        v46 = sub_24A77AD68();
        swift_release();
        v45 = v46;
      }
      KeyPath = swift_getKeyPath();
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CB8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v30, v142, v48);
      v49 = v143;
      v50 = (uint64_t *)&v30[*(int *)(v143 + 36)];
      *v50 = KeyPath;
      v50[1] = v45;
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      v51 = sub_24A63F2B0();
      sub_24A77B1A0();
      sub_24A63CD04((uint64_t)v30, &qword_257946CA8);
      v52 = v133;
      v53 = v144;
      (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v40, v38, v144);
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v130, v40, v53);
      swift_storeEnumTagMultiPayload();
      v150 = v49;
      v151 = v51;
      swift_getOpaqueTypeConformance2();
      v54 = sub_24A63F500();
      v150 = v134;
      v151 = v54;
      swift_getOpaqueTypeConformance2();
      v55 = (uint64_t)v131;
      sub_24A77AB28();
      sub_24A63CCC0(v55, v137, &qword_257946C98);
      swift_storeEnumTagMultiPayload();
      sub_24A63F43C();
      sub_24A63F584();
      v56 = (uint64_t)v139;
      sub_24A77AB28();
      sub_24A63CD04(v55, &qword_257946C98);
      sub_24A63CCC0(v56, v147, &qword_257946CA0);
      swift_storeEnumTagMultiPayload();
      sub_24A63F3A8();
      sub_24A63F618();
      sub_24A77AB28();
      sub_24A63CD04(v56, &qword_257946CA0);
      result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v40, v53);
      break;
    case 1:
    case 5:
      sub_24A63BEC0(v43, v44);
      sub_24A63E608(v43, v44, &v150);
      sub_24A63BEDC(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v150);
      sub_24A77ADEC();
      sub_24A77AD38();
      sub_24A77AE10();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v23, v141);
      v58 = sub_24A77AD5C();
      swift_release();
      if (v41)
      {
        v59 = sub_24A77AE7C();
        swift_release();
        v58 = v59;
      }
      v60 = swift_getKeyPath();
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CB8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v28, v142, v61);
      v62 = v143;
      v63 = (uint64_t *)&v28[*(int *)(v143 + 36)];
      *v63 = v60;
      v63[1] = v58;
      v64 = swift_getKeyPath();
      v65 = v121;
      sub_24A63CCC0((uint64_t)v28, v121, &qword_257946CA8);
      v66 = v134;
      v67 = v65 + *(int *)(v134 + 36);
      *(_QWORD *)v67 = v64;
      *(_QWORD *)(v67 + 8) = 1;
      *(_BYTE *)(v67 + 16) = 0;
      sub_24A63CD04((uint64_t)v28, &qword_257946CA8);
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      v68 = sub_24A63F500();
      v69 = v120;
      sub_24A77B1A0();
      sub_24A63CD04(v65, &qword_257946C70);
      v70 = v123;
      v71 = v122;
      v72 = v132;
      (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v69, v132);
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v130, v71, v72);
      swift_storeEnumTagMultiPayload();
      v73 = sub_24A63F2B0();
      v150 = v62;
      v151 = v73;
      swift_getOpaqueTypeConformance2();
      v150 = v66;
      v151 = v68;
      swift_getOpaqueTypeConformance2();
      v74 = (uint64_t)v131;
      sub_24A77AB28();
      sub_24A63CCC0(v74, v137, &qword_257946C98);
      swift_storeEnumTagMultiPayload();
      sub_24A63F43C();
      sub_24A63F584();
      v75 = (uint64_t)v139;
      sub_24A77AB28();
      sub_24A63CD04(v74, &qword_257946C98);
      sub_24A63CCC0(v75, v147, &qword_257946CA0);
      swift_storeEnumTagMultiPayload();
      sub_24A63F3A8();
      sub_24A63F618();
      sub_24A77AB28();
      sub_24A63CD04(v75, &qword_257946CA0);
      result = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v71, v72);
      break;
    case 4:
      sub_24A63BEC0(v43, v44);
      sub_24A63E608(v43, v44, &v150);
      sub_24A63BEDC(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v150);
      sub_24A77ADF8();
      sub_24A77AD38();
      sub_24A77AE10();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v23, v141);
      v91 = sub_24A77AD5C();
      swift_release();
      v92 = swift_getKeyPath();
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CB8);
      v94 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v128, v142, v93);
      v95 = v143;
      v96 = (uint64_t *)(v94 + *(int *)(v143 + 36));
      *v96 = v92;
      v96[1] = v91;
      v97 = swift_getKeyPath();
      v98 = v116;
      sub_24A63CCC0(v94, v116, &qword_257946CA8);
      v99 = v98 + *(int *)(v134 + 36);
      *(_QWORD *)v99 = v97;
      *(_QWORD *)(v99 + 8) = 1;
      *(_BYTE *)(v99 + 16) = 0;
      sub_24A63CD04(v94, &qword_257946CA8);
      v87 = &qword_257946C70;
      v100 = v118;
      sub_24A63F6C4(v98, v118, &qword_257946C70);
      sub_24A63CCC0(v100, v126, &qword_257946C70);
      swift_storeEnumTagMultiPayload();
      v101 = sub_24A63F2B0();
      v150 = v95;
      v151 = v101;
      swift_getOpaqueTypeConformance2();
      sub_24A63F500();
      v102 = (uint64_t)v127;
      sub_24A77AB28();
      sub_24A63CCC0(v102, v137, &qword_257946C68);
      swift_storeEnumTagMultiPayload();
      sub_24A63F43C();
      sub_24A63F584();
      v103 = (uint64_t)v139;
      sub_24A77AB28();
      sub_24A63CD04(v102, &qword_257946C68);
      sub_24A63CCC0(v103, v147, &qword_257946CA0);
      swift_storeEnumTagMultiPayload();
      sub_24A63F3A8();
      sub_24A63F618();
      sub_24A77AB28();
      sub_24A63CD04(v103, &qword_257946CA0);
      v90 = v100;
      goto LABEL_10;
    case 6:
      sub_24A63BEC0(v43, v44);
      sub_24A63E608(v43, v44, &v150);
      sub_24A63BEDC(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v150);
      sub_24A77ADF8();
      sub_24A77AD38();
      v104 = sub_24A77AE10();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v23, v141);
      v105 = swift_getKeyPath();
      v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CB8);
      v107 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v128, v142, v106);
      v108 = v143;
      v109 = (uint64_t *)(v107 + *(int *)(v143 + 36));
      *v109 = v105;
      v109[1] = v104;
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      v110 = sub_24A63F2B0();
      sub_24A77B1A0();
      sub_24A63CD04(v107, &qword_257946CA8);
      v111 = v133;
      v112 = v124;
      v113 = v144;
      (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v124, v33, v144);
      (*(void (**)(uint64_t, char *, uint64_t))(v111 + 16))(v126, v112, v113);
      swift_storeEnumTagMultiPayload();
      v150 = v108;
      v151 = v110;
      swift_getOpaqueTypeConformance2();
      sub_24A63F500();
      v114 = (uint64_t)v127;
      sub_24A77AB28();
      sub_24A63CCC0(v114, v137, &qword_257946C68);
      swift_storeEnumTagMultiPayload();
      sub_24A63F43C();
      sub_24A63F584();
      v115 = (uint64_t)v139;
      sub_24A77AB28();
      sub_24A63CD04(v114, &qword_257946C68);
      sub_24A63CCC0(v115, v147, &qword_257946CA0);
      swift_storeEnumTagMultiPayload();
      sub_24A63F3A8();
      sub_24A63F618();
      sub_24A77AB28();
      sub_24A63CD04(v115, &qword_257946CA0);
      result = (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v112, v113);
      break;
    default:
      sub_24A63BEC0(v43, v44);
      sub_24A63E608(v43, v44, &v150);
      sub_24A63BEDC(v43, v44);
      _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0((char *)&v150);
      sub_24A77ADF8();
      sub_24A77AD38();
      sub_24A77AE10();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v23, v141);
      v76 = sub_24A77AD5C();
      swift_release();
      v77 = swift_getKeyPath();
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946CB8);
      v79 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v128, v142, v78);
      v80 = (uint64_t *)(v79 + *(int *)(v143 + 36));
      *v80 = v77;
      v80[1] = v76;
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      sub_24A63F2B0();
      v81 = v124;
      sub_24A77B1A0();
      sub_24A63CD04(v79, &qword_257946CA8);
      v82 = swift_getKeyPath();
      v83 = v133;
      v84 = v117;
      v85 = v144;
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v117, v81, v144);
      v86 = &v84[*(int *)(v149 + 36)];
      *(_QWORD *)v86 = v82;
      *((_QWORD *)v86 + 1) = 1;
      v86[16] = 0;
      (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v85);
      v87 = &qword_257946C58;
      v88 = (uint64_t)v84;
      v89 = v119;
      sub_24A63F6C4(v88, v119, &qword_257946C58);
      sub_24A63CCC0(v89, v147, &qword_257946C58);
      swift_storeEnumTagMultiPayload();
      sub_24A63F3A8();
      sub_24A63F618();
      sub_24A77AB28();
      v90 = v89;
LABEL_10:
      result = sub_24A63CD04(v90, v87);
      break;
  }
  return result;
}

uint64_t Font.if (_:transform:)(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  if ((a1 & 1) != 0)
    return a2(a4);
  else
    return swift_retain();
}

uint64_t Font.withVerticallyCenteredSlashes()()
{
  return sub_24A77AE7C();
}

uint64_t View.metricValueFont(includesSlashes:smallCaps:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  _BYTE v7[8];
  uint64_t KeyPath;
  char v9;

  v7[0] = a1;
  v7[1] = a2;
  KeyPath = swift_getKeyPath();
  v9 = 0;
  MEMORY[0x24BD188D4](v7, a3, &type metadata for MetricValueFont, a4);
  return swift_release();
}

uint64_t sub_24A63E574@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24A63F8F4();
  result = sub_24A77A8E8();
  *a1 = v3;
  return result;
}

uint64_t sub_24A63E5C0()
{
  sub_24A63F8F4();
  return sub_24A77A8F4();
}

uint64_t sub_24A63E608@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_24A77A8DC();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8]();
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a3 = a1;
  }
  else
  {
    sub_24A63BEC0(a1, 0);
    v11 = sub_24A77BC68();
    v12 = sub_24A77AC78();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17[1] = a3;
      v16 = v15;
      v18 = v15;
      *(_DWORD *)v14 = 136315138;
      v17[2] = sub_24A76BC40(0xD000000000000010, 0x800000024A789820, &v18);
      sub_24A77BE00();
      _os_log_impl(&dword_24A635000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v16, -1, -1);
      MEMORY[0x24BD1A2B4](v14, -1, -1);
    }

    sub_24A77A8D0();
    swift_getAtKeyPath();
    sub_24A63BEDC(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_24A63E7D8@<X0>(uint64_t a1@<X8>)
{
  return sub_24A63E9F4(&qword_257946D18, (uint64_t (*)(_QWORD))MEMORY[0x24BDF17A8], 0x747865746E6F43, 0xE700000000000000, a1);
}

uint64_t sub_24A63E800(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_24A77A8DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v8 = sub_24A77BC68();
    v9 = sub_24A77AC78();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_24A76BC40(0x6C616E6F6974704FLL, 0xEE003E746E6F463CLL, &v15);
      sub_24A77BE00();
      _os_log_impl(&dword_24A635000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v12, -1, -1);
      MEMORY[0x24BD1A2B4](v11, -1, -1);
    }

    sub_24A77A8D0();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_24A63E9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_24A63E9F4(&qword_257946D30, (uint64_t (*)(_QWORD))MEMORY[0x24BDED930], 0xD000000000000010, 0x800000024A789840, a1);
}

uint64_t sub_24A63E9F4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_24A77A8DC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A63CCC0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_24A77BC68();
    v21 = sub_24A77AC78();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_24A76BC40(v28, v26, &v30);
      sub_24A77BE00();
      _os_log_impl(&dword_24A635000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v24, -1, -1);
      MEMORY[0x24BD1A2B4](v23, -1, -1);
    }

    sub_24A77A8D0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_24A63EC2C@<X0>(uint64_t a1@<X8>)
{
  return sub_24A63E9F4(&qword_257946D20, (uint64_t (*)(_QWORD))MEMORY[0x24BDEC038], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_24A63EC60(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_24A77A8DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_24A77BC68();
  v9 = sub_24A77AC78();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_24A76BC40(1819242306, 0xE400000000000000, &v15);
    sub_24A77BE00();
    _os_log_impl(&dword_24A635000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v12, -1, -1);
    MEMORY[0x24BD1A2B4](v11, -1, -1);
  }

  sub_24A77A8D0();
  swift_getAtKeyPath();
  sub_24A63BEDC(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_24A63EE18@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_24A77A8DC();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a3 = a1 & 1;
  }
  else
  {
    sub_24A63BEC0(a1, 0);
    v11 = sub_24A77BC68();
    v12 = sub_24A77AC78();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17[1] = a3;
      v16 = v15;
      v18 = v15;
      *(_DWORD *)v14 = 136315138;
      v17[2] = sub_24A76BC40(0xD000000000000015, 0x800000024A789800, &v18);
      sub_24A77BE00();
      _os_log_impl(&dword_24A635000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v16, -1, -1);
      MEMORY[0x24BD1A2B4](v14, -1, -1);
    }

    sub_24A77A8D0();
    swift_getAtKeyPath();
    sub_24A63BEDC(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_24A63EFEC@<X0>(uint64_t a1@<X8>)
{
  return sub_24A63E9F4(&qword_257946D10, (uint64_t (*)(_QWORD))MEMORY[0x24BDFAF10], 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_24A63F01C@<X0>(uint64_t a1@<X8>)
{
  return sub_24A63E9F4(&qword_257946D38, (uint64_t (*)(_QWORD))MEMORY[0x24BDFADE0], 0xD000000000000013, 0x800000024A789860, a1);
}

uint64_t sub_24A63F048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A834();
  *a1 = result;
  return result;
}

uint64_t sub_24A63F070()
{
  swift_retain();
  return sub_24A77A840();
}

uint64_t sub_24A63F098@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_24A77A8B8();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24A63F0C8()
{
  return sub_24A77A8C4();
}

uint64_t _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0(char *a1)
{
  char v1;
  id v2;

  v1 = *a1;
  if (qword_257946740 != -1)
    swift_once();
  if (((1 << v1) & 0x5C) != 0 || ((1 << v1) & 0x181) == 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    sub_24A6CDE34();

  }
  return FIUICurrentLanguageRequiresTallScript();
}

uint64_t sub_24A63F1CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24A63F8F4();
  result = sub_24A77A8E8();
  *a1 = v3;
  return result;
}

uint64_t sub_24A63F218()
{
  sub_24A63F8F4();
  return sub_24A77A8F4();
}

uint64_t sub_24A63F260@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A834();
  *a1 = result;
  return result;
}

uint64_t sub_24A63F288()
{
  swift_retain();
  return sub_24A77A840();
}

unint64_t sub_24A63F2B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946CC0;
  if (!qword_257946CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946CA8);
    v2[0] = sub_24A63CFF0(&qword_257946CC8, &qword_257946CB8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946CC0);
  }
  return result;
}

uint64_t sub_24A63F34C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_24A77A8B8();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24A63F37C()
{
  return sub_24A77A8C4();
}

uint64_t sub_24A63F3A8()
{
  return sub_24A63F3CC(&qword_257946CD0, &qword_257946CA0, (uint64_t (*)(void))sub_24A63F43C, (uint64_t (*)(void))sub_24A63F584);
}

uint64_t sub_24A63F3CC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A63F43C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  _QWORD v3[4];

  result = qword_257946CD8;
  if (!qword_257946CD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C98);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946CA8);
    sub_24A63F2B0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C70);
    v3[3] = sub_24A63F500();
    v3[0] = OpaqueTypeConformance2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257946CD8);
  }
  return result;
}

unint64_t sub_24A63F500()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946CE0;
  if (!qword_257946CE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C70);
    v2[0] = sub_24A63F2B0();
    v2[1] = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946CE0);
  }
  return result;
}

unint64_t sub_24A63F584()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_257946CE8;
  if (!qword_257946CE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C68);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946CA8);
    v2[3] = sub_24A63F2B0();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_24A63F500();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946CE8);
  }
  return result;
}

unint64_t sub_24A63F618()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_257946CF0;
  if (!qword_257946CF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C58);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946CA8);
    v2[3] = sub_24A63F2B0();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946CF0);
  }
  return result;
}

uint64_t sub_24A63F6C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A63F708()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A63F71C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_24A63BEC0(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for MetricValueFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_24A63BEC0(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t assignWithTake for MetricValueFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for MetricValueFont()
{
  return &type metadata for MetricValueFont;
}

uint64_t sub_24A63F824()
{
  return sub_24A63F3CC(&qword_257946CF8, &qword_257946D00, sub_24A63F3A8, (uint64_t (*)(void))sub_24A63F618);
}

uint64_t sub_24A63F858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_24A77A5F4();
  v4[0] = v1;
  v4[1] = sub_24A63F8AC();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_24A63F8AC()
{
  unint64_t result;

  result = qword_257946D08;
  if (!qword_257946D08)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for MetricValueFont, &type metadata for MetricValueFont);
    atomic_store(result, (unint64_t *)&qword_257946D08);
  }
  return result;
}

unint64_t sub_24A63F8F4()
{
  unint64_t result;

  result = qword_257946D28;
  if (!qword_257946D28)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A785534, &type metadata for WorkoutViewStyleKey);
    atomic_store(result, (unint64_t *)&qword_257946D28);
  }
  return result;
}

uint64_t ArtworkBridge.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___SMArtwork_artwork;
  v4 = sub_24A778F38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24A63F988()
{
  return sub_24A778F08();
}

uint64_t sub_24A63F9BC()
{
  return sub_24A778F20();
}

id sub_24A63F9F0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A63FA54()
{
  return sub_24A778F2C();
}

id ArtworkBridge.__allocating_init(artwork:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___SMArtwork_artwork];
  v5 = sub_24A778F38();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id ArtworkBridge.init(artwork:)(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR___SMArtwork_artwork];
  v4 = sub_24A778F38();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ArtworkBridge();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for ArtworkBridge()
{
  uint64_t result;

  result = qword_257946D78;
  if (!qword_257946D78)
    return swift_getSingletonMetadata();
  return result;
}

id ArtworkBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ArtworkBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ArtworkBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ArtworkBridge.hash.getter()
{
  sub_24A77C268();
  sub_24A778F38();
  sub_24A63FEC8();
  sub_24A77B914();
  sub_24A778F08();
  sub_24A77BA1C();
  swift_bridgeObjectRelease();
  sub_24A778F20();
  sub_24A77BA1C();
  swift_bridgeObjectRelease();
  sub_24A778F2C();
  sub_24A77BA1C();
  swift_bridgeObjectRelease();
  return sub_24A77C250();
}

unint64_t sub_24A63FEC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257946D40;
  if (!qword_257946D40)
  {
    v1 = sub_24A778F38();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE8D6B0], v1);
    atomic_store(result, (unint64_t *)&qword_257946D40);
  }
  return result;
}

uint64_t ArtworkBridge.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  void *v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_24A63FFA0(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_24A63FFE8((uint64_t)v5);
    goto LABEL_5;
  }
  type metadata accessor for ArtworkBridge();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v2 = 0;
    return v2 & 1;
  }
  v2 = sub_24A640104(v1, (uint64_t)v4);

  return v2 & 1;
}

uint64_t sub_24A63FFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A63FFE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A640104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((MEMORY[0x24BD16528](a1 + OBJC_IVAR___SMArtwork_artwork, a2 + OBJC_IVAR___SMArtwork_artwork) & 1) != 0)
  {
    v2 = sub_24A778F08();
    v4 = v3;
    if (v2 == sub_24A778F08() && v4 == v5)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v7 = sub_24A77C184();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = 0;
      if ((v7 & 1) == 0)
        return v8 & 1;
    }
    v9 = sub_24A778F20();
    v11 = v10;
    if (v9 == sub_24A778F20() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v13 = sub_24A77C184();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = 0;
      if ((v13 & 1) == 0)
        return v8 & 1;
    }
    v14 = sub_24A778F2C();
    v16 = v15;
    if (v14 == sub_24A778F2C() && v16 == v17)
      v8 = 1;
    else
      v8 = sub_24A77C184();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_24A640298()
{
  return type metadata accessor for ArtworkBridge();
}

uint64_t sub_24A6402A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778F38();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ArtworkBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ArtworkBridge.backgroundColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ArtworkBridge.template.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ArtworkBridge.textColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ArtworkBridge.__allocating_init(artwork:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for BlockSectionView(uint64_t a1)
{
  swift_release();

  return swift_release();
}

_QWORD *_s9WorkoutUI16BlockSectionViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  v4 = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BlockSectionView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for BlockSectionView(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockSectionView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockSectionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockSectionView()
{
  return &type metadata for BlockSectionView;
}

uint64_t sub_24A640558()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A640568@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  ValueMetadata *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD *v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  ValueMetadata *v37;
  unint64_t v38;
  uint64_t v39;

  v31 = a3;
  v32 = a2;
  v35 = a4;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946DB8);
  v30 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946DD0);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946DA8);
  MEMORY[0x24BDAC7A8](v34);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A77934C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BEC5938];
  v13 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  sub_24A779334();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BEC5930], v11);
  sub_24A63C880(&qword_257946DD8, v12, MEMORY[0x24BEC5940]);
  sub_24A77BAF4();
  sub_24A77BAF4();
  v19 = v37;
  v20 = v39;
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, v11);
  v21(v18, v11);
  if (v19 == (ValueMetadata *)v20)
  {
    *(_QWORD *)v10 = sub_24A77A9FC();
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 1;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E00);
    sub_24A640980(a1, v32, v31, &v10[*(int *)(v22 + 44)]);
    sub_24A63CCC0((uint64_t)v10, (uint64_t)v8, &qword_257946DA8);
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_257946DA0, &qword_257946DA8, MEMORY[0x24BDF4700]);
    sub_24A6410AC();
    sub_24A77AB28();
    return sub_24A63CD04((uint64_t)v10, &qword_257946DA8);
  }
  else
  {
    v39 = sub_24A779328();
    v24 = (_QWORD *)swift_allocObject();
    v25 = v32;
    v24[2] = a1;
    v24[3] = v25;
    v24[4] = v31;
    swift_retain();
    swift_retain();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946DE0);
    sub_24A778854();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946DE8);
    sub_24A63CFF0(&qword_257946DF0, &qword_257946DE0, MEMORY[0x24BEE12D8]);
    v27 = sub_24A641130();
    v37 = &type metadata for WorkoutStepRow;
    v38 = v27;
    swift_getOpaqueTypeConformance2();
    sub_24A63C880(&qword_257946DF8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC58E0], MEMORY[0x24BEC58F0]);
    sub_24A77B5F0();
    v28 = v30;
    v29 = v36;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v8, v6, v36);
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_257946DA0, &qword_257946DA8, MEMORY[0x24BDF4700]);
    sub_24A6410AC();
    sub_24A77AB28();
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  }
}

uint64_t sub_24A640980@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  unint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  ValueMetadata *v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;

  v52 = a2;
  v53 = a3;
  v49 = a1;
  v59 = a4;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946DB8);
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v49 - v7;
  v8 = sub_24A77B5C0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E08);
  v12 = MEMORY[0x24BDAC7A8](v51);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v60 = (uint64_t)&v49 - v15;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E10);
  v63 = *(_QWORD *)(v54 - 8);
  v16 = MEMORY[0x24BDAC7A8](v54);
  v61 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v62 = (char *)&v49 - v18;
  v68 = sub_24A77931C();
  sub_24A77B590();
  v66 = 0;
  v67 = 1;
  sub_24A77B350();
  sub_24A77A474();
  sub_24A641194();
  sub_24A77B20C();
  swift_release();
  swift_release();
  swift_release();
  sub_24A77B5B4();
  sub_24A77B6EC();
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  v23 = &v14[*(int *)(v51 + 36)];
  v50 = v14;
  __asm { FMOV            V0.2D, #3.0 }
  *(_OWORD *)v23 = _Q0;
  *((_QWORD *)v23 + 2) = v20;
  *((_QWORD *)v23 + 3) = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v29 = v60;
  sub_24A6411D8((uint64_t)v14, v60);
  v30 = v49;
  v68 = sub_24A779328();
  v31 = (_QWORD *)swift_allocObject();
  v32 = v52;
  v31[2] = v30;
  v31[3] = v32;
  v31[4] = v53;
  swift_retain();
  swift_retain();
  v33 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946DE0);
  sub_24A778854();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946DE8);
  sub_24A63CFF0(&qword_257946DF0, &qword_257946DE0, MEMORY[0x24BEE12D8]);
  v34 = sub_24A641130();
  v64 = &type metadata for WorkoutStepRow;
  v65 = v34;
  swift_getOpaqueTypeConformance2();
  sub_24A63C880(&qword_257946DF8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC58E0], MEMORY[0x24BEC58F0]);
  v35 = v55;
  sub_24A77B5F0();
  v36 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v37 = v61;
  v38 = v54;
  v36(v61, v62, v54);
  v39 = (uint64_t)v50;
  sub_24A63CCC0(v29, (uint64_t)v50, &qword_257946E08);
  v40 = v56;
  v41 = v57;
  v42 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v43 = v58;
  v42(v56, v35, v58);
  v44 = v59;
  v36(v59, v37, v38);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E20);
  sub_24A63CCC0(v39, (uint64_t)&v44[*(int *)(v45 + 48)], &qword_257946E08);
  v42(&v44[*(int *)(v45 + 64)], v40, v43);
  v46 = *(void (**)(char *, uint64_t))(v41 + 8);
  v46(v35, v43);
  sub_24A63CD04(v60, &qword_257946E08);
  v47 = *(void (**)(char *, uint64_t))(v63 + 8);
  v47(v62, v38);
  v46(v40, v43);
  sub_24A63CD04(v39, &qword_257946E08);
  return ((uint64_t (*)(char *, uint64_t))v47)(v61, v38);
}

uint64_t sub_24A640E28(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  sub_24A779310();
  sub_24A63C880(&qword_257946E28, (uint64_t (*)(uint64_t))MEMORY[0x24BEC58E0], MEMORY[0x24BEC58D0]);
  swift_retain();
  v4 = a3;
  sub_24A77A57C();
  sub_24A77B350();
  sub_24A77A474();
  sub_24A641130();
  sub_24A77B20C();

  swift_release();
  return swift_release();
}

uint64_t sub_24A640F0C()
{
  return sub_24A77B128();
}

uint64_t sub_24A640F24@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  __int128 v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *((_QWORD *)v1 + 2);
  v11 = *v1;
  v12 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D90);
  sub_24A641028();
  sub_24A77B614();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 16))(a1, v6, v3);
  v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257946DC8) + 36);
  *(_OWORD *)v8 = xmmword_24A77E970;
  *(_OWORD *)(v8 + 16) = xmmword_24A77E970;
  *(_BYTE *)(v8 + 32) = 0;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24A64101C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A640568(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_24A641028()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946D98;
  if (!qword_257946D98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946D90);
    v2[0] = sub_24A63CFF0(&qword_257946DA0, &qword_257946DA8, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A6410AC();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946D98);
  }
  return result;
}

unint64_t sub_24A6410AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_257946DB0;
  if (!qword_257946DB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946DB8);
    v2[1] = &type metadata for WorkoutStepRow;
    v2[2] = sub_24A641130();
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4A08], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946DB0);
  }
  return result;
}

unint64_t sub_24A641130()
{
  unint64_t result;

  result = qword_257946DC0;
  if (!qword_257946DC0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for WorkoutStepRow, &type metadata for WorkoutStepRow);
    atomic_store(result, (unint64_t *)&qword_257946DC0);
  }
  return result;
}

uint64_t sub_24A641178(uint64_t a1)
{
  uint64_t v1;

  return sub_24A640E28(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_24A641194()
{
  unint64_t result;

  result = qword_257946E18;
  if (!qword_257946E18)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for RepeatRowView, &type metadata for RepeatRowView);
    atomic_store(result, (unint64_t *)&qword_257946E18);
  }
  return result;
}

uint64_t sub_24A6411D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

unint64_t sub_24A64125C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946E30;
  if (!qword_257946E30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946DC8);
    v2[0] = sub_24A6412E0();
    v2[1] = sub_24A63CFF0(&qword_257946E40, &qword_257946E48, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946E30);
  }
  return result;
}

unint64_t sub_24A6412E0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[3];

  result = qword_257946E38;
  if (!qword_257946E38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946D88);
    v2 = sub_24A641028();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257946E38);
  }
  return result;
}

uint64_t static PowerZonesPlatterMetricsProvider.metrics(workoutSettingsManager:shouldShowCadenceMetrics:)(void *a1, char a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257946E50);
  inited = swift_initStackObject();
  v5 = inited;
  *(_OWORD *)(inited + 16) = xmmword_24A77E9F0;
  *(_OWORD *)(inited + 32) = xmmword_24A77EA00;
  v6 = 5;
  if ((a2 & 1) != 0)
    v6 = 15;
  *(_QWORD *)(inited + 48) = 43;
  *(_QWORD *)(inited + 56) = v6;
  v7 = objc_msgSend(a1, sel_supportedMetrics);
  if (v7)
  {
    v8 = v7;
    sub_24A6416A8();
    sub_24A6416E4();
    v9 = sub_24A77BC14();

  }
  else
  {
    v9 = 0;
  }
  sub_24A641440(v5, v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  return v11;
}

void sub_24A641440(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return;
  v4 = 0;
  v5 = a1 + 32;
  v6 = a2 & 0xC000000000000001;
  v29 = a2 + 56;
  v7 = MEMORY[0x24BEE4AF8];
  v8 = 0x24BDD1000uLL;
  v26 = a1 + 32;
  v27 = *(_QWORD *)(a1 + 16);
  v25 = a2 & 0xC000000000000001;
  do
  {
    v24 = v7;
    if (v4 <= v2)
      v9 = v2;
    else
      v9 = v4;
    v28 = v9;
    while (1)
    {
      if (v4 == v28)
      {
        __break(1u);
        return;
      }
      v11 = v4++;
      if (!a2)
        goto LABEL_8;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = objc_msgSend(objc_allocWithZone(*(Class *)(v8 + 1760)), sel_initWithUnsignedInteger_, v12);
      if (!v6)
        break;
      v10 = sub_24A77BF08();

      if ((v10 & 1) != 0)
        goto LABEL_21;
LABEL_8:
      if (v4 == v2)
        return;
    }
    if (!*(_QWORD *)(a2 + 16)
      || (v14 = sub_24A77BDB8(),
          v15 = -1 << *(_BYTE *)(a2 + 32),
          v16 = v14 & ~v15,
          ((*(_QWORD *)(v29 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0))
    {
LABEL_19:

      v5 = v26;
      v2 = v27;
      v6 = v25;
      v8 = 0x24BDD1000;
      goto LABEL_8;
    }
    sub_24A6416A8();
    v17 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v16);
    v18 = sub_24A77BDC4();

    if ((v18 & 1) == 0)
    {
      v19 = ~v15;
      do
      {
        v16 = (v16 + 1) & v19;
        if (((*(_QWORD *)(v29 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          goto LABEL_19;
        v20 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v16);
        v21 = sub_24A77BDC4();

      }
      while ((v21 & 1) == 0);
    }

    v5 = v26;
    v2 = v27;
    v6 = v25;
LABEL_21:
    v7 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24A671C44(0, *(_QWORD *)(v24 + 16) + 1, 1);
      v7 = v24;
    }
    v23 = *(_QWORD *)(v7 + 16);
    v22 = *(_QWORD *)(v7 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_24A671C44(v22 > 1, v23 + 1, 1);
      v7 = v24;
    }
    *(_QWORD *)(v7 + 16) = v23 + 1;
    *(_QWORD *)(v7 + 8 * v23 + 32) = v12;
    v8 = 0x24BDD1000;
  }
  while (v4 != v2);
}

unint64_t sub_24A6416A8()
{
  unint64_t result;

  result = qword_25794C8D0;
  if (!qword_25794C8D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25794C8D0);
  }
  return result;
}

unint64_t sub_24A6416E4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_257946E58;
  if (!qword_257946E58)
  {
    v1 = sub_24A6416A8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_257946E58);
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerZonesPlatterMetricsProvider()
{
  return &type metadata for PowerZonesPlatterMetricsProvider;
}

uint64_t TrainingLoadNewInsightsDailyView.init(onConfirm:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t TrainingLoadNewInsightsDailyView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E60);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E68);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E70);
  MEMORY[0x24BDAC7A8](v35);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[1];
  v33 = *v1;
  v34 = v14;
  *(_QWORD *)v11 = sub_24A77A9FC();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v15 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257946E78) + 44)];
  sub_24A77AC9C();
  type metadata accessor for TrainingLoadOnboardingCore();
  sub_24A641CAC();
  sub_24A77A3A8();
  v16 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v16(v6, v8, v2);
  v16(v15, v6, v2);
  v17 = &v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257946E88) + 48)];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v8, v2);
  v18(v6, v2);
  v19 = sub_24A77A9FC();
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v20 = (id)qword_2544D6158;
  v21 = sub_24A77856C();
  v23 = v22;

  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v33;
  *(_QWORD *)(v24 + 24) = v34;
  swift_retain();
  v25 = sub_24A77A480();
  v26 = MEMORY[0x24BD1831C]((2 * v25));
  v27 = sub_24A77A618();
  sub_24A63CCC0((uint64_t)v11, (uint64_t)v13, &qword_257946E68);
  v28 = &v13[*(int *)(v35 + 36)];
  *(_QWORD *)v28 = v21;
  *((_QWORD *)v28 + 1) = v23;
  *((_QWORD *)v28 + 2) = sub_24A6433A4;
  *((_QWORD *)v28 + 3) = v24;
  *((_QWORD *)v28 + 4) = v27;
  *((_QWORD *)v28 + 5) = 0;
  v28[48] = 1;
  v28[49] = v26;
  *((_QWORD *)v28 + 7) = v19;
  sub_24A63CD04((uint64_t)v11, &qword_257946E68);
  v29 = sub_24A77B668();
  sub_24A641F84(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v36, 0.0, 1, INFINITY, 0, v29, v30, &qword_257946E70, &qword_257946E98);
  return sub_24A63CD04((uint64_t)v13, &qword_257946E70);
}

uint64_t sub_24A641AE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t result;

  v2 = sub_24A778584();
  MEMORY[0x24BDAC7A8](v2);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v3 = (id)qword_2544D6158;
  v4 = sub_24A77856C();
  v6 = v5;

  v7 = (id)qword_2544D6158;
  sub_24A77856C();

  sub_24A778578();
  type metadata accessor for TrainingLoadOnboardingCore();
  result = sub_24A778554();
  *a1 = 0xD000000000000027;
  a1[1] = 0x800000024A789950;
  a1[2] = v4;
  a1[3] = v6;
  return result;
}

unint64_t sub_24A641CAC()
{
  unint64_t result;
  uint64_t OnboardingCore;

  result = qword_257946E80;
  if (!qword_257946E80)
  {
    OnboardingCore = type metadata accessor for TrainingLoadOnboardingCore();
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadOnboardingCore, OnboardingCore);
    atomic_store(result, (unint64_t *)&qword_257946E80);
  }
  return result;
}

double sub_24A641CF4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A643148(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946EF0, &qword_257946EF8).n128_u64[0];
  return result;
}

uint64_t sub_24A641D4C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v31 = (void *)sub_24A77AC78();
    sub_24A779FF4();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_24A77A6A8();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_24A6436C4(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_24A641F2C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F50, &qword_257946F58).n128_u64[0];
  return result;
}

__n128 sub_24A641F84@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v28 = (void *)sub_24A77AC78();
    sub_24A779FF4();

    v19 = a17;
  }
  sub_24A77A6A8();
  sub_24A63CCC0(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_24A642150@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946ED0, &qword_257946ED8).n128_u64[0];
  return result;
}

uint64_t sub_24A6421A8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  __int128 *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE v39[32];

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v23 = (void *)sub_24A77AC78();
    sub_24A779FF4();

  }
  sub_24A77A6A8();
  v24 = v13[1];
  v36 = *v13;
  v37 = v24;
  sub_24A643658((uint64_t)&v36, (uint64_t)v39);
  v38 = *((_QWORD *)&v37 + 1);
  v34 = *((_QWORD *)v13 + 4);
  v35 = *((_BYTE *)v13 + 40);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_24A643694((uint64_t)v39);
  sub_24A6436D4((uint64_t)&v38);
  return sub_24A6436FC((uint64_t)&v34);
}

double sub_24A642380@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F80, &qword_257946F88).n128_u64[0];
  return result;
}

double sub_24A6423D8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F70, &qword_257946F78).n128_u64[0];
  return result;
}

double sub_24A642430@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A643148(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F90, &qword_257946F98).n128_u64[0];
  return result;
}

double sub_24A642488@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F40, &qword_257946F48).n128_u64[0];
  return result;
}

uint64_t sub_24A6424E0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  void *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v18 = a16;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v27 = (void *)sub_24A77AC78();
    sub_24A779FF4();

    v18 = a16;
  }
  sub_24A77A6A8();
  *(_QWORD *)a9 = v18;
  *(_QWORD *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;
  return swift_retain();
}

__n128 sub_24A64268C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  void *v22;
  __n128 result;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __n128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v22 = (void *)sub_24A77AC78();
    sub_24A779FF4();

  }
  sub_24A77A6A8();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

uint64_t sub_24A642814@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v23 = (void *)sub_24A77AC78();
    sub_24A779FF4();

  }
  sub_24A77A6A8();
  v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  v25 = v13[4];
  v26 = v13[1];
  *a9 = *v13;
  a9[1] = v26;
  a9[8] = v31;
  a9[9] = v32;
  a9[10] = v33;
  a9[11] = v34;
  a9[4] = v25;
  a9[5] = v28;
  a9[6] = v29;
  a9[7] = v30;
  return sub_24A643724((uint64_t)v13);
}

double sub_24A6429BC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F30, &qword_257946F38).n128_u64[0];
  return result;
}

double sub_24A642A14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F20, &qword_257946F28).n128_u64[0];
  return result;
}

double sub_24A642A6C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F60, &qword_257946F68).n128_u64[0];
  return result;
}

double sub_24A642AC4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A643148(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946EC0, &qword_257946EC8).n128_u64[0];
  return result;
}

uint64_t sub_24A642B1C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v23 = (void *)sub_24A77AC78();
    sub_24A779FF4();

  }
  sub_24A77A6A8();
  v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(_QWORD *)(a9 + 64) = *(_QWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;
  return sub_24A6436FC(v13);
}

uint64_t sub_24A642CD4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v23 = (void *)sub_24A77AC78();
    sub_24A779FF4();

  }
  sub_24A77A6A8();
  v24 = v13[1];
  v25 = v13[2];
  *a9 = *v13;
  a9[1] = v24;
  a9[2] = v25;
  *(_OWORD *)((char *)a9 + 41) = *(_OWORD *)((char *)v13 + 41);
  a9[8] = v31;
  a9[9] = v32;
  a9[10] = v33;
  a9[4] = v27;
  a9[5] = v28;
  a9[6] = v29;
  a9[7] = v30;
  return swift_retain();
}

double sub_24A642E80@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946FA0, &qword_257946FA8).n128_u64[0];
  return result;
}

double sub_24A642ED8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946EE0, &qword_257946EE8).n128_u64[0];
  return result;
}

uint64_t sub_24A642F30@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v23 = (void *)sub_24A77AC78();
    sub_24A779FF4();

  }
  sub_24A77A6A8();
  v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(_BYTE *)(a9 + 96) = *(_BYTE *)(v13 + 96);
  v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 104) = v28;
  *(_OWORD *)(a9 + 120) = v29;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 200) = v34;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 152) = v31;
  return sub_24A643610(v13);
}

double sub_24A6430F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A643148(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F10, &qword_257946F18).n128_u64[0];
  return result;
}

__n128 sub_24A643148@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  uint64_t v29;
  _OWORD *v30;
  __n128 result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v19 = a16;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A77BC68();
    v28 = (void *)sub_24A77AC78();
    sub_24A779FF4();

    v19 = a16;
  }
  sub_24A77A6A8();
  v29 = __swift_instantiateConcreteTypeFromMangledName(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a9, v17, v29);
  v30 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *v30 = v32;
  v30[1] = v33;
  result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_24A643324@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_24A641F84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_257946F00, &qword_257946F08).n128_u64[0];
  return result;
}

uint64_t sub_24A643380()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6433A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24A6433C4()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for TrainingLoadNewInsightsDailyView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for TrainingLoadNewInsightsDailyView()
{
  return swift_release();
}

_QWORD *assignWithCopy for TrainingLoadNewInsightsDailyView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TrainingLoadNewInsightsDailyView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadNewInsightsDailyView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadNewInsightsDailyView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadNewInsightsDailyView()
{
  return &type metadata for TrainingLoadNewInsightsDailyView;
}

unint64_t sub_24A643508()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946E90;
  if (!qword_257946E90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946E98);
    v2[0] = sub_24A643574();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946E90);
  }
  return result;
}

unint64_t sub_24A643574()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257946EA0;
  if (!qword_257946EA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946E70);
    v2[0] = sub_24A63CFF0(&qword_257946EA8, &qword_257946E68, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A63CFF0(&qword_257946EB0, &qword_257946EB8, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257946EA0);
  }
  return result;
}

uint64_t sub_24A643610(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24A643658(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDF1EB8] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_24A643694(uint64_t a1)
{
  sub_24A6436C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_24A6436C4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_24A6436D4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24A6436FC(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_24A643724(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v2, v3);
  return a1;
}

uint64_t StepMetricView.init(intervalsMetricsPublisher:workoutStatePublisher:step:formattingManager:activityType:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_24A77997C();
  sub_24A63C880(&qword_257946FB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5FA0], MEMORY[0x24BEC5F98]);
  swift_retain();
  v8 = sub_24A77A57C();
  v10 = v9;
  sub_24A779208();
  sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
  v11 = sub_24A77A57C();
  v13 = v12;
  result = swift_release();
  *a4 = v8;
  a4[1] = v10;
  a4[2] = v11;
  a4[3] = v13;
  a4[4] = a1;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t StepMetricView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[24];
  __int128 v16[3];
  uint64_t v17;
  char v18;
  __int128 v19;
  _OWORD v20[3];
  _BYTE v21[32];
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v1 = sub_24A77AC24();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_OWORD *)(v0 + 16);
  v16[0] = *(_OWORD *)v0;
  v16[1] = v5;
  v16[2] = *(_OWORD *)(v0 + 32);
  v17 = *(_QWORD *)(v0 + 48);
  v6 = sub_24A77A930();
  sub_24A643A18(v16, (uint64_t)&v19);
  v18 = 0;
  *(_QWORD *)&v9 = v6;
  *((_QWORD *)&v9 + 1) = 0x4008000000000000;
  LOBYTE(v10[0]) = 0;
  *(_OWORD *)((char *)v10 + 8) = v19;
  *((_QWORD *)&v10[1] + 1) = *(_QWORD *)&v20[0];
  v11 = *(_OWORD *)((char *)v20 + 8);
  v12 = *(_OWORD *)((char *)&v20[1] + 8);
  *(_QWORD *)&v13 = *((_QWORD *)&v20[2] + 1);
  BYTE8(v13) = v21[0];
  v14 = *(_OWORD *)&v21[8];
  *(_WORD *)v15 = *(_WORD *)&v21[24];
  *(_OWORD *)&v15[8] = v22;
  sub_24A77AC18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946FC0);
  sub_24A643DA8();
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v22 = v14;
  v23 = *(_OWORD *)v15;
  v24 = *(_QWORD *)&v15[16];
  v20[1] = v10[1];
  v20[2] = v11;
  *(_OWORD *)v21 = v12;
  *(_OWORD *)&v21[16] = v13;
  v19 = v9;
  v20[0] = v10[0];
  return sub_24A643DF4((uint64_t)&v19);
}

uint64_t sub_24A643A18@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  SEL *v16;
  SEL *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39[5];
  __int128 v40;
  __int128 v41;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v40 = a1[1];
  v41 = v7;
  v8 = *((_QWORD *)a1 + 4);
  v9 = (void *)*((_QWORD *)a1 + 5);
  v10 = (void *)*((_QWORD *)a1 + 6);
  swift_retain();
  sub_24A6442F0((uint64_t)&v41);
  sub_24A6442F0((uint64_t)&v40);
  sub_24A77997C();
  sub_24A63C880(&qword_257946FB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5FA0], MEMORY[0x24BEC5F98]);
  swift_retain();
  v38 = v9;
  v37 = v10;
  v11 = sub_24A77A57C();
  v35 = v12;
  v36 = v11;
  sub_24A779208();
  sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
  v13 = sub_24A77A57C();
  v33 = v14;
  v34 = v13;
  sub_24A644318((uint64_t)&v41);
  v15 = (void *)sub_24A7792F8();
  if ((sub_24A77BD58() & 1) != 0)
    v16 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
  else
    v16 = _HKWorkoutGoalType.color.getter((uint64_t)objc_msgSend(v15, sel_goalTypeIdentifier));
  v17 = v16;

  MEMORY[0x24BD189B8](v17);
  v18 = sub_24A779340();
  v39[3] = v18;
  v39[4] = sub_24A63C880((unint64_t *)&qword_257946FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5928], MEMORY[0x24BEC5918]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEC5920], v18);
  sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v20 = sub_24A77B374();
  v21 = sub_24A77ACB4();
  swift_release();
  if (qword_2579467D8 != -1)
    swift_once();
  v22 = qword_257948950;
  swift_retain();
  v23 = sub_24A77994C();
  sub_24A644318((uint64_t)&v41);
  if (qword_2579467E0 != -1)
    swift_once();
  sub_24A77ADD4();
  v24 = *MEMORY[0x24BDF1668];
  v25 = sub_24A77ADC8();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v6, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v6, 0, 1, v25);
  v27 = sub_24A77AE1C();
  result = sub_24A64439C((uint64_t)v6);
  v29 = v35;
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v29;
  v30 = v33;
  *(_QWORD *)(a2 + 16) = v34;
  *(_QWORD *)(a2 + 24) = v30;
  v31 = v38;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v31;
  *(_QWORD *)(a2 + 48) = v37;
  *(_QWORD *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 64) = v21;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = 10;
  *(_WORD *)(a2 + 88) = 256;
  *(_QWORD *)(a2 + 96) = v23;
  *(_QWORD *)(a2 + 104) = v27;
  return result;
}

unint64_t sub_24A643DA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257946FC8;
  if (!qword_257946FC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946FC0);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_257946FC8);
  }
  return result;
}

uint64_t sub_24A643DF4(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 64);
  v3 = *(void **)(a1 + 72);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_24A643E74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A643E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[24];
  __int128 v16[3];
  uint64_t v17;
  char v18;
  __int128 v19;
  _OWORD v20[3];
  _BYTE v21[32];
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v1 = sub_24A77AC24();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_OWORD *)(v0 + 16);
  v16[0] = *(_OWORD *)v0;
  v16[1] = v5;
  v16[2] = *(_OWORD *)(v0 + 32);
  v17 = *(_QWORD *)(v0 + 48);
  v6 = sub_24A77A930();
  sub_24A643A18(v16, (uint64_t)&v19);
  v18 = 0;
  *(_QWORD *)&v9 = v6;
  *((_QWORD *)&v9 + 1) = 0x4008000000000000;
  LOBYTE(v10[0]) = 0;
  *(_OWORD *)((char *)v10 + 8) = v19;
  *((_QWORD *)&v10[1] + 1) = *(_QWORD *)&v20[0];
  v11 = *(_OWORD *)((char *)v20 + 8);
  v12 = *(_OWORD *)((char *)&v20[1] + 8);
  *(_QWORD *)&v13 = *((_QWORD *)&v20[2] + 1);
  BYTE8(v13) = v21[0];
  v14 = *(_OWORD *)&v21[8];
  *(_WORD *)v15 = *(_WORD *)&v21[24];
  *(_OWORD *)&v15[8] = v22;
  sub_24A77AC18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946FC0);
  sub_24A643DA8();
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v22 = v14;
  v23 = *(_OWORD *)v15;
  v24 = *(_QWORD *)&v15[16];
  v20[1] = v10[1];
  v20[2] = v11;
  *(_OWORD *)v21 = v12;
  *(_OWORD *)&v21[16] = v13;
  v19 = v9;
  v20[0] = v10[0];
  return sub_24A643DF4((uint64_t)&v19);
}

void destroy for StepMetricView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

}

_QWORD *initializeWithCopy for StepMetricView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  a1[6] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  v7 = v5;
  v8 = v6;
  return a1;
}

_QWORD *assignWithCopy for StepMetricView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = v4;
  v6 = v4;

  v7 = (void *)a2[6];
  v8 = (void *)a1[6];
  a1[6] = v7;
  v9 = v7;

  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StepMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();

  v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for StepMetricView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StepMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StepMetricView()
{
  return &type metadata for StepMetricView;
}

uint64_t sub_24A6442A4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946FC0);
  sub_24A643DA8();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6442F0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_24A644318(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_24A64439C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A6443DC(uint64_t a1)
{
  return sub_24A644424(0.411764706, 0.121568627, 0.101960784, a1, &qword_257946FE0);
}

uint64_t sub_24A644404(uint64_t a1)
{
  return sub_24A644424(0.0, 0.341176471, 0.223529412, a1, &qword_257946FE8);
}

uint64_t sub_24A644424(double a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v9 = sub_24A77B320();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, double))(v13 + 104))(v12, *MEMORY[0x24BDF3C28], v10);
  result = MEMORY[0x24BD189AC](v12, a1, a2, a3, 1.0);
  *a5 = result;
  return result;
}

uint64_t sub_24A6444CC(uint64_t a1)
{
  return sub_24A644508(0.0, 1.0, 0.658823529, a1, &qword_257946FF0);
}

uint64_t sub_24A6444E8(uint64_t a1)
{
  return sub_24A644508(1.0, 0.37254902, 0.274509804, a1, &qword_257946FF8);
}

uint64_t sub_24A644508(double a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result;

  result = MEMORY[0x24BD18928](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, a1, a2, a3, 1.0));
  *a5 = result;
  return result;
}

int64x2_t sub_24A644570()
{
  int64x2_t result;

  result = vdupq_n_s64(0x405B000000000000uLL);
  xmmword_257947000 = (__int128)result;
  qword_257947020 = 0;
  xmmword_257947010 = 0uLL;
  return result;
}

void sub_24A644590(uint64_t a1)
{
  sub_24A64469C(a1, &qword_257946768, (uint64_t)&xmmword_257947000, &qword_257947028);
}

void sub_24A6445B4(uint64_t a1)
{
  sub_24A64469C(a1, &qword_257946768, (uint64_t)&xmmword_257947000 + 8, &qword_257947030);
}

double sub_24A6445D8()
{
  double result;

  if (qword_257946768 != -1)
    swift_once();
  result = *(double *)&qword_257947020;
  xmmword_257947038 = xmmword_257947010;
  qword_257947048 = qword_257947020;
  return result;
}

void sub_24A644630(uint64_t a1)
{
  sub_24A64469C(a1, &qword_257946780, (uint64_t)&xmmword_257947038, &qword_257947050);
}

void sub_24A644654(uint64_t a1)
{
  sub_24A64469C(a1, &qword_257946780, (uint64_t)&xmmword_257947038 + 8, &qword_257947058);
}

void sub_24A644678(uint64_t a1)
{
  sub_24A64469C(a1, &qword_257946780, (uint64_t)&qword_257947048, &qword_257947060);
}

void sub_24A64469C(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;

  if (*a2 != -1)
    swift_once();
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *a4 = v5;
}

uint64_t sub_24A6446FC(uint64_t a1)
{
  return sub_24A644744(a1, &qword_257946788, (uint64_t)&qword_257947050, &qword_257947068);
}

uint64_t sub_24A644720(uint64_t a1)
{
  return sub_24A644744(a1, &qword_257946790, (uint64_t)&qword_257947058, &qword_257947070);
}

uint64_t sub_24A644744(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;

  if (*a2 != -1)
    swift_once();
  result = sub_24A646108();
  *a4 = result;
  return result;
}

uint64_t sub_24A64478C(uint64_t a1)
{
  return sub_24A644744(a1, &qword_257946798, (uint64_t)&qword_257947060, &qword_257947078);
}

uint64_t sub_24A6447B0()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_257946748 != -1)
    swift_once();
  v0 = qword_257946FE0;
  v1 = qword_257946750;
  swift_retain();
  if (v1 != -1)
    swift_once();
  qword_257959848 = v0;
  unk_257959850 = qword_257946FE8;
  qword_257959858 = 0x3FF0000000000000;
  return swift_retain();
}

uint64_t sub_24A644844()
{
  sub_24A77C22C();
  swift_retain();
  sub_24A77B344();
  swift_release();
  swift_retain();
  sub_24A77B344();
  swift_release();
  sub_24A77C244();
  return sub_24A77C25C();
}

uint64_t sub_24A6448D8()
{
  return sub_24A644844();
}

uint64_t sub_24A6448E4()
{
  swift_retain();
  sub_24A77B344();
  swift_release();
  swift_retain();
  sub_24A77B344();
  swift_release();
  return sub_24A77C244();
}

uint64_t sub_24A644958()
{
  sub_24A77C22C();
  swift_retain();
  sub_24A77B344();
  swift_release();
  swift_retain();
  sub_24A77B344();
  swift_release();
  sub_24A77C244();
  return sub_24A77C25C();
}

uint64_t sub_24A6449E0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u)
    return sub_24A77C238();
  sub_24A77C238();
  return sub_24A77C244();
}

uint64_t sub_24A644A38(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if ((sub_24A77B32C() & 1) != 0)
    return sub_24A77B32C() & (v2 == v3);
  else
    return 0;
}

uint64_t sub_24A644A98()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_24A77C22C();
  sub_24A6449E0((uint64_t)v4, v1, v2);
  return sub_24A77C25C();
}

uint64_t sub_24A644AE4(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6449E0(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_24A644AF0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_24A77C22C();
  sub_24A6449E0((uint64_t)v4, v1, v2);
  return sub_24A77C25C();
}

BOOL sub_24A644B38(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  int v4;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
      return v4 == 1 && v2 == v3;
    return v4 == 2 && *(_QWORD *)&v3 == 0;
  }
  else
  {
    return !*(_BYTE *)(a2 + 8) && v2 == v3;
  }
}

uint64_t PillConfiguration.pillColor.getter()
{
  return swift_retain();
}

uint64_t PillConfiguration.hash(into:)()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_24A77C244();
  sub_24A77C244();
  sub_24A77C238();
  if (v1 <= 1)
    sub_24A77C244();
  swift_retain();
  sub_24A77B344();
  swift_release();
  swift_retain();
  sub_24A77B344();
  swift_release();
  return sub_24A77C238();
}

uint64_t PillConfiguration.hashValue.getter()
{
  sub_24A77C22C();
  PillConfiguration.hash(into:)();
  return sub_24A77C25C();
}

uint64_t sub_24A644CF4()
{
  sub_24A77C22C();
  PillConfiguration.hash(into:)();
  return sub_24A77C25C();
}

uint64_t sub_24A644D60()
{
  sub_24A77C22C();
  PillConfiguration.hash(into:)();
  return sub_24A77C25C();
}

WorkoutUI::PacerViewConfiguration __swiftcall PacerViewConfiguration.init(secondsAheadOfPacer:workoutViewStyle:)(Swift::Double secondsAheadOfPacer, WorkoutUI::WorkoutViewStyle workoutViewStyle)
{
  uint64_t v2;
  char v3;
  double v4;
  WorkoutUI::PacerViewConfiguration result;

  v3 = *(_BYTE *)workoutViewStyle;
  v4 = round(secondsAheadOfPacer);
  *(Swift::Double *)v2 = secondsAheadOfPacer;
  *(double *)(v2 + 8) = v4;
  *(_BYTE *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = 0x4066800000000000;
  result.secondsAheadOfPacerRounded = v4;
  result.secondsAheadOfPacer = secondsAheadOfPacer;
  result.workoutViewStyle = workoutViewStyle;
  return result;
}

uint64_t PacerViewConfiguration.pillConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  uint64_t result;

  v3 = *(_BYTE *)(v1 + 16);
  if (*(double *)(v1 + 8) == 0.0)
  {
    if (qword_257946758 != -1)
      swift_once();
    v4 = qword_257946FF0;
    v5 = qword_257946770;
    swift_retain();
    if (v5 != -1)
      swift_once();
    *(double *)a1 = *(double *)&qword_257947028 * 0.5;
    if (qword_257946778 != -1)
      swift_once();
    *(double *)(a1 + 8) = *(double *)&qword_257947030 * 0.5;
    *(_QWORD *)(a1 + 16) = 0;
    v6 = 2;
  }
  else
  {
    v7 = *(double *)v1;
    v8 = *(double *)(v1 + 24);
    if (*(double *)v1 <= 0.0)
    {
      v12 = fabs(v7);
      if (v12 >= v8)
        v13 = *(double *)(v1 + 24);
      else
        v13 = v12;
      if (qword_257946760 != -1)
        swift_once();
      v4 = qword_257946FF8;
      v14 = qword_257946770;
      swift_retain();
      if (v14 != -1)
        swift_once();
      v15 = v13 / v8;
      *(double *)a1 = *(double *)&qword_257947028 * 0.5;
      if (qword_257946778 != -1)
        swift_once();
      v6 = 0;
      *(double *)(a1 + 8) = *(double *)&qword_257947030 * 0.5;
      *(double *)(a1 + 16) = v15;
    }
    else
    {
      if (v7 >= v8)
        v9 = *(double *)(v1 + 24);
      else
        v9 = *(double *)v1;
      if (qword_257946758 != -1)
        swift_once();
      v4 = qword_257946FF0;
      v10 = qword_257946770;
      swift_retain();
      if (v10 != -1)
        swift_once();
      v11 = v9 / v8;
      *(double *)a1 = *(double *)&qword_257947028 * 0.5;
      if (qword_257946778 != -1)
        swift_once();
      *(double *)(a1 + 8) = *(double *)&qword_257947030 * 0.5;
      *(double *)(a1 + 16) = v11;
      v6 = 1;
    }
  }
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  result = sub_24A77B350();
  *(_QWORD *)(a1 + 40) = result;
  *(_BYTE *)(a1 + 48) = v3;
  return result;
}

id sub_24A645080(uint64_t a1)
{
  return sub_24A6450A0(a1, 192, &qword_257947080);
}

id sub_24A645090(uint64_t a1)
{
  return sub_24A6450A0(a1, 224, &qword_257947088);
}

id sub_24A6450A0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  id result;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
  objc_msgSend(v5, sel_setAllowedUnits_, a2);
  result = objc_msgSend(v5, sel_setZeroFormattingBehavior_, 0x10000);
  *a3 = v5;
  return result;
}

uint64_t sub_24A64510C()
{
  uint64_t v0;
  int v1;
  double v2;
  uint64_t *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = round(fabs(*(double *)v0));
  if (v2 / 60.0 <= 90.0)
  {
    if (qword_2579467C0 != -1)
      swift_once();
    v3 = &qword_257947080;
  }
  else
  {
    if (qword_2579467C8 != -1)
      swift_once();
    v3 = &qword_257947088;
  }
  v4 = (id)*v3;
  v5 = objc_msgSend(v4, sel_stringFromTimeInterval_, v2);
  if (!v5)
  {
    v7 = 0;
    v9 = 0xE000000000000000;
    if (v1)
      goto LABEL_10;
LABEL_14:
    if ((sub_24A77BAA0() & 1) != 0)
    {
      v10 = 2;
LABEL_18:
      v11 = sub_24A667670(v10, v7, v9);
      v13 = v12;
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      v7 = MEMORY[0x24BD19018](v11, v13, v15, v17);
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    if ((sub_24A77BAA0() & 1) == 0)
      goto LABEL_19;
LABEL_17:
    v10 = 1;
    goto LABEL_18;
  }
  v6 = v5;
  v7 = sub_24A77B9B0();
  v9 = v8;

  if (!v1)
    goto LABEL_14;
LABEL_10:
  if ((sub_24A77BAA0() & 1) != 0 && (sub_24A77BAA0() & 1) == 0)
    goto LABEL_17;
LABEL_19:

  return v7;
}

double PacerViewConfiguration.text.getter@<D0>(uint64_t a1@<X8>)
{
  double *v1;
  double v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  double v13;
  id v14;
  double result;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  char v26;

  v4 = *v1;
  v3 = v1[1];
  v5 = *((_QWORD *)v1 + 3);
  if (*((_BYTE *)v1 + 16) != 3)
  {
    LOBYTE(v22) = *((_BYTE *)v1 + 16);
    *((_QWORD *)&v22 + 1) = v5;
    *(_QWORD *)&v21 = sub_24A64510C();
    *((_QWORD *)&v21 + 1) = v7;
    sub_24A645928();
    v8 = sub_24A77AFD8();
    v10 = v9;
    v12 = v11;
    v13 = fabs(v3);
    if (v13 >= 600.0)
    {
      if (v13 >= 3600.0)
      {
        if (qword_2579467B0 == -1)
        {
LABEL_18:
          swift_retain();
          sub_24A77AF84();
          swift_release();
          sub_24A64596C(v8, v10, v12 & 1);
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      else if (qword_2579467A8 == -1)
      {
        goto LABEL_18;
      }
    }
    else if (qword_2579467A0 == -1)
    {
      goto LABEL_18;
    }
    swift_once();
    goto LABEL_18;
  }
  PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v21);
  swift_release();
  if (qword_257946760 != -1)
    swift_once();
  v6 = sub_24A77B32C();
  swift_release();
  if ((v6 & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
  }
  else if (qword_2544D6160 != -1)
  {
    swift_once();
  }
  swift_beginAccess();
  v14 = (id)qword_2544D6158;
  sub_24A77856C();

  *(double *)&v21 = v4;
  *((double *)&v21 + 1) = v3;
  LOBYTE(v22) = 3;
  *((_QWORD *)&v22 + 1) = v5;
  sub_24A64510C();
  swift_getKeyPath();
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947090);
  sub_24A64597C();
  sub_24A77AB28();
  result = *(double *)&v21;
  v16 = v22;
  v17 = v23;
  v18 = v24;
  v19 = v25;
  v20 = v26;
  *(_OWORD *)a1 = v21;
  *(_OWORD *)(a1 + 16) = v16;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v18;
  *(_BYTE *)(a1 + 64) = v19;
  *(_BYTE *)(a1 + 65) = v20;
  return result;
}

uint64_t PacerViewConfiguration.hash(into:)()
{
  sub_24A77C244();
  sub_24A77C244();
  sub_24A77C238();
  return sub_24A77C244();
}

uint64_t PacerViewConfiguration.hashValue.getter()
{
  sub_24A77C22C();
  PacerViewConfiguration.hash(into:)();
  return sub_24A77C25C();
}

uint64_t sub_24A6457A0()
{
  sub_24A77C22C();
  PacerViewConfiguration.hash(into:)();
  return sub_24A77C25C();
}

uint64_t sub_24A6457FC()
{
  sub_24A77C22C();
  PacerViewConfiguration.hash(into:)();
  return sub_24A77C25C();
}

uint64_t _s9WorkoutUI17PillConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v3;
  double v4;
  int v5;
  int v6;
  uint64_t v7;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = *(double *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 24);
  v6 = *(unsigned __int8 *)(a2 + 48);
  v7 = *(unsigned __int8 *)(a1 + 24);
  if (*(_BYTE *)(a1 + 24))
  {
    if ((_DWORD)v7 != 1)
    {
      v7 = 0;
      if (v5 != 2 || v4 != 0.0)
        return v7;
      goto LABEL_15;
    }
    v7 = 0;
    if (v5 != 1)
      return v7;
  }
  else if (*(_BYTE *)(a2 + 24))
  {
    return v7;
  }
  if (*(double *)(a1 + 16) != v4)
    return v7;
LABEL_15:
  if ((sub_24A77B32C() & 1) == 0)
    return 0;
  return sub_24A77B32C() & (v3 == v6);
}

unint64_t sub_24A645928()
{
  unint64_t result;

  result = qword_2544D5FA8;
  if (!qword_2544D5FA8)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2544D5FA8);
  }
  return result;
}

uint64_t sub_24A64596C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_24A64597C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947098;
  if (!qword_257947098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947090);
    v2[0] = sub_24A6459E8();
    v2[1] = sub_24A645A2C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947098);
  }
  return result;
}

unint64_t sub_24A6459E8()
{
  unint64_t result;

  result = qword_2579470A0;
  if (!qword_2579470A0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for MetricText, &type metadata for MetricText);
    atomic_store(result, (unint64_t *)&qword_2579470A0);
  }
  return result;
}

unint64_t sub_24A645A2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2579470A8;
  if (!qword_2579470A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579470B0);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_2579470A8);
  }
  return result;
}

BOOL _s9WorkoutUI22PacerViewConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16)
      && *(double *)(a1 + 24) == *(double *)(a2 + 24);
}

unint64_t sub_24A645AC0()
{
  unint64_t result;

  result = qword_2579470B8;
  if (!qword_2579470B8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for PillConfiguration, &type metadata for PillConfiguration);
    atomic_store(result, (unint64_t *)&qword_2579470B8);
  }
  return result;
}

unint64_t sub_24A645B08()
{
  unint64_t result;

  result = qword_2579470C0;
  if (!qword_2579470C0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for PacerViewConfiguration, &type metadata for PacerViewConfiguration);
    atomic_store(result, (unint64_t *)&qword_2579470C0);
  }
  return result;
}

uint64_t destroy for PillConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PillConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PillConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PillConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PillConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PillConfiguration()
{
  return &type metadata for PillConfiguration;
}

uint64_t getEnumTagSinglePayload for PacerViewConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 9;
  v5 = v3 - 9;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerViewConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerViewConfiguration()
{
  return &type metadata for PacerViewConfiguration;
}

unint64_t sub_24A645E08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579470C8;
  if (!qword_2579470C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579470D0);
    v2[0] = sub_24A64597C();
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579470C8);
  }
  return result;
}

uint64_t destroy for BarConfiguration()
{
  swift_release();
  return swift_release();
}

_QWORD *_s9WorkoutUI16BarConfigurationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BarConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for BarConfiguration(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for BarConfiguration()
{
  return &type metadata for BarConfiguration;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PillConfiguration.PillPosition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PillConfiguration.PillPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24A646034(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_24A646050(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PillConfiguration.PillPosition()
{
  return &type metadata for PillConfiguration.PillPosition;
}

unint64_t sub_24A64607C()
{
  unint64_t result;

  result = qword_2579470D8;
  if (!qword_2579470D8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77ECF0, &type metadata for PillConfiguration.PillPosition);
    atomic_store(result, (unint64_t *)&qword_2579470D8);
  }
  return result;
}

unint64_t sub_24A6460C4()
{
  unint64_t result;

  result = qword_2579470E0;
  if (!qword_2579470E0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77ED58, &type metadata for BarConfiguration);
    atomic_store(result, (unint64_t *)&qword_2579470E0);
  }
  return result;
}

uint64_t sub_24A646108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_24A77AD74();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  FIUICurrentLanguageRequiresTallScript();
  sub_24A77AE04();
  v7 = *MEMORY[0x24BDF1668];
  v8 = sub_24A77ADC8();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  sub_24A77AE1C();
  sub_24A64439C((uint64_t)v6);
  sub_24A77AD5C();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDF15D0], v0);
  v10 = sub_24A77AD80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v10;
}

void destroy for WorkoutNotificationMilestoneView(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for WorkoutNotificationMilestoneView(uint64_t a1, uint64_t a2)
{
  void *v3;
  __int128 v4;
  id v5;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  v5 = v3;
  return a1;
}

_QWORD *assignWithCopy for WorkoutNotificationMilestoneView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for WorkoutNotificationMilestoneView(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutNotificationMilestoneView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutNotificationMilestoneView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationMilestoneView()
{
  return &type metadata for WorkoutNotificationMilestoneView;
}

uint64_t sub_24A6464C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6464D0@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned __int8 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579470E8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579470F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579470F8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[3];
  v41 = v1[2];
  v42 = v12;
  v43 = *((_QWORD *)v1 + 8);
  v13 = v1[1];
  v39 = *v1;
  v40 = v13;
  v14 = sub_24A77AA08();
  v15 = *((_QWORD *)&v40 + 1);
  *(_QWORD *)v5 = v14;
  *((_QWORD *)v5 + 1) = v15;
  v5[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947100);
  sub_24A64673C((uint64_t)&v39, (uint64_t)&v5[*(int *)(v16 + 44)]);
  v17 = sub_24A77ACCC();
  sub_24A77A390();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_24A63CCC0((uint64_t)v5, (uint64_t)v8, &qword_2579470E8);
  v26 = &v8[*(int *)(v6 + 36)];
  *v26 = v17;
  *((_QWORD *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  sub_24A63CD04((uint64_t)v5, &qword_2579470E8);
  LOBYTE(v5) = sub_24A77ACD8();
  v27 = sub_24A77ACF0();
  v28 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v5)
    v28 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v27)
    v28 = sub_24A77ACE4();
  sub_24A77A390();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_24A63CCC0((uint64_t)v8, (uint64_t)v11, &qword_2579470F0);
  v37 = &v11[*(int *)(v9 + 36)];
  *v37 = v28;
  *((_QWORD *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  sub_24A63CD04((uint64_t)v8, &qword_2579470F0);
  return sub_24A646AA0((uint64_t)v11, a1);
}

uint64_t sub_24A64673C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t result;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  unint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947108);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v23 - v8;
  v24 = *(_QWORD *)a1;
  v10 = v24;
  v11 = v24 >> 62;
  if (!(v24 >> 62))
  {
    v12 = *(void **)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v12)
      goto LABEL_3;
LABEL_10:
    sub_24A646AE8((uint64_t)&v24);
    v14 = 0;
    if (!v11)
    {
LABEL_7:
      v16 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v16 < 2)
      {
LABEL_8:
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947110);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
LABEL_13:
        sub_24A63CCC0((uint64_t)v9, (uint64_t)v7, &qword_257947108);
        *(_QWORD *)a2 = v12;
        *(_QWORD *)(a2 + 8) = v14;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 1;
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947118);
        sub_24A63CCC0((uint64_t)v7, a2 + *(int *)(v22 + 64), &qword_257947108);
        sub_24A646B10(v12, v14);
        sub_24A63CD04((uint64_t)v9, &qword_257947108);
        sub_24A63CD04((uint64_t)v7, &qword_257947108);
        return sub_24A646B54((uint64_t)v12, v14);
      }
LABEL_12:
      v23[1] = 1;
      v23[2] = v16;
      swift_getKeyPath();
      v18 = swift_allocObject();
      v19 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v18 + 64) = v19;
      *(_QWORD *)(v18 + 80) = *(_QWORD *)(a1 + 64);
      v20 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v18 + 32) = v20;
      sub_24A646BBC(a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
      sub_24A646BEC();
      sub_24A646C9C();
      sub_24A77B5E4();
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 0, 1, v21);
      goto LABEL_13;
    }
LABEL_11:
    swift_bridgeObjectRetain();
    v16 = sub_24A77C028();
    sub_24A646AE8((uint64_t)&v24);
    if (v16 < 2)
      goto LABEL_8;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  result = sub_24A77C028();
  v12 = (void *)result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (void *)MEMORY[0x24BD19588](0, v10);
LABEL_6:
    sub_24A646AE8((uint64_t)&v24);
    v14 = *(void **)(a1 + 8);
    v15 = v14;
    if (!v11)
      goto LABEL_7;
    goto LABEL_11;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(void **)(v10 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_24A646A30@<X0>(id *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  result = (unint64_t)*a1;
  v6 = *a2;
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = MEMORY[0x24BD19588](result);
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = swift_retain();
LABEL_5:
    v8 = (void *)a2[1];
    *a3 = v7;
    a3[1] = (uint64_t)v8;
    a3[2] = 0;
    return (unint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A646AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579470F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A646AE8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id sub_24A646B10(id result, void *a2)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return a2;
  }
  return result;
}

uint64_t sub_24A646B54(uint64_t result, void *a2)
{
  if (result)
  {
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_24A646B88()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_24A646BB4@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_24A646A30(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_24A646BBC(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

unint64_t sub_24A646BEC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_257947128;
  if (!qword_257947128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947120);
    v2 = sub_24A646C58();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE1BD0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257947128);
  }
  return result;
}

unint64_t sub_24A646C58()
{
  unint64_t result;

  result = qword_257947130;
  if (!qword_257947130)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257947130);
  }
  return result;
}

unint64_t sub_24A646C9C()
{
  unint64_t result;

  result = qword_257947138;
  if (!qword_257947138)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A78859C, &type metadata for WorkoutNotificationUnitView);
    atomic_store(result, (unint64_t *)&qword_257947138);
  }
  return result;
}

uint64_t sub_24A646CE0()
{
  return sub_24A646D28(&qword_257947140, &qword_2579470F8, sub_24A646D0C);
}

uint64_t sub_24A646D0C()
{
  return sub_24A646D28(&qword_257947148, &qword_2579470F0, (uint64_t (*)(void))sub_24A646D94);
}

uint64_t sub_24A646D28(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A646D94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947150;
  if (!qword_257947150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579470E8);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_257947150);
  }
  return result;
}

uint64_t DependenciesWrapper.dependencies.getter()
{
  return swift_retain();
}

id DependenciesWrapper.__allocating_init(dependencies:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___SMDependencies_dependencies] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id DependenciesWrapper.init(dependencies:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___SMDependencies_dependencies] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DependenciesWrapper();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for DependenciesWrapper()
{
  return objc_opt_self();
}

id DependenciesWrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DependenciesWrapper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DependenciesWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DependenciesWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DependenciesWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DependenciesWrapper.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

id PortableEnum<>.bridgedRawValue()(unsigned __int8 a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a1 + 1);
  else
    return 0;
}

uint64_t DemoScenarioProfile.allDayValues.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DemoScenarioProfile.allWorkoutValues.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DemoScenarioProfile.workoutLoadValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DemoScenarioProfile.workouts.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall DemoScenarioProfile.init(allDayValues:allWorkoutValues:workoutLoadValues:workouts:)(WorkoutUI::DemoScenarioProfile *__return_ptr retstr, WorkoutUI::DemoTrainingLoadValues allDayValues, WorkoutUI::DemoTrainingLoadValues allWorkoutValues, Swift::OpaquePointer workoutLoadValues, Swift::OpaquePointer workouts)
{
  void *rawValue;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  WorkoutUI::DemoTrainingLoadValues v12;
  WorkoutUI::DemoTrainingLoadValues v13;
  void *v14;

  rawValue = allWorkoutValues.chronicValues._rawValue;
  v12 = *(WorkoutUI::DemoTrainingLoadValues *)allDayValues.chronicValues._rawValue;
  v13 = *(WorkoutUI::DemoTrainingLoadValues *)allDayValues.acuteValues._rawValue;
  sub_24A6470F8((uint64_t)allWorkoutValues.acuteValues._rawValue);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947188);
    v9 = sub_24A77C04C();
  }
  else
  {
    v9 = MEMORY[0x24BEE4B00];
  }
  v14 = (void *)v9;
  v10 = swift_bridgeObjectRetain();
  sub_24A64DD64(v10, 1, &v14);
  swift_bridgeObjectRelease();
  v11 = v14;
  retstr->allDayValues = v13;
  retstr->allWorkoutValues = v12;
  retstr->workoutLoadValues._rawValue = v11;
  retstr->workouts._rawValue = rawValue;
}

void sub_24A6470F8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v33 = MEMORY[0x24BEE4AF8];
    sub_24A671C60(0, v1, 0);
    v3 = sub_24A651570(v2);
    v5 = v4;
    v6 = v2 + 64;
    v27 = v1;
    v28 = (id)objc_opt_self();
    v7 = 0;
    v26 = v2 + 80;
    while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(_BYTE *)(v2 + 32))
    {
      v11 = (unint64_t)v3 >> 6;
      if ((*(_QWORD *)(v6 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) == 0)
        goto LABEL_24;
      if (*(_DWORD *)(v2 + 36) != v5)
        goto LABEL_25;
      v29 = v7;
      v12 = v2;
      v13 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v3);
      v32 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = objc_msgSend(v28, sel__stringFromWorkoutActivityType_, v13);
      if (!v14)
        goto LABEL_29;
      v15 = v14;
      v16 = sub_24A77B9B0();
      v30 = v17;
      v31 = v16;

      v19 = *(_QWORD *)(v33 + 16);
      v18 = *(_QWORD *)(v33 + 24);
      if (v19 >= v18 >> 1)
        sub_24A671C60(v18 > 1, v19 + 1, 1);
      *(_QWORD *)(v33 + 16) = v19 + 1;
      v20 = v33 + 32 * v19;
      *(_QWORD *)(v20 + 32) = v31;
      *(_QWORD *)(v20 + 40) = v30;
      *(_OWORD *)(v20 + 48) = v32;
      v8 = 1 << *(_BYTE *)(v12 + 32);
      if (v3 >= v8)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v11);
      if ((v21 & (1 << v3)) == 0)
        goto LABEL_27;
      v2 = v12;
      if (*(_DWORD *)(v12 + 36) != v5)
        goto LABEL_28;
      v22 = v21 & (-2 << (v3 & 0x3F));
      if (v22)
      {
        v8 = __clz(__rbit64(v22)) | v3 & 0xFFFFFFFFFFFFFFC0;
        v9 = v27;
        v10 = v29;
      }
      else
      {
        v23 = v11 + 1;
        v24 = (unint64_t)(v8 + 63) >> 6;
        v9 = v27;
        v10 = v29;
        if (v11 + 1 < v24)
        {
          v25 = *(_QWORD *)(v6 + 8 * v23);
          if (v25)
          {
LABEL_21:
            v8 = __clz(__rbit64(v25)) + (v23 << 6);
          }
          else
          {
            while (v24 - 2 != v11)
            {
              v25 = *(_QWORD *)(v26 + 8 * v11++);
              if (v25)
              {
                v23 = v11 + 1;
                goto LABEL_21;
              }
            }
          }
        }
      }
      v7 = v10 + 1;
      v3 = v8;
      if (v7 == v9)
        return;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
}

uint64_t sub_24A647370()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24A6473A8 + 4 * byte_24A77EEA0[*v0]))(0x61567961446C6C61, 0xEC0000007365756CLL);
}

unint64_t sub_24A6473A8()
{
  return 0xD000000000000010;
}

unint64_t sub_24A6473C4()
{
  return 0xD000000000000011;
}

uint64_t sub_24A6473E4()
{
  return 0x7374756F6B726F77;
}

uint64_t sub_24A6473FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24A6515F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A647420()
{
  return 0;
}

void sub_24A64742C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24A647438()
{
  sub_24A64E190();
  return sub_24A77C2D4();
}

uint64_t sub_24A647460()
{
  sub_24A64E190();
  return sub_24A77C2E0();
}

uint64_t DemoScenarioProfile.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947190);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v3[1];
  v9 = *((_QWORD *)v3 + 5);
  v13 = *((_QWORD *)v3 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64E190();
  sub_24A77C280();
  v15 = *v3;
  v16 = 0;
  sub_24A64E1D4();
  sub_24A77C148();
  if (!v2)
  {
    v10 = v13;
    v15 = v14;
    v16 = 1;
    sub_24A77C148();
    *(_QWORD *)&v15 = v10;
    v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579471A8);
    sub_24A64E2A0(&qword_2579471B0, (uint64_t (*)(void))sub_24A64E1D4, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_24A77C148();
    *(_QWORD *)&v15 = v9;
    v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579471B8);
    sub_24A64E314(&qword_2579471C0, (uint64_t (*)(void))sub_24A64E218, MEMORY[0x24BEE12A0]);
    sub_24A77C148();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DemoScenarioProfile.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579471D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64E190();
  sub_24A77C274();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = a2;
  v28 = 0;
  sub_24A64E25C();
  sub_24A77C0DC();
  v9 = v26;
  v10 = v27;
  v28 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A77C0DC();
  v22 = v10;
  v23 = v9;
  v11 = v26;
  v12 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579471A8);
  v28 = 2;
  sub_24A64E2A0(&qword_2579471E0, (uint64_t (*)(void))sub_24A64E25C, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A77C0DC();
  v24 = v12;
  v13 = v11;
  v14 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579471B8);
  v28 = 3;
  sub_24A64E314(&qword_2579471E8, (uint64_t (*)(void))sub_24A64E37C, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_24A77C0DC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v26;
  v17 = v23;
  swift_bridgeObjectRetain();
  v18 = v22;
  swift_bridgeObjectRetain();
  v19 = v13;
  swift_bridgeObjectRetain();
  v20 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v25;
  *v25 = v17;
  v21[1] = v18;
  v21[2] = v19;
  v21[3] = v20;
  v21[4] = v14;
  v21[5] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A647AD4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DemoScenarioProfile.init(from:)(a1, a2);
}

uint64_t sub_24A647AE8(_QWORD *a1)
{
  return DemoScenarioProfile.encode(to:)(a1);
}

uint64_t DemoTrainingLoadValues.acuteValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DemoTrainingLoadValues.chronicValues.getter()
{
  return swift_bridgeObjectRetain();
}

WorkoutUI::DemoTrainingLoadValues __swiftcall DemoTrainingLoadValues.init(acuteValues:chronicValues:)(Swift::OpaquePointer acuteValues, Swift::OpaquePointer chronicValues)
{
  Swift::OpaquePointer *v2;
  WorkoutUI::DemoTrainingLoadValues result;

  v2->_rawValue = acuteValues._rawValue;
  v2[1]._rawValue = chronicValues._rawValue;
  result.chronicValues = chronicValues;
  result.acuteValues = acuteValues;
  return result;
}

WorkoutUI::DemoTrainingLoadValues_optional __swiftcall DemoTrainingLoadValues.init(summaries:)(Swift::OpaquePointer summaries)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  void *v43;
  _QWORD *v44;
  WorkoutUI::DemoTrainingLoadValues_optional result;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *rawValue;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  void (*v59)(char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;

  v3 = v1;
  v4 = sub_24A779D48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A779D30();
  v54 = *(_QWORD **)(v7 - 8);
  v55 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_24A779DCC();
  v53 = *(_QWORD *)(v62 - 8);
  v10 = MEMORY[0x24BDAC7A8](v62);
  v56 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v46 - v12;
  v57 = sub_24A779D90();
  v14 = MEMORY[0x24BDAC7A8](v57);
  v50 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v46 - v17;
  v19 = *((_QWORD *)summaries._rawValue + 2);
  if (v19)
  {
    v46 = v5;
    v47 = v4;
    v48 = v3;
    rawValue = summaries._rawValue;
    v20 = (char *)summaries._rawValue
        + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v21 = *(_QWORD *)(v16 + 72);
    v52 = v16;
    v60 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v61 = v21;
    swift_bridgeObjectRetain();
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v23 = v20;
    v24 = v19;
    v25 = v57;
    do
    {
      v60(v18, v23, v25);
      sub_24A779D54();
      sub_24A779DB4();
      v59 = *(void (**)(char *, uint64_t))(v53 + 8);
      v59(v13, v62);
      v26 = (void *)sub_24A779D24();
      ((void (*)(char *, uint64_t))v54[1])(v9, v55);
      if (v26)
      {
        objc_msgSend(v26, sel__value);
        v28 = v27;

        v58 = *(void (**)(char *, uint64_t))(v52 + 8);
        v58(v18, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_24A64D484(0, v22[2] + 1, 1, v22);
        v30 = v22[2];
        v29 = v22[3];
        if (v30 >= v29 >> 1)
          v22 = sub_24A64D484((_QWORD *)(v29 > 1), v30 + 1, 1, v22);
        v22[2] = v30 + 1;
        v22[v30 + 4] = v28;
        v25 = v57;
      }
      else
      {
        v58 = *(void (**)(char *, uint64_t))(v52 + 8);
        v58(v18, v25);
      }
      v23 += v61;
      --v24;
    }
    while (v24);
    v54 = v22;
    swift_bridgeObjectRelease();
    LODWORD(v55) = *MEMORY[0x24BE400B0];
    swift_bridgeObjectRetain();
    v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v33 = v46;
    v32 = v47;
    v35 = v50;
    v34 = (uint64_t *)v51;
    v37 = v56;
    v36 = v57;
    do
    {
      v60(v35, v20, v36);
      sub_24A779D54();
      sub_24A779DC0();
      v59(v37, v62);
      v38 = (*(uint64_t (**)(uint64_t *, uint64_t))(v33 + 88))(v34, v32);
      if (v38 == (_DWORD)v55)
      {
        (*(void (**)(uint64_t *, uint64_t))(v33 + 96))(v34, v32);
        v39 = *v34;
        v58(v35, v36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_24A64D484(0, v31[2] + 1, 1, v31);
        v41 = v31[2];
        v40 = v31[3];
        if (v41 >= v40 >> 1)
          v31 = sub_24A64D484((_QWORD *)(v40 > 1), v41 + 1, 1, v31);
        v31[2] = v41 + 1;
        v31[v41 + 4] = v39;
        v35 = v50;
        v34 = (uint64_t *)v51;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v34, v32);
        v58(v35, v36);
      }
      v20 += v61;
      --v19;
    }
    while (v19);
    v42 = (void *)swift_bridgeObjectRelease_n();
    v3 = v48;
    v44 = v54;
  }
  else
  {
    v42 = (void *)swift_bridgeObjectRelease();
    v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v44 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if (v44[2] == 29 && v31[2] == 29)
  {
    *v3 = v44;
    v3[1] = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    v42 = (void *)swift_bridgeObjectRelease();
    *v3 = 0;
    v3[1] = 0;
  }
  result.value.chronicValues._rawValue = v43;
  result.value.acuteValues._rawValue = v42;
  return result;
}

uint64_t sub_24A647FC4()
{
  _BYTE *v0;

  if (*v0)
    return 0x5663696E6F726863;
  else
    return 0x6C61566574756361;
}

uint64_t sub_24A648014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24A651994(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A648038(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24A648044()
{
  sub_24A64E3C0();
  return sub_24A77C2D4();
}

uint64_t sub_24A64806C()
{
  sub_24A64E3C0();
  return sub_24A77C2E0();
}

uint64_t DemoTrainingLoadValues.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579471F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64E3C0();
  sub_24A77C280();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947208);
  sub_24A64E404(&qword_257947210, MEMORY[0x24BEE13D8], MEMORY[0x24BEE12A0]);
  sub_24A77C148();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_24A77C148();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DemoTrainingLoadValues.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947218);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64E3C0();
  sub_24A77C274();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947208);
  v14 = 0;
  sub_24A64E404(&qword_257947220, MEMORY[0x24BEE1400], MEMORY[0x24BEE12D0]);
  sub_24A77C0DC();
  v9 = v15;
  v14 = 1;
  swift_bridgeObjectRetain();
  sub_24A77C0DC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v15;
  v11 = v13;
  *v13 = v9;
  v11[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6483E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DemoTrainingLoadValues.init(from:)(a1, a2);
}

uint64_t sub_24A6483F4(_QWORD *a1)
{
  return DemoTrainingLoadValues.encode(to:)(a1);
}

double DemoQuantity.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t DemoQuantity.unit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

WorkoutUI::DemoQuantity __swiftcall DemoQuantity.init(hkQuantity:)(HKQuantity hkQuantity)
{
  _QWORD *v1;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  double v14;
  WorkoutUI::DemoQuantity result;

  v3 = v1;
  v4 = -[objc_class _unit](hkQuantity.super.isa, sel__unit);
  -[objc_class doubleValueForUnit:](hkQuantity.super.isa, sel_doubleValueForUnit_, v4);
  v6 = v5;

  v7 = -[objc_class _unit](hkQuantity.super.isa, sel__unit);
  v8 = objc_msgSend(v7, sel_unitString);

  v9 = sub_24A77B9B0();
  v11 = v10;

  *v3 = v6;
  v3[1] = v9;
  v3[2] = v11;
  result.value = v14;
  result.unit._object = v13;
  result.unit._countAndFlagsBits = v12;
  return result;
}

id DemoQuantity.hkQuantity.getter()
{
  double *v0;
  double v1;
  void *v2;
  id v3;
  id v4;

  v1 = *v0;
  swift_bridgeObjectRetain();
  v2 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v2);

  v4 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v3, v1);
  return v4;
}

BOOL sub_24A6485A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s9WorkoutUI06GuidedA10PickerItemV8TileTypeO9hashValueSivg_0()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A648600()
{
  return sub_24A77C238();
}

uint64_t sub_24A648628()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A648668()
{
  _BYTE *v0;

  if (*v0)
    return 1953066613;
  else
    return 0x65756C6176;
}

uint64_t sub_24A648698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24A651AC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A6486BC()
{
  sub_24A64E464();
  return sub_24A77C2D4();
}

uint64_t sub_24A6486E4()
{
  sub_24A64E464();
  return sub_24A77C2E0();
}

uint64_t DemoQuantity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947228);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64E464();
  sub_24A77C280();
  v11 = 0;
  sub_24A77C13C();
  if (!v2)
  {
    v10 = 1;
    sub_24A77C130();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DemoQuantity.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947238);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64E464();
  sub_24A77C274();
  if (!v2)
  {
    v15[15] = 0;
    sub_24A77C0D0();
    v10 = v9;
    v15[14] = 1;
    v12 = sub_24A77C0C4();
    v14 = v13;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24A648998@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DemoQuantity.init(from:)(a1, a2);
}

uint64_t sub_24A6489AC(_QWORD *a1)
{
  return DemoQuantity.encode(to:)(a1);
}

uint64_t DemoGoal.goalType.getter()
{
  uint64_t v0;

  return qword_24A77FA88[*(char *)(v0 + 24)];
}

void DemoGoal.hkQuantity.getter()
{
  __asm { BR              X9 }
}

id sub_24A648A18()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  swift_bridgeObjectRetain();
  v4 = (void *)sub_24A77B980();
  v5 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v4);

  v6 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v5, *(double *)&v0);
  sub_24A64E4A8(v0, v3, v1, v2);
  return v6;
}

uint64_t sub_24A648B50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24A648B78 + 4 * byte_24A77EEA4[*v0]))(1852141679, 0xE400000000000000);
}

uint64_t sub_24A648B78()
{
  return 0x65636E6174736964;
}

uint64_t sub_24A648B90()
{
  return 1701669236;
}

uint64_t sub_24A648B9C()
{
  return 0x796772656E65;
}

uint64_t sub_24A648BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24A651B98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A648BD4()
{
  sub_24A64E4C0();
  return sub_24A77C2D4();
}

uint64_t sub_24A648BFC()
{
  sub_24A64E4C0();
  return sub_24A77C2E0();
}

uint64_t sub_24A648C24()
{
  return 1;
}

uint64_t sub_24A648C34()
{
  return 12383;
}

void sub_24A648C44(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24A648C50()
{
  sub_24A64E5D0();
  return sub_24A77C2D4();
}

uint64_t sub_24A648C78()
{
  sub_24A64E5D0();
  return sub_24A77C2E0();
}

uint64_t sub_24A648CA0()
{
  sub_24A64E504();
  return sub_24A77C2D4();
}

uint64_t sub_24A648CC8()
{
  sub_24A64E504();
  return sub_24A77C2E0();
}

uint64_t sub_24A648CF0()
{
  return 0;
}

uint64_t sub_24A648CFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24A648D28()
{
  sub_24A64E614();
  return sub_24A77C2D4();
}

uint64_t sub_24A648D50()
{
  sub_24A64E614();
  return sub_24A77C2E0();
}

uint64_t sub_24A648D78()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A648DB8()
{
  return sub_24A77C238();
}

uint64_t sub_24A648DDC()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A648E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_24A77C184();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24A648E94()
{
  sub_24A64E58C();
  return sub_24A77C2D4();
}

uint64_t sub_24A648EBC()
{
  sub_24A64E58C();
  return sub_24A77C2E0();
}

void DemoGoal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[18];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947240);
  v13[8] = *(_QWORD *)(v3 - 8);
  v13[9] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v13[7] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947248);
  v13[5] = *(_QWORD *)(v5 - 8);
  v13[6] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v13[4] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947250);
  v13[2] = *(_QWORD *)(v7 - 8);
  v13[3] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v13[1] = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947258);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947260);
  v13[13] = *(_QWORD *)(v10 - 8);
  v13[14] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v11 = *(_QWORD *)(v1 + 8);
  v13[10] = *(_QWORD *)v1;
  v13[11] = v11;
  v13[12] = *(_QWORD *)(v1 + 16);
  v12 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64E4C0();
  sub_24A77C280();
  __asm { BR              X9 }
}

uint64_t sub_24A6490AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v1 - 104) = 1;
  sub_24A64E5D0();
  v2 = *(_QWORD *)(v1 - 216);
  v3 = *(_QWORD *)(v1 - 112);
  sub_24A77C0F4();
  v4 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 144);
  *(_QWORD *)(v1 - 96) = v4;
  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v1 - 128);
  sub_24A64E548();
  v5 = *(_QWORD *)(v1 - 200);
  sub_24A77C148();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 208) + 8))(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 120) + 8))(v0, v3);
}

uint64_t DemoGoal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v30 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947298);
  v25 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v29 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472A0);
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472A8);
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472B0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472B8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24A64E4C0();
  v14 = v32;
  sub_24A77C274();
  if (!v14)
  {
    v20[0] = v8;
    v20[1] = v7;
    v20[2] = 0;
    v32 = v10;
    v15 = sub_24A77C0E8();
    if (*(_QWORD *)(v15 + 16) == 1)
      __asm { BR              X10 }
    v16 = sub_24A77BF98();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579472C0);
    *v18 = &type metadata for DemoGoal;
    sub_24A77C088();
    sub_24A77BF8C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_24A64990C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DemoGoal.init(from:)(a1, a2);
}

void sub_24A649920(_QWORD *a1)
{
  DemoGoal.encode(to:)(a1);
}

uint64_t DemoWorkout.activityType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double DemoWorkout.startDateFromNow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double DemoWorkout.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t DemoWorkout.isIndoor.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t DemoWorkout.isPoolSwim.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t DemoWorkout.effort.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t DemoWorkout.totalActiveEnergyBurned.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_QWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DemoWorkout.totalBasalEnergyBurned.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 96);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 80);
  *(_QWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DemoWorkout.totalDistance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DemoWorkout.averageHeartRate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t DemoWorkout.minHeartRate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t DemoWorkout.maxHeartRate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t DemoWorkout.goal.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 176);
  v3 = *(_QWORD *)(v1 + 184);
  v4 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 200);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_24A64E69C(v2, v3, v4, v5);
}

uint64_t DemoWorkout.init(activityType:startDateFromNow:duration:isIndoor:isPoolSwim:effort:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:averageHeartRate:minHeartRate:maxHeartRate:goal:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, char *a12, char a13, char *a14, unsigned __int8 a15, uint64_t a16, unsigned __int8 a17, uint64_t a18)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void *v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  void *v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  char *v82;
  char v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t result;
  char v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  int v96;
  int v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  char v117;
  char v118;

  v113 = a8;
  v114 = a7;
  v104 = a5;
  v105 = a2;
  v106 = a3;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D0);
  MEMORY[0x24BDAC7A8](v24);
  v103 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D8);
  v111 = *(_QWORD *)(v26 - 8);
  v112 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v94 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v92 - v32;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v98 = (char *)&v92 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v92 - v38;
  v40 = *(_QWORD *)(a18 + 8);
  v107 = *(_QWORD *)a18;
  v108 = v40;
  v109 = *(_QWORD *)(a18 + 16);
  v110 = *(unsigned __int8 *)(a18 + 24);
  v41 = objc_msgSend((id)objc_opt_self(), sel__stringFromWorkoutActivityType_, a1);
  if (v41)
  {
    v42 = v41;
    v100 = sub_24A77B9B0();
    v99 = v43;

    sub_24A63CCC0(a6, (uint64_t)v33, &qword_2579472E0);
    v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
    v45 = v44(v33, 1, v34);
    v102 = a4;
    v101 = a6;
    if (v45 == 1)
    {
      sub_24A63CD04((uint64_t)v33, &qword_2579472E0);
      v46 = 0;
      v47 = 0;
      v48 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v39, v33, v34);
      v49 = (void *)sub_24A77838C();
      v50 = objc_msgSend(v49, sel__unit);
      objc_msgSend(v49, sel_doubleValueForUnit_, v50);
      v48 = v51;

      v52 = objc_msgSend(v49, sel__unit);
      v53 = objc_msgSend(v52, sel_unitString);

      v46 = sub_24A77B9B0();
      v47 = v54;

      (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v34);
    }
    sub_24A63CCC0(v114, (uint64_t)v31, &qword_2579472E0);
    if (v44(v31, 1, v34) == 1)
    {
      sub_24A63CD04((uint64_t)v31, &qword_2579472E0);
      v55 = 0;
      v95 = 0;
      v56 = 0;
    }
    else
    {
      v57 = v98;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v98, v31, v34);
      v58 = (void *)sub_24A77838C();
      v59 = objc_msgSend(v58, sel__unit);
      objc_msgSend(v58, sel_doubleValueForUnit_, v59);
      v56 = v60;

      v61 = objc_msgSend(v58, sel__unit);
      v62 = objc_msgSend(v61, sel_unitString);

      v55 = sub_24A77B9B0();
      v95 = v63;

      (*(void (**)(char *, uint64_t))(v35 + 8))(v57, v34);
    }
    v64 = v112;
    v65 = v113;
    v66 = v111;
    v67 = (uint64_t)v103;
    v97 = a17;
    v68 = a16;
    v96 = a15;
    v103 = a14;
    v98 = a12;
    sub_24A63CCC0(v113, v67, &qword_2579472D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v67, 1, v64) == 1)
    {
      sub_24A63CD04(v65, &qword_2579472D0);
      sub_24A63CD04(v114, &qword_2579472E0);
      sub_24A63CD04(v101, &qword_2579472E0);
      sub_24A63CD04(v67, &qword_2579472D0);
      v69 = 0;
      v70 = 0;
      v71 = 0;
    }
    else
    {
      v72 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 32);
      v93 = v47;
      v73 = v94;
      v72(v94, v67, v64);
      v74 = (void *)sub_24A778398();
      v75 = objc_msgSend(v74, sel__unit);
      objc_msgSend(v74, sel_doubleValueForUnit_, v75);
      v71 = v76;

      v77 = objc_msgSend(v74, sel__unit);
      v78 = v55;
      v79 = v46;
      v80 = objc_msgSend(v77, sel_unitString);

      v69 = sub_24A77B9B0();
      v70 = v81;

      v46 = v79;
      v55 = v78;
      v68 = a16;

      sub_24A63CD04(v113, &qword_2579472D0);
      sub_24A63CD04(v114, &qword_2579472E0);
      sub_24A63CD04(v101, &qword_2579472E0);
      v82 = v73;
      v47 = v93;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v82, v112);
    }
    v84 = v105;
    v83 = v106;
    v85 = v110;
    v87 = v108;
    v86 = v109;
    v88 = v107;
    v89 = v99;
    result = v95;
    v91 = v104 & 1;
    v118 = v104 & 1;
    v117 = a13 & 1;
    v116 = v96 & 1;
    v115 = v97 & 1;
    *(_QWORD *)a9 = v100;
    *(_QWORD *)(a9 + 8) = v89;
    *(double *)(a9 + 16) = a10;
    *(double *)(a9 + 24) = a11;
    *(_BYTE *)(a9 + 32) = v84;
    *(_BYTE *)(a9 + 33) = v83;
    *(_QWORD *)(a9 + 40) = v102;
    *(_BYTE *)(a9 + 48) = v91;
    *(_QWORD *)(a9 + 56) = v48;
    *(_QWORD *)(a9 + 64) = v46;
    *(_QWORD *)(a9 + 72) = v47;
    *(_QWORD *)(a9 + 80) = v56;
    *(_QWORD *)(a9 + 88) = v55;
    *(_QWORD *)(a9 + 96) = result;
    *(_QWORD *)(a9 + 104) = v71;
    *(_QWORD *)(a9 + 112) = v69;
    *(_QWORD *)(a9 + 120) = v70;
    *(_QWORD *)(a9 + 128) = v98;
    *(_BYTE *)(a9 + 136) = v117;
    *(_QWORD *)(a9 + 144) = v103;
    *(_BYTE *)(a9 + 152) = v116;
    *(_QWORD *)(a9 + 160) = v68;
    *(_BYTE *)(a9 + 168) = v115;
    *(_QWORD *)(a9 + 176) = v88;
    *(_QWORD *)(a9 + 184) = v87;
    *(_QWORD *)(a9 + 192) = v86;
    *(_BYTE *)(a9 + 200) = v85;
  }
  else
  {
    result = sub_24A64E4A8(v107, v108, v109, v110);
    __break(1u);
  }
  return result;
}

__n128 DemoWorkout.init(workout:effort:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char **v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  char **v26;
  char **v27;
  id v28;
  char **v29;
  int v30;
  id v31;
  char **v32;
  id v33;
  id v34;
  char **v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char **v46;
  unint64_t v47;
  char v48;
  int v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  unsigned __int8 v81;
  unsigned __int8 v82;
  char v83;
  id v84;
  void *v85;
  id v86;
  char *v87;
  char *v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __n128 result;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BOOL4 v104;
  _BOOL4 v105;
  char **v106;
  id v107;
  uint64_t v108;
  void *v109;
  char **v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  _QWORD v117[3];
  char v118;
  __int128 v119;
  __n128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  _BYTE v130[25];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D0);
  MEMORY[0x24BDAC7A8](v6);
  v115 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v114 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v113 = (uint64_t)&v103 - v11;
  v12 = sub_24A778818();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &selRef_contentFrameForPage_;
  if (!a2)
  {
    v108 = 0;
    goto LABEL_7;
  }
  v17 = (void *)objc_opt_self();
  v18 = a2;
  v19 = objc_msgSend(v17, sel_appleEffortScoreUnit);
  objc_msgSend(v18, sel_doubleValueForUnit_, v19);
  v21 = v20;

  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_63;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    type metadata accessor for _HKWorkoutGoalType(0);
    *(_QWORD *)&v119 = v16;
    sub_24A77C19C();
    __break(1u);
    JUMPOUT(0x24A64AD68);
  }
  v108 = (uint64_t)v21;
LABEL_7:
  sub_24A64F254(0, &qword_2579472F0);
  v22 = (void *)MEMORY[0x24BD19294]((id)*MEMORY[0x24BDD35B8]);
  v116 = objc_msgSend(a1, sel_statisticsForType_, v22);

  v16 = (char **)objc_msgSend(a1, sel__goalType);
  v109 = a2;
  v112 = 3;
  v111 = (uint64_t)v16;
  v110 = v16;
  switch((unint64_t)v16)
  {
    case 0uLL:
      goto LABEL_16;
    case 1uLL:
      v23 = objc_msgSend(a1, sel__goal);
      if (!v23)
        goto LABEL_65;
      v24 = v23;
      v25 = objc_msgSend(v23, sel__unit);
      objc_msgSend(v24, sel_doubleValueForUnit_, v25);
      v27 = v26;
      v112 = 0;
      goto LABEL_15;
    case 2uLL:
      v28 = objc_msgSend(a1, sel__goal);
      if (!v28)
        goto LABEL_66;
      v24 = v28;
      v25 = objc_msgSend(v28, sel__unit);
      objc_msgSend(v24, sel_doubleValueForUnit_, v25);
      v27 = v29;
      v30 = 1;
      goto LABEL_14;
    case 3uLL:
      v31 = objc_msgSend(a1, sel__goal);
      if (!v31)
        goto LABEL_67;
      v24 = v31;
      v25 = objc_msgSend(v31, sel__unit);
      objc_msgSend(v24, sel_doubleValueForUnit_, v25);
      v27 = v32;
      v30 = 2;
LABEL_14:
      v112 = v30;
LABEL_15:

      v33 = objc_msgSend(v24, sel__unit);
      v34 = objc_msgSend(v33, sel_unitString);

      v111 = sub_24A77B9B0();
      v110 = v35;

      v16 = v27;
LABEL_16:
      v107 = objc_msgSend(a1, sel_workoutActivityType);
      v36 = objc_msgSend(a1, sel_startDate);
      sub_24A7787E8();

      sub_24A7787C4();
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      objc_msgSend(a1, sel_duration);
      v40 = v39;
      v41 = objc_msgSend(a1, sel_metadata);
      v106 = v16;
      if (!v41)
      {
        v120 = 0u;
        v119 = 0u;
        v46 = &selRef_contentFrameForPage_;
LABEL_26:
        sub_24A63CD04((uint64_t)&v119, &qword_257946D48);
        v49 = 2;
        goto LABEL_27;
      }
      v42 = v41;
      v43 = sub_24A77B8FC();

      v44 = sub_24A77B9B0();
      v46 = &selRef_contentFrameForPage_;
      if (*(_QWORD *)(v43 + 16) && (v47 = sub_24A64E74C(v44, v45), (v48 & 1) != 0))
      {
        sub_24A64E7B0(*(_QWORD *)(v43 + 56) + 32 * v47, (uint64_t)&v119);
      }
      else
      {
        v120 = 0u;
        v119 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v120.n128_u64[1])
        goto LABEL_26;
      if (swift_dynamicCast())
        v49 = LOBYTE(v117[0]);
      else
        v49 = 2;
LABEL_27:
      v50 = objc_msgSend(a1, sel_metadata);
      if (!v50)
      {
        v120 = 0u;
        v119 = 0u;
        v55 = v113;
LABEL_36:
        sub_24A63CD04((uint64_t)&v119, &qword_257946D48);
        goto LABEL_37;
      }
      v51 = v50;
      v52 = sub_24A77B8FC();

      v53 = sub_24A77B9B0();
      v55 = v113;
      if (*(_QWORD *)(v52 + 16) && (v56 = sub_24A64E74C(v53, v54), (v57 & 1) != 0))
      {
        sub_24A64E7B0(*(_QWORD *)(v52 + 56) + 32 * v56, (uint64_t)&v119);
      }
      else
      {
        v120 = 0u;
        v119 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v120.n128_u64[1])
        goto LABEL_36;
      type metadata accessor for HKWorkoutSwimmingLocationType(0);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_37:
        v105 = 0;
        goto LABEL_38;
      }
      v105 = v117[0] == 1;
LABEL_38:
      v58 = (void *)MEMORY[0x24BD19294]((id)*MEMORY[0x24BDD3340]);
      v59 = objc_msgSend(a1, v46[216], v58);

      if (v59 && (v60 = objc_msgSend(v59, sel_sumQuantity), v59, v60))
      {
        sub_24A77BC38();

        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v55, 0, 1, v101);
      }
      else
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v55, 1, 1, v61);
      }
      v62 = (void *)MEMORY[0x24BD19294]((id)*MEMORY[0x24BDD3388]);
      v63 = objc_msgSend(a1, v46[216], v62);

      if (v63 && (v64 = objc_msgSend(v63, sel_sumQuantity), v63, v64))
      {
        v65 = v114;
        sub_24A77BC38();
        v66 = v115;

        v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v65, 0, 1, v102);
      }
      else
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v114, 1, 1, v67);
        v66 = v115;
      }
      v68 = objc_msgSend(a1, sel_totalDistance);
      if (v68)
      {
        v69 = v68;
        sub_24A77BC44();

        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v66, 0, 1, v71);
      }
      else
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v66, 1, 1, v70);
      }
      v72 = v116;
      if (v116)
      {
        v73 = objc_msgSend(v116, sel_averageQuantity);
        v104 = v73 == 0;
        if (v73)
        {
          v74 = v73;
          v75 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
          objc_msgSend(v74, sel_doubleValueForUnit_, v75);
          v77 = v76;

          v72 = v116;
          v78 = v77;
        }
        else
        {
          v78 = 0;
        }
        v84 = objc_msgSend(v72, sel_minimumQuantity);
        v82 = v84 == 0;
        if (v84)
        {
          v85 = v84;
          v86 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
          objc_msgSend(v85, sel_doubleValueForUnit_, v86);
          v88 = v87;

          v72 = v116;
          v80 = v88;
        }
        else
        {
          v80 = 0;
        }
        v89 = objc_msgSend(v72, sel_maximumQuantity);
        if (v89)
        {
          v90 = v89;
          v91 = objc_msgSend((id)objc_opt_self(), (SEL)&stru_251C030A8.imp + 1);
          objc_msgSend(v90, sel_doubleValueForUnit_, v91);
          v93 = v92;

          v72 = v116;
          v81 = 0;
          v79 = v93;
        }
        else
        {
          v79 = 0;
          v81 = 1;
        }
        v83 = v104;
      }
      else
      {
        v79 = 0;
        v80 = 0;
        v78 = 0;
        v81 = 1;
        v82 = 1;
        v83 = 1;
      }
      v94 = v109;
      v117[0] = v106;
      v117[1] = v111;
      v117[2] = v110;
      v118 = v112;
      DemoWorkout.init(activityType:startDateFromNow:duration:isIndoor:isPoolSwim:effort:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:averageHeartRate:minHeartRate:maxHeartRate:goal:)((uint64_t)v107, v49, v105, v108, v109 == 0, v113, v114, v115, (uint64_t)&v119, v38, v40, v78, v83, v80, v82, v79, v81, (uint64_t)v117);

      v95 = *(_OWORD *)v130;
      *(_OWORD *)(a3 + 160) = v129;
      *(_OWORD *)(a3 + 176) = v95;
      *(_OWORD *)(a3 + 185) = *(_OWORD *)&v130[9];
      v96 = v126;
      *(_OWORD *)(a3 + 96) = v125;
      *(_OWORD *)(a3 + 112) = v96;
      v97 = v128;
      *(_OWORD *)(a3 + 128) = v127;
      *(_OWORD *)(a3 + 144) = v97;
      v98 = v122;
      *(_OWORD *)(a3 + 32) = v121;
      *(_OWORD *)(a3 + 48) = v98;
      v99 = v124;
      *(_OWORD *)(a3 + 64) = v123;
      *(_OWORD *)(a3 + 80) = v99;
      result = v120;
      *(_OWORD *)a3 = v119;
      *(__n128 *)(a3 + 16) = result;
      return result;
    default:
      goto LABEL_68;
  }
}

uint64_t DemoWorkout.copyWithEffort(_:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  int v46;
  _QWORD v48[3];
  char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  int v57;
  int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  int v63;
  uint64_t v64;
  int v65;
  char *v66;
  _QWORD v67[3];
  char v68;

  v58 = a2;
  v60 = a3;
  v61 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v48 - v9;
  v11 = *(double *)(v3 + 16);
  v12 = *(double *)(v3 + 24);
  v57 = *(unsigned __int8 *)(v3 + 32);
  v13 = *(double *)(v3 + 56);
  v14 = *(_QWORD *)(v3 + 72);
  v15 = *(double *)(v3 + 80);
  v17 = *(_QWORD *)(v3 + 88);
  v16 = *(_QWORD *)(v3 + 96);
  v18 = *(double *)(v3 + 104);
  v48[2] = *(_QWORD *)(v3 + 112);
  v50 = *(_QWORD *)(v3 + 120);
  v49 = *(char **)(v3 + 128);
  v55 = *(unsigned __int8 *)(v3 + 136);
  v66 = *(char **)(v3 + 144);
  v65 = *(unsigned __int8 *)(v3 + 152);
  v64 = *(_QWORD *)(v3 + 160);
  v63 = *(unsigned __int8 *)(v3 + 168);
  v54 = *(_QWORD *)(v3 + 176);
  v53 = *(_QWORD *)(v3 + 184);
  v52 = *(_QWORD *)(v3 + 192);
  v51 = *(unsigned __int8 *)(v3 + 200);
  v19 = (void *)objc_opt_self();
  v20 = (void *)sub_24A77B980();
  v62 = objc_msgSend(v19, sel__workoutActivityTypeFromString_, v20);

  v48[1] = v17;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v21 = (void *)sub_24A77B980();
    v22 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v21);

    v23 = objc_msgSend((id)objc_opt_self(), (SEL)&selRef_setCornerRadius_ + 2, v22, v13);
    swift_bridgeObjectRelease();

    sub_24A77BC38();
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v10, 0, 1, v32);
    v25 = v49;
    v26 = (uint64_t)v56;
    v27 = v66;
    if (v16)
    {
LABEL_7:
      swift_bridgeObjectRetain();
      v33 = (void *)sub_24A77B980();
      v34 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v33);

      v35 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v34, v15);
      swift_bridgeObjectRelease();

      sub_24A77BC38();
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v26, 0, 1, v36);
      v27 = v66;
      if (v50)
        goto LABEL_8;
      goto LABEL_5;
    }
  }
  else
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
    v25 = v49;
    v26 = (uint64_t)v56;
    v27 = v66;
    if (v16)
      goto LABEL_7;
  }
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v26, 1, 1, v28);
  if (v50)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    v37 = (void *)sub_24A77B980();
    v38 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v37);

    v39 = objc_msgSend((id)objc_opt_self(), (SEL)&selRef_setCornerRadius_ + 2, v38, v18);
    swift_bridgeObjectRelease();

    v31 = (uint64_t)v59;
    sub_24A77BC44();

    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D8);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
    v40 = (char *)v31;
    v41 = 0;
    goto LABEL_9;
  }
LABEL_5:
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579472D8);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31 = (uint64_t)v59;
  v40 = v59;
  v41 = 1;
LABEL_9:
  v30(v40, v41, 1, v29);
  v43 = v60;
  v42 = v61;
  v44 = v57;
  v45 = v55;
  v46 = v58 & 1;
  v67[0] = v54;
  v67[1] = v53;
  v67[2] = v52;
  v68 = v51;
  sub_24A64E69C(v54, v53, v52, v51);
  return DemoWorkout.init(activityType:startDateFromNow:duration:isIndoor:isPoolSwim:effort:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:averageHeartRate:minHeartRate:maxHeartRate:goal:)((uint64_t)v62, v44, v44, v42, v46, (uint64_t)v10, v26, v31, v43, v11, v12, v25, v45, v27, v65, v64, v63, (uint64_t)v67);
}

unint64_t static DemoWorkout.metadataKeyOverrideEffort.getter()
{
  return 0xD00000000000001FLL;
}

void DemoWorkout.workoutRepresentation(startingDate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  char v15;
  double v16;
  char v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  char **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char v56;
  id v57;
  id v58;
  char v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  char v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  id v86;
  uint64_t v87;
  _QWORD v88[2];
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  id v105;
  char *v106;
  char *v107;
  unint64_t v108;
  _OWORD v109[2];
  __int128 v110;
  uint64_t v111;
  uint64_t v112;

  v99 = a1;
  v2 = sub_24A778818();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v107 = (char *)v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v106 = (char *)v88 - v6;
  v7 = *(double *)(v1 + 24);
  v96 = *(unsigned __int8 *)(v1 + 32);
  LODWORD(v97) = *(unsigned __int8 *)(v1 + 33);
  v93 = *(_QWORD *)(v1 + 40);
  LODWORD(v98) = *(unsigned __int8 *)(v1 + 48);
  v8 = *(double *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 72);
  v11 = *(double *)(v1 + 80);
  v12 = *(_QWORD *)(v1 + 88);
  v100 = *(_QWORD *)(v1 + 96);
  v13 = *(double *)(v1 + 104);
  v94 = *(_QWORD *)(v1 + 112);
  v101 = *(_QWORD *)(v1 + 120);
  v14 = *(double *)(v1 + 128);
  v15 = *(_BYTE *)(v1 + 136);
  v16 = *(double *)(v1 + 144);
  v17 = *(_BYTE *)(v1 + 152);
  v18 = *(double *)(v1 + 160);
  v95 = *(unsigned __int8 *)(v1 + 168);
  v19 = *(void **)(v1 + 176);
  v104 = *(_QWORD *)(v1 + 184);
  v105 = v19;
  v103 = *(_QWORD *)(v1 + 192);
  v102 = *(char *)(v1 + 200);
  v20 = (void *)objc_opt_self();
  v21 = (void *)sub_24A77B980();
  v22 = objc_msgSend(v20, sel__workoutActivityTypeFromString_, v21);

  if (v22)
  {
    v88[0] = v9;
    v88[1] = v12;
    v89 = v3;
    v23 = sub_24A64BEE4(MEMORY[0x24BEE4AF8]);
    v90 = v2;
    v92 = v20;
    v91 = v22;
    if ((v15 & 1) == 0)
    {
      v24 = sub_24A77B9B0();
      v26 = v25;
      v27 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
      v28 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v27, v14);

      v112 = sub_24A64F254(0, (unint64_t *)&qword_257947308);
      *(_QWORD *)&v110 = v28;
      sub_24A64E7EC(&v110, v109);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v108 = v23;
      sub_24A64F124(v109, v24, v26, isUniquelyReferenced_nonNull_native);
      v23 = v108;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v30 = v10;
    if ((v17 & 1) != 0)
    {
      v31 = &selRef_contentFrameForPage_;
    }
    else
    {
      v32 = sub_24A77B9B0();
      v34 = v33;
      v35 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
      v31 = &selRef_contentFrameForPage_;
      v36 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v35, v16);

      v112 = sub_24A64F254(0, (unint64_t *)&qword_257947308);
      *(_QWORD *)&v110 = v36;
      sub_24A64E7EC(&v110, v109);
      v37 = swift_isUniquelyReferenced_nonNull_native();
      v108 = v23;
      sub_24A64F124(v109, v32, v34, v37);
      v23 = v108;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((v95 & 1) == 0)
    {
      v39 = sub_24A77B9B0();
      v41 = v40;
      v42 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
      v43 = objc_msgSend((id)objc_opt_self(), v31[50], v42, v18);

      v112 = sub_24A64F254(0, (unint64_t *)&qword_257947308);
      *(_QWORD *)&v110 = v43;
      sub_24A64E7EC(&v110, v109);
      v44 = swift_isUniquelyReferenced_nonNull_native();
      v108 = v23;
      sub_24A64F124(v109, v39, v41, v44);
      v23 = v108;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v38 = v100;
    if (v96 != 2)
    {
      v45 = v96 & 1;
      v46 = sub_24A77B9B0();
      v48 = v47;
      v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v45);
      v112 = sub_24A64F254(0, (unint64_t *)&qword_25794C8D0);
      *(_QWORD *)&v110 = v49;
      sub_24A64E7EC(&v110, v109);
      v50 = swift_isUniquelyReferenced_nonNull_native();
      v108 = v23;
      sub_24A64F124(v109, v46, v48, v50);
      v23 = v108;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((_DWORD)v97 != 2)
    {
      if ((v97 & 1) != 0)
        v51 = 1;
      else
        v51 = 2;
      v52 = sub_24A77B9B0();
      v54 = v53;
      v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v51);
      v112 = sub_24A64F254(0, (unint64_t *)&qword_25794C8D0);
      *(_QWORD *)&v110 = v55;
      sub_24A64E7EC(&v110, v109);
      v56 = swift_isUniquelyReferenced_nonNull_native();
      v108 = v23;
      sub_24A64F124(v109, v52, v54, v56);
      v23 = v108;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((v98 & 1) == 0)
    {
      v57 = objc_msgSend((id)objc_opt_self(), sel_appleEffortScoreUnit);
      v58 = objc_msgSend((id)objc_opt_self(), v31[50], v57, (double)v93);

      v112 = sub_24A64F254(0, (unint64_t *)&qword_257947308);
      *(_QWORD *)&v110 = v58;
      sub_24A64E7EC(&v110, v109);
      v59 = swift_isUniquelyReferenced_nonNull_native();
      v108 = v23;
      sub_24A64F124(v109, 0xD00000000000001FLL, 0x800000024A789AE0, v59);
      v23 = v108;
      swift_bridgeObjectRelease();
    }
    sub_24A7787A0();
    sub_24A7787A0();
    v100 = sub_24A7787AC();
    v99 = sub_24A7787AC();
    sub_24A64F254(0, &qword_2579472F8);
    v60 = (void *)sub_24A77BB0C();
    sub_24A64F254(0, &qword_257947300);
    v98 = sub_24A77BB0C();
    if (v30)
    {
      swift_bridgeObjectRetain();
      v61 = (void *)sub_24A77B980();
      v62 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v61);

      v97 = objc_msgSend((id)objc_opt_self(), v31[50], v62, v8);
      swift_bridgeObjectRelease();

    }
    else
    {
      v97 = 0;
    }
    v63 = v102;
    v64 = v102;
    if (v38)
    {
      swift_bridgeObjectRetain();
      v65 = (void *)sub_24A77B980();
      v66 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v65);

      v67 = objc_msgSend((id)objc_opt_self(), v31[50], v66, v11);
      swift_bridgeObjectRelease();

    }
    else
    {
      v67 = 0;
    }
    if (v101)
    {
      swift_bridgeObjectRetain();
      v68 = (void *)sub_24A77B980();
      v69 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v68);

      v70 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v69, v13);
      swift_bridgeObjectRelease();

    }
    else
    {
      v70 = 0;
    }
    v71 = qword_24A77FA88[v63];
    *(_QWORD *)&v110 = v105;
    *((_QWORD *)&v110 + 1) = v104;
    v111 = v103;
    LOBYTE(v112) = v64;
    DemoGoal.hkQuantity.getter();
    v73 = v72;
    v105 = v72;
    v74 = objc_msgSend((id)objc_opt_self(), sel_localDevice);
    swift_bridgeObjectRetain();
    v75 = (void *)sub_24A77B8F0();
    swift_bridgeObjectRelease();
    v87 = v71;
    v86 = v67;
    v76 = (void *)v100;
    v77 = (void *)v99;
    v78 = v67;
    v79 = (void *)v98;
    v104 = v23;
    v80 = v97;
    v81 = objc_msgSend(v92, sel__workoutWithActivityType_startDate_endDate_workoutEvents_workoutActivities_duration_totalActiveEnergyBurned_totalBasalEnergyBurned_totalDistance_totalSwimmingStrokeCount_totalFlightsClimbed_goalType_goal_device_metadata_, v91, v100, v99, v60, v98, v97, v7, v86, v70, 0, 0, v87, v73, v74, v75);

    if (v81)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v81, sel__setIsWatchWorkout_, 1);
      v82 = objc_msgSend((id)objc_opt_self(), sel__localDeviceSource);
      v83 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3FD0]), sel_initWithSource_version_, v82, 0);
      objc_msgSend(v81, sel__setSourceRevision_, v83);

      v84 = *(void (**)(char *, uint64_t))(v89 + 8);
      v85 = v90;
      v84(v107, v90);
      v84(v106, v85);
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_24A64BEE4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474D0);
  v2 = sub_24A77C04C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24A63CCC0(v6, (uint64_t)&v15, &qword_2579474D8);
    v7 = v15;
    v8 = v16;
    result = sub_24A64E74C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_24A64E7EC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A64C018(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947428);
  v2 = (_QWORD *)sub_24A77C04C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 1);
    v12 = *v4;
    v6 = swift_retain();
    result = sub_24A64E7FC(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v12;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A64C124(uint64_t a1)
{
  return sub_24A64C51C(a1, &qword_257947418, &qword_257947420, (uint64_t (*)(uint64_t))sub_24A64E854);
}

unint64_t sub_24A64C140(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579474A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474A8);
  v6 = sub_24A77C04C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24A63CCC0(v12, (uint64_t)v5, &qword_2579474A0);
    result = sub_24A64E8D4((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_24A778854();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A64C2D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947488);
  v2 = (_QWORD *)sub_24A77C04C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = *v4;
    v8 = v5;
    result = sub_24A64E96C((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v2[6] + v11) = v8;
    *(_QWORD *)(v2[7] + v11) = v6;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A64C3D4(uint64_t a1)
{
  return sub_24A64C3EC(a1, &qword_257947480);
}

unint64_t sub_24A64C3E0(uint64_t a1)
{
  return sub_24A64C3EC(a1, &qword_2579474F0);
}

unint64_t sub_24A64C3EC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_24A77C04C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_24A64E74C(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A64C500(uint64_t a1)
{
  return sub_24A64C51C(a1, &qword_257947468, &qword_257947470, (uint64_t (*)(uint64_t))sub_24A64E854);
}

unint64_t sub_24A64C51C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_24A77C04C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24A63CCC0(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_24A64E7EC(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A64C644(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24A64C680 + 4 * byte_24A77EEB0[a1]))(0x7974697669746361, 0xEC00000065707954);
}

unint64_t sub_24A64C680()
{
  return 0xD000000000000010;
}

uint64_t sub_24A64C764()
{
  return 0x74726165486E696DLL;
}

uint64_t sub_24A64C790()
{
  return 1818324839;
}

BOOL sub_24A64C7A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24A64C7B4()
{
  unsigned __int8 *v0;

  return sub_24A64C644(*v0);
}

uint64_t sub_24A64C7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24A651D28(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A64C7E0(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_24A64C7EC()
{
  sub_24A64F28C();
  return sub_24A77C2D4();
}

uint64_t sub_24A64C814()
{
  sub_24A64F28C();
  return sub_24A77C2E0();
}

uint64_t DemoWorkout.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  char v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947310);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *(unsigned __int8 *)(v1 + 32);
  v33 = *(unsigned __int8 *)(v1 + 33);
  v32 = *(_QWORD *)(v1 + 40);
  v31 = *(unsigned __int8 *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 64);
  v28 = *(_QWORD *)(v1 + 56);
  v29 = v7;
  v30 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 88);
  v25 = *(_QWORD *)(v1 + 80);
  v26 = v8;
  v27 = *(_QWORD *)(v1 + 96);
  v9 = *(_QWORD *)(v1 + 112);
  v22 = *(_QWORD *)(v1 + 104);
  v23 = v9;
  v24 = *(_QWORD *)(v1 + 120);
  v20 = *(_QWORD *)(v1 + 128);
  v21 = *(unsigned __int8 *)(v1 + 136);
  v18 = *(_QWORD *)(v1 + 144);
  v19 = *(unsigned __int8 *)(v1 + 152);
  v16 = *(_QWORD *)(v1 + 160);
  v17 = *(unsigned __int8 *)(v1 + 168);
  v12 = *(_QWORD *)(v1 + 176);
  v13 = *(_QWORD *)(v1 + 184);
  v14 = *(_QWORD *)(v1 + 192);
  v15 = *(unsigned __int8 *)(v1 + 200);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A64F28C();
  sub_24A77C280();
  LOBYTE(v35) = 0;
  v10 = v34;
  sub_24A77C130();
  if (!v10)
  {
    LOBYTE(v35) = 1;
    sub_24A77C13C();
    LOBYTE(v35) = 2;
    sub_24A77C13C();
    v34 = v4;
    LOBYTE(v35) = 3;
    sub_24A77C100();
    LOBYTE(v35) = 4;
    sub_24A77C100();
    LOBYTE(v35) = 5;
    sub_24A77C118();
    v35 = v28;
    v36 = v29;
    v37 = v30;
    v40 = 6;
    sub_24A64E548();
    sub_24A77C124();
    v35 = v25;
    v36 = v26;
    v37 = v27;
    v40 = 7;
    sub_24A77C124();
    v35 = v22;
    v36 = v23;
    v37 = v24;
    v40 = 8;
    sub_24A77C124();
    LOBYTE(v35) = 9;
    sub_24A77C10C();
    LOBYTE(v35) = 10;
    sub_24A77C10C();
    LOBYTE(v35) = 11;
    sub_24A77C10C();
    v35 = v12;
    v36 = v13;
    v37 = v14;
    v38 = v15;
    v40 = 12;
    sub_24A64F2D0();
    sub_24A77C148();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DemoWorkout.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  int v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _OWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  int v78;
  __int16 v79;
  uint64_t v80;
  char v81;
  _BYTE v82[7];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  _BYTE v94[7];
  uint64_t v95;
  char v96;
  _BYTE v97[7];
  uint64_t v98;
  char v99;
  _BYTE v100[7];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  __int128 v106;
  uint64_t v107;
  unsigned __int8 v108;
  _BYTE v109[7];
  char v110;
  _BYTE v111[7];
  char v112;
  _BYTE v113[7];
  char v114;
  _BYTE v115[7];
  char v116;
  int v117;
  __int16 v118;
  _QWORD *v119;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947328);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v119 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_24A64F28C();
  sub_24A77C274();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
  v10 = v6;
  v59 = a2;
  LOBYTE(v72) = 0;
  v11 = sub_24A77C0C4();
  v13 = v12;
  LOBYTE(v72) = 1;
  swift_bridgeObjectRetain();
  sub_24A77C0D0();
  v15 = v14;
  LOBYTE(v72) = 2;
  sub_24A77C0D0();
  v17 = v16;
  LOBYTE(v72) = 3;
  v58 = sub_24A77C094();
  LOBYTE(v72) = 4;
  v57 = sub_24A77C094();
  LOBYTE(v72) = 5;
  v56 = sub_24A77C0AC();
  v116 = v18 & 1;
  LOBYTE(v60) = 6;
  v55 = v18;
  sub_24A64E658();
  sub_24A77C0B8();
  v52 = v73;
  v53 = v72;
  LOBYTE(v60) = 7;
  v54 = v74;
  swift_bridgeObjectRetain();
  sub_24A77C0B8();
  v49 = v72;
  v50 = v11;
  v48 = v73;
  v19 = v74;
  LOBYTE(v60) = 8;
  swift_bridgeObjectRetain();
  sub_24A77C0B8();
  v45 = v73;
  v46 = v72;
  LOBYTE(v72) = 9;
  v51 = v74;
  swift_bridgeObjectRetain();
  v20 = sub_24A77C0A0();
  v47 = v21;
  v22 = v20;
  v114 = v21 & 1;
  LOBYTE(v72) = 10;
  v43 = sub_24A77C0A0();
  v44 = v23;
  v112 = v23 & 1;
  LOBYTE(v72) = 11;
  v42 = sub_24A77C0A0();
  v41 = v24 & 1;
  v110 = v24 & 1;
  v105 = 12;
  sub_24A64F314();
  sub_24A77C0DC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  v39 = *((_QWORD *)&v106 + 1);
  v40 = v106;
  v38 = v107;
  v37 = v108;
  *(_QWORD *)&v60 = v50;
  *((_QWORD *)&v60 + 1) = v13;
  *(_QWORD *)&v61 = v15;
  *((_QWORD *)&v61 + 1) = v17;
  v25 = v58;
  LOBYTE(v62) = v58;
  BYTE1(v62) = v57;
  *((_QWORD *)&v62 + 1) = v56;
  LOBYTE(v63) = v55 & 1;
  v26 = v54;
  *((_QWORD *)&v63 + 1) = v53;
  v27 = v51;
  *(_QWORD *)&v64 = v52;
  *((_QWORD *)&v64 + 1) = v54;
  *(_QWORD *)&v65 = v49;
  *((_QWORD *)&v65 + 1) = v48;
  *(_QWORD *)&v66 = v19;
  *((_QWORD *)&v66 + 1) = v46;
  *(_QWORD *)&v67 = v45;
  *((_QWORD *)&v67 + 1) = v51;
  v36 = v22;
  *(_QWORD *)&v68 = v22;
  BYTE8(v68) = v47 & 1;
  *(_QWORD *)&v69 = v43;
  BYTE8(v69) = v44 & 1;
  *(_QWORD *)&v70 = v42;
  BYTE8(v70) = v41;
  v71[0] = v106;
  *(_QWORD *)&v71[1] = v107;
  BYTE8(v71[1]) = v108;
  sub_24A64F358((uint64_t)&v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v71[0];
  v29 = v59;
  v59[10] = v70;
  v29[11] = v28;
  *(_OWORD *)((char *)v29 + 185) = *(_OWORD *)((char *)v71 + 9);
  v30 = v67;
  v29[6] = v66;
  v29[7] = v30;
  v31 = v69;
  v29[8] = v68;
  v29[9] = v31;
  v32 = v63;
  v29[2] = v62;
  v29[3] = v32;
  v33 = v65;
  v29[4] = v64;
  v29[5] = v33;
  v34 = v61;
  *v29 = v60;
  v29[1] = v34;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
  v72 = v50;
  v73 = v13;
  v74 = v15;
  v75 = v17;
  v76 = v25;
  v77 = v57;
  v78 = v117;
  v79 = v118;
  v80 = v56;
  v81 = v116;
  *(_DWORD *)v82 = *(_DWORD *)v115;
  *(_DWORD *)&v82[3] = *(_DWORD *)&v115[3];
  v83 = v53;
  v84 = v52;
  v85 = v26;
  v86 = v49;
  v87 = v48;
  v88 = v19;
  v89 = v46;
  v90 = v45;
  v91 = v27;
  v92 = v36;
  v93 = v114;
  *(_DWORD *)v94 = *(_DWORD *)v113;
  *(_DWORD *)&v94[3] = *(_DWORD *)&v113[3];
  v95 = v43;
  v96 = v112;
  *(_DWORD *)v97 = *(_DWORD *)v111;
  *(_DWORD *)&v97[3] = *(_DWORD *)&v111[3];
  v98 = v42;
  v99 = v110;
  *(_DWORD *)&v100[3] = *(_DWORD *)&v109[3];
  *(_DWORD *)v100 = *(_DWORD *)v109;
  v101 = v40;
  v102 = v39;
  v103 = v38;
  v104 = v37;
  return sub_24A64F3DC((uint64_t)&v72);
}

uint64_t sub_24A64D45C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return DemoWorkout.init(from:)(a1, a2);
}

uint64_t sub_24A64D470(_QWORD *a1)
{
  return DemoWorkout.encode(to:)(a1);
}

_QWORD *sub_24A64D484(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A6517BC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24A64D590(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24A64D8E8(a1, a2, a3, a4, &qword_2579474C8);
}

uint64_t sub_24A64D59C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A64D6D0(a1, a2, a3, a4, &qword_2579474B0, type metadata accessor for TrainingLoadViewModel.ChartPoint);
}

_QWORD *sub_24A64D5B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579474F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A652290(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A64D6BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A64D6D0(a1, a2, a3, a4, &qword_257947478, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_24A64D6D0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_24A77C010();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24A65246C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_24A64D8DC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24A64D8E8(a1, a2, a3, a4, &qword_257947410);
}

_QWORD *sub_24A64D8E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A652380(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A64D9F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A64D6D0(a1, a2, a3, a4, &qword_257947408, (uint64_t (*)(_QWORD))MEMORY[0x24BDB5630]);
}

uint64_t sub_24A64DA04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A64D6D0(a1, a2, a3, a4, &qword_257947448, (uint64_t (*)(_QWORD))MEMORY[0x24BE400E8]);
}

uint64_t sub_24A64DA18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A64D6D0(a1, a2, a3, a4, &qword_257947450, type metadata accessor for TrainingLoadViewModel);
}

_QWORD *sub_24A64DA2C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947438);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A652584(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24A64DB38(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947430);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A65268C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24A64DC44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947460);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A6518A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A64DD50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24A64D6D0(a1, a2, a3, a4, &qword_257947458, (uint64_t (*)(_QWORD))MEMORY[0x24BE890D0]);
}

void sub_24A64DD64(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _OWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;

  v6 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v41 = v6;
  if (v6)
  {
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v43 = *(_OWORD *)(a1 + 48);
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      v42 = a3;
      v9 = *a3;
      v11 = sub_24A64E74C(v7, v8);
      v12 = *(_QWORD *)(v9 + 16);
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v15 = v10;
      if (*(_QWORD *)(v9 + 24) >= v14)
      {
        if ((a2 & 1) != 0)
        {
          if ((v10 & 1) == 0)
            goto LABEL_14;
        }
        else
        {
          sub_24A6DAA50();
          if ((v15 & 1) == 0)
            goto LABEL_14;
        }
      }
      else
      {
        sub_24A6DC014(v14, a2 & 1);
        v16 = sub_24A64E74C(v7, v8);
        if ((v15 & 1) != (v17 & 1))
        {
LABEL_30:
          sub_24A77C1B4();
          __break(1u);
LABEL_31:
          sub_24A77BF5C();
          sub_24A77BA4C();
          sub_24A77C004();
          sub_24A77BA4C();
          sub_24A77C01C();
          __break(1u);
          return;
        }
        v11 = v16;
        if ((v15 & 1) == 0)
        {
LABEL_14:
          v20 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
          v21 = (uint64_t *)(v20[6] + 16 * v11);
          *v21 = v7;
          v21[1] = v8;
          *(_OWORD *)(v20[7] + 16 * v11) = v43;
          v22 = v20[2];
          v23 = __OFADD__(v22, 1);
          v24 = v22 + 1;
          if (v23)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          v20[2] = v24;
          if (v41 != 1)
          {
            v25 = (_OWORD *)(a1 + 80);
            v26 = 1;
            while (v26 < *(_QWORD *)(a1 + 16))
            {
              v44 = *v25;
              v28 = *((_QWORD *)v25 - 2);
              v27 = *((_QWORD *)v25 - 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (!v27)
                goto LABEL_25;
              v29 = *a3;
              v30 = sub_24A64E74C(v28, v27);
              v32 = *(_QWORD *)(v29 + 16);
              v33 = (v31 & 1) == 0;
              v23 = __OFADD__(v32, v33);
              v34 = v32 + v33;
              if (v23)
                goto LABEL_28;
              v35 = v31;
              if (*(_QWORD *)(v29 + 24) < v34)
              {
                sub_24A6DC014(v34, 1);
                v30 = sub_24A64E74C(v28, v27);
                if ((v35 & 1) != (v36 & 1))
                  goto LABEL_30;
              }
              if ((v35 & 1) != 0)
                goto LABEL_11;
              a3 = v42;
              v37 = (_QWORD *)*v42;
              *(_QWORD *)(*v42 + 8 * (v30 >> 6) + 64) |= 1 << v30;
              v38 = (uint64_t *)(v37[6] + 16 * v30);
              *v38 = v28;
              v38[1] = v27;
              *(_OWORD *)(v37[7] + 16 * v30) = v44;
              v39 = v37[2];
              v23 = __OFADD__(v39, 1);
              v40 = v39 + 1;
              if (v23)
                goto LABEL_29;
              ++v26;
              v37[2] = v40;
              v25 += 2;
              if (v41 == v26)
                goto LABEL_25;
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      v18 = (void *)swift_allocError();
      swift_willThrow();
      v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24A64E190()
{
  unint64_t result;

  result = qword_257947198;
  if (!qword_257947198)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77FA34, &type metadata for DemoScenarioProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947198);
  }
  return result;
}

unint64_t sub_24A64E1D4()
{
  unint64_t result;

  result = qword_2579471A0;
  if (!qword_2579471A0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoTrainingLoadValues, &type metadata for DemoTrainingLoadValues);
    atomic_store(result, (unint64_t *)&qword_2579471A0);
  }
  return result;
}

unint64_t sub_24A64E218()
{
  unint64_t result;

  result = qword_2579471C8;
  if (!qword_2579471C8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoWorkout, &type metadata for DemoWorkout);
    atomic_store(result, (unint64_t *)&qword_2579471C8);
  }
  return result;
}

unint64_t sub_24A64E25C()
{
  unint64_t result;

  result = qword_2579471D8;
  if (!qword_2579471D8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoTrainingLoadValues, &type metadata for DemoTrainingLoadValues);
    atomic_store(result, (unint64_t *)&qword_2579471D8);
  }
  return result;
}

uint64_t sub_24A64E2A0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579471A8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x24BD1A1F4](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A64E314(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579471B8);
    v8 = a2();
    result = MEMORY[0x24BD1A1F4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A64E37C()
{
  unint64_t result;

  result = qword_2579471F0;
  if (!qword_2579471F0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoWorkout, &type metadata for DemoWorkout);
    atomic_store(result, (unint64_t *)&qword_2579471F0);
  }
  return result;
}

unint64_t sub_24A64E3C0()
{
  unint64_t result;

  result = qword_257947200;
  if (!qword_257947200)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F9E4, &type metadata for DemoTrainingLoadValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947200);
  }
  return result;
}

uint64_t sub_24A64E404(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947208);
    v8 = a2;
    result = MEMORY[0x24BD1A1F4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A64E464()
{
  unint64_t result;

  result = qword_257947230;
  if (!qword_257947230)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F994, &type metadata for DemoQuantity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947230);
  }
  return result;
}

uint64_t sub_24A64E4A8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_24A64E4C0()
{
  unint64_t result;

  result = qword_257947268;
  if (!qword_257947268)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F944, &type metadata for DemoGoal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947268);
  }
  return result;
}

unint64_t sub_24A64E504()
{
  unint64_t result;

  result = qword_257947270;
  if (!qword_257947270)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F8F4, &type metadata for DemoGoal.EnergyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947270);
  }
  return result;
}

unint64_t sub_24A64E548()
{
  unint64_t result;

  result = qword_257947278;
  if (!qword_257947278)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoQuantity, &type metadata for DemoQuantity);
    atomic_store(result, (unint64_t *)&qword_257947278);
  }
  return result;
}

unint64_t sub_24A64E58C()
{
  unint64_t result;

  result = qword_257947280;
  if (!qword_257947280)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F8A4, &type metadata for DemoGoal.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947280);
  }
  return result;
}

unint64_t sub_24A64E5D0()
{
  unint64_t result;

  result = qword_257947288;
  if (!qword_257947288)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F854, &type metadata for DemoGoal.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947288);
  }
  return result;
}

unint64_t sub_24A64E614()
{
  unint64_t result;

  result = qword_257947290;
  if (!qword_257947290)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F804, &type metadata for DemoGoal.OpenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947290);
  }
  return result;
}

unint64_t sub_24A64E658()
{
  unint64_t result;

  result = qword_2579472C8;
  if (!qword_2579472C8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoQuantity, &type metadata for DemoQuantity);
    atomic_store(result, (unint64_t *)&qword_2579472C8);
  }
  return result;
}

uint64_t sub_24A64E69C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_24A64E6B4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_24A77B80C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
  sub_24A63C880(&qword_2579474B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
  v3 = sub_24A77B908();
  return sub_24A64EDA0(a1, v3, v2, &qword_2579474C0, MEMORY[0x24BDD24B0]);
}

unint64_t sub_24A64E74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24A77C22C();
  sub_24A77BA1C();
  v4 = sub_24A77C25C();
  return sub_24A64EA4C(a1, a2, v4);
}

uint64_t sub_24A64E7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_24A64E7EC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_24A64E7FC(uint64_t a1)
{
  uint64_t v2;

  sub_24A77C22C();
  sub_24A77ADB0();
  v2 = sub_24A77C25C();
  return sub_24A64EB2C(a1, v2);
}

unint64_t sub_24A64E854(uint64_t a1)
{
  uint64_t v2;

  sub_24A77B9B0();
  sub_24A77C22C();
  sub_24A77BA1C();
  v2 = sub_24A77C25C();
  swift_bridgeObjectRelease();
  return sub_24A64EC2C(a1, v2);
}

unint64_t sub_24A64E8D4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_24A778854();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_24A63C880(&qword_257947490, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v3 = sub_24A77B908();
  return sub_24A64EDA0(a1, v3, v2, &qword_257947498, MEMORY[0x24BDCEA98]);
}

unint64_t sub_24A64E96C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A77BDB8();
  return sub_24A64EED0(a1, v2);
}

unint64_t sub_24A64E99C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_24A77C22C();
  sub_24A77C238();
  v2 = sub_24A77C25C();
  return sub_24A64EFE8(a1, v2);
}

unint64_t sub_24A64E9F4(uint64_t a1)
{
  uint64_t v2;

  sub_24A77C22C();
  sub_24A77C238();
  v2 = sub_24A77C25C();
  return sub_24A64F088(a1, v2);
}

unint64_t sub_24A64EA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24A77C184() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24A77C184() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24A64EB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  char v6;
  uint64_t v7;
  char v8;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    swift_retain();
    v6 = sub_24A77AD8C();
    swift_release();
    if ((v6 & 1) == 0)
    {
      v7 = ~v4;
      for (i = (i + 1) & v7; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v7)
      {
        swift_retain();
        v8 = sub_24A77AD8C();
        swift_release();
        if ((v8 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_24A64EC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_24A77B9B0();
    v8 = v7;
    if (v6 == sub_24A77B9B0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_24A77C184();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_24A77B9B0();
          v15 = v14;
          if (v13 == sub_24A77B9B0() && v15 == v16)
            break;
          v18 = sub_24A77C184();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_24A64EDA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      sub_24A63C880(v22, v21, v23);
      v18 = sub_24A77B974();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v18 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_24A64EED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_24A64F254(0, &qword_257947300);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_24A77BDC4();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_24A77BDC4();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_24A64EFE8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24A64F088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

_OWORD *sub_24A64F124(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_24A64E74C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_24A64E7EC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24A6DAC1C();
      goto LABEL_7;
    }
    sub_24A6DC328(v15, a4 & 1);
    v21 = sub_24A64E74C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_24A651338(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_24A77C1B4();
  __break(1u);
  return result;
}

uint64_t sub_24A64F254(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24A64F28C()
{
  unint64_t result;

  result = qword_257947318;
  if (!qword_257947318)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F7B4, &type metadata for DemoWorkout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947318);
  }
  return result;
}

unint64_t sub_24A64F2D0()
{
  unint64_t result;

  result = qword_257947320;
  if (!qword_257947320)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoGoal, &type metadata for DemoGoal);
    atomic_store(result, (unint64_t *)&qword_257947320);
  }
  return result;
}

unint64_t sub_24A64F314()
{
  unint64_t result;

  result = qword_257947330;
  if (!qword_257947330)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DemoGoal, &type metadata for DemoGoal);
    atomic_store(result, (unint64_t *)&qword_257947330);
  }
  return result;
}

uint64_t sub_24A64F358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(a1 + 176);
  v3 = *(_QWORD *)(a1 + 184);
  v4 = *(_QWORD *)(a1 + 192);
  v5 = *(_BYTE *)(a1 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A64E69C(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_24A64F3DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(a1 + 176);
  v3 = *(_QWORD *)(a1 + 184);
  v4 = *(_QWORD *)(a1 + 192);
  v5 = *(_BYTE *)(a1 + 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A64E4A8(v2, v3, v4, v5);
  return a1;
}

uint64_t destroy for DemoScenarioProfile()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DemoScenarioProfile(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DemoScenarioProfile(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for DemoScenarioProfile(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoScenarioProfile(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoScenarioProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoScenarioProfile()
{
  return &type metadata for DemoScenarioProfile;
}

uint64_t destroy for DemoTrainingLoadValues()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9WorkoutUI22DemoTrainingLoadValuesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DemoTrainingLoadValues(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DemoTrainingLoadValues(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DemoTrainingLoadValues()
{
  return &type metadata for DemoTrainingLoadValues;
}

uint64_t initializeBufferWithCopyOfBuffer for DemoQuantity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DemoQuantity()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for DemoQuantity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DemoQuantity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoQuantity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoQuantity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoQuantity()
{
  return &type metadata for DemoQuantity;
}

uint64_t destroy for DemoGoal(uint64_t a1)
{
  return sub_24A64E4A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for DemoGoal(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_24A64E69C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DemoGoal(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_24A64E69C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_24A64E4A8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DemoGoal(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_24A64E4A8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoGoal(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoGoal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_24A64FB10(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_24A64FB28(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DemoGoal()
{
  return &type metadata for DemoGoal;
}

uint64_t destroy for DemoWorkout(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24A64E4A8(*(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), *(_QWORD *)(a1 + 192), *(_BYTE *)(a1 + 200));
}

uint64_t initializeWithCopy for DemoWorkout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v4 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v4;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v5 = *(_QWORD *)(a2 + 176);
  v6 = *(_QWORD *)(a2 + 184);
  v7 = *(_QWORD *)(a2 + 192);
  v8 = *(_BYTE *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A64E69C(v5, v6, v7, v8);
  *(_QWORD *)(a1 + 176) = v5;
  *(_QWORD *)(a1 + 184) = v6;
  *(_QWORD *)(a1 + 192) = v7;
  *(_BYTE *)(a1 + 200) = v8;
  return a1;
}

uint64_t assignWithCopy for DemoWorkout(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)v2 + 32);
  *(_BYTE *)(a1 + 33) = *((_BYTE *)v2 + 33);
  v4 = v2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)v2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 56) = v2[7];
  *(_QWORD *)(a1 + 64) = v2[8];
  *(_QWORD *)(a1 + 72) = v2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = v2[10];
  *(_QWORD *)(a1 + 88) = v2[11];
  *(_QWORD *)(a1 + 96) = v2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = v2[13];
  *(_QWORD *)(a1 + 112) = v2[14];
  *(_QWORD *)(a1 + 120) = v2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = v2[16];
  *(_BYTE *)(a1 + 136) = *((_BYTE *)v2 + 136);
  *(_QWORD *)(a1 + 128) = v5;
  v6 = v2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)v2 + 152);
  *(_QWORD *)(a1 + 144) = v6;
  v7 = v2[20];
  *(_BYTE *)(a1 + 168) = *((_BYTE *)v2 + 168);
  *(_QWORD *)(a1 + 160) = v7;
  v8 = v2[22];
  v9 = v2[23];
  v10 = v2[24];
  LOBYTE(v2) = *((_BYTE *)v2 + 200);
  sub_24A64E69C(v8, v9, v10, v2);
  v11 = *(_QWORD *)(a1 + 176);
  v12 = *(_QWORD *)(a1 + 184);
  v13 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 176) = v8;
  *(_QWORD *)(a1 + 184) = v9;
  *(_QWORD *)(a1 + 192) = v10;
  v14 = *(_BYTE *)(a1 + 200);
  *(_BYTE *)(a1 + 200) = (_BYTE)v2;
  sub_24A64E4A8(v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy201_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DemoWorkout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  v8 = *(_QWORD *)(a2 + 192);
  v9 = *(_BYTE *)(a2 + 200);
  v10 = *(_QWORD *)(a1 + 176);
  v11 = *(_QWORD *)(a1 + 184);
  v12 = *(_QWORD *)(a1 + 192);
  v13 = *(_BYTE *)(a1 + 200);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = v8;
  *(_BYTE *)(a1 + 200) = v9;
  sub_24A64E4A8(v10, v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for DemoWorkout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 201))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoWorkout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 200) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 201) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 201) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoWorkout()
{
  return &type metadata for DemoWorkout;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DemoWorkout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DemoWorkout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_24A6500F0 + 4 * byte_24A77EEC2[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_24A650124 + 4 * byte_24A77EEBD[v4]))();
}

uint64_t sub_24A650124(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A65012C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A650134);
  return result;
}

uint64_t sub_24A650140(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A650148);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_24A65014C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A650154(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A650160(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_24A650168(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DemoWorkout.CodingKeys()
{
  return &type metadata for DemoWorkout.CodingKeys;
}

ValueMetadata *type metadata accessor for DemoGoal.CodingKeys()
{
  return &type metadata for DemoGoal.CodingKeys;
}

ValueMetadata *type metadata accessor for DemoGoal.OpenCodingKeys()
{
  return &type metadata for DemoGoal.OpenCodingKeys;
}

uint64_t sub_24A6501B4()
{
  return 0;
}

ValueMetadata *type metadata accessor for DemoGoal.DistanceCodingKeys()
{
  return &type metadata for DemoGoal.DistanceCodingKeys;
}

ValueMetadata *type metadata accessor for DemoGoal.TimeCodingKeys()
{
  return &type metadata for DemoGoal.TimeCodingKeys;
}

uint64_t getEnumTagSinglePayload for WorkoutUIFeatures(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s9WorkoutUI8DemoGoalO18DistanceCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24A65026C + 4 * byte_24A77EEC7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24A65028C + 4 * byte_24A77EECC[v4]))();
}

_BYTE *sub_24A65026C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24A65028C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24A650294(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24A65029C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24A6502A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24A6502AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DemoGoal.EnergyCodingKeys()
{
  return &type metadata for DemoGoal.EnergyCodingKeys;
}

_BYTE *sub_24A6502D0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DemoQuantity.CodingKeys()
{
  return &type metadata for DemoQuantity.CodingKeys;
}

uint64_t getEnumTagSinglePayload for WorkoutAnimationStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9WorkoutUI12DemoQuantityV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A6503C8 + 4 * byte_24A77EED6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A6503FC + 4 * byte_24A77EED1[v4]))();
}

uint64_t sub_24A6503FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A650404(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A65040CLL);
  return result;
}

uint64_t sub_24A650418(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A650420);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A650424(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A65042C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DemoTrainingLoadValues.CodingKeys()
{
  return &type metadata for DemoTrainingLoadValues.CodingKeys;
}

uint64_t _s20OvernightVitalsStateOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9WorkoutUI8DemoGoalO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24A650524 + 4 * byte_24A77EEE0[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24A650558 + 4 * byte_24A77EEDB[v4]))();
}

uint64_t sub_24A650558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A650560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A650568);
  return result;
}

uint64_t sub_24A650574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A65057CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24A650580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A650588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DemoScenarioProfile.CodingKeys()
{
  return &type metadata for DemoScenarioProfile.CodingKeys;
}

unint64_t sub_24A6505A8()
{
  unint64_t result;

  result = qword_257947338;
  if (!qword_257947338)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F234, &type metadata for DemoScenarioProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947338);
  }
  return result;
}

unint64_t sub_24A6505F0()
{
  unint64_t result;

  result = qword_257947340;
  if (!qword_257947340)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F2EC, &type metadata for DemoTrainingLoadValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947340);
  }
  return result;
}

unint64_t sub_24A650638()
{
  unint64_t result;

  result = qword_257947348;
  if (!qword_257947348)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F3A4, &type metadata for DemoQuantity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947348);
  }
  return result;
}

unint64_t sub_24A650680()
{
  unint64_t result;

  result = qword_257947350;
  if (!qword_257947350)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F45C, &type metadata for DemoGoal.EnergyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947350);
  }
  return result;
}

unint64_t sub_24A6506C8()
{
  unint64_t result;

  result = qword_257947358;
  if (!qword_257947358)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F514, &type metadata for DemoGoal.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947358);
  }
  return result;
}

unint64_t sub_24A650710()
{
  unint64_t result;

  result = qword_257947360;
  if (!qword_257947360)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F5CC, &type metadata for DemoGoal.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947360);
  }
  return result;
}

unint64_t sub_24A650758()
{
  unint64_t result;

  result = qword_257947368;
  if (!qword_257947368)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F6D4, &type metadata for DemoGoal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947368);
  }
  return result;
}

unint64_t sub_24A6507A0()
{
  unint64_t result;

  result = qword_257947370;
  if (!qword_257947370)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F78C, &type metadata for DemoWorkout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947370);
  }
  return result;
}

unint64_t sub_24A6507E8()
{
  unint64_t result;

  result = qword_257947378;
  if (!qword_257947378)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F6FC, &type metadata for DemoWorkout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947378);
  }
  return result;
}

unint64_t sub_24A650830()
{
  unint64_t result;

  result = qword_257947380;
  if (!qword_257947380)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F724, &type metadata for DemoWorkout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947380);
  }
  return result;
}

unint64_t sub_24A650878()
{
  unint64_t result;

  result = qword_257947388;
  if (!qword_257947388)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F5F4, &type metadata for DemoGoal.OpenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947388);
  }
  return result;
}

unint64_t sub_24A6508C0()
{
  unint64_t result;

  result = qword_257947390;
  if (!qword_257947390)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F61C, &type metadata for DemoGoal.OpenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947390);
  }
  return result;
}

unint64_t sub_24A650908()
{
  unint64_t result;

  result = qword_257947398;
  if (!qword_257947398)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F53C, &type metadata for DemoGoal.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947398);
  }
  return result;
}

unint64_t sub_24A650950()
{
  unint64_t result;

  result = qword_2579473A0;
  if (!qword_2579473A0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F564, &type metadata for DemoGoal.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473A0);
  }
  return result;
}

unint64_t sub_24A650998()
{
  unint64_t result;

  result = qword_2579473A8;
  if (!qword_2579473A8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F484, &type metadata for DemoGoal.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473A8);
  }
  return result;
}

unint64_t sub_24A6509E0()
{
  unint64_t result;

  result = qword_2579473B0;
  if (!qword_2579473B0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F4AC, &type metadata for DemoGoal.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473B0);
  }
  return result;
}

unint64_t sub_24A650A28()
{
  unint64_t result;

  result = qword_2579473B8;
  if (!qword_2579473B8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F3CC, &type metadata for DemoGoal.EnergyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473B8);
  }
  return result;
}

unint64_t sub_24A650A70()
{
  unint64_t result;

  result = qword_2579473C0;
  if (!qword_2579473C0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F3F4, &type metadata for DemoGoal.EnergyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473C0);
  }
  return result;
}

unint64_t sub_24A650AB8()
{
  unint64_t result;

  result = qword_2579473C8;
  if (!qword_2579473C8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F644, &type metadata for DemoGoal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473C8);
  }
  return result;
}

unint64_t sub_24A650B00()
{
  unint64_t result;

  result = qword_2579473D0;
  if (!qword_2579473D0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F66C, &type metadata for DemoGoal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473D0);
  }
  return result;
}

unint64_t sub_24A650B48()
{
  unint64_t result;

  result = qword_2579473D8;
  if (!qword_2579473D8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F314, &type metadata for DemoQuantity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473D8);
  }
  return result;
}

unint64_t sub_24A650B90()
{
  unint64_t result;

  result = qword_2579473E0;
  if (!qword_2579473E0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F33C, &type metadata for DemoQuantity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473E0);
  }
  return result;
}

unint64_t sub_24A650BD8()
{
  unint64_t result;

  result = qword_2579473E8;
  if (!qword_2579473E8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F25C, &type metadata for DemoTrainingLoadValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473E8);
  }
  return result;
}

unint64_t sub_24A650C20()
{
  unint64_t result;

  result = qword_2579473F0;
  if (!qword_2579473F0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F284, &type metadata for DemoTrainingLoadValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473F0);
  }
  return result;
}

unint64_t sub_24A650C68()
{
  unint64_t result;

  result = qword_2579473F8;
  if (!qword_2579473F8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F1A4, &type metadata for DemoScenarioProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2579473F8);
  }
  return result;
}

unint64_t sub_24A650CB0()
{
  unint64_t result;

  result = qword_257947400;
  if (!qword_257947400)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77F1CC, &type metadata for DemoScenarioProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257947400);
  }
  return result;
}

uint64_t sub_24A650CF4(uint64_t a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  double *v19;
  char v20;
  double *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_24A64E7FC(a1);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_24A6DAE00();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (double *)(v18[7] + 16 * v12);
      *v19 = a3;
      v19[1] = a4;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a1;
    v21 = (double *)(v18[7] + 16 * v12);
    *v21 = a3;
    v21[1] = a4;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return swift_retain();
    }
    goto LABEL_14;
  }
  sub_24A6DC624(result, a2 & 1);
  result = sub_24A64E7FC(a1);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A77C1B4();
  __break(1u);
  return result;
}

_OWORD *sub_24A650E3C(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_24A64E854((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_24A64E7EC(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_24A6DAFA4();
      goto LABEL_7;
    }
    sub_24A6DC90C(v12, a3 & 1);
    v18 = sub_24A64E854((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_24A6513A0(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)sub_24A77C1B4();
  __break(1u);
  return result;
}

void sub_24A650F5C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_24A778854();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_24A64E8D4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24A6DB6C8();
    goto LABEL_7;
  }
  sub_24A6DD438(v17, a3 & 1);
  v22 = sub_24A64E8D4(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_24A77C1B4();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_24A651404(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24A6510B8(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_24A64E99C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_24A778854();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_24A65149C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24A6DBA94();
      goto LABEL_7;
    }
    sub_24A6DDA9C(v13, a3 & 1);
    v20 = sub_24A64E99C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_24A65149C(v10, a2, a1, v16);
    }
  }
  result = sub_24A77C1B4();
  __break(1u);
  return result;
}

uint64_t sub_24A6511DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_24A64E74C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24A6DBCB0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_24A6DE0B0(v15, a4 & 1);
  v21 = sub_24A64E74C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24A77C1B4();
  __break(1u);
  return result;
}

_OWORD *sub_24A651338(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_24A64E7EC(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_24A6513A0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_24A64E7EC(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_24A651404(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_24A778854();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_24A65149C(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = sub_24A778854();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_24A651528(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_24A651570(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_24A6515F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61567961446C6C61 && a2 == 0xEC0000007365756CLL;
  if (v2 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024A789B00 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024A789B20 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7374756F6B726F77 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24A77C184();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

char *sub_24A6517BC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A6518A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A651994(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C61566574756361 && a2 == 0xEB00000000736575;
  if (v2 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5663696E6F726863 && a2 == 0xED00007365756C61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_24A77C184();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24A651AC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_24A77C184();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24A651B98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1852141679 && a2 == 0xE400000000000000;
  if (v2 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x796772656E65 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24A77C184();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24A651D28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024A789B40 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6F646E497369 && a2 == 0xE800000000000000 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x77536C6F6F507369 && a2 == 0xEA00000000006D69 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74726F666665 && a2 == 0xE600000000000000 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024A789B60 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024A789B80 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7369446C61746F74 && a2 == 0xED000065636E6174 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024A789BA0 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x74726165486E696DLL && a2 == 0xEC00000065746152 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x747261654878616DLL && a2 == 0xEC00000065746152 || (sub_24A77C184() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1818324839 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_24A77C184();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_24A652290(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A77C058();
  __break(1u);
  return result;
}

char *sub_24A652380(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A65246C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A652584(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947440);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A65268C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t EffortMiniGraph.init(effort:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v4 = type metadata accessor for EffortMiniGraph();
  *(_QWORD *)(a2 + *(int *)(v4 + 24)) = &unk_251BF36F0;
  sub_24A63CCC0(a1, a2, &qword_257947500);
  v5 = sub_24A6535F0(a1, (uint64_t)&unk_251BF36F0);
  result = sub_24A63CD04(a1, &qword_257947500);
  *(_QWORD *)(a2 + *(int *)(v4 + 20)) = v5;
  return result;
}

uint64_t type metadata accessor for EffortMiniGraph()
{
  uint64_t result;

  result = qword_257947560;
  if (!qword_257947560)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A652860()
{
  sub_24A77C22C();
  sub_24A77C238();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A6528B8()
{
  sub_24A77C238();
  return sub_24A77C238();
}

uint64_t sub_24A6528F0()
{
  sub_24A77C22C();
  sub_24A77C238();
  sub_24A77C238();
  return sub_24A77C25C();
}

BOOL sub_24A652944(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t EffortMiniGraph.body.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = type metadata accessor for EffortMiniGraph();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  sub_24A653864(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_24A6538AC((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a1 = sub_24A6538F0;
  a1[1] = v7;
  return result;
}

uint64_t sub_24A652A08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;

  sub_24A77A4EC();
  v5 = v4;
  sub_24A77A4EC();
  v7 = v6;
  *(_QWORD *)a2 = sub_24A77A930();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475C0);
  return sub_24A652A88(a1, a2 + *(int *)(v8 + 44), 2.0, v5, v7, 2.0);
}

uint64_t sub_24A652A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475C8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v22 - v16);
  *v17 = sub_24A77B650();
  v17[1] = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475D0);
  sub_24A652BBC(a1, (uint64_t)v17 + *(int *)(v19 + 44), a3, a4, a5, a6);
  sub_24A63CCC0((uint64_t)v17, (uint64_t)v15, &qword_2579475C8);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475D8);
  sub_24A63CCC0((uint64_t)v15, a2 + *(int *)(v20 + 48), &qword_2579475C8);
  sub_24A63CD04((uint64_t)v17, &qword_2579475C8);
  return sub_24A63CD04((uint64_t)v15, &qword_2579475C8);
}

uint64_t sub_24A652BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  double *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a2;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475E0);
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v64 = (uint64_t *)((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v12);
  v71 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24A7797A8();
  v69 = *(_QWORD *)(v14 - 8);
  v70 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v62 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v63 = (char *)&v57 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475E8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v76 = (uint64_t)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v74 = (uint64_t)&v57 - v21;
  v72 = (char *)sub_24A77B320();
  v68 = *((_QWORD *)v72 - 1);
  MEMORY[0x24BDAC7A8](v72);
  v66 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475F0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (double *)((char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579475F8);
  v26 = MEMORY[0x24BDAC7A8](v67);
  v73 = (uint64_t)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v57 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v57 - v31;
  *(_QWORD *)v25 = sub_24A77A930();
  v25[1] = a3;
  *((_BYTE *)v25 + 16) = 0;
  v65 = (char *)v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257947600) + 44);
  v58 = type metadata accessor for EffortMiniGraph();
  v79 = *(_QWORD *)(a1 + *(int *)(v58 + 24));
  swift_getKeyPath();
  v33 = (double *)swift_allocObject();
  v33[2] = a4;
  v33[3] = a5;
  v33[4] = a6;
  swift_bridgeObjectRetain();
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947608);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947610);
  v35 = sub_24A63CFF0(&qword_257947618, &qword_257947608, MEMORY[0x24BEE12D8]);
  v36 = sub_24A6541E8();
  sub_24A65422C();
  v65 = (char *)v34;
  v59 = v35;
  v60 = v36;
  sub_24A77B5E4();
  v37 = v69;
  v38 = v66;
  (*(void (**)(char *, _QWORD, char *))(v68 + 104))(v66, *MEMORY[0x24BDF3C28], v72);
  v39 = MEMORY[0x24BD189AC](v38, 0.157, 0.157, 0.169, 1.0);
  sub_24A63CCC0((uint64_t)v25, (uint64_t)v30, &qword_2579475F0);
  *(_QWORD *)&v30[*(int *)(v67 + 36)] = v39;
  v40 = (uint64_t)v71;
  sub_24A63CD04((uint64_t)v25, &qword_2579475F0);
  v41 = (uint64_t)v30;
  v42 = v70;
  v72 = v32;
  sub_24A63F6C4(v41, (uint64_t)v32, &qword_2579475F8);
  sub_24A63CCC0(a1, v40, &qword_257947500);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v40, 1, v42) == 1)
  {
    sub_24A63CD04(v40, &qword_257947500);
    v43 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v74, 1, 1, v77);
  }
  else
  {
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
    v45 = v63;
    v44(v63, v40, v42);
    v46 = sub_24A77A930();
    v47 = (uint64_t)v64;
    *v64 = v46;
    *(double *)(v47 + 8) = a3;
    *(_BYTE *)(v47 + 16) = 0;
    v71 = (char *)(v47 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257947640) + 44));
    v79 = *(_QWORD *)(a1 + *(int *)(v58 + 20));
    swift_getKeyPath();
    v48 = v62;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v62, v45, v42);
    v49 = (*(unsigned __int8 *)(v37 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v50 = (double *)swift_allocObject();
    v50[2] = a4;
    v50[3] = a5;
    v50[4] = a6;
    v44((char *)v50 + v49, (uint64_t)v48, v42);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947648);
    sub_24A654390();
    sub_24A77B5E4();
    v43 = v74;
    sub_24A63F6C4(v47, v74, &qword_2579475E0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v43, 0, 1, v77);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v45, v42);
  }
  v52 = (uint64_t)v72;
  v51 = v73;
  sub_24A63CCC0((uint64_t)v72, v73, &qword_2579475F8);
  v53 = v76;
  sub_24A63CCC0(v43, v76, &qword_2579475E8);
  v54 = v78;
  sub_24A63CCC0(v51, v78, &qword_2579475F8);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947638);
  sub_24A63CCC0(v53, v54 + *(int *)(v55 + 48), &qword_2579475E8);
  sub_24A63CD04(v43, &qword_2579475E8);
  sub_24A63CD04(v52, &qword_2579475F8);
  sub_24A63CD04(v53, &qword_2579475E8);
  return sub_24A63CD04(v51, &qword_2579475F8);
}

void sub_24A653260(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v9 = *a1;
  v10 = a1[1];
  v11 = sub_24A71C0C8(*a1);
  *(double *)&v19 = a3;
  *((double *)&v19 + 1) = a4;
  *(double *)&v20 = a5;
  v12 = sub_24A71C0C8(v10);
  if (__OFSUB__(v10, v9))
  {
    __break(1u);
  }
  else if (!__OFADD__(v10 - v9, 1))
  {
    v13 = (a3 + a5 * -3.0) / 10.0;
    v14 = v13 * 0.5;
    v15 = v13 / a4;
    v16 = 1.0 - v13 / a4;
    v17 = v13 / a4 + v16 * v12;
    v18 = v15 + v16 * v11;
    sub_24A77B668();
    sub_24A77A4B0();
    *(double *)a2 = v18;
    *(double *)(a2 + 8) = v17;
    *(double *)(a2 + 16) = v14;
    *(_OWORD *)(a2 + 24) = v19;
    *(_OWORD *)(a2 + 40) = v20;
    *(_OWORD *)(a2 + 56) = v21;
    return;
  }
  __break(1u);
}

void sub_24A653374(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  char v26;
  double v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = a1[1];
  v35 = a4;
  v36 = a5;
  v37 = a6;
  v17 = sub_24A71C0C8(v15);
  v35 = a4;
  v36 = a5;
  v37 = a6;
  v18 = sub_24A71C0C8(v16);
  if (__OFSUB__(v16, v15))
  {
    __break(1u);
  }
  else if (!__OFADD__(v16 - v15, 1))
  {
    v19 = (a4 + a6 * -3.0) / 10.0;
    v20 = v19 * 0.5;
    v21 = v19 / a5;
    v22 = 1.0 - v19 / a5;
    v23 = v19 / a5 + v22 * v18;
    v24 = v21 + v22 * v17;
    sub_24A77B668();
    sub_24A77A4B0();
    v25 = v35;
    v26 = LOBYTE(v36);
    v27 = v37;
    v28 = v38;
    v29 = v39;
    v30 = v40;
    v31 = sub_24A7797A8();
    v32 = a2;
    v33 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v14, v32, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v14, 0, 1, v31);
    v34 = _s9WorkoutUI12EffortColorsV9textColor8exertion05SwiftB00F0V0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v14);
    sub_24A63CD04((uint64_t)v14, &qword_257947500);
    *(double *)a3 = v24;
    *(double *)(a3 + 8) = v23;
    *(double *)(a3 + 16) = v20;
    *(double *)(a3 + 24) = v25;
    *(_BYTE *)(a3 + 32) = v26;
    *(double *)(a3 + 40) = v27;
    *(_BYTE *)(a3 + 48) = v28;
    *(_QWORD *)(a3 + 56) = v29;
    *(_QWORD *)(a3 + 64) = v30;
    *(_QWORD *)(a3 + 72) = v34;
    return;
  }
  __break(1u);
}

uint64_t sub_24A65354C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_24A653864(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_24A6538AC((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_24A6538F0;
  a2[1] = v7;
  return result;
}

_QWORD *sub_24A6535F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v30;

  v4 = sub_24A779478();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A63CCC0(a1, (uint64_t)v10, &qword_257947500);
  v11 = sub_24A7797A8();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_24A63CD04((uint64_t)v10, &qword_257947500);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_24A779760();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  v13 = sub_24A77946C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = *(_QWORD *)(a2 + 16);
  if (!v14)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v15 = 0;
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v18 = a2 + 16 * v15;
    v19 = *(_OWORD *)(v18 + 32);
    v20 = *(_QWORD *)(v18 + 32);
    if (v13 >= v20)
    {
      v30 = *(_OWORD *)(v18 + 32);
      v21 = *((_QWORD *)&v19 + 1);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (v21 >= v13)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v16 = sub_24A64D590(0, v16[2] + 1, 1, v16);
        v27 = v16[2];
        v26 = v16[3];
        if (v27 >= v26 >> 1)
          v16 = sub_24A64D590((_QWORD *)(v26 > 1), v27 + 1, 1, v16);
        v16[2] = v27 + 1;
        v17 = &v16[2 * v27];
        v17[4] = v20;
        v17[5] = v13;
      }
      else
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v16 = sub_24A64D590(0, v16[2] + 1, 1, v16);
        v24 = v16[2];
        v23 = v16[3];
        v25 = v30;
        if (v24 >= v23 >> 1)
        {
          v28 = sub_24A64D590((_QWORD *)(v23 > 1), v24 + 1, 1, v16);
          v25 = v30;
          v16 = v28;
        }
        v16[2] = v24 + 1;
        *(_OWORD *)&v16[2 * v24 + 4] = v25;
      }
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_24A653864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EffortMiniGraph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6538AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EffortMiniGraph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6538F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for EffortMiniGraph(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A7797A8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EffortMiniGraph(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_24A7797A8();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  return a1;
}

char *assignWithTake for EffortMiniGraph(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortMiniGraph()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A653E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for EffortMiniGraph()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A653EF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_24A653F74()
{
  unint64_t v0;

  sub_24A653FEC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24A653FEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257947570)
  {
    sub_24A7797A8();
    v0 = sub_24A77BDE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257947570);
  }
}

uint64_t sub_24A654040()
{
  return sub_24A63CFF0(&qword_2579475A8, &qword_2579475B0, MEMORY[0x24BDEC6F8]);
}

ValueMetadata *type metadata accessor for EffortMiniGraph.ZoneSection()
{
  return &type metadata for EffortMiniGraph.ZoneSection;
}

unint64_t sub_24A654080()
{
  unint64_t result;

  result = qword_2579475B8;
  if (!qword_2579475B8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77FB2C, &type metadata for EffortMiniGraph.ZoneSection);
    atomic_store(result, (unint64_t *)&qword_2579475B8);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EffortMiniGraph() - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = sub_24A7797A8();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24A654180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EffortMiniGraph() - 8) + 80);
  return sub_24A652A08(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_24A6541CC()
{
  return swift_deallocObject();
}

void sub_24A6541DC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;

  sub_24A653260(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_24A6541E8()
{
  unint64_t result;

  result = qword_257947620;
  if (!qword_257947620)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77FB54, &type metadata for EffortMiniGraph.ZoneSection);
    atomic_store(result, (unint64_t *)&qword_257947620);
  }
  return result;
}

unint64_t sub_24A65422C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947628;
  if (!qword_257947628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947610);
    v2[0] = sub_24A654298();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947628);
  }
  return result;
}

unint64_t sub_24A654298()
{
  unint64_t result;

  result = qword_257947630;
  if (!qword_257947630)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A784E94, &type metadata for RightTrapezoid);
    atomic_store(result, (unint64_t *)&qword_257947630);
  }
  return result;
}

uint64_t sub_24A6542DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_24A7797A8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_24A65433C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A7797A8() - 8) + 80);
  sub_24A653374(a1, (uint64_t)v2 + ((v5 + 40) & ~v5), a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_24A654390()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947650;
  if (!qword_257947650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947648);
    v2[0] = sub_24A65422C();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947650);
  }
  return result;
}

BOOL static WorkoutAnimationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WorkoutAnimationStyle.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t WorkoutAnimationStyle.hashValue.getter()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

void sub_24A654498(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_24A6544A0()
{
  sub_24A6547CC();
  return sub_24A77A558();
}

uint64_t EnvironmentValues.workoutAnimationStyle.getter()
{
  sub_24A654524();
  return sub_24A77A8E8();
}

unint64_t sub_24A654524()
{
  unint64_t result;

  result = qword_257947668;
  if (!qword_257947668)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77FCAC, &type metadata for WorkoutAnimationStyleKey);
    atomic_store(result, (unint64_t *)&qword_257947668);
  }
  return result;
}

uint64_t sub_24A654568@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24A654524();
  result = sub_24A77A8E8();
  *a1 = v3;
  return result;
}

uint64_t sub_24A6545B4()
{
  sub_24A654524();
  return sub_24A77A8F4();
}

uint64_t EnvironmentValues.workoutAnimationStyle.setter()
{
  sub_24A654524();
  return sub_24A77A8F4();
}

uint64_t (*EnvironmentValues.workoutAnimationStyle.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_24A654524();
  sub_24A77A8E8();
  return sub_24A654690;
}

uint64_t sub_24A654690(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_24A77A8F4();
}

uint64_t View.workoutAnimationStyle(_:)()
{
  swift_getKeyPath();
  sub_24A77B0D4();
  return swift_release();
}

uint64_t sub_24A654734@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_24A654524();
  result = sub_24A77A8E8();
  *a1 = v3;
  return result;
}

uint64_t sub_24A654780()
{
  sub_24A654524();
  return sub_24A77A8F4();
}

unint64_t sub_24A6547CC()
{
  unint64_t result;

  result = qword_257947670;
  if (!qword_257947670)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for WorkoutAnimationStyle, &type metadata for WorkoutAnimationStyle);
    atomic_store(result, (unint64_t *)&qword_257947670);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutAnimationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A65485C + 4 * byte_24A77FBC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A654890 + 4 * byte_24A77FBC0[v4]))();
}

uint64_t sub_24A654890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A654898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A6548A0);
  return result;
}

uint64_t sub_24A6548AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A6548B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A6548B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6548C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutAnimationStyle()
{
  return &type metadata for WorkoutAnimationStyle;
}

uint64_t sub_24A6548DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947678);
  v2 = sub_24A77A5F4();
  v4[0] = v1;
  v4[1] = sub_24A65493C();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_24A65493C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947680;
  if (!qword_257947680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947678);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_257947680);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutAnimationStyleKey()
{
  return &type metadata for WorkoutAnimationStyleKey;
}

double ElapsedTimeView.elapsedTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ElapsedTimeView.elapsedTime.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*ElapsedTimeView.elapsedTime.modify())()
{
  return nullsub_1;
}

uint64_t ElapsedTimeView.showSubseconds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ElapsedTimeView.showSubseconds.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*ElapsedTimeView.showSubseconds.modify())()
{
  return nullsub_1;
}

WorkoutUI::ElapsedTimeView __swiftcall ElapsedTimeView.init(elapsedTime:showSubseconds:)(Swift::Double elapsedTime, Swift::Bool showSubseconds)
{
  uint64_t v2;
  WorkoutUI::ElapsedTimeView result;

  *(Swift::Double *)v2 = elapsedTime;
  *(_BYTE *)(v2 + 8) = showSubseconds;
  result.elapsedTime = elapsedTime;
  result.showSubseconds = showSubseconds;
  return result;
}

uint64_t ElapsedTimeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  unsigned __int8 v76;

  v67 = a1;
  v68 = sub_24A77A9F0();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v65 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_24A77AC24();
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v62 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v57);
  v56 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947688);
  MEMORY[0x24BDAC7A8](v52);
  v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_24A77A5DC();
  v8 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947690);
  MEMORY[0x24BDAC7A8](v51);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947698);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579476A0);
  v61 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v55 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579476A8);
  MEMORY[0x24BDAC7A8](v60);
  v58 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_BYTE *)(v1 + 8);
  v50 = sub_24A77A930();
  sub_24A654FDC(v16, &v72);
  v47 = *((_QWORD *)&v72 + 1);
  v17 = v72;
  v18 = v74;
  v46 = v73;
  v49 = v76;
  v19 = v75;
  KeyPath = swift_getKeyPath();
  v21 = swift_getKeyPath();
  v22 = *MEMORY[0x24BDED100];
  v48 = v8;
  v23 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v10, v22, v69);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v7 + *(int *)(v52 + 28), v10, v23);
  *v7 = v21;
  v24 = (uint64_t)v7;
  sub_24A63CCC0((uint64_t)v7, (uint64_t)&v12[*(int *)(v51 + 36)], &qword_257947688);
  *(_QWORD *)v12 = v50;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v25 = v47;
  *((_QWORD *)v12 + 3) = v17;
  *((_QWORD *)v12 + 4) = v25;
  LOBYTE(v8) = v46;
  *((_QWORD *)v12 + 5) = v46;
  *((_QWORD *)v12 + 6) = v18;
  v12[56] = v19;
  LOBYTE(v7) = v49;
  v12[57] = v49;
  *((_WORD *)v12 + 32) = 256;
  *((_QWORD *)v12 + 9) = KeyPath;
  v12[80] = 0;
  sub_24A655584(v17, v25, v8, v18, v19, (char)v7);
  sub_24A63BEC0(KeyPath, 0);
  sub_24A63CD04(v24, &qword_257947688);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v69);
  sub_24A6555EC(v17, v25, v8, v18, v19, (char)v7);
  sub_24A63BEDC(KeyPath, 0);
  v26 = v56;
  v27 = &v56[*(int *)(v57 + 20)];
  v28 = *MEMORY[0x24BDEEB68];
  v29 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
  __asm { FMOV            V0.2D, #5.0 }
  *v26 = _Q0;
  v35 = v54;
  v36 = (uint64_t)v53;
  v37 = (uint64_t)&v53[*(int *)(v54 + 36)];
  sub_24A655654((uint64_t)v26, v37);
  *(_BYTE *)(v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579476B0) + 36)) = 0;
  sub_24A63CCC0((uint64_t)v12, v36, &qword_257947690);
  sub_24A655698((uint64_t)v26);
  sub_24A63CD04((uint64_t)v12, &qword_257947690);
  v38 = v62;
  sub_24A77AC0C();
  v39 = sub_24A6556D4();
  v40 = v55;
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v64);
  sub_24A63CD04(v36, &qword_257947698);
  sub_24A779808();
  *(_QWORD *)&v72 = sub_24A7797FC();
  *((_QWORD *)&v72 + 1) = v41;
  v70 = v35;
  v71 = v39;
  swift_getOpaqueTypeConformance2();
  sub_24A645928();
  v43 = (uint64_t)v58;
  v42 = v59;
  sub_24A77B1C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v42);
  v44 = v65;
  sub_24A77A9E4();
  sub_24A77A5E8();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v68);
  return sub_24A63CD04(v43, &qword_2579476A8);
}

double sub_24A654FDC@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  __int128 v29;
  unsigned __int8 v30;
  char v31;
  _OWORD *v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int16 v37;
  __int128 v38;
  __int128 v39;
  unsigned __int8 v40;
  char v41;

  v34 = a2;
  v3 = sub_24A77C16C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A77C2A4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A77C2B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_24A77BBC0();
  v33 = v12;
  if ((v15 & 1) != 0)
  {
    sub_24A77C2C8();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38C8], v3);
    sub_24A77C298();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_24A778338();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_24A63C880((unint64_t *)&qword_257947708, (uint64_t (*)(uint64_t))MEMORY[0x24BDD08D0], MEMORY[0x24BDD08C8]);
    sub_24A77C2BC();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v11);
    v35 = v38;
    sub_24A645928();
    v16 = sub_24A77AFD8();
    v18 = v16;
    v19 = v17;
    *(_QWORD *)&v35 = v16;
    *((_QWORD *)&v35 + 1) = v17;
    v21 = v20 & 1;
    *(_QWORD *)&v36 = v20 & 1;
    *((_QWORD *)&v36 + 1) = v22;
    LOBYTE(v37) = 0;
  }
  else
  {
    if ((a1 & 1) == 0)
    {
      sub_24A77C2C8();
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38C8], v3);
      sub_24A77C28C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_24A778338();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_24A63C880((unint64_t *)&qword_257947708, (uint64_t (*)(uint64_t))MEMORY[0x24BDD08D0], MEMORY[0x24BDD08C8]);
      sub_24A77C2BC();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v11);
      v35 = v38;
      sub_24A645928();
      *(_QWORD *)&v35 = sub_24A77AFD8();
      *((_QWORD *)&v35 + 1) = v26;
      *(_QWORD *)&v36 = v25 & 1;
      *((_QWORD *)&v36 + 1) = v27;
      v37 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
      sub_24A6559C8();
      sub_24A77AB28();
      goto LABEL_7;
    }
    sub_24A77C2C8();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38C8], v3);
    sub_24A77C28C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_24A778338();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_24A63C880((unint64_t *)&qword_257947708, (uint64_t (*)(uint64_t))MEMORY[0x24BDD08D0], MEMORY[0x24BDD08C8]);
    sub_24A77C2BC();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v11);
    v35 = v38;
    sub_24A645928();
    v16 = sub_24A77AFD8();
    v18 = v16;
    v19 = v17;
    v21 = v23 & 1;
    *(_QWORD *)&v35 = v16;
    *((_QWORD *)&v35 + 1) = v17;
    *(_QWORD *)&v36 = v23 & 1;
    *((_QWORD *)&v36 + 1) = v24;
    LOBYTE(v37) = 1;
  }
  sub_24A6436C4(v16, v17, v21);
  swift_bridgeObjectRetain();
  sub_24A77AB28();
  v35 = v38;
  v36 = v39;
  v37 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
  sub_24A6559C8();
  sub_24A77AB28();
  sub_24A64596C(v18, v19, v21);
  swift_bridgeObjectRelease();
LABEL_7:
  result = *(double *)&v38;
  v29 = v39;
  v30 = v40;
  v31 = v41;
  v32 = v34;
  *v34 = v38;
  v32[1] = v29;
  *((_BYTE *)v32 + 32) = v30;
  *((_BYTE *)v32 + 33) = v31;
  return result;
}

uint64_t sub_24A6554B8()
{
  return sub_24A77A744();
}

uint64_t sub_24A6554D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_24A77A5DC();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24A77A750();
}

uint64_t sub_24A655560()
{
  return sub_24A77A744();
}

uint64_t sub_24A655584(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
    return sub_24A6555C4(a1, a2, a3);
  sub_24A6436C4(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A6555C4(uint64_t a1, uint64_t a2, char a3)
{
  sub_24A6436C4(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A6555EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
    return sub_24A65562C(a1, a2, a3);
  sub_24A64596C(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A65562C(uint64_t a1, uint64_t a2, char a3)
{
  sub_24A64596C(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A655654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A77A684();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A655698(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A77A684();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A6556D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579476B8;
  if (!qword_2579476B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947698);
    v2[0] = sub_24A655758();
    v2[1] = sub_24A63CFF0(&qword_2579476F0, &qword_2579476B0, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579476B8);
  }
  return result;
}

unint64_t sub_24A655758()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579476C0;
  if (!qword_2579476C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947690);
    v2[0] = sub_24A6557DC();
    v2[1] = sub_24A63CFF0(&qword_2579476E8, &qword_257947688, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579476C0);
  }
  return result;
}

unint64_t sub_24A6557DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579476C8;
  if (!qword_2579476C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579476D0);
    v2[0] = sub_24A63CFF0(&qword_2579476D8, &qword_2579476E0, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A63F8AC();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579476C8);
  }
  return result;
}

uint64_t sub_24A655860()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for ElapsedTimeView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ElapsedTimeView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ElapsedTimeView()
{
  return &type metadata for ElapsedTimeView;
}

unint64_t sub_24A65591C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_2579476F8;
  if (!qword_2579476F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579476A8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947698);
    v2[3] = sub_24A6556D4();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_24A63C880((unint64_t *)&qword_257947700, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579476F8);
  }
  return result;
}

unint64_t sub_24A6559C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947718;
  if (!qword_257947718)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947710);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947718);
  }
  return result;
}

uint64_t EmbeddedMultiSportConfigurationView.init(multiSportConfiguration:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EmbeddedMultiSportConfigurationView.body.getter()
{
  sub_24A778F8C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947720);
  sub_24A778854();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947728);
  sub_24A63CFF0(&qword_257947730, &qword_257947720, MEMORY[0x24BEE12D8]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947738);
  sub_24A655EC8();
  swift_getOpaqueTypeConformance2();
  sub_24A655FE8();
  return sub_24A77B5F0();
}

void sub_24A655B1C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t KeyPath;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = sub_24A77AC24();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257947780);
  MEMORY[0x24BDAC7A8](v43);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A77A6C0();
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947738);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_24A77A930();
  v41 = sub_24A779130();
  v13 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
  if (v13)
  {
    v14 = v13;
    v36 = (uint64_t *)v7;
    v37 = v5;
    v45 = v10;
    v38 = a1;
    v39 = v3;
    v40 = v2;
    v15 = objc_msgSend(v13, sel_nonGradientTextColor);

    if (v15)
    {
      v16 = MEMORY[0x24BD189B8](v15);
      v35 = sub_24A77AA08();
      v17 = (void *)sub_24A779130();
      v18 = objc_msgSend(v17, sel_localizedName);

      v19 = sub_24A77B9B0();
      v21 = v20;

      v48 = v19;
      v49 = v21;
      sub_24A645928();
      v22 = sub_24A77AFD8();
      v24 = v23;
      v34 = v25;
      LOBYTE(v19) = v26 & 1;
      v27 = sub_24A77B368();
      KeyPath = swift_getKeyPath();
      v29 = v44;
      sub_24A77A6B4();
      v30 = swift_getKeyPath();
      v31 = v36;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v36 + v43[7], v29, v47);
      *v31 = v30;
      sub_24A6562C8((uint64_t)v31, (uint64_t)&v12[*(int *)(v45 + 36)]);
      v32 = (void *)v41;
      *(_QWORD *)v12 = v41;
      *((_QWORD *)v12 + 1) = 2;
      *((_QWORD *)v12 + 2) = v16;
      v12[24] = 1;
      *((_QWORD *)v12 + 4) = v35;
      *((_QWORD *)v12 + 5) = 0;
      v12[48] = 1;
      *((_QWORD *)v12 + 7) = v22;
      *((_QWORD *)v12 + 8) = v24;
      v12[72] = v19;
      *((_QWORD *)v12 + 10) = v34;
      *((_QWORD *)v12 + 11) = 0x4022000000000000;
      *((_QWORD *)v12 + 12) = v42;
      *((_QWORD *)v12 + 13) = KeyPath;
      *((_QWORD *)v12 + 14) = v27;
      v43 = v32;
      swift_retain();
      sub_24A6436C4(v22, v24, v19);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_24A63CD04((uint64_t)v31, &qword_257947780);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v47);
      swift_release();

      sub_24A64596C(v22, v24, v19);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v33 = v37;
      sub_24A77AC18();
      sub_24A655EC8();
      sub_24A77B200();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v40);
      sub_24A63CD04((uint64_t)v12, &qword_257947738);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_24A655EC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947740;
  if (!qword_257947740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947738);
    v2[0] = sub_24A655F4C();
    v2[1] = sub_24A63CFF0(&qword_257947778, &qword_257947780, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947740);
  }
  return result;
}

unint64_t sub_24A655F4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947748;
  if (!qword_257947748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947750);
    v2[0] = sub_24A63CFF0(&qword_257947758, &qword_257947760, (uint64_t)&protocol conformance descriptor for AlignedLeadingAccessoryContentView<A, B>);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947748);
  }
  return result;
}

unint64_t sub_24A655FE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947788;
  if (!qword_257947788)
  {
    v1 = sub_24A778FC8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEC5710], v1);
    atomic_store(result, (unint64_t *)&qword_257947788);
  }
  return result;
}

uint64_t sub_24A656030()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A656040()
{
  sub_24A778F8C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947720);
  sub_24A778854();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947728);
  sub_24A63CFF0(&qword_257947730, &qword_257947720, MEMORY[0x24BEE12D8]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947738);
  sub_24A655EC8();
  swift_getOpaqueTypeConformance2();
  sub_24A655FE8();
  return sub_24A77B5F0();
}

_QWORD *initializeBufferWithCopyOfBuffer for EmbeddedMultiSportConfigurationView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for EmbeddedMultiSportConfigurationView(id *a1)
{

}

uint64_t assignWithCopy for EmbeddedMultiSportConfigurationView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for EmbeddedMultiSportConfigurationView(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for EmbeddedMultiSportConfigurationView()
{
  return &type metadata for EmbeddedMultiSportConfigurationView;
}

unint64_t sub_24A65622C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_257947790;
  if (!qword_257947790)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947798);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947738);
    v2[2] = sub_24A655EC8();
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4A08], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947790);
  }
  return result;
}

uint64_t sub_24A6562C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FIUIDistanceUnit.init(hkUnit:)(void *a1)
{
  uint64_t v2;

  v2 = sub_24A656340(a1);

  return v2;
}

uint64_t sub_24A656340(void *a1)
{
  void *v2;
  id v3;
  char v4;
  uint64_t result;
  id v6;
  char v7;
  id v8;
  char v9;
  id v10;
  char v11;
  id v12;
  char v13;
  id v14;

  sub_24A65656C();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_meterUnit);
  v4 = sub_24A77BDC4();

  if ((v4 & 1) != 0)
    return 1;
  v6 = objc_msgSend(v2, sel_meterUnitWithMetricPrefix_, 9);
  v7 = sub_24A77BDC4();

  if ((v7 & 1) != 0)
    return 2;
  v8 = objc_msgSend(v2, sel_mileUnit);
  v9 = sub_24A77BDC4();

  if ((v9 & 1) != 0)
    return 3;
  v10 = objc_msgSend(v2, sel_yardUnit);
  v11 = sub_24A77BDC4();

  if ((v11 & 1) != 0)
    return 4;
  v12 = objc_msgSend(v2, sel_footUnit);
  v13 = sub_24A77BDC4();

  if ((v13 & 1) != 0)
    return 5;
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(a1, sel_description);
  sub_24A77B9B0();

  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

unint64_t sub_24A65656C()
{
  unint64_t result;

  result = qword_2579477A0;
  if (!qword_2579477A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2579477A0);
  }
  return result;
}

uint64_t type metadata accessor for SharedHeartRateViewFunctionality.BundleLookup()
{
  return objc_opt_self();
}

uint64_t sub_24A6565C8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeartRateStatusView.BundleLookup()
{
  return objc_opt_self();
}

uint64_t destroy for HeartRateStatusView(uint64_t a1)
{
  return sub_24A63BEDC(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for HeartRateStatusView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 32);
  sub_24A63BEC0(v3, v4);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithCopy for HeartRateStatusView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 32);
  sub_24A63BEC0(v3, v4);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HeartRateStatusView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateStatusView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartRateStatusView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartRateStatusView()
{
  return &type metadata for HeartRateStatusView;
}

uint64_t sub_24A6567D8()
{
  return MEMORY[0x24BDF5560];
}

id sub_24A6567E4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  char v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v7;

  v1 = *(_QWORD *)v0;
  v2 = *(double *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 32);
  sub_24A63BEC0(v4, v5);
  sub_24A63E608(v4, v5, &v7);
  sub_24A63BEDC(v4, v5);
  return sub_24A656A28(v3, v1, &v7, v2);
}

id sub_24A656864(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  double v4;

  v3 = *v1;
  v4 = *((double *)v1 + 1);
  objc_msgSend(a1, sel_setAnimationsSuspended_, *((unsigned __int8 *)v1 + 16));
  objc_msgSend(a1, sel_setState_, v3);
  return objc_msgSend(a1, sel_setBeatsPerMinute_, v4);
}

uint64_t sub_24A6568DC()
{
  return sub_24A77AA5C();
}

uint64_t sub_24A65691C()
{
  sub_24A656E8C();
  return sub_24A77AABC();
}

uint64_t sub_24A65696C()
{
  sub_24A656E8C();
  return sub_24A77AA68();
}

void sub_24A6569BC()
{
  sub_24A656E8C();
  sub_24A77AAB0();
  __break(1u);
}

unint64_t sub_24A6569E4()
{
  unint64_t result;

  result = qword_2579478D8;
  if (!qword_2579478D8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77FEF4, &type metadata for HeartRateStatusView);
    atomic_store(result, (unint64_t *)&qword_2579478D8);
  }
  return result;
}

id sub_24A656A28(char a1, uint64_t a2, unsigned __int8 *a3, double a4)
{
  unsigned int v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;

  v5 = *a3;
  if (v5 - 2 >= 3)
  {
    if (v5 == 5)
    {
      v10 = (void *)objc_opt_self();
      v11 = objc_msgSend(v10, sel_currentDevice);
      sub_24A6CDE34();

      v12 = objc_msgSend(v10, sel_currentDevice);
      sub_24A6CDE34();

      v13 = objc_msgSend(v10, sel_currentDevice);
      sub_24A6CDE34();

    }
    else if (v5 <= 8)
    {
      goto LABEL_7;
    }
LABEL_9:
    v14 = 90;
    v15 = 9;
    goto LABEL_10;
  }
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_currentDevice);
  sub_24A6CDE34();

  v8 = objc_msgSend(v6, sel_currentDevice);
  sub_24A6CDE34();

  v9 = objc_msgSend(v6, sel_currentDevice);
  sub_24A6CDE34();

  if (v5 > 8)
    goto LABEL_9;
LABEL_7:
  if (((1 << v5) & 0x181) == 0)
    goto LABEL_9;
  v14 = 91;
  v15 = 10;
LABEL_10:
  type metadata accessor for SharedHeartRateViewFunctionality.BundleLookup();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v17 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v18 = objc_allocWithZone(MEMORY[0x24BE37940]);
  v19 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v21 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v18, sel_initWithFrame_heartFilledImageName_heartSpriteImageName_heartSuspendedSpriteImageName_spriteFrameCount_spriteColumnCount_resourceBundle_, v19, v20, v21, v14, v15, v17, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v22, sel_setAnimationsSuspended_, a1 & 1);
  objc_msgSend(v22, sel_setState_, a2);
  objc_msgSend(v22, sel_setBeatsPerMinute_, a4);
  return v22;
}

unint64_t sub_24A656E8C()
{
  unint64_t result;

  result = qword_2579478E0;
  if (!qword_2579478E0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77FF44, &type metadata for HeartRateStatusView);
    atomic_store(result, (unint64_t *)&qword_2579478E0);
  }
  return result;
}

uint64_t static AssetLoadStatus.workoutAssetLoadStatus(for:)(char a1, unsigned __int8 a2)
{
  if (a2 == 255)
    return 5;
  if ((a2 & 1) != 0)
    return qword_24A77FFD8[a1];
  return 6;
}

void static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t KeyPath;
  id v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v75;
  __int16 v76;
  char v77;
  __int128 v78;
  _OWORD *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  id v93;
  id v94;
  __int16 v95;
  uint64_t v96;
  __int16 v97;
  char v98;
  __int128 v99;
  _OWORD *v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  __int128 v123;
  _OWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  id v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  __int16 v137;
  uint64_t v138;
  __int16 v139;
  char v140;
  __int128 v141;
  _OWORD *v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  char v156;
  char v157;
  uint64_t v158;
  id v159;
  char v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  char v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  __int16 v176;
  uint64_t v177;
  __int16 v178;
  char v179;
  char v180;
  __int128 v181;
  _OWORD *v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  id v188;
  id v189;
  __int16 v190;
  uint64_t v191;
  __int16 v192;
  char v193;
  char v194;
  __int128 v195;
  _OWORD *v196;
  __int128 v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  id v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  char *v206;
  id v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  id v211;
  id v212;
  __int16 v213;
  __int16 v214;
  id v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  __int16 v222;
  char v223;
  char v224;
  __int128 v225;
  _OWORD *v226;
  __int128 v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  char v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __int16 v237;
  char v238;
  char v239;
  __int128 v240;
  _OWORD *v241;
  __int128 v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  char v253;
  __int128 v254;
  _OWORD *v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  id v263;
  uint64_t v264;
  uint64_t v265;
  char v266;
  char v267;
  id v268;
  uint64_t v269;
  char v270;
  char v271;
  __int128 v272;
  _OWORD *v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  id v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  id v283;
  uint64_t v284;
  char v285;
  char v286;
  __int128 v287;
  _OWORD *v288;
  __int128 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char v295;
  char v296;
  __int128 v297;
  _OWORD *v298;
  __int128 v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  char v305;
  __int128 v306;
  _OWORD *v307;
  __int128 v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char v312;
  id v313;
  uint64_t v314;
  char v315;
  id v316;
  __int16 v317;
  uint64_t v318;
  char v319;
  id v320;
  id v321;
  uint64_t v322;
  uint64_t v323;
  char v324;
  id v325;
  id v326;
  uint64_t v327;
  char v328;
  id v329;
  id v330;
  uint64_t v331;
  uint64_t v332;
  id v333;
  uint64_t v334;
  id v335;
  __int16 v336;
  __int128 v337;
  uint64_t v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  id v343;
  id v344;
  uint64_t v345;
  uint64_t v346;
  char v347;
  __int16 v348;
  __int128 v349;
  uint64_t v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  uint64_t v355;
  char v356;
  char v357;
  char v358;
  uint64_t v359;
  _BYTE *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  uint64_t v366;
  char v367;
  char v368;
  char v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  char v378;
  __int16 v379;
  id v380;
  uint64_t v381;
  uint64_t v382;
  id v383;
  char v384;
  char v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char v389;
  char v390;
  __int128 v391;
  _OWORD *v392;
  __int128 v393;
  uint64_t v394;
  id v395;
  uint64_t v396;
  uint64_t v397;
  id v398;
  char v399;
  char v400;
  _QWORD *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  id v407;
  id v408;
  uint64_t v409;
  uint64_t v410;
  char v411;
  __int16 v412;
  uint64_t v413;
  __int16 v414;
  char v415;
  __int128 v416;
  _OWORD *v417;
  __int128 v418;
  uint64_t v419;
  id v420;
  uint64_t v421;
  char v422;
  char v423;
  uint64_t v424;
  id v425;
  char v426;
  char v427;
  void *v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  __int16 v433;
  uint64_t v434;
  __int16 v435;
  char v436;
  char v437;
  __int128 v438;
  _OWORD *v439;
  __int128 v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  char v444;
  char v445;
  uint64_t v446;
  uint64_t v447;
  __int128 v448;
  uint64_t v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  uint64_t v454;
  char v455;
  id v456;
  id v457;
  uint64_t v458;
  char v459;
  id v460;
  id v461;
  __int128 v462;
  uint64_t v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  char *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  id v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  id v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t *v492;
  id v493;
  id v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  char v504;
  char v505;
  char v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  char v510;
  char v511;
  uint64_t v512;
  uint64_t v513;
  __int128 v514;
  uint64_t v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  uint64_t v520;
  char v521;
  char v522;
  uint64_t v523;
  char v524;
  uint64_t v525;
  _OWORD *v526;
  uint64_t v527;
  char v528;
  char v529;
  uint64_t v530;
  char v531;
  int *v532;
  uint64_t v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  int *v542;
  uint64_t v543;
  char *v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  _OWORD *v553;
  uint64_t v554;
  char v555;
  uint64_t v556;
  char v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t *v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  __int16 v567;
  uint64_t v568;
  __int16 v569;
  char v570;
  __int128 v571;
  _OWORD *v572;
  __int128 v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  char *v577;
  uint64_t v578;
  uint64_t *v579;
  uint64_t v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  char *v587;
  char *v588;
  uint64_t v589;
  _BYTE *v590;
  char *v591;
  char *v592;
  char *v593;
  uint64_t v594;
  uint64_t *v595;
  char *v596;
  uint64_t v597;
  _QWORD *v598;
  uint64_t v599;
  char *v600;
  uint64_t v601;
  uint64_t v602;
  _OWORD *v603;
  uint64_t v604;
  uint64_t v605;
  char *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  char *v612;
  uint64_t v613;
  _OWORD *v614;
  uint64_t v615;
  char *v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  char *v622;
  _OWORD *v623;
  uint64_t v624;
  char *v625;
  uint64_t v626;
  uint64_t v627;
  _OWORD *v628;
  uint64_t v629;
  _OWORD *v630;
  uint64_t v631;
  char *v632;
  char *v633;
  id v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  id v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  id v644;
  __int128 v645;
  __int128 v646;
  __int128 v647;
  __int128 v648;
  __int128 v649;
  uint64_t v650;
  __int16 v651;
  char v652;
  __int128 v653;
  __int128 v654;
  __int128 v655;
  __int128 v656;
  __int128 v657;
  __int128 v658;
  __int128 v659;
  __int128 v660;
  __int128 v661;
  _BYTE v662[19];
  _OWORD v663[2];
  _OWORD v664[4];
  __int128 v665;
  __int128 v666;
  __int128 v667;
  __int128 v668;
  int v669;
  _OWORD v670[7];
  _OWORD v671[2];
  _OWORD v672[9];
  char v673;
  _QWORD v674[2];
  char v675;
  __int128 v676;
  __int128 v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  __int128 v684;
  __int128 v685;
  __int128 v686;
  __int128 v687;
  __int128 v688;
  __int128 v689;
  __int128 v690;
  __int128 v691;
  __int128 v692;
  __int128 v693;
  __int128 v694;
  __int16 v695;
  _OWORD v696[6];
  __int128 v697;
  __int128 v698;
  __int128 v699;
  _OWORD v700[3];

  v644 = a4;
  v634 = a3;
  v639 = a2;
  v643 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v6);
  v581 = (char *)&v575 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v578 = type metadata accessor for WorkoutTimeView();
  v8 = MEMORY[0x24BDAC7A8](v578);
  v579 = (uint64_t *)((char *)&v575 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v584 = (uint64_t)&v575 - v10;
  v583 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F30);
  MEMORY[0x24BDAC7A8](v583);
  v586 = (uint64_t)&v575 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v599 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478F0);
  v12 = MEMORY[0x24BDAC7A8](v599);
  v585 = (uint64_t)&v575 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v587 = (char *)&v575 - v14;
  v597 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478F8);
  MEMORY[0x24BDAC7A8](v597);
  v598 = (uint64_t *)((char *)&v575 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v615 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947900);
  MEMORY[0x24BDAC7A8](v615);
  v600 = (char *)&v575 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v613 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947908);
  MEMORY[0x24BDAC7A8](v613);
  v614 = (_OWORD *)((char *)&v575 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v624 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947910);
  MEMORY[0x24BDAC7A8](v624);
  v616 = (char *)&v575 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v621 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947918);
  MEMORY[0x24BDAC7A8](v621);
  v623 = (_OWORD *)((char *)&v575 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v631 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947920);
  MEMORY[0x24BDAC7A8](v631);
  v625 = (char *)&v575 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v629 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947928);
  MEMORY[0x24BDAC7A8](v629);
  v630 = (_OWORD *)((char *)&v575 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v638 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947930);
  MEMORY[0x24BDAC7A8](v638);
  v633 = (char *)&v575 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v594 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947938);
  MEMORY[0x24BDAC7A8](v594);
  v595 = (uint64_t *)((char *)&v575 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v611 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947940);
  MEMORY[0x24BDAC7A8](v611);
  v596 = (char *)&v575 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v604 = sub_24A779448();
  v602 = *(_QWORD *)(v604 - 8);
  v25 = MEMORY[0x24BDAC7A8](v604);
  v588 = (char *)&v575 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v575 - v27;
  v607 = type metadata accessor for ZoneMetricView();
  v29 = MEMORY[0x24BDAC7A8](v607);
  v576 = (uint64_t)&v575 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v582 = (uint64_t)&v575 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v593 = (char *)&v575 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v575 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v580 = (uint64_t)&v575 - v38;
  v608 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947948);
  MEMORY[0x24BDAC7A8](v608);
  v610 = (uint64_t)&v575 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v589 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947950);
  MEMORY[0x24BDAC7A8](v589);
  v590 = (char *)&v575 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v609 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947958);
  MEMORY[0x24BDAC7A8](v609);
  v592 = (char *)&v575 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v620 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947960);
  MEMORY[0x24BDAC7A8](v620);
  v612 = (char *)&v575 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947968);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v575 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v605 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947970);
  MEMORY[0x24BDAC7A8](v605);
  v591 = (char *)&v575 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_24A7798EC();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v575 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (int *)type metadata accessor for HeartRateMetricView();
  MEMORY[0x24BDAC7A8](v51);
  v577 = (char *)&v575 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v640 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947978);
  MEMORY[0x24BDAC7A8](v640);
  v642 = (uint64_t)&v575 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v635 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947980);
  MEMORY[0x24BDAC7A8](v635);
  v637 = (uint64_t)&v575 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v626 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947988);
  MEMORY[0x24BDAC7A8](v626);
  v628 = (_OWORD *)((char *)&v575 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v617 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947990);
  MEMORY[0x24BDAC7A8](v617);
  v619 = (uint64_t)&v575 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v601 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947998);
  MEMORY[0x24BDAC7A8](v601);
  v603 = (_OWORD *)((char *)&v575 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v618 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579479A0);
  MEMORY[0x24BDAC7A8](v618);
  v606 = (char *)&v575 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v627 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579479A8);
  MEMORY[0x24BDAC7A8](v627);
  v622 = (char *)&v575 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v636 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579479B0);
  MEMORY[0x24BDAC7A8](v636);
  v632 = (char *)&v575 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v641 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579479B8);
  MEMORY[0x24BDAC7A8](v641);
  v62 = (v61 + 15) & 0xFFFFFFFFFFFFFFF0;
  switch(a1)
  {
    case 0:
      sub_24A65F97C((uint64_t)v674);
      sub_24A63F6C4((uint64_t)v674, (uint64_t)v696, &qword_2579479C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479C8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479D0);
      sub_24A65E90C();
      sub_24A63CFF0(&qword_2579479E0, &qword_2579479D0, MEMORY[0x24BDF4498]);
      sub_24A77AB28();
      v693 = v667;
      v694 = v668;
      v695 = v669;
      v689 = v664[2];
      v690 = v664[3];
      v692 = v666;
      v691 = v665;
      v685 = v663[0];
      v686 = v663[1];
      v688 = v664[1];
      v687 = v664[0];
      sub_24A65E968((uint64_t)&v685);
      goto LABEL_138;
    case 1:
      v587 = (char *)&v575 - v62;
      sub_24A7796C4();
      v64 = v63;
      v65 = v639;
      v66 = FIUIDistanceTypeForActivityType();
      sub_24A779520();
      sub_24A7799F4();
      swift_release();
      v67 = sub_24A7798A4();
      v69 = v68;
      swift_release();
      v70 = v69 & 1;
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v64;
      *((_QWORD *)&v696[0] + 1) = v65;
      *(_QWORD *)&v696[1] = v66;
      *((_QWORD *)&v696[1] + 1) = v67;
      *(_QWORD *)&v696[2] = v70;
      *((_QWORD *)&v696[2] + 1) = KeyPath;
      LOWORD(v696[3]) = 0;
      v72 = v65;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65F26C();
      sub_24A65F2B0();
      sub_24A77AB28();
      if (BYTE1(v664[1]))
        v73 = 256;
      else
        v73 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      *(_QWORD *)&v696[4] = 0;
      v696[3] = (unint64_t)v73 | (unsigned __int128)LOBYTE(v664[1]);
      WORD4(v696[4]) = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BA8);
      sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A63F3CC(&qword_257947BA0, &qword_257947BA8, (uint64_t (*)(void))sub_24A65F26C, (uint64_t (*)(void))sub_24A65F2B0);
      sub_24A77AB28();
      if (BYTE9(v649))
        v74 = 256;
      else
        v74 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      WORD4(v664[2]) = v74 | BYTE8(v649);
      BYTE10(v664[2]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B98);
      sub_24A65F11C();
      sub_24A65F1C8();
      sub_24A77AB28();
      v75 = *(_QWORD *)&v696[4];
      v76 = WORD4(v696[4]);
      v77 = BYTE10(v696[4]);
      v78 = v696[1];
      v79 = v628;
      *v628 = v696[0];
      v79[1] = v78;
      v80 = v696[3];
      v79[2] = v696[2];
      v79[3] = v80;
      *((_QWORD *)v79 + 8) = v75;
      *((_WORD *)v79 + 36) = v76;
      *((_BYTE *)v79 + 74) = v77;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v81 = (uint64_t)v632;
      sub_24A77AB28();
      v82 = &qword_2579479B0;
      sub_24A63CCC0(v81, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v83 = v587;
      goto LABEL_74;
    case 2:
      v83 = (char *)&v575 - v62;
      sub_24A779550();
      sub_24A779874();
      v85 = v84;
      swift_release();
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v663[0] = v85;
      *(int64x2_t *)((char *)v663 + 8) = vdupq_n_s64(1uLL);
      *((_QWORD *)&v663[1] + 1) = v639;
      *(_QWORD *)&v664[0] = KeyPath;
      WORD4(v664[0]) = 0;
      v86 = v639;
      goto LABEL_17;
    case 4:
      v587 = (char *)&v575 - v62;
      v87 = v639;
      v88 = v634;
      sub_24A77958C();
      v90 = v89;
      sub_24A77952C();
      v91 = sub_24A7791E4();
      swift_release();
      v92 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v87;
      *((_QWORD *)&v696[0] + 1) = 4;
      *(_QWORD *)&v696[1] = v88;
      *((_QWORD *)&v696[1] + 1) = v92;
      *(_QWORD *)&v696[2] = 0;
      *((_QWORD *)&v696[2] + 1) = v90;
      *(_QWORD *)&v696[4] = 0;
      v696[3] = v91 & 1;
      BYTE8(v696[4]) = 1;
      v93 = v87;
      v94 = v88;
      sub_24A63BEC0(v92, 0);
      sub_24A65F0B4();
      sub_24A65EBBC();
      sub_24A77AB28();
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      WORD4(v696[4]) = BYTE8(v664[2]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B88);
      sub_24A63F3CC(&qword_257947B70, &qword_257947B78, (uint64_t (*)(void))sub_24A65F0B4, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A77AB28();
      if (BYTE9(v649))
        v95 = 256;
      else
        v95 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      WORD4(v664[2]) = v95 | BYTE8(v649);
      BYTE10(v664[2]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B98);
      sub_24A65F11C();
      sub_24A65F1C8();
      sub_24A77AB28();
      v96 = *(_QWORD *)&v696[4];
      v97 = WORD4(v696[4]);
      v98 = BYTE10(v696[4]);
      v99 = v696[1];
      v100 = v628;
      *v628 = v696[0];
      v100[1] = v99;
      v101 = v696[3];
      v100[2] = v696[2];
      v100[3] = v101;
      *((_QWORD *)v100 + 8) = v96;
      *((_WORD *)v100 + 36) = v97;
      *((_BYTE *)v100 + 74) = v98;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v102 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CCC0(v102, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v103 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v102, &qword_2579479B0);
      sub_24A63CCC0(v103, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v104 = v103;
      goto LABEL_123;
    case 5:
      v587 = (char *)&v575 - v62;
      sub_24A77955C();
      v639 = (id)sub_24A779910();
      LODWORD(v634) = v105;
      swift_release();
      sub_24A77955C();
      sub_24A77991C();
      swift_release();
      sub_24A77955C();
      LODWORD(v633) = sub_24A779928();
      swift_release();
      sub_24A77952C();
      LODWORD(v631) = sub_24A7791D8();
      swift_release();
      sub_24A77952C();
      v106 = sub_24A7791FC();
      swift_release();
      v107 = (uint64_t)v577;
      v108 = &v577[v51[9]];
      *(_QWORD *)v108 = swift_getKeyPath();
      v108[8] = 0;
      v109 = v107 + v51[10];
      *(_QWORD *)v109 = swift_getKeyPath();
      *(_BYTE *)(v109 + 8) = 0;
      v110 = v107 + v51[11];
      *(_QWORD *)v110 = swift_getKeyPath();
      *(_BYTE *)(v110 + 8) = 0;
      *(_QWORD *)(v107 + v51[12]) = 0x3FD6666666666666;
      v111 = (_QWORD *)(v107 + v51[13]);
      *v111 = 0;
      v111[1] = 0;
      *(_QWORD *)v107 = v639;
      *(_BYTE *)(v107 + 8) = v634 & 1;
      v112 = v107;
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v107 + v51[5], v50, v47);
      *(_BYTE *)(v107 + v51[6]) = v633 & 1;
      *(_BYTE *)(v107 + v51[7]) = v631 & 1;
      *(_BYTE *)(v107 + v51[8]) = v106 & 1;
      sub_24A65FAD0(v107, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for HeartRateMetricView);
      swift_storeEnumTagMultiPayload();
      sub_24A63C880(&qword_257947B18, (uint64_t (*)(uint64_t))type metadata accessor for HeartRateMetricView, (uint64_t)&protocol conformance descriptor for HeartRateMetricView);
      sub_24A65EF44();
      v113 = (uint64_t)v591;
      sub_24A77AB28();
      sub_24A63CCC0(v113, (uint64_t)v603, &qword_257947970);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B00);
      sub_24A65F514(&qword_257947AF8, &qword_257947B00, (uint64_t (*)(void))sub_24A65EE7C);
      sub_24A65EEC0();
      v114 = (uint64_t)v606;
      sub_24A77AB28();
      sub_24A63CD04(v113, &qword_257947970);
      sub_24A63CCC0(v114, v619, &qword_2579479A0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDF8();
      sub_24A65EF88();
      v115 = (uint64_t)v622;
      sub_24A77AB28();
      sub_24A63CD04(v114, &qword_2579479A0);
      sub_24A63CCC0(v115, (uint64_t)v628, &qword_2579479A8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v116 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CD04(v115, &qword_2579479A8);
      sub_24A63CCC0(v116, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v117 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v116, &qword_2579479B0);
      sub_24A63CCC0(v117, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04(v117, &qword_2579479B8);
      sub_24A65FB14(v112, (uint64_t (*)(_QWORD))type metadata accessor for HeartRateMetricView);
      return;
    case 7:
      v83 = (char *)&v575 - v62;
      sub_24A779550();
      sub_24A779868();
      v119 = v118;
      swift_release();
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v663[0] = v119;
      *(_OWORD *)((char *)v663 + 8) = xmmword_24A780060;
      *((_QWORD *)&v663[1] + 1) = v639;
      *(_QWORD *)&v664[0] = KeyPath;
      WORD4(v664[0]) = 256;
      v86 = v639;
LABEL_17:
      v72 = v86;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65EE7C();
      sub_24A77AB28();
      v120 = *(_QWORD *)&v696[2];
      v121 = BYTE8(v696[2]);
      v122 = BYTE9(v696[2]);
      v123 = v696[1];
      v124 = v603;
      *v603 = v696[0];
      v124[1] = v123;
      *((_QWORD *)v124 + 4) = v120;
      *((_BYTE *)v124 + 40) = v121;
      *((_BYTE *)v124 + 41) = v122;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B00);
      sub_24A65F514(&qword_257947AF8, &qword_257947B00, (uint64_t (*)(void))sub_24A65EE7C);
      sub_24A65EEC0();
      v125 = (uint64_t)v606;
      sub_24A77AB28();
      sub_24A63CCC0(v125, v619, &qword_2579479A0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDF8();
      sub_24A65EF88();
      v126 = (uint64_t)v622;
      sub_24A77AB28();
      sub_24A63CD04(v125, &qword_2579479A0);
      sub_24A63CCC0(v126, (uint64_t)v628, &qword_2579479A8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v81 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CD04(v126, &qword_2579479A8);
      v82 = &qword_2579479B0;
      sub_24A63CCC0(v81, v637, &qword_2579479B0);
      goto LABEL_73;
    case 8:
      v127 = (char *)&v575 - v62;
      v128 = v639;
      v129 = v634;
      sub_24A779580();
      v131 = v130;
      sub_24A77952C();
      v132 = sub_24A7791E4();
      swift_release();
      v92 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v128;
      *((_QWORD *)&v696[0] + 1) = 8;
      *(_QWORD *)&v696[1] = v129;
      *((_QWORD *)&v696[1] + 1) = v92;
      *(_QWORD *)&v696[2] = 0;
      *((_QWORD *)&v696[2] + 1) = v131;
      *(_QWORD *)&v696[4] = 0;
      v696[3] = v132 & 1;
      BYTE8(v696[4]) = 0;
      v93 = v128;
      v94 = v129;
      sub_24A63BEC0(v92, 0);
      sub_24A65EBBC();
      sub_24A77AB28();
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      BYTE8(v696[4]) = BYTE8(v664[2]);
      BYTE9(v696[4]) = 1;
      goto LABEL_118;
    case 9:
      v587 = (char *)&v575 - v62;
      sub_24A779538();
      sub_24A77982C();
      sub_24A63C880((unint64_t *)&qword_257947CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5E80], MEMORY[0x24BEC5E78]);
      v133 = v639;
      *(_QWORD *)&v696[0] = sub_24A77A57C();
      *((_QWORD *)&v696[0] + 1) = v134;
      v696[1] = (unint64_t)v133;
      v696[2] = 0uLL;
      LOWORD(v696[3]) = 256;
      sub_24A65F26C();
      sub_24A65F2B0();
      swift_retain();
      v135 = v133;
      sub_24A77AB28();
      if (BYTE1(v664[1]))
        v136 = 256;
      else
        v136 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      *(_QWORD *)&v696[4] = 0;
      v696[3] = (unint64_t)v136 | (unsigned __int128)LOBYTE(v664[1]);
      WORD4(v696[4]) = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BA8);
      sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A63F3CC(&qword_257947BA0, &qword_257947BA8, (uint64_t (*)(void))sub_24A65F26C, (uint64_t (*)(void))sub_24A65F2B0);
      sub_24A77AB28();
      if (BYTE9(v649))
        v137 = 256;
      else
        v137 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      WORD4(v664[2]) = v137 | BYTE8(v649);
      BYTE10(v664[2]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B98);
      sub_24A65F11C();
      sub_24A65F1C8();
      sub_24A77AB28();
      v138 = *(_QWORD *)&v696[4];
      v139 = WORD4(v696[4]);
      v140 = BYTE10(v696[4]);
      v141 = v696[1];
      v142 = v628;
      *v628 = v696[0];
      v142[1] = v141;
      v143 = v696[3];
      v142[2] = v696[2];
      v142[3] = v143;
      *((_QWORD *)v142 + 8) = v138;
      *((_WORD *)v142 + 36) = v139;
      *((_BYTE *)v142 + 74) = v140;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v144 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CCC0(v144, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v145 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v144, &qword_2579479B0);
      sub_24A63CCC0(v145, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04(v145, &qword_2579479B8);

      goto LABEL_183;
    case 10:
      v146 = (char *)&v575 - v62;
      v147 = sub_24A7795C8();
      v149 = v148;
      v150 = swift_getKeyPath();
      KeyPath = v150;
      if ((v149 & 1) != 0)
        v151 = 0;
      else
        v151 = v147;
      *(_QWORD *)&v696[0] = 10;
      *((_QWORD *)&v696[0] + 1) = v151;
      *(_QWORD *)&v696[1] = v639;
      *((_QWORD *)&v696[1] + 1) = v150;
      LOWORD(v696[2]) = 0;
      v72 = v639;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65E998();
      sub_24A65F424();
      sub_24A77AB28();
      v152 = LOBYTE(v664[0]);
      v153 = 256;
      if (!BYTE1(v664[0]))
        v153 = 0;
      goto LABEL_64;
    case 11:
      v587 = (char *)&v575 - v62;
      v154 = v634;
      sub_24A779544();
      v155 = sub_24A77985C();
      v157 = v156;
      swift_release();
      v158 = v157 & 1;
      v159 = v639;
      sub_24A77952C();
      v160 = sub_24A7791D8();
      swift_release();
      sub_24A77952C();
      v161 = sub_24A7791FC();
      swift_release();
      v162 = swift_getKeyPath();
      v163 = swift_getKeyPath();
      v164 = swift_getKeyPath();
      v165 = v164;
      *(_QWORD *)&v696[0] = v154;
      *((_QWORD *)&v696[0] + 1) = v155;
      if ((v161 & 1) != 0)
        v166 = 256;
      else
        v166 = 0;
      *(_QWORD *)&v696[1] = v158;
      *((_QWORD *)&v696[1] + 1) = 11;
      *(_QWORD *)&v696[2] = v159;
      *((_QWORD *)&v696[2] + 1) = v166 & 0xFFFFFFFFFFFFFFFELL | v160 & 1;
      v696[3] = (unint64_t)v162;
      v696[4] = (unint64_t)v163;
      *(_QWORD *)&v696[5] = v164;
      WORD4(v696[5]) = 0;
      goto LABEL_40;
    case 12:
      v587 = (char *)&v575 - v62;
      v154 = v634;
      sub_24A779544();
      v167 = sub_24A779850();
      v169 = v168;
      swift_release();
      v170 = v169 & 1;
      v159 = v639;
      sub_24A77952C();
      v171 = sub_24A7791D8();
      swift_release();
      sub_24A77952C();
      v172 = sub_24A7791FC();
      swift_release();
      v162 = swift_getKeyPath();
      v163 = swift_getKeyPath();
      v173 = swift_getKeyPath();
      v165 = v173;
      *(_QWORD *)&v696[0] = v154;
      *((_QWORD *)&v696[0] + 1) = v167;
      if ((v172 & 1) != 0)
        v174 = 256;
      else
        v174 = 0;
      *(_QWORD *)&v696[1] = v170;
      *((_QWORD *)&v696[1] + 1) = 12;
      *(_QWORD *)&v696[2] = v159;
      *((_QWORD *)&v696[2] + 1) = v174 & 0xFFFFFFFFFFFFFFFELL | v171 & 1;
      v696[3] = (unint64_t)v162;
      v696[4] = (unint64_t)v163;
      *(_QWORD *)&v696[5] = v173;
      WORD4(v696[5]) = 256;
LABEL_40:
      v644 = v154;
      v175 = v159;
      sub_24A63BEC0(v162, 0);
      sub_24A63BEC0(v163, 0);
      sub_24A63BEC0(v165, 0);
      sub_24A65F578();
      sub_24A77AB28();
      if (BYTE9(v664[3]))
        v176 = 256;
      else
        v176 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      v696[4] = v664[2];
      *(_QWORD *)&v696[5] = *(_QWORD *)&v664[3];
      WORD4(v696[5]) = v176 | BYTE8(v664[3]);
      BYTE10(v696[5]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C48);
      sub_24A65F514(&qword_257947C28, &qword_257947C30, (uint64_t (*)(void))sub_24A65F578);
      sub_24A63F3CC(&qword_257947C40, &qword_257947C48, (uint64_t (*)(void))sub_24A65F578, (uint64_t (*)(void))sub_24A65F5BC);
      sub_24A77AB28();
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      v664[2] = v649;
      *(_QWORD *)&v664[3] = v650;
      WORD4(v664[3]) = v651;
      BYTE10(v664[3]) = v652 != 0;
      BYTE11(v664[3]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BE0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C20);
      sub_24A65F33C();
      sub_24A65F468();
      sub_24A77AB28();
      v177 = *(_QWORD *)&v696[5];
      v178 = WORD4(v696[5]);
      v179 = BYTE10(v696[5]);
      v180 = BYTE11(v696[5]);
      v181 = v696[1];
      v182 = v630;
      *v630 = v696[0];
      v182[1] = v181;
      v183 = v696[3];
      v182[2] = v696[2];
      v182[3] = v183;
      v182[4] = v696[4];
      *((_QWORD *)v182 + 10) = v177;
      *((_BYTE *)v182 + 90) = v179;
      *((_WORD *)v182 + 44) = v178;
      *((_BYTE *)v182 + 91) = v180;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v184 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CCC0(v184, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v185 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v184, &qword_257947930);
      sub_24A63CCC0(v185, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04(v185, &qword_2579479B8);

      goto LABEL_113;
    case 13:
      v186 = (char *)&v575 - v62;
      sub_24A7795F8();
      *(_QWORD *)&v696[0] = v187;
      v188 = v639;
      *((_QWORD *)&v696[0] + 1) = v639;
      memset(&v696[1], 0, 73);
      BYTE9(v696[5]) = 1;
      sub_24A65F578();
      sub_24A65F5BC();
      v189 = v188;
      sub_24A77AB28();
      if (BYTE9(v664[3]))
        v190 = 256;
      else
        v190 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      v696[4] = v664[2];
      *(_QWORD *)&v696[5] = *(_QWORD *)&v664[3];
      WORD4(v696[5]) = v190 | BYTE8(v664[3]);
      BYTE10(v696[5]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C48);
      sub_24A65F514(&qword_257947C28, &qword_257947C30, (uint64_t (*)(void))sub_24A65F578);
      sub_24A63F3CC(&qword_257947C40, &qword_257947C48, (uint64_t (*)(void))sub_24A65F578, (uint64_t (*)(void))sub_24A65F5BC);
      sub_24A77AB28();
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      v664[2] = v649;
      *(_QWORD *)&v664[3] = v650;
      WORD4(v664[3]) = v651;
      BYTE10(v664[3]) = v652 != 0;
      BYTE11(v664[3]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BE0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C20);
      sub_24A65F33C();
      sub_24A65F468();
      sub_24A77AB28();
      v191 = *(_QWORD *)&v696[5];
      v192 = WORD4(v696[5]);
      v193 = BYTE10(v696[5]);
      v194 = BYTE11(v696[5]);
      v195 = v696[1];
      v196 = v630;
      *v630 = v696[0];
      v196[1] = v195;
      v197 = v696[3];
      v196[2] = v696[2];
      v196[3] = v197;
      v196[4] = v696[4];
      *((_QWORD *)v196 + 10) = v191;
      *((_BYTE *)v196 + 90) = v193;
      *((_WORD *)v196 + 44) = v192;
      *((_BYTE *)v196 + 91) = v194;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v198 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CCC0(v198, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v198, &qword_257947930);
      v199 = &qword_2579479B8;
      sub_24A63CCC0((uint64_t)v186, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v200 = (uint64_t)v186;
      goto LABEL_150;
    case 14:
      v127 = (char *)&v575 - v62;
      v201 = v639;
      v202 = v634;
      sub_24A7795A4();
      v204 = v203;
      sub_24A77952C();
      v205 = sub_24A7791E4();
      swift_release();
      v92 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v201;
      *((_QWORD *)&v696[0] + 1) = 14;
      *(_QWORD *)&v696[1] = v202;
      *((_QWORD *)&v696[1] + 1) = v92;
      *(_QWORD *)&v696[2] = 0;
      *((_QWORD *)&v696[2] + 1) = v204;
      *(_QWORD *)&v696[4] = 0;
      v696[3] = v205 & 1;
      BYTE8(v696[4]) = 0;
      goto LABEL_103;
    case 15:
      v206 = (char *)&v575 - v62;
      v207 = v634;
      v208 = sub_24A7795EC();
      v210 = v209 & 1;
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v207;
      *((_QWORD *)&v696[0] + 1) = v208;
      *(_QWORD *)&v696[1] = v210;
      *((_QWORD *)&v696[1] + 1) = 15;
      v696[2] = (unint64_t)v639;
      *(_QWORD *)&v696[3] = 0;
      *((_QWORD *)&v696[3] + 1) = KeyPath;
      LOWORD(v696[4]) = 0;
      v211 = v639;
      v72 = v207;
      v212 = v211;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65F3E0();
      sub_24A77AB28();
      v213 = LOBYTE(v664[2]);
      if (BYTE1(v664[2]))
        v214 = 256;
      else
        v214 = 0;
      goto LABEL_55;
    case 16:
      v206 = (char *)&v575 - v62;
      v215 = v634;
      v216 = sub_24A7795E0();
      v218 = v217 & 1;
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v215;
      *((_QWORD *)&v696[0] + 1) = v216;
      *(_QWORD *)&v696[1] = v218;
      *((_QWORD *)&v696[1] + 1) = 16;
      v696[2] = (unint64_t)v639;
      *(_QWORD *)&v696[3] = 0;
      *((_QWORD *)&v696[3] + 1) = KeyPath;
      LOWORD(v696[4]) = 256;
      v219 = v639;
      v72 = v215;
      v212 = v219;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65F3E0();
      sub_24A77AB28();
      v213 = LOBYTE(v664[2]);
      if (BYTE1(v664[2]))
        v214 = 256;
      else
        v214 = 0;
LABEL_55:
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      LOWORD(v696[4]) = v214 | v213;
      BYTE2(v696[4]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C08);
      sub_24A65F514(&qword_257947BE8, &qword_257947BF0, (uint64_t (*)(void))sub_24A65F3E0);
      sub_24A63F3CC(&qword_257947C00, &qword_257947C08, (uint64_t (*)(void))sub_24A65E998, (uint64_t (*)(void))sub_24A65F424);
      sub_24A77AB28();
      v220 = 0x10000;
      if (!BYTE2(v649))
        v220 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[3] = 0;
      v664[2] = (unint64_t)v220 | (unsigned __int128)(unsigned __int16)v649;
      DWORD2(v664[3]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BE0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C20);
      sub_24A65F33C();
      sub_24A65F468();
      sub_24A77AB28();
      v221 = *(_QWORD *)&v696[5];
      v222 = WORD4(v696[5]);
      v223 = BYTE10(v696[5]);
      v224 = BYTE11(v696[5]);
      v225 = v696[1];
      v226 = v630;
      *v630 = v696[0];
      v226[1] = v225;
      v227 = v696[3];
      v226[2] = v696[2];
      v226[3] = v227;
      v226[4] = v696[4];
      *((_QWORD *)v226 + 10) = v221;
      *((_BYTE *)v226 + 90) = v223;
      *((_WORD *)v226 + 44) = v222;
      *((_BYTE *)v226 + 91) = v224;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v228 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CCC0(v228, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v228, &qword_257947930);
      sub_24A63CCC0((uint64_t)v206, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04((uint64_t)v206, &qword_2579479B8);
      swift_bridgeObjectRelease();

      goto LABEL_76;
    case 17:
      v146 = (char *)&v575 - v62;
      v229 = sub_24A779628();
      v231 = v230 & 1;
      sub_24A77952C();
      v232 = sub_24A7791E4();
      swift_release();
      v233 = swift_getKeyPath();
      KeyPath = v233;
      if ((v232 & 1) != 0)
        v234 = 256;
      else
        v234 = 0;
      *(_QWORD *)&v696[0] = v229;
      *((_QWORD *)&v696[0] + 1) = v234 | v231;
      *(_QWORD *)&v696[1] = v639;
      *((_QWORD *)&v696[1] + 1) = v233;
      LOWORD(v696[2]) = 256;
      v72 = v639;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65E998();
      sub_24A65F424();
      sub_24A77AB28();
      v152 = LOBYTE(v664[0]);
      if (BYTE1(v664[0]))
        v153 = 256;
      else
        v153 = 0;
LABEL_64:
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = (unint64_t)v153 | (unsigned __int128)v152;
      memset(&v696[3], 0, 18);
      BYTE2(v696[4]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C08);
      sub_24A65F514(&qword_257947BE8, &qword_257947BF0, (uint64_t (*)(void))sub_24A65F3E0);
      sub_24A63F3CC(&qword_257947C00, &qword_257947C08, (uint64_t (*)(void))sub_24A65E998, (uint64_t (*)(void))sub_24A65F424);
      sub_24A77AB28();
      v235 = 0x10000;
      if (!BYTE2(v649))
        v235 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[3] = 0;
      v664[2] = (unint64_t)v235 | (unsigned __int128)(unsigned __int16)v649;
      DWORD2(v664[3]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BE0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C20);
      sub_24A65F33C();
      sub_24A65F468();
      sub_24A77AB28();
      v236 = *(_QWORD *)&v696[5];
      v237 = WORD4(v696[5]);
      v238 = BYTE10(v696[5]);
      v239 = BYTE11(v696[5]);
      v240 = v696[1];
      v241 = v630;
      *v630 = v696[0];
      v241[1] = v240;
      v242 = v696[3];
      v241[2] = v696[2];
      v241[3] = v242;
      v241[4] = v696[4];
      *((_QWORD *)v241 + 10) = v236;
      *((_BYTE *)v241 + 90) = v238;
      *((_WORD *)v241 + 44) = v237;
      *((_BYTE *)v241 + 91) = v239;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v243 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CCC0(v243, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v243, &qword_257947930);
      sub_24A63CCC0((uint64_t)v146, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v244 = (uint64_t)v146;
      goto LABEL_75;
    case 21:
      v245 = (char *)&v575 - v62;
      v246 = sub_24A7795BC();
      sub_24A77961C();
      v248 = v247;
      sub_24A77952C();
      v249 = sub_24A7791D8();
      swift_release();
      v250 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v246;
      *((_QWORD *)&v696[0] + 1) = v248;
      *(_QWORD *)&v696[1] = v249 & 1;
      *((_QWORD *)&v696[1] + 1) = v250;
      memset(&v696[2], 0, 17);
      sub_24A63BEC0(v250, 0);
      sub_24A65F66C();
      sub_24A65EB78();
      sub_24A77AB28();
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      *(_QWORD *)&v664[2] = 0;
      v664[1] = v648;
      WORD4(v664[2]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C90);
      sub_24A65F648();
      sub_24A65F6B0();
      sub_24A77AB28();
      v251 = *(_QWORD *)&v696[4];
      v252 = BYTE8(v696[4]);
      v253 = BYTE9(v696[4]);
      v254 = v696[1];
      v255 = v623;
      *v623 = v696[0];
      v255[1] = v254;
      v256 = v696[3];
      v255[2] = v696[2];
      v255[3] = v256;
      *((_QWORD *)v255 + 8) = v251;
      *((_BYTE *)v255 + 72) = v252;
      *((_BYTE *)v255 + 73) = v253;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C68);
      sub_24A65F624();
      sub_24A65F6D4();
      v257 = (uint64_t)v625;
      sub_24A77AB28();
      sub_24A63CCC0(v257, (uint64_t)v630, &qword_257947920);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v258 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CD04(v257, &qword_257947920);
      v259 = &qword_257947930;
      sub_24A63CCC0(v258, v637, &qword_257947930);
      goto LABEL_98;
    case 22:
      v260 = (char *)&v575 - v62;
      sub_24A779610();
      v262 = v261;
      v263 = v639;
      v264 = FIUIDistanceTypeForActivityType();
      sub_24A779520();
      sub_24A7799F4();
      swift_release();
      v265 = sub_24A7798A4();
      v267 = v266;
      swift_release();
      *(_QWORD *)&v696[0] = v262;
      *((_QWORD *)&v696[0] + 1) = v263;
      *(_QWORD *)&v696[1] = v264;
      *((_QWORD *)&v696[1] + 1) = v265;
      *(_QWORD *)&v696[2] = v267 & 1;
      *((_QWORD *)&v696[2] + 1) = 22;
      LOBYTE(v696[3]) = 1;
      sub_24A65F66C();
      sub_24A65EB78();
      v268 = v263;
      sub_24A77AB28();
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      *(_QWORD *)&v664[2] = 0;
      v664[1] = v648;
      WORD4(v664[2]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C90);
      sub_24A65F648();
      sub_24A65F6B0();
      sub_24A77AB28();
      v269 = *(_QWORD *)&v696[4];
      v270 = BYTE8(v696[4]);
      v271 = BYTE9(v696[4]);
      v272 = v696[1];
      v273 = v623;
      *v623 = v696[0];
      v273[1] = v272;
      v274 = v696[3];
      v273[2] = v696[2];
      v273[3] = v274;
      *((_QWORD *)v273 + 8) = v269;
      *((_BYTE *)v273 + 72) = v270;
      *((_BYTE *)v273 + 73) = v271;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C68);
      sub_24A65F624();
      sub_24A65F6D4();
      v275 = (uint64_t)v625;
      sub_24A77AB28();
      sub_24A63CCC0(v275, (uint64_t)v630, &qword_257947920);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v276 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CD04(v275, &qword_257947920);
      sub_24A63CCC0(v276, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v276, &qword_257947930);
      sub_24A63CCC0((uint64_t)v260, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04((uint64_t)v260, &qword_2579479B8);

      return;
    case 23:
      v277 = (char *)&v575 - v62;
      v278 = v639;
      v279 = v634;
      sub_24A7795B0();
      v281 = v280;
      sub_24A77952C();
      v282 = sub_24A7791E4();
      swift_release();
      v92 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v278;
      *((_QWORD *)&v696[0] + 1) = 23;
      *(_QWORD *)&v696[1] = v279;
      *((_QWORD *)&v696[1] + 1) = v92;
      *(_QWORD *)&v696[2] = 0;
      *((_QWORD *)&v696[2] + 1) = v281;
      *(_QWORD *)&v696[4] = 0;
      v696[3] = v282 & 1;
      BYTE8(v696[4]) = 0;
      v644 = v278;
      v283 = v279;
      sub_24A63BEC0(v92, 0);
      sub_24A65EBBC();
      sub_24A65EE7C();
      sub_24A77AB28();
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      BYTE8(v664[2]) = BYTE8(v649);
      BYTE9(v664[2]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C90);
      sub_24A65F648();
      sub_24A65F6B0();
      sub_24A77AB28();
      v284 = *(_QWORD *)&v696[4];
      v285 = BYTE8(v696[4]);
      v286 = BYTE9(v696[4]);
      v287 = v696[1];
      v288 = v623;
      *v623 = v696[0];
      v288[1] = v287;
      v289 = v696[3];
      v288[2] = v696[2];
      v288[3] = v289;
      *((_QWORD *)v288 + 8) = v284;
      *((_BYTE *)v288 + 72) = v285;
      *((_BYTE *)v288 + 73) = v286;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C68);
      sub_24A65F624();
      sub_24A65F6D4();
      v290 = (uint64_t)v625;
      sub_24A77AB28();
      sub_24A63CCC0(v290, (uint64_t)v630, &qword_257947920);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v291 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CD04(v290, &qword_257947920);
      sub_24A63CCC0(v291, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v291, &qword_257947930);
      sub_24A63CCC0((uint64_t)v277, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04((uint64_t)v277, &qword_2579479B8);

      goto LABEL_125;
    case 24:
      v83 = (char *)&v575 - v62;
      sub_24A779670();
      v293 = v292;
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v293;
      *(_OWORD *)((char *)v696 + 8) = xmmword_24A780050;
      *((_QWORD *)&v696[1] + 1) = v639;
      *(_QWORD *)&v696[2] = KeyPath;
      *(_OWORD *)((char *)&v696[2] + 8) = 0u;
      *(_OWORD *)((char *)&v696[3] + 8) = 0u;
      BYTE8(v696[4]) = 1;
      v72 = v639;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65EBBC();
      sub_24A65EE7C();
      sub_24A77AB28();
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      BYTE8(v664[2]) = BYTE8(v649);
      BYTE9(v664[2]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C90);
      sub_24A65F648();
      sub_24A65F6B0();
      sub_24A77AB28();
      v294 = *(_QWORD *)&v696[4];
      v295 = BYTE8(v696[4]);
      v296 = BYTE9(v696[4]);
      v297 = v696[1];
      v298 = v623;
      *v623 = v696[0];
      v298[1] = v297;
      v299 = v696[3];
      v298[2] = v696[2];
      v298[3] = v299;
      *((_QWORD *)v298 + 8) = v294;
      *((_BYTE *)v298 + 72) = v295;
      *((_BYTE *)v298 + 73) = v296;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C68);
      sub_24A65F624();
      sub_24A65F6D4();
      v300 = (uint64_t)v625;
      sub_24A77AB28();
      goto LABEL_72;
    case 25:
      v83 = (char *)&v575 - v62;
      sub_24A77964C();
      v302 = v301;
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v663[0] = v302;
      *(int64x2_t *)((char *)v663 + 8) = vdupq_n_s64(3uLL);
      *((_QWORD *)&v663[1] + 1) = v639;
      *(_QWORD *)&v664[0] = KeyPath;
      *(_OWORD *)((char *)v664 + 8) = 0u;
      *(_OWORD *)((char *)&v664[1] + 8) = 0u;
      *(_OWORD *)((char *)&v664[2] + 8) = 0u;
      WORD4(v664[3]) = 0;
      v72 = v639;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65EE7C();
      sub_24A65F578();
      sub_24A77AB28();
      v303 = *(_QWORD *)&v696[5];
      v304 = BYTE8(v696[5]);
      v305 = BYTE9(v696[5]);
      v306 = v696[1];
      v307 = v614;
      *v614 = v696[0];
      v307[1] = v306;
      v308 = v696[3];
      v307[2] = v696[2];
      v307[3] = v308;
      v307[4] = v696[4];
      *((_QWORD *)v307 + 10) = v303;
      *((_BYTE *)v307 + 88) = v304;
      *((_BYTE *)v307 + 89) = v305;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CA8);
      sub_24A65F6F8();
      sub_24A65F71C();
      v309 = (uint64_t)v616;
      sub_24A77AB28();
      sub_24A63CCC0(v309, (uint64_t)v623, &qword_257947910);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C68);
      sub_24A65F624();
      sub_24A65F6D4();
      v300 = (uint64_t)v625;
      sub_24A77AB28();
      sub_24A63CD04(v309, &qword_257947910);
LABEL_72:
      sub_24A63CCC0(v300, (uint64_t)v630, &qword_257947920);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v81 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CD04(v300, &qword_257947920);
      v82 = &qword_257947930;
      sub_24A63CCC0(v81, v637, &qword_257947930);
LABEL_73:
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
LABEL_74:
      sub_24A77AB28();
      sub_24A63CD04(v81, v82);
      sub_24A63CCC0((uint64_t)v83, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v244 = (uint64_t)v83;
LABEL_75:
      sub_24A63CD04(v244, &qword_2579479B8);
      goto LABEL_76;
    case 26:
      v311 = sub_24A779664();
      *(_QWORD *)&v696[0] = 26;
      *((_QWORD *)&v696[0] + 1) = v311;
      *(_QWORD *)&v696[1] = v312 & 1;
      v313 = v639;
      *((_QWORD *)&v696[1] + 1) = v639;
      LOBYTE(v696[2]) = 0;
      goto LABEL_80;
    case 27:
      v314 = sub_24A779658();
      *(_QWORD *)&v696[0] = 27;
      *((_QWORD *)&v696[0] + 1) = v314;
      *(_QWORD *)&v696[1] = v315 & 1;
      v313 = v639;
      *((_QWORD *)&v696[1] + 1) = v639;
      LOBYTE(v696[2]) = 1;
LABEL_80:
      sub_24A65EC00();
      v316 = v313;
      sub_24A77AB28();
      v696[0] = v645;
      v696[1] = v646;
      *(_QWORD *)&v696[2] = v647;
      *(_OWORD *)((char *)&v696[2] + 8) = 0u;
      *(_OWORD *)((char *)&v696[3] + 8) = 0u;
      WORD4(v696[4]) = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A78);
      sub_24A63F3CC(&qword_257947A50, &qword_257947A58, (uint64_t (*)(void))sub_24A65EB78, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A65F514(&qword_257947A70, &qword_257947A78, (uint64_t (*)(void))sub_24A65EC00);
      sub_24A77AB28();
      if (BYTE9(v664[2]))
        v317 = 256;
      else
        v317 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      WORD4(v696[4]) = v317 | BYTE8(v664[2]);
      BYTE10(v696[4]) = 0;
      goto LABEL_144;
    case 28:
      v318 = sub_24A7796AC();
      *(_QWORD *)&v696[0] = 28;
      *((_QWORD *)&v696[0] + 1) = v318;
      *(_QWORD *)&v696[1] = v319 & 1;
      v320 = v639;
      *((_QWORD *)&v696[1] + 1) = v639;
      LOBYTE(v696[2]) = 0;
      sub_24A65ECE0();
      v321 = v320;
      sub_24A77AB28();
      v696[0] = v645;
      v696[1] = v646;
      LOWORD(v696[2]) = v647;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AB8);
      sub_24A65F514(&qword_257947A98, &qword_257947AA0, (uint64_t (*)(void))sub_24A65ECE0);
      sub_24A65F514(&qword_257947AB0, &qword_257947AB8, (uint64_t (*)(void))sub_24A65ED24);
      sub_24A77AB28();
      v322 = 256;
      if (!BYTE1(v664[0]))
        v322 = 0;
      goto LABEL_143;
    case 29:
      v323 = sub_24A7796A0();
      *(_QWORD *)&v696[0] = 29;
      *((_QWORD *)&v696[0] + 1) = v323;
      *(_QWORD *)&v696[1] = v324 & 1;
      v325 = v639;
      *((_QWORD *)&v696[1] + 1) = v639;
      LOBYTE(v696[2]) = 1;
      sub_24A65ECE0();
      v326 = v325;
      sub_24A77AB28();
      v696[0] = v645;
      v696[1] = v646;
      LOWORD(v696[2]) = v647;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AB8);
      sub_24A65F514(&qword_257947A98, &qword_257947AA0, (uint64_t (*)(void))sub_24A65ECE0);
      sub_24A65F514(&qword_257947AB0, &qword_257947AB8, (uint64_t (*)(void))sub_24A65ED24);
      goto LABEL_141;
    case 30:
      v327 = sub_24A779694();
      *(_QWORD *)&v696[0] = 30;
      *((_QWORD *)&v696[0] + 1) = v327;
      *(_QWORD *)&v696[1] = v328 & 1;
      v329 = v639;
      *((_QWORD *)&v696[1] + 1) = v639;
      LOBYTE(v696[2]) = 0;
      sub_24A65ED24();
      v330 = v329;
      sub_24A77AB28();
      v696[0] = v645;
      v696[1] = v646;
      LOBYTE(v696[2]) = v647;
      goto LABEL_140;
    case 31:
      v458 = sub_24A779688();
      *(_QWORD *)&v696[0] = 31;
      *((_QWORD *)&v696[0] + 1) = v458;
      *(_QWORD *)&v696[1] = v459 & 1;
      v460 = v639;
      *((_QWORD *)&v696[1] + 1) = v639;
      LOBYTE(v696[2]) = 1;
      sub_24A65ED24();
      v461 = v460;
      sub_24A77AB28();
      v696[0] = v645;
      v696[1] = v646;
      LOBYTE(v696[2]) = v647;
LABEL_140:
      BYTE1(v696[2]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AB8);
      sub_24A65F514(&qword_257947A98, &qword_257947AA0, (uint64_t (*)(void))sub_24A65ECE0);
      sub_24A65F514(&qword_257947AB0, &qword_257947AB8, (uint64_t (*)(void))sub_24A65ED24);
LABEL_141:
      sub_24A77AB28();
      v322 = 256;
      if (!BYTE1(v664[0]))
        v322 = 0;
LABEL_143:
      v696[0] = v663[0];
      v696[1] = v663[1];
      *(_QWORD *)&v696[2] = v322 | LOBYTE(v664[0]);
      *(_OWORD *)((char *)&v696[2] + 8) = 0u;
      *(_OWORD *)((char *)&v696[3] + 8) = 0u;
      WORD4(v696[4]) = 0;
      BYTE10(v696[4]) = 1;
LABEL_144:
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A90);
      sub_24A65EAD4();
      sub_24A65EC44();
      sub_24A77AB28();
      v696[0] = v685;
      v696[1] = v686;
      v696[2] = v687;
      v696[3] = v688;
      *(_QWORD *)&v696[4] = v689;
      WORD4(v696[4]) = WORD4(v689);
      BYTE10(v696[4]) = BYTE10(v689);
      sub_24A65F994((uint64_t)v696);
      goto LABEL_145;
    case 34:
      v468 = (char *)&v575 - v62;
      v469 = (uint64_t)v581;
      sub_24A779604();
      sub_24A77952C();
      v470 = swift_getKeyPath();
      v471 = v579;
      *v579 = v470;
      *((_BYTE *)v471 + 8) = 0;
      v471[2] = swift_getKeyPath();
      *((_BYTE *)v471 + 24) = 0;
      v472 = v578;
      v473 = (uint64_t)v471 + *(int *)(v578 + 24);
      v474 = sub_24A778818();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v474 - 8) + 56))(v473, 1, 1, v474);
      v475 = *(int *)(v472 + 28);
      *((_BYTE *)v471 + v475) = 0;
      sub_24A65FA3C(v469, v473);
      *((_BYTE *)v471 + v475) = 0;
      v476 = (uint64_t *)((char *)v471 + *(int *)(v472 + 32));
      sub_24A779208();
      sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
      v477 = sub_24A77A57C();
      v479 = v478;
      sub_24A63CD04(v469, &qword_2579478E8);
      *v476 = v477;
      v476[1] = v479;
      v480 = (uint64_t)v471;
      v481 = v584;
      sub_24A65FA8C(v480, v584, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v482 = (id)qword_2544D6158;
      sub_24A77856C();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v483 = swift_allocObject();
      *(_OWORD *)(v483 + 16) = xmmword_24A780030;
      v484 = sub_24A779574();
      v485 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v483 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v483 + 64) = v485;
      *(_QWORD *)(v483 + 32) = v484;
      v486 = sub_24A77B98C();
      v488 = v487;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v489 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      v490 = MEMORY[0x24BD18928](v489);
      v491 = v586;
      sub_24A65FAD0(v481, v586, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
      v492 = (uint64_t *)(v491 + *(int *)(v583 + 36));
      *v492 = v486;
      v492[1] = v488;
      v492[2] = v490;
      v492[3] = 0x4008000000000000;
      sub_24A65FB14(v481, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
      v493 = objc_msgSend((id)objc_opt_self(), sel_splitsColors);
      v494 = objc_msgSend(v493, sel_valueDisplayColor);

      if (!v494)
      {
        __break(1u);
        JUMPOUT(0x24A65E400);
      }
      v495 = MEMORY[0x24BD189B8](v494);
      v496 = v585;
      sub_24A63CCC0(v491, v585, &qword_257946F30);
      *(_QWORD *)(v496 + *(int *)(v599 + 36)) = v495;
      sub_24A63CD04(v491, &qword_257946F30);
      v199 = &qword_2579478F0;
      v497 = (uint64_t)v587;
      sub_24A63F6C4(v496, (uint64_t)v587, &qword_2579478F0);
      sub_24A63CCC0(v497, (uint64_t)v598, &qword_2579478F0);
      swift_storeEnumTagMultiPayload();
      sub_24A65F578();
      sub_24A65F740();
      v498 = (uint64_t)v600;
      sub_24A77AB28();
      sub_24A63CCC0(v498, (uint64_t)v614, &qword_257947900);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CA8);
      sub_24A65F6F8();
      sub_24A65F71C();
      v499 = (uint64_t)v616;
      sub_24A77AB28();
      sub_24A63CD04(v498, &qword_257947900);
      sub_24A63CCC0(v499, (uint64_t)v623, &qword_257947910);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C68);
      sub_24A65F624();
      sub_24A65F6D4();
      v500 = (uint64_t)v625;
      sub_24A77AB28();
      sub_24A63CD04(v499, &qword_257947910);
      sub_24A63CCC0(v500, (uint64_t)v630, &qword_257947920);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v501 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CD04(v500, &qword_257947920);
      sub_24A63CCC0(v501, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v501, &qword_257947930);
      sub_24A63CCC0((uint64_t)v468, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04((uint64_t)v468, &qword_2579479B8);
      v200 = v497;
LABEL_150:
      sub_24A63CD04(v200, v199);
      return;
    case 35:
      sub_24A7795D4();
      v332 = v331;
      v333 = v639;
      v334 = FIUIDistanceTypeForActivityType();
      *(_QWORD *)&v696[0] = v332;
      *((_QWORD *)&v696[0] + 1) = v333;
      *(_QWORD *)&v696[1] = v334;
      *(_OWORD *)((char *)&v696[1] + 8) = xmmword_24A780020;
      *((_QWORD *)&v696[2] + 1) = 35;
      memset(&v696[3], 0, 25);
      sub_24A65EB78();
      sub_24A65EBBC();
      v335 = v333;
      sub_24A77AB28();
      v696[0] = v645;
      v696[1] = v646;
      v696[2] = v647;
      v696[3] = v648;
      *(_QWORD *)&v696[4] = v649;
      WORD4(v696[4]) = BYTE8(v649);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A78);
      sub_24A63F3CC(&qword_257947A50, &qword_257947A58, (uint64_t (*)(void))sub_24A65EB78, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A65F514(&qword_257947A70, &qword_257947A78, (uint64_t (*)(void))sub_24A65EC00);
      sub_24A77AB28();
      if (BYTE9(v664[2]))
        v336 = 256;
      else
        v336 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      WORD4(v696[4]) = v336 | BYTE8(v664[2]);
      BYTE10(v696[4]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A90);
      sub_24A65EAD4();
      sub_24A65EC44();
      sub_24A77AB28();
      v696[0] = v685;
      v696[1] = v686;
      v696[2] = v687;
      v696[3] = v688;
      *(_QWORD *)&v696[4] = v689;
      WORD4(v696[4]) = WORD4(v689);
      BYTE10(v696[4]) = BYTE10(v689);
      sub_24A65F994((uint64_t)v696);
      sub_24A63F6C4((uint64_t)v696, (uint64_t)&v645, &qword_257947A20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A30);
      sub_24A65EAB0();
      sub_24A65ED68();
      sub_24A77AB28();
      v337 = v668;
      v338 = v642;
      *(_OWORD *)(v642 + 128) = v667;
      *(_OWORD *)(v338 + 144) = v337;
      *(_DWORD *)(v338 + 160) = v669;
      v339 = v664[3];
      *(_OWORD *)(v338 + 64) = v664[2];
      *(_OWORD *)(v338 + 80) = v339;
      v340 = v666;
      *(_OWORD *)(v338 + 96) = v665;
      *(_OWORD *)(v338 + 112) = v340;
      v341 = v663[1];
      *(_OWORD *)v338 = v663[0];
      *(_OWORD *)(v338 + 16) = v341;
      v342 = v664[1];
      *(_OWORD *)(v338 + 32) = v664[0];
      *(_OWORD *)(v338 + 48) = v342;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();

      return;
    case 36:
      v343 = v639;
      v344 = v634;
      sub_24A7796D0();
      v346 = v345;
      sub_24A77952C();
      v347 = sub_24A7791E4();
      swift_release();
      v92 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v343;
      *((_QWORD *)&v696[0] + 1) = 36;
      *(_QWORD *)&v696[1] = v344;
      *((_QWORD *)&v696[1] + 1) = v92;
      *(_QWORD *)&v696[2] = 0;
      *((_QWORD *)&v696[2] + 1) = v346;
      *(_QWORD *)&v696[4] = 0;
      v696[3] = v347 & 1;
      BYTE8(v696[4]) = 1;
      v93 = v343;
      v94 = v344;
      sub_24A63BEC0(v92, 0);
      sub_24A65EB78();
      sub_24A65EBBC();
      sub_24A77AB28();
      v696[0] = v645;
      v696[1] = v646;
      v696[2] = v647;
      v696[3] = v648;
      *(_QWORD *)&v696[4] = v649;
      WORD4(v696[4]) = BYTE8(v649);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A78);
      sub_24A63F3CC(&qword_257947A50, &qword_257947A58, (uint64_t (*)(void))sub_24A65EB78, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A65F514(&qword_257947A70, &qword_257947A78, (uint64_t (*)(void))sub_24A65EC00);
      sub_24A77AB28();
      if (BYTE9(v664[2]))
        v348 = 256;
      else
        v348 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      WORD4(v696[4]) = v348 | BYTE8(v664[2]);
      BYTE10(v696[4]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A90);
      sub_24A65EAD4();
      sub_24A65EC44();
      sub_24A77AB28();
      v696[0] = v685;
      v696[1] = v686;
      v696[2] = v687;
      v696[3] = v688;
      *(_QWORD *)&v696[4] = v689;
      WORD4(v696[4]) = WORD4(v689);
      BYTE10(v696[4]) = BYTE10(v689);
      sub_24A65F994((uint64_t)v696);
      sub_24A63F6C4((uint64_t)v696, (uint64_t)&v645, &qword_257947A20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A30);
      sub_24A65EAB0();
      sub_24A65ED68();
      sub_24A77AB28();
      v349 = v668;
      v350 = v642;
      *(_OWORD *)(v642 + 128) = v667;
      *(_OWORD *)(v350 + 144) = v349;
      *(_DWORD *)(v350 + 160) = v669;
      v351 = v664[3];
      *(_OWORD *)(v350 + 64) = v664[2];
      *(_OWORD *)(v350 + 80) = v351;
      v352 = v666;
      *(_OWORD *)(v350 + 96) = v665;
      *(_OWORD *)(v350 + 112) = v352;
      v353 = v663[1];
      *(_OWORD *)v350 = v663[0];
      *(_OWORD *)(v350 + 16) = v353;
      v354 = v664[1];
      *(_OWORD *)(v350 + 32) = v664[0];
      *(_OWORD *)(v350 + 48) = v354;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      goto LABEL_124;
    case 37:
      v245 = (char *)&v575 - v62;
      sub_24A77955C();
      v355 = sub_24A779934();
      v357 = v356;
      swift_release();
      sub_24A77955C();
      v358 = sub_24A779928();
      swift_release();
      v359 = swift_getKeyPath();
      v360 = v590;
      *v590 = 1;
      *((_QWORD *)v360 + 1) = v355;
      v360[16] = v357 & 1;
      v360[17] = v358 & 1;
      *((_QWORD *)v360 + 3) = v359;
      v360[32] = 0;
      swift_storeEnumTagMultiPayload();
      sub_24A63BEC0(v359, 0);
      sub_24A65EF44();
      sub_24A63C880(&qword_257947B38, (uint64_t (*)(uint64_t))type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
      v361 = (uint64_t)v592;
      sub_24A77AB28();
      sub_24A63CCC0(v361, v610, &qword_257947958);
      swift_storeEnumTagMultiPayload();
      sub_24A65EFAC();
      sub_24A65F030();
      v362 = (uint64_t)v612;
      sub_24A77AB28();
      sub_24A63CD04(v361, &qword_257947958);
      sub_24A63CCC0(v362, v619, &qword_257947960);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDF8();
      sub_24A65EF88();
      v363 = (uint64_t)v622;
      sub_24A77AB28();
      sub_24A63CD04(v362, &qword_257947960);
      sub_24A63CCC0(v363, (uint64_t)v628, &qword_2579479A8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v258 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CD04(v363, &qword_2579479A8);
      v259 = &qword_2579479B0;
      sub_24A63CCC0(v258, v637, &qword_2579479B0);
LABEL_98:
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      goto LABEL_176;
    case 38:
      v587 = (char *)&v575 - v62;
      (*(void (**)(char *, _QWORD, uint64_t))(v602 + 104))(v28, *MEMORY[0x24BEC5A88], v604);
      sub_24A77955C();
      v364 = sub_24A7798F8();
      swift_release();
      if (v364)
      {
        *((_QWORD *)&v696[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257947D08);
        *(_QWORD *)&v696[2] = sub_24A63CFF0(&qword_257947D10, &qword_257947D08, MEMORY[0x24BEC60C0]);
        *(_QWORD *)&v696[0] = v364;
      }
      else
      {
        memset(v696, 0, 40);
      }
      sub_24A77955C();
      v520 = sub_24A779910();
      v522 = v521;
      swift_release();
      sub_24A77955C();
      v523 = sub_24A7798F8();
      swift_release();
      if (v523)
      {
        v524 = sub_24A779A9C();
        swift_release();
      }
      else
      {
        v524 = 1;
      }
      v532 = (int *)v607;
      v533 = (uint64_t)v593;
      v534 = &v593[*(int *)(v607 + 32)];
      *(_QWORD *)v534 = swift_getKeyPath();
      v534[8] = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v602 + 32))(v533, v28, v604);
      sub_24A63F6C4((uint64_t)v696, v533 + v532[5], &qword_257947CF0);
      v535 = v533 + v532[6];
      *(_QWORD *)v535 = v520;
      *(_BYTE *)(v535 + 8) = v522 & 1;
      *(_BYTE *)(v533 + v532[7]) = v524 & 1;
      sub_24A65FA8C(v533, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      v536 = v580;
      sub_24A65FA8C((uint64_t)v37, v580, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      sub_24A65FAD0(v536, (uint64_t)v590, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      swift_storeEnumTagMultiPayload();
      sub_24A65EF44();
      sub_24A63C880(&qword_257947B38, (uint64_t (*)(uint64_t))type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
      v537 = (uint64_t)v592;
      sub_24A77AB28();
      sub_24A63CCC0(v537, v610, &qword_257947958);
      swift_storeEnumTagMultiPayload();
      sub_24A65EFAC();
      sub_24A65F030();
      v538 = (uint64_t)v612;
      sub_24A77AB28();
      sub_24A63CD04(v537, &qword_257947958);
      sub_24A63CCC0(v538, v619, &qword_257947960);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDF8();
      sub_24A65EF88();
      v539 = (uint64_t)v622;
      sub_24A77AB28();
      sub_24A63CD04(v538, &qword_257947960);
      sub_24A63CCC0(v539, (uint64_t)v628, &qword_2579479A8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v540 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CD04(v539, &qword_2579479A8);
      sub_24A63CCC0(v540, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v541 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v540, &qword_2579479B0);
      sub_24A63CCC0(v541, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04(v541, &qword_2579479B8);
      sub_24A65FB14(v536, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      return;
    case 39:
      v587 = (char *)&v575 - v62;
      sub_24A77955C();
      v502 = sub_24A7798F8();
      swift_release();
      if (v502)
      {
        v503 = sub_24A779A84();
        v505 = v504;
        swift_release();
        v506 = v505 & 1;
      }
      else
      {
        v503 = 0;
        v506 = 1;
      }
      v258 = (uint64_t)v632;
      v553 = v628;
      sub_24A77955C();
      v554 = sub_24A7798F8();
      swift_release();
      if (v554)
      {
        v555 = sub_24A779A9C();
        swift_release();
      }
      else
      {
        v555 = 1;
      }
      v559 = swift_getKeyPath();
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      v560 = v595;
      *v595 = v503;
      *((_BYTE *)v560 + 8) = v506;
      *((_BYTE *)v560 + 9) = v555 & 1;
      v560[2] = v559;
      *((_BYTE *)v560 + 24) = 0;
      v560[4] = v561;
      swift_storeEnumTagMultiPayload();
      sub_24A63BEC0(v559, 0);
      sub_24A65F0B4();
      sub_24A63C880(&qword_257947B38, (uint64_t (*)(uint64_t))type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
      v562 = (uint64_t)v596;
      sub_24A77AB28();
      sub_24A63CCC0(v562, v610, &qword_257947940);
      swift_storeEnumTagMultiPayload();
      sub_24A65EFAC();
      sub_24A65F030();
      v563 = (uint64_t)v612;
      sub_24A77AB28();
      sub_24A63CD04(v562, &qword_257947940);
      sub_24A63CCC0(v563, v619, &qword_257947960);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDF8();
      sub_24A65EF88();
      v564 = (uint64_t)v622;
      sub_24A77AB28();
      sub_24A63CD04(v563, &qword_257947960);
      sub_24A63CCC0(v564, (uint64_t)v553, &qword_2579479A8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      sub_24A77AB28();
      sub_24A63CD04(v564, &qword_2579479A8);
      v259 = &qword_2579479B0;
      sub_24A63CCC0(v258, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v245 = v587;
LABEL_176:
      sub_24A77AB28();
      sub_24A63CD04(v258, v259);
      sub_24A63CCC0((uint64_t)v245, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v375 = (uint64_t)v245;
      goto LABEL_182;
    case 40:
      v365 = (char *)&v575 - v62;
      sub_24A77955C();
      v366 = sub_24A779904();
      v368 = v367;
      swift_release();
      sub_24A77955C();
      v369 = sub_24A779928();
      swift_release();
      v370 = swift_getKeyPath();
      *v45 = 0;
      *((_QWORD *)v45 + 1) = v366;
      v45[16] = v368 & 1;
      v45[17] = v369 & 1;
      *((_QWORD *)v45 + 3) = v370;
      v45[32] = 0;
      swift_storeEnumTagMultiPayload();
      sub_24A63BEC0(v370, 0);
      sub_24A63C880(&qword_257947B18, (uint64_t (*)(uint64_t))type metadata accessor for HeartRateMetricView, (uint64_t)&protocol conformance descriptor for HeartRateMetricView);
      sub_24A65EF44();
      v371 = (uint64_t)v591;
      sub_24A77AB28();
      sub_24A63CCC0(v371, (uint64_t)v603, &qword_257947970);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B00);
      sub_24A65F514(&qword_257947AF8, &qword_257947B00, (uint64_t (*)(void))sub_24A65EE7C);
      sub_24A65EEC0();
      v372 = (uint64_t)v606;
      sub_24A77AB28();
      sub_24A63CD04(v371, &qword_257947970);
      sub_24A63CCC0(v372, v619, &qword_2579479A0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDF8();
      sub_24A65EF88();
      v373 = (uint64_t)v622;
      sub_24A77AB28();
      sub_24A63CD04(v372, &qword_2579479A0);
      sub_24A63CCC0(v373, (uint64_t)v628, &qword_2579479A8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v374 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CD04(v373, &qword_2579479A8);
      sub_24A63CCC0(v374, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v374, &qword_2579479B0);
      sub_24A63CCC0((uint64_t)v365, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v375 = (uint64_t)v365;
      goto LABEL_182;
    case 41:
      v127 = (char *)&v575 - v62;
      v201 = v639;
      v202 = v634;
      sub_24A779568();
      sub_24A779964();
      v377 = v376;
      swift_release();
      sub_24A77952C();
      v378 = sub_24A7791E4();
      swift_release();
      v92 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v201;
      *((_QWORD *)&v696[0] + 1) = 41;
      *(_QWORD *)&v696[1] = v202;
      *((_QWORD *)&v696[1] + 1) = v92;
      *(_QWORD *)&v696[2] = 0;
      *((_QWORD *)&v696[2] + 1) = v377;
      *(_QWORD *)&v696[4] = 0;
      v696[3] = v378 & 1;
      BYTE8(v696[4]) = 1;
LABEL_103:
      v93 = v201;
      v94 = v202;
      sub_24A63BEC0(v92, 0);
      sub_24A65EBBC();
      sub_24A77AB28();
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      WORD4(v696[4]) = BYTE8(v664[2]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BA8);
      sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A63F3CC(&qword_257947BA0, &qword_257947BA8, (uint64_t (*)(void))sub_24A65F26C, (uint64_t (*)(void))sub_24A65F2B0);
      sub_24A77AB28();
      if (BYTE9(v649))
        v379 = 256;
      else
        v379 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      WORD4(v664[2]) = v379 | BYTE8(v649);
      BYTE10(v664[2]) = 1;
      goto LABEL_122;
    case 43:
      v507 = (char *)&v575 - v62;
      sub_24A779544();
      v508 = sub_24A779844();
      swift_release();
      if (v508)
      {
        v509 = sub_24A779A84();
        v511 = v510;
        swift_release();
        v512 = v511 & 1;
      }
      else
      {
        v509 = 0;
        v512 = 1;
      }
      sub_24A779544();
      v556 = sub_24A779844();
      swift_release();
      if (v556)
      {
        v557 = sub_24A779A9C();
        swift_release();
        if ((v557 & 1) != 0)
          v558 = 256;
        else
          v558 = 0;
      }
      else
      {
        v558 = 256;
      }
      v565 = swift_getKeyPath();
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      *(_QWORD *)&v696[0] = v509;
      *((_QWORD *)&v696[0] + 1) = v558 | v512;
      v696[1] = (unint64_t)v565;
      *(_QWORD *)&v696[2] = v566;
      *(_OWORD *)((char *)&v696[2] + 8) = 0u;
      *(_OWORD *)((char *)&v696[3] + 8) = 0u;
      BYTE8(v696[4]) = 0;
      sub_24A63BEC0(v565, 0);
      sub_24A65F0B4();
      sub_24A65EBBC();
      sub_24A77AB28();
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      WORD4(v696[4]) = BYTE8(v664[2]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B88);
      sub_24A63F3CC(&qword_257947B70, &qword_257947B78, (uint64_t (*)(void))sub_24A65F0B4, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A77AB28();
      if (BYTE9(v649))
        v567 = 256;
      else
        v567 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      WORD4(v664[2]) = v567 | BYTE8(v649);
      BYTE10(v664[2]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B98);
      sub_24A65F11C();
      sub_24A65F1C8();
      sub_24A77AB28();
      v568 = *(_QWORD *)&v696[4];
      v569 = WORD4(v696[4]);
      v570 = BYTE10(v696[4]);
      v571 = v696[1];
      v572 = v628;
      *v628 = v696[0];
      v572[1] = v571;
      v573 = v696[3];
      v572[2] = v696[2];
      v572[3] = v573;
      *((_QWORD *)v572 + 8) = v568;
      *((_WORD *)v572 + 36) = v569;
      *((_BYTE *)v572 + 74) = v570;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v574 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CCC0(v574, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v574, &qword_2579479B0);
      sub_24A63CCC0((uint64_t)v507, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v375 = (uint64_t)v507;
LABEL_182:
      sub_24A63CD04(v375, &qword_2579479B8);
LABEL_183:
      swift_release();
      return;
    case 44:
      v587 = (char *)&v575 - v62;
      v380 = v634;
      sub_24A77967C();
      v382 = v381;
      v383 = v639;
      sub_24A77952C();
      v384 = sub_24A7791D8();
      swift_release();
      sub_24A77952C();
      v385 = sub_24A7791FC();
      swift_release();
      v162 = swift_getKeyPath();
      v163 = swift_getKeyPath();
      v386 = swift_getKeyPath();
      v165 = v386;
      *((_QWORD *)&v663[0] + 1) = v382;
      if ((v385 & 1) != 0)
        v387 = 256;
      else
        v387 = 0;
      *(_QWORD *)&v663[0] = v380;
      v663[1] = xmmword_24A780040;
      *(_QWORD *)&v664[0] = v383;
      *((_QWORD *)&v664[0] + 1) = v387 & 0xFFFFFFFFFFFFFFFELL | v384 & 1;
      v664[1] = (unint64_t)v162;
      v664[2] = (unint64_t)v163;
      *(_QWORD *)&v664[3] = v386;
      WORD4(v664[3]) = 256;
      v644 = v380;
      v639 = v383;
      sub_24A63BEC0(v162, 0);
      sub_24A63BEC0(v163, 0);
      sub_24A63BEC0(v165, 0);
      sub_24A65EE7C();
      sub_24A65F578();
      sub_24A77AB28();
      v388 = *(_QWORD *)&v696[5];
      v389 = BYTE8(v696[5]);
      v390 = BYTE9(v696[5]);
      v391 = v696[1];
      v392 = v614;
      *v614 = v696[0];
      v392[1] = v391;
      v393 = v696[3];
      v392[2] = v696[2];
      v392[3] = v393;
      v392[4] = v696[4];
      *((_QWORD *)v392 + 10) = v388;
      *((_BYTE *)v392 + 88) = v389;
      *((_BYTE *)v392 + 89) = v390;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CA8);
      sub_24A65F6F8();
      sub_24A65F71C();
      v394 = (uint64_t)v616;
      sub_24A77AB28();
      goto LABEL_112;
    case 45:
      v587 = (char *)&v575 - v62;
      v395 = v634;
      sub_24A779640();
      v397 = v396;
      v398 = v639;
      sub_24A77952C();
      v399 = sub_24A7791D8();
      swift_release();
      sub_24A77952C();
      v400 = sub_24A7791FC();
      swift_release();
      v162 = swift_getKeyPath();
      v163 = swift_getKeyPath();
      v165 = swift_getKeyPath();
      v401 = v598;
      *v598 = v395;
      v401[1] = v397;
      *((_BYTE *)v401 + 16) = 0;
      v401[3] = 45;
      v401[4] = v398;
      *((_BYTE *)v401 + 40) = v399 & 1;
      *((_BYTE *)v401 + 41) = v400 & 1;
      v401[6] = v162;
      *((_BYTE *)v401 + 56) = 0;
      v401[8] = v163;
      *((_BYTE *)v401 + 72) = 0;
      v401[10] = v165;
      *((_BYTE *)v401 + 88) = 0;
      swift_storeEnumTagMultiPayload();
      v644 = v395;
      v639 = v398;
      sub_24A63BEC0(v162, 0);
      sub_24A63BEC0(v163, 0);
      sub_24A63BEC0(v165, 0);
      sub_24A65F578();
      sub_24A65F740();
      v402 = (uint64_t)v600;
      sub_24A77AB28();
      sub_24A63CCC0(v402, (uint64_t)v614, &qword_257947900);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CA8);
      sub_24A65F6F8();
      sub_24A65F71C();
      v394 = (uint64_t)v616;
      sub_24A77AB28();
      sub_24A63CD04(v402, &qword_257947900);
LABEL_112:
      sub_24A63CCC0(v394, (uint64_t)v623, &qword_257947910);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C68);
      sub_24A65F624();
      sub_24A65F6D4();
      v403 = (uint64_t)v625;
      sub_24A77AB28();
      sub_24A63CD04(v394, &qword_257947910);
      sub_24A63CCC0(v403, (uint64_t)v630, &qword_257947920);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v404 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CD04(v403, &qword_257947920);
      sub_24A63CCC0(v404, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v405 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v404, &qword_257947930);
      sub_24A63CCC0(v405, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04(v405, &qword_2579479B8);

LABEL_113:
      sub_24A63BEDC(v162, 0);
      sub_24A63BEDC(v163, 0);
      v310 = v165;
      goto LABEL_114;
    case 47:
      v587 = (char *)&v575 - v62;
      (*(void (**)(char *, _QWORD, uint64_t))(v602 + 104))(v588, *MEMORY[0x24BEC5A80], v604);
      sub_24A779544();
      v406 = sub_24A779844();
      swift_release();
      if (v406)
      {
        *((_QWORD *)&v696[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257947CF8);
        *(_QWORD *)&v696[2] = sub_24A63CFF0(&qword_257947D00, &qword_257947CF8, MEMORY[0x24BEC60C0]);
        *(_QWORD *)&v696[0] = v406;
      }
      else
      {
        memset(v696, 0, 40);
      }
      v525 = (uint64_t)v632;
      v526 = v628;
      sub_24A779544();
      v527 = sub_24A77985C();
      v529 = v528;
      swift_release();
      sub_24A779544();
      v530 = sub_24A779844();
      swift_release();
      if (v530)
      {
        v531 = sub_24A779A9C();
        swift_release();
      }
      else
      {
        v531 = 1;
      }
      v542 = (int *)v607;
      v543 = (uint64_t)v593;
      v544 = &v593[*(int *)(v607 + 32)];
      *(_QWORD *)v544 = swift_getKeyPath();
      v544[8] = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v602 + 32))(v543, v588, v604);
      sub_24A63F6C4((uint64_t)v696, v543 + v542[5], &qword_257947CF0);
      v545 = v543 + v542[6];
      *(_QWORD *)v545 = v527;
      *(_BYTE *)(v545 + 8) = v529 & 1;
      *(_BYTE *)(v543 + v542[7]) = v531 & 1;
      v546 = v576;
      sub_24A65FA8C(v543, v576, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      v547 = v546;
      v548 = v582;
      sub_24A65FA8C(v547, v582, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      sub_24A65FAD0(v548, (uint64_t)v595, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      swift_storeEnumTagMultiPayload();
      sub_24A65F0B4();
      sub_24A63C880(&qword_257947B38, (uint64_t (*)(uint64_t))type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
      v549 = (uint64_t)v596;
      sub_24A77AB28();
      sub_24A63CCC0(v549, v610, &qword_257947940);
      swift_storeEnumTagMultiPayload();
      sub_24A65EFAC();
      sub_24A65F030();
      v550 = (uint64_t)v612;
      sub_24A77AB28();
      sub_24A63CD04(v549, &qword_257947940);
      sub_24A63CCC0(v550, v619, &qword_257947960);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDF8();
      sub_24A65EF88();
      v551 = (uint64_t)v622;
      sub_24A77AB28();
      sub_24A63CD04(v550, &qword_257947960);
      sub_24A63CCC0(v551, (uint64_t)v526, &qword_2579479A8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      sub_24A77AB28();
      sub_24A63CD04(v551, &qword_2579479A8);
      sub_24A63CCC0(v525, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v552 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v525, &qword_2579479B0);
      sub_24A63CCC0(v552, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04(v552, &qword_2579479B8);
      sub_24A65FB14(v548, (uint64_t (*)(_QWORD))type metadata accessor for ZoneMetricView);
      return;
    case 48:
      v127 = (char *)&v575 - v62;
      v407 = v639;
      v408 = v634;
      sub_24A779598();
      v410 = v409;
      sub_24A77952C();
      v411 = sub_24A7791E4();
      swift_release();
      v92 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v407;
      *((_QWORD *)&v696[0] + 1) = 48;
      *(_QWORD *)&v696[1] = v408;
      *((_QWORD *)&v696[1] + 1) = v92;
      *(_QWORD *)&v696[2] = 0;
      *((_QWORD *)&v696[2] + 1) = v410;
      *(_QWORD *)&v696[4] = 0;
      v696[3] = v411 & 1;
      BYTE8(v696[4]) = 1;
      v93 = v407;
      v94 = v408;
      sub_24A63BEC0(v92, 0);
      sub_24A65EBBC();
      sub_24A77AB28();
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      *(_QWORD *)&v696[4] = *(_QWORD *)&v664[2];
      BYTE8(v696[4]) = BYTE8(v664[2]);
      BYTE9(v696[4]) = 1;
LABEL_118:
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B88);
      sub_24A63F3CC(&qword_257947B70, &qword_257947B78, (uint64_t (*)(void))sub_24A65F0B4, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
      sub_24A77AB28();
      if (BYTE9(v649))
        v412 = 256;
      else
        v412 = 0;
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      *(_QWORD *)&v664[2] = v649;
      WORD4(v664[2]) = v412 | BYTE8(v649);
      BYTE10(v664[2]) = 0;
LABEL_122:
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B98);
      sub_24A65F11C();
      sub_24A65F1C8();
      sub_24A77AB28();
      v413 = *(_QWORD *)&v696[4];
      v414 = WORD4(v696[4]);
      v415 = BYTE10(v696[4]);
      v416 = v696[1];
      v417 = v628;
      *v628 = v696[0];
      v417[1] = v416;
      v418 = v696[3];
      v417[2] = v696[2];
      v417[3] = v418;
      *((_QWORD *)v417 + 8) = v413;
      *((_WORD *)v417 + 36) = v414;
      *((_BYTE *)v417 + 74) = v415;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947B58);
      sub_24A65EDD4();
      sub_24A65F0F8();
      v419 = (uint64_t)v632;
      sub_24A77AB28();
      sub_24A63CCC0(v419, v637, &qword_2579479B0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      sub_24A77AB28();
      sub_24A63CD04(v419, &qword_2579479B0);
      sub_24A63CCC0((uint64_t)v127, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      v104 = (uint64_t)v127;
LABEL_123:
      sub_24A63CD04(v104, &qword_2579479B8);
LABEL_124:

LABEL_125:
      sub_24A63BEDC(v92, 0);
      swift_bridgeObjectRelease();
      return;
    case 49:
      v587 = (char *)&v575 - v62;
      v420 = v634;
      sub_24A779544();
      v421 = sub_24A779838();
      v423 = v422;
      swift_release();
      v424 = v423 & 1;
      v425 = v639;
      sub_24A77952C();
      v426 = sub_24A7791D8();
      swift_release();
      sub_24A77952C();
      v427 = sub_24A7791FC();
      swift_release();
      v428 = (void *)swift_getKeyPath();
      v639 = v428;
      v429 = swift_getKeyPath();
      v430 = swift_getKeyPath();
      *(_QWORD *)&v696[0] = v420;
      *((_QWORD *)&v696[0] + 1) = v421;
      if ((v427 & 1) != 0)
        v431 = 256;
      else
        v431 = 0;
      *(_QWORD *)&v696[1] = v424;
      *((_QWORD *)&v696[1] + 1) = 49;
      *(_QWORD *)&v696[2] = v425;
      *((_QWORD *)&v696[2] + 1) = v431 & 0xFFFFFFFFFFFFFFFELL | v426 & 1;
      v696[3] = (unint64_t)v428;
      v696[4] = (unint64_t)v429;
      v432 = v430;
      *(_QWORD *)&v696[5] = v430;
      WORD4(v696[5]) = 0;
      v644 = v420;
      v634 = v425;
      sub_24A63BEC0((uint64_t)v428, 0);
      sub_24A63BEC0(v429, 0);
      KeyPath = v432;
      sub_24A63BEC0(v432, 0);
      sub_24A65F578();
      sub_24A65F5BC();
      sub_24A77AB28();
      if (BYTE9(v664[3]))
        v433 = 256;
      else
        v433 = 0;
      v696[0] = v663[0];
      v696[1] = v663[1];
      v696[2] = v664[0];
      v696[3] = v664[1];
      v696[4] = v664[2];
      *(_QWORD *)&v696[5] = *(_QWORD *)&v664[3];
      WORD4(v696[5]) = v433 | BYTE8(v664[3]);
      BYTE10(v696[5]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C48);
      sub_24A65F514(&qword_257947C28, &qword_257947C30, (uint64_t (*)(void))sub_24A65F578);
      sub_24A63F3CC(&qword_257947C40, &qword_257947C48, (uint64_t (*)(void))sub_24A65F578, (uint64_t (*)(void))sub_24A65F5BC);
      sub_24A77AB28();
      v663[0] = v645;
      v663[1] = v646;
      v664[0] = v647;
      v664[1] = v648;
      v664[2] = v649;
      *(_QWORD *)&v664[3] = v650;
      WORD4(v664[3]) = v651;
      BYTE10(v664[3]) = v652 != 0;
      BYTE11(v664[3]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BE0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947C20);
      sub_24A65F33C();
      sub_24A65F468();
      sub_24A77AB28();
      v434 = *(_QWORD *)&v696[5];
      v435 = WORD4(v696[5]);
      v436 = BYTE10(v696[5]);
      v437 = BYTE11(v696[5]);
      v438 = v696[1];
      v439 = v630;
      *v630 = v696[0];
      v439[1] = v438;
      v440 = v696[3];
      v439[2] = v696[2];
      v439[3] = v440;
      v439[4] = v696[4];
      *((_QWORD *)v439 + 10) = v434;
      *((_BYTE *)v439 + 90) = v436;
      *((_WORD *)v439 + 44) = v435;
      *((_BYTE *)v439 + 91) = v437;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947BD0);
      sub_24A65F318();
      sub_24A65F600();
      v441 = (uint64_t)v633;
      sub_24A77AB28();
      sub_24A63CCC0(v441, v637, &qword_257947930);
      swift_storeEnumTagMultiPayload();
      sub_24A65EDB0();
      sub_24A65F2F4();
      v442 = (uint64_t)v587;
      sub_24A77AB28();
      sub_24A63CD04(v441, &qword_257947930);
      sub_24A63CCC0(v442, v642, &qword_2579479B8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A63CD04(v442, &qword_2579479B8);

      sub_24A63BEDC((uint64_t)v639, 0);
      sub_24A63BEDC(v429, 0);
      goto LABEL_77;
    case 53:
      v443 = sub_24A7796B8();
      v445 = v444;
      v446 = swift_getKeyPath();
      KeyPath = v446;
      if ((v445 & 1) != 0)
        v447 = 0;
      else
        v447 = v443;
      *(_QWORD *)&v696[0] = 53;
      *((_QWORD *)&v696[0] + 1) = v447;
      *(_QWORD *)&v696[1] = v639;
      *((_QWORD *)&v696[1] + 1) = v446;
      LOWORD(v696[2]) = 0;
      v72 = v639;
      sub_24A63BEC0(KeyPath, 0);
      sub_24A65E998();
      sub_24A65E9DC();
      sub_24A77AB28();
      v685 = v663[0];
      v686 = v663[1];
      LOWORD(v687) = v664[0];
      sub_24A65F984((uint64_t)&v685);
      sub_24A63F6C4((uint64_t)&v685, (uint64_t)v696, &qword_2579479E8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479F0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479F8);
      sub_24A65E974();
      sub_24A65EA20();
      sub_24A77AB28();
      v699 = v661;
      v700[0] = *(_OWORD *)v662;
      *(_DWORD *)((char *)v700 + 15) = *(_DWORD *)&v662[15];
      v696[4] = v657;
      v696[5] = v658;
      v698 = v660;
      v697 = v659;
      v696[0] = v653;
      v696[1] = v654;
      v696[3] = v656;
      v696[2] = v655;
      sub_24A65EAA4((uint64_t)v696);
      sub_24A63F6C4((uint64_t)v696, (uint64_t)&v645, &qword_257947A20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A30);
      sub_24A65EAB0();
      sub_24A65ED68();
      sub_24A77AB28();
      v448 = v668;
      v449 = v642;
      *(_OWORD *)(v642 + 128) = v667;
      *(_OWORD *)(v449 + 144) = v448;
      *(_DWORD *)(v449 + 160) = v669;
      v450 = v664[3];
      *(_OWORD *)(v449 + 64) = v664[2];
      *(_OWORD *)(v449 + 80) = v450;
      v451 = v666;
      *(_OWORD *)(v449 + 96) = v665;
      *(_OWORD *)(v449 + 112) = v451;
      v452 = v663[1];
      *(_OWORD *)v449 = v663[0];
      *(_OWORD *)(v449 + 16) = v452;
      v453 = v664[1];
      *(_OWORD *)(v449 + 32) = v664[0];
      *(_OWORD *)(v449 + 48) = v453;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
LABEL_76:

LABEL_77:
      v310 = KeyPath;
LABEL_114:
      sub_24A63BEDC(v310, 0);
      break;
    case 54:
      v454 = sub_24A779634();
      v456 = v639;
      *(_QWORD *)&v696[0] = v639;
      *((_QWORD *)&v696[0] + 1) = v454;
      v696[1] = v455 & 1;
      LOWORD(v696[2]) = 256;
      sub_24A65E998();
      sub_24A65E9DC();
      v457 = v456;
      sub_24A77AB28();
      v685 = v663[0];
      v686 = v663[1];
      LOWORD(v687) = v664[0];
      sub_24A65F984((uint64_t)&v685);
LABEL_138:
      sub_24A63F6C4((uint64_t)&v685, (uint64_t)v696, &qword_2579479E8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479F0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479F8);
      sub_24A65E974();
      sub_24A65EA20();
      sub_24A77AB28();
      v699 = v661;
      v700[0] = *(_OWORD *)v662;
      *(_DWORD *)((char *)v700 + 15) = *(_DWORD *)&v662[15];
      v696[4] = v657;
      v696[5] = v658;
      v698 = v660;
      v697 = v659;
      v696[0] = v653;
      v696[1] = v654;
      v696[3] = v656;
      v696[2] = v655;
      sub_24A65EAA4((uint64_t)v696);
LABEL_145:
      sub_24A63F6C4((uint64_t)v696, (uint64_t)&v645, &qword_257947A20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A30);
      sub_24A65EAB0();
      sub_24A65ED68();
      sub_24A77AB28();
      v462 = v668;
      v463 = v642;
      *(_OWORD *)(v642 + 128) = v667;
      *(_OWORD *)(v463 + 144) = v462;
      *(_DWORD *)(v463 + 160) = v669;
      v464 = v664[3];
      *(_OWORD *)(v463 + 64) = v664[2];
      *(_OWORD *)(v463 + 80) = v464;
      v465 = v666;
      *(_OWORD *)(v463 + 96) = v665;
      *(_OWORD *)(v463 + 112) = v465;
      v466 = v663[1];
      *(_OWORD *)v463 = v663[0];
      *(_OWORD *)(v463 + 16) = v466;
      v467 = v664[1];
      *(_OWORD *)(v463 + 32) = v664[0];
      *(_OWORD *)(v463 + 48) = v467;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      break;
    default:
      v513 = sub_24A77A930();
      sub_24A65E4DC((uint64_t)v670);
      *(_OWORD *)((char *)&v672[6] + 7) = v670[6];
      *(_OWORD *)((char *)&v672[5] + 7) = v670[5];
      *(_OWORD *)((char *)&v672[2] + 7) = v670[2];
      *(_OWORD *)((char *)&v672[1] + 7) = v670[1];
      *(_OWORD *)((char *)&v672[7] + 7) = v671[0];
      v672[8] = *(_OWORD *)((char *)v671 + 9);
      *(_OWORD *)((char *)&v672[3] + 7) = v670[3];
      *(_OWORD *)((char *)&v672[4] + 7) = v670[4];
      *(_OWORD *)((char *)v672 + 7) = v670[0];
      v681 = v672[5];
      v682 = v672[6];
      v683 = v672[7];
      v684 = *(_OWORD *)((char *)v671 + 9);
      v677 = v672[1];
      v678 = v672[2];
      v679 = v672[3];
      v680 = v672[4];
      v673 = 1;
      v674[0] = v513;
      v674[1] = 0;
      v675 = 1;
      v676 = v672[0];
      sub_24A65E834((uint64_t)v674);
      sub_24A63F6C4((uint64_t)v674, (uint64_t)v696, &qword_2579479C0);
      sub_24A65E840((uint64_t)v670);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479C8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479D0);
      sub_24A65E90C();
      sub_24A63CFF0(&qword_2579479E0, &qword_2579479D0, MEMORY[0x24BDF4498]);
      sub_24A77AB28();
      v693 = v667;
      v694 = v668;
      v695 = v669;
      v689 = v664[2];
      v690 = v664[3];
      v692 = v666;
      v691 = v665;
      v685 = v663[0];
      v686 = v663[1];
      v688 = v664[1];
      v687 = v664[0];
      sub_24A65E968((uint64_t)&v685);
      sub_24A63F6C4((uint64_t)&v685, (uint64_t)v696, &qword_2579479E8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479F0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579479F8);
      sub_24A65E974();
      sub_24A65EA20();
      sub_24A77AB28();
      v699 = v661;
      v700[0] = *(_OWORD *)v662;
      *(_DWORD *)((char *)v700 + 15) = *(_DWORD *)&v662[15];
      v696[4] = v657;
      v696[5] = v658;
      v698 = v660;
      v697 = v659;
      v696[0] = v653;
      v696[1] = v654;
      v696[3] = v656;
      v696[2] = v655;
      sub_24A65EAA4((uint64_t)v696);
      sub_24A63F6C4((uint64_t)v696, (uint64_t)&v645, &qword_257947A20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947A30);
      sub_24A65EAB0();
      sub_24A65ED68();
      sub_24A77AB28();
      v514 = v668;
      v515 = v642;
      *(_OWORD *)(v642 + 128) = v667;
      *(_OWORD *)(v515 + 144) = v514;
      *(_DWORD *)(v515 + 160) = v669;
      v516 = v664[3];
      *(_OWORD *)(v515 + 64) = v664[2];
      *(_OWORD *)(v515 + 80) = v516;
      v517 = v666;
      *(_OWORD *)(v515 + 96) = v665;
      *(_OWORD *)(v515 + 112) = v517;
      v518 = v663[1];
      *(_OWORD *)v515 = v663[0];
      *(_OWORD *)(v515 + 16) = v518;
      v519 = v664[1];
      *(_OWORD *)(v515 + 32) = v664[0];
      *(_OWORD *)(v515 + 48) = v519;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947AD0);
      sub_24A65ED8C();
      sub_24A65F88C();
      sub_24A77AB28();
      sub_24A65F8B0((uint64_t)v670);
      break;
  }
}

uint64_t sub_24A65E4DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  char v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  _BYTE v43[7];
  _BYTE v44[7];
  char v45;
  _BYTE v46[7];
  _BYTE v47[7];
  char v48;
  _BYTE v49[7];
  char v50;
  int v51;
  __int16 v52;
  char v53;

  v2 = sub_24A77A9B4();
  MEMORY[0x24BDAC7A8](v2);
  sub_24A77A9A8();
  sub_24A77A99C();
  sub_24A77A978();
  sub_24A77A99C();
  sub_24A77A9CC();
  v3 = sub_24A77AFC0();
  v29 = v4;
  v30 = v3;
  v28 = v5;
  v7 = v6 & 1;
  KeyPath = swift_getKeyPath();
  v31 = 0xD000000000000012;
  v32 = 0x800000024A78A090;
  sub_24A645928();
  v8 = sub_24A77BE54();
  sub_24A69EC80(1, v8, v9, 0, MEMORY[0x24BEE4AF8], (uint64_t)&v31);
  swift_bridgeObjectRelease();
  v10 = v31;
  v11 = v32;
  v12 = v33;
  v13 = v34;
  v14 = v35;
  v15 = v36;
  v16 = v37;
  v17 = v38;
  v18 = v39;
  v19 = v40;
  v26 = v41;
  v53 = v7;
  v50 = 0;
  v48 = v33;
  v45 = v37;
  v42 = v41;
  *(_DWORD *)(a1 + 17) = v31;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v31 + 3);
  *(_DWORD *)(a1 + 34) = v51;
  *(_WORD *)(a1 + 38) = v52;
  v20 = *(_DWORD *)v49;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v49[3];
  *(_DWORD *)(a1 + 49) = v20;
  v21 = *(_DWORD *)v47;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a1 + 73) = v21;
  v22 = *(_DWORD *)v46;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a1 + 89) = v22;
  LOBYTE(v22) = v45;
  v23 = *(_DWORD *)v44;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v44[3];
  *(_DWORD *)(a1 + 105) = v23;
  v24 = *(_DWORD *)v43;
  *(_DWORD *)(a1 + 116) = *(_DWORD *)&v43[3];
  *(_DWORD *)(a1 + 113) = v24;
  LOBYTE(v24) = v42;
  *(_QWORD *)a1 = v30;
  *(_QWORD *)(a1 + 8) = v29;
  *(_BYTE *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v28;
  *(_WORD *)(a1 + 32) = 256;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_BYTE *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_BYTE *)(a1 + 104) = v22;
  *(_BYTE *)(a1 + 112) = v17;
  *(_QWORD *)(a1 + 120) = v18;
  *(_QWORD *)(a1 + 128) = v19;
  *(_BYTE *)(a1 + 136) = v24;
  sub_24A6436C4(v30, v29, v7);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(KeyPath, 0);
  sub_24A6436C4(v10, v11, v12);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v15, v16);
  sub_24A63BEC0(v19, v26);
  sub_24A64596C(v10, v11, v12);
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v15, v16);
  sub_24A63BEDC(v19, v26);
  sub_24A64596C(v30, v29, v7);
  swift_bridgeObjectRelease();
  return sub_24A63BEDC(KeyPath, 0);
}

uint64_t sub_24A65E834(uint64_t result)
{
  *(_BYTE *)(result + 161) = 1;
  return result;
}

uint64_t sub_24A65E840(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_BYTE *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_24A6436C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v2, v3);
  sub_24A6436C4(v4, v5, v6);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v7, v8);
  sub_24A63BEC0(v11, v10);
  return a1;
}

unint64_t sub_24A65E90C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2579479D8;
  if (!qword_2579479D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579479C8);
    v2 = MEMORY[0x24BDF5138];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2579479D8);
  }
  return result;
}

uint64_t sub_24A65E968(uint64_t result)
{
  *(_BYTE *)(result + 162) = 1;
  return result;
}

uint64_t sub_24A65E974()
{
  return sub_24A63F3CC(&qword_257947A00, &qword_2579479F0, (uint64_t (*)(void))sub_24A65E998, (uint64_t (*)(void))sub_24A65E9DC);
}

unint64_t sub_24A65E998()
{
  unint64_t result;

  result = qword_257947A08;
  if (!qword_257947A08)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for ElevationChangeMetricView, &type metadata for ElevationChangeMetricView);
    atomic_store(result, (unint64_t *)&qword_257947A08);
  }
  return result;
}

unint64_t sub_24A65E9DC()
{
  unint64_t result;

  result = qword_257947A10;
  if (!qword_257947A10)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DownhillRunCountMetricView, &type metadata for DownhillRunCountMetricView);
    atomic_store(result, (unint64_t *)&qword_257947A10);
  }
  return result;
}

unint64_t sub_24A65EA20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947A18;
  if (!qword_257947A18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579479F8);
    v2[0] = sub_24A65E90C();
    v2[1] = sub_24A63CFF0(&qword_2579479E0, &qword_2579479D0, MEMORY[0x24BDF4498]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947A18);
  }
  return result;
}

uint64_t sub_24A65EAA4(uint64_t result)
{
  *(_BYTE *)(result + 163) = 1;
  return result;
}

uint64_t sub_24A65EAB0()
{
  return sub_24A63F3CC(&qword_257947A38, &qword_257947A28, (uint64_t (*)(void))sub_24A65EAD4, (uint64_t (*)(void))sub_24A65EC44);
}

unint64_t sub_24A65EAD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947A40;
  if (!qword_257947A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947A48);
    v2[0] = sub_24A63F3CC(&qword_257947A50, &qword_257947A58, (uint64_t (*)(void))sub_24A65EB78, (uint64_t (*)(void))sub_24A65EBBC);
    v2[1] = sub_24A65F514(&qword_257947A70, &qword_257947A78, (uint64_t (*)(void))sub_24A65EC00);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947A40);
  }
  return result;
}

unint64_t sub_24A65EB78()
{
  unint64_t result;

  result = qword_257947A60;
  if (!qword_257947A60)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DistanceDetailMetricView, &type metadata for DistanceDetailMetricView);
    atomic_store(result, (unint64_t *)&qword_257947A60);
  }
  return result;
}

unint64_t sub_24A65EBBC()
{
  unint64_t result;

  result = qword_257947A68;
  if (!qword_257947A68)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for PaceMetricView, &type metadata for PaceMetricView);
    atomic_store(result, (unint64_t *)&qword_257947A68);
  }
  return result;
}

unint64_t sub_24A65EC00()
{
  unint64_t result;

  result = qword_257947A80;
  if (!qword_257947A80)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for StrideLengthMetricView, &type metadata for StrideLengthMetricView);
    atomic_store(result, (unint64_t *)&qword_257947A80);
  }
  return result;
}

unint64_t sub_24A65EC44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947A88;
  if (!qword_257947A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947A90);
    v2[0] = sub_24A65F514(&qword_257947A98, &qword_257947AA0, (uint64_t (*)(void))sub_24A65ECE0);
    v2[1] = sub_24A65F514(&qword_257947AB0, &qword_257947AB8, (uint64_t (*)(void))sub_24A65ED24);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947A88);
  }
  return result;
}

unint64_t sub_24A65ECE0()
{
  unint64_t result;

  result = qword_257947AA8;
  if (!qword_257947AA8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for VerticalOscillationMetricView, &type metadata for VerticalOscillationMetricView);
    atomic_store(result, (unint64_t *)&qword_257947AA8);
  }
  return result;
}

unint64_t sub_24A65ED24()
{
  unint64_t result;

  result = qword_257947AC0;
  if (!qword_257947AC0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for GroundContactTimeMetricView, &type metadata for GroundContactTimeMetricView);
    atomic_store(result, (unint64_t *)&qword_257947AC0);
  }
  return result;
}

uint64_t sub_24A65ED68()
{
  return sub_24A63F3CC(&qword_257947AC8, &qword_257947A30, sub_24A65E974, (uint64_t (*)(void))sub_24A65EA20);
}

uint64_t sub_24A65ED8C()
{
  return sub_24A63F3CC(&qword_257947AD8, &qword_2579479B8, sub_24A65EDB0, sub_24A65F2F4);
}

uint64_t sub_24A65EDB0()
{
  return sub_24A63F3CC(&qword_257947AE0, &qword_2579479B0, sub_24A65EDD4, sub_24A65F0F8);
}

uint64_t sub_24A65EDD4()
{
  return sub_24A63F3CC(&qword_257947AE8, &qword_2579479A8, (uint64_t (*)(void))sub_24A65EDF8, sub_24A65EF88);
}

unint64_t sub_24A65EDF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947AF0;
  if (!qword_257947AF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579479A0);
    v2[0] = sub_24A65F514(&qword_257947AF8, &qword_257947B00, (uint64_t (*)(void))sub_24A65EE7C);
    v2[1] = sub_24A65EEC0();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947AF0);
  }
  return result;
}

unint64_t sub_24A65EE7C()
{
  unint64_t result;

  result = qword_257947B08;
  if (!qword_257947B08)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for EnergyMetricView, &type metadata for EnergyMetricView);
    atomic_store(result, (unint64_t *)&qword_257947B08);
  }
  return result;
}

unint64_t sub_24A65EEC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947B10;
  if (!qword_257947B10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947970);
    v2[0] = sub_24A63C880(&qword_257947B18, (uint64_t (*)(uint64_t))type metadata accessor for HeartRateMetricView, (uint64_t)&protocol conformance descriptor for HeartRateMetricView);
    v2[1] = sub_24A65EF44();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947B10);
  }
  return result;
}

unint64_t sub_24A65EF44()
{
  unint64_t result;

  result = qword_257947B20;
  if (!qword_257947B20)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for HeartRateAggregateMetricView, &type metadata for HeartRateAggregateMetricView);
    atomic_store(result, (unint64_t *)&qword_257947B20);
  }
  return result;
}

uint64_t sub_24A65EF88()
{
  return sub_24A63F3CC(&qword_257947B28, &qword_257947960, (uint64_t (*)(void))sub_24A65EFAC, (uint64_t (*)(void))sub_24A65F030);
}

unint64_t sub_24A65EFAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947B30;
  if (!qword_257947B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947958);
    v2[0] = sub_24A65EF44();
    v2[1] = sub_24A63C880(&qword_257947B38, (uint64_t (*)(uint64_t))type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947B30);
  }
  return result;
}

unint64_t sub_24A65F030()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947B40;
  if (!qword_257947B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947940);
    v2[0] = sub_24A65F0B4();
    v2[1] = sub_24A63C880(&qword_257947B38, (uint64_t (*)(uint64_t))type metadata accessor for ZoneMetricView, (uint64_t)&protocol conformance descriptor for ZoneMetricView);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947B40);
  }
  return result;
}

unint64_t sub_24A65F0B4()
{
  unint64_t result;

  result = qword_257947B48;
  if (!qword_257947B48)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TimeInZoneMetricView, &type metadata for TimeInZoneMetricView);
    atomic_store(result, (unint64_t *)&qword_257947B48);
  }
  return result;
}

uint64_t sub_24A65F0F8()
{
  return sub_24A63F3CC(&qword_257947B50, &qword_257947B58, (uint64_t (*)(void))sub_24A65F11C, (uint64_t (*)(void))sub_24A65F1C8);
}

unint64_t sub_24A65F11C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947B60;
  if (!qword_257947B60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947B68);
    v2[0] = sub_24A63F3CC(&qword_257947B70, &qword_257947B78, (uint64_t (*)(void))sub_24A65F0B4, (uint64_t (*)(void))sub_24A65EBBC);
    v2[1] = sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947B60);
  }
  return result;
}

unint64_t sub_24A65F1C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947B90;
  if (!qword_257947B90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947B98);
    v2[0] = sub_24A65F514(&qword_257947B80, &qword_257947B88, (uint64_t (*)(void))sub_24A65EBBC);
    v2[1] = sub_24A63F3CC(&qword_257947BA0, &qword_257947BA8, (uint64_t (*)(void))sub_24A65F26C, (uint64_t (*)(void))sub_24A65F2B0);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947B90);
  }
  return result;
}

unint64_t sub_24A65F26C()
{
  unint64_t result;

  result = qword_257947BB0;
  if (!qword_257947BB0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DistanceMetricView, &type metadata for DistanceMetricView);
    atomic_store(result, (unint64_t *)&qword_257947BB0);
  }
  return result;
}

unint64_t sub_24A65F2B0()
{
  unint64_t result;

  result = qword_257947BB8;
  if (!qword_257947BB8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for LapsMetricView, &type metadata for LapsMetricView);
    atomic_store(result, (unint64_t *)&qword_257947BB8);
  }
  return result;
}

uint64_t sub_24A65F2F4()
{
  return sub_24A63F3CC(&qword_257947BC0, &qword_257947930, sub_24A65F318, sub_24A65F600);
}

uint64_t sub_24A65F318()
{
  return sub_24A63F3CC(&qword_257947BC8, &qword_257947BD0, (uint64_t (*)(void))sub_24A65F33C, (uint64_t (*)(void))sub_24A65F468);
}

unint64_t sub_24A65F33C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947BD8;
  if (!qword_257947BD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947BE0);
    v2[0] = sub_24A65F514(&qword_257947BE8, &qword_257947BF0, (uint64_t (*)(void))sub_24A65F3E0);
    v2[1] = sub_24A63F3CC(&qword_257947C00, &qword_257947C08, (uint64_t (*)(void))sub_24A65E998, (uint64_t (*)(void))sub_24A65F424);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947BD8);
  }
  return result;
}

unint64_t sub_24A65F3E0()
{
  unint64_t result;

  result = qword_257947BF8;
  if (!qword_257947BF8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for CadenceMetricView, &type metadata for CadenceMetricView);
    atomic_store(result, (unint64_t *)&qword_257947BF8);
  }
  return result;
}

unint64_t sub_24A65F424()
{
  unint64_t result;

  result = qword_257947C10;
  if (!qword_257947C10)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for CurrentElevationMetricView, &type metadata for CurrentElevationMetricView);
    atomic_store(result, (unint64_t *)&qword_257947C10);
  }
  return result;
}

unint64_t sub_24A65F468()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947C18;
  if (!qword_257947C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947C20);
    v2[0] = sub_24A65F514(&qword_257947C28, &qword_257947C30, (uint64_t (*)(void))sub_24A65F578);
    v2[1] = sub_24A63F3CC(&qword_257947C40, &qword_257947C48, (uint64_t (*)(void))sub_24A65F578, (uint64_t (*)(void))sub_24A65F5BC);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947C18);
  }
  return result;
}

uint64_t sub_24A65F514(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = v7[0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A65F578()
{
  unint64_t result;

  result = qword_257947C38;
  if (!qword_257947C38)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for PowerMetricView, &type metadata for PowerMetricView);
    atomic_store(result, (unint64_t *)&qword_257947C38);
  }
  return result;
}

unint64_t sub_24A65F5BC()
{
  unint64_t result;

  result = qword_257947C50;
  if (!qword_257947C50)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for FlightsClimbedMetricView, &type metadata for FlightsClimbedMetricView);
    atomic_store(result, (unint64_t *)&qword_257947C50);
  }
  return result;
}

uint64_t sub_24A65F600()
{
  return sub_24A63F3CC(&qword_257947C58, &qword_257947920, sub_24A65F624, sub_24A65F6D4);
}

uint64_t sub_24A65F624()
{
  return sub_24A63F3CC(&qword_257947C60, &qword_257947C68, sub_24A65F648, sub_24A65F6B0);
}

uint64_t sub_24A65F648()
{
  return sub_24A63F3CC(&qword_257947C70, &qword_257947C78, (uint64_t (*)(void))sub_24A65F66C, (uint64_t (*)(void))sub_24A65EB78);
}

unint64_t sub_24A65F66C()
{
  unint64_t result;

  result = qword_257947C80;
  if (!qword_257947C80)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for SegmentDurationMetricView, &type metadata for SegmentDurationMetricView);
    atomic_store(result, (unint64_t *)&qword_257947C80);
  }
  return result;
}

uint64_t sub_24A65F6B0()
{
  return sub_24A63F3CC(&qword_257947C88, &qword_257947C90, (uint64_t (*)(void))sub_24A65EBBC, (uint64_t (*)(void))sub_24A65EE7C);
}

uint64_t sub_24A65F6D4()
{
  return sub_24A63F3CC(&qword_257947C98, &qword_257947910, sub_24A65F6F8, sub_24A65F71C);
}

uint64_t sub_24A65F6F8()
{
  return sub_24A63F3CC(&qword_257947CA0, &qword_257947CA8, (uint64_t (*)(void))sub_24A65EE7C, (uint64_t (*)(void))sub_24A65F578);
}

uint64_t sub_24A65F71C()
{
  return sub_24A63F3CC(&qword_257947CB0, &qword_257947900, (uint64_t (*)(void))sub_24A65F578, (uint64_t (*)(void))sub_24A65F740);
}

unint64_t sub_24A65F740()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947CB8;
  if (!qword_257947CB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579478F0);
    v2[0] = sub_24A65F7C4();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947CB8);
  }
  return result;
}

unint64_t sub_24A65F7C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947CC0;
  if (!qword_257947CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F30);
    v2[0] = sub_24A63C880(&qword_257947CC8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutTimeView, (uint64_t)&protocol conformance descriptor for WorkoutTimeView);
    v2[1] = sub_24A65F848();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947CC0);
  }
  return result;
}

unint64_t sub_24A65F848()
{
  unint64_t result;

  result = qword_257947CD0;
  if (!qword_257947CD0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7828B0, &type metadata for MetricDetail);
    atomic_store(result, (unint64_t *)&qword_257947CD0);
  }
  return result;
}

uint64_t sub_24A65F88C()
{
  return sub_24A63F3CC(&qword_257947CD8, &qword_257947AD0, sub_24A65EAB0, sub_24A65ED68);
}

uint64_t sub_24A65F8B0(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_BYTE *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_24A64596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v2, v3);
  sub_24A64596C(v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v7, v8);
  sub_24A63BEDC(v11, v10);
  return a1;
}

uint64_t sub_24A65F97C(uint64_t result)
{
  *(_BYTE *)(result + 161) = 0;
  return result;
}

uint64_t sub_24A65F984(uint64_t result)
{
  *(_BYTE *)(result + 162) = 0;
  return result;
}

uint64_t sub_24A65F994(uint64_t result)
{
  *(_BYTE *)(result + 163) = 0;
  return result;
}

uint64_t sub_24A65F99C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A7C8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24A65F9C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A7C8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24A65F9F4()
{
  return sub_24A77A7D4();
}

uint64_t sub_24A65FA18()
{
  return sub_24A77A7D4();
}

uint64_t sub_24A65FA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A65FA8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A65FAD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A65FB14(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for MetricViewBuilder()
{
  return &type metadata for MetricViewBuilder;
}

uint64_t sub_24A65FB60()
{
  return sub_24A63F3CC(&qword_257947D18, &qword_257947D20, sub_24A65ED8C, sub_24A65F88C);
}

uint64_t sub_24A65FB94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  return sub_24A65FAD0(v3, a1, type metadata accessor for TrainingLoadChart.Configuration);
}

uint64_t sub_24A65FC34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  return sub_24A65FAD0(v4, a2, type metadata accessor for TrainingLoadChart.Configuration);
}

uint64_t sub_24A65FCD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = type metadata accessor for TrainingLoadChart.Configuration(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A65FAD0(a1, (uint64_t)v6, type metadata accessor for TrainingLoadChart.Configuration);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_24A661FA4();
  sub_24A7789B0();
  swift_release();
  return sub_24A65FB14((uint64_t)v6, type metadata accessor for TrainingLoadChart.Configuration);
}

uint64_t sub_24A65FDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  sub_24A662068(a2, v3);
  return swift_endAccess();
}

uint64_t sub_24A65FE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint8_t *v9;
  uint64_t v10;

  v1 = sub_24A77A018();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A18();
  swift_retain_n();
  v5 = sub_24A77A00C();
  v6 = sub_24A77BC50();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    v9 = v7 + 4;
    swift_getKeyPath();
    v10 = v0;
    sub_24A661FA4();
    sub_24A7789BC();
    swift_release();
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
    sub_24A77BE00();
    swift_release_n();
    _os_log_impl(&dword_24A635000, v5, v6, "Changing offset to %f", v7, 0xCu);
    MEMORY[0x24BD1A2B4](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_24A65FFD8()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
}

double sub_24A66004C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  result = *(double *)(v3 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
  *a2 = result;
  return result;
}

uint64_t sub_24A6600C8()
{
  swift_getKeyPath();
  sub_24A661FA4();
  sub_24A7789B0();
  return swift_release();
}

uint64_t sub_24A660160(uint64_t a1, double a2)
{
  *(double *)(a1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset) = a2;
  return sub_24A65FE2C();
}

uint64_t sub_24A660194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  swift_getKeyPath();
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v2 = type metadata accessor for TrainingLoadChart.Configuration(0);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v2 + 28)) + 16);
  swift_getKeyPath();
  sub_24A7789BC();
  swift_release();
  result = 0;
  if (*(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v2 + 24)) + 16) < v3)
  {
    swift_getKeyPath();
    sub_24A7789BC();
    swift_release();
    v5 = *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v2 + 28)) + 16);
    swift_getKeyPath();
    sub_24A7789BC();
    swift_release();
    return v5 - *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v2 + 24)) + 16);
  }
  return result;
}

double sub_24A660300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A779CF4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v23[1] = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel___observationRegistrar;
  v24 = v0;
  v23[0] = sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v15 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v16 = type metadata accessor for TrainingLoadChart.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15 + *(int *)(v16 + 20), v11);
  sub_24A779CC4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v17 = sub_24A77B80C();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v7, v10, v17);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v19(v7, 0, 1, v17);
  v19(v4, 1, 1, v17);
  v20 = sub_24A719350((uint64_t)v7, (uint64_t)v4);
  sub_24A63CD04((uint64_t)v4, &qword_257947ED8);
  sub_24A63CD04((uint64_t)v7, &qword_257947ED8);
  sub_24A63CD04((uint64_t)v10, &qword_257947EE0);
  swift_getKeyPath();
  v23[2] = v1;
  sub_24A7789BC();
  swift_release();
  v21 = *(_QWORD *)(*(_QWORD *)(v15 + *(int *)(v16 + 24)) + 16);
  if (v21 >= v20)
    return (double)v20;
  return (double)v21;
}

double sub_24A660584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED8);
  MEMORY[0x24BDAC7A8](v1);
  v24 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)&v21 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A779CF4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v26 = v0;
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v12 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v13 = type metadata accessor for TrainingLoadChart.Configuration(0);
  v22 = *(_QWORD *)(*(_QWORD *)(v12 + *(int *)(v13 + 24)) + 16);
  swift_getKeyPath();
  v25 = v0;
  sub_24A7789BC();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12 + *(int *)(v13 + 20), v8);
  sub_24A779CC4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v14 = sub_24A77B80C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (uint64_t)v23;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v23, v7, v14);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v17(v16, 0, 1, v14);
  v18 = (uint64_t)v24;
  v17((uint64_t)v24, 1, 1, v14);
  v19 = sub_24A719350(v16, v18);
  sub_24A63CD04(v18, &qword_257947ED8);
  sub_24A63CD04(v16, &qword_257947ED8);
  sub_24A63CD04((uint64_t)v7, &qword_257947EE0);
  result = 1.0;
  if (v22 < v19)
    return 0.0;
  return result;
}

uint64_t sub_24A660820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(NSObject *, char *, uint64_t);
  NSObject *v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t KeyPath;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = sub_24A778818();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A7788E4();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A778968();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_24A779CF4();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v43 = ((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v40 = ((char *)&v39 - v13);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TrainingLoadChart.Configuration(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v39 = (uint64_t)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v39 - v24;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset) = 0xBFF0000000000000;
  v51 = v1;
  sub_24A7789E0();
  v52 = a1;
  sub_24A6620AC(a1, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_24A63CD04((uint64_t)v19, &qword_257947EE8);
    v27 = v41;
    v26 = v42;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v7, *MEMORY[0x24BDCEF70], v42);
    sub_24A7788F0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
    v28 = v47;
    sub_24A7787F4();
    sub_24A779CD0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v50);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v45);
    v29 = v46;
    v30 = *(void (**)(NSObject *, char *, uint64_t))(v46 + 16);
    v31 = v40;
    v32 = v48;
    v30(v40, v16, v48);
    v33 = v43;
    v30(v43, v16, v32);
    v34 = v39;
    TrainingLoadChart.Configuration.init(dayRangeOfData:viewPortDayRange:points:keyDates:)(v31, v33, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], v39);
    sub_24A63CD04(v52, &qword_257947EE8);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v32);
    v35 = v51;
    sub_24A65FA8C(v34, v51 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration, type metadata accessor for TrainingLoadChart.Configuration);
  }
  else
  {
    sub_24A65FA8C((uint64_t)v19, (uint64_t)v25, type metadata accessor for TrainingLoadChart.Configuration);
    v35 = v51;
    sub_24A65FAD0((uint64_t)v25, v51 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration, type metadata accessor for TrainingLoadChart.Configuration);
    v36 = sub_24A660300();
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v39 - 2) = v35;
    *((double *)&v39 - 1) = v36;
    v53 = v35;
    sub_24A661FA4();
    sub_24A7789B0();
    swift_release();
    sub_24A63CD04(v52, &qword_257947EE8);
    sub_24A65FB14((uint64_t)v25, type metadata accessor for TrainingLoadChart.Configuration);
  }
  return v35;
}

void sub_24A660C74(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t View;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_getKeyPath();
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v3 = *(double *)(v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v4 = sub_24A660584();
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v5 = (uint64_t)v4;
  swift_getKeyPath();
  sub_24A7789BC();
  swift_release();
  v6 = v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v7 = type metadata accessor for TrainingLoadChart.Configuration(0);
  v8 = *(_QWORD *)(*(_QWORD *)(v6 + *(int *)(v7 + 24)) + 16);
  if (v8 < v5)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = v7;
  v10 = (uint64_t)v3;
  swift_getKeyPath();
  if ((uint64_t)v3 >= v5 && v8 > v10)
  {
    sub_24A7789BC();
    swift_release();
    if ((v10 & 0x8000000000000000) == 0)
    {
      v18 = *(_QWORD *)(v6 + *(int *)(v9 + 24));
      if (*(_QWORD *)(v18 + 16) > (unint64_t)v10)
      {
        View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
        v19 = *(_QWORD *)(View - 8);
        sub_24A65FAD0(v18+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v10, a1, type metadata accessor for TrainingLoadViewModel.ChartPoint);
        v17 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56);
        goto LABEL_18;
      }
      goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  sub_24A7789BC();
  swift_release();
  v12 = *(_QWORD *)(v6 + *(int *)(v9 + 24));
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = v13 - 1;
    View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    v16 = *(_QWORD *)(View - 8);
    sub_24A65FAD0(v12+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v14, a1, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    v17 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56);
LABEL_18:
    v17(a1, 0, 1, View);
    return;
  }
  v20 = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
}

uint64_t sub_24A660F5C()
{
  uint64_t v0;
  uint64_t View;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v2 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v22 = v0;
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v11 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, View);
    goto LABEL_6;
  }
  v14 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_24A65FAD0(v14, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
  result = swift_bridgeObjectRetain();
  if (v13 == 1)
  {
LABEL_3:
    sub_24A65FA8C((uint64_t)v7, (uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v10, 0, 1, View);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, View) != 1)
    {
      v16 = *(_QWORD *)&v10[*(int *)(View + 24)];
      sub_24A65FB14((uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      return v16;
    }
LABEL_6:
    sub_24A63CD04((uint64_t)v10, &qword_257947ED0);
    return 0;
  }
  v17 = 1;
  while (v17 < *(_QWORD *)(v12 + 16))
  {
    sub_24A65FAD0(v14 + *(_QWORD *)(v2 + 72) * v17, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    v18 = *(int *)(View + 24);
    v19 = *(double *)&v4[v18];
    if (v4[v18 + 8])
      v19 = 0.0;
    v20 = &v7[v18];
    if ((v20[8] & 1) != 0)
    {
      if (v19 >= 0.0)
        goto LABEL_18;
    }
    else if (v19 >= *(double *)v20)
    {
LABEL_18:
      result = sub_24A65FB14((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      goto LABEL_10;
    }
    sub_24A65FB14((uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    result = sub_24A65FA8C((uint64_t)v4, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
LABEL_10:
    if (v13 == ++v17)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A661234()
{
  uint64_t v0;
  uint64_t View;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v2 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v22 = v0;
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v11 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, View);
    goto LABEL_6;
  }
  v14 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_24A65FAD0(v14, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
  result = swift_bridgeObjectRetain();
  if (v13 == 1)
  {
LABEL_3:
    sub_24A65FA8C((uint64_t)v7, (uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v10, 0, 1, View);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, View) != 1)
    {
      v16 = *(_QWORD *)&v10[*(int *)(View + 24)];
      sub_24A65FB14((uint64_t)v10, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      return v16;
    }
LABEL_6:
    sub_24A63CD04((uint64_t)v10, &qword_257947ED0);
    return 0;
  }
  v17 = 1;
  while (v17 < *(_QWORD *)(v12 + 16))
  {
    sub_24A65FAD0(v14 + *(_QWORD *)(v2 + 72) * v17, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    v18 = *(int *)(View + 24);
    v19 = *(double *)&v7[v18];
    if (v7[v18 + 8])
      v19 = 0.0;
    v20 = &v4[v18];
    if ((v20[8] & 1) != 0)
    {
      if (v19 >= 0.0)
        goto LABEL_18;
    }
    else if (v19 >= *(double *)v20)
    {
LABEL_18:
      result = sub_24A65FB14((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      goto LABEL_10;
    }
    sub_24A65FB14((uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    result = sub_24A65FA8C((uint64_t)v4, (uint64_t)v7, type metadata accessor for TrainingLoadViewModel.ChartPoint);
LABEL_10:
    if (v13 == ++v17)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A66150C()
{
  uint64_t v0;
  uint64_t View;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  char *v11;
  double v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double *v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v2 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v25 = v0;
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v5 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain();
    v10 = (double *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_24A65FAD0(v8, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      v11 = &v4[*(int *)(View + 32)];
      v12 = *(double *)v11;
      v13 = v11[8];
      sub_24A65FB14((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      if ((v13 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = (double *)sub_24A64D484(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v15 = *((_QWORD *)v10 + 2);
        v14 = *((_QWORD *)v10 + 3);
        if (v15 >= v14 >> 1)
          v10 = (double *)sub_24A64D484((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
        *((_QWORD *)v10 + 2) = v15 + 1;
        v10[v15 + 4] = v12;
      }
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v16 = *((_QWORD *)v10 + 2);
    if (v16)
      goto LABEL_11;
LABEL_18:
    v22 = 0.0;
    goto LABEL_19;
  }
  v10 = (double *)MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v16)
    goto LABEL_18;
LABEL_11:
  v17 = v10[4];
  v18 = v16 - 1;
  if (v16 != 1)
  {
    v19 = v10 + 5;
    do
    {
      v20 = *v19++;
      v21 = v20;
      if (v20 < v17)
        v17 = v21;
      --v18;
    }
    while (v18);
  }
  v22 = v17;
LABEL_19:
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v22;
}

uint64_t sub_24A661740()
{
  uint64_t v0;
  uint64_t View;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  char *v11;
  double v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double *v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v2 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v25 = v0;
  sub_24A661FA4();
  sub_24A7789BC();
  swift_release();
  v5 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain();
    v10 = (double *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_24A65FAD0(v8, (uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      v11 = &v4[*(int *)(View + 32)];
      v12 = *(double *)v11;
      v13 = v11[8];
      sub_24A65FB14((uint64_t)v4, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      if ((v13 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = (double *)sub_24A64D484(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v15 = *((_QWORD *)v10 + 2);
        v14 = *((_QWORD *)v10 + 3);
        if (v15 >= v14 >> 1)
          v10 = (double *)sub_24A64D484((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
        *((_QWORD *)v10 + 2) = v15 + 1;
        v10[v15 + 4] = v12;
      }
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v16 = *((_QWORD *)v10 + 2);
    if (v16)
      goto LABEL_11;
LABEL_18:
    v22 = 0.0;
    goto LABEL_19;
  }
  v10 = (double *)MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v16)
    goto LABEL_18;
LABEL_11:
  v17 = v10[4];
  v18 = v16 - 1;
  if (v16 != 1)
  {
    v19 = v10 + 5;
    do
    {
      v20 = *v19++;
      v21 = v20;
      if (v17 < v20)
        v17 = v21;
      --v18;
    }
    while (v18);
  }
  v22 = v17;
LABEL_19:
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v22;
}

uint64_t sub_24A661974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t View;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t);
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t KeyPath;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unsigned int v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v2 = v1;
  v67 = a1;
  v3 = sub_24A7788E4();
  v65 = *(_QWORD *)(v3 - 8);
  v66 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A778968();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A778818();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)v51 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EB8);
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EC0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_QWORD *)((char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v18 = (_QWORD *)((char *)v51 - v17);
  swift_getKeyPath();
  v19 = v1 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel___observationRegistrar;
  v72 = v2;
  v51[1] = sub_24A661FA4();
  v51[2] = v19;
  sub_24A7789BC();
  swift_release();
  v52 = v2;
  v20 = v2 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration;
  swift_beginAccess();
  v21 = *(_QWORD *)(v20 + *(int *)(type metadata accessor for TrainingLoadChart.Configuration(0) + 24));
  v22 = *(_QWORD *)(v21 + 16);
  v55 = *MEMORY[0x24BDCEF70];
  v54 = v21;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v56 = v22;
  v26 = v60;
  v25 = v61;
  do
  {
    if (v24 == v22)
    {
      v27 = 1;
      v28 = v22;
      v29 = v69;
    }
    else
    {
      v30 = v54;
      v29 = v69;
      if (v24 >= *(_QWORD *)(v54 + 16))
      {
        __break(1u);
        return result;
      }
      View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
      v32 = v30
          + ((*(unsigned __int8 *)(*(_QWORD *)(View - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(View - 8) + 80))
          + *(_QWORD *)(*(_QWORD *)(View - 8) + 72) * v24;
      v33 = (uint64_t)&v53[*(int *)(v29 + 48)];
      sub_24A65FAD0(v32, v33, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      v34 = (uint64_t)v15 + *(int *)(v29 + 48);
      *v15 = v24;
      sub_24A65FA8C(v33, v34, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      v27 = 0;
      v28 = v24 + 1;
    }
    v35 = v68;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v15, v27, 1, v29);
    sub_24A661FEC((uint64_t)v15, (uint64_t)v18);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v35 + 48))(v18, 1, v29) == 1)
      return swift_bridgeObjectRelease();
    v36 = *v18;
    v37 = (uint64_t)v18 + *(int *)(v29 + 48);
    v38 = v18;
    v39 = v15;
    v40 = v59;
    v41 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v57, v37, v26);
    sub_24A65FB14(v37, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    v43 = v65;
    v42 = v66;
    v44 = *(void (**)(char *, _QWORD, uint64_t))(v65 + 104);
    v70 = v28;
    v45 = v64;
    v44(v64, v55, v66);
    sub_24A7788F0();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v42);
    v46 = v58;
    sub_24A77B800();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v25, v63);
    LOBYTE(v42) = sub_24A7787D0();
    v47 = *(void (**)(char *, uint64_t))(v40 + 8);
    v15 = v39;
    v18 = v38;
    v22 = v56;
    v48 = v46;
    v24 = v70;
    v47(v48, v26);
    result = ((uint64_t (*)(char *, uint64_t))v47)(v41, v26);
  }
  while ((v42 & 1) == 0);
  result = swift_bridgeObjectRelease();
  if (v36 != -1)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v50 = v52;
    v51[-2] = v52;
    *(double *)&v51[-1] = (double)v36;
    v71 = v50;
    sub_24A7789B0();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A661E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24A65FB14(v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__configuration, type metadata accessor for TrainingLoadChart.Configuration);
  v1 = v0 + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel___observationRegistrar;
  v2 = sub_24A7789EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24A661EC4()
{
  return type metadata accessor for TrainingLoadChartViewModel();
}

uint64_t type metadata accessor for TrainingLoadChartViewModel()
{
  uint64_t result;

  result = qword_257947D68;
  if (!qword_257947D68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A661F08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TrainingLoadChart.Configuration(319);
  if (v1 <= 0x3F)
  {
    result = sub_24A7789EC();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

unint64_t sub_24A661FA4()
{
  unint64_t result;
  uint64_t ChartViewModel;

  result = qword_257947EC8;
  if (!qword_257947EC8)
  {
    ChartViewModel = type metadata accessor for TrainingLoadChartViewModel();
    result = MEMORY[0x24BD1A1F4](&unk_24A78012C, ChartViewModel);
    atomic_store(result, (unint64_t *)&qword_257947EC8);
  }
  return result;
}

uint64_t sub_24A661FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A66203C()
{
  return sub_24A6620F4();
}

uint64_t sub_24A662050()
{
  uint64_t v0;

  return sub_24A65FDC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24A662068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrainingLoadChart.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6620AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6620F4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16)
            + OBJC_IVAR____TtC9WorkoutUI26TrainingLoadChartViewModel__emphasizedChartPointIndexOffset) = *(_QWORD *)(v0 + 24);
  return sub_24A65FE2C();
}

void *EffortSampleCollection.effortSample.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  v2 = v1;
  return v1;
}

void *EffortSampleCollection.estimatedEffortSample.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
  v2 = v1;
  return v1;
}

id EffortSampleCollection.__allocating_init(effortSample:estimatedEffortSample:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___WOEffortSampleCollection_effortSample] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id EffortSampleCollection.init(effortSample:estimatedEffortSample:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___WOEffortSampleCollection_effortSample] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for EffortSampleCollection();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for EffortSampleCollection()
{
  return objc_opt_self();
}

void *sub_24A66232C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  v2 = v1;
  if (!v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
    if (v2)
      v3 = v2;
  }
  v4 = v1;
  return v2;
}

id sub_24A662410()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  if (v1)
  {
    v2 = *(id *)(v0 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  }
  else
  {
    v3 = *(void **)(v0 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
    if (!v3)
      return 0;
    v2 = v3;
    v1 = 0;
  }
  v4 = v1;
  v5 = objc_msgSend(v2, sel_quantity);

  return v5;
}

id EffortSampleCollection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void EffortSampleCollection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EffortSampleCollection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortSampleCollection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for EffortSampleCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EffortSampleCollection.__allocating_init(effortSample:estimatedEffortSample:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EffortSampleCollection.preferredSample.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of EffortSampleCollection.preferredQuantity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t RouteMapView.init(locationPositionPublisher:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_24A7799AC();
  sub_24A662604();
  result = sub_24A77A57C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_24A662604()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947F28;
  if (!qword_257947F28)
  {
    v1 = sub_24A7799AC();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEC5FC0], v1);
    atomic_store(result, (unint64_t *)&qword_257947F28);
  }
  return result;
}

uint64_t RouteMapView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  char v23;
  unsigned __int8 v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a1;
  v2 = type metadata accessor for RouteStatusView();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947F30);
  v43 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v37 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947F38);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947F40);
  MEMORY[0x24BDAC7A8](v42);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v16 = v1[1];
  sub_24A7799AC();
  sub_24A662604();
  swift_retain();
  v18 = sub_24A77A57C();
  v41 = v19;
  v20 = sub_24A77B65C();
  v39 = v21;
  v40 = v20;
  v45 = v17;
  v46 = v16;
  if ((sub_24A6629C8() & 1) != 0)
  {
    v38 = v18;
    swift_retain();
    sub_24A779988();
    swift_release();
    v22 = sub_24A77ACD8();
    v23 = sub_24A77ACF0();
    v24 = sub_24A77ACCC();
    v25 = sub_24A77ACE4();
    sub_24A77ACE4();
    if (sub_24A77ACE4() != v22)
      v25 = sub_24A77ACE4();
    sub_24A77ACE4();
    v26 = sub_24A77ACE4();
    v18 = v38;
    if (v26 != v23)
      v25 = sub_24A77ACE4();
    sub_24A77ACE4();
    if (sub_24A77ACE4() != v24)
      v25 = sub_24A77ACE4();
    sub_24A65FAD0((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RouteStatusView);
    v27 = &v8[*(int *)(v5 + 36)];
    *v27 = v25;
    *(_OWORD *)(v27 + 8) = 0u;
    *(_OWORD *)(v27 + 24) = 0u;
    v27[40] = 1;
    sub_24A65FB14((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RouteStatusView);
    sub_24A63F6C4((uint64_t)v8, (uint64_t)v10, &qword_257947F30);
    sub_24A63F6C4((uint64_t)v10, (uint64_t)v13, &qword_257947F30);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  v29 = v44;
  v31 = v41;
  v30 = v42;
  v33 = v39;
  v32 = v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v13, v28, 1, v5);
  sub_24A63F6C4((uint64_t)v13, (uint64_t)v15, &qword_257947F38);
  v34 = &v15[*(int *)(v30 + 36)];
  *(_QWORD *)v34 = v32;
  *((_QWORD *)v34 + 1) = v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947F48);
  sub_24A63CCC0((uint64_t)v15, (uint64_t)v29 + *(int *)(v35 + 36), &qword_257947F40);
  *v29 = v18;
  v29[1] = v31;
  return sub_24A63CD04((uint64_t)v15, &qword_257947F40);
}

uint64_t type metadata accessor for RouteStatusView()
{
  uint64_t result;

  result = qword_257947FC0;
  if (!qword_257947FC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A6629C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;

  v0 = sub_24A77A018();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A779400();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v8 = sub_24A779994();
  swift_release();
  v9 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_retain();
    sub_24A779988();
    swift_release();
    v10 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v10 == *MEMORY[0x24BEC5A28] || v10 == *MEMORY[0x24BEC5A18] || v10 == *MEMORY[0x24BEC5A38])
      return 1;
    if (v10 != *MEMORY[0x24BEC5A40] && v10 != *MEMORY[0x24BEC5A30] && v10 != *MEMORY[0x24BEC5A20])
    {
      sub_24A779A3C();
      v16 = sub_24A77A00C();
      v17 = sub_24A77BC5C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_24A635000, v16, v17, "Trying to display map view with unknown route postion, returning false", v18, 2u);
        MEMORY[0x24BD1A2B4](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return 0;
}

uint64_t sub_24A662BD4()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *assignWithCopy for RouteMapView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for RouteMapView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RouteMapView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RouteMapView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteMapView()
{
  return &type metadata for RouteMapView;
}

unint64_t sub_24A662CF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257947F50;
  if (!qword_257947F50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947F48);
    v2[0] = sub_24A662D74();
    v2[1] = sub_24A63CFF0(qword_257947F60, &qword_257947F40, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257947F50);
  }
  return result;
}

unint64_t sub_24A662D74()
{
  unint64_t result;

  result = qword_257947F58;
  if (!qword_257947F58)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for BreadcrumbMapView, &type metadata for BreadcrumbMapView);
    atomic_store(result, (unint64_t *)&qword_257947F58);
  }
  return result;
}

uint64_t sub_24A662DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_24A662DF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A779400();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_24A662E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_24A662E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_24A662EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_24A662EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_24A662F38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A662F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_24A662F80()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A662F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_24A662FCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A779400();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A663034()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A663044@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[9];

  v30 = a1;
  v3 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (double *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947FF8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948000);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A4EC();
  v13 = v12 * 0.5;
  v14 = (char *)v5 + *(int *)(v3 + 20);
  v15 = *MEMORY[0x24BDEEB68];
  v16 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  *v5 = v13;
  v5[1] = v13;
  sub_24A77A4EC();
  sub_24A77B668();
  sub_24A77A4B0();
  v17 = MEMORY[0x24BDED998];
  sub_24A65FAD0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v18 = &v8[*(int *)(v6 + 36)];
  v19 = v32;
  *(_OWORD *)v18 = v31;
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v33;
  sub_24A65FB14((uint64_t)v5, (uint64_t (*)(_QWORD))v17);
  v20 = sub_24A77B350();
  sub_24A63CCC0((uint64_t)v8, (uint64_t)v11, &qword_257947FF8);
  *(_QWORD *)&v11[*(int *)(v9 + 36)] = v20;
  sub_24A63CD04((uint64_t)v8, &qword_257947FF8);
  v21 = sub_24A77B668();
  v23 = v22;
  sub_24A6632CC(v30, (uint64_t)v34);
  sub_24A63CCC0((uint64_t)v11, a2, &qword_257948000);
  v24 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257948008) + 36);
  v25 = v34[7];
  *(_OWORD *)(v24 + 96) = v34[6];
  *(_OWORD *)(v24 + 112) = v25;
  *(_OWORD *)(v24 + 128) = v34[8];
  v26 = v34[3];
  *(_OWORD *)(v24 + 32) = v34[2];
  *(_OWORD *)(v24 + 48) = v26;
  v27 = v34[5];
  *(_OWORD *)(v24 + 64) = v34[4];
  *(_OWORD *)(v24 + 80) = v27;
  v28 = v34[1];
  *(_OWORD *)v24 = v34[0];
  *(_OWORD *)(v24 + 16) = v28;
  *(_QWORD *)(v24 + 144) = v21;
  *(_QWORD *)(v24 + 152) = v23;
  return sub_24A63CD04((uint64_t)v11, &qword_257948000);
}

__n128 sub_24A6632CC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __n128 result;
  uint64_t v63;
  __int128 v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  char v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  char v125;
  unsigned __int8 v126;
  char v127;
  __int128 v128;
  __n128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  _OWORD v135[2];
  uint64_t v136;
  uint64_t v137;
  char v138;
  __int128 v139;
  unsigned __int16 v140;
  unint64_t v141;
  char v142;
  uint64_t v143;
  char v144;
  __int128 v145;
  uint64_t v146;
  __int128 v147;
  char v148;
  uint64_t v149;
  __int128 v150;
  __n128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  _OWORD v157[4];
  __int128 v158;
  __n128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  _OWORD v165[2];
  __int128 v166;
  __n128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  _OWORD v173[2];
  __int128 v174;
  __n128 v175;
  __int128 v176;
  _BYTE v177[32];
  __int128 v178;
  __int128 v179;
  _OWORD v180[3];

  v122 = a2;
  v3 = sub_24A77AE70();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A779400();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == *MEMORY[0x24BEC5A28])
  {
    sub_24A77A9C0();
    v12 = sub_24A77AFC0();
    v14 = v13;
    v15 = v4;
    v17 = v16 & 1;
    sub_24A77AE4C();
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v6, *MEMORY[0x24BDF17C8], v3);
    sub_24A77AE88();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v3);
    v18 = sub_24A77AF84();
    v20 = v19;
    v22 = v21;
    swift_release();
    v23 = v22 & 1;
    sub_24A64596C(v12, v14, v17);
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    v27 = objc_msgSend(v25, sel_colorWithAlphaComponent_, 0.2);

    *(_QWORD *)&v174 = MEMORY[0x24BD189B8](v26);
    v28 = sub_24A77AF54();
    v30 = v29;
    v32 = v31;
    v34 = v33 & 1;
    sub_24A64596C(v18, v20, v23);
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v166 = v28;
    *((_QWORD *)&v166 + 1) = v30;
    v167.n128_u64[0] = v34;
    v167.n128_u64[1] = v32;
    LOBYTE(v168) = 1;
    sub_24A6436C4(v28, v30, v34);
    swift_bridgeObjectRetain();
    sub_24A77AB28();
    v150 = v174;
    v151 = v175;
    LOBYTE(v152) = v176;
    sub_24A664F24((uint64_t)&v150);
    sub_24A63F6C4((uint64_t)&v150, (uint64_t)&v174, &qword_257948060);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948038);
    sub_24A6559C8();
    sub_24A664E0C();
    sub_24A77AB28();
    v172 = v134;
    v173[0] = v135[0];
    *(_OWORD *)((char *)v173 + 10) = *(_OWORD *)((char *)v135 + 10);
    v168 = v130;
    v169 = v131;
    v170 = v132;
    v171 = v133;
    v166 = v128;
    v167 = v129;
    sub_24A664F14((uint64_t)&v166);
    sub_24A63F6C4((uint64_t)&v166, (uint64_t)&v174, &qword_257948010);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948018);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948020);
    sub_24A664DA0();
    sub_24A664E90();
    sub_24A77AB28();
    v35 = v28;
    v36 = v30;
    v37 = v34;
  }
  else
  {
    if (v11 == *MEMORY[0x24BEC5A18])
    {
      sub_24A77A9C0();
      v40 = sub_24A77AFC0();
      v42 = v41;
      v43 = v3;
      v45 = v44 & 1;
      sub_24A77AE4C();
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF17C8], v43);
      sub_24A77AE88();
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v43);
      v46 = sub_24A77AF84();
      v48 = v47;
      LOBYTE(v43) = v49;
      v51 = v50;
      swift_release();
      sub_24A64596C(v40, v42, v45);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v166 = v46;
      v52 = v48;
      *((_QWORD *)&v166 + 1) = v48;
      v167.n128_u64[0] = v43 & 1;
      v167.n128_u64[1] = v51;
      LOBYTE(v168) = 0;
      v53 = v46;
      v54 = v46;
      v55 = v52;
      sub_24A6436C4(v53, v52, v43 & 1);
      swift_bridgeObjectRetain();
      sub_24A77AB28();
      v150 = v174;
      v151 = v175;
      LOBYTE(v152) = v176;
      sub_24A664F24((uint64_t)&v150);
      sub_24A63F6C4((uint64_t)&v150, (uint64_t)&v174, &qword_257948060);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948038);
      sub_24A6559C8();
      sub_24A664E0C();
      sub_24A77AB28();
      v171 = v133;
      v172 = v134;
      v173[0] = v135[0];
      *(_OWORD *)((char *)v173 + 10) = *(_OWORD *)((char *)v135 + 10);
      v168 = v130;
      v169 = v131;
      v170 = v132;
      v166 = v128;
      v167 = v129;
      sub_24A664F14((uint64_t)&v166);
      sub_24A63F6C4((uint64_t)&v166, (uint64_t)&v174, &qword_257948010);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948018);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948020);
      sub_24A664DA0();
      sub_24A664E90();
      sub_24A77AB28();
      sub_24A64596C(v54, v55, v43 & 1);
      swift_bridgeObjectRelease();
      v178 = v163;
      v179 = v164;
      v180[0] = v165[0];
      *(_OWORD *)((char *)v180 + 11) = *(_OWORD *)((char *)v165 + 11);
      v176 = v160;
      *(_OWORD *)v177 = v161;
      *(_OWORD *)&v177[16] = v162;
      goto LABEL_7;
    }
    if (v11 == *MEMORY[0x24BEC5A38])
    {
      v63 = sub_24A77A930();
      sub_24A6646D0((uint64_t)&v174);
      v64 = v178;
      v65 = v179;
      v127 = 1;
      v126 = v175.n128_u8[0];
      v125 = v176;
      v124 = v177[0];
      v123 = v179;
      v136 = v63;
      v137 = 0;
      v138 = 1;
      v139 = v174;
      v120 = *((_QWORD *)&v179 + 1);
      v121 = v174;
      v140 = v175.n128_u16[0];
      v141 = v175.n128_u64[1];
      v142 = v176;
      v143 = *((_QWORD *)&v176 + 1);
      v144 = v177[0];
      v145 = *(_OWORD *)&v177[8];
      v146 = *(_QWORD *)&v177[24];
      v147 = v178;
      v148 = v179;
      v149 = *((_QWORD *)&v179 + 1);
      sub_24A664F1C((uint64_t)&v136);
      sub_24A63F6C4((uint64_t)&v136, (uint64_t)&v174, &qword_257948058);
      swift_retain();
      swift_retain();
      sub_24A6436C4(v64, *((uint64_t *)&v64 + 1), v65);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948048);
      sub_24A63CFF0(&qword_257948040, &qword_257948048, MEMORY[0x24BDF4498]);
      sub_24A77AB28();
      v156 = v172;
      v157[0] = v173[0];
      *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)((char *)v173 + 9);
      v152 = v168;
      v153 = v169;
      v154 = v170;
      v155 = v171;
      v150 = v166;
      v151 = v167;
      sub_24A664F08((uint64_t)&v150);
      sub_24A63F6C4((uint64_t)&v150, (uint64_t)&v174, &qword_257948060);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948038);
      sub_24A6559C8();
      sub_24A664E0C();
      sub_24A77AB28();
      v172 = v134;
      v173[0] = v135[0];
      *(_OWORD *)((char *)v173 + 10) = *(_OWORD *)((char *)v135 + 10);
      v168 = v130;
      v169 = v131;
      v170 = v132;
      v171 = v133;
      v166 = v128;
      v167 = v129;
      sub_24A664F14((uint64_t)&v166);
      sub_24A63F6C4((uint64_t)&v166, (uint64_t)&v174, &qword_257948010);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948018);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948020);
      sub_24A664DA0();
      sub_24A664E90();
      sub_24A77AB28();
      swift_release();
      swift_release();
      sub_24A64596C(v64, *((uint64_t *)&v64 + 1), v65);
      swift_bridgeObjectRelease();
      v179 = v164;
      v180[0] = v165[0];
      *(_OWORD *)((char *)v180 + 11) = *(_OWORD *)((char *)v165 + 11);
      v176 = v160;
      *(_OWORD *)v177 = v161;
      *(_OWORD *)&v177[16] = v162;
      v178 = v163;
      v57 = v158;
      v56 = v159;
      goto LABEL_8;
    }
    if (v11 == *MEMORY[0x24BEC5A40])
    {
      sub_24A77A9C0();
      v66 = sub_24A77AFC0();
      v68 = v67;
      v69 = v3;
      v71 = v70 & 1;
      sub_24A77AE4C();
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF17C8], v69);
      sub_24A77AE88();
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v69);
      v72 = sub_24A77AF84();
      v74 = v73;
      LOBYTE(v69) = v75;
      v77 = v76;
      swift_release();
      sub_24A64596C(v66, v68, v71);
      swift_bridgeObjectRelease();
      v136 = v72;
      v137 = v74;
      v138 = v69 & 1;
      *(_QWORD *)&v139 = v77;
      sub_24A664EFC((uint64_t)&v136);
      sub_24A63F6C4((uint64_t)&v136, (uint64_t)&v174, &qword_257948058);
      sub_24A6436C4(v72, v74, v69 & 1);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948048);
      sub_24A63CFF0(&qword_257948040, &qword_257948048, MEMORY[0x24BDF4498]);
      sub_24A77AB28();
      v156 = v172;
      v157[0] = v173[0];
      *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)((char *)v173 + 9);
      v152 = v168;
      v153 = v169;
      v154 = v170;
      v155 = v171;
      v150 = v166;
      v151 = v167;
      sub_24A664F08((uint64_t)&v150);
      sub_24A63F6C4((uint64_t)&v150, (uint64_t)&v174, &qword_257948060);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948038);
      sub_24A6559C8();
      sub_24A664E0C();
      sub_24A77AB28();
      v172 = v134;
      v173[0] = v135[0];
      *(_OWORD *)((char *)v173 + 10) = *(_OWORD *)((char *)v135 + 10);
      v168 = v130;
      v169 = v131;
      v170 = v132;
      v171 = v133;
      v166 = v128;
      v167 = v129;
      sub_24A664F14((uint64_t)&v166);
      sub_24A63F6C4((uint64_t)&v166, (uint64_t)&v174, &qword_257948010);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948018);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948020);
      sub_24A664DA0();
      sub_24A664E90();
      sub_24A77AB28();
      sub_24A64596C(v72, v74, v69 & 1);
      swift_bridgeObjectRelease();
      v38 = v164;
      v39 = v165[0];
      goto LABEL_4;
    }
    if (v11 == *MEMORY[0x24BEC5A30])
    {
      sub_24A77A9C0();
      v78 = sub_24A77AFC0();
      v80 = v79;
      v81 = v3;
      v83 = v82 & 1;
      sub_24A77AE4C();
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF17C8], v81);
      sub_24A77AE88();
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v81);
      v84 = sub_24A77AF84();
      v86 = v85;
      v88 = v87;
      v90 = v89;
      swift_release();
      v91 = v88 & 1;
      sub_24A64596C(v78, v80, v83);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v166 = v84;
      *((_QWORD *)&v166 + 1) = v86;
      v167.n128_u64[0] = v88 & 1;
      v167.n128_u64[1] = v90;
      LOBYTE(v168) = 0;
      sub_24A6436C4(v84, v86, v88 & 1);
      swift_bridgeObjectRetain();
      sub_24A77AB28();
      v92 = v176;
      v166 = v174;
      v167 = v175;
    }
    else
    {
      v120 = v4;
      v121 = v3;
      if (v11 != *MEMORY[0x24BEC5A20])
      {
        sub_24A77A9C0();
        v104 = sub_24A77AFC0();
        v118 = v106;
        v119 = v105;
        v117 = v107 & 1;
        sub_24A77AE4C();
        v109 = v120;
        v108 = v121;
        (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v6, *MEMORY[0x24BDF17C8], v121);
        sub_24A77AE88();
        swift_release();
        (*(void (**)(char *, uint64_t))(v109 + 8))(v6, v108);
        v110 = v119;
        LOBYTE(v109) = v117;
        v120 = sub_24A77AF84();
        v121 = v111;
        v116 = v112;
        v114 = v113;
        swift_release();
        sub_24A64596C(v104, v110, v109);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v166 = v120;
        v115 = v116;
        *((_QWORD *)&v166 + 1) = v116;
        v167.n128_u64[0] = v114 & 1;
        v167.n128_u64[1] = v121;
        LOWORD(v168) = 256;
        sub_24A6436C4(v120, v116, v114 & 1);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
        sub_24A6559C8();
        sub_24A77AB28();
        v158 = v174;
        v159 = v175;
        LOWORD(v160) = v176;
        sub_24A664D94((uint64_t)&v158);
        sub_24A63F6C4((uint64_t)&v158, (uint64_t)&v166, &qword_257948010);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257948018);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257948020);
        sub_24A664DA0();
        sub_24A664E90();
        sub_24A77AB28();
        sub_24A64596C(v120, v115, v114 & 1);
        swift_bridgeObjectRelease();
        v172 = v179;
        v173[0] = v180[0];
        *(_OWORD *)((char *)v173 + 11) = *(_OWORD *)((char *)v180 + 11);
        v168 = v176;
        v169 = *(_OWORD *)v177;
        v170 = *(_OWORD *)&v177[16];
        v171 = v178;
        v166 = v174;
        v167 = v175;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v179 = v172;
        v180[0] = v173[0];
        *(_OWORD *)((char *)v180 + 11) = *(_OWORD *)((char *)v173 + 11);
        v176 = v168;
        *(_OWORD *)v177 = v169;
        *(_OWORD *)&v177[16] = v170;
        v178 = v171;
        v57 = v166;
        v56 = v167;
        goto LABEL_8;
      }
      sub_24A77A9C0();
      v93 = sub_24A77AFC0();
      v95 = v94;
      v97 = v96 & 1;
      sub_24A77AE4C();
      v99 = v120;
      v98 = v121;
      (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v6, *MEMORY[0x24BDF17C8], v121);
      sub_24A77AE88();
      swift_release();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v6, v98);
      v84 = sub_24A77AF84();
      v86 = v100;
      LOBYTE(v99) = v101;
      v103 = v102;
      swift_release();
      v91 = v99 & 1;
      sub_24A64596C(v93, v95, v97);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v166 = v84;
      *((_QWORD *)&v166 + 1) = v86;
      v167.n128_u64[0] = v99 & 1;
      v167.n128_u64[1] = v103;
      LOBYTE(v168) = 1;
      sub_24A6436C4(v84, v86, v99 & 1);
      swift_bridgeObjectRetain();
      sub_24A77AB28();
      v92 = v176;
      v166 = v174;
      v167 = v175;
    }
    LOWORD(v168) = v92;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
    sub_24A6559C8();
    sub_24A77AB28();
    v166 = v174;
    v167 = v175;
    LOWORD(v168) = v176;
    sub_24A664D94((uint64_t)&v166);
    sub_24A63F6C4((uint64_t)&v166, (uint64_t)&v174, &qword_257948010);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948018);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948020);
    sub_24A664DA0();
    sub_24A664E90();
    sub_24A77AB28();
    v35 = v84;
    v36 = v86;
    v37 = v91;
  }
  sub_24A64596C(v35, v36, v37);
  swift_bridgeObjectRelease();
  v38 = v164;
  v39 = v165[0];
LABEL_4:
  v179 = v38;
  v180[0] = v39;
  *(_OWORD *)((char *)v180 + 11) = *(_OWORD *)((char *)v165 + 11);
  v176 = v160;
  *(_OWORD *)v177 = v161;
  *(_OWORD *)&v177[16] = v162;
  v178 = v163;
LABEL_7:
  v57 = v158;
  v56 = v159;
LABEL_8:
  v174 = v57;
  v175 = v56;
  v58 = v180[0];
  v59 = v122;
  *(_OWORD *)(v122 + 96) = v179;
  *(_OWORD *)(v59 + 112) = v58;
  *(_OWORD *)(v59 + 123) = *(_OWORD *)((char *)v180 + 11);
  v60 = *(_OWORD *)v177;
  *(_OWORD *)(v59 + 32) = v176;
  *(_OWORD *)(v59 + 48) = v60;
  v61 = v178;
  *(_OWORD *)(v59 + 64) = *(_OWORD *)&v177[16];
  *(_OWORD *)(v59 + 80) = v61;
  result = v175;
  *(_OWORD *)v59 = v174;
  *(__n128 *)(v59 + 16) = result;
  return result;
}

uint64_t sub_24A6646D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;

  v2 = sub_24A77AE70();
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77B3D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948068);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77B3C8();
  sub_24A77AA20();
  v12 = sub_24A77AA2C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  sub_24A77B3F8();
  swift_release();
  sub_24A63CD04((uint64_t)v11, &qword_257948068);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF3FD0], v5);
  v40 = sub_24A77B41C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24A77A4EC();
  sub_24A77B668();
  sub_24A77A4B0();
  v39 = v43;
  v38 = v44;
  v37 = v45;
  v36 = v46;
  v34 = v48;
  v35 = v47;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  v16 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.2);

  v33 = MEMORY[0x24BD189B8](v15);
  sub_24A77A9C0();
  v17 = sub_24A77AFC0();
  v19 = v18;
  v21 = v20 & 1;
  sub_24A77AE40();
  v23 = v41;
  v22 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v4, *MEMORY[0x24BDF17C8], v42);
  sub_24A77AE88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v22);
  v24 = sub_24A77AF84();
  v26 = v25;
  LOBYTE(v22) = v27;
  v29 = v28;
  swift_release();
  LOBYTE(v22) = v22 & 1;
  sub_24A64596C(v17, v19, v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v40;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v39;
  *(_BYTE *)(a1 + 32) = v38;
  *(_QWORD *)(a1 + 40) = v37;
  *(_BYTE *)(a1 + 48) = v36;
  v31 = v33;
  v30 = v34;
  *(_QWORD *)(a1 + 56) = v35;
  *(_QWORD *)(a1 + 64) = v30;
  *(_QWORD *)(a1 + 72) = v31;
  *(_QWORD *)(a1 + 80) = v24;
  *(_QWORD *)(a1 + 88) = v26;
  *(_BYTE *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 104) = v29;
  swift_retain();
  swift_retain();
  sub_24A6436C4(v24, v26, v22);
  swift_bridgeObjectRetain();
  sub_24A64596C(v24, v26, v22);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_24A664B78@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  double result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  __int128 v21;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = sub_24A77B35C();
  v7 = sub_24A77B668();
  v9 = v8;
  sub_24A65FAD0(v2, (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for RouteStatusView);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  sub_24A664D04((uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_24A77B668();
  sub_24A77A4B0();
  v12 = v17;
  v13 = v18;
  v14 = v19;
  v15 = v20;
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = sub_24A664D48;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v12;
  *(_BYTE *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 64) = v15;
  result = *(double *)&v21;
  *(_OWORD *)(a2 + 72) = v21;
  return result;
}

uint64_t sub_24A664C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RouteStatusView() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_24A664D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RouteStatusView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A664D48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RouteStatusView() - 8) + 80);
  return sub_24A663044(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_24A664D94(uint64_t result)
{
  *(_BYTE *)(result + 138) = 1;
  return result;
}

unint64_t sub_24A664DA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948028;
  if (!qword_257948028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948018);
    v2[0] = sub_24A6559C8();
    v2[1] = sub_24A664E0C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948028);
  }
  return result;
}

unint64_t sub_24A664E0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948030;
  if (!qword_257948030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948038);
    v2[0] = sub_24A63CFF0(&qword_257948040, &qword_257948048, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948030);
  }
  return result;
}

unint64_t sub_24A664E90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948050;
  if (!qword_257948050)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948020);
    v2[0] = sub_24A6559C8();
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948050);
  }
  return result;
}

uint64_t sub_24A664EFC(uint64_t result)
{
  *(_BYTE *)(result + 136) = 1;
  return result;
}

uint64_t sub_24A664F08(uint64_t result)
{
  *(_BYTE *)(result + 137) = 1;
  return result;
}

uint64_t sub_24A664F14(uint64_t result)
{
  *(_BYTE *)(result + 138) = 0;
  return result;
}

uint64_t sub_24A664F1C(uint64_t result)
{
  *(_BYTE *)(result + 136) = 0;
  return result;
}

uint64_t sub_24A664F24(uint64_t result)
{
  *(_BYTE *)(result + 137) = 0;
  return result;
}

unint64_t sub_24A664F30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948070;
  if (!qword_257948070)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948078);
    v2[0] = sub_24A664F9C();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948070);
  }
  return result;
}

unint64_t sub_24A664F9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948080;
  if (!qword_257948080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948088);
    v2[0] = sub_24A665020();
    v2[1] = sub_24A63CFF0(&qword_2579480A8, &qword_2579480B0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948080);
  }
  return result;
}

unint64_t sub_24A665020()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948090;
  if (!qword_257948090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948098);
    v2[0] = sub_24A6650A4();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948090);
  }
  return result;
}

unint64_t sub_24A6650A4()
{
  unint64_t result;

  result = qword_2579480A0;
  if (!qword_2579480A0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_2579480A0);
  }
  return result;
}

uint64_t destroy for TrainingLoadOnboardingButton()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for TrainingLoadOnboardingButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TrainingLoadOnboardingButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TrainingLoadOnboardingButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadOnboardingButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadOnboardingButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadOnboardingButton()
{
  return &type metadata for TrainingLoadOnboardingButton;
}

uint64_t sub_24A6652A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6652B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char *v31;
  __int128 v32;
  _OWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v42;
  unsigned __int8 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;

  v68 = a3;
  v67 = a1;
  v82 = a5;
  v77 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v77);
  v76 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_24A77AC3C();
  v71 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579480B8);
  v69 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946EF0);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946EF8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579480C0);
  MEMORY[0x24BDAC7A8](v72);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579480C8);
  MEMORY[0x24BDAC7A8](v75);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579480D0);
  MEMORY[0x24BDAC7A8](v78);
  v81 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579480D8);
  MEMORY[0x24BDAC7A8](v79);
  v80 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (_QWORD *)swift_allocObject();
  v25 = v67;
  v24[2] = v67;
  v24[3] = a2;
  v26 = v68;
  v24[4] = v68;
  v24[5] = a4;
  v83 = v25;
  v84 = a2;
  v85 = v26;
  v86 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579480E0);
  sub_24A665CEC(&qword_2579480E8, &qword_2579480E0, sub_24A665CC8, MEMORY[0x24BDECC60]);
  sub_24A77B4B8();
  sub_24A77AC30();
  sub_24A63CFF0(&qword_257948120, &qword_2579480B8, MEMORY[0x24BDF43B0]);
  sub_24A665E3C();
  v27 = v70;
  sub_24A77B0C8();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v27);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v12, v10);
  v28 = sub_24A77B668();
  v30 = sub_24A641CF4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, 0.0, 1, v28, v29);
  (*(void (**)(char *, uint64_t, double))(v73 + 8))(v14, v74, v30);
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A63CCC0((uint64_t)v17, (uint64_t)v19, &qword_257946EF8);
  v31 = &v19[*(int *)(v72 + 36)];
  v32 = v88;
  *(_OWORD *)v31 = v87;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v89;
  sub_24A63CD04((uint64_t)v17, &qword_257946EF8);
  v33 = v76;
  v34 = &v76[*(int *)(v77 + 20)];
  v35 = *MEMORY[0x24BDEEB68];
  v36 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v34, v35, v36);
  __asm { FMOV            V0.2D, #12.0 }
  *v33 = _Q0;
  v42 = (uint64_t)&v21[*(int *)(v75 + 36)];
  sub_24A655654((uint64_t)v33, v42);
  *(_WORD *)(v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257948130) + 36)) = 256;
  sub_24A63CCC0((uint64_t)v19, (uint64_t)v21, &qword_2579480C0);
  sub_24A655698((uint64_t)v33);
  sub_24A63CD04((uint64_t)v19, &qword_2579480C0);
  LOBYTE(v35) = sub_24A77ACC0();
  v43 = sub_24A77ACA8();
  v44 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v35)
    v44 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v43)
    v44 = sub_24A77ACE4();
  sub_24A77A390();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v53 = v81;
  sub_24A63CCC0((uint64_t)v21, v81, &qword_2579480C8);
  v54 = v53 + *(int *)(v78 + 36);
  *(_BYTE *)v54 = v44;
  *(_QWORD *)(v54 + 8) = v46;
  *(_QWORD *)(v54 + 16) = v48;
  *(_QWORD *)(v54 + 24) = v50;
  *(_QWORD *)(v54 + 32) = v52;
  *(_BYTE *)(v54 + 40) = 0;
  sub_24A63CD04((uint64_t)v21, &qword_2579480C8);
  v55 = sub_24A77ACCC();
  sub_24A77A390();
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v64 = v80;
  sub_24A63CCC0(v53, v80, &qword_2579480D0);
  v65 = v64 + *(int *)(v79 + 36);
  *(_BYTE *)v65 = v55;
  *(_QWORD *)(v65 + 8) = v57;
  *(_QWORD *)(v65 + 16) = v59;
  *(_QWORD *)(v65 + 24) = v61;
  *(_QWORD *)(v65 + 32) = v63;
  *(_BYTE *)(v65 + 40) = 0;
  sub_24A63CD04(v53, &qword_2579480D0);
  return sub_24A665E84(v64, v82);
}

uint64_t sub_24A665954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[9];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;
  _BYTE v60[7];
  char v61;
  _DWORD v62[5];

  v6 = sub_24A77AE70();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v50 = a1;
  *((_QWORD *)&v50 + 1) = a2;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v8 = sub_24A77AFD8();
  v10 = v9;
  v12 = v11 & 1;
  *(_QWORD *)&v50 = sub_24A77B350();
  v13 = sub_24A77AF54();
  v45 = v14;
  v16 = v15;
  v18 = v17 & 1;
  sub_24A64596C(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  v19 = sub_24A77B668();
  v20 = v45;
  sub_24A641D4C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v49, 0.0, 1, 0.0, 1, v19, v21, v13, v45, v18, v16);
  sub_24A64596C(v13, v20, v18);
  swift_bridgeObjectRelease();
  v56 = v49[6];
  v57 = v49[7];
  v58 = v49[8];
  v52 = v49[2];
  v53 = v49[3];
  v54 = v49[4];
  v55 = v49[5];
  v50 = v49[0];
  v51 = v49[1];
  sub_24A77AD98();
  v23 = v46;
  v22 = v47;
  v24 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, *MEMORY[0x24BDF17C8], v48);
  sub_24A77AE88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  sub_24A77AE04();
  v25 = sub_24A77AE58();
  swift_release();
  KeyPath = swift_getKeyPath();
  LOBYTE(v24) = sub_24A77ACFC();
  sub_24A77A390();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v59 = 0;
  LOBYTE(v22) = sub_24A77ACA8();
  result = sub_24A77A390();
  *(_DWORD *)(a3 + 161) = *(_DWORD *)v60;
  *(_DWORD *)(a3 + 164) = *(_DWORD *)&v60[3];
  v36 = v59;
  v61 = 0;
  v37 = v57;
  *(_OWORD *)(a3 + 96) = v56;
  *(_OWORD *)(a3 + 112) = v37;
  *(_OWORD *)(a3 + 128) = v58;
  v38 = v53;
  *(_OWORD *)(a3 + 32) = v52;
  *(_OWORD *)(a3 + 48) = v38;
  v39 = v55;
  *(_OWORD *)(a3 + 64) = v54;
  *(_OWORD *)(a3 + 80) = v39;
  v40 = v51;
  *(_OWORD *)a3 = v50;
  *(_OWORD *)(a3 + 16) = v40;
  *(_QWORD *)(a3 + 144) = KeyPath;
  *(_QWORD *)(a3 + 152) = v25;
  *(_BYTE *)(a3 + 160) = v24;
  *(_QWORD *)(a3 + 168) = v28;
  *(_QWORD *)(a3 + 176) = v30;
  *(_QWORD *)(a3 + 184) = v32;
  *(_QWORD *)(a3 + 192) = v34;
  *(_BYTE *)(a3 + 200) = v36;
  *(_DWORD *)(a3 + 201) = v49[0];
  *(_DWORD *)(a3 + 204) = *(_DWORD *)((char *)v49 + 3);
  *(_BYTE *)(a3 + 208) = v22;
  *(_DWORD *)(a3 + 209) = v62[0];
  *(_DWORD *)(a3 + 212) = *(_DWORD *)((char *)v62 + 3);
  *(_QWORD *)(a3 + 216) = v41;
  *(_QWORD *)(a3 + 224) = v42;
  *(_QWORD *)(a3 + 232) = v43;
  *(_QWORD *)(a3 + 240) = v44;
  *(_BYTE *)(a3 + 248) = v61;
  return result;
}

uint64_t sub_24A665C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24A6652B4(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_24A665C70()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A665C9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_24A665CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A665954(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_24A665CC8()
{
  return sub_24A665CEC(&qword_2579480F0, &qword_2579480F8, (uint64_t (*)(void))sub_24A665D54, MEMORY[0x24BDECC60]);
}

uint64_t sub_24A665CEC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A665D54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948100;
  if (!qword_257948100)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948108);
    v2[0] = sub_24A665DD8();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948100);
  }
  return result;
}

unint64_t sub_24A665DD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948110;
  if (!qword_257948110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948118);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948110);
  }
  return result;
}

unint64_t sub_24A665E3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257948128;
  if (!qword_257948128)
  {
    v1 = sub_24A77AC3C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF0D88], v1);
    atomic_store(result, (unint64_t *)&qword_257948128);
  }
  return result;
}

uint64_t sub_24A665E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579480D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A665ED4()
{
  return sub_24A665CEC(&qword_257948138, &qword_2579480D8, sub_24A665F08, MEMORY[0x24BDECC60]);
}

uint64_t sub_24A665F08()
{
  return sub_24A665CEC(&qword_257948140, &qword_2579480D0, (uint64_t (*)(void))sub_24A665F2C, MEMORY[0x24BDECC60]);
}

unint64_t sub_24A665F2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948148;
  if (!qword_257948148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579480C8);
    v2[0] = sub_24A665CEC(&qword_257948150, &qword_2579480C0, (uint64_t (*)(void))sub_24A665FD0, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_24A63CFF0(&qword_257948160, &qword_257948130, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948148);
  }
  return result;
}

unint64_t sub_24A665FD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_257948158;
  if (!qword_257948158)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946EF8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579480B8);
    v2[3] = sub_24A77AC3C();
    v2[4] = sub_24A63CFF0(&qword_257948120, &qword_2579480B8, MEMORY[0x24BDF43B0]);
    v2[5] = sub_24A665E3C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948158);
  }
  return result;
}

uint64_t *sub_24A66609C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77AE64();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = v11[8];
    j__swift_retain();
    *(_QWORD *)v10 = v12;
    v10[8] = v13;
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_24A6661A8(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_24A77AE64();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return j__swift_release();
}

_QWORD *sub_24A666220(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A77AE64();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = v9[8];
  j__swift_retain();
  *(_QWORD *)v8 = v10;
  v8[8] = v11;
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_24A6662FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char v11;

  if (a1 != a2)
  {
    sub_24A6663F4((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_24A77AE64();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = v9[8];
  j__swift_retain();
  *(_QWORD *)v8 = v10;
  v8[8] = v11;
  j__swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_24A6663F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_24A666434(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_24A77AE64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  return a1;
}

char *sub_24A6664F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_24A6663F4((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77AE64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  j__swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_24A6665D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6665E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_257948168);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_24A666660()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A66666C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_257948168);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for FastDigitView()
{
  uint64_t result;

  result = qword_2579481C8;
  if (!qword_2579481C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A666728()
{
  unint64_t v0;

  sub_24A6667A8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24A6667A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2579481D8[0])
  {
    sub_24A77AE64();
    v0 = sub_24A77A3F0();
    if (!v1)
      atomic_store(v0, qword_2579481D8);
  }
}

uint64_t sub_24A6667FC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24A66680C()
{
  unint64_t result;

  result = sub_24A64C018(MEMORY[0x24BEE4AF8]);
  qword_257959860 = result;
  return result;
}

double sub_24A666830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  double v13;
  void *v14;
  void *v15;
  uint64_t inited;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = sub_24A77AE64();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + *(int *)(type metadata accessor for FastDigitView() + 20);
  v6 = *(_QWORD *)v5;
  v7 = *(_BYTE *)(v5 + 8);
  j__swift_retain();
  v8 = sub_24A63E800(v6, v7);
  j__swift_release();
  if (v8)
  {
    if (qword_2579467D0 != -1)
      swift_once();
    swift_beginAccess();
    v9 = qword_257959860;
    if (*(_QWORD *)(qword_257959860 + 16))
    {
      v10 = swift_retain();
      v11 = sub_24A64E7FC(v10);
      if ((v12 & 1) != 0)
      {
        v13 = *(double *)(*(_QWORD *)(v9 + 56) + 16 * v11);
        swift_endAccess();
        swift_release();
LABEL_10:
        swift_release();
        return v13;
      }
      swift_release();
    }
    swift_endAccess();
    sub_24A63E7D8((uint64_t)v4);
    v14 = (void *)sub_24A77AD14();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v29 = 0;
    sub_24A666F3C();
    sub_24A77BE78();
    v15 = (void *)sub_24A77B980();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948218);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A780030;
    v17 = (void *)*MEMORY[0x24BEBB360];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
    type metadata accessor for CTFont(0);
    *(_QWORD *)(inited + 64) = v18;
    *(_QWORD *)(inited + 40) = v14;
    v19 = v17;
    v20 = v14;
    sub_24A64C124(inited);
    type metadata accessor for Key(0);
    sub_24A63C880((unint64_t *)&qword_257946B90, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_24A77E2E4);
    v21 = (void *)sub_24A77B8F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_sizeWithAttributes_, v21);
    v13 = v22;
    v24 = v23;

    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = qword_257959860;
    qword_257959860 = 0x8000000000000000;
    sub_24A650CF4(v8, isUniquelyReferenced_nonNull_native, v13, v24);
    qword_257959860 = v28;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();

    goto LABEL_10;
  }
  return 0.0;
}

uint64_t sub_24A666B3C()
{
  return sub_24A77A420();
}

double sub_24A666B60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  double v7;
  double result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  v5 = sub_24A666830();
  v6 = *(_QWORD *)(v2 + *(int *)(a1 + 24));
  if (v6 >= 9)
    v6 = 9;
  v7 = -(v5 * (double)v6);
  sub_24A666830();
  sub_24A77B674();
  sub_24A77A4B0();
  *(double *)a2 = v7;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = sub_24A666B3C;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v11;
  *(_BYTE *)(a2 + 56) = v12;
  result = *(double *)&v13;
  *(_OWORD *)(a2 + 64) = v13;
  *(_WORD *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_24A666C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64x2_t v31;
  char v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;

  v30 = a1;
  v1 = sub_24A778650();
  v28 = *(_QWORD *)(v1 - 8);
  v29 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A778674();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948278);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v25 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - v16;
  v35 = 123456789;
  sub_24A77886C();
  sub_24A666F3C();
  sub_24A778590();
  v31 = vdupq_n_s64(0xAuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948280);
  sub_24A63CFF0(&qword_257948288, &qword_257948280, MEMORY[0x24BEE08F8]);
  sub_24A77865C();
  MEMORY[0x24BD15BBC](v6, v8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  sub_24A778644();
  MEMORY[0x24BD15BB0](v3, v8);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v29);
  v18(v15, v8);
  sub_24A63CFF0(&qword_257948290, &qword_257948278, MEMORY[0x24BDCC928]);
  sub_24A77BE84();
  v18(v17, v8);
  sub_24A645928();
  v19 = sub_24A77AFD8();
  v21 = v20;
  LOBYTE(v8) = v22 & 1;
  v31.i64[0] = v19;
  v31.i64[1] = v20;
  v32 = v22 & 1;
  v33 = v23;
  v34 = 257;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948298);
  sub_24A6670D4();
  sub_24A77B11C();
  sub_24A64596C(v19, v21, v8);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24A666F3C()
{
  unint64_t result;

  result = qword_257948210;
  if (!qword_257948210)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257948210);
  }
  return result;
}

ValueMetadata *type metadata accessor for AllDigitsView()
{
  return &type metadata for AllDigitsView;
}

unint64_t sub_24A666F94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948220;
  if (!qword_257948220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948228);
    v2[0] = sub_24A665CEC(&qword_257948230, &qword_257948238, sub_24A667038, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257948268, &qword_257948270, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948220);
  }
  return result;
}

uint64_t sub_24A667038()
{
  return sub_24A665CEC(&qword_257948240, &qword_257948248, sub_24A66705C, MEMORY[0x24BDEF830]);
}

uint64_t sub_24A66705C()
{
  return sub_24A665CEC(&qword_257948250, &qword_257948258, (uint64_t (*)(void))sub_24A667080, MEMORY[0x24BDEC438]);
}

unint64_t sub_24A667080()
{
  unint64_t result;

  result = qword_257948260;
  if (!qword_257948260)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7803F8, &type metadata for AllDigitsView);
    atomic_store(result, (unint64_t *)&qword_257948260);
  }
  return result;
}

uint64_t sub_24A6670C4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24A6670D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579482A0;
  if (!qword_2579482A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948298);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579482A0);
  }
  return result;
}

unint64_t sub_24A66713C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579482A8;
  if (!qword_2579482A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579482B0);
    v2[0] = sub_24A6670D4();
    v2[1] = sub_24A63C880((unint64_t *)&qword_257947700, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579482A8);
  }
  return result;
}

id FIUIWorkoutActivityType.accessibilityIdentifier.getter()
{
  void *v0;
  void *v1;
  id result;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v1 = v0;
  if (objc_msgSend(v0, sel_effectiveTypeIdentifier) != (id)46)
  {
    if (!objc_msgSend((id)objc_opt_self(), sel_shouldDisambiguateOnLocationType_, objc_msgSend(v0, sel_identifier)))
    {
      objc_msgSend(v0, sel_effectiveTypeIdentifier);
      v42 = (id)_HKWorkoutActivityNameForActivityType();
      if (!v42)
        return (id)0xD000000000000010;
      v43 = v42;
      v44 = sub_24A77B9B0();
      v46 = v45;

      if ((sub_24A77BAA0() & 1) == 0)
        return (id)v44;
      v47 = sub_24A77BA28();
      v48 = sub_24A667670(v47, v44, v46);
      v50 = v49;
      v52 = v51;
      v54 = v53;
      swift_bridgeObjectRelease();
      v44 = MEMORY[0x24BD19018](v48, v50, v52, v54);
LABEL_22:
      swift_bridgeObjectRelease();
      return (id)v44;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947460);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_24A780450;
    objc_msgSend(v0, sel_effectiveTypeIdentifier);
    v28 = (id)_HKWorkoutActivityNameForActivityType();
    if (v28)
    {
      v29 = v28;
      v30 = sub_24A77B9B0();
      v32 = v31;

      if ((sub_24A77BAA0() & 1) != 0)
      {
        v33 = sub_24A77BA28();
        v34 = sub_24A667670(v33, v30, v32);
        v36 = v35;
        v38 = v37;
        v40 = v39;
        swift_bridgeObjectRelease();
        v30 = MEMORY[0x24BD19018](v34, v36, v38, v40);
        v32 = v41;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v30 = 0xD000000000000010;
      v32 = 0x800000024A78A360;
    }
    *(_QWORD *)(v27 + 32) = v30;
    *(_QWORD *)(v27 + 40) = v32;
    v55 = objc_msgSend(v1, sel_isIndoor);
    v56 = 0x726F6F6474754FLL;
    if (v55)
      v56 = 0x726F6F646E49;
    v57 = 0xE700000000000000;
    if (v55)
      v57 = 0xE600000000000000;
    *(_QWORD *)(v27 + 48) = v56;
    *(_QWORD *)(v27 + 56) = v57;
LABEL_21:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579482B8);
    sub_24A66770C();
    v44 = sub_24A77B92C();
    goto LABEL_22;
  }
  objc_msgSend(v0, sel_swimmingLocationType);
  result = (id)_HKWorkoutSwimmingLocationTypeName();
  if (result)
  {
    v3 = result;
    sub_24A77B9B0();

    v4 = sub_24A645928();
    v5 = MEMORY[0x24BEE0D00];
    v6 = sub_24A77BE3C();
    v8 = v7;
    swift_bridgeObjectRelease();
    v61 = v6;
    v59 = v4;
    v60 = v4;
    v58 = v4;
    v9 = sub_24A77BE6C();
    v11 = v10;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947460);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_24A780450;
    objc_msgSend(v1, sel_effectiveTypeIdentifier, v5, v58, v59, v60, 0, 0xE000000000000000, 32, 0xE100000000000000, v61, v8);
    v13 = (id)_HKWorkoutActivityNameForActivityType();
    if (v13)
    {
      v14 = v13;
      v15 = sub_24A77B9B0();
      v17 = v16;

      if ((sub_24A77BAA0() & 1) != 0)
      {
        v18 = sub_24A77BA28();
        v19 = sub_24A667670(v18, v15, v17);
        v21 = v20;
        v23 = v22;
        v25 = v24;
        swift_bridgeObjectRelease();
        v15 = MEMORY[0x24BD19018](v19, v21, v23, v25);
        v17 = v26;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v15 = 0xD000000000000010;
      v17 = 0x800000024A78A360;
    }
    *(_QWORD *)(v12 + 32) = v15;
    *(_QWORD *)(v12 + 40) = v17;
    *(_QWORD *)(v12 + 48) = v9;
    *(_QWORD *)(v12 + 56) = v11;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

unint64_t sub_24A667670(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_24A77BA40();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_24A77BAC4();
  }
  __break(1u);
  return result;
}

unint64_t sub_24A66770C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2579482C0;
  if (!qword_2579482C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579482B8);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2579482C0);
  }
  return result;
}

uint64_t WheelchairStatusBridge.__allocating_init(status:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t WheelchairStatusBridge.init(status:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

id sub_24A667794()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_isWheelchairUser);
}

id sub_24A6677B4(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_addObserver_, a1);
}

uint64_t WheelchairStatusBridge.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t WheelchairStatusBridge.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_24A667808()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_isWheelchairUser);
}

id sub_24A66782C(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_addObserver_, a1);
}

uint64_t type metadata accessor for WheelchairStatusBridge()
{
  return objc_opt_self();
}

uint64_t method lookup function for WheelchairStatusBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WheelchairStatusBridge.__allocating_init(status:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of WheelchairStatusBridge.isWheelchairUser()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of WheelchairStatusBridge.addObserver(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

void MultisportElapsedTimeView.init(activityString:time:remainingLegs:dimmed:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(_QWORD *)(a5 + 24) = a3;
  *(_BYTE *)(a5 + 32) = a4;
  *(_QWORD *)(a5 + 40) = v12;
}

uint64_t MultisportElapsedTimeView.body.getter()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F50);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (double *)((char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F58);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[1];
  v15[0] = *v0;
  v15[1] = v7;
  v15[2] = v0[2];
  sub_24A668CDC((uint64_t)v15);
  if (qword_2579467D8 != -1)
    swift_once();
  v8 = *(double *)&qword_257948950;
  sub_24A668D04((uint64_t)v15);
  *(_QWORD *)v3 = sub_24A77A930();
  v3[1] = -v8;
  *((_BYTE *)v3 + 16) = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948378);
  sub_24A667B10((uint64_t *)v15, (char *)v3 + *(int *)(v9 + 44));
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  v11 = v10;
  v12 = sub_24A77B674();
  sub_24A641F2C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v6, 0.0, 1, v11, 0, v12, v13);
  sub_24A63CD04((uint64_t)v3, &qword_257946F50);
  sub_24A668D2C();
  sub_24A77B104();
  return sub_24A63CD04((uint64_t)v6, &qword_257946F58);
}

void sub_24A667B10(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  uint64_t v93;
  char *v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE v121[192];
  _BYTE v122[200];
  _QWORD v123[25];
  _QWORD v124[24];
  _QWORD v125[24];
  _BYTE v126[192];
  __int128 v127;
  char *v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  __int16 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int16 v148;
  uint64_t v149;
  double v150;
  _BYTE v151[216];
  __int128 v152;
  __int128 v153;
  char *v154;
  char v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  char *v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  uint64_t v177;

  v117 = a2;
  v3 = sub_24A77AC24();
  v114 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v113 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483A8);
  MEMORY[0x24BDAC7A8](v101);
  v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483B0);
  MEMORY[0x24BDAC7A8](v102);
  v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483B8);
  MEMORY[0x24BDAC7A8](v103);
  v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483C0);
  MEMORY[0x24BDAC7A8](v104);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483C8);
  MEMORY[0x24BDAC7A8](v105);
  v108 = (uint64_t)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483D0);
  MEMORY[0x24BDAC7A8](v106);
  v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483D8);
  MEMORY[0x24BDAC7A8](v107);
  v109 = (uint64_t)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483E0);
  MEMORY[0x24BDAC7A8](v111);
  v112 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579483E8);
  v119 = *(_QWORD *)(v21 - 8);
  v120 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v116 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v110 = (char *)&v100 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v118 = (char *)&v100 - v26;
  *(_QWORD *)v7 = sub_24A77A930();
  *((_QWORD *)v7 + 1) = 0x4008000000000000;
  v7[16] = 0;
  v27 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579483F0) + 44)];
  v115 = (unint64_t)a1;
  sub_24A668820(a1, v27);
  v28 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
  if (v28)
  {
    v29 = v28;
    v100 = v3;
    v30 = objc_msgSend(v28, sel_nonGradientTextColor);

    if (v30)
    {
      v31 = MEMORY[0x24BD189B8](v30);
      KeyPath = swift_getKeyPath();
      sub_24A63CCC0((uint64_t)v7, (uint64_t)v9, &qword_2579483A0);
      v33 = (uint64_t *)&v9[*(int *)(v101 + 36)];
      *v33 = KeyPath;
      v33[1] = v31;
      sub_24A63CD04((uint64_t)v7, &qword_2579483A0);
      LOBYTE(v31) = sub_24A77ACD8();
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      sub_24A77A390();
      v35 = v34;
      v37 = v36;
      v39 = v38;
      v41 = v40;
      sub_24A63CCC0((uint64_t)v9, (uint64_t)v11, &qword_2579483A8);
      v42 = &v11[*(int *)(v102 + 36)];
      *v42 = v31;
      *((_QWORD *)v42 + 1) = v35;
      *((_QWORD *)v42 + 2) = v37;
      *((_QWORD *)v42 + 3) = v39;
      *((_QWORD *)v42 + 4) = v41;
      v42[40] = 0;
      sub_24A63CD04((uint64_t)v9, &qword_2579483A8);
      LOBYTE(v31) = sub_24A77ACF0();
      v43 = v115;
      sub_24A77A390();
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v51 = v50;
      sub_24A63CCC0((uint64_t)v11, (uint64_t)v13, &qword_2579483B0);
      v52 = &v13[*(int *)(v103 + 36)];
      *v52 = v31;
      *((_QWORD *)v52 + 1) = v45;
      *((_QWORD *)v52 + 2) = v47;
      *((_QWORD *)v52 + 3) = v49;
      *((_QWORD *)v52 + 4) = v51;
      v52[40] = 0;
      sub_24A63CD04((uint64_t)v11, &qword_2579483B0);
      if (qword_257946870 != -1)
        swift_once();
      v53 = MEMORY[0x24BD189B8]((id)qword_25794A370);
      v54 = sub_24A77ACB4();
      sub_24A63CCC0((uint64_t)v13, (uint64_t)v15, &qword_2579483B8);
      v55 = &v15[*(int *)(v104 + 36)];
      *(_QWORD *)v55 = v53;
      v55[8] = v54;
      sub_24A63CD04((uint64_t)v13, &qword_2579483B8);
      if (qword_2579467F8 != -1)
        swift_once();
      sub_24A77B668();
      sub_24A77A4B0();
      v56 = v108;
      sub_24A63CCC0((uint64_t)v15, v108, &qword_2579483C0);
      v57 = (_OWORD *)(v56 + *(int *)(v105 + 36));
      v58 = v152;
      *v57 = *(_OWORD *)&v151[200];
      v57[1] = v58;
      v57[2] = v153;
      sub_24A63CD04((uint64_t)v15, &qword_2579483C0);
      v59 = v100;
      if (qword_2579467D8 != -1)
        swift_once();
      v60 = qword_257948950;
      sub_24A63CCC0(v56, (uint64_t)v18, &qword_2579483C8);
      v61 = &v18[*(int *)(v106 + 36)];
      *(_QWORD *)v61 = v60;
      *((_QWORD *)v61 + 1) = 10;
      *((_WORD *)v61 + 8) = 256;
      sub_24A63CD04(v56, &qword_2579483C8);
      v62 = v109;
      sub_24A63CCC0((uint64_t)v18, v109, &qword_2579483D0);
      *(_QWORD *)(v62 + *(int *)(v107 + 36)) = 0x3FF0000000000000;
      sub_24A63CD04((uint64_t)v18, &qword_2579483D0);
      if ((*(_BYTE *)(v43 + 32) & 1) != 0)
        v63 = 0.35;
      else
        v63 = 1.0;
      v64 = v112;
      sub_24A63CCC0(v62, v112, &qword_2579483D8);
      *(double *)(v64 + *(int *)(v111 + 36)) = v63;
      sub_24A63CD04(v62, &qword_2579483D8);
      v65 = v113;
      sub_24A77AC18();
      sub_24A665CEC(&qword_2579483F8, &qword_2579483E0, (uint64_t (*)(void))sub_24A668FF4, MEMORY[0x24BDECC38]);
      v66 = v110;
      sub_24A77B200();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v65, v59);
      sub_24A63CD04(v64, &qword_2579483E0);
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v66, v120);
      if (*(uint64_t *)(v43 + 24) < 1)
      {
        sub_24A669280((uint64_t)&v127);
        sub_24A63F6C4((uint64_t)&v127, (uint64_t)v151, &qword_257948470);
      }
      else
      {
        v115 = *(_QWORD *)(v43 + 24);
        v114 = sub_24A77B350();
        v67 = swift_getKeyPath();
        v68 = qword_257948950;
        sub_24A77B668();
        sub_24A77A4B0();
        v69 = v155;
        v112 = v156;
        v113 = v154;
        v70 = v157;
        v110 = v159;
        v111 = v158;
        if (qword_257946878 != -1)
          swift_once();
        v109 = MEMORY[0x24BD189B8]((id)qword_25794A378);
        v108 = swift_getKeyPath();
        v71 = qword_257948950;
        sub_24A77B668();
        sub_24A77A4B0();
        v72 = v160;
        v73 = v162;
        v74 = v164;
        v75 = v165;
        LOBYTE(v123[0]) = v69;
        v122[0] = v70;
        v126[0] = v161;
        LOBYTE(v125[0]) = v163;
        v76 = v161;
        v77 = v163;
        swift_retain();
        swift_release();
        *(_QWORD *)&v127 = v67;
        *((_QWORD *)&v127 + 1) = v114;
        v128 = v113;
        v129 = v69;
        v130 = v112;
        v131 = v70;
        v132 = v111;
        v133 = v110;
        v134 = v68;
        v135 = 10;
        v136 = 256;
        v137 = 0x3FE8000000000000;
        v138 = v108;
        v139 = v109;
        v140 = v72;
        v141 = v76;
        v142 = v73;
        v143 = v77;
        v144 = v74;
        v145 = v75;
        v146 = v71;
        v147 = 10;
        v148 = 256;
        v149 = 0x3FE0000000000000;
        v150 = v63;
        nullsub_1(&v127);
        sub_24A63F6C4((uint64_t)&v127, (uint64_t)v151, &qword_257948470);
        if (v115 >= 2)
        {
          v115 = sub_24A77B350();
          v78 = swift_getKeyPath();
          v79 = qword_257948950;
          sub_24A77B668();
          sub_24A77A4B0();
          v80 = v167;
          v113 = v168;
          v114 = v166;
          v81 = v169;
          v111 = v171;
          v112 = v170;
          if (qword_257946880 != -1)
            swift_once();
          v110 = (char *)MEMORY[0x24BD189B8]((id)qword_25794A380);
          v109 = swift_getKeyPath();
          v82 = qword_257948950;
          sub_24A77B668();
          sub_24A77A4B0();
          v83 = v172;
          v84 = v174;
          v85 = v176;
          v86 = v177;
          LOBYTE(v123[0]) = v80;
          v122[0] = v81;
          LOBYTE(v125[0]) = v173;
          LOBYTE(v124[0]) = v175;
          v87 = v173;
          v88 = v175;
          swift_retain();
          swift_release();
          *(_QWORD *)&v127 = v78;
          *((_QWORD *)&v127 + 1) = v115;
          v128 = (char *)v114;
          v129 = v80;
          v130 = (uint64_t)v113;
          v131 = v81;
          v132 = v112;
          v133 = (char *)v111;
          v134 = v79;
          v135 = 10;
          v136 = 256;
          v137 = 0x3FD0000000000000;
          v138 = v109;
          v139 = (uint64_t)v110;
          v140 = v83;
          v141 = v87;
          v142 = v84;
          v143 = v88;
          v144 = v85;
          v145 = v86;
          v146 = v82;
          v147 = 10;
          v148 = 256;
          v149 = *(_QWORD *)&v63;
          nullsub_1(&v127);
          goto LABEL_21;
        }
      }
      sub_24A6692A4(&v127);
LABEL_21:
      sub_24A63F6C4((uint64_t)&v127, (uint64_t)v126, &qword_257948478);
      v90 = v118;
      v89 = v119;
      v91 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
      v92 = v116;
      v93 = v120;
      v91(v116, v118, v120);
      sub_24A63F6C4((uint64_t)v151, (uint64_t)v122, &qword_257948470);
      sub_24A63F6C4((uint64_t)v126, (uint64_t)v121, &qword_257948478);
      v94 = v117;
      v91(v117, v92, v93);
      v95 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257948480);
      v96 = (uint64_t)&v94[v95[12]];
      sub_24A63F6C4((uint64_t)v122, (uint64_t)v123, &qword_257948470);
      sub_24A63F6C4((uint64_t)v123, v96, &qword_257948470);
      v97 = (uint64_t)&v94[v95[16]];
      sub_24A63F6C4((uint64_t)v121, (uint64_t)v124, &qword_257948478);
      sub_24A63F6C4((uint64_t)v124, v97, &qword_257948478);
      v98 = &v94[v95[20]];
      *(_QWORD *)v98 = 0;
      v98[8] = 1;
      sub_24A6693C4(v123, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A6692C4);
      sub_24A669310(v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A6692C4);
      v99 = *(void (**)(char *, uint64_t))(v89 + 8);
      v99(v90, v93);
      sub_24A63F6C4((uint64_t)v121, (uint64_t)v125, &qword_257948478);
      sub_24A669310(v125, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A66937C);
      sub_24A63F6C4((uint64_t)v122, (uint64_t)&v127, &qword_257948470);
      sub_24A6693C4(&v127, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A66937C);
      v99(v92, v93);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24A668820@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  int v46;
  uint64_t *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v47 = a1;
  v48 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948488);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v50 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v45 - v5;
  sub_24A779808();
  v53 = sub_24A7797F0();
  v54 = v7;
  sub_24A645928();
  v8 = sub_24A77AFD8();
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  KeyPath = swift_getKeyPath();
  v53 = v8;
  v54 = v10;
  v55 = v14;
  v56 = v12;
  v57 = 0x3FF0000000000000;
  LOWORD(v58) = 256;
  v59 = KeyPath;
  v60 = 0;
  v51 = sub_24A7797FC();
  v52 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948490);
  sub_24A669438(&qword_257948498, &qword_257948490, (uint64_t (*)(void))sub_24A6694A8, (uint64_t (*)(void))sub_24A63F8AC);
  v49 = v6;
  v17 = v47;
  sub_24A77B1C4();
  swift_bridgeObjectRelease();
  sub_24A64596C(v8, v10, v14);
  swift_bridgeObjectRelease();
  sub_24A63BEDC(KeyPath, 0);
  v19 = *v17;
  v18 = v17[1];
  sub_24A668CDC((uint64_t)v17);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v20 = (id)qword_2544D6158;
  sub_24A77856C();

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24A780030;
  *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v21 + 64) = sub_24A66952C();
  *(_QWORD *)(v21 + 32) = v19;
  *(_QWORD *)(v21 + 40) = v18;
  swift_bridgeObjectRetain();
  v22 = sub_24A77B9C8();
  v24 = v23;
  swift_bridgeObjectRelease();
  sub_24A668D04((uint64_t)v17);
  v53 = v22;
  v54 = v24;
  v25 = sub_24A77AFD8();
  v27 = v26;
  v29 = v28 & 1;
  sub_24A69EC80(1, v25, v26, v28 & 1, v30, (uint64_t)&v53);
  sub_24A64596C(v25, v27, v29);
  swift_bridgeObjectRelease();
  v32 = v53;
  v31 = v54;
  v33 = v55;
  v34 = v56;
  LODWORD(v47) = v57;
  v35 = v58;
  LOBYTE(v27) = v59;
  v46 = v60;
  v36 = v61;
  v45 = v62;
  v37 = v63;
  v38 = swift_getKeyPath();
  v39 = v50;
  sub_24A63CCC0((uint64_t)v49, v50, &qword_257948488);
  v40 = v39;
  v41 = v48;
  sub_24A63CCC0(v40, v48, &qword_257948488);
  v42 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579484C8) + 48);
  *(_QWORD *)v42 = v32;
  *(_QWORD *)(v42 + 8) = v31;
  *(_BYTE *)(v42 + 16) = v33;
  *(_QWORD *)(v42 + 24) = v34;
  *(_BYTE *)(v42 + 32) = (_BYTE)v47;
  *(_QWORD *)(v42 + 40) = v35;
  *(_BYTE *)(v42 + 48) = v27;
  *(_BYTE *)(v42 + 56) = v46;
  *(_QWORD *)(v42 + 64) = v36;
  v43 = v45;
  *(_QWORD *)(v42 + 72) = v45;
  *(_BYTE *)(v42 + 80) = v37;
  *(_QWORD *)(v42 + 88) = v38;
  *(_QWORD *)(v42 + 96) = 0x3FE6666666666666;
  sub_24A6436C4(v32, v31, v33);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v35, v27);
  sub_24A63BEC0(v43, v37);
  swift_retain();
  sub_24A63CD04((uint64_t)v49, &qword_257948488);
  sub_24A64596C(v32, v31, v33);
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v35, v27);
  sub_24A63BEDC(v43, v37);
  swift_release();
  return sub_24A63CD04(v50, &qword_257948488);
}

uint64_t sub_24A668CDC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24A668D04(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24A668D2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948380;
  if (!qword_257948380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F58);
    v2[0] = sub_24A63CFF0(&qword_257948388, &qword_257946F50, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948380);
  }
  return result;
}

uint64_t sub_24A668DB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for MultisportElapsedTimeView()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MultisportElapsedTimeView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MultisportElapsedTimeView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for MultisportElapsedTimeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultisportElapsedTimeView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultisportElapsedTimeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultisportElapsedTimeView()
{
  return &type metadata for MultisportElapsedTimeView;
}

uint64_t sub_24A668F70()
{
  return sub_24A669438(&qword_257948390, &qword_257948398, (uint64_t (*)(void))sub_24A668D2C, (uint64_t (*)(void))sub_24A668FA4);
}

unint64_t sub_24A668FA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947700;
  if (!qword_257947700)
  {
    v1 = sub_24A77AC6C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1078], v1);
    atomic_store(result, (unint64_t *)&qword_257947700);
  }
  return result;
}

unint64_t sub_24A668FF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948400;
  if (!qword_257948400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579483D8);
    v2[0] = sub_24A669078();
    v2[1] = sub_24A63CFF0(&qword_257948460, &qword_257948468, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948400);
  }
  return result;
}

unint64_t sub_24A669078()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948408;
  if (!qword_257948408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579483D0);
    v2[0] = sub_24A665CEC(&qword_257948410, &qword_2579483C8, (uint64_t (*)(void))sub_24A66911C, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_24A63CFF0(&qword_257948450, &qword_257948458, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948408);
  }
  return result;
}

unint64_t sub_24A66911C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948418;
  if (!qword_257948418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579483C0);
    v2[0] = sub_24A665CEC(&qword_257948420, &qword_2579483B8, sub_24A6691C0, MEMORY[0x24BDECC60]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257948440, &qword_257948448, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948418);
  }
  return result;
}

uint64_t sub_24A6691C0()
{
  return sub_24A665CEC(&qword_257948428, &qword_2579483B0, (uint64_t (*)(void))sub_24A6691E4, MEMORY[0x24BDECC60]);
}

unint64_t sub_24A6691E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948430;
  if (!qword_257948430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579483A8);
    v2[0] = sub_24A63CFF0(&qword_257948438, &qword_2579483A0, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948430);
  }
  return result;
}

double sub_24A669280(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 192) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_24A6692A4(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_24A6692C4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

_QWORD *sub_24A669310(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_24A66937C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

_QWORD *sub_24A6693C4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

uint64_t sub_24A669438(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A6694A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2579484A0;
  if (!qword_2579484A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484A8);
    v2 = sub_24A63CFF0(&qword_2579484B0, &qword_2579484B8, MEMORY[0x24BDEFB48]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2579484A0);
  }
  return result;
}

unint64_t sub_24A66952C()
{
  unint64_t result;

  result = qword_2579484C0;
  if (!qword_2579484C0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2579484C0);
  }
  return result;
}

id sub_24A669578(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  objc_super v29;

  v29.receiver = v4;
  v29.super_class = (Class)type metadata accessor for SeparatorView();
  v9 = objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  v10 = objc_allocWithZone(MEMORY[0x24BE37930]);
  v11 = v9;
  v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_addSubview_, v12);
  v13 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24A7805F0;
  v15 = objc_msgSend(v12, sel_leadingAnchor);
  v16 = objc_msgSend(v11, sel_leadingAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v14 + 32) = v17;
  v18 = objc_msgSend(v12, sel_trailingAnchor);
  v19 = objc_msgSend(v11, sel_trailingAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v14 + 40) = v20;
  v21 = objc_msgSend(v12, sel_topAnchor);
  v22 = objc_msgSend(v11, sel_topAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(_QWORD *)(v14 + 48) = v23;
  v24 = objc_msgSend(v12, sel_bottomAnchor);
  v25 = objc_msgSend(v11, sel_bottomAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v14 + 56) = v26;
  sub_24A77BB24();
  sub_24A669914();
  v27 = (void *)sub_24A77BB0C();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v27);

  return v11;
}

id SeparatorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SeparatorView()
{
  return objc_opt_self();
}

unint64_t sub_24A669914()
{
  unint64_t result;

  result = qword_257948500[0];
  if (!qword_257948500[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_257948500);
  }
  return result;
}

uint64_t sub_24A669950()
{
  return swift_allocateGenericValueMetadata();
}

void sub_24A669958()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24A66AAC8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_24A669A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  void **v20;
  void *v21;
  _QWORD *v22;
  void **v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  unsigned int v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v37;
  _QWORD *v38;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_24A77A4E0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = ~(unint64_t)(v10 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v10 & 0xF8) + 23;
  if (*(_QWORD *)(v9 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v9 + 64);
  v14 = v10 | *(_DWORD *)(v6 + 80);
  if ((v14 & 0x1000F8) != 0
    || v13
     + ((v12
       + ((((((((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v11)
     + 1 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v14 & 0xF8 | 7u) + 16) & ~(unint64_t)(v14 & 0xF8 | 7u)));
LABEL_18:
    swift_retain();
    return a1;
  }
  v37 = v8;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  v17 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  v19 = (_QWORD *)(((unint64_t)a1 + v7 + 31) & 0xFFFFFFFFFFFFF8);
  v20 = (void **)(((unint64_t)a2 + v7 + 31) & 0xFFFFFFFFFFFFF8);
  v21 = *v20;
  *v19 = *v20;
  v22 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8);
  v23 = (void **)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
  v24 = *v23;
  *v22 = *v23;
  v25 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v38 = (_QWORD *)(((unint64_t)v28 + v12) & v11);
  v31 = (_QWORD *)(((unint64_t)v29 + v12) & v11);
  v32 = *((unsigned __int8 *)v31 + v13);
  swift_retain();
  swift_retain();
  v33 = v21;
  v34 = v24;
  swift_retain();
  swift_retain();
  if (v32 >= 2)
  {
    if (v13 <= 3)
      v35 = v13;
    else
      v35 = 4;
    __asm { BR              X11 }
  }
  if (v32 != 1)
  {
    *v38 = *v31;
    *((_BYTE *)v38 + v13) = 0;
    goto LABEL_18;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v38, v31, v37);
  *((_BYTE *)v38 + v13) = 1;
  return a1;
}

uint64_t sub_24A669C78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id *v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + a1;
  swift_release();
  swift_release();
  v5 = (id *)((v4 + 31) & 0xFFFFFFFFFFFFF8);

  v6 = (id *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  swift_release();
  v7 = *(_QWORD *)(sub_24A77A4E0() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = ((((((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  if (v10 <= 8)
    v10 = 8;
  v11 = *(unsigned __int8 *)(v9 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X14 }
  }
  if (v11 == 1)
    return (*(uint64_t (**)(void))(v7 + 8))();
  else
    return swift_release();
}

uint64_t sub_24A669DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  void **v12;
  void *v13;
  _QWORD *v14;
  void **v15;
  void *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unsigned int v31;
  id v32;
  id v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v39 = a1;
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFF8);
  v12 = (void **)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  v13 = *v12;
  *v11 = *v12;
  v14 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  v15 = (void **)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v16 = *v15;
  *v14 = *v15;
  v17 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = sub_24A77A4E0();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  v26 = v25 + 23;
  v27 = (unint64_t)v20 + v25 + 23;
  v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  v37 = v23;
  v38 = (_QWORD *)(v27 & v28);
  v29 = (_QWORD *)(((unint64_t)v21 + v26) & v28);
  if (*(_QWORD *)(v24 + 64) <= 8uLL)
    v30 = 8;
  else
    v30 = *(_QWORD *)(v24 + 64);
  v31 = *((unsigned __int8 *)v29 + v30);
  swift_retain();
  swift_retain();
  v32 = v13;
  v33 = v16;
  swift_retain();
  swift_retain();
  if (v31 >= 2)
  {
    if (v30 <= 3)
      v34 = v30;
    else
      v34 = 4;
    __asm { BR              X11 }
  }
  if (v31 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v24 + 16))(v38, v29, v37);
    v35 = 1;
  }
  else
  {
    *v38 = *v29;
    swift_retain();
    v35 = 0;
  }
  *((_BYTE *)v38 + v30) = v35;
  return v39;
}

uint64_t sub_24A669FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  id v15;
  void **v16;
  void **v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  swift_retain();
  swift_release();
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (void **)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v12 = (void **)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  v13 = *v12;
  v14 = *v11;
  *v11 = *v12;
  v15 = v13;

  v16 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (void **)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v18 = *v17;
  v19 = *v16;
  *v16 = *v17;
  v20 = v18;

  v21 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  v27 = sub_24A77A4E0();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_DWORD *)(v28 + 80) & 0xF8;
  v30 = v29 + 23;
  v31 = (unint64_t)v24 + v29 + 23;
  v32 = ~v29 & 0xFFFFFFFFFFFFFFF8;
  v33 = (_QWORD *)(v31 & v32);
  v34 = (unint64_t)v25 + v30;
  v35 = (_QWORD *)(v34 & v32);
  if ((v31 & v32) != (v34 & v32))
  {
    v36 = v27;
    if (*(_QWORD *)(v28 + 64) <= 8uLL)
      v37 = 8;
    else
      v37 = *(_QWORD *)(v28 + 64);
    v38 = *((unsigned __int8 *)v33 + v37);
    if (v38 >= 2)
    {
      if (v37 <= 3)
        v39 = v37;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    if (v38 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v28 + 8))(v33, v27);
    else
      swift_release();
    v40 = *((unsigned __int8 *)v35 + v37);
    if (v40 >= 2)
    {
      if (v37 <= 3)
        v41 = v37;
      else
        v41 = 4;
      __asm { BR              X12 }
    }
    if (v40 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v28 + 16))(v33, v35, v36);
      *((_BYTE *)v33 + v37) = 1;
    }
    else
    {
      *v33 = *v35;
      *((_BYTE *)v33 + v37) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_24A66A270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  char v30;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = v11;
  v12 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = *(_QWORD *)(sub_24A77A4E0() - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8;
  v22 = v21 + 23;
  v23 = (unint64_t)v18 + v21 + 23;
  v24 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v25 = (_QWORD *)(v23 & v24);
  v26 = (_QWORD *)(((unint64_t)v19 + v22) & v24);
  if (*(_QWORD *)(v20 + 64) <= 8uLL)
    v27 = 8;
  else
    v27 = *(_QWORD *)(v20 + 64);
  v28 = *((unsigned __int8 *)v26 + v27);
  if (v28 >= 2)
  {
    if (v27 <= 3)
      v29 = v27;
    else
      v29 = 4;
    __asm { BR              X13 }
  }
  if (v28 == 1)
  {
    (*(void (**)(_QWORD *))(v20 + 32))(v25);
    v30 = 1;
  }
  else
  {
    v30 = 0;
    *v25 = *v26;
  }
  *((_BYTE *)v25 + v27) = v30;
  return a1;
}

uint64_t sub_24A66A400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void **v11;
  void **v12;
  void *v13;
  void **v14;
  void **v15;
  void *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  char v36;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  swift_release();
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_release();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (void **)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v12 = (void **)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  v13 = *v11;
  *v11 = *v12;

  v14 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (void **)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v16 = *v14;
  *v14 = *v15;

  v17 = (_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  swift_release();
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  swift_release();
  v21 = sub_24A77A4E0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  v24 = v23 + 23;
  v25 = (unint64_t)v19 + v23 + 23;
  v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  v27 = (_QWORD *)(v25 & v26);
  v28 = (unint64_t)v20 + v24;
  v29 = (_QWORD *)(v28 & v26);
  if ((v25 & v26) != (v28 & v26))
  {
    v30 = v21;
    if (*(_QWORD *)(v22 + 64) <= 8uLL)
      v31 = 8;
    else
      v31 = *(_QWORD *)(v22 + 64);
    v32 = *((unsigned __int8 *)v27 + v31);
    if (v32 >= 2)
    {
      if (v31 <= 3)
        v33 = v31;
      else
        v33 = 4;
      __asm { BR              X12 }
    }
    if (v32 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v27, v21);
    else
      swift_release();
    v34 = *((unsigned __int8 *)v29 + v31);
    if (v34 >= 2)
    {
      if (v31 <= 3)
        v35 = v31;
      else
        v35 = 4;
      __asm { BR              X12 }
    }
    if (v34 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 32))(v27, v29, v30);
      v36 = 1;
    }
    else
    {
      v36 = 0;
      *v27 = *v29;
    }
    *((_BYTE *)v27 + v31) = v36;
  }
  return a1;
}

uint64_t sub_24A66A678(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(sub_24A77A4E0() - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  if (a2 <= v8)
    goto LABEL_24;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = v10
      + ((v12
        + ((((((((v11 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v12)
      + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v7 >= 0x7FFFFFFF)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      v19 = *(_QWORD *)(((a1 + v11 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v19 >= 0xFFFFFFFF)
        LODWORD(v19) = -1;
      return (v19 + 1);
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_24;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 > 3)
      LODWORD(v13) = 4;
    __asm { BR              X11 }
  }
  return v8 + v18 + 1;
}

void sub_24A66A850(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_24A77A4E0() - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = v10
      + ((v11
        + ((((((((*(_QWORD *)(v7 + 64) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v11)
      + 1;
  if (a3 <= v8)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v8 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for WorkoutConfigurationViewIOS(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WorkoutConfigurationViewIOS);
}

void sub_24A66AAC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257948588)
  {
    sub_24A77A4E0();
    v0 = sub_24A77A3F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257948588);
  }
}

uint64_t sub_24A66AB1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A66AB50(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_24A77B6B0();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_24A77B6B0();
}

uint64_t sub_24A66AD04()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948710);
  MEMORY[0x24BD18B74](&v2, v0);
  return v2;
}

uint64_t sub_24A66AD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v34 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948590);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948598);
  v6 = *(_QWORD *)(a1 + 16);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485A0);
  swift_getTupleTypeMetadata2();
  sub_24A77B6A4();
  sub_24A77BDE8();
  swift_getTupleTypeMetadata2();
  v7 = sub_24A77B6A4();
  v8 = MEMORY[0x24BDF5428];
  v9 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v7);
  v39 = MEMORY[0x24BEE4078];
  v40 = v7;
  v41 = MEMORY[0x24BEE4088];
  v42 = v9;
  v10 = sub_24A77AEDC();
  v11 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1A30], v10);
  v39 = v10;
  v40 = v11;
  MEMORY[0x24BD1A194](255, &v39, MEMORY[0x24BDF31A0], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485A8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485B0);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485C0);
  swift_getTupleTypeMetadata3();
  v12 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v8, v12);
  v13 = sub_24A77B530();
  v31 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485C8);
  v16 = sub_24A77A5F4();
  v32 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v31 - v20;
  v22 = *(_QWORD *)(a1 + 24);
  v35 = v6;
  v36 = v22;
  v37 = v2;
  sub_24A77A9FC();
  sub_24A77B524();
  v23 = *MEMORY[0x24BDEB3F0];
  v24 = sub_24A77A3B4();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v33, v23, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
  v27 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v13);
  sub_24A77B218();
  sub_24A63CD04(v26, &qword_257948590);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v13);
  v28 = sub_24A63CFF0(&qword_2579485D0, &qword_2579485C8, MEMORY[0x24BDF0B90]);
  v38[0] = v27;
  v38[1] = v28;
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v16, v38);
  sub_24A6B90A4((uint64_t)v19, v16, (uint64_t)v21);
  v29 = *(void (**)(char *, uint64_t))(v32 + 8);
  v29(v19, v16);
  sub_24A6B8268((uint64_t)v21, v16, v34);
  return ((uint64_t (*)(char *, uint64_t))v29)(v21, v16);
}

uint64_t sub_24A66B180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t OpaqueTypeConformance2;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, uint64_t);
  void (**v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  void (*v59)(char *, _QWORD, uint64_t);
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (**v104)(char *, uint64_t);
  uint64_t v105;
  char *v106;
  uint64_t *v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(_QWORD, _QWORD);
  uint64_t v119;
  void (*v120)(_QWORD, _QWORD);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD v125[3];
  uint64_t v126;
  char v127;
  uint64_t v128[3];
  _QWORD v129[2];
  _QWORD v130[2];
  _QWORD v131[2];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v118 = a3;
  v116 = a2;
  v117 = a1;
  v97 = a4;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579485D8);
  v4 = MEMORY[0x24BDAC7A8](v90);
  v92 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v89 = (char *)&v87 - v6;
  v109 = sub_24A77A5C4();
  v110 = *(_QWORD **)(v109 - 8);
  v7 = MEMORY[0x24BDAC7A8](v109);
  v108 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v106 = (char *)&v87 - v9;
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579485E0);
  v10 = MEMORY[0x24BDAC7A8](v111);
  v88 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v91 = (uint64_t)&v87 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579485E8);
  MEMORY[0x24BDAC7A8](v13);
  v107 = (uint64_t *)((char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579485F0);
  MEMORY[0x24BDAC7A8](v114);
  v115 = (uint64_t)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579485C0);
  v94 = *(_QWORD *)(v96 - 8);
  v16 = MEMORY[0x24BDAC7A8](v96);
  v95 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v93 = (char *)&v87 - v18;
  v105 = sub_24A77A96C();
  v104 = *(void (***)(char *, uint64_t))(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v103 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948598);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485A0);
  swift_getTupleTypeMetadata2();
  sub_24A77B6A4();
  sub_24A77BDE8();
  swift_getTupleTypeMetadata2();
  v20 = sub_24A77B6A4();
  v98 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v20);
  v132 = MEMORY[0x24BEE4078];
  v133 = v20;
  v134 = MEMORY[0x24BEE4088];
  v135 = v98;
  v21 = sub_24A77AEDC();
  v100 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v87 - v22;
  v24 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1A30], v21);
  v132 = v21;
  v133 = v24;
  v25 = MEMORY[0x24BD1A194](0, &v132, MEMORY[0x24BDF31A0], 0);
  v101 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v87 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485A8);
  v99 = sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485B0);
  v28 = sub_24A77A5F4();
  v102 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v87 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485B8);
  v31 = sub_24A77A5F4();
  v112 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (void (**)(char *, uint64_t))((char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v32);
  v113 = (uint64_t)&v87 - v35;
  v119 = v116;
  v120 = v118;
  v121 = v117;
  sub_24A77AED0();
  sub_24A77B248();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v23, v21);
  v36 = v103;
  sub_24A77A960();
  v132 = v21;
  v133 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_24A77B1D0();
  v104[1](v36, v105);
  v38 = v27;
  v39 = v106;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v38, v25);
  v40 = sub_24A63CFF0(&qword_2579485F8, &qword_2579485A8, MEMORY[0x24BDEFB48]);
  v131[0] = OpaqueTypeConformance2;
  v131[1] = v40;
  v41 = MEMORY[0x24BDED308];
  v42 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v99, v131);
  v43 = MEMORY[0x24BDF1028];
  v44 = sub_24A63CFF0(&qword_257948600, &qword_2579485B0, MEMORY[0x24BDF1028]);
  v130[0] = v42;
  v130[1] = v44;
  v45 = MEMORY[0x24BD1A1F4](v41, v28, v130);
  sub_24A77B14C();
  v46 = v28;
  v47 = v108;
  (*(void (**)(char *, uint64_t))(v102 + 8))(v30, v46);
  v48 = sub_24A63CFF0(&qword_257948608, &qword_2579485B8, v43);
  v129[0] = v45;
  v129[1] = v48;
  v49 = MEMORY[0x24BD1A1F4](v41, v31, v129);
  sub_24A6B90A4((uint64_t)v34, v31, v113);
  v50 = *(void (**)(_QWORD, uint64_t))(v112 + 8);
  v104 = v34;
  v51 = v34;
  v52 = v109;
  v105 = v31;
  v50(v51, v31);
  v53 = sub_24A77A9FC();
  v54 = (uint64_t)v107;
  *v107 = v53;
  *(_QWORD *)(v54 + 8) = 0;
  *(_BYTE *)(v54 + 16) = 1;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948610);
  sub_24A66D8D8(v117, v116, (uint64_t)v118, v54 + *(int *)(v55 + 44));
  LOBYTE(v42) = sub_24A77ACB4();
  v56 = v115;
  sub_24A63CCC0(v54, v115, &qword_2579485E8);
  v57 = v56 + *(int *)(v114 + 36);
  *(_BYTE *)v57 = v42;
  *(_OWORD *)(v57 + 8) = xmmword_24A7808F0;
  *(_OWORD *)(v57 + 24) = xmmword_24A7808F0;
  *(_BYTE *)(v57 + 40) = 0;
  sub_24A63CD04(v54, &qword_2579485E8);
  v58 = v110;
  v59 = (void (*)(char *, _QWORD, uint64_t))v110[13];
  v59(v39, *MEMORY[0x24BDECF20], v52);
  v59(v47, *MEMORY[0x24BDECF00], v52);
  sub_24A63C880(&qword_257948618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  result = sub_24A77B95C();
  if ((result & 1) != 0)
  {
    v61 = v90;
    v62 = *(int *)(v90 + 48);
    v118 = v50;
    v63 = v89;
    v64 = &v89[v62];
    v65 = (void (*)(char *, char *, uint64_t))v58[4];
    v65(v89, v39, v52);
    v65(v64, v47, v52);
    v66 = *(int *)(v61 + 48);
    v117 = v49;
    v67 = v92;
    v68 = &v92[v66];
    v69 = (void (*)(char *, char *, uint64_t))v58[2];
    v69(v92, v63, v52);
    v69(v68, v64, v52);
    v70 = (uint64_t)v88;
    v65(v88, v67, v52);
    v71 = (void (*)(char *, uint64_t))v58[1];
    v71(v68, v52);
    v72 = &v67[*(int *)(v61 + 48)];
    v65(v67, v63, v52);
    v65(v72, v64, v52);
    v65((char *)(v70 + *(int *)(v111 + 36)), v72, v52);
    v71(v67, v52);
    v73 = v91;
    sub_24A63F6C4(v70, v91, &qword_2579485E0);
    v74 = sub_24A670330(&qword_257948620, &qword_2579485F0, &qword_257948628, &qword_2579485E8);
    v75 = sub_24A63CFF0(&qword_257948630, &qword_2579485E0, MEMORY[0x24BEE08F8]);
    v76 = (uint64_t)v95;
    v77 = v114;
    v78 = v115;
    sub_24A77B164();
    sub_24A63CD04(v73, &qword_2579485E0);
    sub_24A63CD04(v78, &qword_2579485F0);
    v79 = v94;
    v80 = v93;
    v81 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v93, v76, v96);
    v82 = (uint64_t)v104;
    v83 = v113;
    v84 = v105;
    (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v112 + 16))(v104, v113, v105);
    v126 = 0;
    v127 = 1;
    v128[0] = v82;
    v128[1] = (uint64_t)&v126;
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v76, v80, v81);
    v128[2] = v76;
    v125[0] = v84;
    v125[1] = MEMORY[0x24BDF4638];
    v125[2] = v81;
    v122 = v117;
    v123 = MEMORY[0x24BDF4610];
    v132 = v77;
    v133 = v111;
    v134 = v74;
    v135 = v75;
    v124 = swift_getOpaqueTypeConformance2();
    sub_24A66AB50(v128, 3uLL, (uint64_t)v125);
    v85 = *(void (**)(char *, uint64_t))(v79 + 8);
    v85(v80, v81);
    v86 = (uint64_t (*)(uint64_t, uint64_t))v118;
    v118(v83, v84);
    v85((char *)v76, v81);
    return v86(v82, v84);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A66BCF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  id v40;
  void (*v41)(char *, char *, uint64_t);
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  char *v125;
  _QWORD v126[2];
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v124 = a3;
  v116 = a1;
  v119 = a4;
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948130);
  MEMORY[0x24BDAC7A8](v100);
  v102 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v98);
  v101 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_24A77B3D4();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v95 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948718);
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v99 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579486A0);
  MEMORY[0x24BDAC7A8](v10);
  v103 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579485A0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v107 = (uint64_t)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v109 = (uint64_t)&v94 - v15;
  v123 = (void (*)(uint64_t, uint64_t))a2;
  v16 = sub_24A77A5F4();
  v108 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v121 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v120 = (uint64_t)&v94 - v19;
  v21 = type metadata accessor for WorkoutConfigurationViewIOS(0, a2, a3, v20);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v94 - v23;
  v122 = v16;
  v104 = v12;
  swift_getTupleTypeMetadata2();
  v115 = sub_24A77B6A4();
  v111 = sub_24A77BDE8();
  v110 = *(_QWORD *)(v111 - 8);
  v25 = MEMORY[0x24BDAC7A8](v111);
  v113 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v125 = (char *)&v94 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948720);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948598);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v112 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v94 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v94 - v38;
  v40 = v116;
  sub_24A66C7D0((uint64_t)v116, (uint64_t)v123, v124, (uint64_t)v30);
  sub_24A67047C(&qword_257948728, &qword_257948720, (uint64_t (*)(void))sub_24A6702A4);
  sub_24A77B608();
  v117 = v39;
  v118 = v32;
  v41 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v114 = v31;
  v41(v39, v37, v31);
  LODWORD(v37) = sub_24A66AD04();
  (*(void (**)(char *, id, uint64_t))(v22 + 16))(v24, v40, v21);
  if ((_DWORD)v37)
  {
    v42 = sub_24A66AD04();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    if (v42 != 4)
    {
      v43 = v115;
      v44 = v113;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v113, 1, 1, v115);
      MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v43);
      v45 = v110;
      v46 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v47 = v111;
      v46(v125, v44, v111);
      goto LABEL_14;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  LOBYTE(v132) = 1;
  v48 = (uint64_t)v121;
  v49 = v124;
  MEMORY[0x24BD188D4](&v132, v123, &type metadata for ListRowBackgroundViewModifier, v124);
  v50 = sub_24A670438();
  v126[0] = v49;
  v126[1] = v50;
  v51 = v122;
  v124 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v122, v126);
  sub_24A6B90A4(v48, v51, v120);
  v52 = v108;
  v53 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
  v53(v48, v51);
  v54 = (uint64_t)v103;
  sub_24A7791A8();
  v55 = sub_24A77898C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55))
  {
    sub_24A63CD04(v54, &qword_2579486A0);
    v56 = 1;
    v43 = v115;
    v44 = v113;
    v47 = v111;
    v57 = v106;
  }
  else
  {
    v58 = sub_24A778980();
    v60 = v59;
    sub_24A63CD04(v54, &qword_2579486A0);
    v44 = v113;
    v47 = v111;
    v57 = v106;
    if (v60 >> 60 == 15)
    {
      v56 = 1;
      v43 = v115;
    }
    else
    {
      v123 = v53;
      v61 = objc_allocWithZone(MEMORY[0x24BEBD640]);
      sub_24A670684(v58, v60);
      v62 = (void *)sub_24A7786BC();
      v63 = objc_msgSend(v61, sel_initWithData_, v62);
      sub_24A6706C8(v58, v60);

      if (v63)
      {
        v116 = v63;
        sub_24A77B3BC();
        v64 = v96;
        v65 = v95;
        v66 = v97;
        (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v95, *MEMORY[0x24BDF3FD0], v97);
        v103 = (char *)sub_24A77B41C();
        swift_release();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
        v132 = sub_24A77B35C();
        v67 = sub_24A77B554();
        v68 = v101;
        v69 = &v101[*(int *)(v98 + 20)];
        v70 = *MEMORY[0x24BDEEB68];
        v71 = sub_24A77A9D8();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 104))(v69, v70, v71);
        __asm { FMOV            V0.2D, #10.0 }
        *v68 = _Q0;
        v77 = v102;
        sub_24A655654((uint64_t)v68, v102);
        *(_WORD *)(v77 + *(int *)(v100 + 36)) = 256;
        v78 = (uint64_t)v99;
        sub_24A63CCC0(v77, (uint64_t)&v99[*(int *)(v57 + 36)], &qword_257948130);
        *(_QWORD *)v78 = v103;
        *(_QWORD *)(v78 + 8) = 0;
        *(_WORD *)(v78 + 16) = 257;
        *(_QWORD *)(v78 + 24) = v67;
        *(_OWORD *)(v78 + 32) = 0u;
        *(_OWORD *)(v78 + 48) = 0u;
        *(_BYTE *)(v78 + 64) = 0;
        swift_retain();
        swift_retain();
        v79 = v77;
        v52 = v108;
        sub_24A63CD04(v79, &qword_257948130);
        sub_24A655698((uint64_t)v68);

        sub_24A6706C8(v58, v60);
        swift_release();
        swift_release();
        sub_24A63F6C4(v78, v109, &qword_257948718);
        v56 = 0;
      }
      else
      {
        sub_24A6706C8(v58, v60);
        v56 = 1;
      }
      v43 = v115;
      v53 = v123;
    }
  }
  v80 = v109;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v109, v56, 1, v57);
  v81 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  v83 = v120;
  v82 = (uint64_t)v121;
  v84 = v122;
  v81(v121, v120, v122);
  v132 = v82;
  v85 = v107;
  sub_24A63CCC0(v80, v107, &qword_2579485A0);
  v133 = v85;
  v130 = v84;
  v131 = v104;
  v128 = v124;
  v129 = sub_24A67047C(&qword_257948770, &qword_2579485A0, (uint64_t (*)(void))sub_24A6704E0);
  sub_24A66AB50(&v132, 2uLL, (uint64_t)&v130);
  sub_24A63CD04(v80, &qword_2579485A0);
  v53(v83, v84);
  sub_24A63CD04(v85, &qword_2579485A0);
  v53(v82, v84);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v44, 0, 1, v43);
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v43);
  v45 = v110;
  v46 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  v46(v125, v44, v47);
LABEL_14:
  v86 = *(void (**)(char *, uint64_t))(v45 + 8);
  v86(v44, v47);
  v87 = v114;
  v88 = (uint64_t)v112;
  v90 = v117;
  v89 = v118;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v112, v117, v114);
  v132 = v88;
  v91 = v125;
  v46(v44, v125, v47);
  v133 = (uint64_t)v44;
  v130 = v87;
  v131 = v47;
  v128 = sub_24A6703B0();
  v127 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v43);
  v129 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5578], v47, &v127);
  sub_24A66AB50(&v132, 2uLL, (uint64_t)&v130);
  v86(v91, v47);
  v92 = *(void (**)(char *, uint64_t))(v89 + 8);
  v92(v90, v87);
  v86(v44, v47);
  return ((uint64_t (*)(uint64_t, uint64_t))v92)(v88, v87);
}

uint64_t sub_24A66C7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948758);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948748);
  MEMORY[0x24BDAC7A8](v47);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948738);
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v47 - v16;
  v19 = type metadata accessor for WorkoutConfigurationViewIOS(0, a2, a3, v18);
  v20 = sub_24A66AD04();
  sub_24A74B240(*(_QWORD *)(a1 + *(int *)(v19 + 40)), *(_QWORD *)(a1 + *(int *)(v19 + 44)), v20);
  if (!v22)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v50, 1, 1, v49);
  v23 = v21;
  v24 = v22;
  *(_QWORD *)v9 = sub_24A77A9FC();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487C0);
  sub_24A66CAD8(v23, v24, a1, a2, a3, (uint64_t)&v9[*(int *)(v25 + 44)]);
  swift_bridgeObjectRelease();
  LOBYTE(v24) = sub_24A77ACC0();
  sub_24A77A390();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_24A63CCC0((uint64_t)v9, (uint64_t)v11, &qword_257948758);
  v34 = &v11[*(int *)(v47 + 36)];
  *v34 = v24;
  *((_QWORD *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_24A63CD04((uint64_t)v9, &qword_257948758);
  LOBYTE(v24) = sub_24A77ACCC();
  sub_24A66AD04();
  sub_24A77A390();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_24A63CCC0((uint64_t)v11, (uint64_t)v15, &qword_257948748);
  v43 = v49;
  v44 = &v15[*(int *)(v49 + 36)];
  *v44 = v24;
  *((_QWORD *)v44 + 1) = v36;
  *((_QWORD *)v44 + 2) = v38;
  *((_QWORD *)v44 + 3) = v40;
  *((_QWORD *)v44 + 4) = v42;
  v44[40] = 0;
  sub_24A63CD04((uint64_t)v11, &qword_257948748);
  sub_24A63F6C4((uint64_t)v15, (uint64_t)v17, &qword_257948738);
  v45 = v50;
  sub_24A63F6C4((uint64_t)v17, v50, &qword_257948738);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v43);
}

uint64_t sub_24A66CAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (**v44)(char *, _QWORD, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t KeyPath;
  uint64_t v61;
  void (**v62)(char *, _QWORD, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char *v126;
  uint64_t ObjCClassFromMetadata;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void (**v150)(char *, _QWORD, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char v174;
  __int128 v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  char v179;
  __int128 v180;

  v154 = a5;
  v153 = a4;
  v169 = a3;
  v160 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487C8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v161 = (uint64_t)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v159 = (char *)&v142 - v11;
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487D0);
  MEMORY[0x24BDAC7A8](v143);
  v145 = (uint64_t)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487D8);
  v157 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156);
  v144 = (uint64_t)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487E0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v158 = (uint64_t)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v155 = (uint64_t)&v142 - v17;
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487E8);
  MEMORY[0x24BDAC7A8](v163);
  v166 = (uint64_t *)((char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487F0);
  MEMORY[0x24BDAC7A8](v19);
  v165 = (char *)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_24A77AE70();
  v150 = *(void (***)(char *, _QWORD, uint64_t))(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (char *)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_24A77AEB8();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946ED0);
  MEMORY[0x24BDAC7A8](v162);
  v148 = (char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946ED8);
  MEMORY[0x24BDAC7A8](v30);
  v164 = (uint64_t)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487F8);
  v32 = MEMORY[0x24BDAC7A8](v152);
  v168 = (uint64_t)&v142 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v167 = (uint64_t)&v142 - v34;
  v170 = a1;
  v171 = a2;
  v35 = sub_24A645928();
  swift_bridgeObjectRetain();
  v142 = v35;
  v36 = sub_24A77AFD8();
  v146 = v37;
  v147 = v38;
  v40 = v39 & 1;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, *MEMORY[0x24BDF1848], v25);
  v41 = *MEMORY[0x24BDF1660];
  v42 = sub_24A77ADC8();
  v43 = *(_QWORD *)(v42 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v24, v41, v42);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v24, 0, 1, v42);
  sub_24A77ADD4();
  sub_24A77AE34();
  sub_24A63CD04((uint64_t)v24, &qword_257946FD0);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v44 = v150;
  v45 = v149;
  v46 = v151;
  v150[13](v149, *MEMORY[0x24BDF17C8], v151);
  sub_24A77AE88();
  swift_release();
  ((void (*)(char *, uint64_t))v44[1])(v45, v46);
  v47 = v146;
  v48 = sub_24A77AF84();
  v50 = v49;
  LOBYTE(v42) = v51;
  swift_release();
  LOBYTE(v26) = v42 & 1;
  v52 = v40;
  v53 = (uint64_t)v148;
  sub_24A64596C(v36, v47, v52);
  swift_bridgeObjectRelease();
  sub_24A77B368();
  v54 = sub_24A77AF48();
  v56 = v55;
  LOBYTE(v36) = v57;
  v59 = v58;
  swift_release();
  LOBYTE(v46) = v36 & 1;
  sub_24A64596C(v48, v50, v26);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v61 = sub_24A77AF6C();
  v62 = *(void (***)(char *, _QWORD, uint64_t))(*(_QWORD *)(v61 - 8) + 56);
  v63 = (uint64_t)v165;
  v151 = v61;
  v150 = v62;
  ((void (*)(char *, uint64_t, uint64_t))v62)(v165, 1, 1);
  v64 = swift_getKeyPath();
  v65 = v166;
  sub_24A63CCC0(v63, (uint64_t)v166 + *(int *)(v163 + 28), &qword_2579487F0);
  *v65 = v64;
  sub_24A63CCC0((uint64_t)v65, v53 + *(int *)(v162 + 36), &qword_2579487E8);
  *(_QWORD *)v53 = v54;
  *(_QWORD *)(v53 + 8) = v56;
  *(_BYTE *)(v53 + 16) = v46;
  *(_QWORD *)(v53 + 24) = v59;
  *(_QWORD *)(v53 + 32) = KeyPath;
  *(_BYTE *)(v53 + 40) = 1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A6436C4(v54, v56, v46);
  sub_24A63CD04((uint64_t)v65, &qword_2579487E8);
  sub_24A63CD04(v63, &qword_2579487F0);
  sub_24A64596C(v54, v56, v46);
  swift_release();
  swift_bridgeObjectRelease();
  v66 = sub_24A77B668();
  v67 = v164;
  sub_24A642150(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v164, 0.0, 1, 0.0, 1, v66, v68);
  sub_24A63CD04(v53, &qword_257946ED0);
  v69 = v168;
  sub_24A63CCC0(v67, v168, &qword_257946ED8);
  *(_WORD *)(v69 + *(int *)(v152 + 36)) = 256;
  sub_24A63CD04(v67, &qword_257946ED8);
  sub_24A63F6C4(v69, v167, &qword_2579487F8);
  v71 = type metadata accessor for WorkoutConfigurationViewIOS(0, v153, v154, v70);
  v72 = sub_24A66AD04();
  v73 = sub_24A74B660(v72);
  if (v74)
  {
    v170 = v73;
    v171 = v74;
    v75 = sub_24A77AFD8();
    v154 = v71;
    v76 = v75;
    v78 = v77;
    v80 = v79 & 1;
    sub_24A77AD98();
    v81 = sub_24A77AF84();
    v83 = v82;
    v85 = v84;
    swift_release();
    sub_24A64596C(v76, v78, v80);
    swift_bridgeObjectRelease();
    sub_24A77B338();
    v86 = sub_24A77AF48();
    v88 = v87;
    v90 = v89;
    v92 = v91;
    swift_release();
    v93 = v90 & 1;
    sub_24A64596C(v81, v83, v85 & 1);
    swift_bridgeObjectRelease();
    v94 = swift_getKeyPath();
    v95 = (uint64_t)v165;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v150)(v165, 1, 1, v151);
    v96 = swift_getKeyPath();
    v97 = v166;
    sub_24A63CCC0(v95, (uint64_t)v166 + *(int *)(v163 + 28), &qword_2579487F0);
    *v97 = v96;
    sub_24A63CCC0((uint64_t)v97, v53 + *(int *)(v162 + 36), &qword_2579487E8);
    *(_QWORD *)v53 = v86;
    *(_QWORD *)(v53 + 8) = v88;
    *(_BYTE *)(v53 + 16) = v93;
    *(_QWORD *)(v53 + 24) = v92;
    *(_QWORD *)(v53 + 32) = v94;
    *(_BYTE *)(v53 + 40) = 1;
    sub_24A6436C4(v86, v88, v93);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24A63CD04((uint64_t)v97, &qword_2579487E8);
    sub_24A63CD04(v95, &qword_2579487F0);
    sub_24A64596C(v86, v88, v93);
    swift_release();
    swift_bridgeObjectRelease();
    v98 = sub_24A77B668();
    v99 = v164;
    sub_24A642150(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v164, 0.0, 1, 0.0, 1, v98, v100);
    sub_24A63CD04(v53, &qword_257946ED0);
    LOBYTE(v92) = sub_24A77ACC0();
    sub_24A77A390();
    v102 = v101;
    v104 = v103;
    v106 = v105;
    v108 = v107;
    v109 = v145;
    sub_24A63CCC0(v99, v145, &qword_257946ED8);
    v110 = v109 + *(int *)(v143 + 36);
    *(_BYTE *)v110 = v92;
    *(_QWORD *)(v110 + 8) = v102;
    *(_QWORD *)(v110 + 16) = v104;
    *(_QWORD *)(v110 + 24) = v106;
    *(_QWORD *)(v110 + 32) = v108;
    *(_BYTE *)(v110 + 40) = 0;
    sub_24A63CD04(v99, &qword_257946ED8);
    LOBYTE(v92) = sub_24A77ACCC();
    sub_24A77A390();
    v112 = v111;
    v114 = v113;
    v116 = v115;
    v118 = v117;
    v119 = v144;
    sub_24A63CCC0(v109, v144, &qword_2579487D0);
    v120 = v156;
    v121 = v119 + *(int *)(v156 + 36);
    *(_BYTE *)v121 = v92;
    *(_QWORD *)(v121 + 8) = v112;
    *(_QWORD *)(v121 + 16) = v114;
    *(_QWORD *)(v121 + 24) = v116;
    *(_QWORD *)(v121 + 32) = v118;
    *(_BYTE *)(v121 + 40) = 0;
    sub_24A63CD04(v109, &qword_2579487D0);
    v122 = v155;
    sub_24A63F6C4(v119, v155, &qword_2579487D8);
    v123 = 0;
    v124 = v120;
  }
  else
  {
    v122 = v155;
    v124 = v156;
    v123 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56))(v122, v123, 1, v124);
  v125 = sub_24A66AD04();
  v126 = v159;
  if (v125 == 1)
  {
    type metadata accessor for WorkoutUIBundlePlaceholder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v128 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v129 = sub_24A77B428();
    sub_24A77B668();
    sub_24A77A4B0();
    v170 = v129;
    v171 = v176;
    v172 = v177;
    v173 = v178;
    v174 = v179;
    v175 = v180;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948810);
    sub_24A670744(&qword_257948818, &qword_257948810, MEMORY[0x24BDEBEE0]);
    sub_24A77B11C();
    swift_release();
    v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948800);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v126, 0, 1, v130);
  }
  else
  {
    v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948800);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v126, 1, 1, v131);
  }
  v132 = v167;
  v133 = v168;
  sub_24A63CCC0(v167, v168, &qword_2579487F8);
  v134 = v158;
  sub_24A63CCC0(v122, v158, &qword_2579487E0);
  v135 = (uint64_t)v126;
  v136 = (uint64_t)v126;
  v137 = v161;
  sub_24A63CCC0(v135, v161, &qword_2579487C8);
  v138 = v160;
  sub_24A63CCC0(v133, v160, &qword_2579487F8);
  v139 = v122;
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948808);
  sub_24A63CCC0(v134, v138 + *(int *)(v140 + 48), &qword_2579487E0);
  sub_24A63CCC0(v137, v138 + *(int *)(v140 + 64), &qword_2579487C8);
  sub_24A63CD04(v136, &qword_2579487C8);
  sub_24A63CD04(v139, &qword_2579487E0);
  sub_24A63CD04(v132, &qword_2579487F8);
  sub_24A63CD04(v137, &qword_2579487C8);
  sub_24A63CD04(v134, &qword_2579487E0);
  return sub_24A63CD04(v133, &qword_2579487F8);
}

uint64_t sub_24A66D8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  SEL *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v106 = a4;
  v7 = sub_24A77A3C0();
  v102 = *(_QWORD *)(v7 - 8);
  v103 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v101 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A77A6C0();
  v99 = *(_QWORD *)(v9 - 8);
  v100 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v98 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A77AC3C();
  v88 = *(_QWORD *)(v11 - 8);
  v89 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v87 = (char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948638);
  MEMORY[0x24BDAC7A8](v85);
  v14 = (char *)v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948640);
  v92 = *(_QWORD *)(v15 - 8);
  v93 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v91 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948648);
  MEMORY[0x24BDAC7A8](v83);
  v97 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948650);
  MEMORY[0x24BDAC7A8](v90);
  v96 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948658);
  MEMORY[0x24BDAC7A8](v95);
  v94 = (char *)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948660);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948668);
  MEMORY[0x24BDAC7A8](v23);
  v86 = (char *)v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948670);
  v104 = *(_QWORD *)(v25 - 8);
  v105 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v84 = (char *)v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v78 - v28;
  type metadata accessor for WorkoutConfigurationViewIOS(0, a2, a3, v30);
  if (sub_24A66AD04())
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v106, 1, 1, v105);
  v79 = v20;
  v80 = v23;
  v81 = v22;
  v82 = v29;
  v78[1] = a1;
  sub_24A66E08C(a1, a2, a3, v31, (uint64_t)v14);
  v33 = v87;
  sub_24A77AC30();
  sub_24A66FB28();
  sub_24A63C880((unint64_t *)&qword_257948128, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
  v34 = v91;
  v35 = v89;
  sub_24A77B0C8();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v33, v35);
  sub_24A63CD04((uint64_t)v14, &qword_257948638);
  v36 = v98;
  sub_24A77A6B4();
  KeyPath = swift_getKeyPath();
  v38 = (uint64_t)v97;
  v39 = (uint64_t *)&v97[*(int *)(v83 + 36)];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947780);
  v42 = v99;
  v41 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))((char *)v39 + *(int *)(v40 + 28), v36, v100);
  *v39 = KeyPath;
  v44 = v92;
  v43 = v93;
  (*(void (**)(uint64_t, char *, uint64_t))(v92 + 16))(v38, v34, v93);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v41);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v43);
  v46 = v101;
  v45 = v102;
  v47 = v103;
  (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v101, *MEMORY[0x24BDEB488], v103);
  v48 = swift_getKeyPath();
  v49 = (uint64_t)v96;
  v50 = (uint64_t *)&v96[*(int *)(v90 + 36)];
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948690);
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v50 + *(int *)(v51 + 28), v46, v47);
  *v50 = v48;
  sub_24A63CCC0(v38, v49, &qword_257948648);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  sub_24A63CD04(v38, &qword_257948648);
  v52 = sub_24A66AD04();
  v53 = (uint64_t)v86;
  v54 = (uint64_t)v84;
  v55 = (uint64_t)v94;
  v56 = v95;
  if (v52 == 4)
    v57 = sub_24A77B338();
  else
    v57 = sub_24A77B350();
  v58 = v57;
  v59 = swift_getKeyPath();
  sub_24A63CCC0(v49, v55, &qword_257948650);
  v60 = (uint64_t *)(v55 + *(int *)(v56 + 36));
  *v60 = v59;
  v60[1] = v58;
  sub_24A63CD04(v49, &qword_257948650);
  v61 = WorkoutConfiguration.displayColor.getter();
  v62 = MEMORY[0x24BD189B8](v61);
  v63 = swift_getKeyPath();
  v107 = v62;
  swift_retain();
  v64 = sub_24A77A4BC();
  v65 = (uint64_t)v81;
  sub_24A63CCC0(v55, (uint64_t)v81, &qword_257948658);
  swift_release();
  v66 = (uint64_t *)(v65 + *(int *)(v79 + 36));
  *v66 = v63;
  v66[1] = v64;
  sub_24A63CD04(v55, &qword_257948658);
  v67 = sub_24A77AEAC();
  v68 = swift_getKeyPath();
  sub_24A63CCC0(v65, v53, &qword_257948660);
  v69 = (uint64_t *)(v53 + *(int *)(v80 + 36));
  *v69 = v68;
  v69[1] = v67;
  sub_24A63CD04(v65, &qword_257948660);
  v70 = sub_24A66AD04() == 4;
  v71 = swift_getKeyPath();
  v72 = swift_allocObject();
  *(_BYTE *)(v72 + 16) = v70;
  sub_24A63CCC0(v53, v54, &qword_257948668);
  v73 = v105;
  v74 = (uint64_t *)(v54 + *(int *)(v105 + 36));
  *v74 = v71;
  v74[1] = (uint64_t)sub_24A66FE60;
  v74[2] = v72;
  sub_24A63CD04(v53, &qword_257948668);
  v75 = (uint64_t)v82;
  sub_24A63F6C4(v54, (uint64_t)v82, &qword_257948670);
  v76 = v75;
  v77 = v106;
  sub_24A63F6C4(v76, v106, &qword_257948670);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v77, 0, 1, v73);
}

void *sub_24A66E08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  ValueMetadata *v72;
  unint64_t v73;

  v63 = a5;
  v8 = type metadata accessor for WorkoutConfigurationViewIOS(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v56 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948698);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579486A0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)(a1 + *(int *)(v8 + 40));
  v21 = sub_24A77916C();
  v64 = v14;
  v61 = a2;
  v62 = a3;
  v60 = v9;
  if ((v21 & 1) != 0)
  {
    v22 = (uint64_t *)(a1 + *(int *)(v8 + 48));
    v23 = *v22;
    v24 = v22[1];
    v65 = v20;
    v66 = v23;
    v67 = v24;
    v68 = 0;
    sub_24A670214();
    sub_24A670258();
    v25 = v20;
    swift_retain();
    sub_24A77AB28();
    v26 = v69;
    v27 = v70;
    v28 = v71;
    v29 = v72;
    v30 = a1;
  }
  else
  {
    v31 = sub_24A779154();
    swift_release();
    if (v31)
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = -1;
      v30 = a1;
    }
    else
    {
      sub_24A7791A8();
      v32 = sub_24A77898C();
      v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v19, 1, v32);
      sub_24A63CD04((uint64_t)v19, &qword_2579486A0);
      v30 = a1;
      if (v33 == 1)
      {
        v34 = (uint64_t *)(a1 + *(int *)(v8 + 48));
        v35 = *v34;
        v36 = v34[1];
        v65 = v20;
        v66 = v35;
        v67 = v36;
        v68 = 1;
        sub_24A670214();
        sub_24A670258();
        v37 = v20;
        swift_retain();
        sub_24A77AB28();
        v26 = v69;
        v27 = v70;
        v28 = v71;
        v29 = v72;
      }
      else
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        v29 = -1;
      }
    }
  }
  v72 = &type metadata for WorkoutUIFeatures;
  v73 = sub_24A66FE78();
  v38 = sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
  if ((v38 & 1) != 0 && (v39 = sub_24A74AEA4(), v40))
  {
    v41 = v40;
    v57 = (uint64_t)v39;
    v58 = v16;
    v42 = v8;
    v43 = v59;
    v44 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v30, v42);
    v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    v46 = swift_allocObject();
    v47 = v62;
    *(_QWORD *)(v46 + 16) = v61;
    *(_QWORD *)(v46 + 24) = v47;
    v48 = v42;
    v16 = v58;
    v49 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v44 + 32))(v46 + v45, v43, v48);
    MEMORY[0x24BDAC7A8](v49);
    *(&v56 - 2) = v57;
    *(&v56 - 1) = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579486C0);
    sub_24A6700A0();
    sub_24A77B4B8();
    swift_bridgeObjectRelease();
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579486B0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v16, 0, 1, v50);
  }
  else
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579486B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v16, 1, 1, v51);
  }
  v52 = v63;
  v53 = (uint64_t)v64;
  sub_24A63CCC0((uint64_t)v16, (uint64_t)v64, &qword_257948698);
  *(_QWORD *)v52 = v26;
  *(_QWORD *)(v52 + 8) = v27;
  *(_QWORD *)(v52 + 16) = v28;
  *(_BYTE *)(v52 + 24) = v29;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579486B8);
  sub_24A63CCC0(v53, v52 + *(int *)(v54 + 48), &qword_257948698);
  sub_24A66FEBC(v26, v27, v28, v29);
  sub_24A63CD04((uint64_t)v16, &qword_257948698);
  sub_24A63CD04(v53, &qword_257948698);
  return sub_24A66FEF8(v26, v27, v28, v29);
}

double sub_24A66E4FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t KeyPath;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  double result;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[10];
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v2 = sub_24A77AE70();
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v39 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A77AEB8();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A77A9B4();
  MEMORY[0x24BDAC7A8](v9);
  sub_24A77A9A8();
  sub_24A77A99C();
  sub_24A77A990();
  sub_24A77A99C();
  sub_24A77A9CC();
  v10 = sub_24A77AFC0();
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  KeyPath = swift_getKeyPath();
  v43 = v10;
  v44 = v12;
  v45 = v16;
  v46 = v14;
  v47 = KeyPath;
  v48 = 1;
  sub_24A77B668();
  sub_24A6421A8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v42, 0.0, 1, 0.0, 1);
  sub_24A64596C(v10, v12, v16);
  swift_release();
  swift_bridgeObjectRelease();
  v55 = v42[6];
  v56 = v42[7];
  v57 = v42[8];
  v58 = v42[9];
  v51 = v42[2];
  v52 = v42[3];
  v53 = v42[4];
  v54 = v42[5];
  v49 = v42[0];
  v50 = v42[1];
  v19 = v36;
  v18 = v37;
  v20 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x24BDF1878], v38);
  v21 = *MEMORY[0x24BDF1660];
  v22 = sub_24A77ADC8();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v6, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v6, 0, 1, v22);
  sub_24A77ADF8();
  sub_24A77AE34();
  sub_24A63CD04((uint64_t)v6, &qword_257946FD0);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
  v25 = v39;
  v24 = v40;
  v26 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, *MEMORY[0x24BDF17C8], v41);
  v27 = sub_24A77AE88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  v28 = swift_getKeyPath();
  v29 = v56;
  *(_OWORD *)(a1 + 96) = v55;
  *(_OWORD *)(a1 + 112) = v29;
  v30 = v58;
  *(_OWORD *)(a1 + 128) = v57;
  *(_OWORD *)(a1 + 144) = v30;
  v31 = v52;
  *(_OWORD *)(a1 + 32) = v51;
  *(_OWORD *)(a1 + 48) = v31;
  v32 = v54;
  *(_OWORD *)(a1 + 64) = v53;
  *(_OWORD *)(a1 + 80) = v32;
  result = *(double *)&v49;
  v34 = v50;
  *(_OWORD *)a1 = v49;
  *(_OWORD *)(a1 + 16) = v34;
  *(_QWORD *)(a1 + 160) = v28;
  *(_QWORD *)(a1 + 168) = v27;
  return result;
}

uint64_t sub_24A66E8B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A66B180(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), a1);
}

uint64_t sub_24A66E8C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A66BCF0(*(void **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_24A66E8D0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  _QWORD *v55;
  id v56;
  uint64_t v57;
  id v58;
  _QWORD *v59;
  id v60;
  char *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  unsigned int v75;
  _QWORD *v76;
  id v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  id v81;
  char *v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  _OWORD v143[12];
  _OWORD v144[14];
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  char v172;

  v125 = a2;
  v126 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948820);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_OWORD *)((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948828);
  MEMORY[0x24BDAC7A8](v117);
  v120 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948830);
  MEMORY[0x24BDAC7A8](v118);
  v119 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948838);
  v115 = *(_QWORD *)(v121 - 8);
  v11 = MEMORY[0x24BDAC7A8](v121);
  v113 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v114 = (char *)&v107 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v116 = (char *)&v107 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v124 = (char *)&v107 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948840);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v122 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v123 = (uint64_t)&v107 - v21;
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948848);
  MEMORY[0x24BDAC7A8](v127);
  v128 = (uint64_t)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948850);
  v23 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v25 = (char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948858);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v129 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_24A77916C() & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(a4, 1, 1, v26);
  v112 = v26;
  swift_getObjectType();
  v29 = swift_conformsToProtocol2();
  if (v29)
    v30 = v29;
  else
    v30 = 0;
  if (v29)
    v31 = a1;
  else
    v31 = 0;
  if (v31)
  {
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v31;
    v32[3] = v30;
    v33 = v125;
    v32[4] = a1;
    v32[5] = v33;
    v32[6] = v126;
    sub_24A670DCC();
    v125 = a1;
    swift_retain();
    v34 = v27;
    sub_24A77B4B8();
    v35 = v130;
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v128, v25, v130);
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_257948870, &qword_257948850, MEMORY[0x24BDF43B0]);
    sub_24A63CFF0(&qword_257948878, &qword_257948820, MEMORY[0x24BDF5428]);
    v36 = (uint64_t)v129;
    sub_24A77AB28();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v35);
  }
  else
  {
    v109 = v27;
    v110 = a4;
    v111 = v6;
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v38 = (id)qword_2544D6158;
    v39 = sub_24A77856C();
    v41 = v40;

    *(_QWORD *)&v155 = v39;
    *((_QWORD *)&v155 + 1) = v41;
    sub_24A645928();
    v42 = sub_24A77AFD8();
    v44 = v43;
    v46 = v45;
    v48 = v47 & 1;
    KeyPath = swift_getKeyPath();
    v167 = v42;
    v168 = v44;
    v169 = v48;
    v170 = v46;
    v171 = KeyPath;
    v172 = 1;
    sub_24A77B668();
    sub_24A6421A8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v155, 0.0, 1, 0.0, 1);
    sub_24A64596C(v42, v44, v48);
    swift_release();
    swift_bridgeObjectRelease();
    v151 = v161;
    v152 = v162;
    v153 = v163;
    v154 = v164;
    v147 = v157;
    v148 = v158;
    v149 = v159;
    v150 = v160;
    v145 = v155;
    v146 = v156;
    v50 = sub_24A77AEA0();
    v51 = swift_getKeyPath();
    v52 = sub_24A77B38C();
    v53 = swift_getKeyPath();
    v161 = v151;
    v162 = v152;
    v163 = v153;
    v164 = v154;
    v157 = v147;
    v158 = v148;
    v159 = v149;
    v160 = v150;
    v155 = v145;
    v156 = v146;
    *(_QWORD *)&v165 = v51;
    *((_QWORD *)&v165 + 1) = v50;
    *(_QWORD *)&v166 = v53;
    *((_QWORD *)&v166 + 1) = v52;
    v54 = (void *)sub_24A779130();
    LODWORD(v51) = objc_msgSend(v54, sel_requiresLocationDisambiguation);

    if ((_DWORD)v51)
    {
      v55 = (_QWORD *)swift_allocObject();
      v56 = v125;
      v57 = v126;
      v55[2] = a1;
      v55[3] = v56;
      v55[4] = v57;
      MEMORY[0x24BDAC7A8](v55);
      v58 = a1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579486D8);
      sub_24A670124();
      sub_24A77B4B8();
      v59 = (_QWORD *)swift_allocObject();
      v59[2] = v58;
      v59[3] = v56;
      v59[4] = v57;
      MEMORY[0x24BDAC7A8](v59);
      v60 = v58;
      swift_retain();
      v61 = v116;
      sub_24A77B4B8();
      v63 = v114;
      v62 = v115;
      v64 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
      v65 = v124;
      v66 = v121;
      v64(v114, v124, v121);
      v67 = v113;
      v64(v113, v61, v66);
      v68 = (uint64_t)v119;
      v64(v119, v63, v66);
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948880);
      v64((char *)(v68 + *(int *)(v69 + 48)), v67, v66);
      v70 = *(void (**)(char *, uint64_t))(v62 + 8);
      v70(v67, v66);
      v70(v63, v66);
      sub_24A63CCC0(v68, v120, &qword_257948830);
      swift_storeEnumTagMultiPayload();
      sub_24A63CFF0(&qword_257948888, &qword_257948830, MEMORY[0x24BDF5428]);
      v71 = (uint64_t)v122;
      sub_24A77AB28();
      sub_24A63CD04(v68, &qword_257948830);
      v70(v61, v66);
      v70(v65, v66);
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948860);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 0, 1, v72);
      v73 = v123;
      sub_24A63F6C4(v71, v123, &qword_257948840);
      a4 = v110;
    }
    else
    {
      v74 = (void *)sub_24A779130();
      v75 = objc_msgSend(v74, sel_requiresSwimmingLocationDisambiguation);

      a4 = v110;
      if (v75)
      {
        v76 = (_QWORD *)swift_allocObject();
        v108 = &v107;
        v77 = v125;
        v78 = v126;
        v76[2] = a1;
        v76[3] = v77;
        v76[4] = v78;
        MEMORY[0x24BDAC7A8](v76);
        v79 = a1;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2579486D8);
        sub_24A670124();
        sub_24A77B4B8();
        v80 = (_QWORD *)swift_allocObject();
        v108 = &v107;
        v80[2] = v79;
        v80[3] = v77;
        v80[4] = v78;
        MEMORY[0x24BDAC7A8](v80);
        v81 = v79;
        swift_retain();
        v82 = v116;
        sub_24A77B4B8();
        v84 = v114;
        v83 = v115;
        v85 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
        v86 = v121;
        v85(v114, v124, v121);
        v87 = v113;
        v85(v113, v82, v86);
        v88 = (uint64_t)v119;
        v85(v119, v84, v86);
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948880);
        v85((char *)(v88 + *(int *)(v89 + 48)), v87, v86);
        v90 = *(void (**)(char *, uint64_t))(v83 + 8);
        v90(v87, v86);
        v90(v84, v86);
        sub_24A63CCC0(v88, v120, &qword_257948830);
        swift_storeEnumTagMultiPayload();
        sub_24A63CFF0(&qword_257948888, &qword_257948830, MEMORY[0x24BDF5428]);
        v71 = (uint64_t)v122;
        sub_24A77AB28();
        sub_24A63CD04(v88, &qword_257948830);
        v90(v82, v86);
        v90(v124, v86);
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948860);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v71, 0, 1, v91);
        v73 = v123;
        sub_24A63F6C4(v71, v123, &qword_257948840);
      }
      else
      {
        v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948860);
        v73 = v123;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v123, 1, 1, v92);
        v71 = (uint64_t)v122;
      }
    }
    v139 = v163;
    v140 = v164;
    v141 = v165;
    v142 = v166;
    v135 = v159;
    v136 = v160;
    v137 = v161;
    v138 = v162;
    v131 = v155;
    v132 = v156;
    v133 = v157;
    v134 = v158;
    sub_24A63CCC0(v73, v71, &qword_257948840);
    v93 = v140;
    v143[8] = v139;
    v143[9] = v140;
    v94 = v141;
    v95 = v142;
    v143[10] = v141;
    v143[11] = v142;
    v96 = v135;
    v97 = v136;
    v143[4] = v135;
    v143[5] = v136;
    v98 = v137;
    v99 = v138;
    v143[6] = v137;
    v143[7] = v138;
    v100 = v131;
    v101 = v132;
    v143[0] = v131;
    v143[1] = v132;
    v102 = v133;
    v103 = v134;
    v143[2] = v133;
    v143[3] = v134;
    v8[8] = v139;
    v8[9] = v93;
    v8[10] = v94;
    v8[11] = v95;
    v8[4] = v96;
    v8[5] = v97;
    v8[6] = v98;
    v8[7] = v99;
    *v8 = v100;
    v8[1] = v101;
    v8[2] = v102;
    v8[3] = v103;
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948868);
    sub_24A63CCC0(v71, (uint64_t)v8 + *(int *)(v104 + 48), &qword_257948840);
    sub_24A670B38((uint64_t)v143);
    sub_24A670B38((uint64_t)&v155);
    sub_24A63CD04(v71, &qword_257948840);
    v144[8] = v139;
    v144[9] = v140;
    v144[10] = v141;
    v144[11] = v142;
    v144[4] = v135;
    v144[5] = v136;
    v144[6] = v137;
    v144[7] = v138;
    v144[0] = v131;
    v144[1] = v132;
    v144[2] = v133;
    v144[3] = v134;
    sub_24A670BBC((uint64_t)v144);
    sub_24A63CCC0((uint64_t)v8, v128, &qword_257948820);
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_257948870, &qword_257948850, MEMORY[0x24BDF43B0]);
    sub_24A63CFF0(&qword_257948878, &qword_257948820, MEMORY[0x24BDF5428]);
    v105 = v129;
    sub_24A77AB28();
    v106 = (uint64_t)v8;
    v36 = (uint64_t)v105;
    sub_24A63CD04(v106, &qword_257948820);
    sub_24A63CD04(v73, &qword_257948840);
    sub_24A670BBC((uint64_t)&v155);
    v34 = v109;
  }
  sub_24A63F6C4(v36, a4, &qword_257948858);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(a4, 0, 1, v112);
}

void sub_24A66F6C0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v11[1] = a1;
  sub_24A778848();
  v9 = sub_24A778854();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_24A779814();
  sub_24A63CD04((uint64_t)v8, &qword_257948898);
  if (v11[0])
  {
    v10 = v11[0];
    a4();

  }
}

void sub_24A66F7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void (*v21)(void *);

  v20 = a7;
  v21 = a6;
  v7 = sub_24A77A018();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778848();
  v14 = sub_24A778854();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  v15 = (void *)sub_24A779184();
  sub_24A63CD04((uint64_t)v13, &qword_257948898);
  if (v15)
  {
    v21(v15);

  }
  else
  {
    v16 = v7;
    sub_24A779A24();
    v17 = sub_24A77A00C();
    v18 = sub_24A77BC5C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_24A635000, v17, v18, "Unable to start workout for managed configuration, disambiguated workout configuration was nil", v19, 2u);
      MEMORY[0x24BD1A2B4](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  }
}

double sub_24A66F990@<D0>(_OWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  double result;
  __int128 v19;
  _OWORD v20[10];
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t KeyPath;
  char v26;

  v2 = (void *)sub_24A779130();
  v3 = (void *)sub_24A77BD94();

  v4 = objc_msgSend(v3, sel_localizedName);
  v5 = sub_24A77B9B0();
  v7 = v6;

  *(_QWORD *)&v20[0] = v5;
  *((_QWORD *)&v20[0] + 1) = v7;
  sub_24A645928();
  v8 = sub_24A77AFD8();
  v10 = v9;
  v12 = v11 & 1;
  v21 = v8;
  v22 = v9;
  v23 = v11 & 1;
  v24 = v13;
  KeyPath = swift_getKeyPath();
  v26 = 1;
  sub_24A77B668();
  sub_24A6421A8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v20, 0.0, 1, 0.0, 1);

  sub_24A64596C(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  v14 = v20[7];
  a1[6] = v20[6];
  a1[7] = v14;
  v15 = v20[9];
  a1[8] = v20[8];
  a1[9] = v15;
  v16 = v20[3];
  a1[2] = v20[2];
  a1[3] = v16;
  v17 = v20[5];
  a1[4] = v20[4];
  a1[5] = v17;
  result = *(double *)v20;
  v19 = v20[1];
  *a1 = v20[0];
  a1[1] = v19;
  return result;
}

uint64_t sub_24A66FB1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A66E8D0(*(void **)v1, *(void **)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_24A66FB28()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257948678;
  if (!qword_257948678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948638);
    v2 = sub_24A63CFF0(&qword_257948680, &qword_257948688, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257948678);
  }
  return result;
}

uint64_t sub_24A66FBAC()
{
  return sub_24A77A870();
}

uint64_t sub_24A66FBCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487F0);
  MEMORY[0x24BDAC7A8](v2);
  sub_24A63CCC0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2579487F0);
  return sub_24A77A87C();
}

uint64_t sub_24A66FC4C()
{
  return sub_24A77A6FC();
}

uint64_t sub_24A66FC6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_24A77A3C0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return MEMORY[0x24BD17D1C](v4);
}

uint64_t sub_24A66FCF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A84C();
  *a1 = result;
  return result;
}

uint64_t sub_24A66FD1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A84C();
  *a1 = result;
  return result;
}

uint64_t sub_24A66FD44()
{
  swift_retain();
  return sub_24A77A858();
}

uint64_t sub_24A66FD6C()
{
  swift_retain();
  return sub_24A77A858();
}

uint64_t sub_24A66FD9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A8A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24A66FDC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A8A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24A66FDF4()
{
  return sub_24A77A8AC();
}

uint64_t sub_24A66FE18()
{
  return sub_24A77A8AC();
}

_BYTE *sub_24A66FE3C(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_24A66FE50()
{
  return swift_deallocObject();
}

_BYTE *sub_24A66FE60(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_24A66FE78()
{
  unint64_t result;

  result = qword_2579486A8;
  if (!qword_2579486A8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A786AFC, &type metadata for WorkoutUIFeatures);
    atomic_store(result, (unint64_t *)&qword_2579486A8);
  }
  return result;
}

void *sub_24A66FEBC(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return (void *)sub_24A66FED4(a1);
  return a1;
}

uint64_t sub_24A66FED4(void *a1)
{
  id v1;

  v1 = a1;
  return swift_retain();
}

void *sub_24A66FEF8(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return (void *)sub_24A66FF10(a1);
  return a1;
}

uint64_t sub_24A66FF10(void *a1)
{

  return swift_release();
}

uint64_t sub_24A66FF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for WorkoutConfigurationViewIOS(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  v9 = v8 + v6[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_24A77A4E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24A670050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for WorkoutConfigurationViewIOS(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return (*(uint64_t (**)(void))(v4 + *(int *)(v5 + 52) + ((v6 + 32) & ~v6)))();
}

double sub_24A670098@<D0>(uint64_t a1@<X8>)
{
  return sub_24A66E4FC(a1);
}

unint64_t sub_24A6700A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579486C8;
  if (!qword_2579486C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579486C0);
    v2[0] = sub_24A670124();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579486C8);
  }
  return result;
}

unint64_t sub_24A670124()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579486D0;
  if (!qword_2579486D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579486D8);
    v2[0] = sub_24A670190();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579486D0);
  }
  return result;
}

unint64_t sub_24A670190()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2579486E0;
  if (!qword_2579486E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579486E8);
    v2 = sub_24A63CFF0(&qword_2579486F0, &qword_2579486F8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2579486E0);
  }
  return result;
}

unint64_t sub_24A670214()
{
  unint64_t result;

  result = qword_257948700;
  if (!qword_257948700)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7808A0, &type metadata for DisambiguateConfigurationView);
    atomic_store(result, (unint64_t *)&qword_257948700);
  }
  return result;
}

unint64_t sub_24A670258()
{
  unint64_t result;

  result = qword_257948708;
  if (!qword_257948708)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A785584, &type metadata for AddToWatchButton);
    atomic_store(result, (unint64_t *)&qword_257948708);
  }
  return result;
}

unint64_t sub_24A6702A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948730;
  if (!qword_257948730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948738);
    v2[0] = sub_24A670330(&qword_257948740, &qword_257948748, &qword_257948750, &qword_257948758);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948730);
  }
  return result;
}

uint64_t sub_24A670330(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_24A63CFF0(a3, a4, MEMORY[0x24BDF4700]);
    v9[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A6703B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_257948760;
  if (!qword_257948760)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948598);
    v2[0] = sub_24A67047C(&qword_257948728, &qword_257948720, (uint64_t (*)(void))sub_24A6702A4);
    v2[1] = MEMORY[0x24BDF5138];
    v2[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4AF8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948760);
  }
  return result;
}

unint64_t sub_24A670438()
{
  unint64_t result;

  result = qword_257948768;
  if (!qword_257948768)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for ListRowBackgroundViewModifier, &type metadata for ListRowBackgroundViewModifier);
    atomic_store(result, (unint64_t *)&qword_257948768);
  }
  return result;
}

uint64_t sub_24A67047C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5578], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A6704E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948778;
  if (!qword_257948778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948718);
    v2[0] = sub_24A670564();
    v2[1] = sub_24A63CFF0(&qword_257948160, &qword_257948130, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948778);
  }
  return result;
}

unint64_t sub_24A670564()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948780;
  if (!qword_257948780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948788);
    v2[0] = sub_24A6705E8();
    v2[1] = sub_24A63CFF0(&qword_257946E40, &qword_257946E48, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948780);
  }
  return result;
}

unint64_t sub_24A6705E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948790;
  if (!qword_257948790)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948798);
    v2[0] = sub_24A670744((unint64_t *)&qword_2579487A0, &qword_2579487A8, MEMORY[0x24BDEEC40]);
    v2[1] = sub_24A63CFF0(&qword_2579487B0, &qword_2579487B8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948790);
  }
  return result;
}

uint64_t sub_24A670684(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24A6706C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24A6706DC(a1, a2);
  return a1;
}

uint64_t sub_24A6706DC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24A670720()
{
  return sub_24A77A870();
}

uint64_t sub_24A670744(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x24BDF40E8];
    v7[1] = a3;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24BD1A14C](a1, v6, a5);
}

uint64_t initializeBufferWithCopyOfBuffer for DisambiguateConfigurationView(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for DisambiguateConfigurationView(id *a1)
{

  return swift_release();
}

uint64_t assignWithCopy for DisambiguateConfigurationView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DisambiguateConfigurationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DisambiguateConfigurationView()
{
  return &type metadata for DisambiguateConfigurationView;
}

uint64_t sub_24A6708E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _QWORD v8[4];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948598);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485A0);
  swift_getTupleTypeMetadata2();
  sub_24A77B6A4();
  sub_24A77BDE8();
  swift_getTupleTypeMetadata2();
  v0 = sub_24A77B6A4();
  v1 = MEMORY[0x24BDF5428];
  v2 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v0);
  v8[2] = MEMORY[0x24BEE4088];
  v8[3] = v2;
  v8[0] = sub_24A77AEDC();
  v8[1] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1A30], v8[0]);
  MEMORY[0x24BD1A194](255, v8, MEMORY[0x24BDF31A0], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485A8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485B0);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485C0);
  swift_getTupleTypeMetadata3();
  v3 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v1, v3);
  v4 = sub_24A77B530();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579485C8);
  v5 = sub_24A77A5F4();
  v7[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v4);
  v7[1] = sub_24A63CFF0(&qword_2579485D0, &qword_2579485C8, MEMORY[0x24BDF0B90]);
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v5, v7);
}

uint64_t sub_24A670B28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A670B38(uint64_t a1)
{
  sub_24A6436C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24A670BBC(uint64_t a1)
{
  sub_24A64596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

void sub_24A670C44()
{
  sub_24A670D50(0, 1, 1, 0);
}

double sub_24A670C58@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A66F990(a1);
}

void sub_24A670C88()
{
  sub_24A670D50(0, 1, 2, 0);
}

double sub_24A670C9C@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A66F990(a1);
}

void sub_24A670CCC()
{
  sub_24A670D50(2, 0, 0, 1);
}

double sub_24A670CE0@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A66F990(a1);
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_24A670D3C()
{
  sub_24A670D50(3, 0, 0, 1);
}

void sub_24A670D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_24A66F7C4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(void *))(v4 + 24), *(_QWORD *)(v4 + 32));
}

double sub_24A670D5C@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A66F990(a1);
}

uint64_t sub_24A670D88()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_24A670DBC()
{
  uint64_t v0;

  sub_24A66F6C0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

unint64_t sub_24A670DCC()
{
  unint64_t result;

  result = qword_257948890;
  if (!qword_257948890)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7855E4, &type metadata for AddToWatchLabel);
    atomic_store(result, (unint64_t *)&qword_257948890);
  }
  return result;
}

uint64_t sub_24A670E10()
{
  return sub_24A67047C(&qword_2579488A0, &qword_2579488A8, (uint64_t (*)(void))sub_24A670E3C);
}

unint64_t sub_24A670E3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579488B0;
  if (!qword_2579488B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948858);
    v2[0] = sub_24A63CFF0(&qword_257948870, &qword_257948850, MEMORY[0x24BDF43B0]);
    v2[1] = sub_24A63CFF0(&qword_257948878, &qword_257948820, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579488B0);
  }
  return result;
}

uint64_t DistanceMetricText.init(distance:formattingManager:distanceType:distanceUnit:description:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  *(double *)a7 = a8;
  *(_QWORD *)(a7 + 8) = result;
  *(_QWORD *)(a7 + 16) = a2;
  *(_QWORD *)(a7 + 24) = a3;
  *(_BYTE *)(a7 + 32) = a4 & 1;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

id DistanceMetricText.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  id result;
  void *v7;
  id v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int16 v13;
  char v14;

  v3 = *(void **)(v1 + 8);
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    sub_24A6459E8();
    sub_24A6710D8();
    swift_bridgeObjectRetain();
    v4 = v3;
LABEL_7:
    result = (id)sub_24A77AB28();
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 50) = v14;
    return result;
  }
  v5 = *(_QWORD *)(v1 + 24);
  result = objc_msgSend(v3, sel_localizedStringWithDistanceInMeters_distanceUnit_unitStyle_decimalPrecision_roundingMode_decimalTrimmingMode_, v5, 0, objc_msgSend((id)objc_opt_self(), sel_defaultPrecisionForDistanceUnit_, v5), 2, 1, *(double *)v1);
  if (result)
  {
    v7 = result;
    sub_24A77B9B0();

    v8 = objc_msgSend(v3, sel_localizedShortUnitStringForDistanceUnit_textCase_, v5, 2);
    if (v8)
    {
      v9 = v8;
      sub_24A77B9B0();

    }
    sub_24A6459E8();
    sub_24A6710D8();
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_24A6710D8()
{
  unint64_t result;

  result = qword_2579488B8;
  if (!qword_2579488B8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A787F4C, &type metadata for NaturalDistanceMetricText);
    atomic_store(result, (unint64_t *)&qword_2579488B8);
  }
  return result;
}

uint64_t sub_24A67111C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DistanceMetricText(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DistanceMetricText(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DistanceMetricText(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DistanceMetricText(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DistanceMetricText()
{
  return &type metadata for DistanceMetricText;
}

unint64_t sub_24A671294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579488C0;
  if (!qword_2579488C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579488C8);
    v2[0] = sub_24A6459E8();
    v2[1] = sub_24A6710D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579488C0);
  }
  return result;
}

void sub_24A6713C4(CGContext *a1, double a2, double a3, double a4, double a5, MKZoomScale a6)
{
  uint64_t v6;
  double v13;
  double x;
  double y;
  double width;
  double height;
  os_unfair_lock_s *v18;
  os_unfair_lock_s *v19;
  os_unfair_lock_s *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  MKMapPoint v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  CGColor *v32;
  const CGPath *path;
  unint64_t v34;
  CLLocationCoordinate2D v35;
  MKMapRect v36;
  MKMapRect v37;

  v13 = MKRoadWidthAtZoomScale(a6);
  v36.origin.x = a2;
  v36.origin.y = a3;
  v36.size.width = a4;
  v36.size.height = a5;
  v37 = MKMapRectInset(v36, -v13, -v13);
  x = v37.origin.x;
  y = v37.origin.y;
  width = v37.size.width;
  height = v37.size.height;
  v18 = *(os_unfair_lock_s **)(*(_QWORD *)(v6 + OBJC_IVAR____TtC9WorkoutUI26WKUIBreadcrumbPathRenderer_crumbs)
                             + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_protectedBreadcrumbData);
  v19 = v18 + 4;
  v20 = v18 + 14;
  os_unfair_lock_lock(v18 + 14);
  sub_24A674ADC(v19, &v34);
  os_unfair_lock_unlock(v20);
  v21 = v34;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_24A77C028();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v22 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v22)
    goto LABEL_13;
LABEL_3:
  v34 = MEMORY[0x24BEE4AF8];
  sub_24A671C7C(0, v22 & ~(v22 >> 63), 0);
  if (v22 < 0)
  {
    __break(1u);
    return;
  }
  v23 = 0;
  v24 = v34;
  do
  {
    if ((v21 & 0xC000000000000001) != 0)
      v25 = (id)MEMORY[0x24BD19588](v23, v21);
    else
      v25 = *(id *)(v21 + 8 * v23 + 32);
    v26 = v25;
    objc_msgSend(v25, sel_coordinate);
    v27 = MKMapPointForCoordinate(v35);

    v34 = v24;
    v29 = *(_QWORD *)(v24 + 16);
    v28 = *(_QWORD *)(v24 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_24A671C7C(v28 > 1, v29 + 1, 1);
      v24 = v34;
    }
    ++v23;
    *(_QWORD *)(v24 + 16) = v29 + 1;
    *(MKMapPoint *)(v24 + 16 * v29 + 32) = v27;
  }
  while (v22 != v23);
  swift_bridgeObjectRelease();
LABEL_14:
  path = sub_24A671790(v24, x, y, width, height, a6);
  swift_bridgeObjectRelease();
  if (path)
  {
    CGContextAddPath(a1, path);
    v30 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
    v31 = objc_msgSend(v30, sel_colorWithAlphaComponent_, 0.5);

    v32 = (CGColor *)objc_msgSend(v31, sel_CGColor);
    CGContextSetStrokeColorWithColor(a1, v32);

    CGContextSetLineJoin(a1, kCGLineJoinRound);
    CGContextSetLineCap(a1, kCGLineCapRound);
    CGContextSetLineWidth(a1, v13);
    CGContextStrokePath(a1);

  }
}

CGMutablePathRef sub_24A671790(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  double v7;
  unint64_t v8;
  CGMutablePathRef Mutable;
  char *v10;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  unint64_t v20;
  char v21;
  char **v22;
  unint64_t v23;
  uint64_t v24;
  double *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  unint64_t v30;
  double v31;
  double v32;
  BOOL v33;
  double v34;
  char *v36;
  double v37;
  double v39;
  MKMapRect v40;

  v8 = *(_QWORD *)(a1 + 16);
  if (v8 < 2)
    return 0;
  v10 = v6;
  v15 = a1 + 40;
  v16 = *(double *)(a1 + 40);
  v17 = *(double *)(a1 + 32);
  v18 = a1 + 32 + 16 * v8;
  v37 = *(double *)(v18 - 16);
  v39 = *(double *)(v18 - 8);
  Mutable = CGPathCreateMutable();
  v19 = 5.0 / a6 * (5.0 / a6);
  swift_bridgeObjectRetain();
  v20 = 0;
  v21 = 1;
  v22 = &selRef_contentFrameForPage_;
LABEL_4:
  if (v20 <= v8)
    v23 = v8;
  else
    v23 = v20;
  v24 = -(uint64_t)v23;
  v25 = (double *)(v15 + 16 * v20++);
  do
  {
    if (v24 + v20 == 1)
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v20 != 1)
    {
      v7 = *(v25 - 1);
      a6 = *v25;
      if (v19 <= (v7 - v17) * (v7 - v17) + (*v25 - v16) * (*v25 - v16))
      {
        v26 = *(v25 - 1);
        if (v7 > v17)
        {
          v26 = v17;
          if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
          {
            if ((*(_QWORD *)&v17 & 0xFFFFFFFFFFFFFLL) != 0)
              v26 = *(v25 - 1);
            else
              v26 = v17;
          }
        }
        v27 = *v25;
        if (a6 > v16)
        {
          v27 = v16;
          if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
          {
            if ((*(_QWORD *)&v16 & 0xFFFFFFFFFFFFFLL) != 0)
              v27 = *v25;
            else
              v27 = v16;
          }
        }
        v36 = v10;
        v28 = *(v25 - 1);
        if (v17 >= v7)
        {
          v28 = v17;
          if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
          {
            if ((*(_QWORD *)&v17 & 0xFFFFFFFFFFFFFLL) != 0)
              v28 = *(v25 - 1);
            else
              v28 = v17;
          }
        }
        v10 = (char *)v22;
        v29 = *v25;
        if (v16 >= a6)
        {
          v29 = v16;
          if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
          {
            if ((*(_QWORD *)&v16 & 0xFFFFFFFFFFFFFLL) != 0)
              v29 = *v25;
            else
              v29 = v16;
          }
        }
        v30 = v20 - v8;
        v31 = v28 - v26;
        v32 = v29 - v27;
        v40.origin.x = a2;
        v40.origin.y = a3;
        v40.size.width = a4;
        v40.size.height = a5;
        v33 = MKMapRectIntersectsRect(v40, *(MKMapRect *)&v26);
        if (v33)
        {
          if ((v21 & 1) != 0)
          {
            objc_msgSend(v36, v10 + 744, v17, v16);
            sub_24A77BC8C();
          }
          objc_msgSend(v36, v10 + 744, v7, a6);
          sub_24A77BCA4();
          if (!v30)
          {
LABEL_45:
            swift_bridgeObjectRelease();
            v34 = v37;
            v22 = (char **)v10;
            v10 = v36;
            if (sub_24A67294C(v37, v39, v7, a6, a2, a3, a4, a5))
              goto LABEL_42;
            return Mutable;
          }
        }
        else if (!v30)
        {
          swift_bridgeObjectRelease();
          v34 = v37;
          v22 = (char **)v10;
          v10 = v36;
          if (sub_24A67294C(v37, v39, v7, a6, a2, a3, a4, a5))
          {
LABEL_41:
            objc_msgSend(v10, v22[279], v7, a6);
            sub_24A77BC8C();
            goto LABEL_42;
          }
          return Mutable;
        }
        v21 = !v33;
        v16 = a6;
        v17 = v7;
        v22 = (char **)v10;
        v10 = v36;
        goto LABEL_4;
      }
    }
    ++v20;
    v25 += 2;
  }
  while (v20 - v8 != 1);
  swift_bridgeObjectRelease();
  v34 = v37;
  if (sub_24A67294C(v37, v39, v17, v16, a2, a3, a4, a5))
  {
    a6 = v16;
    v7 = v17;
    if ((v21 & 1) != 0)
      goto LABEL_41;
LABEL_42:
    objc_msgSend(v10, v22[279], v34, v39);
    sub_24A77BCA4();
  }
  return Mutable;
}

id WKUIBreadcrumbPathRenderer.__allocating_init(overlay:)(uint64_t a1)
{
  objc_class *v1;
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(v1), sel_initWithOverlay_, a1);
  swift_unknownObjectRelease();
  return v2;
}

void WKUIBreadcrumbPathRenderer.init(overlay:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WKUIBreadcrumbPathRenderer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WKUIBreadcrumbPathRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A671C44(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24A671E54(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24A671C60(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24A671FB0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24A671C7C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24A67214C(a1, a2, a3, *v3, &qword_257948938);
  *v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for WKUIBreadcrumbPathRenderer()
{
  return objc_opt_self();
}

uint64_t method lookup function for WKUIBreadcrumbPathRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_24A671CCC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24A67214C(a1, a2, a3, *v3, &qword_257948900);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24A671CF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24A67258C(a1, a2, a3, (_QWORD *)*v3, &qword_257948920, (uint64_t (*)(_QWORD))MEMORY[0x24BEC5B00]);
  *v3 = result;
  return result;
}

uint64_t sub_24A671D1C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24A67276C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_2544D6280, &qword_2544D6140);
  *v3 = result;
  return result;
}

uint64_t sub_24A671D48(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24A67214C(a1, a2, a3, *v3, &qword_257948930);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24A671D6C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24A67258C(a1, a2, a3, (_QWORD *)*v3, &qword_257948928, (uint64_t (*)(_QWORD))type metadata accessor for PowerZonesBarChartElement);
  *v3 = result;
  return result;
}

uint64_t sub_24A671D98(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24A6722A4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24A671DB4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24A67258C(a1, a2, a3, (_QWORD *)*v3, &qword_257947450, type metadata accessor for TrainingLoadViewModel);
  *v3 = result;
  return result;
}

uint64_t sub_24A671DE0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24A672420(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24A671DFC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24A67258C(a1, a2, a3, (_QWORD *)*v3, &qword_257947458, (uint64_t (*)(_QWORD))MEMORY[0x24BE890D0]);
  *v3 = result;
  return result;
}

uint64_t sub_24A671E28(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24A67276C(a1, a2, a3, (_QWORD *)*v3, &qword_257948910, &qword_257948918);
  *v3 = result;
  return result;
}

uint64_t sub_24A671E54(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946E50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A671FB0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948940);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948948);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A672138(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24A67258C(a1, a2, a3, a4, &qword_257948920, (uint64_t (*)(_QWORD))MEMORY[0x24BEC5B00]);
}

uint64_t sub_24A67214C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A6722A4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947460);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A67240C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24A67258C(a1, a2, a3, a4, &qword_257947450, type metadata accessor for TrainingLoadViewModel);
}

uint64_t sub_24A672420(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948908);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A67258C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t sub_24A67276C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

BOOL sub_24A67294C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v12;
  double v13;
  double v14;
  double v15;
  MKMapRect v17;

  if ((*(_QWORD *)&a3 & 0xFFFFFFFFFFFFFLL) != 0)
    v12 = a1;
  else
    v12 = a3;
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) != 0)
    v12 = a3;
  if (a1 <= a3)
    v12 = a1;
  v13 = a2;
  if (a2 > a4)
  {
    if ((*(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL) != 0)
      v13 = a2;
    else
      v13 = a4;
    if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) != 0)
      v13 = a4;
    if (a3 < a1)
    {
LABEL_10:
      if (a4 < a2)
        goto LABEL_15;
      goto LABEL_11;
    }
  }
  else if (a3 < a1)
  {
    goto LABEL_10;
  }
  if ((*(_QWORD *)&a3 & 0xFFFFFFFFFFFFFLL) == 0)
    a1 = a3;
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) != 0)
    a1 = a3;
  if (a4 >= a2)
  {
LABEL_11:
    if ((*(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL) == 0)
      a2 = a4;
    if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) != 0)
      a2 = a4;
  }
LABEL_15:
  v14 = a1 - v12;
  v15 = a2 - v13;
  v17.origin.x = a5;
  v17.origin.y = a6;
  v17.size.width = a7;
  v17.size.height = a8;
  return MKMapRectIntersectsRect(v17, *(MKMapRect *)&v12);
}

void sub_24A672A1C()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948950 = v0;
}

double static IntervalPlatterConstants.cornerSize.getter()
{
  return sub_24A672D60(&qword_2579467D8, (uint64_t)&qword_257948950);
}

void sub_24A672A70()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948958 = v0;
}

double static IntervalPlatterConstants.previewFontSize.getter()
{
  return sub_24A672D60(&qword_2579467E0, (uint64_t)&qword_257948958);
}

void sub_24A672AC4()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948960 = v0;
}

double static IntervalPlatterConstants.previewWidth.getter()
{
  return sub_24A672D60(&qword_2579467E8, (uint64_t)&qword_257948960);
}

double static IntervalPlatterConstants.previewPaddingLeading.getter()
{
  return 3.0;
}

double static IntervalPlatterConstants.previewMaximumLineHeight.getter()
{
  return 10.5;
}

double sub_24A672B28()
{
  double result;

  if (qword_2579467E0 != -1)
    swift_once();
  result = *(double *)&qword_257948958 + -10.5 + *(double *)&qword_257948958 + -10.5;
  *(double *)&qword_257948968 = result;
  return result;
}

double static IntervalPlatterConstants.previewPaddingFontOffset.getter()
{
  return sub_24A672D60(&qword_2579467F0, (uint64_t)&qword_257948968);
}

void sub_24A672B98()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948970 = v0;
}

double static IntervalPlatterConstants.stepViewMaxHeight.getter()
{
  return sub_24A672D60(&qword_2579467F8, (uint64_t)&qword_257948970);
}

void sub_24A672C00()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948978 = v0;
}

double static IntervalPlatterConstants.goalIconFontSize.getter()
{
  return sub_24A672D60(&qword_257946800, (uint64_t)&qword_257948978);
}

void sub_24A672C5C()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948980 = v0;
}

double static IntervalSecondPlatterConstants.cornerSize.getter()
{
  return sub_24A672D60(&qword_257946808, (uint64_t)&qword_257948980);
}

void sub_24A672CB0()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948988 = v0;
}

double static IntervalSecondPlatterConstants.stepNameFontSize.getter()
{
  return sub_24A672D60(&qword_257946810, (uint64_t)&qword_257948988);
}

void sub_24A672D0C()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257948990 = v0;
}

double static IntervalSecondPlatterConstants.stepDetailFontSize.getter()
{
  return sub_24A672D60(&qword_257946818, (uint64_t)&qword_257948990);
}

double sub_24A672D60(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

double static IntervalSecondPlatterConstants.verticalSpacing.getter()
{
  return 0.0;
}

ValueMetadata *type metadata accessor for IntervalPlatterConstants()
{
  return &type metadata for IntervalPlatterConstants;
}

ValueMetadata *type metadata accessor for IntervalSecondPlatterConstants()
{
  return &type metadata for IntervalSecondPlatterConstants;
}

uint64_t View.cornerRadius(_:corners:)()
{
  sub_24A673070();
  return sub_24A77B2E4();
}

double sub_24A672E24@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  double *v5;
  id v7;
  id v8;
  double result;
  __int128 v10;
  __int128 v11;
  char v12;

  v7 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, *((_QWORD *)v5 + 1), a2, a3, a4, a5, *v5, *v5);
  v8 = objc_msgSend(v7, sel_CGPath);
  sub_24A77AF24();

  result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v11;
  *(_BYTE *)(a1 + 32) = v12;
  return result;
}

uint64_t sub_24A672EF4()
{
  return sub_24A77B434();
}

void (*sub_24A672F0C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_24A77A378();
  return sub_24A672F68;
}

void sub_24A672F68(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_24A672F98()
{
  sub_24A673070();
  return sub_24A77B470();
}

uint64_t sub_24A672FE8()
{
  sub_24A673070();
  return sub_24A77B440();
}

uint64_t sub_24A673038()
{
  sub_24A673070();
  return sub_24A77B458();
}

unint64_t sub_24A673070()
{
  unint64_t result;

  result = qword_257948998;
  if (!qword_257948998)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A780AA0, &type metadata for RoundedCorner);
    atomic_store(result, (unint64_t *)&qword_257948998);
  }
  return result;
}

uint64_t sub_24A6730B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948458);
  v2 = sub_24A77A5F4();
  v4[0] = v1;
  v4[1] = sub_24A63CFF0(&qword_257948450, &qword_257948458, MEMORY[0x24BDEB950]);
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

ValueMetadata *type metadata accessor for RoundedCorner()
{
  return &type metadata for RoundedCorner;
}

uint64_t sub_24A673144()
{
  return sub_24A63CFF0(&qword_2579489A0, &qword_2579489A8, MEMORY[0x24BDEB358]);
}

unint64_t sub_24A673174()
{
  unint64_t result;

  result = qword_2579489B0;
  if (!qword_2579489B0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_2579489B0);
  }
  return result;
}

unint64_t sub_24A6731BC()
{
  unint64_t result;

  result = qword_2579489B8;
  if (!qword_2579489B8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A780A50, &type metadata for RoundedCorner);
    atomic_store(result, (unint64_t *)&qword_2579489B8);
  }
  return result;
}

unint64_t sub_24A673204()
{
  unint64_t result;

  result = qword_2579489C0;
  if (!qword_2579489C0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A780A00, &type metadata for RoundedCorner);
    atomic_store(result, (unint64_t *)&qword_2579489C0);
  }
  return result;
}

void *DownhillRunsStats.averageHeartRate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

id DownhillRunsStats.averageSpeed.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

void *DownhillRunsStats.maximumSpeed.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

id DownhillRunsStats.distance.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

double DownhillRunsStats.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void *DownhillRunsStats.elevationAscended.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void *DownhillRunsStats.elevationDescended.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

uint64_t DownhillRunsStats.runsCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t DownhillRunsStats.__allocating_init(downhillRuns:)(unint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DownhillRunsStats.init(downhillRuns:)(a1);
  return v2;
}

uint64_t DownhillRunsStats.init(downhillRuns:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  double v18;
  char *v19;
  char *v20;
  double *v21;
  double v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id *v30;
  id v31;
  id v32;
  id *v33;
  id v34;
  id v35;
  double v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  double v42;
  double v43;
  id v44;
  id v45;
  id v46;
  id v47;
  double v48;
  double v49;
  id v50;
  id v51;
  id v52;
  id v53;
  double v54;
  double v55;
  id v56;
  unint64_t v57;
  id v59;
  id v60;

  v2 = v1;
  v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_24A77C028();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v1 + 72) = v4;
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_meterUnit);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v6, 0.0);

  v9 = objc_msgSend(v5, sel_meterUnit);
  v10 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v9, 0.0);

  v11 = objc_msgSend(v5, sel_meterUnit);
  v12 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v11, 0.0);

  sub_24A779100();
  result = sub_24A7790F4();
  if (v3)
  {
    v14 = a1;
    swift_bridgeObjectRetain();
    v15 = sub_24A77C028();
    result = swift_bridgeObjectRelease();
    v59 = v10;
    v60 = v8;
    if (v15)
      goto LABEL_5;
LABEL_21:
    swift_bridgeObjectRelease();
    v23 = 0;
    v18 = 0.0;
    goto LABEL_22;
  }
  v14 = a1;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v59 = v10;
  v60 = v8;
  if (!v15)
    goto LABEL_21;
LABEL_5:
  if (v15 < 1)
  {
    __break(1u);
    return result;
  }
  v56 = v5;
  v16 = 0;
  v17 = 0;
  v57 = v14 & 0xC000000000000001;
  v18 = 0.0;
  do
  {
    if (v57)
      v19 = (char *)MEMORY[0x24BD19588](v17, v14);
    else
      v19 = (char *)*(id *)(v14 + 8 * v17 + 32);
    v20 = v19;
    v21 = (double *)&v19[OBJC_IVAR___WODownhillRun_workoutTime];
    swift_beginAccess();
    v22 = *v21;
    v23 = (id)HKQuantityMax();

    v24 = *(void **)&v20[OBJC_IVAR___WODownhillRun_elevationAscended];
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v60, sel__quantityByAddingQuantity_, v25);

      v60 = v26;
    }
    v27 = *(void **)&v20[OBJC_IVAR___WODownhillRun_elevationDescended];
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v59, sel__quantityByAddingQuantity_, v28);

      v59 = v29;
    }
    v30 = (id *)&v20[OBJC_IVAR___WODownhillRun_distance];
    swift_beginAccess();
    if (*v30)
    {
      v31 = *v30;
      v32 = objc_msgSend(v12, sel__quantityByAddingQuantity_, v31);

      v12 = v32;
    }
    v33 = (id *)&v20[OBJC_IVAR___WODownhillRun_averageHeartRate];
    swift_beginAccess();
    if (*v33)
    {
      v34 = *v33;
      v35 = objc_msgSend(v56, sel__countPerMinuteUnit);
      objc_msgSend(v34, sel_doubleValueForUnit_, v35);

      sub_24A7790D0();
    }
    ++v17;
    v18 = v18 + v22;

    v16 = v23;
    v14 = a1;
  }
  while (v15 != v17);
  swift_bridgeObjectRelease();
  v5 = v56;
LABEL_22:
  sub_24A7790E8();
  if (v36 == 0.0)
  {
    v37 = 0;
  }
  else
  {
    v38 = objc_msgSend(v5, sel__countPerMinuteUnit);
    sub_24A7790DC();
    v37 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v38);

  }
  *(_QWORD *)(v2 + 16) = v37;
  v39 = (void *)sub_24A77B980();
  v40 = objc_msgSend(v5, sel_unitFromString_, v39);

  v41 = objc_msgSend(v5, sel_meterUnit);
  objc_msgSend(v12, sel_doubleValueForUnit_, v41);
  v43 = v42;

  v44 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v40, v43 / v18);
  *(_QWORD *)(v2 + 24) = v44;
  *(_QWORD *)(v2 + 32) = v23;
  *(_QWORD *)(v2 + 40) = v12;
  *(double *)(v2 + 48) = v18;
  v45 = v23;
  v46 = v12;
  v47 = objc_msgSend(v5, sel_meterUnit);
  objc_msgSend(v60, sel_doubleValueForUnit_, v47);
  v49 = v48;

  if (v49 == 0.0)
  {
    v50 = 0;
  }
  else
  {
    v51 = v60;
    v50 = v60;
  }
  v52 = v59;
  *(_QWORD *)(v2 + 56) = v50;
  v53 = objc_msgSend(v5, sel_meterUnit);
  objc_msgSend(v59, sel_doubleValueForUnit_, v53);
  v55 = v54;

  swift_release();
  if (v55 == 0.0)
  {

    v52 = 0;
  }
  *(_QWORD *)(v2 + 64) = v52;
  return v2;
}

id *DownhillRunsStats.deinit()
{
  id *v0;

  return v0;
}

uint64_t DownhillRunsStats.__deallocating_deinit()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DownhillRunsStats()
{
  return objc_opt_self();
}

uint64_t method lookup function for DownhillRunsStats()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DownhillRunsStats.__allocating_init(downhillRuns:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t destroy for PacerPillView(uint64_t a1)
{
  return sub_24A63BEDC(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for PacerPillView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  char v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  sub_24A63BEC0(v4, v5);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for PacerPillView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  sub_24A63BEC0(v3, v4);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PacerPillView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PacerPillView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerPillView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerPillView()
{
  return &type metadata for PacerPillView;
}

uint64_t sub_24A673BE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A673BF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  double v22;
  _BYTE *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  double v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v68[12];
  int v69;
  _BYTE *v70;
  _BYTE *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  double v96;
  char v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _BYTE v106[24];
  _BYTE *v107;
  double v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;

  v93 = a1;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AA0);
  MEMORY[0x24BDAC7A8](v89);
  v85 = (uint64_t *)&v68[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AA8);
  v3 = MEMORY[0x24BDAC7A8](v94);
  v5 = &v68[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v86 = &v68[-v6];
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AB0);
  MEMORY[0x24BDAC7A8](v91);
  v92 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_24A77A6D8();
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AB8);
  MEMORY[0x24BDAC7A8](v82);
  v83 = &v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v79);
  v13 = (double *)&v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AC0);
  MEMORY[0x24BDAC7A8](v80);
  v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AC8);
  MEMORY[0x24BDAC7A8](v81);
  v17 = &v68[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AD0);
  v18 = MEMORY[0x24BDAC7A8](v90);
  v84 = &v68[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v68[-v20];
  v23 = *(_BYTE **)v1;
  v22 = *(double *)(v1 + 8);
  v24 = *(_BYTE *)(v1 + 16);
  v25 = *(_QWORD *)(v1 + 24);
  v26 = *(_QWORD *)(v1 + 32);
  v27 = *(_BYTE *)(v1 + 40);
  sub_24A63BEC0(v26, v27);
  sub_24A63E608(v26, v27, &v99);
  sub_24A63BEDC(v26, v27);
  v107 = v23;
  v108 = v22;
  v109 = v24;
  v110 = v25;
  if ((_BYTE)v99)
  {
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v99);
    v84 = (_BYTE *)v101;
    swift_release();
    v107 = v23;
    v108 = v22;
    v109 = v24;
    v110 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v99);
    swift_release();
    swift_release();
    v113 = v23;
    v114 = v22;
    LOBYTE(v115) = v24;
    v116 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v107);
    swift_release();
    swift_release();
    sub_24A77B668();
    sub_24A77A4B0();
    v28 = LOBYTE(v114);
    v29 = v115;
    v30 = v116;
    v82 = v117;
    v83 = v113;
    v81 = *((_QWORD *)&v117 + 1);
    sub_24A77A6CC();
    KeyPath = swift_getKeyPath();
    v32 = v88;
    v33 = v85;
    v34 = v10;
    v35 = v87;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v87 + 16))((_BYTE *)v85 + *(int *)(v89 + 28), v34, v88);
    *v33 = KeyPath;
    sub_24A63CCC0((uint64_t)v33, (uint64_t)&v5[*(int *)(v94 + 36)], &qword_257948AA0);
    *(_QWORD *)v5 = v84;
    *((_WORD *)v5 + 4) = 256;
    *((_QWORD *)v5 + 2) = v83;
    v5[24] = v28;
    *((_QWORD *)v5 + 4) = v29;
    v5[40] = v30;
    v36 = v81;
    *((_QWORD *)v5 + 6) = v82;
    *((_QWORD *)v5 + 7) = v36;
    swift_retain();
    sub_24A63CD04((uint64_t)v33, &qword_257948AA0);
    (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v34, v32);
    swift_release();
    v37 = &qword_257948AA8;
    v38 = v86;
    sub_24A63F6C4((uint64_t)v5, (uint64_t)v86, &qword_257948AA8);
    sub_24A63CCC0((uint64_t)v38, (uint64_t)v92, &qword_257948AA8);
    swift_storeEnumTagMultiPayload();
    sub_24A6746E4(&qword_257948AD8, &qword_257948AD0, (uint64_t (*)(void))sub_24A674570);
    sub_24A6746E4(&qword_257948B18, &qword_257948AA8, (uint64_t (*)(void))sub_24A674768);
    sub_24A77AB28();
    v39 = (uint64_t)v38;
  }
  else
  {
    PacerViewConfiguration.text.getter((uint64_t)&v99);
    v73 = *((_QWORD *)&v99 + 1);
    v74 = v100;
    v75 = v99;
    v85 = (uint64_t *)*((_QWORD *)&v101 + 1);
    v86 = (_BYTE *)v101;
    v78 = v102;
    v76 = *((_QWORD *)&v100 + 1);
    v77 = *((_QWORD *)&v102 + 1);
    v72 = v103;
    v69 = BYTE1(v103);
    v113 = v23;
    v114 = v22;
    LOBYTE(v115) = v24;
    v116 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v107);
    v40 = v112;
    swift_release();
    v41 = swift_getKeyPath();
    v70 = v10;
    v42 = v41;
    v107 = v23;
    v108 = v22;
    v109 = v24;
    v110 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v99);
    swift_release();
    swift_release();
    v113 = v23;
    v114 = v22;
    LOBYTE(v115) = v24;
    v116 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v107);
    v71 = v21;
    swift_release();
    swift_release();
    sub_24A77B668();
    sub_24A77A4B0();
    *(_QWORD *)&v99 = v75;
    *((_QWORD *)&v99 + 1) = v73;
    *(_QWORD *)&v100 = v74;
    *((_QWORD *)&v100 + 1) = v76;
    *(_QWORD *)&v101 = v86;
    *((_QWORD *)&v101 + 1) = v85;
    *(_QWORD *)&v102 = v78;
    *((_QWORD *)&v102 + 1) = v77;
    LOBYTE(v103) = v72;
    v43 = v69;
    BYTE1(v103) = v69;
    *((_QWORD *)&v103 + 1) = v42;
    *(_QWORD *)&v104 = v40;
    *((_QWORD *)&v104 + 1) = v113;
    LOBYTE(v105) = LOBYTE(v114);
    *((_QWORD *)&v105 + 1) = v115;
    v106[0] = v116;
    *(_OWORD *)&v106[8] = v117;
    v95 = v23;
    v96 = v22;
    v97 = v24;
    v98 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v107);
    v44 = v108;
    swift_release();
    swift_release();
    v45 = v44 * 0.5;
    v46 = (char *)v13 + *(int *)(v79 + 20);
    v47 = *MEMORY[0x24BDEEB68];
    v48 = sub_24A77A9D8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v46, v47, v48);
    *v13 = v45;
    v13[1] = v45;
    v95 = v23;
    v96 = v22;
    v97 = v24;
    v98 = v25;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v107);
    v49 = v111;
    swift_release();
    sub_24A655654((uint64_t)v13, (uint64_t)v15);
    v50 = v80;
    *(_QWORD *)&v15[*(int *)(v80 + 52)] = v49;
    *(_WORD *)&v15[*(int *)(v50 + 56)] = 256;
    sub_24A655698((uint64_t)v13);
    v51 = sub_24A77B668();
    v53 = v52;
    v54 = v83;
    sub_24A63CCC0((uint64_t)v15, (uint64_t)v83, &qword_257948AC0);
    v55 = (uint64_t *)&v54[*(int *)(v82 + 36)];
    *v55 = v51;
    v55[1] = v53;
    sub_24A63CCC0((uint64_t)v54, (uint64_t)&v17[*(int *)(v81 + 36)], &qword_257948AB8);
    v56 = *(_OWORD *)v106;
    *((_OWORD *)v17 + 6) = v105;
    *((_OWORD *)v17 + 7) = v56;
    *((_QWORD *)v17 + 16) = *(_QWORD *)&v106[16];
    v57 = v102;
    *((_OWORD *)v17 + 2) = v101;
    *((_OWORD *)v17 + 3) = v57;
    v58 = v104;
    *((_OWORD *)v17 + 4) = v103;
    *((_OWORD *)v17 + 5) = v58;
    v59 = v100;
    *(_OWORD *)v17 = v99;
    *((_OWORD *)v17 + 1) = v59;
    sub_24A6747F4((uint64_t)&v99);
    sub_24A63CD04((uint64_t)v54, &qword_257948AB8);
    sub_24A63CD04((uint64_t)v15, &qword_257948AC0);
    sub_24A6748C0(v75, v73, v74, v76, (uint64_t)v86, (uint64_t)v85, v78, v77, v72, v43);
    swift_release();
    swift_release();
    v60 = v70;
    sub_24A77A6CC();
    v61 = swift_getKeyPath();
    v62 = (uint64_t)v84;
    v63 = (uint64_t *)&v84[*(int *)(v90 + 36)];
    v64 = v88;
    v65 = v87;
    (*(void (**)(char *, _BYTE *, uint64_t))(v87 + 16))((char *)v63 + *(int *)(v89 + 28), v60, v88);
    *v63 = v61;
    sub_24A63CCC0((uint64_t)v17, v62, &qword_257948AC8);
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v60, v64);
    sub_24A63CD04((uint64_t)v17, &qword_257948AC8);
    v37 = &qword_257948AD0;
    v66 = (uint64_t)v71;
    sub_24A63F6C4(v62, (uint64_t)v71, &qword_257948AD0);
    sub_24A63CCC0(v66, (uint64_t)v92, &qword_257948AD0);
    swift_storeEnumTagMultiPayload();
    sub_24A6746E4(&qword_257948AD8, &qword_257948AD0, (uint64_t (*)(void))sub_24A674570);
    sub_24A6746E4(&qword_257948B18, &qword_257948AA8, (uint64_t (*)(void))sub_24A674768);
    sub_24A77AB28();
    v39 = v66;
  }
  return sub_24A63CD04(v39, v37);
}

unint64_t sub_24A674570()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948AE0;
  if (!qword_257948AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948AC8);
    v2[0] = sub_24A6745F4();
    v2[1] = sub_24A63CFF0(&qword_257948B08, &qword_257948AB8, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948AE0);
  }
  return result;
}

unint64_t sub_24A6745F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948AE8;
  if (!qword_257948AE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948AF0);
    v2[0] = sub_24A674660();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948AE8);
  }
  return result;
}

unint64_t sub_24A674660()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948AF8;
  if (!qword_257948AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948B00);
    v2[0] = sub_24A645E08();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948AF8);
  }
  return result;
}

uint64_t sub_24A6746E4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_24A63CFF0(&qword_257948B10, &qword_257948AA0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A674768()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948B20;
  if (!qword_257948B20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948B28);
    v2[0] = sub_24A63CFF0(&qword_257948B30, &qword_257948B38, MEMORY[0x24BDEB358]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948B20);
  }
  return result;
}

uint64_t sub_24A6747F4(uint64_t a1)
{
  sub_24A674860(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), *(_BYTE *)(a1 + 65));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24A674860(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if ((a10 & 1) != 0)
  {
    sub_24A6436C4(a1, a2, a3 & 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A6748C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if ((a10 & 1) != 0)
  {
    sub_24A64596C(a1, a2, a3 & 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_24A674924()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948B40;
  if (!qword_257948B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948B48);
    v2[0] = sub_24A6746E4(&qword_257948AD8, &qword_257948AD0, (uint64_t (*)(void))sub_24A674570);
    v2[1] = sub_24A6746E4(&qword_257948B18, &qword_257948AA8, (uint64_t (*)(void))sub_24A674768);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948B40);
  }
  return result;
}

double WKUIBreadcrumbPath.boundingMapRect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_boundingMapRect);
}

double sub_24A674A34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate;
  swift_beginAccess();
  return *(double *)v1;
}

__n128 sub_24A674ACC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_24A674ADC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

void sub_24A674AF8(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  os_unfair_lock_s *v4;
  double *v5;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  MKMapRect v35;
  MKMapRect v36;

  if (!(a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  v9 = sub_24A77C028();
  if (!v9)
    goto LABEL_23;
LABEL_3:
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
    {
      if ((v10 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v10 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v11 = *(id *)(a1 + 8 * v10 + 32);
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_28;
    }
  }
  v11 = (id)MEMORY[0x24BD19588](v10, a1);
LABEL_8:
  v33 = v11;
  v31 = a3;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v34 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_protectedBreadcrumbData);
  v4 = (os_unfair_lock_s *)(v12 + 56);
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 56));
  v29 = (double *)v12;
  v14 = *(_QWORD *)(v12 + 16);
  v5 = (double *)(v12 + 16);
  v13 = v14;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v4);
  if (!(v14 >> 62))
  {
    v30 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  v30 = sub_24A77C028();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRelease();
  objc_msgSend((id)a2, sel_bounds);
  v16 = v15;
  v32 = (void *)a2;
  objc_msgSend((id)a2, sel_visibleMapRect);
  v18 = v16 / v17;
  swift_bridgeObjectRetain();
  a2 = 4;
  do
  {
    if (v3)
      v19 = (id)MEMORY[0x24BD19588](a2 - 4, a1);
    else
      v19 = *(id *)(a1 + 8 * a2);
    v20 = v19;
    v21 = a2 - 3;
    if (__OFADD__(a2 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    a3 = &v28;
    os_unfair_lock_lock(v4);
    sub_24A674E08(v5, v34, v20);
    os_unfair_lock_unlock(v4);

    ++a2;
  }
  while (v21 != v9);
  swift_bridgeObjectRelease();
  v22 = MKRoadWidthAtZoomScale(v18);
  os_unfair_lock_lock(v4);
  v23 = v29[3];
  v24 = v29[4];
  v25 = v29[5];
  v26 = v29[6];
  os_unfair_lock_unlock(v4);
  v35.origin.x = v23;
  v35.origin.y = v24;
  v35.size.width = v25;
  v35.size.height = v26;
  v36 = MKMapRectInset(v35, -v22, -v22);
  if (v31)
    objc_msgSend(v31, sel_setNeedsDisplayInMapRect_, v36.origin.x, v36.origin.y, v36.size.width, v36.size.height);
  v27 = v32;
  if (!v30)
  {
    MEMORY[0x24BD19B10](objc_msgSend(v33, sel_coordinate, v36.origin.x, v36.origin.y, v36.size.width, v36.size.height));
    objc_msgSend(v27, sel_setRegion_animated_, 1);
    objc_msgSend(v27, sel_setUserTrackingMode_animated_, 1, 1);
  }

}

void sub_24A674E08(double *a1, uint64_t a2, void *a3)
{
  double v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  char **v11;
  double v12;
  CLLocationDegrees v13;
  double v14;
  CLLocationDegrees v15;
  double *v16;
  MKMapPoint v17;
  id v18;
  id v19;
  MKMapPoint v20;
  uint64_t v21;
  uint64_t v22;
  MKMapPoint v23;
  double x;
  double y;
  double width;
  double height;
  double v28;
  double v29;
  double v30;
  double v31;
  CLLocationCoordinate2D v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  double v54;
  CLLocationCoordinate2D v55;
  CLLocationCoordinate2D v56;
  MKMapRect v57;
  MKMapRect v58;
  MKMapRect v59;
  MKMapRect v60;
  MKMapRect v61;
  MKMapRect v62;
  MKMapRect v63;
  MKMapRect v64;
  MKMapRect v65;

  v6 = *a1;
  if (*(_QWORD *)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_24A77C028();
    if (v7)
    {
LABEL_3:
      v8 = v7 - 1;
      if (__OFSUB__(v7, 1))
      {
        __break(1u);
      }
      else if ((*(_QWORD *)&v6 & 0xC000000000000001) == 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v8 < *(_QWORD *)((*(_QWORD *)&v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v9 = *(id *)(*(_QWORD *)&v6 + 8 * v8 + 32);
LABEL_8:
          v10 = v9;
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        __break(1u);
        return;
      }
      v9 = (id)MEMORY[0x24BD19588](v8, *(_QWORD *)&v6);
      goto LABEL_8;
    }
  }
  else
  {
    v7 = *(_QWORD *)((*(_QWORD *)&v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v10 = 0;
LABEL_11:
  if (*(_QWORD *)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v50 = sub_24A77C028();
    swift_bridgeObjectRelease();
    v11 = &selRef_contentFrameForPage_;
    if (v50)
      goto LABEL_14;
    goto LABEL_13;
  }
  v11 = &selRef_contentFrameForPage_;
  if (!*(_QWORD *)((*(_QWORD *)a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    objc_msgSend(a3, v11[275]);
    v13 = v12;
    v15 = v14;
    v16 = (double *)(a2 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate);
    swift_beginAccess();
    *v16 = v13;
    v16[1] = v15;
    v55.latitude = v13;
    v55.longitude = v15;
    v17 = MKMapPointForCoordinate(v55);
    v57.size.width = MEMORY[0x24BD19B28](*v16) * 1000.0;
    v57.origin.x = v17.x;
    v57.origin.y = v17.y;
    v57.size.height = v57.size.width;
    *(MKMapRect *)(a1 + 1) = MKMapRectIntersection(v57, *MEMORY[0x24BDDAFF0]);
    v18 = a3;

    v10 = a3;
  }
LABEL_14:
  v19 = a3;
  MEMORY[0x24BD19114]();
  if (*(_QWORD *)((*(_QWORD *)a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)a1 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_24A77BB30();
  sub_24A77BB48();
  sub_24A77BB24();
  objc_msgSend(v19, v11[275]);
  v20 = MKMapPointForCoordinate(v56);
  if (v10)
  {
    objc_msgSend(v10, v11[275]);
  }
  else
  {
    v21 = 0;
    v22 = 0;
  }
  v23 = MKMapPointForCoordinate(*(CLLocationCoordinate2D *)&v21);
  v63.origin.x = v23.x;
  v63.origin.y = v23.y;
  v58.size.width = 0.0;
  v58.size.height = 0.0;
  v63.size.width = 0.0;
  v63.size.height = 0.0;
  v58.origin.x = v20.x;
  v58.origin.y = v20.y;
  v59 = MKMapRectUnion(v58, v63);
  x = v59.origin.x;
  y = v59.origin.y;
  width = v59.size.width;
  height = v59.size.height;
  v28 = a1[1];
  v29 = a1[2];
  v30 = a1[3];
  v31 = a1[4];
  v59.origin.x = v28;
  v59.origin.y = v29;
  v59.size.width = v30;
  v59.size.height = v31;
  v64.origin.x = x;
  v64.origin.y = y;
  v64.size.width = width;
  v64.size.height = height;
  if (MKMapRectContainsRect(v59, v64))
  {

  }
  else
  {
    v60.origin.x = v28;
    v60.origin.y = v29;
    v60.size.width = v30;
    v60.size.height = v31;
    v65.origin.x = x;
    v65.origin.y = y;
    v65.size.width = width;
    v65.size.height = height;
    v61 = MKMapRectUnion(v60, v65);
    v54 = v61.origin.x;
    v52 = v61.origin.y;
    v53 = v61.size.width;
    v51 = v61.size.height;
    v61.origin.x = x;
    v61.origin.y = y;
    v32 = MKCoordinateForMapPoint(v61.origin);
    v33 = MEMORY[0x24BD19B28](v32.latitude, v32.longitude);
    v34 = v33 * 1000.0;
    if (y >= v29)
      v35 = -0.0;
    else
      v35 = v33 * 1000.0;
    v36 = v51 + v35;
    if (y >= v29)
      v37 = 0.0;
    else
      v37 = v34;
    v38 = v52 - v37;
    if (v29 + v31 >= y + height)
      v39 = -0.0;
    else
      v39 = v34;
    v40 = v39 + v36;
    if (x >= v28)
      v41 = -0.0;
    else
      v41 = v34;
    v42 = v53 + v41;
    if (x >= v28)
      v43 = 0.0;
    else
      v43 = v34;
    v44 = v54 - v43;
    if (v28 + v30 >= x + width)
      v34 = -0.0;
    v45 = v34 + v42;
    v62 = MKMapRectIntersection(*(MKMapRect *)(&v38 - 1), *MEMORY[0x24BDDAFF0]);
    v46 = v62.origin.x;
    v47 = v62.origin.y;
    v48 = v62.size.width;
    v49 = v62.size.height;

    a1[1] = v46;
    a1[2] = v47;
    a1[3] = v48;
    a1[4] = v49;
  }
}

id WKUIBreadcrumbPath.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id WKUIBreadcrumbPath.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v1 = &v0[OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_boundingMapRect];
  v2 = *MEMORY[0x24BDDAFF0];
  v3 = *(_QWORD *)(MEMORY[0x24BDDAFF0] + 8);
  v4 = *(_QWORD *)(MEMORY[0x24BDDAFF0] + 16);
  v5 = *(_QWORD *)(MEMORY[0x24BDDAFF0] + 24);
  *(_QWORD *)v1 = *MEMORY[0x24BDDAFF0];
  *((_QWORD *)v1 + 1) = v3;
  *((_QWORD *)v1 + 2) = v4;
  *((_QWORD *)v1 + 3) = v5;
  v6 = &v0[OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_protectedBreadcrumbData;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948B68);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v8 + 24) = v2;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v4;
  *(_QWORD *)(v8 + 48) = v5;
  *(_QWORD *)&v0[v7] = v8;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for WKUIBreadcrumbPath();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for WKUIBreadcrumbPath()
{
  return objc_opt_self();
}

id WKUIBreadcrumbPath.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WKUIBreadcrumbPath();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

__n128 sub_24A6753BC@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate);
  swift_beginAccess();
  result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t sub_24A67540C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9WorkoutUI18WKUIBreadcrumbPath_coordinate);
  result = swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t method lookup function for WKUIBreadcrumbPath()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WKUIBreadcrumbPath.coordinate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t destroy for WKUIBreadcrumbPath.BreadcrumbData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WKUIBreadcrumbPath.BreadcrumbData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WKUIBreadcrumbPath.BreadcrumbData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WKUIBreadcrumbPath.BreadcrumbData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for WKUIBreadcrumbPath.BreadcrumbData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WKUIBreadcrumbPath.BreadcrumbData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKUIBreadcrumbPath.BreadcrumbData()
{
  return &type metadata for WKUIBreadcrumbPath.BreadcrumbData;
}

uint64_t CurrentElevationMetricView.init(elevation:gpsUnavailable:formattingManager:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a5 = a1;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_BYTE *)(a5 + 9) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  return result;
}

uint64_t sub_24A675698()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;
  id v5;
  uint64_t v6;
  _BYTE v8[24];

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = v1;
  sub_24A63BEC0(v2, v3);
  sub_24A63BEC0(v2, v3);
  sub_24A63E608(v2, v3, v8);
  sub_24A63BEDC(v2, v3);

  sub_24A63BEDC(v2, v3);
  if (v8[0] <= 8u && ((1 << v8[0]) & 0x181) != 0)
  {
    if (qword_2544D6160 == -1)
      goto LABEL_6;
    goto LABEL_7;
  }
  if (qword_2544D6160 != -1)
LABEL_7:
    swift_once();
LABEL_6:
  swift_beginAccess();
  v5 = (id)qword_2544D6158;
  v6 = sub_24A77856C();

  return v6;
}

id CurrentElevationMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  char v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  if ((*(_BYTE *)(v1 + 8) & 1) != 0 || (*(_BYTE *)(v1 + 9) & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v19 = (id)qword_2544D6158;
    v17 = 0xE000000000000000;
    v8 = sub_24A77856C();
    v18 = v20;

    v15 = 0;
    goto LABEL_10;
  }
  result = objc_msgSend(v4, sel_localizedStringWithDistanceInMeters_distanceType_unitStyle_, 5, 0, *(double *)v1);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = result;
  v8 = sub_24A77B9B0();
  v22 = v9;

  v10 = v4;
  sub_24A63BEC0(v3, v5);
  v11 = v10;
  sub_24A63BEC0(v3, v5);
  result = objc_msgSend(v11, sel_unitManager);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v12 = result;
  v13 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, 5);

  sub_24A63BEDC(v3, v5);
  result = objc_msgSend(v11, sel_localizedShortUnitStringForDistanceUnit_textCase_, v13, 2);
  if (result)
  {
    v14 = result;
    v15 = sub_24A77B9B0();
    v17 = v16;

    sub_24A63BEDC(v3, v5);
    v18 = v22;
LABEL_10:
    result = (id)sub_24A675698();
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v18;
    *(_QWORD *)(a1 + 16) = v15;
    *(_QWORD *)(a1 + 24) = v17;
    *(_QWORD *)(a1 + 32) = result;
    *(_QWORD *)(a1 + 40) = v21;
    *(_WORD *)(a1 + 48) = 0;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24A675AD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for CurrentElevationMetricView(uint64_t a1)
{

  return sub_24A63BEDC(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for CurrentElevationMetricView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  v5 = *(_BYTE *)(a2 + 32);
  v6 = v3;
  sub_24A63BEC0(v4, v5);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for CurrentElevationMetricView(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = a2;
  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  v5 = (void *)a2[2];
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  v8 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_24A63BEC0(v8, (char)v2);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_24A63BEDC(v9, v10);
  return a1;
}

uint64_t assignWithTake for CurrentElevationMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  sub_24A63BEDC(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentElevationMetricView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrentElevationMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrentElevationMetricView()
{
  return &type metadata for CurrentElevationMetricView;
}

uint64_t WorkoutNotificationFont.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v30 = a1;
  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948CC0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948CC8);
  MEMORY[0x24BDAC7A8](v31);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948CD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)v2;
  v16 = *(_BYTE *)(v2 + 8);
  v17 = *(_BYTE *)(v2 + 9);
  if (FIUICurrentLanguageRequiresTallScript())
  {
    v33 = v15;
    LOBYTE(v34) = v16;
    BYTE1(v34) = v17;
    v18 = sub_24A676024();
    KeyPath = swift_getKeyPath();
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948CD8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v14, v30, v20);
    v21 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    *v21 = KeyPath;
    v21[1] = v18;
    sub_24A676380((uint64_t)v14, (uint64_t)v11);
    swift_storeEnumTagMultiPayload();
    v22 = sub_24A6762E4();
    v33 = v12;
    v34 = v22;
    swift_getOpaqueTypeConformance2();
    sub_24A77AB28();
    return sub_24A63CD04((uint64_t)v14, &qword_257948CD0);
  }
  else
  {
    v33 = v15;
    LOBYTE(v34) = v16;
    BYTE1(v34) = v17;
    v24 = sub_24A676024();
    v25 = swift_getKeyPath();
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948CD8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v14, v30, v26);
    v27 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    *v27 = v25;
    v27[1] = v24;
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
    v28 = sub_24A6762E4();
    sub_24A77B1A0();
    sub_24A63CD04((uint64_t)v14, &qword_257948CD0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v11, v9, v3);
    swift_storeEnumTagMultiPayload();
    v33 = v12;
    v34 = v28;
    swift_getOpaqueTypeConformance2();
    sub_24A77AB28();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_24A676024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  char v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)v0;
  v5 = *(_BYTE *)(v0 + 8);
  v6 = *(unsigned __int8 *)(v0 + 9);
  sub_24A63BEC0(*(_QWORD *)v0, v5);
  sub_24A63E608(v4, v5, &v15);
  sub_24A63BEDC(v4, v5);
  if (v15 == 6)
    sub_24A77ADF8();
  else
    sub_24A77ADEC();
  sub_24A63BEC0(v4, v5);
  sub_24A63E608(v4, v5, &v14);
  sub_24A63BEDC(v4, v5);
  _s9WorkoutUI15MetricValueFontV13fontPointSize16workoutViewStyle12CoreGraphics7CGFloatVAA0ajK0O_tFZ_0(&v14);
  v7 = *MEMORY[0x24BDF1668];
  v8 = sub_24A77ADC8();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v3, v7, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
  sub_24A77AE1C();
  sub_24A63CD04((uint64_t)v3, &qword_257946FD0);
  v10 = sub_24A77AD5C();
  swift_release();
  if (v6)
  {
    v11 = sub_24A77AD68();
    swift_release();
    return v11;
  }
  return v10;
}

uint64_t static WorkoutNotificationFont.multilineTextView(with:lineLimit:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t result;

  sub_24A645928();
  swift_bridgeObjectRetain();
  v4 = sub_24A77AFD8();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  KeyPath = swift_getKeyPath();
  v12 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_WORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = 0x3FE0000000000000;
  *(_QWORD *)(a2 + 64) = result;
  *(_QWORD *)(a2 + 72) = a1;
  *(_BYTE *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_24A676298@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24A77A7E0();
  *a1 = v3;
  return result;
}

uint64_t sub_24A6762C0()
{
  return sub_24A77A7EC();
}

unint64_t sub_24A6762E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948CE0;
  if (!qword_257948CE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948CD0);
    v2[0] = sub_24A63CFF0(&qword_257948CE8, &qword_257948CD8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948CE0);
  }
  return result;
}

uint64_t sub_24A676380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6763D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24A77A7E0();
  *a1 = v3;
  return result;
}

uint64_t sub_24A6763F8()
{
  return sub_24A77A7EC();
}

uint64_t sub_24A676424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for WorkoutNotificationFont(uint64_t a1)
{
  return sub_24A63BEDC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s9WorkoutUI23WorkoutNotificationFontVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_24A63BEC0(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t assignWithCopy for WorkoutNotificationFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_24A63BEC0(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_24A63BEDC(v6, v7);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for WorkoutNotificationFont(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_24A63BEDC(v6, v7);
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutNotificationFont(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutNotificationFont(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationFont()
{
  return &type metadata for WorkoutNotificationFont;
}

unint64_t sub_24A6765F0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[4];

  result = qword_257948CF0;
  if (!qword_257948CF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948CF8);
    v2 = sub_24A6762E4();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948CD0);
    v3[3] = v2;
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257948CF0);
  }
  return result;
}

unint64_t sub_24A676680()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948D00;
  if (!qword_257948D00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948D08);
    v2[0] = sub_24A676704();
    v2[1] = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948D00);
  }
  return result;
}

unint64_t sub_24A676704()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948D10;
  if (!qword_257948D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948D18);
    v2[0] = sub_24A676788();
    v2[1] = sub_24A63CFF0(&qword_257946B70, &qword_257946B78, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948D10);
  }
  return result;
}

unint64_t sub_24A676788()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_257948D20;
  if (!qword_257948D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948D28);
    v2 = sub_24A6767F4();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257948D20);
  }
  return result;
}

unint64_t sub_24A6767F4()
{
  unint64_t result;

  result = qword_257948D30;
  if (!qword_257948D30)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for WorkoutNotificationFont, &type metadata for WorkoutNotificationFont);
    atomic_store(result, (unint64_t *)&qword_257948D30);
  }
  return result;
}

uint64_t destroy for TrainingLoadGradientView()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrainingLoadGradientView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TrainingLoadGradientView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for TrainingLoadGradientView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadGradientView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadGradientView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadGradientView()
{
  return &type metadata for TrainingLoadGradientView;
}

uint64_t sub_24A676A18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A676A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  _QWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = sub_24A77A93C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948D38);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948D40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948D48);
  result = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 16);
  v22[1] = a1;
  if (!v17)
  {
    v19 = 0;
    goto LABEL_7;
  }
  v18 = *(double *)(v1 + 16);
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v18 < 9.22337204e18)
  {
    v19 = (uint64_t)v18 / v17;
LABEL_7:
    sub_24A676CD8(v1, v19);
    sub_24A77B668();
    sub_24A77A4B0();
    sub_24A63CCC0((uint64_t)v9, (uint64_t)v12, &qword_257948D38);
    v20 = &v12[*(int *)(v10 + 36)];
    v21 = v24;
    *(_OWORD *)v20 = v23;
    *((_OWORD *)v20 + 1) = v21;
    *((_OWORD *)v20 + 2) = v25;
    sub_24A63CD04((uint64_t)v9, &qword_257948D38);
    sub_24A63CCC0((uint64_t)v12, (uint64_t)v16, &qword_257948D40);
    *(_OWORD *)&v16[*(int *)(v13 + 36)] = xmmword_24A780E50;
    sub_24A63CD04((uint64_t)v12, &qword_257948D40);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDEE8B0], v3);
    sub_24A665CEC(&qword_257948D50, &qword_257948D48, sub_24A677B48, MEMORY[0x24BDEC438]);
    sub_24A77B0EC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_24A63CD04((uint64_t)v16, &qword_257948D48);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24A676CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948D80);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948D88);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_QWORD *)(*(_QWORD *)(a1 + 8) + 16) > 1uLL)
  {
    *(_QWORD *)v6 = sub_24A77A918();
    *((_QWORD *)v6 + 1) = 0;
    v6[16] = 0;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948D90);
    sub_24A676F2C(a1, a2, &v6[*(int *)(v11 + 44)]);
    sub_24A63CCC0((uint64_t)v6, (uint64_t)v9, &qword_257948D80);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948098);
    sub_24A677D8C((unint64_t *)&qword_257948090, &qword_257948098, (unint64_t *)&qword_257947658, &qword_257947660);
    sub_24A63CFF0(&qword_257948D78, &qword_257948D80, MEMORY[0x24BDF4498]);
    sub_24A77AB28();
    return sub_24A63CD04((uint64_t)v6, &qword_257948D80);
  }
  else
  {
    if (qword_2579469B8 != -1)
      swift_once();
    *v9 = qword_257959950;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948098);
    sub_24A677D8C((unint64_t *)&qword_257948090, &qword_257948098, (unint64_t *)&qword_257947658, &qword_257947660);
    sub_24A63CFF0(&qword_257948D78, &qword_257948D80, MEMORY[0x24BDF4498]);
    return sub_24A77AB28();
  }
}

uint64_t sub_24A676F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948D98);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&KeyPath - v12;
  v14 = *(_QWORD *)(a1 + 48);
  v15 = v14 * a2;
  if ((unsigned __int128)(v14 * (__int128)a2) >> 64 == (v14 * a2) >> 63)
  {
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16);
    if (v16 >= v14)
    {
      v36 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
    }
    else
    {
      v36 = *(_QWORD *)a1;
      swift_retain();
      sub_24A77B668();
      result = sub_24A77A4B0();
      v17 = v39;
      v18 = v40;
      v19 = v41;
      v20 = v42;
      v21 = v43;
      v22 = v44;
    }
    if (v16)
    {
      v34 = v22;
      v35 = v17;
      v37 = 0;
      v38 = v16 - 1;
      v30 = v18;
      v31 = v19;
      v32 = v20;
      v33 = v21;
      KeyPath = swift_getKeyPath();
      v23 = swift_allocObject();
      v24 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v23 + 32) = v24;
      *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
      *(_QWORD *)(v23 + 64) = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(v23 + 72) = a2;
      *(double *)(v23 + 80) = (double)v15;
      sub_24A677CB0(a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257948DA0);
      sub_24A646BEC();
      sub_24A63F3CC(&qword_257948DA8, &qword_257948DA0, sub_24A677CE4, (uint64_t (*)(void))sub_24A677EA0);
      sub_24A77B5E4();
      v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v25(v10, v13, v6);
      v26 = v35;
      *(_QWORD *)a3 = v36;
      *((_QWORD *)a3 + 1) = v26;
      *((_QWORD *)a3 + 2) = v30;
      *((_QWORD *)a3 + 3) = v31;
      *((_QWORD *)a3 + 4) = v32;
      *((_QWORD *)a3 + 5) = v33;
      *((_QWORD *)a3 + 6) = v34;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E10);
      v25(&a3[*(int *)(v27 + 48)], v10, v6);
      v28 = *(void (**)(char *, uint64_t))(v7 + 8);
      swift_retain();
      v28(v13, v6);
      v28(v10, v6);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24A67720C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t View;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  int v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;

  v51 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E18);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E20);
  MEMORY[0x24BDAC7A8](v49);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948DC8);
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v46 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948DB8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  MEMORY[0x24BDAC7A8](View);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v48 = v13;
  v19 = *(_QWORD *)(a2 + 8);
  v20 = *(_QWORD *)(v19 + 16);
  if (v18 >= v20)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v52 = v7;
  v7 = (char *)v11;
  v53 = v5;
  v21 = v19 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v22 = *(_QWORD *)(v15 + 72);
  sub_24A677F4C(v21 + v22 * v18, (uint64_t)v17);
  v54 = v17;
  if (v18 != v20 - 1)
  {
    if (v18 + 1 < v20)
    {
      v28 = v51;
      v29 = sub_24A677F90((uint64_t)v54, v21 + v22 * (v18 + 1), v51);
      if (v29)
      {
        v30 = v29;
        v31 = *(_QWORD *)(v29 + 16);
        if (v31)
        {
          *(_QWORD *)&v60 = 0;
          *((_QWORD *)&v60 + 1) = v31 - 1;
          swift_getKeyPath();
          v32 = swift_allocObject();
          *(_QWORD *)(v32 + 16) = v30;
          v33 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(v32 + 24) = *(_OWORD *)a2;
          *(_OWORD *)(v32 + 40) = v33;
          *(_OWORD *)(v32 + 56) = *(_OWORD *)(a2 + 32);
          *(_QWORD *)(v32 + 72) = *(_QWORD *)(a2 + 48);
          sub_24A677CB0(a2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257948DD8);
          sub_24A646BEC();
          sub_24A677D8C(&qword_257948DD0, &qword_257948DD8, &qword_257948DE0, &qword_257948DE8);
          v34 = v46;
          sub_24A77B5E4();
          v35 = v47;
          v36 = v50;
          (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v9, v34, v50);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257948DF8);
          sub_24A677D08();
          sub_24A677E14();
          v20 = (unint64_t)v48;
          sub_24A77AB28();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
          v7 = v52;
LABEL_19:
          sub_24A63CCC0(v20, (uint64_t)v7, &qword_257948DB8);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257948E08);
          sub_24A677CE4();
          sub_24A677EA0();
          sub_24A77AB28();
          sub_24A63CD04(v20, &qword_257948DB8);
          return sub_24A678780((uint64_t)v54);
        }
LABEL_24:
        __break(1u);
LABEL_25:
        swift_once();
        goto LABEL_6;
      }
      if (*(_QWORD *)(a2 + 48) / 28 <= 1)
        v38 = 1;
      else
        v38 = *(_QWORD *)(a2 + 48) / 28;
      if ((unsigned __int128)(v38 * (__int128)v28) >> 64 == (v38 * v28) >> 63)
      {
        v7 = v52;
        v20 = (unint64_t)v48;
        if (qword_2579469B8 == -1)
        {
LABEL_18:
          v39 = qword_257959950;
          swift_retain();
          sub_24A77B668();
          sub_24A77A4B0();
          v40 = v60;
          v41 = BYTE8(v60);
          v42 = v61;
          v43 = BYTE8(v61);
          *(_QWORD *)v9 = v39;
          *((_QWORD *)v9 + 1) = v40;
          v9[16] = v41;
          *((_QWORD *)v9 + 3) = v42;
          v9[32] = v43;
          *(_OWORD *)(v9 + 40) = v62;
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257948DF8);
          sub_24A677D08();
          sub_24A677E14();
          sub_24A77AB28();
          goto LABEL_19;
        }
      }
      else
      {
        __break(1u);
      }
      swift_once();
      goto LABEL_18;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((v17[*(int *)(View + 32) + 8] & 1) == 0)
  {
    v37 = sub_24A6787FC((uint64_t)v17, *(double *)(a2 + 32), *(double *)(a2 + 40));
    sub_24A77B6E0();
    sub_24A77B6D4();
    MEMORY[0x24BD18C4C](v37);
    sub_24A77A570();
    v55 = v63;
    v56 = v64;
    v57 = v65;
    v58 = 1053609165;
    v59 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948DD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948098);
    sub_24A677D8C(&qword_257948DD0, &qword_257948DD8, &qword_257948DE0, &qword_257948DE8);
    sub_24A677D8C((unint64_t *)&qword_257948090, &qword_257948098, (unint64_t *)&qword_257947658, &qword_257947660);
    sub_24A77AB28();
    v23 = v60;
    v24 = v61;
    v25 = v62;
    v26 = DWORD2(v62);
    v27 = BYTE12(v62);
    v7 = v52;
    goto LABEL_12;
  }
  v7 = v52;
  if (qword_2579469B8 != -1)
    goto LABEL_25;
LABEL_6:
  v55 = qword_257959950;
  v56 = 0u;
  v57 = 0u;
  v58 = 0;
  v59 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948DD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948098);
  sub_24A677D8C(&qword_257948DD0, &qword_257948DD8, &qword_257948DE0, &qword_257948DE8);
  sub_24A677D8C((unint64_t *)&qword_257948090, &qword_257948098, (unint64_t *)&qword_257947658, &qword_257947660);
  sub_24A77AB28();
  v23 = v60;
  v24 = v61;
  v25 = v62;
  v26 = DWORD2(v62);
  v27 = BYTE12(v62);
LABEL_12:
  *(_OWORD *)v7 = v23;
  *((_OWORD *)v7 + 1) = v24;
  *((_QWORD *)v7 + 4) = v25;
  *((_DWORD *)v7 + 10) = v26;
  v7[44] = v27;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948E08);
  sub_24A677CE4();
  sub_24A677EA0();
  sub_24A77AB28();
  return sub_24A678780((uint64_t)v54);
}

unint64_t *sub_24A677A1C@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  uint64_t View;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v4 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(_QWORD *)(a2 + 16))
  {
    View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    v9 = sub_24A6787FC(a2+ ((*(unsigned __int8 *)(*(_QWORD *)(View - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(View - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(View - 8) + 72) * v4, *(double *)(a3 + 32), *(double *)(a3 + 40));
    sub_24A77B6E0();
    sub_24A77B6D4();
    MEMORY[0x24BD18C4C](v9);
    result = (unint64_t *)sub_24A77A570();
    *(_QWORD *)a4 = v10;
    *(_OWORD *)(a4 + 8) = v11;
    *(_OWORD *)(a4 + 24) = v12;
    *(_DWORD *)(a4 + 40) = 1053609165;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A677B08@<X0>(uint64_t a1@<X8>)
{
  return sub_24A676A28(a1);
}

uint64_t sub_24A677B48()
{
  return sub_24A665CEC(&qword_257948D58, &qword_257948D40, (uint64_t (*)(void))sub_24A677B6C, MEMORY[0x24BDEBEE0]);
}

unint64_t sub_24A677B6C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_257948D60;
  if (!qword_257948D60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948D38);
    v2 = sub_24A677BD0();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257948D60);
  }
  return result;
}

unint64_t sub_24A677BD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948D68;
  if (!qword_257948D68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948D70);
    v2[0] = sub_24A677D8C((unint64_t *)&qword_257948090, &qword_257948098, (unint64_t *)&qword_257947658, &qword_257947660);
    v2[1] = sub_24A63CFF0(&qword_257948D78, &qword_257948D80, MEMORY[0x24BDF4498]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948D68);
  }
  return result;
}

uint64_t sub_24A677C74()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24A677CA0(unint64_t *a1)
{
  uint64_t v1;

  return sub_24A67720C(a1, v1 + 16, *(_QWORD *)(v1 + 72));
}

uint64_t sub_24A677CB0(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24A677CE4()
{
  return sub_24A63F3CC(&qword_257948DB0, &qword_257948DB8, (uint64_t (*)(void))sub_24A677D08, (uint64_t (*)(void))sub_24A677E14);
}

unint64_t sub_24A677D08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257948DC0;
  if (!qword_257948DC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948DC8);
    v2 = sub_24A677D8C(&qword_257948DD0, &qword_257948DD8, &qword_257948DE0, &qword_257948DE8);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257948DC0);
  }
  return result;
}

uint64_t sub_24A677D8C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_24A6650A4();
    v9[1] = sub_24A63CFF0(a3, a4, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A677E14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948DF0;
  if (!qword_257948DF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948DF8);
    v2[0] = sub_24A677D8C((unint64_t *)&qword_257948090, &qword_257948098, (unint64_t *)&qword_257947658, &qword_257947660);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948DF0);
  }
  return result;
}

unint64_t sub_24A677EA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948E00;
  if (!qword_257948E00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948E08);
    v2[0] = sub_24A677D8C(&qword_257948DD0, &qword_257948DD8, &qword_257948DE0, &qword_257948DE8);
    v2[1] = sub_24A677D8C((unint64_t *)&qword_257948090, &qword_257948098, (unint64_t *)&qword_257947658, &qword_257947660);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948E00);
  }
  return result;
}

uint64_t sub_24A677F4C(uint64_t a1, uint64_t a2)
{
  uint64_t View;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 16))(a2, a1, View);
  return a2;
}

unint64_t sub_24A677F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t View;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  unint64_t v27;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int v49;
  char *v50;
  __n128 v51;
  __n128 v52;
  char *v53;
  __n128 v54;
  __n128 v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  char *v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  unsigned int v91;
  int v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v6 = sub_24A77B80C();
  v107 = *(_QWORD *)(v6 - 8);
  v108 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v106 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v105 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_24A77B320();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v96 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_24A779CAC();
  v109 = *(_QWORD *)(v99 - 8);
  v12 = MEMORY[0x24BDAC7A8](v99);
  v100 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v104 = (char *)&v77 - v14;
  v112 = sub_24A778818();
  v103 = *(_QWORD *)(v112 - 8);
  v15 = MEMORY[0x24BDAC7A8](v112);
  v102 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v101 = (char *)&v77 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v77 - v19;
  v110 = a3;
  if (a3 >= 1)
  {
    v21 = *(int *)(View + 24);
    v22 = (double *)(a1 + v21);
    if ((*(_BYTE *)(a1 + v21 + 8) & 1) == 0)
    {
      v23 = a2 + v21;
      if ((*(_BYTE *)(v23 + 8) & 1) == 0)
      {
        v24 = *(int *)(View + 32);
        v25 = (double *)(a1 + v24);
        if ((*(_BYTE *)(a1 + v24 + 8) & 1) == 0)
        {
          v26 = a2 + v24;
          if ((*(_BYTE *)(v26 + 8) & 1) == 0)
          {
            v29 = *v22;
            v30 = *(double *)v23;
            v31 = *v25;
            v32 = *(double *)v26;
            sub_24A778794();
            v34 = v33;
            v35 = 0;
            v36 = v30 - v29;
            v37 = v32 - v31;
            v92 = *MEMORY[0x24BE3FC88];
            v90 = *MEMORY[0x24BE3FC60];
            v86 = *MEMORY[0x24BE3FC50];
            v83 = *MEMORY[0x24BE3FC58];
            v81 = *MEMORY[0x24BE3FC80];
            v91 = *MEMORY[0x24BDF3C28];
            v27 = MEMORY[0x24BEE4AF8];
            v89 = 0x3FDF9F9F9F9F9FA0;
            v88 = 0x3FDA9A9A9A9A9A9BLL;
            v87 = 0x3FEAFAFAFAFAFAFBLL;
            v85 = 0x3FE0505050505050;
            v84 = 0x3FE0D0D0D0D0D0D1;
            v82 = 0x3FE5D5D5D5D5D5D6;
            v80 = 0x3FE7575757575757;
            v79 = 0x3FDC5C5C5C5C5C5CLL;
            v78 = 0x3FDB1B1B1B1B1B1BLL;
            v77 = 0x3FECBCBCBCBCBCBDLL;
            v95 = a1;
            v94 = View;
            v93 = v10;
            v38 = v103;
            v39 = v112;
            while (1)
            {
              v111 = v35 + 1;
              sub_24A7787A0();
              sub_24A778794();
              v41 = v29 + v36 * v40 / v34;
              sub_24A778794();
              v43 = v31 + v37 * v42 / v34;
              if (v43 > 0.0)
                break;
              v57 = sub_24A77B338();
LABEL_23:
              v62 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
              v63 = v101;
              v64 = v20;
              v62(v101, v20, v39);
              v65 = v102;
              v62(v102, v63, v39);
              swift_retain();
              v66 = v106;
              sub_24A77B7C4();
              v67 = *(void (**)(char *, uint64_t))(v38 + 8);
              v67(v63, v39);
              v68 = v94;
              v69 = (uint64_t)v93;
              v70 = &v93[*(int *)(v94 + 24)];
              v71 = &v93[*(int *)(v94 + 32)];
              *(double *)v70 = v41;
              v70[8] = 0;
              v72 = v65;
              v73 = v68;
              (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v69, v72, v39);
              (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v69 + *(int *)(v73 + 20), v66, v108);
              *(_QWORD *)(v69 + *(int *)(v73 + 28)) = v57;
              *(double *)v71 = v43;
              v71[8] = 0;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v27 = sub_24A64D59C(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
              v75 = *(_QWORD *)(v27 + 16);
              v74 = *(_QWORD *)(v27 + 24);
              v20 = v64;
              if (v75 >= v74 >> 1)
                v27 = sub_24A64D59C(v74 > 1, v75 + 1, 1, v27);
              *(_QWORD *)(v27 + 16) = v75 + 1;
              sub_24A678D20(v69, v27+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v75);
              swift_release();
              v67(v64, v112);
              v35 = v111;
              if (v110 == v111)
                return v27;
            }
            v44 = v104;
            sub_24A779C88();
            v45 = v109;
            v46 = v100;
            v47 = v44;
            v48 = v99;
            (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v100, v47, v99);
            v49 = (*(uint64_t (**)(char *, uint64_t))(v45 + 88))(v46, v48);
            if (v49 == v92)
            {
              v50 = v96;
              (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, v91, v98);
              v52.n128_u64[0] = 1.0;
              v53 = v50;
              v54.n128_u64[0] = v89;
              v55.n128_u64[0] = v88;
              v56 = &v115;
LABEL_12:
              v51.n128_u64[0] = *(v56 - 32);
LABEL_21:
              v57 = MEMORY[0x24BD189AC](v53, v54, v55, v51, v52);
LABEL_22:
              (*(void (**)(char *, uint64_t))(v109 + 8))(v104, v48);
              goto LABEL_23;
            }
            if (v49 == v90)
            {
              v58 = v96;
              (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, v91, v98);
              v51.n128_u64[0] = 1.0;
              v52.n128_u64[0] = 1.0;
              v53 = v58;
              v54.n128_u64[0] = v85;
              v59 = &v114;
            }
            else if (v49 == v86)
            {
              v60 = v96;
              (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, v91, v98);
              v54.n128_u64[0] = 0x3FD5555555555555;
              v51.n128_u64[0] = 1.0;
              v52.n128_u64[0] = 1.0;
              v53 = v60;
              v59 = &v113;
            }
            else
            {
              if (v49 != v83)
              {
                if (v49 != v81)
                {
                  v57 = sub_24A77B35C();
                  (*(void (**)(char *, uint64_t))(v109 + 8))(v100, v48);
                  goto LABEL_22;
                }
                v76 = v96;
                (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, v91, v98);
                v54.n128_u64[0] = 1.0;
                v52.n128_u64[0] = 1.0;
                v53 = v76;
                v55.n128_u64[0] = v78;
                v56 = &v110;
                goto LABEL_12;
              }
              v61 = v96;
              (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, v91, v98);
              v51.n128_u64[0] = 1.0;
              v52.n128_u64[0] = 1.0;
              v53 = v61;
              v54.n128_u64[0] = v80;
              v59 = &v112;
            }
            v55.n128_u64[0] = *(v59 - 32);
            goto LABEL_21;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_24A678780(uint64_t a1)
{
  uint64_t View;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 8))(a1, View);
  return a1;
}

uint64_t sub_24A6787BC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t *sub_24A6787F0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A677A1C(a1, *(_QWORD *)(v2 + 16), v2 + 24, a2);
}

_QWORD *sub_24A6787FC(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  _QWORD *v19;
  double v20;
  double v21;
  char *v22;
  int v23;
  char *v24;
  __n128 v25;
  char *v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  char *v30;
  char *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  unsigned int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v5 = sub_24A77B320();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A779CAC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - v11;
  v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 32));
  v62 = *v13;
  v61 = *((unsigned __int8 *)v13 + 8);
  v14 = sub_24A779C94();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v60 = *(_QWORD *)(v8 + 72);
  v54 = v14;
  v17 = v14 + v16;
  v18 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  v59 = *MEMORY[0x24BE3FC88];
  v53 = *MEMORY[0x24BE3FC60];
  v52 = *MEMORY[0x24BE3FC50];
  v49 = *MEMORY[0x24BE3FC58];
  v47 = *MEMORY[0x24BE3FC80];
  v55 = *MEMORY[0x24BDF3C28];
  v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v51 = 0x3FE0505050505050;
  v50 = 0x3FE0D0D0D0D0D0D1;
  v48 = 0x3FE5D5D5D5D5D5D6;
  v46 = 0x3FE7575757575757;
  v45 = 0x3FDC5C5C5C5C5C5CLL;
  v44 = 0x3FDB1B1B1B1B1B1BLL;
  v43 = 0x3FECBCBCBCBCBCBDLL;
  do
  {
    v18(v12, v17, v7);
    sub_24A779C70();
    v21 = v20;
    sub_24A779C70();
    if (sub_24A779CA0() || v21 <= a3)
      sub_24A779CA0();
    v22 = v63;
    v18(v63, (unint64_t)v12, v7);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v22, v7);
    if (v23 == v59)
    {
      v24 = v56;
      (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, v55, v58);
      v25.n128_u64[0] = 1.0;
      v26 = v24;
      v27.n128_u64[0] = 0x3FDF9F9F9F9F9FA0;
      v28.n128_u64[0] = 0x3FDA9A9A9A9A9A9BLL;
      v29.n128_u64[0] = 0x3FEAFAFAFAFAFAFBLL;
LABEL_15:
      MEMORY[0x24BD189AC](v26, v27, v28, v29, v25);
      goto LABEL_16;
    }
    if (v23 == v53)
    {
      v30 = v56;
      (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, v55, v58);
      v29.n128_u64[0] = 1.0;
      v25.n128_u64[0] = 1.0;
      v26 = v30;
      v28.n128_u64[0] = v50;
      v27.n128_u64[0] = v51;
      goto LABEL_15;
    }
    if (v23 == v52)
    {
      v31 = v56;
      (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, v55, v58);
      v27.n128_u64[0] = 0x3FD5555555555555;
      v29.n128_u64[0] = 1.0;
      v25.n128_u64[0] = 1.0;
      v26 = v31;
      v32 = &v65;
LABEL_14:
      v28.n128_u64[0] = *(v32 - 32);
      goto LABEL_15;
    }
    if (v23 == v49)
    {
      v33 = v56;
      (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, v55, v58);
      v29.n128_u64[0] = 1.0;
      v25.n128_u64[0] = 1.0;
      v26 = v33;
      v27.n128_u64[0] = v46;
      v32 = &v64;
      goto LABEL_14;
    }
    if (v23 == v47)
    {
      v40 = v56;
      (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, v55, v58);
      v27.n128_u64[0] = 1.0;
      v25.n128_u64[0] = 1.0;
      v26 = v40;
      v28.n128_u64[0] = v44;
      v29.n128_u64[0] = v43;
      goto LABEL_15;
    }
    sub_24A77B35C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v63, v7);
LABEL_16:
    v34 = sub_24A77B62C();
    v36 = v35;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_24A64D5B0(0, v19[2] + 1, 1, v19);
    v38 = v19[2];
    v37 = v19[3];
    if (v38 >= v37 >> 1)
      v19 = sub_24A64D5B0((_QWORD *)(v37 > 1), v38 + 1, 1, v19);
    v19[2] = v38 + 1;
    v39 = &v19[2 * v38];
    v39[4] = v34;
    v39[5] = v36;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v17 += v60;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_24A678D20(uint64_t a1, uint64_t a2)
{
  uint64_t View;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 32))(a2, a1, View);
  return a2;
}

uint64_t sub_24A678D64()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948D48);
  sub_24A665CEC(&qword_257948D50, &qword_257948D48, sub_24A677B48, MEMORY[0x24BDEC438]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_24A678DD0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *DayEntry;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A778818();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
    v9 = DayEntry[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = DayEntry[6];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v16 = *v14;
    v15 = v14[1];
    *v13 = v16;
    v13[1] = v15;
    v17 = DayEntry[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + DayEntry[8]) = *(uint64_t *)((char *)a2 + DayEntry[8]);
    v21 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = a3[7];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_24A77A66C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A678F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for TrainingLoadDayEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v8 = sub_24A77A66C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_24A679078(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = DayEntry[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  v16 = DayEntry[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  v20 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = a3[7];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = sub_24A77A66C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24A6791F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = DayEntry[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = DayEntry[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  if (a1 != a2)
  {
    v22 = a3[7];
    v23 = (_QWORD *)(a1 + v22);
    v24 = (_QWORD *)(a2 + v22);
    sub_24A63CD04(a1 + v22, &qword_257946D30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_24A77A66C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A6793B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + DayEntry[6]) = *(_OWORD *)(a2 + DayEntry[6]);
  *(_OWORD *)(a1 + DayEntry[7]) = *(_OWORD *)(a2 + DayEntry[7]);
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  v11 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_24A77A66C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24A679500(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = DayEntry[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = DayEntry[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  swift_release();
  v21 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  if (a1 != a2)
  {
    v25 = a3[7];
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    sub_24A63CD04(a1 + v25, &qword_257946D30);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_24A77A66C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24A679694()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6796A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DayEntry;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v7 = *(_QWORD *)(DayEntry - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = DayEntry;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E30);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 28);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24A679740()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A67974C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t DayEntry;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v9 = *(_QWORD *)(DayEntry - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = DayEntry;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E30);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 28);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TrainingLoadDayWidgetSystemSmallView()
{
  uint64_t result;

  result = qword_257948E90;
  if (!qword_257948E90)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A679830()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for TrainingLoadDayEntry();
  if (v0 <= 0x3F)
  {
    sub_24A6798DC();
    if (v1 <= 0x3F)
    {
      sub_24A679978();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_24A6798DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257948EA0)
  {
    sub_24A679934();
    v0 = sub_24A77A450();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257948EA0);
  }
}

unint64_t sub_24A679934()
{
  unint64_t result;

  result = qword_257948EA8;
  if (!qword_257948EA8)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE50B8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_257948EA8);
  }
  return result;
}

void sub_24A679978()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257948EB0)
  {
    sub_24A77A66C();
    v0 = sub_24A77A3F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257948EB0);
  }
}

uint64_t sub_24A6799CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6799DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_24A77A66C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  sub_24A63E9C8((uint64_t)v8);
  sub_24A67AEB8(&qword_257948F38, MEMORY[0x24BDED950]);
  sub_24A77BEA8();
  sub_24A67AEB8(&qword_257948F40, MEMORY[0x24BDED940]);
  v9 = sub_24A77B974();
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  if ((v9 & 1) != 0)
  {
    v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TrainingLoadDayEntry() + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v12 = (id)qword_2544D6158;
    v11 = sub_24A77856C();

  }
  return v11;
}

uint64_t sub_24A679BC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v51 = a1;
  v3 = sub_24A77AC54();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948EE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948EF0);
  MEMORY[0x24BDAC7A8](v44);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F80);
  MEMORY[0x24BDAC7A8](v45);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F88);
  MEMORY[0x24BDAC7A8](v47);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948EF8);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_24A77A9FC();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F00);
  sub_24A67A00C(v2, (uint64_t)&v8[*(int *)(v17 + 44)]);
  v18 = sub_24A77ACC0();
  v19 = sub_24A77ACD8();
  v20 = sub_24A77ACF0();
  v21 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v18)
    v21 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v19)
    v21 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v20)
    v21 = sub_24A77ACE4();
  sub_24A77A390();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_24A63CCC0((uint64_t)v8, (uint64_t)v10, &qword_257948EE8);
  v30 = &v10[*(int *)(v44 + 36)];
  *v30 = v21;
  *((_QWORD *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_24A63CD04((uint64_t)v8, &qword_257948EE8);
  v31 = sub_24A77ACCC();
  sub_24A77A390();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_24A63CCC0((uint64_t)v10, (uint64_t)v12, &qword_257948EF0);
  v40 = &v12[*(int *)(v45 + 36)];
  *v40 = v31;
  *((_QWORD *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  sub_24A63CD04((uint64_t)v10, &qword_257948EF0);
  v41 = sub_24A77B668();
  sub_24A642380(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v41, v42);
  sub_24A63CD04((uint64_t)v12, &qword_257946F80);
  sub_24A77AC48();
  sub_24A77B668();
  sub_24A665CEC(&qword_257948F08, &qword_257946F88, sub_24A67AE10, MEMORY[0x24BDEDBB8]);
  sub_24A77B1F4();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v50);
  sub_24A63CD04((uint64_t)v14, &qword_257946F88);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v46 + 32))(v51, v16, v48);
}

uint64_t sub_24A67A00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char v41;
  uint64_t DayViewModel;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t KeyPath;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v86;
  uint64_t DayEntry;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t DayView;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t DayWidgetSystemSmallView;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;

  v112 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v3);
  v101 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F90);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v104 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F98);
  MEMORY[0x24BDAC7A8](v105);
  v103 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F28);
  v109 = *(_QWORD *)(v111 - 8);
  v7 = MEMORY[0x24BDAC7A8](v111);
  v110 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v102 = (char *)&v86 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v108 = (char *)&v86 - v11;
  v12 = sub_24A77A66C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v86 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayView = type metadata accessor for TrainingLoadDayView();
  v22 = MEMORY[0x24BDAC7A8](DayView);
  v24 = (uint64_t *)((char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v22);
  v98 = (uint64_t)&v86 - v25;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F70);
  MEMORY[0x24BDAC7A8](v96);
  v27 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F78);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v100 = (uint64_t)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v97 = (uint64_t)&v86 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v114 = (uint64_t)&v86 - v33;
  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v34 = (uint64_t *)(a1 + *(int *)(DayEntry + 20));
  v35 = *v34;
  v36 = *((_BYTE *)v34 + 8);
  v37 = sub_24A77B848();
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v95 = v21;
  v38(v21, 1, 1, v37);
  DayWidgetSystemSmallView = type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  v39 = *(int *)(DayWidgetSystemSmallView + 28);
  v99 = a1;
  v93 = a1 + v39;
  sub_24A63E9C8((uint64_t)v18);
  v92 = sub_24A67AEB8(&qword_257948F38, MEMORY[0x24BDED950]);
  sub_24A77BEA8();
  v91 = sub_24A67AEB8(&qword_257948F40, MEMORY[0x24BDED940]);
  LOBYTE(v21) = sub_24A77B974();
  v40 = *(void (**)(char *, uint64_t))(v13 + 8);
  v40(v16, v12);
  v40(v18, v12);
  v41 = v21 ^ 1;
  DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  v43 = DayViewModel;
  v44 = 1;
  if ((v36 & 1) == 0)
  {
    *(_QWORD *)((char *)v24 + *(int *)(DayViewModel + 28)) = 0x3FE3333333333333;
    *v24 = v35;
    sub_24A779C7C();
    sub_24A779C70();
    v44 = 0;
    v45 = (_QWORD *)((char *)v24 + *(int *)(v43 + 24));
    *v45 = v46;
    v45[1] = v47;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v24, v44, 1, v43);
  v48 = DayView;
  sub_24A63F6C4(v95, (uint64_t)v24 + *(int *)(DayView + 20), &qword_257948F30);
  *((_BYTE *)v24 + *(int *)(v48 + 24)) = v41 & 1;
  v49 = v98;
  sub_24A67AEF8((uint64_t)v24, v98);
  v50 = v99;
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A67AF3C(v49, (uint64_t)v27);
  v51 = &v27[*(int *)(v96 + 36)];
  v52 = v130;
  *(_OWORD *)v51 = v129;
  *((_OWORD *)v51 + 1) = v52;
  *((_OWORD *)v51 + 2) = v131;
  sub_24A67AF80(v49);
  v53 = sub_24A77B668();
  v54 = v97;
  sub_24A6423D8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v97, 0.0, 1, 0.0, 1, v53, v55);
  sub_24A63CD04((uint64_t)v27, &qword_257946F70);
  sub_24A63F6C4(v54, v114, &qword_257946F78);
  v98 = sub_24A77AA08();
  sub_24A67AAA4(v50, (uint64_t)&v115);
  v97 = v115;
  v56 = v116;
  LODWORD(v96) = v117;
  v95 = v118;
  DayView = v119;
  v90 = v120;
  v89 = v121;
  v88 = v122;
  sub_24A63E9C8((uint64_t)v18);
  sub_24A77BEA8();
  LOBYTE(v48) = sub_24A77B974();
  v40(v16, v12);
  v40(v18, v12);
  if ((v48 & 1) != 0)
  {
    v57 = *(_QWORD *)(v50 + *(int *)(DayEntry + 32));
    swift_retain();
  }
  else
  {
    v57 = sub_24A77B338();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948E28);
  sub_24A77A444();
  sub_24A77AE04();
  v58 = *MEMORY[0x24BDF1668];
  v59 = sub_24A77ADC8();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 104);
  v62 = (uint64_t)v101;
  v61(v101, v58, v59);
  v63 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56);
  v63(v62, 0, 1, v59);
  v64 = sub_24A77AE1C();
  sub_24A63CD04(v62, &qword_257946FD0);
  KeyPath = swift_getKeyPath();
  v115 = v98;
  v116 = 0;
  v117 = 1;
  v118 = v97;
  v119 = v56;
  LOBYTE(v120) = v96;
  v121 = v95;
  v122 = DayView;
  v123 = v90;
  v124 = v89;
  v125 = v88;
  v126 = v57;
  v127 = KeyPath;
  v128 = v64;
  v61((char *)v62, v58, v59);
  v63(v62, 0, 1, v59);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948F48);
  sub_24A67AFC4();
  v66 = v104;
  sub_24A77B0A4();
  sub_24A63CD04(v62, &qword_257946FD0);
  v67 = v122;
  v68 = v123;
  LOBYTE(v58) = v124;
  sub_24A64596C(v118, v119, v120);
  swift_bridgeObjectRelease();
  sub_24A64596C(v67, v68, v58);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v69 = sub_24A77B674();
  v70 = v103;
  v72 = sub_24A642430(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v103, 0.0, 1, 0.0, 1, v69, v71);
  (*(void (**)(char *, uint64_t, double))(v106 + 8))(v66, v107, v72);
  sub_24A67B0E4();
  v73 = v102;
  sub_24A77B0BC();
  sub_24A63CD04(v70, &qword_257946F98);
  v74 = v109;
  v75 = v108;
  v76 = v111;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v108, v73, v111);
  v77 = v114;
  v78 = v100;
  sub_24A63CCC0(v114, v100, &qword_257946F78);
  v79 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v80 = v110;
  v79(v110, v75, v76);
  v81 = v112;
  sub_24A63CCC0(v78, v112, &qword_257946F78);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F80);
  v83 = v81 + *(int *)(v82 + 48);
  *(_QWORD *)v83 = 0;
  *(_BYTE *)(v83 + 8) = 1;
  v79((char *)(v81 + *(int *)(v82 + 64)), v80, v76);
  v84 = *(void (**)(char *, uint64_t))(v74 + 8);
  v84(v75, v76);
  sub_24A63CD04(v77, &qword_257946F78);
  v84(v80, v76);
  return sub_24A63CD04(v78, &qword_257946F78);
}

uint64_t sub_24A67AAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = sub_24A77A66C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v33 - v9;
  type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  sub_24A63E9C8((uint64_t)v10);
  sub_24A67AEB8(&qword_257948F38, MEMORY[0x24BDED950]);
  sub_24A77BEA8();
  sub_24A67AEB8(&qword_257948F40, MEMORY[0x24BDED940]);
  v11 = sub_24A77B974();
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  if ((v11 & 1) != 0)
  {
    v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadDayEntry() + 28));
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v16 = (id)qword_2544D6158;
    v14 = sub_24A77856C();
    v15 = v17;

  }
  v34 = v14;
  v35 = v15;
  sub_24A645928();
  v18 = sub_24A77AFD8();
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v34 = sub_24A6799DC();
  v35 = v25;
  v26 = sub_24A77AFD8();
  v28 = v27;
  LOBYTE(v34) = v24;
  v30 = v29 & 1;
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v20;
  *(_BYTE *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v26;
  *(_QWORD *)(a2 + 40) = v27;
  *(_BYTE *)(a2 + 48) = v29 & 1;
  *(_QWORD *)(a2 + 56) = v31;
  sub_24A6436C4(v18, v20, v24);
  swift_bridgeObjectRetain();
  sub_24A6436C4(v26, v28, v30);
  swift_bridgeObjectRetain();
  sub_24A64596C(v26, v28, v30);
  swift_bridgeObjectRelease();
  sub_24A64596C(v18, v20, v34);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A67AD74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = sub_24A77B320();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v5 + 104))(v4, *MEMORY[0x24BDF3C28]);
  result = MEMORY[0x24BD189AC](v4, 0.101960784, 0.101960784, 0.109803922, 1.0);
  *a1 = result;
  return result;
}

uint64_t sub_24A67AE10()
{
  return sub_24A665CEC(&qword_257948F10, &qword_257946F80, (uint64_t (*)(void))sub_24A67AE34, MEMORY[0x24BDECC60]);
}

unint64_t sub_24A67AE34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948F18;
  if (!qword_257948F18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948EF0);
    v2[0] = sub_24A63CFF0(&qword_257948F20, &qword_257948EE8, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948F18);
  }
  return result;
}

uint64_t sub_24A67AEB8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24A77A66C();
    result = MEMORY[0x24BD1A1F4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A67AEF8(uint64_t a1, uint64_t a2)
{
  uint64_t DayView;

  DayView = type metadata accessor for TrainingLoadDayView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DayView - 8) + 32))(a2, a1, DayView);
  return a2;
}

uint64_t sub_24A67AF3C(uint64_t a1, uint64_t a2)
{
  uint64_t DayView;

  DayView = type metadata accessor for TrainingLoadDayView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DayView - 8) + 16))(a2, a1, DayView);
  return a2;
}

uint64_t sub_24A67AF80(uint64_t a1)
{
  uint64_t DayView;

  DayView = type metadata accessor for TrainingLoadDayView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DayView - 8) + 8))(a1, DayView);
  return a1;
}

unint64_t sub_24A67AFC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948F50;
  if (!qword_257948F50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948F48);
    v2[0] = sub_24A67B048();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948F50);
  }
  return result;
}

unint64_t sub_24A67B048()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257948F58;
  if (!qword_257948F58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948F60);
    v2[0] = sub_24A63CFF0(&qword_257948F68, &qword_257948F70, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948F58);
  }
  return result;
}

unint64_t sub_24A67B0E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_257948F78;
  if (!qword_257948F78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F98);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948F48);
    v2[3] = sub_24A67AFC4();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948F78);
  }
  return result;
}

uint64_t sub_24A67B178()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F88);
  sub_24A665CEC(&qword_257948F08, &qword_257946F88, sub_24A67AE10, MEMORY[0x24BDEDBB8]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t EmbeddedIntervalConfigurationView.init(intervalConfiguration:formattingManager:referenceIntervalWorkoutConfiguration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t EmbeddedIntervalConfigurationView.body.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  _QWORD *v6;
  id v7;
  id v8;
  id v9;
  uint64_t result;
  uint64_t v11;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = (void *)sub_24A7790AC();
  v5 = sub_24A779088();

  if (!(v5 >> 62))
  {
    swift_bridgeObjectRelease();
LABEL_3:
    swift_getKeyPath();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v1;
    v6[3] = v2;
    v6[4] = v3;
    v7 = v3;
    v8 = v1;
    v9 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948F88);
    sub_24A646BEC();
    sub_24A67B594();
    swift_getOpaqueTypeConformance2();
    return sub_24A77B5E4();
  }
  swift_bridgeObjectRetain();
  v11 = sub_24A77C028();
  result = swift_bridgeObjectRelease_n();
  if ((v11 & 0x8000000000000000) == 0)
    goto LABEL_3;
  __break(1u);
  return result;
}

void sub_24A67B368(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[2];
  id v18;
  uint64_t v19;

  v7 = sub_24A77AC24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = (void *)sub_24A7790AC();
  v13 = sub_24A779088();

  if ((v13 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(void **)(v13 + 8 * v11 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
LABEL_16:
    v15 = MEMORY[0x24BD19588](v11, v13);
    goto LABEL_10;
  }
  v12 = (void *)MEMORY[0x24BD19588](v11, v13);
LABEL_5:
  swift_bridgeObjectRelease();
  if (!a4)
  {
    v15 = 0;
    goto LABEL_12;
  }
  v14 = (void *)sub_24A7790AC();
  v13 = sub_24A779088();

  if ((v13 & 0xC000000000000001) != 0)
    goto LABEL_16;
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(_QWORD *)(v13 + 8 * v11 + 32);
    swift_retain();
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_12:
    v17[1] = v12;
    v18 = a3;
    v19 = v15;
    swift_retain();
    swift_retain();
    v16 = a3;
    sub_24A77AC18();
    sub_24A67B594();
    sub_24A77B200();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();

    swift_release();
    return;
  }
  __break(1u);
}

uint64_t sub_24A67B554()
{
  id *v0;

  return swift_deallocObject();
}

void sub_24A67B588(unint64_t *a1)
{
  uint64_t v1;

  sub_24A67B368(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

unint64_t sub_24A67B594()
{
  unint64_t result;

  result = qword_257948F90;
  if (!qword_257948F90)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A77E994, &type metadata for BlockSectionView);
    atomic_store(result, (unint64_t *)&qword_257948F90);
  }
  return result;
}

uint64_t sub_24A67B5D8()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for EmbeddedIntervalConfigurationView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for EmbeddedIntervalConfigurationView(id *a1)
{

}

uint64_t assignWithCopy for EmbeddedIntervalConfigurationView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for EmbeddedIntervalConfigurationView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for EmbeddedIntervalConfigurationView()
{
  return &type metadata for EmbeddedIntervalConfigurationView;
}

unint64_t sub_24A67B728()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_257948F98;
  if (!qword_257948F98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948FA0);
    v2[1] = &type metadata for BlockSectionView;
    v2[2] = sub_24A67B594();
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4A08], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257948F98);
  }
  return result;
}

id sub_24A67B7B0()
{
  qword_257959868 = *MEMORY[0x24BDD3078];
  return (id)qword_257959868;
}

void sub_24A67B7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  switch(*(_QWORD *)(a5 + 16))
  {
    case 0:
      if (qword_257946820 != -1)
        swift_once();
      sub_24A779FE8();
      return;
    case 1:
      if (qword_257946820 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_24A780030;
      v7 = v6 + 32;
      v8 = a5 + 32;
      goto LABEL_26;
    case 2:
      if (qword_257946820 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_24A780450;
      sub_24A67BC90(a5 + 32, v9 + 32);
      v7 = v9 + 72;
      v8 = a5 + 72;
      goto LABEL_26;
    case 3:
      if (qword_257946820 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_24A7810C0;
      sub_24A67BC90(a5 + 32, v10 + 32);
      sub_24A67BC90(a5 + 72, v10 + 72);
      v7 = v10 + 112;
      v8 = a5 + 112;
      goto LABEL_26;
    case 4:
      if (qword_257946820 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_24A77E9F0;
      sub_24A67BC90(a5 + 32, v11 + 32);
      sub_24A67BC90(a5 + 72, v11 + 72);
      sub_24A67BC90(a5 + 112, v11 + 112);
      v7 = v11 + 152;
      v8 = a5 + 152;
      goto LABEL_26;
    case 5:
      if (qword_257946820 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_24A7810B0;
      sub_24A67BC90(a5 + 32, v12 + 32);
      sub_24A67BC90(a5 + 72, v12 + 72);
      sub_24A67BC90(a5 + 112, v12 + 112);
      sub_24A67BC90(a5 + 152, v12 + 152);
      v7 = v12 + 192;
      v8 = a5 + 192;
      goto LABEL_26;
    case 6:
      if (qword_257946820 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_24A7810A0;
      sub_24A67BC90(a5 + 32, v13 + 32);
      sub_24A67BC90(a5 + 72, v13 + 72);
      sub_24A67BC90(a5 + 112, v13 + 112);
      sub_24A67BC90(a5 + 152, v13 + 152);
      sub_24A67BC90(a5 + 192, v13 + 192);
      v7 = v13 + 232;
      v8 = a5 + 232;
      goto LABEL_26;
    case 7:
      if (qword_257946820 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_24A781090;
      sub_24A67BC90(a5 + 32, v14 + 32);
      sub_24A67BC90(a5 + 72, v14 + 72);
      sub_24A67BC90(a5 + 112, v14 + 112);
      sub_24A67BC90(a5 + 152, v14 + 152);
      sub_24A67BC90(a5 + 192, v14 + 192);
      sub_24A67BC90(a5 + 232, v14 + 232);
      v7 = v14 + 272;
      v8 = a5 + 272;
LABEL_26:
      sub_24A67BC90(v8, v7);
      sub_24A779FE8();
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_24A67BC90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24A67BCD4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_24A67E1CC;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_24A67BD38(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)();
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (uint64_t (**)())(a2 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  swift_retain();
  result = swift_release();
  *v6 = sub_24A67E1CC;
  v6[1] = (uint64_t (*)())v5;
  return result;
}

uint64_t TrainingLoadEffortExplanationView.onNext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  swift_retain();
  return v1;
}

uint64_t type metadata accessor for TrainingLoadEffortExplanationView()
{
  uint64_t result;

  result = qword_257949038;
  if (!qword_257949038)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainingLoadEffortExplanationView.onNext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 20));
  result = swift_release();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TrainingLoadEffortExplanationView.onNext.modify())(_QWORD)
{
  type metadata accessor for TrainingLoadEffortExplanationView();
  return nullsub_1;
}

uint64_t TrainingLoadEffortExplanationView.isStandalone.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 24));
}

uint64_t TrainingLoadEffortExplanationView.isStandalone.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TrainingLoadEffortExplanationView();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*TrainingLoadEffortExplanationView.isStandalone.modify())(_QWORD)
{
  type metadata accessor for TrainingLoadEffortExplanationView();
  return nullsub_1;
}

uint64_t TrainingLoadEffortExplanationView.init(isStandalone:onNext:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int *EffortExplanationView;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  *a4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  swift_storeEnumTagMultiPayload();
  EffortExplanationView = (int *)type metadata accessor for TrainingLoadEffortExplanationView();
  v9 = (char *)a4 + EffortExplanationView[7];
  sub_24A77BB78();
  v10 = sub_24A77BB6C();
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v12;
  v13 = sub_24A77BB6C();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  result = sub_24A77B584();
  *(_QWORD *)v9 = v17;
  *((_QWORD *)v9 + 1) = v18;
  v9[16] = v19;
  *((_BYTE *)a4 + EffortExplanationView[6]) = a1;
  v16 = (uint64_t *)((char *)a4 + EffortExplanationView[5]);
  *v16 = a2;
  v16[1] = a3;
  return result;
}

uint64_t sub_24A67C038@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = FIShouldTrackTrainingLoad();
  *a1 = result;
  return result;
}

uint64_t sub_24A67C05C()
{
  return FISetShouldTrackTrainingLoad();
}

uint64_t sub_24A67C064()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for TrainingLoadEffortExplanationView() + 24)) == 1)
  {
    if (qword_2544D6160 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_2544D6160 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  swift_beginAccess();
  v1 = (id)qword_2544D6158;
  v2 = sub_24A77856C();

  return v2;
}

uint64_t TrainingLoadEffortExplanationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t EffortExplanationView;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a1;
  EffortExplanationView = type metadata accessor for TrainingLoadEffortExplanationView();
  v37 = *(_QWORD *)(EffortExplanationView - 8);
  MEMORY[0x24BDAC7A8](EffortExplanationView);
  v38 = v2;
  v39 = (uint64_t)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FA8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F40);
  MEMORY[0x24BDAC7A8](v36);
  v34 = (uint64_t)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = sub_24A77A9FC();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v14 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257948FB8) + 44)];
  v41 = v1;
  sub_24A77AC9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948FC0);
  sub_24A63CFF0(&qword_257948FC8, &qword_257948FC0, MEMORY[0x24BDF5428]);
  sub_24A77A3A8();
  v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v15(v7, v9, v3);
  v15(v14, v7, v3);
  v16 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257948FD0) + 48)];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v9, v3);
  v17(v7, v3);
  v18 = sub_24A77A9FC();
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v19 = (id)qword_2544D6158;
  v20 = sub_24A77856C();
  v22 = v21;
  swift_bridgeObjectRelease();

  v23 = v39;
  sub_24A65FAD0(v1, v39, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadEffortExplanationView);
  v24 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v25 = swift_allocObject();
  sub_24A67D8D4(v23, v25 + v24);
  v26 = sub_24A77A480();
  LOBYTE(v24) = MEMORY[0x24BD1831C]((2 * v26));
  v27 = sub_24A77A618();
  v28 = v34;
  sub_24A63CCC0((uint64_t)v12, v34, &qword_257948FB0);
  v29 = v28 + *(int *)(v36 + 36);
  *(_QWORD *)v29 = v20;
  *(_QWORD *)(v29 + 8) = v22;
  *(_QWORD *)(v29 + 16) = sub_24A67D918;
  *(_QWORD *)(v29 + 24) = v25;
  *(_QWORD *)(v29 + 32) = v27;
  *(_QWORD *)(v29 + 40) = 0;
  *(_BYTE *)(v29 + 48) = 1;
  *(_BYTE *)(v29 + 49) = v24;
  *(_QWORD *)(v29 + 56) = v18;
  sub_24A63CD04((uint64_t)v12, &qword_257948FB0);
  v30 = sub_24A77B668();
  sub_24A642488(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v40, 0.0, 1, INFINITY, 0, v30, v31);
  return sub_24A63CD04(v28, &qword_257946F40);
}

uint64_t sub_24A67C618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OnboardingCore;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(void);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  _OWORD *v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _OWORD *v154;
  char *v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v169;
  void (*v170)(char *);
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  void (*v194)(char *, uint64_t);
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  char *v203;
  uint64_t v204;
  uint64_t KeyPath;
  int v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _DWORD v212[2];
  _DWORD v213[2];
  _DWORD v214[2];
  _DWORD v215[16];
  unsigned __int8 v216;
  _BYTE v217[7];
  _BYTE v218[7];
  unsigned __int8 v219;
  _BYTE v220[7];
  _BYTE v221[7];
  _BYTE v222[7];
  unsigned __int8 v223;
  char v224;
  _BYTE v225[7];
  _BYTE v226[7];
  _BYTE v227[7];
  unsigned __int8 v228;
  _BYTE v229[7];
  _BYTE v230[7];
  char v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  _OWORD v239[2];
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  _OWORD v247[2];
  _QWORD v248[2];
  char v249;
  _BYTE v250[7];
  id v251;
  char v252;
  _BYTE v253[7];
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  _BYTE v259[7];
  uint64_t v260;
  char v261;
  _BYTE v262[7];
  char v263;
  _BYTE v264[7];
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  char v272;
  _BYTE v273[7];
  uint64_t v274;
  uint64_t v275;
  char v276;
  _BYTE v277[7];
  char v278;
  _BYTE v279[7];
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  _BYTE v285[7];
  char v286;
  _BYTE v287[7];
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char v292;

  v188 = a2;
  v186 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v186);
  v187 = (char *)&v169 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949090);
  v175 = *(_QWORD *)(v4 - 8);
  v176 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v174 = (char *)&v169 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949098);
  MEMORY[0x24BDAC7A8](v172);
  v177 = (char *)&v169 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579490A0);
  MEMORY[0x24BDAC7A8](v173);
  v179 = (uint64_t)&v169 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579490A8);
  MEMORY[0x24BDAC7A8](v178);
  v182 = (uint64_t)&v169 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579490B0);
  MEMORY[0x24BDAC7A8](v180);
  v184 = (uint64_t)&v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579490B8);
  MEMORY[0x24BDAC7A8](v181);
  v185 = (char *)&v169 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579490C0);
  v11 = MEMORY[0x24BDAC7A8](v183);
  v211 = (uint64_t)&v169 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v210 = (uint64_t)&v169 - v13;
  v204 = sub_24A77AE70();
  v14 = *(_QWORD *)(v204 - 8);
  MEMORY[0x24BDAC7A8](v204);
  v203 = (char *)&v169 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_24A778584();
  MEMORY[0x24BDAC7A8](v16);
  OnboardingCore = type metadata accessor for TrainingLoadOnboardingCore();
  v18 = MEMORY[0x24BDAC7A8](OnboardingCore);
  v209 = (uint64_t)&v169 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v169 - v20);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v22 = (id)qword_2544D6158;
  v23 = sub_24A77856C();
  v25 = v24;

  sub_24A67C064();
  v169 = a1;
  sub_24A778578();
  sub_24A778554();
  *v21 = 0xD000000000000028;
  v21[1] = 0x800000024A78A920;
  v21[2] = v23;
  v21[3] = v25;
  v26 = (id)qword_2544D6158;
  v27 = sub_24A77856C();
  v29 = v28;

  v270 = v27;
  v271 = v29;
  v195 = sub_24A645928();
  v30 = sub_24A77AFD8();
  v32 = v31;
  v202 = v21;
  v34 = v33 & 1;
  sub_24A77AD98();
  v171 = *MEMORY[0x24BDF17C8];
  v170 = *(void (**)(char *))(v14 + 104);
  v36 = v203;
  v35 = v204;
  v170(v203);
  sub_24A77AE88();
  swift_release();
  v194 = *(void (**)(char *, uint64_t))(v14 + 8);
  v194(v36, v35);
  v37 = sub_24A77AF84();
  v39 = v38;
  v41 = v40;
  swift_release();
  sub_24A64596C(v30, v32, v34);
  swift_bridgeObjectRelease();
  v193 = (id)objc_opt_self();
  v270 = MEMORY[0x24BD189B8](objc_msgSend(v193, sel_secondaryLabelColor));
  v200 = sub_24A77AF54();
  v201 = v42;
  v208 = v43;
  LOBYTE(v32) = v44;
  sub_24A64596C(v37, v39, v41 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v206 = sub_24A77ACA8();
  sub_24A77A390();
  v191 = v46;
  v192 = v45;
  v189 = v48;
  v190 = v47;
  v207 = sub_24A77ACFC();
  sub_24A77A390();
  v198 = v50;
  v199 = v49;
  v196 = v52;
  v197 = v51;
  v223 = v32 & 1;
  v219 = 0;
  v216 = 0;
  v53 = (id)qword_2544D6158;
  v54 = sub_24A77856C();
  v56 = v55;

  v270 = v54;
  v271 = v56;
  type metadata accessor for TrainingLoadEffortExplanationView();
  swift_retain();
  swift_retain();
  v57 = v174;
  sub_24A77B518();
  LOBYTE(v53) = sub_24A77ACA8();
  sub_24A77A390();
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v175;
  v66 = v176;
  v68 = (uint64_t)v177;
  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v177, v57, v176);
  v69 = v68 + *(int *)(v172 + 36);
  *(_BYTE *)v69 = (_BYTE)v53;
  *(_QWORD *)(v69 + 8) = v59;
  *(_QWORD *)(v69 + 16) = v61;
  *(_QWORD *)(v69 + 24) = v63;
  *(_QWORD *)(v69 + 32) = v65;
  *(_BYTE *)(v69 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v66);
  LOBYTE(v53) = sub_24A77ACFC();
  sub_24A77A390();
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v78 = v179;
  sub_24A63CCC0(v68, v179, &qword_257949098);
  v79 = v78 + *(int *)(v173 + 36);
  *(_BYTE *)v79 = (_BYTE)v53;
  *(_QWORD *)(v79 + 8) = v71;
  *(_QWORD *)(v79 + 16) = v73;
  *(_QWORD *)(v79 + 24) = v75;
  *(_QWORD *)(v79 + 32) = v77;
  *(_BYTE *)(v79 + 40) = 0;
  sub_24A63CD04(v68, &qword_257949098);
  sub_24A77AD98();
  v80 = v203;
  v81 = v204;
  v82 = v171;
  v83 = (void (*)(char *, uint64_t, uint64_t))v170;
  ((void (*)(char *, _QWORD, uint64_t))v170)(v203, v171, v204);
  sub_24A77AE88();
  swift_release();
  v194(v80, v81);
  sub_24A77AE04();
  v84 = sub_24A77AE58();
  swift_release();
  v85 = swift_getKeyPath();
  v86 = v182;
  sub_24A63CCC0(v78, v182, &qword_2579490A0);
  v87 = (uint64_t *)(v86 + *(int *)(v178 + 36));
  *v87 = v85;
  v87[1] = v84;
  sub_24A63CD04(v78, &qword_2579490A0);
  v88 = MEMORY[0x24BD189B8](objc_msgSend(v193, sel_secondarySystemGroupedBackgroundColor));
  LOBYTE(v85) = sub_24A77ACB4();
  v89 = v184;
  sub_24A63CCC0(v86, v184, &qword_2579490A8);
  v90 = v89 + *(int *)(v180 + 36);
  *(_QWORD *)v90 = v88;
  *(_BYTE *)(v90 + 8) = v85;
  sub_24A63CD04(v86, &qword_2579490A8);
  v91 = v187;
  v92 = &v187[*(int *)(v186 + 20)];
  v93 = *MEMORY[0x24BDEEB68];
  v94 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 104))(v92, v93, v94);
  __asm { FMOV            V0.2D, #12.0 }
  *v91 = _Q0;
  v100 = (uint64_t)v185;
  v101 = (uint64_t)&v185[*(int *)(v181 + 36)];
  v102 = MEMORY[0x24BDED998];
  sub_24A65FAD0((uint64_t)v91, v101, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v101 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257948130) + 36)) = 256;
  sub_24A63CCC0(v89, v100, &qword_2579490B0);
  sub_24A65FB14((uint64_t)v91, (uint64_t (*)(_QWORD))v102);
  sub_24A63CD04(v89, &qword_2579490B0);
  LOBYTE(v101) = sub_24A77ACA8();
  sub_24A77A390();
  v104 = v103;
  v106 = v105;
  v108 = v107;
  v110 = v109;
  v111 = v211;
  sub_24A63CCC0(v100, v211, &qword_2579490B8);
  v112 = v111 + *(int *)(v183 + 36);
  *(_BYTE *)v112 = v101;
  *(_QWORD *)(v112 + 8) = v104;
  *(_QWORD *)(v112 + 16) = v106;
  *(_QWORD *)(v112 + 24) = v108;
  *(_QWORD *)(v112 + 32) = v110;
  *(_BYTE *)(v112 + 40) = 0;
  sub_24A63CD04(v100, &qword_2579490B8);
  sub_24A67E1E4(v111, v210);
  v113 = (id)qword_2544D6158;
  v114 = sub_24A77856C();
  v116 = v115;

  v270 = v114;
  v271 = v116;
  v117 = sub_24A77AFD8();
  v119 = v118;
  LOBYTE(v89) = v120 & 1;
  sub_24A77AD2C();
  v83(v80, v82, v81);
  sub_24A77AE88();
  swift_release();
  v194(v80, v81);
  v121 = sub_24A77AF84();
  v123 = v122;
  LOBYTE(v83) = v124;
  swift_release();
  LOBYTE(v82) = v83 & 1;
  sub_24A64596C(v117, v119, v89);
  swift_bridgeObjectRelease();
  v270 = MEMORY[0x24BD189B8](objc_msgSend(v193, sel_secondaryLabelColor));
  v125 = sub_24A77AF54();
  v186 = v126;
  v187 = (char *)v125;
  LOBYTE(v83) = v127;
  v193 = v128;
  sub_24A64596C(v121, v123, v82);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v204) = sub_24A77ACA8();
  sub_24A77A390();
  v130 = v129;
  v132 = v131;
  v134 = v133;
  v136 = v135;
  v181 = swift_getKeyPath();
  LODWORD(v185) = sub_24A77ACC0();
  sub_24A77A390();
  v138 = v137;
  v183 = v140;
  v184 = v139;
  v182 = v141;
  v231 = v83 & 1;
  v228 = 0;
  v224 = 0;
  v142 = v209;
  sub_24A65FAD0((uint64_t)v202, v209, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadOnboardingCore);
  LOBYTE(v82) = v223;
  LODWORD(v203) = v223;
  v215[0] = *(_DWORD *)v221;
  *(_DWORD *)((char *)v215 + 3) = *(_DWORD *)&v221[3];
  v214[0] = *(_DWORD *)v220;
  *(_DWORD *)((char *)v214 + 3) = *(_DWORD *)&v220[3];
  LOBYTE(v121) = v219;
  LODWORD(v194) = v219;
  v213[0] = *(_DWORD *)v218;
  *(_DWORD *)((char *)v213 + 3) = *(_DWORD *)&v218[3];
  *(_DWORD *)((char *)v212 + 3) = *(_DWORD *)&v217[3];
  v212[0] = *(_DWORD *)v217;
  LOBYTE(v123) = v216;
  LODWORD(v195) = v216;
  v143 = v211;
  sub_24A63CCC0(v210, v211, &qword_2579490C0);
  LOBYTE(v100) = v231;
  LOBYTE(v119) = v228;
  LODWORD(v180) = v228;
  LOBYTE(v89) = v224;
  v144 = v142;
  v145 = v188;
  sub_24A65FAD0(v144, v188, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadOnboardingCore);
  v146 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2579490C8);
  v147 = (_OWORD *)(v145 + v146[12]);
  *(_QWORD *)&v232 = v200;
  *((_QWORD *)&v232 + 1) = v208;
  LOBYTE(v233) = v82;
  *(_DWORD *)((char *)&v233 + 1) = *(_DWORD *)v222;
  DWORD1(v233) = *(_DWORD *)&v222[3];
  *((_QWORD *)&v233 + 1) = v201;
  *(_QWORD *)&v234 = KeyPath;
  BYTE8(v234) = 1;
  *(_DWORD *)((char *)&v234 + 9) = *(_DWORD *)v221;
  HIDWORD(v234) = *(_DWORD *)&v221[3];
  LOBYTE(v235) = v206;
  *(_DWORD *)((char *)&v235 + 1) = *(_DWORD *)v220;
  DWORD1(v235) = *(_DWORD *)&v220[3];
  *((_QWORD *)&v235 + 1) = v192;
  *(_QWORD *)&v236 = v191;
  *((_QWORD *)&v236 + 1) = v190;
  *(_QWORD *)&v237 = v189;
  BYTE8(v237) = v121;
  *(_DWORD *)((char *)&v237 + 9) = *(_DWORD *)v218;
  HIDWORD(v237) = *(_DWORD *)&v218[3];
  LOBYTE(v238) = v207;
  DWORD1(v238) = *(_DWORD *)&v217[3];
  *(_DWORD *)((char *)&v238 + 1) = *(_DWORD *)v217;
  *((_QWORD *)&v238 + 1) = v199;
  *(_QWORD *)&v239[0] = v198;
  *((_QWORD *)&v239[0] + 1) = v197;
  *(_QWORD *)&v239[1] = v196;
  BYTE8(v239[1]) = v123;
  v148 = v236;
  v149 = v233;
  *v147 = v232;
  v147[1] = v149;
  v150 = v235;
  v147[2] = v234;
  v147[3] = v150;
  v151 = v237;
  v152 = v238;
  *(_OWORD *)((char *)v147 + 121) = *(_OWORD *)((char *)v239 + 9);
  v153 = v239[0];
  v147[6] = v152;
  v147[7] = v153;
  v147[4] = v148;
  v147[5] = v151;
  sub_24A63CCC0(v143, v145 + v146[16], &qword_2579490C0);
  v154 = (_OWORD *)(v145 + v146[20]);
  v156 = v186;
  v155 = v187;
  *(_QWORD *)&v240 = v187;
  *((_QWORD *)&v240 + 1) = v186;
  LOBYTE(v241) = v100;
  *(_DWORD *)((char *)&v241 + 1) = *(_DWORD *)v230;
  DWORD1(v241) = *(_DWORD *)&v230[3];
  v157 = v193;
  *((_QWORD *)&v241 + 1) = v193;
  LOBYTE(v242) = v204;
  *(_DWORD *)((char *)&v242 + 1) = *(_DWORD *)v229;
  DWORD1(v242) = *(_DWORD *)&v229[3];
  *((_QWORD *)&v242 + 1) = v130;
  *(_QWORD *)&v243 = v132;
  *((_QWORD *)&v243 + 1) = v134;
  *(_QWORD *)&v244 = v136;
  BYTE8(v244) = v119;
  *(_DWORD *)((char *)&v244 + 9) = *(_DWORD *)v227;
  HIDWORD(v244) = *(_DWORD *)&v227[3];
  v158 = v181;
  *(_QWORD *)&v245 = v181;
  BYTE8(v245) = 1;
  *(_DWORD *)((char *)&v245 + 9) = *(_DWORD *)v226;
  HIDWORD(v245) = *(_DWORD *)&v226[3];
  LOBYTE(v143) = (_BYTE)v185;
  LOBYTE(v246) = (_BYTE)v185;
  *(_DWORD *)((char *)&v246 + 1) = *(_DWORD *)v225;
  DWORD1(v246) = *(_DWORD *)&v225[3];
  *((_QWORD *)&v246 + 1) = v138;
  v160 = v183;
  v159 = v184;
  *(_QWORD *)&v247[0] = v184;
  *((_QWORD *)&v247[0] + 1) = v183;
  v161 = v182;
  *(_QWORD *)&v247[1] = v182;
  BYTE8(v247[1]) = v89;
  v162 = v240;
  v163 = v241;
  v164 = v243;
  v154[2] = v242;
  v154[3] = v164;
  *v154 = v162;
  v154[1] = v163;
  v165 = v244;
  v166 = v245;
  *(_OWORD *)((char *)v154 + 121) = *(_OWORD *)((char *)v247 + 9);
  v167 = v247[0];
  v154[6] = v246;
  v154[7] = v167;
  v154[4] = v165;
  v154[5] = v166;
  sub_24A67E22C((uint64_t)&v232);
  sub_24A67E278((uint64_t)&v240);
  sub_24A63CD04(v210, &qword_2579490C0);
  sub_24A65FB14((uint64_t)v202, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadOnboardingCore);
  v248[0] = v155;
  v248[1] = v156;
  v249 = v100;
  *(_DWORD *)v250 = *(_DWORD *)v230;
  *(_DWORD *)&v250[3] = *(_DWORD *)&v230[3];
  v251 = v157;
  v252 = v204;
  *(_DWORD *)v253 = *(_DWORD *)v229;
  *(_DWORD *)&v253[3] = *(_DWORD *)&v229[3];
  v254 = v130;
  v255 = v132;
  v256 = v134;
  v257 = v136;
  v258 = v180;
  *(_DWORD *)v259 = *(_DWORD *)v227;
  *(_DWORD *)&v259[3] = *(_DWORD *)&v227[3];
  v260 = v158;
  v261 = 1;
  *(_DWORD *)v262 = *(_DWORD *)v226;
  *(_DWORD *)&v262[3] = *(_DWORD *)&v226[3];
  v263 = v143;
  *(_DWORD *)v264 = *(_DWORD *)v225;
  *(_DWORD *)&v264[3] = *(_DWORD *)&v225[3];
  v265 = v138;
  v266 = v159;
  v267 = v160;
  v268 = v161;
  v269 = v89;
  sub_24A67E2C8((uint64_t)v248);
  sub_24A63CD04(v211, &qword_2579490C0);
  v270 = v200;
  v271 = v208;
  v272 = (char)v203;
  *(_DWORD *)v273 = *(_DWORD *)v222;
  *(_DWORD *)&v273[3] = *(_DWORD *)&v222[3];
  v274 = v201;
  v275 = KeyPath;
  v276 = 1;
  *(_DWORD *)v277 = v215[0];
  *(_DWORD *)&v277[3] = *(_DWORD *)((char *)v215 + 3);
  v278 = v206;
  *(_DWORD *)v279 = v214[0];
  *(_DWORD *)&v279[3] = *(_DWORD *)((char *)v214 + 3);
  v280 = v192;
  v281 = v191;
  v282 = v190;
  v283 = v189;
  v284 = (char)v194;
  *(_DWORD *)&v285[3] = *(_DWORD *)((char *)v213 + 3);
  *(_DWORD *)v285 = v213[0];
  v286 = v207;
  *(_DWORD *)&v287[3] = *(_DWORD *)((char *)v212 + 3);
  *(_DWORD *)v287 = v212[0];
  v288 = v199;
  v289 = v198;
  v290 = v197;
  v291 = v196;
  v292 = v195;
  sub_24A67E318((uint64_t)&v270);
  return sub_24A65FB14(v209, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadOnboardingCore);
}

uint64_t sub_24A67D798()
{
  return sub_24A77A864();
}

uint64_t sub_24A67D7B8()
{
  return sub_24A77A864();
}

uint64_t sub_24A67D7D8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24A67D7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A67C618(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24A67D804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrainingLoadEffortExplanationView() - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_24A77A4E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + ((v1 + 16) & ~v1), v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A67D8D4(uint64_t a1, uint64_t a2)
{
  uint64_t EffortExplanationView;

  EffortExplanationView = type metadata accessor for TrainingLoadEffortExplanationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(EffortExplanationView - 8) + 32))(a2, a1, EffortExplanationView);
  return a2;
}

uint64_t sub_24A67D918()
{
  uint64_t v0;
  uint64_t EffortExplanationView;
  uint64_t v2;

  EffortExplanationView = type metadata accessor for TrainingLoadEffortExplanationView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(EffortExplanationView - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(EffortExplanationView + 20) + ((v2 + 16) & ~v2)))();
}

uint64_t sub_24A67D95C()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for TrainingLoadEffortExplanationView(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77A4E0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = a3[6];
    v11 = (_QWORD *)((char *)v4 + v9);
    v12 = (_QWORD *)((char *)a2 + v9);
    v14 = *v12;
    v13 = v12[1];
    LOBYTE(v12) = *((_BYTE *)a2 + v10);
    *v11 = v14;
    v11[1] = v13;
    *((_BYTE *)v4 + v10) = (_BYTE)v12;
    v15 = a3[7];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v16[16] = v17[16];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TrainingLoadEffortExplanationView(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_24A77A4E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for TrainingLoadEffortExplanationView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A77A4E0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v7);
  v10 = (_QWORD *)((char *)a2 + v7);
  v12 = *v10;
  v11 = v10[1];
  LOBYTE(v10) = *((_BYTE *)a2 + v8);
  *v9 = v12;
  v9[1] = v11;
  *((_BYTE *)a1 + v8) = (_BYTE)v10;
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v14[16] = v15[16];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TrainingLoadEffortExplanationView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  if (a1 != a2)
  {
    sub_24A63CD04((uint64_t)a1, &qword_257946D20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_24A77A4E0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  v12[16] = v13[16];
  return a1;
}

char *initializeWithTake for TrainingLoadEffortExplanationView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_24A77A4E0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  a1[v8] = a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  return a1;
}

char *assignWithTake for TrainingLoadEffortExplanationView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  if (a1 != a2)
  {
    sub_24A63CD04((uint64_t)a1, &qword_257946D20);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77A4E0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  swift_release();
  v8 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)v10;
  swift_release();
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  v9[16] = v10[16];
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadEffortExplanationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A67DF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FD8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadEffortExplanationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A67DF98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FD8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_24A67E014()
{
  unint64_t v0;

  sub_24A66AAC8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_24A67E0A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949078;
  if (!qword_257949078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F48);
    v2[0] = sub_24A67E10C();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949078);
  }
  return result;
}

unint64_t sub_24A67E10C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949080;
  if (!qword_257949080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F40);
    v2[0] = sub_24A63CFF0(&qword_257949088, &qword_257948FB0, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A63CFF0(&qword_257946EB0, &qword_257946EB8, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949080);
  }
  return result;
}

uint64_t sub_24A67E1A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A67E1CC()
{
  uint64_t v0;

  return sub_24A70E1D4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24A67E1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579490C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A67E22C(uint64_t a1)
{
  sub_24A6436C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_24A67E278(uint64_t a1)
{
  sub_24A6436C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_24A67E2C8(uint64_t a1)
{
  sub_24A64596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A67E318(uint64_t a1)
{
  sub_24A64596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

BOOL static LocationDisambiguation.Intent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LocationDisambiguation.Intent.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t LocationDisambiguation.Intent.hashValue.getter()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

int *LocationDisambiguation.init(workoutConfiguration:intent:onDisambiguationComplete:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  char v9;
  int *result;
  uint64_t v11;
  _QWORD *v12;

  v9 = *a2;
  *a5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  swift_storeEnumTagMultiPayload();
  result = (int *)type metadata accessor for LocationDisambiguation();
  v11 = result[6];
  v12 = (uint64_t *)((char *)a5 + result[7]);
  *(uint64_t *)((char *)a5 + result[5]) = a1;
  *((_BYTE *)a5 + v11) = v9;
  *v12 = a3;
  v12[1] = a4;
  return result;
}

uint64_t LocationDisambiguation.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579490D0);
  sub_24A63CFF0(&qword_2579490D8, &qword_2579490D0, MEMORY[0x24BDF5428]);
  return sub_24A77AED0();
}

uint64_t sub_24A67E4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  unsigned int v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void *v43;
  uint64_t v44;
  unsigned int v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v69[2];
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  char v93;
  _BYTE v94[7];
  __int128 v95;
  __int128 v96;
  char v97;
  char v98;
  _BYTE v99[7];
  char v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v82 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949190);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v74 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v73 = (char *)v69 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)v69 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)v69 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949198);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v80 = (uint64_t)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v79 = (uint64_t)v69 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v77 = (char *)v69 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v69 - v19;
  v21 = type metadata accessor for LocationDisambiguation();
  v22 = (void *)sub_24A779130();
  v23 = objc_msgSend(v22, sel_requiresLocationDisambiguation);

  v81 = v3;
  v78 = v4;
  v75 = a1;
  v76 = v20;
  v72 = v21;
  if (v23)
  {
    if (*(_BYTE *)(a1 + *(int *)(v21 + 24)) == 1)
    {
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v24 = (id)qword_2544D6158;
      v25 = sub_24A77856C();
      v27 = v26;

    }
    else
    {
      v25 = 0;
      v27 = 0xE000000000000000;
    }
    *(_QWORD *)&v83 = v25;
    *((_QWORD *)&v83 + 1) = v27;
    sub_24A645928();
    v29 = sub_24A77AFD8();
    v31 = v30;
    v33 = v32;
    v35 = v34 & 1;
    KeyPath = swift_getKeyPath();
    v117 = v29;
    v118 = v31;
    v119 = v35;
    v120 = v33;
    v121 = KeyPath;
    v122 = 1;
    sub_24A77B668();
    sub_24A6421A8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v101, 0.0, 1, 0.0, 1);
    sub_24A64596C(v29, v31, v35);
    swift_release();
    swift_bridgeObjectRelease();
    v37 = sub_24A77ACB4();
    v69[1] = v69;
    v100 = 1;
    v90 = v108;
    v91 = v109;
    v92 = v110;
    v85 = v103;
    v86 = v104;
    v87 = v105;
    v88 = v106;
    v89 = v107;
    v83 = v101;
    v84 = v102;
    v93 = v37;
    *(_DWORD *)v94 = v111;
    *(_DWORD *)&v94[3] = *(_DWORD *)((char *)&v111 + 3);
    v95 = 0u;
    v96 = 0u;
    v97 = 1;
    MEMORY[0x24BDAC7A8](v37);
    v38 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579491A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948830);
    sub_24A665CEC(&qword_2579491B0, &qword_2579491A8, (uint64_t (*)(void))sub_24A670124, MEMORY[0x24BDECC60]);
    sub_24A63CFF0(&qword_257948888, &qword_257948830, MEMORY[0x24BDF5428]);
    v39 = v71;
    a1 = v38;
    sub_24A77B608();
    v40 = v70;
    v41 = v78;
    v42 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
    v3 = v81;
    v42(v70, v39, v81);
    v20 = v76;
    v42(v76, v40, v3);
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v28(v20, 0, 1, v3);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v28(v20, 1, 1, v3);
  }
  v43 = (void *)sub_24A779130();
  v44 = a1;
  v45 = objc_msgSend(v43, sel_requiresSwimmingLocationDisambiguation);

  if (v45)
  {
    if (*(_BYTE *)(v44 + *(int *)(v72 + 24)) == 1)
    {
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v46 = (id)qword_2544D6158;
      v47 = sub_24A77856C();
      v49 = v48;

    }
    else
    {
      v47 = 0;
      v49 = 0xE000000000000000;
    }
    *(_QWORD *)&v83 = v47;
    *((_QWORD *)&v83 + 1) = v49;
    sub_24A645928();
    v51 = sub_24A77AFD8();
    v53 = v52;
    v55 = v54;
    v57 = v56 & 1;
    v58 = swift_getKeyPath();
    v111 = v51;
    v112 = v53;
    v113 = v57;
    v114 = v55;
    v115 = v58;
    v116 = 1;
    sub_24A77B668();
    sub_24A6421A8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v101, 0.0, 1, 0.0, 1);
    sub_24A64596C(v51, v53, v57);
    swift_release();
    swift_bridgeObjectRelease();
    v59 = sub_24A77ACB4();
    v98 = 1;
    v90 = v108;
    v91 = v109;
    v92 = v110;
    v85 = v103;
    v86 = v104;
    v87 = v105;
    v88 = v106;
    v89 = v107;
    v83 = v101;
    v84 = v102;
    v93 = v59;
    *(_DWORD *)v94 = *(_DWORD *)v99;
    *(_DWORD *)&v94[3] = *(_DWORD *)&v99[3];
    v95 = 0u;
    v96 = 0u;
    v97 = 1;
    MEMORY[0x24BDAC7A8](v59);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579491A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948830);
    sub_24A665CEC(&qword_2579491B0, &qword_2579491A8, (uint64_t (*)(void))sub_24A670124, MEMORY[0x24BDECC60]);
    sub_24A63CFF0(&qword_257948888, &qword_257948830, MEMORY[0x24BDF5428]);
    v60 = v74;
    sub_24A77B608();
    v61 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
    v62 = v73;
    v63 = v81;
    v61(v73, v60, v81);
    v50 = (uint64_t)v77;
    v61(v77, v62, v63);
    v28((char *)v50, 0, 1, v63);
    v20 = v76;
  }
  else
  {
    v50 = (uint64_t)v77;
    v28(v77, 1, 1, v3);
  }
  v64 = v79;
  sub_24A6802CC((uint64_t)v20, v79);
  v65 = v80;
  sub_24A6802CC(v50, v80);
  v66 = v82;
  sub_24A6802CC(v64, v82);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579491A0);
  sub_24A6802CC(v65, v66 + *(int *)(v67 + 48));
  sub_24A63CD04(v50, &qword_257949198);
  sub_24A63CD04((uint64_t)v20, &qword_257949198);
  sub_24A63CD04(v65, &qword_257949198);
  return sub_24A63CD04(v64, &qword_257949198);
}

uint64_t sub_24A67ED78@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a2;
  v3 = type metadata accessor for LocationDisambiguation();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948838);
  v31 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v28 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v29 = (char *)&v28 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - v14;
  sub_24A68032C(a1, (uint64_t)v6);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  sub_24A680374((uint64_t)v6, v17 + v16);
  v35 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579486D8);
  sub_24A670124();
  sub_24A77B4B8();
  sub_24A68032C(a1, (uint64_t)v6);
  v18 = swift_allocObject();
  sub_24A680374((uint64_t)v6, v18 + v16);
  v34 = a1;
  v19 = v29;
  sub_24A77B4B8();
  v20 = v30;
  v21 = v31;
  v22 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v22(v30, v15, v7);
  v23 = v32;
  v22(v32, v19, v7);
  v24 = v33;
  v22(v33, v20, v7);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948880);
  v22(&v24[*(int *)(v25 + 48)], v23, v7);
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v19, v7);
  v26(v15, v7);
  v26(v23, v7);
  return ((uint64_t (*)(char *, uint64_t))v26)(v20, v7);
}

uint64_t sub_24A67F010(uint64_t a1, char a2, void (*a3)(char *, uint64_t), char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD aBlock[7];

  v58 = a3;
  v55 = a1;
  v56 = a4 & 1;
  v57 = a2 & 1;
  v5 = sub_24A77A018();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A77B710();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A77B728();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocationDisambiguation();
  v47 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v47 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v59 = sub_24A77B740();
  v46 = *(_QWORD *)(v59 - 8);
  v13 = MEMORY[0x24BDAC7A8](v59);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v48 = (char *)&v42 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_24A77A4E0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A63EC2C((uint64_t)v23);
  sub_24A77A4D4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (*(_BYTE *)(v4 + *(int *)(v11 + 24)) == 1)
  {
    sub_24A778848();
    v24 = sub_24A778854();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v19, 0, 1, v24);
  }
  else
  {
    v25 = sub_24A778854();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v19, 1, 1, v25);
  }
  v26 = sub_24A779184();
  if (v26)
  {
    v27 = (void *)v26;
    sub_24A680434();
    v28 = (void *)sub_24A77BCE0();
    sub_24A77B734();
    v29 = v48;
    MEMORY[0x24BD18D60](v15, 0.3);
    v58 = *(void (**)(char *, uint64_t))(v46 + 8);
    v58(v15, v59);
    sub_24A68032C(v4, (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    v30 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v31 = swift_allocObject();
    sub_24A680374((uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30);
    *(_QWORD *)(v31 + ((v12 + v30 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
    aBlock[4] = sub_24A680550;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24A70DDB8;
    aBlock[3] = &block_descriptor;
    v32 = _Block_copy(aBlock);
    v33 = v27;
    swift_release();
    v34 = v49;
    sub_24A77B71C();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_24A6805C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
    sub_24A63CFF0((unint64_t *)&qword_2579491D0, &qword_2579491C8, MEMORY[0x24BEE12C8]);
    v35 = v52;
    v36 = v54;
    sub_24A77BEB4();
    MEMORY[0x24BD192DC](v29, v34, v35, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v51);
    v58(v29, v59);
  }
  else
  {
    v37 = v43;
    sub_24A779A24();
    v38 = sub_24A77A00C();
    v39 = sub_24A77BC5C();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_24A635000, v38, v39, "Unable to start workout for managed configuration, disambiguated workout configuration was nil", v40, 2u);
      MEMORY[0x24BD1A2B4](v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v45);
  }
  return sub_24A63CD04((uint64_t)v19, &qword_257948898);
}

uint64_t sub_24A67F534@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a2;
  v3 = type metadata accessor for LocationDisambiguation();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948838);
  v31 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v28 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v29 = (char *)&v28 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - v14;
  sub_24A68032C(a1, (uint64_t)v6);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  sub_24A680374((uint64_t)v6, v17 + v16);
  v35 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579486D8);
  sub_24A670124();
  sub_24A77B4B8();
  sub_24A68032C(a1, (uint64_t)v6);
  v18 = swift_allocObject();
  sub_24A680374((uint64_t)v6, v18 + v16);
  v34 = a1;
  v19 = v29;
  sub_24A77B4B8();
  v20 = v30;
  v21 = v31;
  v22 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v22(v30, v15, v7);
  v23 = v32;
  v22(v32, v19, v7);
  v24 = v33;
  v22(v33, v20, v7);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948880);
  v22(&v24[*(int *)(v25 + 48)], v23, v7);
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v19, v7);
  v26(v15, v7);
  v26(v23, v7);
  return ((uint64_t (*)(char *, uint64_t))v26)(v20, v7);
}

double sub_24A67F7CC@<D0>(_OWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  double result;
  __int128 v19;
  _OWORD v20[10];
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t KeyPath;
  char v26;

  type metadata accessor for LocationDisambiguation();
  v2 = (void *)sub_24A779130();
  v3 = (void *)sub_24A77BD94();

  v4 = objc_msgSend(v3, sel_localizedName);
  v5 = sub_24A77B9B0();
  v7 = v6;

  *(_QWORD *)&v20[0] = v5;
  *((_QWORD *)&v20[0] + 1) = v7;
  sub_24A645928();
  v8 = sub_24A77AFD8();
  v10 = v9;
  v12 = v11 & 1;
  v21 = v8;
  v22 = v9;
  v23 = v11 & 1;
  v24 = v13;
  KeyPath = swift_getKeyPath();
  v26 = 1;
  sub_24A77B668();
  sub_24A6421A8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v20, 0.0, 1, 0.0, 1);

  sub_24A64596C(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  v14 = v20[7];
  a1[6] = v20[6];
  a1[7] = v14;
  v15 = v20[9];
  a1[8] = v20[8];
  a1[9] = v15;
  v16 = v20[3];
  a1[2] = v20[2];
  a1[3] = v16;
  v17 = v20[5];
  a1[4] = v20[4];
  a1[5] = v17;
  result = *(double *)v20;
  v19 = v20[1];
  *a1 = v20[0];
  a1[1] = v19;
  return result;
}

uint64_t sub_24A67F968()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579490D0);
  sub_24A63CFF0(&qword_2579490D8, &qword_2579490D0, MEMORY[0x24BDF5428]);
  return sub_24A77AED0();
}

uint64_t type metadata accessor for LocationDisambiguation()
{
  uint64_t result;

  result = qword_257949140;
  if (!qword_257949140)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A67FA20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A67E4F0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_24A67FA2C()
{
  unint64_t result;

  result = qword_2579490E0;
  if (!qword_2579490E0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for LocationDisambiguation.Intent, &type metadata for LocationDisambiguation.Intent);
    atomic_store(result, (unint64_t *)&qword_2579490E0);
  }
  return result;
}

uint64_t sub_24A67FA70()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for LocationDisambiguation(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77A4E0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = a3[6];
    v11 = *(void **)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v11;
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    v12 = a3[7];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = *v14;
    v16 = v11;
    if (v15)
    {
      v17 = v14[1];
      *v13 = v15;
      v13[1] = v17;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
    }
  }
  return a1;
}

void destroy for LocationDisambiguation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_24A77A4E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  if (*(_QWORD *)(a1 + *(int *)(a2 + 28)))
    swift_release();
}

_QWORD *initializeWithCopy for LocationDisambiguation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A77A4E0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)((char *)a2 + v7);
  *(_QWORD *)((char *)a1 + v7) = v9;
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *v12;
  v14 = v9;
  if (v13)
  {
    v15 = v12[1];
    *v11 = v13;
    v11[1] = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  return a1;
}

_QWORD *assignWithCopy for LocationDisambiguation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_24A63CD04((uint64_t)a1, &qword_257946D20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_24A77A4E0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = *(void **)((char *)a2 + v7);
  v9 = *(void **)((char *)a1 + v7);
  *(_QWORD *)((char *)a1 + v7) = v8;
  v10 = v8;

  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = *(_QWORD *)((char *)a1 + v11);
  v15 = *v13;
  if (!v14)
  {
    if (v15)
    {
      v17 = v13[1];
      *v12 = v15;
      v12[1] = v17;
      swift_retain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    return a1;
  }
  if (!v15)
  {
    swift_release();
    goto LABEL_12;
  }
  v16 = v13[1];
  *v12 = v15;
  v12[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for LocationDisambiguation(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_24A77A4E0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  a1[v8] = a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)v11;
  if (*(_QWORD *)v11)
  {
    v13 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
  }
  return a1;
}

char *assignWithTake for LocationDisambiguation(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_24A63CD04((uint64_t)a1, &qword_257946D20);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77A4E0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = *(void **)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];

  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  if (!*(_QWORD *)&a1[v10])
  {
    if (v13)
    {
      v15 = *((_QWORD *)v12 + 1);
      *(_QWORD *)v11 = v13;
      *((_QWORD *)v11 + 1) = v15;
      return a1;
    }
LABEL_11:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    return a1;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_11;
  }
  v14 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = v13;
  *((_QWORD *)v11 + 1) = v14;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationDisambiguation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A680044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FD8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationDisambiguation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6800D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FD8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_24A68014C()
{
  unint64_t v0;

  sub_24A66AAC8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for LocationDisambiguation.Intent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A680220 + 4 * byte_24A781235[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A680254 + 4 * byte_24A781230[v4]))();
}

uint64_t sub_24A680254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A68025C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A680264);
  return result;
}

uint64_t sub_24A680270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A680278);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A68027C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A680284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationDisambiguation.Intent()
{
  return &type metadata for LocationDisambiguation.Intent;
}

uint64_t sub_24A6802A0()
{
  return sub_24A63CFF0(&qword_257949180, &qword_257949188, MEMORY[0x24BDF1A30]);
}

uint64_t sub_24A6802CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A68031C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_24A67F534(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24A680324@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_24A67ED78(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24A68032C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationDisambiguation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A680374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationDisambiguation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6803B8()
{
  return sub_24A68072C(2, 0, 0, 1);
}

double sub_24A6803CC@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A67F7CC(a1);
}

uint64_t sub_24A6803F8()
{
  return sub_24A68072C(3, 0, 0, 1);
}

double sub_24A68040C@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A67F7CC(a1);
}

unint64_t sub_24A680434()
{
  unint64_t result;

  result = qword_2579491B8;
  if (!qword_2579491B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2579491B8);
  }
  return result;
}

uint64_t sub_24A680470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for LocationDisambiguation();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A77A4E0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }

  if (*(_QWORD *)(v5 + *(int *)(v1 + 28)))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_24A680550()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  uint64_t (**v4)(_QWORD);

  result = type metadata accessor for LocationDisambiguation();
  v2 = *(_QWORD *)(result - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (uint64_t (**)(_QWORD))(v0 + *(int *)(result + 28) + v3);
  if (*v4)
    return (*v4)(*(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_24A6805C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2579491C0;
  if (!qword_2579491C0)
  {
    v1 = sub_24A77B710();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2579491C0);
  }
  return result;
}

uint64_t sub_24A680614()
{
  return sub_24A68072C(0, 1, (void (*)(char *, uint64_t))1, 0);
}

double sub_24A680628@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A67F7CC(a1);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for LocationDisambiguation();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_24A77A4E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }

  if (*(_QWORD *)(v4 + *(int *)(v1 + 28)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A680718()
{
  return sub_24A68072C(0, 1, (void (*)(char *, uint64_t))2, 0);
}

uint64_t sub_24A68072C(uint64_t a1, char a2, void (*a3)(char *, uint64_t), char a4)
{
  type metadata accessor for LocationDisambiguation();
  return sub_24A67F010(a1, a2, a3, a4);
}

double sub_24A680794@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A67F7CC(a1);
}

uint64_t WorkoutStepRow.init(step:formattingManager:referenceStep:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  sub_24A779310();
  sub_24A63C880(&qword_257946E28, (uint64_t (*)(uint64_t))MEMORY[0x24BEC58E0], MEMORY[0x24BEC58D0]);
  result = sub_24A77A57C();
  *a3 = result;
  a3[1] = v7;
  a3[2] = a1;
  a3[3] = a2;
  return result;
}

void WorkoutStepRow.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  void *v19;
  SEL *v20;
  SEL *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = sub_24A779A6C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - v8;
  v10 = *(void **)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  swift_retain();
  v12 = WorkoutStep.displayString.getter();
  v35 = v13;
  v36 = v12;
  swift_release();
  swift_retain();
  v14 = (void *)sub_24A7792F8();
  swift_release();
  v15 = NLSessionActivityGoal.intervalDisplayString(formattingManager:)(v10);
  v33 = v16;
  v34 = v15;

  swift_retain();
  sub_24A779304();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v17 == *MEMORY[0x24BEC6070]
    || v17 == *MEMORY[0x24BEC6068]
    || v17 == *MEMORY[0x24BEC6078]
    || v17 == *MEMORY[0x24BEC6080])
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    v18 = sub_24A77B3EC();
    swift_retain();
    v19 = (void *)sub_24A7792F8();
    swift_release();
    if ((sub_24A77BD58() & 1) != 0)
      v20 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
    else
      v20 = _HKWorkoutGoalType.color.getter((uint64_t)objc_msgSend(v19, sel_goalTypeIdentifier));
    v21 = v20;

    v22 = MEMORY[0x24BD189B8](v21);
    swift_retain();
    swift_retain_n();
    v23 = v10;
    v24 = sub_24A7792C8();
    v26 = v25;
    swift_release();
    if (v26)
    {
      v27 = sub_24A77B3EC();
      swift_release();

      swift_release();
      if (v11)
      {
LABEL_10:
        v28 = (void *)sub_24A7792F8();
        v29 = NLSessionActivityGoal.intervalDisplayString(formattingManager:)(v23);
        v11 = v30;

LABEL_13:
        v31 = v35;
        *(_QWORD *)a1 = v36;
        *(_QWORD *)(a1 + 8) = v31;
        v32 = v33;
        *(_QWORD *)(a1 + 16) = v34;
        *(_QWORD *)(a1 + 24) = v32;
        *(_QWORD *)(a1 + 32) = v18;
        *(_QWORD *)(a1 + 40) = v22;
        *(_QWORD *)(a1 + 48) = v27;
        *(_QWORD *)(a1 + 56) = v24;
        *(_QWORD *)(a1 + 64) = v26;
        *(_BYTE *)(a1 + 72) = 0;
        *(_QWORD *)(a1 + 80) = v29;
        *(_QWORD *)(a1 + 88) = v11;
        return;
      }
    }
    else
    {
      swift_release();

      swift_release();
      v27 = 0;
      v24 = 0;
      if (v11)
        goto LABEL_10;
    }
    v29 = 0;
    goto LABEL_13;
  }
  sub_24A77C01C();
  __break(1u);
}

uint64_t WorkoutStep.displayString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12[5];

  v0 = sub_24A779A6C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A779340();
  v12[3] = v4;
  v12[4] = sub_24A63C880((unint64_t *)&qword_257946FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5928], MEMORY[0x24BEC5918]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEC5920], v4);
  LOBYTE(v4) = sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if ((v4 & 1) == 0)
    goto LABEL_7;
  v6 = sub_24A77928C();
  if (!v7)
    goto LABEL_7;
  v8 = v6;
  v9 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_24A779304();
    v8 = sub_24A779A54();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v8;
}

uint64_t WorkoutSkippingStepRow.init(stepType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t WorkoutSkippingStepRow.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_24A779A6C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A779A54();
  v17 = v8;
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v9 = (id)qword_2544D6158;
  v10 = sub_24A77856C();
  v12 = v11;

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v13 == *MEMORY[0x24BEC6070]
    || v13 == *MEMORY[0x24BEC6068]
    || v13 == *MEMORY[0x24BEC6078]
    || v13 == *MEMORY[0x24BEC6080])
  {
    v14 = sub_24A77B3EC();
    result = sub_24A77B338();
    v16 = v17;
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 40) = result;
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 72) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_QWORD *)(a1 + 88) = 0;
  }
  else
  {
    result = sub_24A77C01C();
    __break(1u);
  }
  return result;
}

uint64_t sub_24A680FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v19;
  uint64_t v20;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_24A77B410();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(_QWORD *)(a1 + 32);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF40B0], v6);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 28), v9, v6);
  *v5 = KeyPath;
  sub_24A63CCC0((uint64_t)v5, (uint64_t)v12 + *(int *)(v10 + 36), &qword_2579492E8);
  *v12 = v20;
  swift_retain_n();
  sub_24A63CD04((uint64_t)v5, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_24A682830((uint64_t)&v20);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = swift_getKeyPath();
  v16 = v19;
  sub_24A63CCC0((uint64_t)v12, v19, &qword_2579492F0);
  v17 = (uint64_t *)(v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257949300) + 36));
  *v17 = v15;
  v17[1] = v14;
  swift_retain();
  return sub_24A63CD04((uint64_t)v12, &qword_2579492F0);
}

uint64_t sub_24A6811E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;

  v65 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949290);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949298);
  MEMORY[0x24BDAC7A8](v60);
  v62 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492A0);
  v7 = MEMORY[0x24BDAC7A8](v61);
  v64 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v59 = (uint64_t)&v52 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v52 - v11;
  v12 = sub_24A77AE70();
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_24A77AD50();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_24A77AEB8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a1;
  v23 = a1[1];
  v66 = *a1;
  v67 = v23;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v24 = sub_24A77AFD8();
  v57 = v25;
  v58 = v24;
  v56 = v26;
  v28 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x24BDF18F0], v19);
  sub_24A77AD44();
  sub_24A77ADF8();
  sub_24A77AE28();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v30 = v53;
  v29 = v54;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v14, *MEMORY[0x24BDF17C8], v54);
  v31 = sub_24A77AE88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v29);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v5 = sub_24A77A930();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492A8);
  v34 = v55;
  sub_24A68168C(v55, (uint64_t)&v5[*(int *)(v33 + 44)]);
  LOBYTE(v34) = *((_BYTE *)v34 + 72);
  v35 = sub_24A77AEA0();
  if ((v34 & 1) != 0)
  {
    v36 = sub_24A77AD68();
    swift_release();
    v35 = v36;
  }
  v37 = v56 & 1;
  v38 = swift_getKeyPath();
  v39 = v62;
  sub_24A63CCC0((uint64_t)v5, v62, &qword_257949290);
  v40 = (uint64_t *)(v39 + *(int *)(v60 + 36));
  *v40 = v38;
  v40[1] = v35;
  sub_24A63CD04((uint64_t)v5, &qword_257949290);
  v41 = sub_24A77B38C();
  v42 = swift_getKeyPath();
  v43 = v59;
  sub_24A63CCC0(v39, v59, &qword_257949298);
  v44 = (uint64_t *)(v43 + *(int *)(v61 + 36));
  *v44 = v42;
  v44[1] = v41;
  sub_24A63CD04(v39, &qword_257949298);
  v45 = v63;
  sub_24A63F6C4(v43, v63, &qword_2579492A0);
  v46 = v64;
  sub_24A63CCC0(v45, v64, &qword_2579492A0);
  v47 = v65;
  v49 = v57;
  v48 = v58;
  *v65 = v58;
  v47[1] = v49;
  *((_BYTE *)v47 + 16) = v37;
  v47[3] = v28;
  v47[4] = KeyPath;
  v47[5] = v31;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492B0);
  sub_24A63CCC0(v46, (uint64_t)v47 + *(int *)(v50 + 48), &qword_2579492A0);
  sub_24A6436C4(v48, v49, v37);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_24A63CD04(v45, &qword_2579492A0);
  sub_24A63CD04(v46, &qword_2579492A0);
  sub_24A64596C(v48, v49, v37);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A68168C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492B8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v34[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492C0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v34[-v14];
  v16 = a1[3];
  v37 = a1[2];
  v38 = v16;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v18 = sub_24A77AFD8();
  v20 = v19;
  v21 = v17;
  v36 = v22;
  v23 = a1[6];
  if (v23)
  {
    v35 = v17;
    v26 = a1 + 7;
    v25 = a1[7];
    v24 = v26[1];
    swift_retain();
    swift_bridgeObjectRetain();
    *(_QWORD *)v9 = sub_24A77A930();
    *((_QWORD *)v9 + 1) = 0x3FF0000000000000;
    v9[16] = 0;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492D8);
    sub_24A681978(v23, v25, v24, (uint64_t)&v9[*(int *)(v27 + 44)]);
    sub_24A63CCC0((uint64_t)v9, (uint64_t)v7, &qword_2579492B8);
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E0);
    sub_24A63CCC0((uint64_t)v7, (uint64_t)&v13[*(int *)(v28 + 48)], &qword_2579492B8);
    v21 = v35;
    swift_bridgeObjectRelease();
    swift_release();
    sub_24A63CD04((uint64_t)v9, &qword_2579492B8);
    sub_24A63CD04((uint64_t)v7, &qword_2579492B8);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492C8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v13, 0, 1, v29);
    sub_24A63F6C4((uint64_t)v13, (uint64_t)v15, &qword_2579492C0);
  }
  else
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492C8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 1, 1, v30);
  }
  v31 = v21 & 1;
  sub_24A63CCC0((uint64_t)v15, (uint64_t)v13, &qword_2579492C0);
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v20;
  *(_BYTE *)(a2 + 16) = v31;
  *(_QWORD *)(a2 + 24) = v36;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492D0);
  sub_24A63CCC0((uint64_t)v13, a2 + *(int *)(v32 + 48), &qword_2579492C0);
  sub_24A6436C4(v18, v20, v31);
  swift_bridgeObjectRetain();
  sub_24A63CD04((uint64_t)v15, &qword_2579492C0);
  sub_24A63CD04((uint64_t)v13, &qword_2579492C0);
  sub_24A64596C(v18, v20, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A681978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a2;
  v30 = a3;
  v31 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_24A77B410();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDF40B0], v8);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v5 + 28), v11, v8);
  *v7 = KeyPath;
  sub_24A63CCC0((uint64_t)v7, (uint64_t)v15 + *(int *)(v12 + 36), &qword_2579492E8);
  *v15 = a1;
  swift_retain_n();
  sub_24A63CD04((uint64_t)v7, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  sub_24A63F6C4((uint64_t)v15, (uint64_t)v17, &qword_2579492F0);
  v32 = v29;
  v33 = v30;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v19 = sub_24A77AFD8();
  v21 = v20;
  v23 = v22;
  LOBYTE(v11) = v24 & 1;
  sub_24A63CCC0((uint64_t)v17, (uint64_t)v15, &qword_2579492F0);
  v25 = v31;
  sub_24A63CCC0((uint64_t)v15, v31, &qword_2579492F0);
  v26 = v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579492F8) + 48);
  *(_QWORD *)v26 = v19;
  *(_QWORD *)(v26 + 8) = v21;
  *(_BYTE *)(v26 + 16) = (_BYTE)v11;
  *(_QWORD *)(v26 + 24) = v23;
  sub_24A6436C4(v19, v21, (char)v11);
  swift_bridgeObjectRetain();
  sub_24A63CD04((uint64_t)v17, &qword_2579492F0);
  sub_24A64596C(v19, v21, (char)v11);
  swift_bridgeObjectRelease();
  return sub_24A63CD04((uint64_t)v15, &qword_2579492F0);
}

uint64_t sub_24A681C08@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _OWORD v17[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949270);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949278);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[3];
  v17[2] = v1[2];
  v17[3] = v9;
  v10 = v1[5];
  v17[4] = v1[4];
  v17[5] = v10;
  v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  v12 = sub_24A77A90C();
  sub_24A680FF0((uint64_t)v17, a1);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257949280);
  v14 = a1 + v13[13];
  *(_QWORD *)v5 = sub_24A77AA08();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949288);
  sub_24A6811E8(v17, (uint64_t *)&v5[*(int *)(v15 + 44)]);
  sub_24A63CCC0((uint64_t)v5, (uint64_t)v8, &qword_257949270);
  sub_24A63CD04((uint64_t)v5, &qword_257949270);
  result = sub_24A63F6C4((uint64_t)v8, v14, &qword_257949278);
  *(_QWORD *)(a1 + v13[14]) = 0x4022000000000000;
  *(_QWORD *)(a1 + v13[15]) = v12;
  return result;
}

uint64_t sub_24A681D6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A681D7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for WorkoutStepRow(uint64_t a1)
{
  swift_release();

  return swift_release();
}

_QWORD *initializeWithCopy for WorkoutStepRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_retain();
  v6 = v5;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for WorkoutStepRow(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WorkoutStepRow(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutStepRow()
{
  return &type metadata for WorkoutStepRow;
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for WorkoutSkippingStepRow(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A779A6C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WorkoutSkippingStepRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutSkippingStepRow()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A68206C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WorkoutSkippingStepRow()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6820B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779A6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutSkippingStepRow()
{
  uint64_t result;

  result = qword_257949230;
  if (!qword_257949230)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A682130()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A779A6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24A68219C()
{
  unint64_t result;

  result = qword_257949268;
  if (!qword_257949268)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7814D8, &type metadata for WorkoutStepBaseRow);
    atomic_store(result, (unint64_t *)&qword_257949268);
  }
  return result;
}

uint64_t destroy for WorkoutStepBaseRow(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 48))
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkoutStepBaseRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v8 = a2 + 48;
  v7 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 56);
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v10;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v8 + 16);
  }
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutStepBaseRow(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v4 = (_OWORD *)(a1 + 48);
  v6 = (_OWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 48) = v5;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24A682464(a1 + 48);
      v7 = *(_QWORD *)(a2 + 64);
      *v4 = *v6;
      *(_QWORD *)(a1 + 64) = v7;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v6;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *v4 = v8;
  }
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A682464(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for WorkoutStepBaseRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  v6 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_5;
  if (!v6)
  {
    sub_24A682464(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 48) = v6;
  swift_release();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutStepBaseRow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutStepBaseRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutStepBaseRow()
{
  return &type metadata for WorkoutStepBaseRow;
}

uint64_t destroy for WorkoutStepAlertLabel()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9WorkoutUI21WorkoutStepAlertLabelVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WorkoutStepAlertLabel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for WorkoutStepAlertLabel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutStepAlertLabel()
{
  return &type metadata for WorkoutStepAlertLabel;
}

uint64_t sub_24A682750()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A682770()
{
  return sub_24A77A6E4();
}

uint64_t sub_24A682790()
{
  return sub_24A77A6E4();
}

uint64_t sub_24A6827B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_24A77B410();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24A77A6F0();
}

uint64_t sub_24A682830(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_24A68285C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257949308;
  if (!qword_257949308)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949280);
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for AlignedLeadingAccessoryContentView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_257949308);
  }
  return result;
}

id CatalogWorkoutDetailBridge.__allocating_init(workoutDetail:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail];
  v5 = sub_24A778E60();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id CatalogWorkoutDetailBridge.init(workoutDetail:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail];
  v5 = sub_24A778E60();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

uint64_t CatalogWorkoutDetailBridge.assetLoadStatus.getter()
{
  char v0;
  char v1;

  v0 = sub_24A778E3C();
  if (v1 == -1)
    return 5;
  if ((v1 & 1) != 0)
    return qword_24A781638[v0];
  return 6;
}

id CatalogWorkoutDetailBridge.workout.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  _BYTE *v5;
  id v6;
  objc_super v8;

  v0 = sub_24A778CF8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778E48();
  v4 = (objc_class *)type metadata accessor for CatalogWorkoutBridge();
  v5 = objc_allocWithZone(v4);
  (*(void (**)(_BYTE *, char *, uint64_t))(v1 + 16))(&v5[OBJC_IVAR___SMCatalogWorkout_workout], v3, v0);
  v5[OBJC_IVAR___SMCatalogWorkout_isPartOfAStack] = 0;
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t CatalogWorkoutDetailBridge.completedCount.getter()
{
  return sub_24A778E30();
}

id CatalogWorkoutDetailBridge.mediaTypeRawValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;

  v0 = sub_24A778CF8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778E48();
  v4 = sub_24A778CEC();
  v6 = v5;
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v8 & 1) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v4 + 1);
  sub_24A683100(v4, v6, 0);
  return 0;
}

id CatalogWorkoutDetailBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CatalogWorkoutDetailBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CatalogWorkoutDetailBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static CatalogWorkoutDetailBridge.canonical()()
{
  objc_class *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  objc_super v8;

  v1 = sub_24A778E60();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778E54();
  v5 = objc_allocWithZone(v0);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))((uint64_t)v5 + OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail, v4, v1);
  v8.receiver = v5;
  v8.super_class = v0;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_24A683038@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t result;
  objc_super v10;

  v3 = sub_24A778E60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778E54();
  v7 = objc_allocWithZone(v1);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))((uint64_t)v7 + OBJC_IVAR___SMCatalogWorkoutDetail_workoutDetail, v6, v3);
  v10.receiver = v7;
  v10.super_class = v1;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v8;
  return result;
}

uint64_t sub_24A683100(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_24A683110()
{
  return type metadata accessor for CatalogWorkoutDetailBridge();
}

uint64_t type metadata accessor for CatalogWorkoutDetailBridge()
{
  uint64_t result;

  result = qword_257949338;
  if (!qword_257949338)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A683154()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778E60();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CatalogWorkoutDetailBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CatalogWorkoutDetailBridge.__allocating_init(workoutDetail:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t WorkoutTimeView.init(startDate:showSubseconds:workoutStatePublisher:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath();
  *(_BYTE *)(a3 + 24) = 0;
  v6 = (int *)type metadata accessor for WorkoutTimeView();
  v7 = a3 + v6[6];
  v8 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v6[7];
  *(_BYTE *)(a3 + v9) = 0;
  sub_24A65FA3C(a1, v7);
  *(_BYTE *)(a3 + v9) = a2;
  v10 = (uint64_t *)(a3 + v6[8]);
  sub_24A779208();
  sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
  v11 = sub_24A77A57C();
  v13 = v12;
  result = sub_24A63CD04(a1, &qword_2579478E8);
  *v10 = v11;
  v10[1] = v13;
  return result;
}

uint64_t WorkoutTimeView.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutTimeView();
  return sub_24A63CCC0(v1 + *(int *)(v3 + 24), a1, &qword_2579478E8);
}

uint64_t WorkoutTimeView.startDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutTimeView() + 24);
  return sub_24A685118(a1, v3);
}

uint64_t (*WorkoutTimeView.startDate.modify())(_QWORD)
{
  type metadata accessor for WorkoutTimeView();
  return nullsub_1;
}

uint64_t sub_24A68337C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  v11 = sub_24A778818();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WorkoutTimeView();
  sub_24A63CCC0(v2 + *(int *)(v15 + 24), (uint64_t)v10, &qword_2579478E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_24A63CD04((uint64_t)v10, &qword_2579478E8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a2, a1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    swift_retain();
    sub_24A7791C0();
    swift_release();
    swift_retain();
    sub_24A7791F0();
    swift_release();
    sub_24A778764();
    swift_bridgeObjectRelease();
    sub_24A63CD04((uint64_t)v8, &qword_2579478E8);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t WorkoutTimeView.showSubseconds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutTimeView() + 28));
}

uint64_t WorkoutTimeView.showSubseconds.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WorkoutTimeView();
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*WorkoutTimeView.showSubseconds.modify())(_QWORD)
{
  type metadata accessor for WorkoutTimeView();
  return nullsub_1;
}

uint64_t WorkoutTimeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t KeyPath;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  _OWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  void (*v71)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v98 = a1;
  v97 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v97);
  v96 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_24A77A5DC();
  v94 = *(_QWORD *)(v3 - 8);
  v95 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v93 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WorkoutTimeView();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v82 = *(_QWORD *)(v5 - 8);
  v83 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v80 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_24A77ABC4();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v77 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949348);
  v9 = MEMORY[0x24BDAC7A8](v99);
  v81 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v73 - v11;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949350);
  v89 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v84 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949358);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949360);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_24A778818();
  v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
  v76 = *(_QWORD *)(v16 - 8);
  v18 = v76;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v73 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v73 - v24;
  v92 = (char *)&v73 - v24;
  sub_24A77880C();
  v74 = v1;
  sub_24A68337C((uint64_t)v25, (uint64_t)v23);
  v26 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v86 = v23;
  v26(v20, v23, v16);
  v27 = v77;
  sub_24A77ABB8();
  swift_retain();
  LOBYTE(v18) = sub_24A7791CC();
  swift_release();
  v28 = v78;
  v29 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v30 = v12;
  v75 = v12;
  v31 = v12;
  v32 = v27;
  v33 = v27;
  v34 = v79;
  v29(v31, v32, v79);
  v30[*(int *)(v99 + 36)] = (v18 & 1) == 0;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v34);
  v35 = v80;
  sub_24A65FAD0(v74, v80, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
  v26(v20, v23, v16);
  v36 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  v37 = v76;
  v38 = (v83 + *(unsigned __int8 *)(v76 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  v39 = swift_allocObject();
  sub_24A685270(v35, v39 + v36);
  v40 = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v39 + v38, (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  v41 = (uint64_t)v75;
  sub_24A63CCC0((uint64_t)v75, v81, &qword_257949348);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = sub_24A6852B4;
  *(_QWORD *)(v42 + 24) = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949368);
  sub_24A63CFF0(&qword_257949370, &qword_257949348, (uint64_t)&unk_24A785328);
  sub_24A63CFF0(&qword_257949378, &qword_257949368, MEMORY[0x24BDF4498]);
  v43 = v84;
  sub_24A77A468();
  sub_24A63CD04(v41, &qword_257949348);
  KeyPath = swift_getKeyPath();
  v45 = v89;
  v46 = v85;
  v47 = v43;
  v48 = v91;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v85, v43, v91);
  v49 = &v46[*(int *)(v87 + 36)];
  v50 = (uint64_t)v46;
  *(_WORD *)v49 = 256;
  *((_QWORD *)v49 + 1) = KeyPath;
  v49[16] = 0;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v48);
  v51 = swift_getKeyPath();
  v53 = v93;
  v52 = v94;
  v54 = v95;
  (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v93, *MEMORY[0x24BDED100], v95);
  v55 = (uint64_t)v88;
  v56 = (uint64_t *)&v88[*(int *)(v90 + 36)];
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947688);
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v56 + *(int *)(v57 + 28), v53, v54);
  *v56 = v51;
  sub_24A63CCC0(v50, v55, &qword_257949358);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  sub_24A63CD04(v50, &qword_257949358);
  v58 = v96;
  v59 = &v96[*(int *)(v97 + 20)];
  v60 = *MEMORY[0x24BDEEB68];
  v61 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(v59, v60, v61);
  __asm { FMOV            V0.2D, #5.0 }
  *v58 = _Q0;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949380);
  v68 = v98;
  v69 = v98 + *(int *)(v67 + 36);
  v70 = MEMORY[0x24BDED998];
  sub_24A65FAD0((uint64_t)v58, v69, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_BYTE *)(v69 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579476B0) + 36)) = 0;
  sub_24A63CCC0(v55, v68, &qword_257949360);
  sub_24A65FB14((uint64_t)v58, (uint64_t (*)(_QWORD))v70);
  sub_24A63CD04(v55, &qword_257949360);
  v71 = *(void (**)(char *, uint64_t))(v37 + 8);
  v71(v86, v40);
  return ((uint64_t (*)(char *, uint64_t))v71)(v92, v40);
}

uint64_t sub_24A683C90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;

  *(_QWORD *)a3 = sub_24A77A930();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949470);
  return sub_24A683CF0(a1, a2, a3 + *(int *)(v6 + 44));
}

uint64_t sub_24A683CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  char *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  char *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;

  v121 = a2;
  v136 = a1;
  v134 = a3;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949478);
  v117 = *(_QWORD *)(v119 - 8);
  v3 = MEMORY[0x24BDAC7A8](v119);
  v118 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v116 = (char *)&v108 - v5;
  v114 = sub_24A77ABC4();
  v111 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949348);
  v7 = MEMORY[0x24BDAC7A8](v123);
  v9 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v115 = (char *)&v108 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949480);
  v12 = *(_QWORD *)(v11 - 8);
  v126 = v11;
  v127 = v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v125 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v124 = (char *)&v108 - v15;
  v16 = type metadata accessor for WorkoutTimeView();
  v109 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v112 = (uint64_t)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v129 = (uint64_t)&v108 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949488);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v139 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v108 - v23;
  v25 = sub_24A77A9F0();
  v131 = *(_QWORD *)(v25 - 8);
  v132 = (void (*)(char *, uint64_t, uint64_t))v25;
  MEMORY[0x24BDAC7A8](v25);
  v130 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949490);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v138 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v137 = (uint64_t)&v108 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_24A778818();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v108 - v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  sub_24A77A45C();
  v133 = v16;
  v41 = *(int *)(v16 + 24);
  v42 = v136;
  sub_24A63CCC0(v136 + v41, (uint64_t)v33, &qword_2579478E8);
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
  sub_24A63CD04((uint64_t)v33, &qword_2579478E8);
  v135 = v24;
  v122 = v9;
  v120 = v38;
  v108 = v35;
  if (v43 == 1)
  {
    v44 = *(void (**)(char *, uint64_t))(v35 + 8);
  }
  else
  {
    sub_24A68337C((uint64_t)v40, (uint64_t)v38);
    sub_24A778794();
    v44 = *(void (**)(char *, uint64_t))(v35 + 8);
    v44(v38, v34);
  }
  v128 = v34;
  v44(v40, v34);
  sub_24A779808();
  v45 = *(_QWORD *)(v42 + 16);
  v46 = *(_BYTE *)(v42 + 24);
  sub_24A63BEC0(v45, v46);
  sub_24A63E608(v45, v46, &v140);
  sub_24A63BEDC(v45, v46);
  v140 = sub_24A7797F0();
  v141 = v47;
  sub_24A645928();
  v48 = sub_24A77AFD8();
  v50 = v49;
  v52 = v51 & 1;
  v140 = sub_24A7797FC();
  v141 = v53;
  v54 = sub_24A77AF60();
  v56 = v55;
  v58 = v57;
  v60 = v59;
  sub_24A64596C(v48, v50, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v140 = v54;
  v141 = v56;
  v142 = v58 & 1;
  v143 = v60;
  v61 = v130;
  sub_24A77A9E4();
  v62 = (uint64_t)v138;
  sub_24A77B230();
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v131 + 8))(v61, v132);
  sub_24A64596C(v140, v141, v142);
  swift_bridgeObjectRelease();
  v63 = v137;
  sub_24A63F6C4(v62, v137, &qword_257949490);
  v64 = v133;
  if (*(_BYTE *)(v42 + *(int *)(v133 + 28)) != 1)
  {
    v67 = v129;
    sub_24A65FAD0(v42, v129, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
    v68 = (uint64_t)v135;
    goto LABEL_9;
  }
  v65 = v128;
  v66 = sub_24A77BBC0();
  v67 = v129;
  sub_24A65FAD0(v42, v129, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
  v68 = (uint64_t)v135;
  if ((v66 & 1) != 0)
  {
LABEL_9:
    sub_24A65FB14(v67, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
    goto LABEL_10;
  }
  v69 = *(_QWORD *)v67;
  v70 = *(_BYTE *)(v67 + 8);
  sub_24A63BEC0(*(_QWORD *)v67, v70);
  v71 = sub_24A63EC60(v69, v70);
  sub_24A63BEDC(v69, v70);
  sub_24A65FB14(v67, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
  if ((v71 & 1) != 0)
  {
LABEL_10:
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949498);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v68, 1, 1, v103);
    goto LABEL_11;
  }
  v132 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  v132(v120, v121, v65);
  v72 = v113;
  sub_24A77ABB8();
  v133 = v42 + *(int *)(v64 + 32);
  swift_retain();
  v73 = sub_24A7791CC();
  swift_release();
  v74 = v111;
  v131 = *(_QWORD *)(v111 + 16);
  v75 = (uint64_t)v115;
  v76 = v114;
  ((void (*)(char *, char *, uint64_t))v131)(v115, v72, v114);
  *(_BYTE *)(v75 + *(int *)(v123 + 36)) = (v73 & 1) == 0;
  v130 = *(char **)(v74 + 8);
  ((void (*)(char *, uint64_t))v130)(v72, v76);
  v77 = v112;
  sub_24A65FAD0(v42, v112, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
  v78 = *(unsigned __int8 *)(v109 + 80);
  v111 = ((v78 + 16) & ~v78) + v110;
  v79 = (v78 + 16) & ~v78;
  v129 = v79;
  v110 = v78 | 7;
  v80 = swift_allocObject();
  sub_24A685270(v77, v80 + v79);
  sub_24A63CCC0(v75, (uint64_t)v122, &qword_257949348);
  v81 = swift_allocObject();
  *(_QWORD *)(v81 + 16) = sub_24A686140;
  *(_QWORD *)(v81 + 24) = v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579494A8);
  sub_24A63CFF0(&qword_257949370, &qword_257949348, (uint64_t)&unk_24A785328);
  sub_24A63CFF0(&qword_2579494B0, &qword_2579494A8, MEMORY[0x24BDF4498]);
  v82 = v125;
  v83 = v123;
  sub_24A77A468();
  sub_24A63CD04(v75, &qword_257949348);
  v84 = v124;
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v124, v82, v126);
  v132(v120, v121, v128);
  sub_24A77ABB8();
  swift_retain();
  v85 = sub_24A7791CC();
  swift_release();
  ((void (*)(uint64_t, char *, uint64_t))v131)(v75, v72, v76);
  *(_BYTE *)(v75 + *(int *)(v83 + 36)) = (v85 & 1) == 0;
  ((void (*)(char *, uint64_t))v130)(v72, v76);
  sub_24A65FAD0(v136, v77, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutTimeView);
  v86 = swift_allocObject();
  sub_24A685270(v77, v86 + v129);
  sub_24A63CCC0(v75, (uint64_t)v122, &qword_257949348);
  v87 = swift_allocObject();
  *(_QWORD *)(v87 + 16) = sub_24A68626C;
  *(_QWORD *)(v87 + 24) = v86;
  type metadata accessor for FastDigitView();
  sub_24A63C880(&qword_2579494B8, (uint64_t (*)(uint64_t))type metadata accessor for FastDigitView, (uint64_t)&unk_24A780398);
  v88 = v118;
  v68 = (uint64_t)v135;
  sub_24A77A468();
  sub_24A63CD04(v75, &qword_257949348);
  v89 = v117;
  v90 = v116;
  v91 = v119;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v88, v119);
  v92 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
  v93 = v125;
  v94 = v84;
  v95 = v126;
  v92(v125, v94, v126);
  v96 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  v96(v88, v90, v91);
  v97 = (uint64_t)v139;
  v92(v139, v93, v95);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494C0);
  v96((char *)(v97 + *(int *)(v98 + 48)), v88, v91);
  v99 = *(void (**)(char *, uint64_t))(v89 + 8);
  v62 = (uint64_t)v138;
  v99(v90, v91);
  v100 = *(void (**)(char *, uint64_t))(v127 + 8);
  v100(v124, v95);
  v99(v88, v91);
  v100(v93, v95);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949498);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v97, 0, 1, v101);
  v102 = v97;
  v63 = v137;
  sub_24A63F6C4(v102, v68, &qword_257949488);
LABEL_11:
  sub_24A63CCC0(v63, v62, &qword_257949490);
  v104 = (uint64_t)v139;
  sub_24A63CCC0(v68, (uint64_t)v139, &qword_257949488);
  v105 = v134;
  sub_24A63CCC0(v62, v134, &qword_257949490);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494A0);
  sub_24A63CCC0(v104, v105 + *(int *)(v106 + 48), &qword_257949488);
  sub_24A63CD04(v68, &qword_257949488);
  sub_24A63CD04(v63, &qword_257949490);
  sub_24A63CD04(v104, &qword_257949488);
  return sub_24A63CD04(v62, &qword_257949490);
}

uint64_t sub_24A684934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  *(_QWORD *)a3 = sub_24A77A930();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494D8);
  return sub_24A68498C(a2, a1, a3 + *(int *)(v6 + 44));
}

uint64_t sub_24A68498C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;

  v63 = a2;
  v64 = a1;
  v69 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_257948168);
  MEMORY[0x24BDAC7A8](v3);
  v67 = (uint64_t *)((char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = type metadata accessor for FastDigitView();
  v5 = MEMORY[0x24BDAC7A8](v66);
  v68 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v62 = (uint64_t)&v60 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_24A778818();
  v11 = *(_QWORD *)(v61 - 8);
  v12 = MEMORY[0x24BDAC7A8](v61);
  v60 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v60 - v14;
  v16 = sub_24A7788D8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949490);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v65 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v60 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v60 - v26;
  sub_24A7788A8();
  v28 = sub_24A778860();
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v31 = 46;
  if (v30)
    v31 = v28;
  v32 = 0xE100000000000000;
  if (v30)
    v32 = v30;
  v70 = v31;
  v71 = v32;
  sub_24A645928();
  v33 = sub_24A77AFD8();
  v35 = v34;
  v70 = v33;
  v71 = v34;
  v37 = v36 & 1;
  v72 = v36 & 1;
  v73 = v38;
  sub_24A77B11C();
  v39 = v35;
  v40 = (uint64_t)v27;
  sub_24A64596C(v33, v39, v37);
  swift_bridgeObjectRelease();
  v41 = (uint64_t)v25;
  v42 = v61;
  sub_24A63F6C4(v41, (uint64_t)v27, &qword_257949490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  sub_24A77A45C();
  v43 = v64;
  v44 = type metadata accessor for WorkoutTimeView();
  sub_24A63CCC0(v43 + *(int *)(v44 + 24), (uint64_t)v10, &qword_2579478E8);
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v42);
  sub_24A63CD04((uint64_t)v10, &qword_2579478E8);
  if (v45 == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v42);
  }
  else
  {
    v46 = v60;
    sub_24A68337C((uint64_t)v15, v60);
    sub_24A778794();
    v47 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v47(v46, v42);
    v47((uint64_t)v15, v42);
  }
  v48 = sub_24A77BBD8();
  KeyPath = swift_getKeyPath();
  v50 = (uint64_t)v67;
  *v67 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
  swift_storeEnumTagMultiPayload();
  v51 = swift_getKeyPath();
  v52 = v62;
  sub_24A63F6C4(v50, v62, qword_257948168);
  v54 = (uint64_t)v65;
  v53 = v66;
  v55 = v52 + *(int *)(v66 + 20);
  *(_QWORD *)v55 = v51;
  *(_BYTE *)(v55 + 8) = 0;
  *(_QWORD *)(v52 + *(int *)(v53 + 24)) = v48;
  sub_24A63CCC0(v40, v54, &qword_257949490);
  v56 = v68;
  sub_24A65FAD0(v52, v68, (uint64_t (*)(_QWORD))type metadata accessor for FastDigitView);
  v57 = v69;
  sub_24A63CCC0(v54, v69, &qword_257949490);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E0);
  sub_24A65FAD0(v56, v57 + *(int *)(v58 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FastDigitView);
  sub_24A65FB14(v52, (uint64_t (*)(_QWORD))type metadata accessor for FastDigitView);
  sub_24A63CD04(v40, &qword_257949490);
  sub_24A65FB14(v56, (uint64_t (*)(_QWORD))type metadata accessor for FastDigitView);
  return sub_24A63CD04(v54, &qword_257949490);
}

unint64_t sub_24A684E40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char v20;
  unint64_t result;
  unint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_257948168);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  sub_24A77A45C();
  v16 = type metadata accessor for WorkoutTimeView();
  sub_24A63CCC0(a1 + *(int *)(v16 + 24), (uint64_t)v8, &qword_2579478E8);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  sub_24A63CD04((uint64_t)v8, &qword_2579478E8);
  if (v17 == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    sub_24A68337C((uint64_t)v15, (uint64_t)v13);
    sub_24A778794();
    v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18(v13, v9);
    v18(v15, v9);
  }
  v19 = sub_24A77BBCC();
  swift_retain();
  v20 = sub_24A7791CC();
  swift_release();
  if ((v20 & 1) != 0)
    result = sub_24A686364(3uLL);
  else
    result = 0;
  v22 = v19 + result;
  if (__OFADD__(v19, result))
  {
    __break(1u);
  }
  else
  {
    *v5 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D18);
    swift_storeEnumTagMultiPayload();
    KeyPath = swift_getKeyPath();
    v24 = (uint64_t)v5;
    v25 = v28;
    sub_24A63F6C4(v24, v28, qword_257948168);
    result = type metadata accessor for FastDigitView();
    v26 = v25 + *(int *)(result + 20);
    *(_QWORD *)v26 = KeyPath;
    *(_BYTE *)(v26 + 8) = 0;
    *(_QWORD *)(v25 + *(int *)(result + 24)) = v22;
  }
  return result;
}

uint64_t type metadata accessor for WorkoutTimeView()
{
  uint64_t result;

  result = qword_2579493E0;
  if (!qword_2579493E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A685118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A685160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for WorkoutTimeView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 64);
  v4 = sub_24A778818();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  sub_24A63BEDC(*(_QWORD *)(v0 + v3), *(_BYTE *)(v0 + v3 + 8));
  sub_24A63BEDC(*(_QWORD *)(v0 + v3 + 16), *(_BYTE *)(v0 + v3 + 24));
  v7 = v0 + v3 + *(int *)(v1 + 24);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v9 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_24A685270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutTimeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6852B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for WorkoutTimeView() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A778818() - 8) + 80);
  return sub_24A683C90(v1 + v4, v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_24A68532C(uint64_t a1)
{
  uint64_t v1;

  return sub_24A685E48(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_257949468);
}

uint64_t sub_24A685354()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for WorkoutTimeView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_24A63BEC0(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_24A63BEC0(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = a3[6];
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    v14 = sub_24A778818();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = a3[8];
    *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for WorkoutTimeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_24A63BEDC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_24A63BEDC(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_24A778818();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_release();
}

uint64_t initializeWithCopy for WorkoutTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_24A63BEC0(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_24A63BEC0(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_24A778818();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WorkoutTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_24A63BEC0(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_24A63BEDC(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_24A63BEC0(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_24A63BEDC(v12, v13);
  v14 = a3[6];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_24A778818();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for WorkoutTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for WorkoutTimeView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_24A63BEDC(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_24A63BEDC(v11, v12);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (char *)a2 + v13;
  v16 = sub_24A778818();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutTimeView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A685A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutTimeView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A685AF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

void sub_24A685B78()
{
  unint64_t v0;

  sub_24A685C00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24A685C00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2579493F0)
  {
    sub_24A778818();
    v0 = sub_24A77BDE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2579493F0);
  }
}

unint64_t sub_24A685C58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949430;
  if (!qword_257949430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949380);
    v2[0] = sub_24A685CDC();
    v2[1] = sub_24A63CFF0(&qword_2579476F0, &qword_2579476B0, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949430);
  }
  return result;
}

unint64_t sub_24A685CDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949438;
  if (!qword_257949438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949360);
    v2[0] = sub_24A685D60();
    v2[1] = sub_24A63CFF0(&qword_2579476E8, &qword_257947688, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949438);
  }
  return result;
}

unint64_t sub_24A685D60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949440;
  if (!qword_257949440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949358);
    v2[0] = sub_24A685DCC();
    v2[1] = sub_24A63F8AC();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949440);
  }
  return result;
}

unint64_t sub_24A685DCC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257949448;
  if (!qword_257949448)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949350);
    v2 = sub_24A63CFF0(&qword_257949378, &qword_257949368, MEMORY[0x24BDF4498]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEBD40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257949448);
  }
  return result;
}

uint64_t sub_24A685E48(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  result = __swift_instantiateConcreteTypeFromMangledName(a4);
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    a2((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A685F20@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD *__return_ptr, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v13;
  __int128 v14;
  _QWORD v16[2];
  __int128 v17;
  __int128 v18;
  char v19;
  char v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257949458);
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    a2(v16, (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    v10 = v16[1];
    v11 = v19;
    v12 = v20;
    v13 = v17;
    v14 = v18;
    *(_QWORD *)a3 = v16[0];
    *(_QWORD *)(a3 + 8) = v10;
    *(_OWORD *)(a3 + 16) = v13;
    *(_OWORD *)(a3 + 32) = v14;
    *(_BYTE *)(a3 + 48) = v11;
    *(_BYTE *)(a3 + 49) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A686018@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  char v27;
  char v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257949460);
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    a2(&v19, (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    v10 = v22;
    v11 = v23;
    v12 = v24;
    v13 = v25;
    v14 = v27;
    v15 = v28;
    v16 = v26;
    v17 = v20;
    v18 = v21;
    *(_QWORD *)a3 = v19;
    *(_OWORD *)(a3 + 8) = v17;
    *(_OWORD *)(a3 + 24) = v18;
    *(_QWORD *)(a3 + 40) = v10;
    *(_BYTE *)(a3 + 48) = v11;
    *(_QWORD *)(a3 + 56) = v12;
    *(_BYTE *)(a3 + 64) = v13;
    *(_OWORD *)(a3 + 72) = v16;
    *(_BYTE *)(a3 + 88) = v14;
    *(_BYTE *)(a3 + 89) = v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A686140(uint64_t a1)
{
  return sub_24A686278(a1, (uint64_t (*)(uint64_t, uint64_t))sub_24A684934);
}

uint64_t sub_24A68614C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A686170(uint64_t a1)
{
  uint64_t v1;

  return sub_24A685E48(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_2579494D0);
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for WorkoutTimeView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_24A63BEDC(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  sub_24A63BEDC(*(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_24A778818();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A68626C(uint64_t a1)
{
  return sub_24A686278(a1, (uint64_t (*)(uint64_t, uint64_t))sub_24A684E40);
}

uint64_t sub_24A686278(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutTimeView() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_24A6862D4(uint64_t a1)
{
  uint64_t v1;

  return sub_24A685E48(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_2579494C8);
}

uint64_t sub_24A6862F4()
{
  return sub_24A77A810();
}

uint64_t sub_24A686314@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A834();
  *a1 = result;
  return result;
}

uint64_t sub_24A68633C()
{
  swift_retain();
  return sub_24A77A840();
}

unint64_t sub_24A686364(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x24BD1A2CC](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x24BD1A2CC](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A6863F4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_24A686424(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_24A686460())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MetricApplicationLifecycleTracker.eventHub.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MetricApplicationLifecycleTracker.__allocating_init(eventHub:metricClient:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 0;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_QWORD *)(v6 + 176) = 0;
  v7 = v6 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  v8 = sub_24A778A04();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a2;
  sub_24A6865F8(a3, v6 + 40);
  return v6;
}

uint64_t MetricApplicationLifecycleTracker.init(eventHub:metricClient:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 + 16) = 0;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_QWORD *)(v3 + 176) = 0;
  v7 = v3 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  v8 = sub_24A778A04();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  sub_24A6865F8(a3, v3 + 40);
  return v3;
}

uint64_t sub_24A6865F8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24A686610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t result;
  uint64_t v31;
  id aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void *ObjectType;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A778A04();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = v2 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_24A686C40((uint64_t)v6, v9, &qword_2579494E8);
  swift_endAccess();
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v11 = *MEMORY[0x24BEBE008];
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_mainQueue);
  v14 = swift_allocObject();
  swift_weakInit();
  v36 = sub_24A686B64;
  v37 = v14;
  v15 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v33 = 1107296256;
  v34 = sub_24A686B84;
  ObjectType = &block_descriptor_0;
  v16 = _Block_copy(&aBlock);
  swift_release();
  v17 = objc_msgSend(v10, sel_addObserverForName_object_queue_usingBlock_, v11, 0, v13, v16);
  _Block_release(v16);

  ObjectType = (void *)swift_getObjectType();
  aBlock = v17;
  swift_beginAccess();
  sub_24A686C40((uint64_t)&aBlock, v2 + 80, &qword_257946D48);
  swift_endAccess();
  v18 = *MEMORY[0x24BEBE010];
  v19 = objc_msgSend(v12, (SEL)&selRef_setRegion_animated_);
  v20 = swift_allocObject();
  swift_weakInit();
  v36 = sub_24A686C84;
  v37 = v20;
  aBlock = v15;
  v33 = 1107296256;
  v34 = sub_24A686B84;
  ObjectType = &block_descriptor_4;
  v21 = _Block_copy(&aBlock);
  swift_release();
  v22 = objc_msgSend(v10, sel_addObserverForName_object_queue_usingBlock_, v18, 0, v19, v21);
  _Block_release(v21);

  ObjectType = (void *)swift_getObjectType();
  aBlock = v22;
  swift_beginAccess();
  sub_24A686C40((uint64_t)&aBlock, v2 + 112, &qword_257946D48);
  swift_endAccess();
  v23 = *MEMORY[0x24BEBE018];
  v24 = objc_msgSend(v12, sel_mainQueue);
  v25 = swift_allocObject();
  swift_weakInit();
  v36 = sub_24A686CFC;
  v37 = v25;
  aBlock = v15;
  v33 = 1107296256;
  v34 = sub_24A686B84;
  ObjectType = &block_descriptor_8;
  v26 = _Block_copy(&aBlock);
  swift_release();
  v27 = objc_msgSend(v10, sel_addObserverForName_object_queue_usingBlock_, v23, 0, v24, v26);
  _Block_release(v26);

  ObjectType = (void *)swift_getObjectType();
  aBlock = v27;
  swift_beginAccess();
  sub_24A686C40((uint64_t)&aBlock, v2 + 144, &qword_257946D48);
  swift_endAccess();
  sub_24A779F40();
  swift_allocObject();
  swift_unknownObjectRetain();
  v28 = sub_24A779F34();
  swift_getObjectType();
  sub_24A779C10();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BE8E7D0];
  swift_allocObject();
  swift_weakInit();
  sub_24A63C880(&qword_2579494F0, v29, MEMORY[0x24BE8E7B8]);
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  *(_QWORD *)(v2 + 176) = v28;

  swift_release();
  result = swift_beginAccess();
  *(_BYTE *)(v2 + 16) = 1;
  return result;
}

uint64_t sub_24A686B40()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24A686B64(uint64_t a1)
{
  uint64_t v1;

  return sub_24A686CA4(a1, v1, (void (*)(void))sub_24A687220);
}

uint64_t sub_24A686B84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_24A778428();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_24A778410();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_24A686C40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A686C84(uint64_t a1)
{
  uint64_t v1;

  return sub_24A686CA4(a1, v1, (void (*)(void))sub_24A6874D0);
}

uint64_t sub_24A686CA4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A686CFC(uint64_t a1)
{
  uint64_t v1;

  return sub_24A686CA4(a1, v1, (void (*)(void))sub_24A6877E0);
}

uint64_t sub_24A686D1C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_24A778A04();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A779C04();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v2, v6, v3);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    v9 = v8 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
    swift_beginAccess();
    sub_24A686C40((uint64_t)v2, v9, &qword_2579494E8);
    swift_endAccess();
    swift_release();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24A686E80()
{
  return sub_24A686D1C();
}

uint64_t sub_24A686E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  swift_beginAccess();
  sub_24A63CCC0(v0 + 80, (uint64_t)&v9, &qword_257946D48);
  if (v10)
  {
    sub_24A64E7EC(&v9, &v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    objc_msgSend(v4, sel_removeObserver_, sub_24A77C178());
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  else
  {
    sub_24A63CD04((uint64_t)&v9, &qword_257946D48);
  }
  v11 = 0u;
  v12 = 0u;
  swift_beginAccess();
  sub_24A686C40((uint64_t)&v11, v0 + 80, &qword_257946D48);
  swift_endAccess();
  swift_beginAccess();
  sub_24A63CCC0(v0 + 112, (uint64_t)&v9, &qword_257946D48);
  if (v10)
  {
    sub_24A64E7EC(&v9, &v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    objc_msgSend(v4, sel_removeObserver_, sub_24A77C178());
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  else
  {
    sub_24A63CD04((uint64_t)&v9, &qword_257946D48);
  }
  v11 = 0u;
  v12 = 0u;
  swift_beginAccess();
  sub_24A686C40((uint64_t)&v11, v0 + 112, &qword_257946D48);
  swift_endAccess();
  swift_beginAccess();
  sub_24A63CCC0(v0 + 144, (uint64_t)&v9, &qword_257946D48);
  if (v10)
  {
    sub_24A64E7EC(&v9, &v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    objc_msgSend(v4, sel_removeObserver_, sub_24A77C178());
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  else
  {
    sub_24A63CD04((uint64_t)&v9, &qword_257946D48);
  }
  v11 = 0u;
  v12 = 0u;
  swift_beginAccess();
  sub_24A686C40((uint64_t)&v11, v0 + 144, &qword_257946D48);
  swift_endAccess();
  *(_QWORD *)(v0 + 176) = 0;
  swift_release();
  v5 = sub_24A778A04();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = v0 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_24A686C40((uint64_t)v3, v6, &qword_2579494E8);
  swift_endAccess();

  result = swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_24A6871F8()
{
  return sub_24A68722C(MEMORY[0x24BE8A470]);
}

uint64_t sub_24A687204()
{
  return sub_24A6874EC(MEMORY[0x24BE89E78], (uint64_t)&unk_251BF6D18, (uint64_t)sub_24A687E78);
}

uint64_t sub_24A687220()
{
  return sub_24A68722C(MEMORY[0x24BE8A458]);
}

uint64_t sub_24A68722C(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = sub_24A778E6C();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A778A04();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A778D94();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *a1, v13);
  v33 = v1;
  v17 = v1 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_24A63CCC0(v17, (uint64_t)v8, &qword_2579494E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24A63CD04((uint64_t)v8, &qword_2579494E8);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v30 = v12;
    v18(v12, v8, v9);
    v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2579494F8);
    v28 = &v5[v19[12]];
    v29 = &v5[v19[16]];
    v20 = &v5[v19[20]];
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
    v21 = sub_24A7786B0();
    v22 = v32;
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23(v28, 1, 1, v21);
    v23(v29, 1, 1, v21);
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = 0;
    v24 = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v5, *MEMORY[0x24BE8B540], v22);
    v25 = (uint64_t)v30;
    sub_24A6877FC((uint64_t)v5, (uint64_t)v30);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v22);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_24A6874D0()
{
  return sub_24A6874EC(MEMORY[0x24BE89E68], (uint64_t)&unk_251BF6DB0, (uint64_t)sub_24A687E78);
}

uint64_t sub_24A6874EC(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a2;
  v36 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A778E6C();
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A778A04();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_24A778D40();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *a1, v17);
  v21 = v3 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  swift_beginAccess();
  sub_24A63CCC0(v21, (uint64_t)v12, &qword_2579494E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_24A63CD04((uint64_t)v12, &qword_2579494E8);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v31 = v16;
    v22(v16, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v9, v20, v17);
    v24 = v32;
    v23 = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v9, *MEMORY[0x24BE8B528], v33);
    sub_24A6877FC((uint64_t)v9, (uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v23);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 64));
    v25 = v34;
    sub_24A779E74();
    v26 = v38;
    v27 = (void (*)(uint64_t, uint64_t))sub_24A778F50();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 0;
    v27(v36, v28);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v31, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_24A6877E0()
{
  return sub_24A6874EC(MEMORY[0x24BE89E70], (uint64_t)&unk_251BF6D88, (uint64_t)sub_24A687E78);
}

uint64_t sub_24A6877FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v45 = a1;
  v3 = sub_24A779C28();
  v4 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v50 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v48 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A778D4C();
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E0);
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F0);
  MEMORY[0x24BDAC7A8](v13);
  v43 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_24A778E6C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_24A778D88();
  v25 = *(_QWORD *)(v44 - 8);
  v26 = MEMORY[0x24BDAC7A8](v44);
  v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v42 - v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v45, v21);
  v31 = sub_24A778A04();
  v32 = *(_QWORD *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v20, a2, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v20, 0, 1, v31);
  v33 = sub_24A778E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
  v34 = sub_24A778E0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v43, 1, 1, v34);
  sub_24A778DA0();
  v35 = sub_24A778DAC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 0, 1, v35);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949700);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v46, 1, 1, v36);
  v37 = sub_24A778E84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v47, 1, 1, v37);
  sub_24A778D7C();
  v38 = v44;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v44);
  v39 = v48;
  sub_24A779C34();
  swift_getObjectType();
  sub_24A63C880(&qword_257949708, (uint64_t (*)(uint64_t))MEMORY[0x24BE8E8A8], MEMORY[0x24BE8E8A0]);
  v40 = v49;
  sub_24A779EEC();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v30, v38);
}

uint64_t MetricApplicationLifecycleTracker.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_24A63CD04(v0 + 80, &qword_257946D48);
  sub_24A63CD04(v0 + 112, &qword_257946D48);
  sub_24A63CD04(v0 + 144, &qword_257946D48);
  swift_release();
  sub_24A63CD04(v0 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage, &qword_2579494E8);
  return v0;
}

uint64_t MetricApplicationLifecycleTracker.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_24A63CD04(v0 + 80, &qword_257946D48);
  sub_24A63CD04(v0 + 112, &qword_257946D48);
  sub_24A63CD04(v0 + 144, &qword_257946D48);
  swift_release();
  sub_24A63CD04(v0 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage, &qword_2579494E8);
  return swift_deallocClassInstance();
}

uint64_t sub_24A687D50()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_24A687D78()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_24A687DB4(uint64_t a1)
{
  return sub_24A686610(a1);
}

uint64_t sub_24A687DD4()
{
  return sub_24A686E88();
}

uint64_t sub_24A687DF4()
{
  return sub_24A6871F8();
}

uint64_t sub_24A687E14()
{
  return sub_24A687204();
}

uint64_t sub_24A687E34(uint64_t result, uint64_t (*a2)(uint64_t *))
{
  char v2;
  uint64_t v3;
  char v4;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)result;
  v4 = v2;
  if (a2)
    return a2(&v3);
  return result;
}

uint64_t sub_24A687E7C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_24A687EC0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.eventHub.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.isActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.startTrackingAppLifecycle(initialPage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.stopTrackingApplifecycle()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.enterGuidedWorkoutExperience()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracking.exitGuidedWorkoutExperience()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_24A687F30()
{
  return type metadata accessor for MetricApplicationLifecycleTracker();
}

uint64_t type metadata accessor for MetricApplicationLifecycleTracker()
{
  uint64_t result;

  result = qword_257949530;
  if (!qword_257949530)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A687F74()
{
  unint64_t v0;

  sub_24A688080();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MetricApplicationLifecycleTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.isActive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.isActive.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.isActive.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.__allocating_init(eventHub:metricClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.startTrackingAppLifecycle(initialPage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.stopTrackingApplifecycle()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.enterGuidedWorkoutExperience()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of MetricApplicationLifecycleTracker.exitGuidedWorkoutExperience()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

void sub_24A688080()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257949540)
  {
    sub_24A778A04();
    v0 = sub_24A77BDE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257949540);
  }
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A688108(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v3 = *(_BYTE *)(result + 8);
  v4 = *(_QWORD *)result;
  v5 = v3;
  if (v2)
    return v2(&v4);
  return result;
}

uint64_t sub_24A68819C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_24A688228(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_24A688270())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *WorkoutAssetLoadStatusProvider.__allocating_init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4)
{
  objc_class *v4;
  id v9;
  uint64_t v10;
  id v11;
  char *v12;

  v9 = objc_allocWithZone(v4);
  v10 = *(_QWORD *)&a3[OBJC_IVAR___SMDependencies_dependencies];
  v11 = objc_allocWithZone((Class)type metadata accessor for WorkoutAssetLoadStatusProvider());
  swift_retain();
  v12 = WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(a1, a2, v10, a4, 2);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v12;
}

char *WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v8;
  id v9;
  char *v10;

  v8 = *(_QWORD *)&a3[OBJC_IVAR___SMDependencies_dependencies];
  v9 = objc_allocWithZone((Class)type metadata accessor for WorkoutAssetLoadStatusProvider());
  swift_retain();
  v10 = WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(a1, a2, v8, a4, 2);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

char *WorkoutAssetLoadStatusProvider.__allocating_init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for WorkoutAssetLoadStatusProvider()
{
  return objc_opt_self();
}

char *WorkoutAssetLoadStatusProvider.init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  objc_class *StatusProvider;
  char *v23;
  uint64_t inited;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (**v36)(uint64_t *);
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  objc_super v59;
  __int128 v60[3];

  v58 = a4;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949718);
  v11 = *(_QWORD *)(v53 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v53);
  v52 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)&v49 - v14;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v57 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason;
  *(_QWORD *)&v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason] = 2;
  *(_QWORD *)&v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus] = a4;
  *(_QWORD *)&v5[v16] = a5;
  v17 = &v5[OBJC_IVAR___WKUIAssetLoadStatusProvider_workoutIdentifier];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  v50 = a1;
  v18 = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949738);
  v56 = a3;
  sub_24A778B84();
  v19 = *((_QWORD *)&v60[0] + 1);
  v20 = &v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_eventHub];
  *(_QWORD *)v20 = *(_QWORD *)&v60[0];
  *((_QWORD *)v20 + 1) = v19;
  v21 = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)&v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_observers] = v21;
  sub_24A779F40();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(_QWORD *)&v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleUpdatedSubscriptionToken] = sub_24A779F34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949758);
  sub_24A778B84();
  sub_24A6865F8(v60, (uint64_t)&v18[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient]);

  StatusProvider = (objc_class *)type metadata accessor for WorkoutAssetLoadStatusProvider();
  v59.receiver = v18;
  v59.super_class = StatusProvider;
  v23 = (char *)objc_msgSendSuper2(&v59, sel_init);
  __swift_project_boxed_opaque_existential_1(&v23[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient], *(_QWORD *)&v23[OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient + 24]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947460);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A780030;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v25 = v23;
  sub_24A68A9B8(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v26 = v51;
  sub_24A779E68();
  swift_bridgeObjectRelease();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v25;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_24A68B5E4;
  *(_QWORD *)(v28 + 24) = v27;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_24A68AB7C;
  *(_QWORD *)(v29 + 24) = v28;
  v30 = v52;
  v31 = v26;
  v32 = v26;
  v33 = v53;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v52, v31, v53);
  v34 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v35 + v34, v30, v33);
  v36 = (uint64_t (**)(uint64_t *))(v35 + ((v12 + v34 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v36 = sub_24A68ABA0;
  v36[1] = (uint64_t (*)(uint64_t *))v29;
  v37 = v25;
  v38 = v54;
  sub_24A778F44();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v32, v33);
  v39 = v55;
  v40 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = 0;
  *(_QWORD *)(v41 + 24) = 0;
  v40(sub_24A68ABB4, v41);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v39);
  swift_getObjectType();
  sub_24A779F58();
  v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v43 = (_QWORD *)swift_allocObject();
  v44 = v50;
  v43[2] = v50;
  v43[3] = a2;
  v43[4] = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  swift_release();
  v45 = OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken;
  v46 = *(_QWORD *)&v37[OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken];
  swift_retain();
  v47 = sub_24A689650(v58, v46, v44, a2);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  *(_QWORD *)&v37[v45] = v47;
  swift_release();
  return v37;
}

uint64_t sub_24A688AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t inited;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  objc_class *v25;
  char *v26;
  id v27;
  void (*v28)(char *, uint64_t);
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  unint64_t *v65;
  objc_super v66;
  uint64_t v67;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949790);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A778AB8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v59 - v9;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_workoutIdentifier);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_workoutIdentifier + 8);
  sub_24A77BC20();
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v61 = v11;
  v62 = v0;
  v60 = v12;
  if (v13 == 1)
  {
    sub_24A68AD04((uint64_t)v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A780450;
    v15 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    v16 = sub_24A66952C();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(inited + 64) = v16;
    *(_QWORD *)(inited + 40) = v11;
    v17 = (uint64_t *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
    swift_beginAccess();
    v18 = *v17;
    v19 = 0xE600000000000000;
    v20 = 0x646575657571;
    switch(*v17)
    {
      case 0:
        goto LABEL_23;
      case 1:
        v19 = 0xE700000000000000;
        v20 = 0x676E6964616F6CLL;
        goto LABEL_23;
      case 2:
        v20 = 0x6574656C706D6F63;
        goto LABEL_21;
      case 3:
        v20 = 0x64656C696166;
        goto LABEL_23;
      case 4:
        v20 = 0x656C6C65636E6163;
        goto LABEL_21;
      case 5:
        v20 = 0x6564616F4C746F6ELL;
LABEL_21:
        v19 = 0xE900000000000064;
        goto LABEL_23;
      case 6:
        v19 = 0xE700000000000000;
        v20 = 0x6E776F6E6B6E75;
LABEL_23:
        *(_QWORD *)(inited + 96) = v15;
        *(_QWORD *)(inited + 104) = v16;
        *(_QWORD *)(inited + 72) = v20;
        *(_QWORD *)(inited + 80) = v19;
        swift_bridgeObjectRetain();
        v40 = sub_24A77BC74();
        v30 = 2;
        sub_24A67B7C8((uint64_t)"[AssetLoadStatusProvider] handleAssetBundleResults workoutIdentifier: %@ nlassetLoadStatus: %@", 94, 2, v40, inited);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
        swift_arrayDestroy();
        v41 = 5;
        goto LABEL_28;
      default:
        goto LABEL_50;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  v21 = sub_24A778A70();
  if ((v22 & 1) != 0)
    v23 = qword_24A7819B0[v21];
  else
    v23 = 6;
  v65 = (unint64_t *)v23;
  v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v24(v8, v10, v4);
  v25 = (objc_class *)type metadata accessor for AssetBundleBridge();
  v26 = (char *)objc_allocWithZone(v25);
  v24(&v26[OBJC_IVAR___SMAssetBundle_assetBundle], v8, v4);
  v66.receiver = v26;
  v66.super_class = v25;
  v27 = objc_msgSendSuper2(&v66, sel_init);
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v8, v4);
  sub_24A778AAC();
  if ((v29 & 1) != 0)
  {
    v31 = sub_24A778AA0();

    if (v31 >= 2)
      v30 = 2;
    else
      v30 = v31;
  }
  else
  {

    v30 = 2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_24A780450;
  v33 = sub_24A778A7C();
  v35 = v34;
  *(_QWORD *)(v32 + 56) = MEMORY[0x24BEE0D00];
  v36 = sub_24A66952C();
  *(_QWORD *)(v32 + 32) = v33;
  *(_QWORD *)(v32 + 64) = v36;
  *(_QWORD *)(v32 + 40) = v35;
  v37 = (uint64_t *)(v62 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  swift_beginAccess();
  v38 = 0xE600000000000000;
  v39 = 0x646575657571;
  switch(*v37)
  {
    case 0:
      goto LABEL_27;
    case 1:
      v38 = 0xE700000000000000;
      v39 = 0x676E6964616F6CLL;
      goto LABEL_27;
    case 2:
      v39 = 0x6574656C706D6F63;
      goto LABEL_25;
    case 3:
      v39 = 0x64656C696166;
      goto LABEL_27;
    case 4:
      v39 = 0x656C6C65636E6163;
      goto LABEL_25;
    case 5:
      v39 = 0x6564616F4C746F6ELL;
LABEL_25:
      v38 = 0xE900000000000064;
      goto LABEL_27;
    case 6:
      v38 = 0xE700000000000000;
      v39 = 0x6E776F6E6B6E75;
LABEL_27:
      *(_QWORD *)(v32 + 96) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v32 + 104) = v36;
      *(_QWORD *)(v32 + 72) = v39;
      *(_QWORD *)(v32 + 80) = v38;
      v42 = sub_24A77BC74();
      sub_24A67B7C8((uint64_t)"[AssetLoadStatusProvider] handleAssetBundleResults %@, nlassetLoadStatus: %@", 76, 2, v42, v32);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
      swift_arrayDestroy();
      v28(v10, v4);
      v0 = v62;
      v41 = (uint64_t)v65;
LABEL_28:
      v43 = (unint64_t *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
      swift_beginAccess();
      v65 = v43;
      if (v41 == *v43)
      {
        v44 = *(_QWORD *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason);
        *v65 = v41;
        v64 = (uint64_t *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason);
        *(_QWORD *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason) = v30;
        if (v30 == v44)
          goto LABEL_48;
      }
      else
      {
        *v65 = v41;
        v64 = (uint64_t *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason);
        *(_QWORD *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleReason) = v30;
      }
      if (v41 == 3)
        v45 = 0x800000024A78AEF0;
      else
        v45 = 0;
      v46 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                  + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers), sel_allObjects));
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579497A0);
      v47 = sub_24A77BB18();

      v59 = v45;
      if (v47 >> 62)
      {
        swift_bridgeObjectRetain();
        v48 = sub_24A77C028();
        if (!v48)
          goto LABEL_47;
      }
      else
      {
        v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v48)
          goto LABEL_47;
      }
      if (v48 < 1)
      {
        __break(1u);
LABEL_50:
        v67 = v18;
        swift_bridgeObjectRetain();
LABEL_52:
        sub_24A77C19C();
        __break(1u);
        JUMPOUT(0x24A689248);
      }
      v49 = 0;
      v63 = 0x800000024A78AEF0;
      do
      {
        if ((v47 & 0xC000000000000001) != 0)
        {
          v51 = (void *)MEMORY[0x24BD19588](v49, v47);
        }
        else
        {
          v51 = *(void **)(v47 + 8 * v49 + 32);
          swift_unknownObjectRetain();
        }
        v52 = *v65;
        v53 = *v64;
        if (v41 == 3)
          v50 = (void *)sub_24A77B980();
        else
          v50 = 0;
        ++v49;
        objc_msgSend(v51, sel_didUpdateWithAssetLoadStatus_bundleReason_failureReason_, v52, v53, v50, v59, v60, v61);
        swift_unknownObjectRelease();

      }
      while (v48 != v49);
LABEL_47:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v0 = v62;
LABEL_48:
      v54 = *v65;
      v55 = OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken;
      v56 = *(_QWORD *)(v0 + OBJC_IVAR___WKUIAssetLoadStatusProvider_bundleProgressSubscriptionToken);
      swift_retain();
      v57 = sub_24A689650(v54, v56, v60, v61);
      swift_release();
      *(_QWORD *)(v0 + v55) = v57;
      return swift_release();
    default:
      v67 = *v37;
      goto LABEL_52;
  }
}

uint64_t sub_24A689280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t result;
  void *v23;
  uint64_t inited;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (**v33)(uint64_t *);
  id v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949718);
  v7 = *(_QWORD *)(v42 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v42);
  v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v39 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A778AB8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779F4C();
  v17 = sub_24A778A88();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v17 == a2 && v19 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_24A77C184();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return result;
  }
  swift_beginAccess();
  result = MEMORY[0x24BD1A368](a4 + 16);
  if (result)
  {
    v23 = (void *)result;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(result + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient), *(_QWORD *)(result + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetClient + 24));
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947460);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A780030;
    *(_QWORD *)(inited + 32) = a2;
    *(_QWORD *)(inited + 40) = a3;
    swift_bridgeObjectRetain();
    sub_24A68A9B8(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v25 = v41;
    sub_24A779E68();
    swift_bridgeObjectRelease();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v23;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = sub_24A68B3A0;
    *(_QWORD *)(v27 + 24) = v26;
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = sub_24A68B5F8;
    *(_QWORD *)(v28 + 24) = v27;
    v29 = v40;
    v30 = v42;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v40, v25, v42);
    v31 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v32 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v32 + v31, v29, v30);
    v33 = (uint64_t (**)(uint64_t *))(v32 + ((v8 + v31 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v33 = sub_24A68B60C;
    v33[1] = (uint64_t (*)(uint64_t *))v28;
    v34 = v23;
    v35 = v43;
    sub_24A778F44();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v30);
    v36 = v45;
    v37 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = 0;
    *(_QWORD *)(v38 + 24) = 0;
    v37(sub_24A68B610, v38);

    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v35, v36);
  }
  return result;
}

uint64_t sub_24A689650(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  _BYTE v10[40];

  if (a1 > 1)
    return 0;
  v4 = a2;
  if (a2)
  {
    swift_retain();
  }
  else
  {
    sub_24A779F40();
    swift_allocObject();
    swift_unknownObjectRetain();
    v4 = sub_24A779F34();
    swift_getObjectType();
    sub_24A779F7C();
    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = a3;
    v8[3] = a4;
    v8[4] = v7;
    swift_bridgeObjectRetain();
    sub_24A779EF8();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return v4;
}

uint64_t sub_24A6897A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char v20;
  uint64_t result;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  int v34;
  int v35;
  double v36;
  _QWORD v37[2];

  v8 = sub_24A778DE8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v37 - v13;
  v37[1] = a1;
  sub_24A779F70();
  v15 = sub_24A778DD0();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, v8);
  if (v15 == a2 && v17 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_24A77C184();
    result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
      return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A780030;
  sub_24A779F70();
  v23 = sub_24A778DC4();
  v25 = v24;
  v18(v12, v8);
  *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 64) = sub_24A66952C();
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(inited + 40) = v25;
  v26 = sub_24A77BC74();
  sub_24A67B7C8((uint64_t)"[AssetLoadStatusProvider] AssetBundleProgressUpdated %@ ", 56, 2, v26, inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
  swift_arrayDestroy();
  swift_beginAccess();
  result = MEMORY[0x24BD1A368](a4 + 16);
  if (result)
  {
    v27 = (void *)result;
    v28 = *(id *)(result + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers);

    v29 = objc_msgSend(v28, sel_allObjects);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579497A0);
    v30 = sub_24A77BB18();

    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_24A77C028();
      v31 = result;
      if (result)
        goto LABEL_11;
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v31)
      {
LABEL_11:
        if (v31 < 1)
        {
          __break(1u);
          return result;
        }
        v32 = 0;
        do
        {
          if ((v30 & 0xC000000000000001) != 0)
          {
            v33 = (void *)MEMORY[0x24BD19588](v32, v30);
          }
          else
          {
            v33 = *(void **)(v30 + 8 * v32 + 32);
            swift_unknownObjectRetain();
          }
          ++v32;
          sub_24A779F70();
          sub_24A778DDC();
          v35 = v34;
          v18(v12, v8);
          LODWORD(v36) = v35;
          objc_msgSend(v33, sel_didUpdateWithAssetLoadProgress_, v36);
          swift_unknownObjectRelease();
        }
        while (v31 != v32);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

id WorkoutAssetLoadStatusProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WorkoutAssetLoadStatusProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WorkoutAssetLoadStatusProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutAssetLoadStatusProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id WorkoutAssetLoadStatusProvider.add(observer:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers), sel_addObject_, a1);
}

id WorkoutAssetLoadStatusProvider.remove(observer:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_observers), sel_removeObject_, a1);
}

uint64_t sub_24A689C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_257949818, (uint64_t)&unk_251BF7220, (uint64_t)sub_24A68B370);
}

uint64_t sub_24A689C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  void (*v13)(uint64_t, _QWORD *);
  _QWORD *v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v13 = (void (*)(uint64_t, _QWORD *))sub_24A778F50();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a1;
  v14[5] = a2;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_24A689D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_257949808, (uint64_t)&unk_251BF71D0, (uint64_t)sub_24A68B35C);
}

uint64_t sub_24A689D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_2579497F8, (uint64_t)&unk_251BF7180, (uint64_t)sub_24A68B348);
}

uint64_t sub_24A689D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_2579497C0, (uint64_t)&unk_251BF7130, (uint64_t)sub_24A68B2DC);
}

uint64_t sub_24A689D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_2579497D0, (uint64_t)&unk_251BF70E0, (uint64_t)sub_24A68AE38);
}

uint64_t sub_24A689D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_2579497C8, (uint64_t)&unk_251BF6FF0, (uint64_t)sub_24A68ADB4);
}

uint64_t sub_24A689DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_257949718, (uint64_t)&unk_251BF7040, (uint64_t)sub_24A68ADE0);
}

uint64_t sub_24A689DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_257949718, (uint64_t)&unk_251BF7090, (uint64_t)sub_24A68AE0C);
}

uint64_t sub_24A689DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_2579497C0, (uint64_t)&unk_251BF6FA0, (uint64_t)sub_24A68AD88);
}

uint64_t sub_24A689DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_2579497A8, (uint64_t)&unk_251BF6F50, (uint64_t)sub_24A68AD74);
}

uint64_t sub_24A689E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A689C74(a1, a2, a3, a4, a5, &qword_257949500, (uint64_t)&unk_251BF6F00, (uint64_t)sub_24A68AD48);
}

void sub_24A689E30(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  void (*v19)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  void (*v23)(id *);
  uint64_t v24;
  id v25;
  char v26;

  v23 = a4;
  v24 = a5;
  v21 = a3;
  v22 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949820);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A778E24();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949828);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24A63CCC0(a1, (uint64_t)v16, &qword_257949828);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *v16;
    v17 = v25;
    v26 = 1;
    v18 = v25;
    v23(&v25);

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_24A68ABB4, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_24A68A030(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  void (*v19)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  void (*v23)(id *);
  uint64_t v24;
  id v25;
  char v26;

  v23 = a4;
  v24 = a5;
  v21 = a3;
  v22 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A778DF4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949810);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24A63CCC0(a1, (uint64_t)v16, &qword_257949810);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *v16;
    v17 = v25;
    v26 = 1;
    v18 = v25;
    v23(&v25);

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_24A68B610, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_24A68A230(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  void (*v19)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  void (*v23)(id *);
  uint64_t v24;
  id v25;
  char v26;

  v23 = a4;
  v24 = a5;
  v21 = a3;
  v22 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A778F68();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949800);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24A63CCC0(a1, (uint64_t)v16, &qword_257949800);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *v16;
    v17 = v25;
    v26 = 1;
    v18 = v25;
    v23(&v25);

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_24A68B610, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_24A68A430(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(void **), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  void *v21;
  char v22;

  v14 = __swift_instantiateConcreteTypeFromMangledName(a7);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  if ((a2 & 1) != 0)
  {
    v22 = 1;
    v20 = a1;
    a5(&v21);
    sub_24A68AE5C(a1, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(&v21);
    v18 = (void (*)(uint64_t, uint64_t))sub_24A778F50();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    swift_retain();
    v18(a9, v19);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_bridgeObjectRelease();
  }
}

void sub_24A68A57C(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  void (*v19)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  void (*v23)(id *);
  uint64_t v24;
  id v25;
  char v26;

  v23 = a4;
  v24 = a5;
  v21 = a3;
  v22 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579497B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A778E60();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579497B8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24A63CCC0(a1, (uint64_t)v16, &qword_2579497B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *v16;
    v17 = v25;
    v26 = 1;
    v18 = v25;
    v23(&v25);

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_24A68ABB4, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_24A68A77C(void *a1, char a2, void (*a3)(double), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v17;
  id v18;
  void *v19;
  char v20;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v19 = a1;
    v20 = 1;
    v18 = a1;
    a5(&v19);
    sub_24A68AD60(a1, 1);
  }
  else
  {
    a3(v13);
    v16 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a5;
    *(_QWORD *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_24A68B610, v17);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_24A68A8B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_24A778F44();
}

void sub_24A68A938(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;

  v7 = *a5;
  a3(&v8, &v7);
  v6 = v8;
  v9 = 0;
  a1(&v8);
  sub_24A68AD60(v6, 0);
}

uint64_t sub_24A68A9B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949830);
    v3 = sub_24A77BF38();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_24A77C22C();
      swift_bridgeObjectRetain();
      sub_24A77BA1C();
      result = sub_24A77C25C();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_24A77C184(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_24A77C184();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_24A68AB58()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24A68AB7C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_24A68ABA0(uint64_t *a1)
{
  uint64_t v1;

  return sub_24A68A8B4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24A68ABB4(uint64_t a1)
{
  uint64_t v1;

  return sub_24A687E34(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_24A68ABBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24A68ABE0()
{
  return objectdestroy_17Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_24A68ABF4(uint64_t a1)
{
  uint64_t *v1;

  return sub_24A689280(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24A68AC00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_24A68AC50(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___WKUIAssetLoadStatusProvider_assetLoadStatus);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t method lookup function for WorkoutAssetLoadStatusProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.assetLoadStatus.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.assetLoadStatus.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.assetLoadStatus.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of WorkoutAssetLoadStatusProvider.__allocating_init(workoutIdentifier:dependencies:assetLoadStatus:bundleReason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_24A68AD04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24A68AD48(uint64_t a1)
{
  uint64_t v1;

  sub_24A68A77C(*(void **)a1, *(_BYTE *)(a1 + 8), *(void (**)(double))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void **))(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_24A68AD60(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

void sub_24A68AD74(uint64_t a1)
{
  uint64_t v1;

  sub_24A68A57C(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_24A68AD88(uint64_t a1)
{
  return sub_24A68B540(a1, (uint64_t)&qword_257949500, (uint64_t)&unk_251BF6FC8, (uint64_t)sub_24A68B610, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_24A68A430);
}

uint64_t sub_24A68ADB4(uint64_t a1)
{
  return sub_24A68B540(a1, (uint64_t)&qword_2579497C0, (uint64_t)&unk_251BF7018, (uint64_t)sub_24A687E78, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_24A68A430);
}

uint64_t sub_24A68ADE0(uint64_t a1)
{
  return sub_24A68B540(a1, (uint64_t)&unk_2579497C8, (uint64_t)&unk_251BF7068, (uint64_t)sub_24A687E78, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_24A68A430);
}

uint64_t sub_24A68AE0C(uint64_t a1)
{
  return sub_24A68B540(a1, (uint64_t)&qword_257949718, (uint64_t)&unk_251BF70B8, (uint64_t)sub_24A687E78, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_24A68A430);
}

uint64_t sub_24A68AE38(uint64_t a1)
{
  return sub_24A68B540(a1, (uint64_t)&qword_2579497C0, (uint64_t)&unk_251BF7108, (uint64_t)sub_24A687E78, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_24A68A430);
}

void sub_24A68AE5C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_24A68AE6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_24A77895C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579497E0);
    v10 = sub_24A77BF38();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_24A68B304(&qword_2579497E8, MEMORY[0x24BDCF2A8]);
      v14 = sub_24A77B908();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_24A68B304(&qword_2579497F0, MEMORY[0x24BDCF2C0]);
          v20 = sub_24A77B974();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_24A68B0C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579497D8);
    v3 = sub_24A77BF38();
    v4 = 0;
    v5 = v3 + 56;
    v29 = v1;
    v30 = a1 + 32;
    while (1)
    {
      v6 = *(_BYTE *)(v30 + v4);
      sub_24A77C22C();
      sub_24A778D34();
      sub_24A77BA1C();
      swift_bridgeObjectRelease();
      result = sub_24A77C25C();
      v8 = -1 << *(_BYTE *)(v3 + 32);
      v9 = result & ~v8;
      v10 = v9 >> 6;
      v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
      v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        v13 = sub_24A778D34();
        v15 = v14;
        if (v13 == sub_24A778D34() && v15 == v16)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
          goto LABEL_4;
        }
        v18 = sub_24A77C184();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_4;
        v19 = ~v8;
        while (1)
        {
          v9 = (v9 + 1) & v19;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0)
            break;
          v20 = sub_24A778D34();
          v22 = v21;
          if (v20 == sub_24A778D34() && v22 == v23)
            goto LABEL_3;
          v25 = sub_24A77C184();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v9) = v6;
      v26 = *(_QWORD *)(v3 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v28;
LABEL_4:
      if (++v4 == v29)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_24A68B2DC(uint64_t a1)
{
  return sub_24A68B540(a1, (uint64_t)&unk_2579497C0, (uint64_t)&unk_251BF7158, (uint64_t)sub_24A687E78, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_24A68A430);
}

uint64_t sub_24A68B304(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24A77895C();
    result = MEMORY[0x24BD1A1F4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_24A68B348(uint64_t a1)
{
  uint64_t v1;

  sub_24A68A230(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_24A68B35C(uint64_t a1)
{
  uint64_t v1;

  sub_24A68A030(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_24A68B370(uint64_t a1)
{
  uint64_t v1;

  sub_24A689E30(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_24A68B380()
{
  return objectdestroy_17Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_24A68B394(uint64_t a1)
{
  uint64_t *v1;

  return sub_24A6897A8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24A68B3A0()
{
  return sub_24A688AD8();
}

uint64_t sub_24A68B3C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949718);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A68B464(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257949718) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_24A689C74(a1, a2, v2 + v6, *v7, v7[1], &qword_257949718, (uint64_t)&unk_251BF7360, (uint64_t)sub_24A68B51C);
}

uint64_t objectdestroy_20Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A68B51C(uint64_t a1)
{
  return sub_24A68B540(a1, (uint64_t)&qword_257949500, (uint64_t)&unk_251BF7388, (uint64_t)sub_24A68B610, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_24A68A430);
}

uint64_t sub_24A68B540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  _QWORD *v5;

  return a5(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), v5[2], v5[3], v5[4], v5[5], a2, a3, a4);
}

uint64_t sub_24A68B588()
{
  return objectdestroy_17Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_17Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 24));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject();
}

void sub_24A68B5D8(void (*a1)(void **), uint64_t a2)
{
  uint64_t v2;

  sub_24A68A938(a1, a2, *(void (**)(void **__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_24A68B5F8(_QWORD *a1)
{
  return sub_24A68AB7C(a1);
}

id AssetClientBridge.__allocating_init(dependenciesWrapper:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;
  __int128 v7;

  v3 = objc_allocWithZone(v1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949838);
  sub_24A778B84();
  swift_release();
  sub_24A6865F8(&v7, (uint64_t)v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader);

  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

id AssetClientBridge.init(dependenciesWrapper:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  objc_super v6;
  __int128 v7;

  v3 = v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949838);
  sub_24A778B84();
  swift_release();
  sub_24A6865F8(&v7, (uint64_t)v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AssetClientBridge();
  v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

uint64_t type metadata accessor for AssetClientBridge()
{
  return objc_opt_self();
}

uint64_t sub_24A68B85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949848);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader), *(_QWORD *)(v3 + OBJC_IVAR___SMAssetClient_artworkImageLoader + 24));
  sub_24A779BA4();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  swift_retain();
  v11 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_24A68BA54;
  *(_QWORD *)(v12 + 24) = v10;
  swift_retain();
  v11(sub_24A687E78, v12);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_24A68B9D0(uint64_t a1, void (*a2)(void *, void *))
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v4 = v3;
    v5 = 0;
    v6 = v3;
  }
  else
  {
    v7 = v3;
    v5 = v3;
    v6 = 0;
  }
  a2(v5, v6);
  sub_24A68BDA8(v3);
}

uint64_t sub_24A68BA30()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24A68BA54(uint64_t a1)
{
  uint64_t v1;

  sub_24A68B9D0(a1, *(void (**)(void *, void *))(v1 + 16));
}

void sub_24A68BC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_24A7785CC();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id AssetClientBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AssetClientBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AssetClientBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetClientBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AssetClientBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetClientBridge.__allocating_init(dependenciesWrapper:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AssetClientBridge.fetchArtwork(_:size:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t sub_24A68BD78()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_24A68BD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24A68BC34(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_24A68BDA8(id a1)
{

}

uint64_t WorkoutNotificationPacerCompleteView.body.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949878);
  v3 = (char *)a1 + *(int *)(v2 + 56);
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)v3 = v4;
  *(_OWORD *)(v3 + 8) = xmmword_24A781A30;
  *(_OWORD *)(v3 + 24) = xmmword_24A781A40;
  *(_OWORD *)(v3 + 40) = xmmword_24A781A50;
  sub_24A68BEE8((uint64_t *)v8);
  v5 = v8[1];
  v6 = v8[2];
  *a1 = v8[0];
  a1[1] = v5;
  a1[2] = v6;
  return sub_24A68C038((uint64_t)a1 + *(int *)(v2 + 52));
}

void sub_24A68BEE8(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v3 = *v1;
  v4 = (void *)v1[1];
  if (!((unint64_t)*v1 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
      goto LABEL_3;
LABEL_9:
    v6 = 0;
    v7 = 0;
    v10 = 0;
    v11 = 0;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v12 = sub_24A77C028();
  swift_bridgeObjectRelease();
  if (v12 < 2)
    goto LABEL_9;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = MEMORY[0x24BD19588](0, v3);
    v13 = v4;
    v7 = MEMORY[0x24BD19588](1, v3);
    goto LABEL_7;
  }
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    if (v5 != 1)
    {
      v6 = *(_QWORD *)(v3 + 32);
      v7 = *(_QWORD *)(v3 + 40);
      swift_retain();
      v8 = v4;
      swift_retain();
LABEL_7:
      v9 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      v10 = v4;
      v11 = MEMORY[0x24BD189B8](objc_msgSend(v9, sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0));
      swift_retain();
      swift_release();
LABEL_10:
      *a1 = v6;
      a1[1] = (uint64_t)v10;
      a1[2] = 0;
      a1[3] = v7;
      a1[4] = (uint64_t)v10;
      a1[5] = v11;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24A68C038@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1[1];
  v12 = *v1;
  v13 = v3;
  v4 = v1[3];
  v14 = v1[2];
  v15 = v4;
  v16 = *((_QWORD *)v1 + 8);
  v17 = v12;
  if ((unint64_t)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_24A77C028();
    sub_24A646AE8((uint64_t)&v17);
    if (v10 >= 3)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
  {
LABEL_3:
    swift_getKeyPath();
    v5 = swift_allocObject();
    v6 = v15;
    *(_OWORD *)(v5 + 48) = v14;
    *(_OWORD *)(v5 + 64) = v6;
    *(_QWORD *)(v5 + 80) = v16;
    v7 = v13;
    *(_OWORD *)(v5 + 16) = v12;
    *(_OWORD *)(v5 + 32) = v7;
    sub_24A646BBC((uint64_t)&v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
    sub_24A646BEC();
    sub_24A646C9C();
    sub_24A77B5E4();
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947110);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947110);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

unint64_t sub_24A68C1C0@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;

  result = *a1;
  v6 = *a2;
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = MEMORY[0x24BD19588](result);
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(_QWORD *)(v6 + 8 * result + 32);
    swift_retain();
LABEL_5:
    v8 = (id)a2[1];
    result = sub_24A77B368();
    *a3 = v7;
    a3[1] = (uint64_t)v8;
    a3[2] = result;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A68C248@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949878);
  v3 = (char *)a1 + *(int *)(v2 + 56);
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)v3 = v4;
  *(_OWORD *)(v3 + 8) = xmmword_24A781A30;
  *(_OWORD *)(v3 + 24) = xmmword_24A781A40;
  *(_OWORD *)(v3 + 40) = xmmword_24A781A50;
  sub_24A68BEE8((uint64_t *)v8);
  v5 = v8[1];
  v6 = v8[2];
  *a1 = v8[0];
  a1[1] = v5;
  a1[2] = v6;
  return sub_24A68C038((uint64_t)a1 + *(int *)(v2 + 52));
}

uint64_t sub_24A68C374()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for WorkoutNotificationPacerCompleteView()
{
  return &type metadata for WorkoutNotificationPacerCompleteView;
}

unint64_t sub_24A68C398()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257949880;
  if (!qword_257949880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949878);
    result = MEMORY[0x24BD1A1F4](&unk_24A782F48, v1);
    atomic_store(result, (unint64_t *)&qword_257949880);
  }
  return result;
}

uint64_t sub_24A68C3E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_24A68C410@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_24A68C1C0(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_24A68C418()
{
  double *v0;
  id v1;
  uint64_t v2;

  if (*v0 < 0.0)
  {
    if (qword_2544D6160 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_2544D6160 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  swift_beginAccess();
  v1 = (id)qword_2544D6158;
  v2 = sub_24A77856C();

  return v2;
}

uint64_t RaceSecondsAheadOfGhostMetricView.init(secondsAheadOfGhost:color:formattingManager:didCrossFinishLine:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(double *)a4 = a5;
  *(_QWORD *)(a4 + 8) = result;
  *(_QWORD *)(a4 + 16) = a2;
  *(_BYTE *)(a4 + 24) = a3;
  return result;
}

uint64_t RaceSecondsAheadOfGhostMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[4];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v3 = sub_24A77C16C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = sub_24A77C2A4();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_24A77C2B0();
  v31 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *v1;
  v13 = v1[1];
  v14 = (void *)v1[2];
  v15 = *((unsigned __int8 *)v1 + 24);
  v16 = sub_24A77C2C8();
  v28 = v17;
  v29 = v16;
  if (v15 == 1)
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38C8], v3);
    swift_retain();
    v18 = v14;
    sub_24A77C298();
  }
  else
  {
    v27 = v15;
    swift_retain();
    v19 = v14;
    v20 = sub_24A77BBC0();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38C8], v3);
    if ((v20 & 1) != 0)
      sub_24A77C298();
    else
      sub_24A77C28C();
    LOBYTE(v15) = v27;
  }
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);

  swift_release();
  sub_24A778338();
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v8, v32);
  sub_24A68C7E8();
  sub_24A77C2BC();
  (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v11, v9);
  v21 = v37;
  v22 = v38;
  v33 = v12;
  v34 = v13;
  v35 = v14;
  v36 = v15;
  v23 = sub_24A68C418();
  *(_QWORD *)a1 = v21;
  *(_QWORD *)(a1 + 8) = v22;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v23;
  *(_QWORD *)(a1 + 40) = v24;
  *(_WORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v13;
  return swift_retain();
}

unint64_t sub_24A68C7E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947708;
  if (!qword_257947708)
  {
    v1 = sub_24A77C2B0();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDD08C8], v1);
    atomic_store(result, (unint64_t *)&qword_257947708);
  }
  return result;
}

uint64_t sub_24A68C830()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for RaceSecondsAheadOfGhostMetricView(uint64_t a1)
{
  swift_release();

}

uint64_t initializeWithCopy for RaceSecondsAheadOfGhostMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for RaceSecondsAheadOfGhostMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for RaceSecondsAheadOfGhostMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RaceSecondsAheadOfGhostMetricView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RaceSecondsAheadOfGhostMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RaceSecondsAheadOfGhostMetricView()
{
  return &type metadata for RaceSecondsAheadOfGhostMetricView;
}

unint64_t sub_24A68CA00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949888;
  if (!qword_257949888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949890);
    v2[0] = sub_24A6459E8();
    v2[1] = sub_24A68CA6C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949888);
  }
  return result;
}

unint64_t sub_24A68CA6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947658;
  if (!qword_257947658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947660);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF0710], v1);
    atomic_store(result, (unint64_t *)&qword_257947658);
  }
  return result;
}

BOOL SeymourAvailability.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_24A68CAE0()
{
  unint64_t result;

  result = qword_257949898;
  if (!qword_257949898)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for SeymourAvailability, &type metadata for SeymourAvailability);
    atomic_store(result, (unint64_t *)&qword_257949898);
  }
  return result;
}

_QWORD *sub_24A68CB24@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for SeymourAvailability()
{
  return &type metadata for SeymourAvailability;
}

uint64_t *sub_24A68CB64(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77A5DC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_24A779448();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[6];
    v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)a1 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = (char *)a1 + v16;
    v20 = (char *)a2 + v16;
    v21 = *(uint64_t *)((char *)a2 + v16);
    v22 = v20[8];
    sub_24A63BEC0(v21, v22);
    *(_QWORD *)v19 = v21;
    v19[8] = v22;
  }
  return a1;
}

uint64_t sub_24A68CCC8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_24A77A5DC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  v6 = sub_24A779448();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  return sub_24A63BEDC(*(_QWORD *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
}

_QWORD *sub_24A68CD78(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A77A5DC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_24A779448();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(_OWORD *)((char *)a2 + v11 + 24);
  *(_OWORD *)((char *)a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  v13 = a3[7];
  v14 = a3[8];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = (char *)a1 + v14;
  v18 = (char *)a2 + v14;
  v19 = *(_QWORD *)((char *)a2 + v14);
  v20 = v18[8];
  sub_24A63BEC0(v19, v20);
  *(_QWORD *)v17 = v19;
  v17[8] = v20;
  return a1;
}

_QWORD *sub_24A68CEB0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  if (a1 != a2)
  {
    sub_24A63CD04((uint64_t)a1, &qword_2579498A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_24A77A5DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_24A779448();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_QWORD *)v12 = v14;
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = v17[8];
  sub_24A63BEC0(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = v16[8];
  *(_QWORD *)v16 = v18;
  v16[8] = v19;
  sub_24A63BEDC(v20, v21);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

char *sub_24A68D164(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_24A77A5DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_24A779448();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  v17 = &a1[v13];
  v18 = &a2[v13];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  return a1;
}

char *sub_24A68D284(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  if (a1 != a2)
  {
    sub_24A63CD04((uint64_t)a1, &qword_2579498A0);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_24A77A5DC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_24A779448();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v16 = a3[7];
  v17 = a3[8];
  v18 = &a1[v16];
  v19 = &a2[v16];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = &a1[v17];
  v21 = &a2[v17];
  v22 = *(_QWORD *)v21;
  LOBYTE(v21) = v21[8];
  v23 = *(_QWORD *)v20;
  v24 = v20[8];
  *(_QWORD *)v20 = v22;
  v20[8] = (char)v21;
  sub_24A63BEDC(v23, v24);
  return a1;
}

uint64_t sub_24A68D3D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A68D3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2579498A8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_24A779448();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_24A68D48C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A68D498(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2579498A8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_24A779448();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ZoneView()
{
  uint64_t result;

  result = qword_257949908;
  if (!qword_257949908)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A68D580()
{
  unint64_t v0;
  unint64_t v1;

  sub_24A68D620();
  if (v0 <= 0x3F)
  {
    sub_24A779448();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_24A68D620()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257949918[0])
  {
    sub_24A77A5DC();
    v0 = sub_24A77A3F0();
    if (!v1)
      atomic_store(v0, qword_257949918);
  }
}

uint64_t sub_24A68D674()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24A68D684()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257959880 = v0;
}

void sub_24A68D6C4()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257959888 = v0;
}

void sub_24A68D6FC()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257959890 = v0;
}

void sub_24A68D73C()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257959898 = v0;
}

void sub_24A68D774()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_2579598A0 = v0;
}

void sub_24A68D7AC()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_2579598A8 = v0;
}

void sub_24A68D7E4()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_2579598B0 = v0;
}

uint64_t sub_24A68D81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[4];
  uint64_t v15;

  v1 = type metadata accessor for ZoneView();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + *(int *)(v1 + 24)), *(_QWORD *)(v0 + *(int *)(v1 + 24) + 24));
  sub_24A779748();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579499A0);
  v2 = sub_24A77BFF8();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_24A671CCC(0, v3, 0);
    v4 = v2 + 32;
    v5 = v15;
    do
    {
      sub_24A67BC90(v4, (uint64_t)v14);
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      sub_24A779418();
      v7 = v6;
      v9 = v8;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24A671CCC(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v15;
      }
      v11 = *(_QWORD *)(v5 + 16);
      v10 = *(_QWORD *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_24A671CCC(v10 > 1, v11 + 1, 1);
        v5 = v15;
      }
      *(_QWORD *)(v5 + 16) = v11 + 1;
      v12 = v5 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_24A68D9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_24A77AC24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949958);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = sub_24A77A930();
  *((_QWORD *)v10 + 1) = 0x4008000000000000;
  v10[16] = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949960);
  sub_24A68DB1C(a2, a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  sub_24A77AC18();
  sub_24A63CFF0(&qword_257949968, &qword_257949958, MEMORY[0x24BDF4498]);
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_24A63CD04((uint64_t)v10, &qword_257949958);
}

uint64_t sub_24A68DB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE v21[4];
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a2;
  v27 = a3;
  v4 = sub_24A77A4F8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = type metadata accessor for ZoneView();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949970);
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_24A68DD80();
  v22 = v14;
  v15 = *(_QWORD *)(sub_24A68D81C() + 16);
  swift_bridgeObjectRelease();
  if (v15)
  {
    v16 = *(_QWORD *)(sub_24A68D81C() + 16);
    swift_bridgeObjectRelease();
LABEL_4:
    v28 = 0;
    v29 = v16;
    swift_getKeyPath();
    sub_24A65FAD0(a1, (uint64_t)&v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))type metadata accessor for ZoneView);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v24, v4);
    v18 = (*(unsigned __int8 *)(v8 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v19 = (v9 + *(unsigned __int8 *)(v5 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_BYTE *)(v20 + 24) = v22 & 1;
    sub_24A68EB7C((uint64_t)v10, v20 + v18);
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v20 + v19, &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949978);
    sub_24A646BEC();
    sub_24A68EDC0();
    sub_24A77B5E4();
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v25 + 32))(v27, v13, v26);
  }
  sub_24A77988C();
  result = sub_24A779880();
  v16 = result;
  if ((result & 0x8000000000000000) == 0)
    goto LABEL_4;
  __break(1u);
  return result;
}

uint64_t sub_24A68DD80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;

  v1 = v0 + *(int *)(type metadata accessor for ZoneView() + 28);
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
    return 0;
  v3 = *(double *)v1;
  v2 = *(_QWORD *)(sub_24A68D81C() + 16);
  swift_bridgeObjectRelease();
  if (v2)
  {
    v4 = sub_24A68D81C();
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v2 = 0;
      v6 = (double *)(v4 + 40);
      while (v3 >= *v6 || *(v6 - 1) > v3)
      {
        ++v2;
        v6 += 2;
        if (v5 == v2)
        {
          v2 = 0;
          break;
        }
      }
    }
    else
    {
      v2 = 0;
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_24A68DE3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  double v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53[2];

  v44 = a5;
  v49 = a2;
  v52 = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2579498A8);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_24A779448();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for ZoneBarView();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949990);
  MEMORY[0x24BDAC7A8](v50);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949978);
  MEMORY[0x24BDAC7A8](v51);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v45 = *a1;
  v24 = (a3 & 1) == 0 && v22 == v49;
  v25 = type metadata accessor for ZoneView();
  sub_24A67BC90(a4 + *(int *)(v25 + 24), (uint64_t)v53);
  v26 = a4 + *(int *)(v25 + 20);
  v48 = v12;
  v49 = v11;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v46 = v14;
  v27(v14, v26, v11);
  v28 = 0;
  if (v24)
  {
    if (qword_257946828 != -1)
      swift_once();
    v28 = qword_257959880;
  }
  sub_24A77A4EC();
  v30 = v29;
  v31 = *(_QWORD *)(sub_24A68D81C() + 16);
  swift_bridgeObjectRelease();
  if (v31)
  {
    v32 = *(_QWORD *)(sub_24A68D81C() + 16);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24A77988C();
    v32 = sub_24A779880();
  }
  v33 = sub_24A68E20C();
  v35 = v34;
  KeyPath = swift_getKeyPath();
  v37 = (uint64_t)v47;
  *v47 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  swift_storeEnumTagMultiPayload();
  v38 = swift_getKeyPath();
  sub_24A6865F8(v53, (uint64_t)v17);
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v17[v15[5]], v46, v49);
  *(_QWORD *)&v17[v15[6]] = v45;
  v17[v15[7]] = v24;
  *(_QWORD *)&v17[v15[8]] = v28;
  *(_QWORD *)&v17[v15[9]] = v30;
  *(_QWORD *)&v17[v15[10]] = v32;
  v39 = &v17[v15[11]];
  *(_QWORD *)v39 = v33;
  v39[8] = v35 & 1;
  *(_QWORD *)&v17[v15[12]] = 0x401E000000000000;
  *(_QWORD *)&v17[v15[13]] = 0x401E000000000000;
  sub_24A63F6C4(v37, (uint64_t)&v17[v15[14]], qword_2579498A8);
  v40 = &v17[v15[15]];
  *(_QWORD *)v40 = v38;
  v40[8] = 0;
  sub_24A65FAD0((uint64_t)v17, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ZoneBarView);
  v41 = &v19[*(int *)(v50 + 36)];
  *v41 = v24;
  v41[1] = 0;
  sub_24A65FB14((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ZoneBarView);
  if (v24)
    v42 = 1.0;
  else
    v42 = 0.0;
  sub_24A68EF08((uint64_t)v19, (uint64_t)v21);
  *(double *)&v21[*(int *)(v51 + 36)] = v42;
  sub_24A63CD04((uint64_t)v19, &qword_257949990);
  return sub_24A63F6C4((uint64_t)v21, v52, &qword_257949978);
}

uint64_t sub_24A68E20C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _QWORD v15[5];

  v1 = sub_24A68E374();
  if ((v2 & 1) != 0
    || (v3 = v1, v4 = type metadata accessor for ZoneView(), v5 = v0 + *(int *)(v4 + 28), (*(_BYTE *)(v5 + 8) & 1) != 0))
  {
    *(double *)&result = 0.0;
    return result;
  }
  v7 = *(double *)v5;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + *(int *)(v4 + 24)), *(_QWORD *)(v0 + *(int *)(v4 + 24) + 24));
  sub_24A779748();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579499A0);
  v8 = sub_24A77BFF8();
  *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease());
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v3 >= *(_QWORD *)(v8 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  sub_24A67BC90(v8 + 40 * v3 + 32, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_24A68E49C(v15);
  v10 = v9;
  sub_24A68E708(v15);
  v12 = v11;
  if (v7 > v10)
    v13 = v7;
  else
    v13 = v10;
  if (v12 >= v13)
    v14 = v13;
  else
    v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  *(double *)&result = (v14 - v10) / (v12 - v10);
  return result;
}

uint64_t sub_24A68E374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  BOOL v12;
  uint64_t v14;
  uint64_t v16;

  v1 = type metadata accessor for ZoneView();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0;
  v6 = v0 + *(int *)(v2 + 28);
  if ((*(_BYTE *)(v6 + 8) & 1) == 0)
  {
    v7 = *(double *)v6;
    v8 = sub_24A68D81C();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v5 = 0;
      v10 = (double *)(v8 + 40);
      while (1)
      {
        v11 = *(v10 - 1);
        v12 = v7 >= *v10 || v11 > v7;
        if (!v12 || v7 < v11)
          break;
        ++v5;
        v10 += 2;
        if (v9 == v5)
          goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      sub_24A65FAD0(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ZoneView);
      sub_24A65FB14((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ZoneView);
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
      sub_24A65FAD0(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ZoneView);
      v14 = *(_QWORD *)(sub_24A68D81C() + 16);
      swift_bridgeObjectRelease();
      sub_24A65FB14((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ZoneView);
      return v14 - 1;
    }
  }
  return v5;
}

uint64_t sub_24A68E49C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  double v12;
  uint64_t v13;

  v3 = sub_24A779448();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_24A779424())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    result = sub_24A779430();
    if ((v8 & 1) == 0)
      return result;
LABEL_12:
    result = sub_24A77C01C();
    __break(1u);
    return result;
  }
  v9 = type metadata accessor for ZoneView();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(v9 + 20), v3);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v10 == *MEMORY[0x24BEC5A88])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    result = sub_24A77943C();
    if ((v11 & 1) != 0)
      goto LABEL_12;
  }
  else if (v10 == *MEMORY[0x24BEC5A80])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    result = sub_24A77940C();
    if (v12 >= 0.0)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      return sub_24A77940C();
    }
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_24A68E708(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_24A779448();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_24A779424();
  sub_24A779424();
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v8 != v10)
  {
    result = sub_24A77943C();
    if ((v14 & 1) == 0)
      return result;
LABEL_11:
    result = sub_24A77C01C();
    __break(1u);
    return result;
  }
  sub_24A779430();
  if ((v11 & 1) != 0)
    goto LABEL_11;
  v12 = type metadata accessor for ZoneView();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(int *)(v12 + 20), v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if ((_DWORD)result != *MEMORY[0x24BEC5A88] && (_DWORD)result != *MEMORY[0x24BEC5A80])
  {
    sub_24A7799DC();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

double sub_24A68E93C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double result;
  __int128 v15;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_24A65FAD0(v2, (uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ZoneView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_24A68EB7C((uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  if (qword_257946838 != -1)
    swift_once();
  v8 = *(double *)&qword_257959890;
  v9 = sub_24A77B668();
  sub_24A6424E0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v16, v8, 0, 0.0, 1, v9, v10, (uint64_t)sub_24A68EBC0, v7);
  swift_release();
  v11 = v20;
  a2[4] = v19;
  a2[5] = v11;
  v12 = v22;
  a2[6] = v21;
  a2[7] = v12;
  v13 = v16[1];
  *a2 = v16[0];
  a2[1] = v13;
  result = *(double *)&v17;
  v15 = v18;
  a2[2] = v17;
  a2[3] = v15;
  return result;
}

uint64_t sub_24A68EA90()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)type metadata accessor for ZoneView();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_24A77A5DC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v3 + v1[5];
  v6 = sub_24A779448();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[6]);
  sub_24A63BEDC(*(_QWORD *)(v3 + v1[8]), *(_BYTE *)(v3 + v1[8] + 8));
  return swift_deallocObject();
}

uint64_t sub_24A68EB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ZoneView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A68EBC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ZoneView() - 8) + 80);
  return sub_24A68D9D8(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_24A68EC0C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for ZoneView();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_24A77A4F8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_24A77A5DC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  v10 = (v3 + v4 + v7) & ~v7;
  v11 = v8 + v1[5];
  v12 = sub_24A779448();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  __swift_destroy_boxed_opaque_existential_1(v8 + v1[6]);
  sub_24A63BEDC(*(_QWORD *)(v8 + v1[8]), *(_BYTE *)(v8 + v1[8] + 8));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v10, v5);
  return swift_deallocObject();
}

uint64_t sub_24A68ED40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for ZoneView() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A77A4F8() - 8) + 80);
  return sub_24A68DE3C(a1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

unint64_t sub_24A68EDC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949980;
  if (!qword_257949980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949978);
    v2[0] = sub_24A68EE44();
    v2[1] = sub_24A63CFF0(&qword_2579484B0, &qword_2579484B8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949980);
  }
  return result;
}

unint64_t sub_24A68EE44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949988;
  if (!qword_257949988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949990);
    v2[0] = sub_24A68EEB0();
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949988);
  }
  return result;
}

unint64_t sub_24A68EEB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257949998;
  if (!qword_257949998)
  {
    v1 = type metadata accessor for ZoneBarView();
    result = MEMORY[0x24BD1A1F4](&unk_24A7823B8, v1);
    atomic_store(result, (unint64_t *)&qword_257949998);
  }
  return result;
}

uint64_t sub_24A68EF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24A68EF54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579499A8;
  if (!qword_2579499A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579499B0);
    v2[0] = sub_24A63CFF0(&qword_2579499B8, &qword_2579499C0, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579499A8);
  }
  return result;
}

uint64_t DistanceMetricView.init(distance:formattingManager:distanceType:distanceUnit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(double *)a5 = a6;
  *(_QWORD *)(a5 + 8) = a1;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = a3;
  *(_BYTE *)(a5 + 32) = a4 & 1;
  *(_QWORD *)(a5 + 40) = result;
  *(_BYTE *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_24A68F048()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  id v4;
  id v5;
  uint64_t v6;
  _BYTE v8[24];

  v1 = *(void **)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 48);
  v4 = v1;
  sub_24A63BEC0(v2, v3);
  sub_24A63BEC0(v2, v3);
  sub_24A63E608(v2, v3, v8);
  sub_24A63BEDC(v2, v3);

  sub_24A63BEDC(v2, v3);
  if (v8[0] != 5)
    return 0;
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v5 = (id)qword_2544D6158;
  v6 = sub_24A77856C();

  return v6;
}

void DistanceMetricView.body.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = *v1;
  v4 = v1[2];
  v5 = v1[3];
  v6 = *((_BYTE *)v1 + 32);
  v7 = v1[5];
  v8 = *((_BYTE *)v1 + 48);
  v9 = (id)v1[1];
  sub_24A63BEC0(v7, v8);
  sub_24A63BEC0(v7, v8);
  sub_24A63E608(v7, v8, v14);
  sub_24A63BEDC(v7, v8);

  sub_24A63BEDC(v7, v8);
  if (v14[0] == 5)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v10 = (id)qword_2544D6158;
    v11 = sub_24A77856C();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v13;
}

uint64_t sub_24A68F328@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v3 = *v1;
  v4 = v1[2];
  v5 = v1[3];
  v6 = *((_BYTE *)v1 + 32);
  v7 = (id)v1[1];
  result = sub_24A68F048();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = result;
  *(_QWORD *)(a1 + 48) = v9;
  return result;
}

uint64_t sub_24A68F3C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DistanceMetricView(uint64_t a1)
{

  return sub_24A63BEDC(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for DistanceMetricView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_BYTE *)(a2 + 48);
  v7 = v3;
  sub_24A63BEC0(v5, v6);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for DistanceMetricView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = (void *)a2[1];
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = v2[2];
  v7 = v2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)v2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = v2[5];
  LOBYTE(v2) = *((_BYTE *)v2 + 48);
  sub_24A63BEC0(v8, (char)v2);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = (_BYTE)v2;
  sub_24A63BEDC(v9, v10);
  return a1;
}

uint64_t assignWithTake for DistanceMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  LOBYTE(v5) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v5;
  sub_24A63BEDC(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for DistanceMetricView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DistanceMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DistanceMetricView()
{
  return &type metadata for DistanceMetricView;
}

unint64_t sub_24A68F5F8()
{
  unint64_t result;

  result = qword_2579499C8;
  if (!qword_2579499C8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for DistanceMetricText, &type metadata for DistanceMetricText);
    atomic_store(result, (unint64_t *)&qword_2579499C8);
  }
  return result;
}

uint64_t View.intervalStepBackground(color:)()
{
  uint64_t v0;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3[5];

  v0 = sub_24A779340();
  v3[3] = v0;
  v3[4] = sub_24A68F7BC();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v3);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEC5920], v0);
  sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  v3[0] = sub_24A77B374();
  sub_24A77ACB4();
  sub_24A77B098();
  return swift_release();
}

uint64_t Color.intervalBackgroundApplied()()
{
  uint64_t v0;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3[5];

  v0 = sub_24A779340();
  v3[3] = v0;
  v3[4] = sub_24A68F7BC();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v3);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEC5920], v0);
  sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return sub_24A77B374();
}

unint64_t sub_24A68F7BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257946FD8;
  if (!qword_257946FD8)
  {
    v1 = sub_24A779340();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEC5918], v1);
    atomic_store(result, (unint64_t *)&qword_257946FD8);
  }
  return result;
}

uint64_t sub_24A68F804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948448);
  v2 = sub_24A77A5F4();
  v4[0] = v1;
  v4[1] = sub_24A68F864();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_24A68F864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257948440;
  if (!qword_257948440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948448);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF06D0], v1);
    atomic_store(result, (unint64_t *)&qword_257948440);
  }
  return result;
}

uint64_t EmbeddedPacerConfigurationView.init(pacerConfiguration:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_24A68F8B8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  v1 = sub_24A77856C();
  v3 = v2;

  qword_2579598B8 = v1;
  unk_2579598C0 = v3;
}

uint64_t EmbeddedPacerConfigurationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  char v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  uint64_t v57;

  v51 = a1;
  v2 = sub_24A77AC24();
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A77A6C0();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2579499D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579499D8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579499E0);
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v43 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v1 + 8);
  v39 = sub_24A77A930();
  sub_24A68FCF0((uint64_t)v8);
  v13 = &v8[v6[13]];
  v14 = sub_24A77AA08();
  sub_24A68FEF0(v12, (uint64_t)v52);
  v15 = v52[0];
  v16 = v52[1];
  v17 = v53;
  v38 = v54;
  v18 = v55;
  v19 = v56;
  v20 = v57;
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v13 = v14;
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  *((_QWORD *)v13 + 3) = v15;
  *((_QWORD *)v13 + 4) = v16;
  v13[40] = v17;
  *((_OWORD *)v13 + 3) = v38;
  *((_QWORD *)v13 + 8) = v18;
  v13[72] = v19;
  *((_QWORD *)v13 + 10) = v20;
  *((_QWORD *)v13 + 11) = KeyPath;
  v13[96] = 0;
  *(_QWORD *)&v8[v6[14]] = 0x4022000000000000;
  *(_QWORD *)&v8[v6[15]] = v39;
  v22 = v42;
  sub_24A77A6B4();
  v23 = swift_getKeyPath();
  v24 = (uint64_t)v40;
  v25 = (uint64_t *)&v40[*(int *)(v41 + 36)];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947780);
  v28 = v44;
  v27 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)v25 + *(int *)(v26 + 28), v22, v45);
  *v25 = v23;
  sub_24A63CCC0((uint64_t)v8, v24, &qword_2579499D0);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
  sub_24A63CD04((uint64_t)v8, &qword_2579499D0);
  v29 = v48;
  sub_24A77AC18();
  sub_24A6902CC();
  v30 = v43;
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v50);
  sub_24A63CD04(v24, &qword_2579499D8);
  v31 = sub_24A77B368();
  v32 = swift_getKeyPath();
  v34 = v46;
  v33 = v47;
  v35 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v51, v30, v47);
  v36 = (uint64_t *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579499F8) + 36));
  *v36 = v32;
  v36[1] = v31;
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v30, v33);
}

uint64_t sub_24A68FCF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  SEL *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t *v17;
  _QWORD v19[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A08);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77A5A0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A10);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (_QWORD *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_24A77B3EC();
  sub_24A77A594();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  sub_24A63CCC0((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36), &qword_257949A08);
  *v11 = v12;
  swift_retain();
  sub_24A63CD04((uint64_t)v4, &qword_257949A08);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  v13 = WorkoutConfiguration.displayColor.getter();
  v14 = MEMORY[0x24BD189B8](v13);
  KeyPath = swift_getKeyPath();
  v19[1] = v14;
  swift_retain();
  v16 = sub_24A77A4BC();
  sub_24A63CCC0((uint64_t)v11, a1, &qword_257949A10);
  swift_release();
  v17 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257949A18) + 36));
  *v17 = KeyPath;
  v17[1] = v16;
  return sub_24A63CD04((uint64_t)v11, &qword_257949A10);
}

uint64_t sub_24A68FEF0@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_257946860 != -1)
    swift_once();
  sub_24A645928();
  swift_bridgeObjectRetain();
  v4 = sub_24A77AFD8();
  v28 = v5;
  v29 = v4;
  v30 = v6;
  v27 = v7 & 1;
  WorkoutConfiguration.displayDetail(_:)(a1);
  v8 = sub_24A77AFD8();
  v10 = v9;
  v12 = v11 & 1;
  sub_24A77AD98();
  sub_24A77AD68();
  swift_release();
  v13 = sub_24A77AF84();
  v15 = v14;
  v17 = v16;
  swift_release();
  v18 = v17 & 1;
  sub_24A64596C(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_24A77B38C();
  v19 = sub_24A77AF48();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release();
  sub_24A64596C(v13, v15, v18);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = v28;
  *(_BYTE *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v30;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v21;
  *(_BYTE *)(a2 + 48) = v23 & 1;
  *(_QWORD *)(a2 + 56) = v25;
  sub_24A6436C4(v29, v28, v27);
  swift_bridgeObjectRetain();
  sub_24A6436C4(v19, v21, v23 & 1);
  swift_bridgeObjectRetain();
  sub_24A64596C(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  sub_24A64596C(v29, v28, v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A690124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A72C();
  *a1 = result;
  return result;
}

uint64_t sub_24A69014C()
{
  swift_retain();
  return sub_24A77A738();
}

uint64_t sub_24A690174()
{
  return sub_24A77A7B0();
}

uint64_t sub_24A690194(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_24A77A6C0();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24A77A7BC();
}

uint64_t sub_24A690210@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A81C();
  *a1 = result;
  return result;
}

uint64_t sub_24A690238@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A81C();
  *a1 = result;
  return result;
}

uint64_t sub_24A690260()
{
  return sub_24A77A828();
}

uint64_t sub_24A690284()
{
  return sub_24A77A828();
}

uint64_t sub_24A6902A8()
{
  return sub_24A77A7B0();
}

unint64_t sub_24A6902CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579499E8;
  if (!qword_2579499E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579499D8);
    v2[0] = sub_24A63CFF0(&qword_2579499F0, &qword_2579499D0, (uint64_t)&protocol conformance descriptor for AlignedLeadingAccessoryContentView<A, B>);
    v2[1] = sub_24A63CFF0(&qword_257947778, &qword_257947780, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579499E8);
  }
  return result;
}

uint64_t sub_24A690368@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24A77A72C();
  *a1 = result;
  return result;
}

uint64_t sub_24A690390()
{
  swift_retain();
  return sub_24A77A738();
}

uint64_t sub_24A6903B8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for EmbeddedPacerConfigurationView()
{
  return &type metadata for EmbeddedPacerConfigurationView;
}

unint64_t sub_24A6903DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_257949A00;
  if (!qword_257949A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579499F8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579499D8);
    v2[3] = sub_24A6902CC();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949A00);
  }
  return result;
}

id MusicTrackBridge.__allocating_init(musicTrack:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___SMMusicTrack_musicTrack];
  v5 = sub_24A778A58();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id MusicTrackBridge.init(musicTrack:)(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR___SMMusicTrack_musicTrack];
  v4 = sub_24A778A58();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MusicTrackBridge();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for MusicTrackBridge()
{
  uint64_t result;

  result = qword_257949A50;
  if (!qword_257949A50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A69060C()
{
  return sub_24A778A10();
}

uint64_t sub_24A690640()
{
  return sub_24A778A28();
}

uint64_t sub_24A690674()
{
  return sub_24A778A34();
}

id sub_24A6906A8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A69070C()
{
  return sub_24A778A1C();
}

uint64_t sub_24A690778()
{
  return sub_24A778A4C();
}

uint64_t sub_24A6907E4()
{
  return sub_24A778A40();
}

id MusicTrackBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MusicTrackBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MusicTrackBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicTrackBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A6908F4()
{
  return type metadata accessor for MusicTrackBridge();
}

uint64_t sub_24A6908FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778A58();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MusicTrackBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MusicTrackBridge.__allocating_init(musicTrack:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MusicTrackBridge.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MusicTrackBridge.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MusicTrackBridge.artist.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MusicTrackBridge.album.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MusicTrackBridge.startTime.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MusicTrackBridge.duration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t TrainingLoadDayView.init(fractionalDifferenceFromAcuteToChronicBaseline:widgetRenderingMode:isLoading:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t DayViewModel;
  uint64_t DayView;
  uint64_t result;

  if ((a2 & 1) != 0)
  {
    DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DayViewModel - 8) + 56))(a5, 1, 1, DayViewModel);
  }
  else
  {
    v9 = type metadata accessor for TrainingLoadDayViewModel();
    *(_QWORD *)((char *)a5 + *(int *)(v9 + 28)) = 0x3FE3333333333333;
    *a5 = a1;
    sub_24A779C7C();
    sub_24A779C70();
    v10 = (_QWORD *)((char *)a5 + *(int *)(v9 + 24));
    *v10 = v11;
    v10[1] = v12;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a5, 0, 1, v9);
  }
  DayView = type metadata accessor for TrainingLoadDayView();
  result = sub_24A63F6C4(a3, (uint64_t)a5 + *(int *)(DayView + 20), &qword_257948F30);
  *((_BYTE *)a5 + *(int *)(DayView + 24)) = a4 & 1;
  return result;
}

uint64_t type metadata accessor for TrainingLoadDayView()
{
  uint64_t result;

  result = qword_257949B50;
  if (!qword_257949B50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainingLoadDayView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t DayViewModel;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t (**v24)();
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (**v30)();
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v35 = a1;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A60);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  v8 = *(_QWORD *)(DayViewModel - 8);
  MEMORY[0x24BDAC7A8](DayViewModel);
  v32 = (uint64_t)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t (**)())((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A78);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A80);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + *(int *)(type metadata accessor for TrainingLoadDayView() + 24)) == 1)
  {
    v19 = sub_24A77B368();
    *(_QWORD *)v15 = 0x4010000000000000;
    *((_QWORD *)v15 + 1) = -1;
    *((_WORD *)v15 + 8) = 256;
    *((_QWORD *)v15 + 3) = v19;
    *((_QWORD *)v15 + 4) = 0x3FB999999999999ALL;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949AA0);
    sub_24A69225C();
    sub_24A6923E8();
    sub_24A77AB28();
    sub_24A63CCC0((uint64_t)v18, (uint64_t)v12, &qword_257949A80);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949A88);
    sub_24A6921F0();
    sub_24A63CFF0(&qword_257949AF0, &qword_257949A88, MEMORY[0x24BDEC6F8]);
    sub_24A77AB28();
    sub_24A63CD04((uint64_t)v18, &qword_257949A80);
    return swift_release();
  }
  else
  {
    v21 = v2;
    v29[1] = v10;
    v30 = v12;
    v22 = v34;
    v31 = v16;
    v23 = (void (*)(uint64_t, char *, uint64_t))v21;
    sub_24A63CCC0(v21, (uint64_t)v6, &qword_257949A68);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, DayViewModel) == 1)
    {
      sub_24A63CD04((uint64_t)v6, &qword_257949A68);
      v24 = v30;
      *v30 = sub_24A6920F4;
      v24[1] = 0;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257949A88);
      sub_24A6921F0();
      sub_24A63CFF0(&qword_257949AF0, &qword_257949A88, MEMORY[0x24BDEC6F8]);
      return sub_24A77AB28();
    }
    else
    {
      v25 = v32;
      sub_24A692484((uint64_t)v6, v32);
      v26 = sub_24A6D23B8();
      sub_24A6D2554();
      v27 = (uint64_t)v33;
      *v33 = v26;
      *(_QWORD *)(v27 + 8) = v28;
      sub_24A691040(v25, v23, v27 + *(int *)(v22 + 44));
      sub_24A63CCC0(v27, (uint64_t)v15, &qword_257949A60);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257949AA0);
      sub_24A69225C();
      sub_24A6923E8();
      sub_24A77AB28();
      sub_24A63CCC0((uint64_t)v18, (uint64_t)v30, &qword_257949A80);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257949A88);
      sub_24A6921F0();
      sub_24A63CFF0(&qword_257949AF0, &qword_257949A88, MEMORY[0x24BDEC6F8]);
      sub_24A77AB28();
      sub_24A63CD04((uint64_t)v18, &qword_257949A80);
      sub_24A63CD04(v27, &qword_257949A60);
      return sub_24A65FB14(v25, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayViewModel);
    }
  }
}

uint64_t sub_24A691040@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *);
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t);
  uint64_t v134;
  char *v135;
  void (*v136)(char *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  void (*v162)(char *, uint64_t, uint64_t);
  uint64_t v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  void (*v171)(uint64_t, char *, uint64_t);
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;

  v171 = a2;
  v141 = a3;
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949BB0);
  v148 = *(_QWORD *)(v140 - 8);
  v4 = MEMORY[0x24BDAC7A8](v140);
  v139 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v147 = (char *)&v134 - v6;
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949BB8);
  v7 = MEMORY[0x24BDAC7A8](v137);
  v142 = (uint64_t)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v152 = (uint64_t)&v134 - v9;
  v10 = sub_24A779CAC();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FC90];
  v12 = *(_QWORD **)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v169 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v134 - v15;
  v17 = sub_24A77A684();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED998];
  v19 = v17;
  v173 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949BC0);
  v157 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174);
  v150 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949BC8);
  v23 = MEMORY[0x24BDAC7A8](v170);
  v138 = (uint64_t)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v146 = (uint64_t)&v134 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v145 = (uint64_t)&v134 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v144 = (uint64_t)&v134 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v143 = (uint64_t)&v134 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v151 = (uint64_t)&v134 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v165 = (uint64_t)&v134 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v166 = (uint64_t)&v134 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v167 = (uint64_t)&v134 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v153 = (uint64_t)&v134 - v41;
  v42 = *(int *)(v19 + 20);
  v43 = v21;
  v149 = v21;
  v44 = &v21[v42];
  v164 = *MEMORY[0x24BDEEB68];
  v45 = v164;
  v46 = sub_24A77A9D8();
  v162 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104);
  v163 = v46;
  v162(v44, v45, v46);
  __asm { FMOV            V0.2D, #4.0 }
  v172 = _Q0;
  *v43 = _Q0;
  v52 = *(int *)(type metadata accessor for TrainingLoadDayViewModel() + 20);
  v160 = a1;
  v53 = a1 + v52;
  LODWORD(v161) = *MEMORY[0x24BE3FC80];
  v54 = (void (*)(char *))v12[13];
  v54(v16);
  v156 = sub_24A63C880(&qword_257949BD0, v11, MEMORY[0x24BE3FCA8]);
  v155 = v53;
  sub_24A77BAF4();
  sub_24A77BAF4();
  v55 = (void (*)(char *, uint64_t))v12[1];
  v55(v16, v10);
  v168 = sub_24A63C880((unint64_t *)&qword_257949BD8, v18, MEMORY[0x24BDED988]);
  v56 = v150;
  v57 = (uint64_t)v149;
  sub_24A77B05C();
  sub_24A65FB14(v57, v18);
  v58 = sub_24A6D23B8();
  v159 = (void (*)(char *, uint64_t, uint64_t))v12[2];
  v159(v16, v53, v10);
  v59 = v169;
  ((void (*)(char *, _QWORD, uint64_t))v54)(v169, v161, v10);
  v60 = (void (*)(char *, uint64_t, uint64_t))v54;
  v158 = sub_24A63C880(&qword_257949BE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FC90], MEMORY[0x24BE3FCA0]);
  LOBYTE(v57) = sub_24A77B974();
  v154 = v55;
  v55(v59, v10);
  v55(v16, v10);
  v161 = (uint64_t)v171 + *(int *)(type metadata accessor for TrainingLoadDayView() + 20);
  v61 = sub_24A72BFD4((v57 & 1) == 0, v161, v58);
  v62 = v157;
  v171 = *(void (**)(uint64_t, char *, uint64_t))(v157 + 16);
  v63 = v167;
  v64 = v174;
  v171(v167, v56, v174);
  *(_QWORD *)(v63 + *(int *)(v170 + 36)) = v61;
  v157 = *(_QWORD *)(v62 + 8);
  ((void (*)(char *, uint64_t))v157)(v56, v64);
  sub_24A63F6C4(v63, v153, &qword_257949BC8);
  v65 = v149;
  v162(&v149[*(int *)(v173 + 20)], v164, v163);
  *(_OWORD *)v65 = v172;
  v66 = *MEMORY[0x24BE3FC58];
  v60(v16, v66, v10);
  v67 = v155;
  sub_24A77BAF4();
  sub_24A77BAF4();
  v68 = v154;
  v154(v16, v10);
  sub_24A77B05C();
  sub_24A65FB14((uint64_t)v65, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v69 = sub_24A6D23B8();
  v159(v16, v67, v10);
  v70 = v169;
  v60(v169, v66, v10);
  LOBYTE(v61) = sub_24A77B974();
  v68(v70, v10);
  v68(v16, v10);
  v71 = sub_24A72BFD4((v61 & 1) == 0, v161, v69);
  v72 = v166;
  v73 = v150;
  v74 = v174;
  v171(v166, v150, v174);
  *(_QWORD *)(v72 + *(int *)(v170 + 36)) = v71;
  ((void (*)(char *, uint64_t))v157)(v73, v74);
  sub_24A63F6C4(v72, v167, &qword_257949BC8);
  v162(&v65[*(int *)(v173 + 20)], v164, v163);
  *(_OWORD *)v65 = v172;
  v75 = *MEMORY[0x24BE3FC50];
  v76 = v16;
  v77 = v60;
  v136 = v60;
  v60(v16, v75, v10);
  v78 = v155;
  sub_24A77BAF4();
  sub_24A77BAF4();
  v135 = v76;
  v79 = v154;
  v154(v76, v10);
  v80 = (uint64_t)v149;
  sub_24A77B05C();
  v81 = (char *)v80;
  sub_24A65FB14(v80, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v82 = sub_24A6D23B8();
  v159(v76, v78, v10);
  v83 = v169;
  v77(v169, v75, v10);
  v84 = v83;
  LOBYTE(v83) = sub_24A77B974();
  v79(v84, v10);
  v79(v76, v10);
  v85 = sub_24A72BFD4((v83 & 1) == 0, v161, v82);
  v86 = v165;
  v87 = v174;
  v171(v165, v73, v174);
  *(_QWORD *)(v86 + *(int *)(v170 + 36)) = v85;
  v88 = (void (*)(char *, uint64_t))v157;
  ((void (*)(char *, uint64_t))v157)(v73, v87);
  sub_24A63F6C4(v86, v166, &qword_257949BC8);
  v89 = v81;
  v90 = &v81[*(int *)(v173 + 20)];
  v91 = v164;
  v93 = v162;
  v92 = v163;
  v162(v90, v164, v163);
  *(_OWORD *)v89 = v172;
  sub_24A77B05C();
  sub_24A65FB14((uint64_t)v89, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v94 = sub_24A77B368();
  v95 = v142;
  v96 = v174;
  v171(v142, v73, v174);
  *(_QWORD *)(v95 + *(int *)(v137 + 36)) = v94;
  v88(v73, v96);
  sub_24A63F6C4(v95, v152, &qword_257949BB8);
  v93(&v89[*(int *)(v173 + 20)], v91, v92);
  *(_OWORD *)v89 = v172;
  v97 = *MEMORY[0x24BE3FC60];
  v98 = v135;
  v99 = v136;
  v136(v135, v97, v10);
  v100 = v155;
  sub_24A77BAF4();
  sub_24A77BAF4();
  v101 = v154;
  v154(v98, v10);
  v102 = v150;
  sub_24A77B05C();
  sub_24A65FB14((uint64_t)v89, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v103 = sub_24A6D23B8();
  v159(v98, v100, v10);
  v104 = v169;
  v99(v169, v97, v10);
  LOBYTE(v94) = sub_24A77B974();
  v101(v104, v10);
  v101(v98, v10);
  v105 = sub_24A72BFD4((v94 & 1) == 0, v161, v103);
  v106 = v151;
  v107 = v174;
  v171(v151, v102, v174);
  *(_QWORD *)(v106 + *(int *)(v170 + 36)) = v105;
  v108 = v102;
  ((void (*)(char *, uint64_t))v157)(v102, v107);
  sub_24A63F6C4(v106, v165, &qword_257949BC8);
  v162(&v89[*(int *)(v173 + 20)], v164, v163);
  *(_OWORD *)v89 = v172;
  v109 = *MEMORY[0x24BE3FC88];
  v99(v98, v109, v10);
  v110 = v155;
  sub_24A77BAF4();
  sub_24A77BAF4();
  v111 = v154;
  v154(v98, v10);
  sub_24A77B05C();
  sub_24A65FB14((uint64_t)v89, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v112 = sub_24A6D23B8();
  v159(v98, v110, v10);
  v113 = v169;
  v99(v169, v109, v10);
  v114 = v113;
  LOBYTE(v113) = sub_24A77B974();
  v111(v114, v10);
  v111(v98, v10);
  v115 = sub_24A72BFD4((v113 & 1) == 0, v161, v112);
  v116 = v143;
  v117 = v174;
  v171(v143, v108, v174);
  *(_QWORD *)(v116 + *(int *)(v170 + 36)) = v115;
  ((void (*)(char *, uint64_t))v157)(v108, v117);
  v118 = v151;
  sub_24A63F6C4(v116, v151, &qword_257949BC8);
  v119 = TrainingLoadBand.color.getter();
  TrainingLoadBand.color.getter();
  v120 = sub_24A77B374();
  swift_release();
  v175 = v119;
  v176 = v120;
  v178 = 0;
  v179 = 0;
  v177 = 0x4010000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949BE8);
  sub_24A6938FC();
  v121 = v147;
  sub_24A77B05C();
  swift_release();
  swift_release();
  v174 = sub_24A77B350();
  sub_24A63CCC0(v153, v116, &qword_257949BC8);
  v122 = v144;
  sub_24A63CCC0(v167, v144, &qword_257949BC8);
  v123 = v145;
  sub_24A63CCC0(v166, v145, &qword_257949BC8);
  v124 = v142;
  sub_24A63CCC0(v152, v142, &qword_257949BB8);
  sub_24A63CCC0(v165, v146, &qword_257949BC8);
  v125 = v138;
  sub_24A63CCC0(v118, v138, &qword_257949BC8);
  v126 = *(void (**)(char *, char *, uint64_t))(v148 + 16);
  v127 = v139;
  v128 = v140;
  v126(v139, v121, v140);
  v129 = v141;
  sub_24A63CCC0(v116, v141, &qword_257949BC8);
  v130 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257949C10);
  sub_24A63CCC0(v122, v129 + v130[12], &qword_257949BC8);
  sub_24A63CCC0(v123, v129 + v130[16], &qword_257949BC8);
  sub_24A63CCC0(v124, v129 + v130[20], &qword_257949BB8);
  v131 = v146;
  sub_24A63CCC0(v146, v129 + v130[24], &qword_257949BC8);
  sub_24A63CCC0(v125, v129 + v130[28], &qword_257949BC8);
  v126((char *)(v129 + v130[32]), v127, v128);
  *(_QWORD *)(v129 + v130[36]) = v174;
  v132 = *(void (**)(char *, uint64_t))(v148 + 8);
  swift_retain();
  v132(v147, v128);
  sub_24A63CD04(v151, &qword_257949BC8);
  sub_24A63CD04(v165, &qword_257949BC8);
  sub_24A63CD04(v152, &qword_257949BB8);
  sub_24A63CD04(v166, &qword_257949BC8);
  sub_24A63CD04(v167, &qword_257949BC8);
  sub_24A63CD04(v153, &qword_257949BC8);
  swift_release();
  v132(v127, v128);
  sub_24A63CD04(v125, &qword_257949BC8);
  sub_24A63CD04(v131, &qword_257949BC8);
  sub_24A63CD04(v124, &qword_257949BB8);
  sub_24A63CD04(v145, &qword_257949BC8);
  sub_24A63CD04(v144, &qword_257949BC8);
  return sub_24A63CD04(v143, &qword_257949BC8);
}

uint64_t sub_24A6920F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949C18);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (uint64_t *)((char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24A77A4EC();
  *v2 = sub_24A77B668();
  v2[1] = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949C20);
  sub_24A6924D8((uint64_t)v2 + *(int *)(v4 + 44));
  sub_24A63CFF0(&qword_257949C28, &qword_257949C18, MEMORY[0x24BDF4750]);
  sub_24A77B05C();
  return sub_24A63CD04((uint64_t)v2, &qword_257949C18);
}

unint64_t sub_24A6921F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949A90;
  if (!qword_257949A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949A80);
    v2[0] = sub_24A69225C();
    v2[1] = sub_24A6923E8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949A90);
  }
  return result;
}

unint64_t sub_24A69225C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949A98;
  if (!qword_257949A98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949AA0);
    v2[0] = sub_24A6922E0(&qword_257949AA8, &qword_257949AB0, (uint64_t (*)(void))sub_24A692364);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949A98);
  }
  return result;
}

uint64_t sub_24A6922E0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A692364()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949AB8;
  if (!qword_257949AB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949AC0);
    v2[0] = sub_24A6650A4();
    v2[1] = sub_24A63CFF0(&qword_257948450, &qword_257948458, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949AB8);
  }
  return result;
}

unint64_t sub_24A6923E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949AC8;
  if (!qword_257949AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949A60);
    v2[0] = sub_24A63CFF0(&qword_257949AD0, &qword_257949AD8, MEMORY[0x24BDEB9A8]);
    v2[1] = sub_24A63CFF0(&qword_257949AE0, &qword_257949AE8, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEC550], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949AC8);
  }
  return result;
}

uint64_t sub_24A692484(uint64_t a1, uint64_t a2)
{
  uint64_t DayViewModel;

  DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DayViewModel - 8) + 32))(a2, a1, DayViewModel);
  return a2;
}

uint64_t sub_24A6924C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6924D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  unsigned __int8 v80;
  unsigned __int8 v81;
  unsigned __int8 v82;
  unsigned __int8 v83;
  unsigned __int8 v84;
  int v85;
  __int16 v86;
  _BYTE v87[7];
  _BYTE v88[7];
  _BYTE v89[7];
  _BYTE v90[7];
  _BYTE v91[7];
  _BYTE v92[7];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  unsigned __int8 v104;
  _BYTE v105[7];
  uint64_t v106;
  unsigned __int8 v107;
  _BYTE v108[7];
  uint64_t v109;
  unsigned __int8 v110;
  _BYTE v111[7];
  uint64_t v112;
  unsigned __int8 v113;
  _BYTE v114[7];
  uint64_t v115;
  unsigned __int8 v116;
  _BYTE v117[7];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int16 v122;
  int v123;
  __int16 v124;
  uint64_t v125;

  v2 = sub_24A77A69C();
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_24A77B698();
  v4 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949C30);
  MEMORY[0x24BDAC7A8](v45);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949C38);
  v9 = MEMORY[0x24BDAC7A8](v52);
  v46 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v55 = (uint64_t)&v34 - v11;
  sub_24A77B668();
  sub_24A64268C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v102, 0.0, 1, INFINITY, 0);
  v64 = v102;
  v65 = v103;
  v66 = v106;
  v57 = v109;
  v54 = v112;
  v56 = v115;
  v50 = v119;
  v51 = v118;
  v84 = BYTE8(v102);
  v83 = v104;
  v82 = v107;
  v81 = v110;
  v80 = v113;
  v79 = v116;
  sub_24A77B368();
  v48 = sub_24A77B374();
  swift_release();
  v58 = v84;
  v59 = v83;
  v60 = v82;
  v61 = v81;
  v62 = v80;
  v63 = v79;
  v49 = sub_24A77B368();
  sub_24A77B668();
  sub_24A77A4B0();
  v44 = v67;
  v43 = v68;
  v42 = v69;
  v41 = v70;
  v39 = v72;
  v40 = v71;
  sub_24A77B368();
  v38 = sub_24A77B374();
  swift_release();
  sub_24A77B668();
  sub_24A77A4B0();
  v37 = v73;
  v12 = v75;
  v35 = v76;
  v36 = v74;
  v13 = v77;
  v34 = v78;
  v14 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF50A0], v47);
  v15 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v53, v6, v14);
  sub_24A6939C4(v15, (uint64_t)&v8[*(int *)(v45 + 36)]);
  *(_QWORD *)v8 = v37;
  v8[8] = v36;
  *((_QWORD *)v8 + 2) = v12;
  v8[24] = v35;
  v16 = v34;
  *((_QWORD *)v8 + 4) = v13;
  *((_QWORD *)v8 + 5) = v16;
  sub_24A65FB14(v15, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v14);
  v17 = sub_24A77B350();
  v18 = v46;
  sub_24A63CCC0((uint64_t)v8, v46, &qword_257949C30);
  *(_QWORD *)(v18 + *(int *)(v52 + 36)) = v17;
  sub_24A63CD04((uint64_t)v8, &qword_257949C30);
  v19 = v55;
  sub_24A63F6C4(v18, v55, &qword_257949C38);
  sub_24A63CCC0(v19, v18, &qword_257949C38);
  *(_QWORD *)&v93 = v64;
  BYTE8(v93) = v58;
  *(_DWORD *)((char *)&v93 + 9) = *(_DWORD *)v92;
  HIDWORD(v93) = *(_DWORD *)&v92[3];
  *(_QWORD *)&v94 = v65;
  BYTE8(v94) = v59;
  *(_DWORD *)((char *)&v94 + 9) = *(_DWORD *)v91;
  HIDWORD(v94) = *(_DWORD *)&v91[3];
  *(_QWORD *)&v95 = v66;
  BYTE8(v95) = v60;
  HIDWORD(v95) = *(_DWORD *)&v90[3];
  *(_DWORD *)((char *)&v95 + 9) = *(_DWORD *)v90;
  *(_QWORD *)&v96 = v57;
  BYTE8(v96) = v61;
  *(_DWORD *)((char *)&v96 + 9) = *(_DWORD *)v89;
  HIDWORD(v96) = *(_DWORD *)&v89[3];
  *(_QWORD *)&v97 = v54;
  BYTE8(v97) = v62;
  *(_DWORD *)((char *)&v97 + 9) = *(_DWORD *)v88;
  HIDWORD(v97) = *(_DWORD *)&v88[3];
  *(_QWORD *)&v98 = v56;
  BYTE8(v98) = v63;
  *(_DWORD *)((char *)&v98 + 9) = *(_DWORD *)v87;
  HIDWORD(v98) = *(_DWORD *)&v87[3];
  v21 = v50;
  v20 = v51;
  *(_QWORD *)&v99 = v51;
  *((_QWORD *)&v99 + 1) = v50;
  *(_QWORD *)&v100 = 0x4010000000000000;
  *((_QWORD *)&v100 + 1) = -1;
  LOWORD(v101) = 256;
  WORD3(v101) = v86;
  *(_DWORD *)((char *)&v101 + 2) = v85;
  v22 = v48;
  *((_QWORD *)&v101 + 1) = v48;
  v23 = v96;
  *(_OWORD *)(a1 + 32) = v95;
  *(_OWORD *)(a1 + 48) = v23;
  v24 = v94;
  *(_OWORD *)a1 = v93;
  *(_OWORD *)(a1 + 16) = v24;
  v25 = v97;
  v26 = v98;
  v27 = v101;
  v28 = v99;
  *(_OWORD *)(a1 + 112) = v100;
  *(_OWORD *)(a1 + 128) = v27;
  *(_OWORD *)(a1 + 80) = v26;
  *(_OWORD *)(a1 + 96) = v28;
  *(_OWORD *)(a1 + 64) = v25;
  v29 = v44;
  *(_QWORD *)(a1 + 144) = v49;
  *(_QWORD *)(a1 + 152) = v29;
  *(_BYTE *)(a1 + 160) = v43;
  *(_QWORD *)(a1 + 168) = v42;
  *(_BYTE *)(a1 + 176) = v41;
  v31 = v38;
  v30 = v39;
  *(_QWORD *)(a1 + 184) = v40;
  *(_QWORD *)(a1 + 192) = v30;
  *(_QWORD *)(a1 + 200) = v31;
  *(_QWORD *)(a1 + 208) = 0x4010000000000000;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949C40);
  sub_24A63CCC0(v18, a1 + *(int *)(v32 + 64), &qword_257949C38);
  sub_24A693A08((uint64_t)&v93);
  swift_retain();
  swift_retain();
  sub_24A63CD04(v55, &qword_257949C38);
  sub_24A63CD04(v18, &qword_257949C38);
  swift_release();
  swift_release();
  *(_QWORD *)&v102 = v64;
  BYTE8(v102) = v58;
  *(_DWORD *)((char *)&v102 + 9) = *(_DWORD *)v92;
  HIDWORD(v102) = *(_DWORD *)&v92[3];
  v103 = v65;
  v104 = v59;
  *(_DWORD *)v105 = *(_DWORD *)v91;
  *(_DWORD *)&v105[3] = *(_DWORD *)&v91[3];
  v106 = v66;
  v107 = v60;
  *(_DWORD *)v108 = *(_DWORD *)v90;
  *(_DWORD *)&v108[3] = *(_DWORD *)&v90[3];
  v109 = v57;
  v110 = v61;
  *(_DWORD *)v111 = *(_DWORD *)v89;
  *(_DWORD *)&v111[3] = *(_DWORD *)&v89[3];
  v112 = v54;
  v113 = v62;
  *(_DWORD *)v114 = *(_DWORD *)v88;
  *(_DWORD *)&v114[3] = *(_DWORD *)&v88[3];
  v115 = v56;
  v116 = v63;
  *(_DWORD *)v117 = *(_DWORD *)v87;
  *(_DWORD *)&v117[3] = *(_DWORD *)&v87[3];
  v118 = v20;
  v119 = v21;
  v120 = 0x4010000000000000;
  v121 = -1;
  v122 = 256;
  v124 = v86;
  v123 = v85;
  v125 = v22;
  return sub_24A693A30((uint64_t)&v102);
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadDayView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *DayViewModel;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
    v8 = *((_QWORD *)DayViewModel - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, DayViewModel))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v11 = DayViewModel[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_24A779CAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
      *(uint64_t *)((char *)a1 + DayViewModel[7]) = *(uint64_t *)((char *)a2 + DayViewModel[7]);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, DayViewModel);
    }
    v15 = *(int *)(a3 + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_24A77B848();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for TrainingLoadDayView(uint64_t a1, uint64_t a2)
{
  uint64_t DayViewModel;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DayViewModel - 8) + 48))(a1, 1, DayViewModel))
  {
    v5 = a1 + *(int *)(DayViewModel + 20);
    v6 = sub_24A779CAC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_24A77B848();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

_QWORD *initializeWithCopy for TrainingLoadDayView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *DayViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  v7 = *((_QWORD *)DayViewModel - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, DayViewModel))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = DayViewModel[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_24A779CAC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
    *(_QWORD *)((char *)a1 + DayViewModel[7]) = *(_QWORD *)((char *)a2 + DayViewModel[7]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_24A77B848();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithCopy for TrainingLoadDayView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *DayViewModel;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  v7 = *((_QWORD *)DayViewModel - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, DayViewModel);
  v10 = v8(a2, 1, DayViewModel);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = DayViewModel[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_24A779CAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
      *(_QWORD *)((char *)a1 + DayViewModel[7]) = *(_QWORD *)((char *)a2 + DayViewModel[7]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_24A65FB14((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayViewModel);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v26 = DayViewModel[5];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_24A779CAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  v30 = DayViewModel[6];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  *(_QWORD *)((char *)a1 + DayViewModel[7]) = *(_QWORD *)((char *)a2 + DayViewModel[7]);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_24A77B848();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *initializeWithTake for TrainingLoadDayView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *DayViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  v7 = *((_QWORD *)DayViewModel - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, DayViewModel))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = DayViewModel[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_24A779CAC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
    *(_QWORD *)((char *)a1 + DayViewModel[7]) = *(_QWORD *)((char *)a2 + DayViewModel[7]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_24A77B848();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for TrainingLoadDayView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *DayViewModel;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  DayViewModel = (int *)type metadata accessor for TrainingLoadDayViewModel();
  v7 = *((_QWORD *)DayViewModel - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, DayViewModel);
  v10 = v8(a2, 1, DayViewModel);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = DayViewModel[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_24A779CAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
      *(_QWORD *)((char *)a1 + DayViewModel[7]) = *(_QWORD *)((char *)a2 + DayViewModel[7]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, DayViewModel);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_24A65FB14((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayViewModel);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v26 = DayViewModel[5];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_24A779CAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  *(_OWORD *)((char *)a1 + DayViewModel[6]) = *(_OWORD *)((char *)a2 + DayViewModel[6]);
  *(_QWORD *)((char *)a1 + DayViewModel[7]) = *(_QWORD *)((char *)a2 + DayViewModel[7]);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_24A77B848();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadDayView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A693604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TrainingLoadDayView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6936D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A68);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_24A69377C()
{
  unint64_t v0;
  unint64_t v1;

  sub_24A693828(319, &qword_257949B60, (void (*)(uint64_t))type metadata accessor for TrainingLoadDayViewModel);
  if (v0 <= 0x3F)
  {
    sub_24A693828(319, qword_257949B68, (void (*)(uint64_t))MEMORY[0x24BDFADE0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_24A693828(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_24A77BDE8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_24A693878()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949BA0;
  if (!qword_257949BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949BA8);
    v2[0] = sub_24A6921F0();
    v2[1] = sub_24A63CFF0(&qword_257949AF0, &qword_257949A88, MEMORY[0x24BDEC6F8]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949BA0);
  }
  return result;
}

unint64_t sub_24A6938FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949BF0;
  if (!qword_257949BF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949BE8);
    v2[0] = sub_24A6922E0(&qword_257949BF8, &qword_257949C00, (uint64_t (*)(void))sub_24A693980);
    v2[1] = MEMORY[0x24BDEC468];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949BF0);
  }
  return result;
}

unint64_t sub_24A693980()
{
  unint64_t result;

  result = qword_257949C08;
  if (!qword_257949C08)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4428], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_257949C08);
  }
  return result;
}

uint64_t sub_24A6939C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A77A69C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A693A08(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_24A693A30(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t _HKWorkoutGoalType.symbolName.getter(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000015;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD00000000000001CLL;
      break;
    case 2:
      result = 0x72656D6974;
      break;
    case 3:
      result = 0x656D616C66;
      break;
    default:
      result = sub_24A77C01C();
      __break(1u);
      break;
  }
  return result;
}

id CatalogWorkoutBridge.__allocating_init(workout:isPartOfAStack:)(uint64_t a1, char a2)
{
  objc_class *v2;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___SMCatalogWorkout_workout];
  v7 = sub_24A778CF8();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR___SMCatalogWorkout_isPartOfAStack] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

uint64_t CatalogWorkoutBridge.workout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___SMCatalogWorkout_workout;
  v4 = sub_24A778CF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CatalogWorkoutBridge.isPartOfAStack.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SMCatalogWorkout_isPartOfAStack);
}

id CatalogWorkoutBridge.init(workout:isPartOfAStack:)(uint64_t a1, char a2)
{
  _BYTE *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v5 = &v2[OBJC_IVAR___SMCatalogWorkout_workout];
  v6 = sub_24A778CF8();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  v2[OBJC_IVAR___SMCatalogWorkout_isPartOfAStack] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for CatalogWorkoutBridge();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for CatalogWorkoutBridge()
{
  uint64_t result;

  result = qword_257949C98;
  if (!qword_257949C98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A693D4C()
{
  return sub_24A778C74();
}

uint64_t sub_24A693D80()
{
  return sub_24A778C50();
}

id sub_24A693DB4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A693E18()
{
  return sub_24A778CB0();
}

uint64_t sub_24A693E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t i;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  id v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  objc_class *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  void (*v62)(char *, unint64_t, uint64_t);
  char *v63;
  objc_super v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949C48);
  MEMORY[0x24BDAC7A8](v0);
  v53 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_24A778AF4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v52 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v51 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v51 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v51 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)&v51 - v12;
  v13 = sub_24A778C68();
  v14 = *(_QWORD *)(v13 + 56);
  v54 = v13 + 56;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v55 = (unint64_t)(v15 + 63) >> 6;
  v59 = v13;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v60 = (v17 - 1) & v17;
  v61 = v19;
  for (i = __clz(__rbit64(v17)) | (v19 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = *(_QWORD *)(v59 + 48) + *(_QWORD *)(v3 + 72) * i;
    v62 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v27 = v57;
    v62(v57, v26, v2);
    v28 = v63;
    v56 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v56(v63, v27, v2);
    v29 = sub_24A778AE8();
    v31 = v30;
    v66 = v29;
    v67 = v30;
    v33 = v32 & 1;
    v68 = v32 & 1;
    v65 = 4;
    sub_24A694390();
    sub_24A6943D4();
    v34 = sub_24A778B9C();
    sub_24A683100(v29, v31, v33);
    v35 = v58;
    v62(v58, (unint64_t)v28, v2);
    if ((v34 & 1) != 0)
      break;
    v36 = sub_24A778AE8();
    v38 = v37;
    v66 = v36;
    v67 = v37;
    v40 = v39 & 1;
    v68 = v39 & 1;
    v65 = 2;
    v41 = sub_24A778B9C();
    sub_24A683100(v36, v38, v40);
    v42 = *(void (**)(char *, uint64_t))(v3 + 8);
    v42(v35, v2);
    if ((v41 & 1) != 0)
      goto LABEL_28;
    result = ((uint64_t (*)(char *, uint64_t))v42)(v63, v2);
    v17 = v60;
    v19 = v61;
    if (v60)
      goto LABEL_4;
LABEL_5:
    v21 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return result;
    }
    if (v21 >= v55)
    {
      swift_release();
      v43 = 1;
      v22 = (uint64_t)v53;
      goto LABEL_29;
    }
    v22 = (uint64_t)v53;
    v23 = *(_QWORD *)(v54 + 8 * v21);
    v24 = v19 + 1;
    if (!v23)
    {
      v24 = v19 + 2;
      if (v19 + 2 >= v55)
        goto LABEL_34;
      v23 = *(_QWORD *)(v54 + 8 * v24);
      if (!v23)
      {
        v24 = v19 + 3;
        if (v19 + 3 >= v55)
          goto LABEL_34;
        v23 = *(_QWORD *)(v54 + 8 * v24);
        if (!v23)
        {
          v24 = v19 + 4;
          if (v19 + 4 >= v55)
            goto LABEL_34;
          v23 = *(_QWORD *)(v54 + 8 * v24);
          if (!v23)
          {
            v24 = v19 + 5;
            if (v19 + 5 >= v55)
              goto LABEL_34;
            v23 = *(_QWORD *)(v54 + 8 * v24);
            if (!v23)
            {
              v25 = v19 + 6;
              if (v19 + 6 >= v55)
              {
LABEL_34:
                swift_release();
                v43 = 1;
                goto LABEL_29;
              }
              v23 = *(_QWORD *)(v54 + 8 * v25);
              if (!v23)
              {
                while (1)
                {
                  v24 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_36;
                  if (v24 >= v55)
                    goto LABEL_34;
                  v23 = *(_QWORD *)(v54 + 8 * v24);
                  ++v25;
                  if (v23)
                    goto LABEL_22;
                }
              }
              v24 = v19 + 6;
            }
          }
        }
      }
    }
LABEL_22:
    v60 = (v23 - 1) & v23;
    v61 = v24;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v35, v2);
LABEL_28:
  swift_release();
  v22 = (uint64_t)v53;
  v56(v53, v63, v2);
  v43 = 0;
LABEL_29:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v22, v43, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v22, 1, v2) == 1)
  {
    sub_24A694418(v22);
    return 0;
  }
  else
  {
    v45 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v51, v22, v2);
    v46 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v47 = v52;
    v46(v52, v45, v2);
    v48 = (objc_class *)type metadata accessor for ContributorBridge();
    v49 = (char *)objc_allocWithZone(v48);
    v46(&v49[OBJC_IVAR___SMContributor_contributor], v47, v2);
    v64.receiver = v49;
    v64.super_class = v48;
    v44 = objc_msgSendSuper2(&v64, sel_init);
    v50 = *(void (**)(char *, uint64_t))(v3 + 8);
    v50(v47, v2);
    v50(v45, v2);
  }
  return (uint64_t)v44;
}

unint64_t sub_24A694390()
{
  unint64_t result;

  result = qword_257949C50;
  if (!qword_257949C50)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE899A8], MEMORY[0x24BE899A0]);
    atomic_store(result, (unint64_t *)&qword_257949C50);
  }
  return result;
}

unint64_t sub_24A6943D4()
{
  unint64_t result;

  result = qword_257949C58;
  if (!qword_257949C58)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE899B0], MEMORY[0x24BE899A0]);
    atomic_store(result, (unint64_t *)&qword_257949C58);
  }
  return result;
}

uint64_t sub_24A694418(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949C48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A694464()
{
  return sub_24A778CE0();
}

uint64_t sub_24A6944A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int64_t v17;
  void (*v18)(char *, int64_t, uint64_t);
  char *v19;
  objc_class *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  int v33;
  objc_super v34;
  unint64_t v35;

  v0 = sub_24A778F38();
  v31 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v30 = (char *)&v27 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v27 - v5;
  v6 = sub_24A778CBC();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    sub_24A77BFD4();
    result = sub_24A695798(v6);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v27 = v6;
    v28 = v6 + 56;
    v15 = v30;
    v14 = v31;
    v16 = v32;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v28 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      if (*(_DWORD *)(v6 + 36) != v11)
        goto LABEL_13;
      v17 = *(_QWORD *)(v6 + 48) + *(_QWORD *)(v14 + 72) * v9;
      v18 = *(void (**)(char *, int64_t, uint64_t))(v14 + 16);
      v19 = v29;
      v33 = v13;
      v18(v29, v17, v0);
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v15, v19, v0);
      v18(v16, (int64_t)v15, v0);
      v20 = (objc_class *)type metadata accessor for ArtworkBridge();
      v21 = (char *)objc_allocWithZone(v20);
      v18(&v21[OBJC_IVAR___SMArtwork_artwork], (int64_t)v16, v0);
      v34.receiver = v21;
      v34.super_class = v20;
      objc_msgSendSuper2(&v34, sel_init);
      v22 = *(void (**)(char *, uint64_t))(v14 + 8);
      v22(v16, v0);
      v22(v15, v0);
      sub_24A77BFBC();
      sub_24A77BFE0();
      v6 = v27;
      sub_24A77BFEC();
      sub_24A77BFC8();
      result = sub_24A695848(v9, v11, v33 & 1, v6);
      v9 = result;
      v11 = v23;
      v13 = v24 & 1;
      if (!--v7)
      {
        sub_24A695838(result, v23, v13);
        v25 = v35;
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
LABEL_10:
    v26 = sub_24A69592C(v25, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkBridge, &qword_257949CB8, (void (*)(id *, uint64_t))sub_24A728474);
    swift_bridgeObjectRelease();
    return v26;
  }
  return result;
}

id sub_24A694784(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v15;

  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - v10;
  v12 = a1;
  a4();

  v13 = (void *)a5();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_24A694838()
{
  return sub_24A778C8C();
}

uint64_t sub_24A6948A4()
{
  return sub_24A778CD4();
}

uint64_t sub_24A6948D8()
{
  return sub_24A778CC8();
}

uint64_t sub_24A694950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int64_t v17;
  void (*v18)(char *, int64_t, uint64_t);
  char *v19;
  objc_class *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  int v32;
  objc_super v33;
  uint64_t v34;

  v0 = sub_24A778A58();
  v30 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v31 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v29 = (char *)&v26 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v26 - v5;
  v6 = sub_24A778C5C();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v34 = MEMORY[0x24BEE4AF8];
    sub_24A77BFD4();
    result = sub_24A695798(v6);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v26 = v6;
    v27 = v6 + 56;
    v15 = v29;
    v14 = v30;
    v16 = v31;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v27 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      if (*(_DWORD *)(v6 + 36) != v11)
        goto LABEL_13;
      v17 = *(_QWORD *)(v6 + 48) + *(_QWORD *)(v14 + 72) * v9;
      v18 = *(void (**)(char *, int64_t, uint64_t))(v14 + 16);
      v19 = v28;
      v32 = v13;
      v18(v28, v17, v0);
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v15, v19, v0);
      v18(v16, (int64_t)v15, v0);
      v20 = (objc_class *)type metadata accessor for MusicTrackBridge();
      v21 = (char *)objc_allocWithZone(v20);
      v18(&v21[OBJC_IVAR___SMMusicTrack_musicTrack], (int64_t)v16, v0);
      v33.receiver = v21;
      v33.super_class = v20;
      objc_msgSendSuper2(&v33, sel_init);
      v22 = *(void (**)(char *, uint64_t))(v14 + 8);
      v22(v16, v0);
      v22(v15, v0);
      sub_24A77BFBC();
      sub_24A77BFE0();
      v6 = v26;
      sub_24A77BFEC();
      sub_24A77BFC8();
      result = sub_24A695848(v9, v11, v32 & 1, v6);
      v9 = result;
      v11 = v23;
      v13 = v24 & 1;
      if (!--v7)
      {
        sub_24A695838(result, v23, v13);
        v25 = v34;
        swift_bridgeObjectRelease();
        return v25;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_24A694CB0()
{
  return sub_24A778C98();
}

id sub_24A694CE4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = (void *)sub_24A77B980();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_24A694D54()
{
  return sub_24A778CA4();
}

id sub_24A694D98(void *a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  id v8;
  void *v9;

  v8 = a1;
  a3();

  a4(0);
  sub_24A695D8C(a5, a4);
  v9 = (void *)sub_24A77BC08();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_24A694E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int64_t v17;
  void (*v18)(char *, int64_t, uint64_t);
  char *v19;
  objc_class *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  int v33;
  objc_super v34;
  unint64_t v35;

  v0 = sub_24A778B24();
  v31 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v30 = (char *)&v27 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v27 - v5;
  v6 = sub_24A778C80();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v35 = MEMORY[0x24BEE4AF8];
    sub_24A77BFD4();
    result = sub_24A695798(v6);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v27 = v6;
    v28 = v6 + 56;
    v15 = v30;
    v14 = v31;
    v16 = v32;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v28 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      if (*(_DWORD *)(v6 + 36) != v11)
        goto LABEL_13;
      v17 = *(_QWORD *)(v6 + 48) + *(_QWORD *)(v14 + 72) * v9;
      v18 = *(void (**)(char *, int64_t, uint64_t))(v14 + 16);
      v19 = v29;
      v33 = v13;
      v18(v29, v17, v0);
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v15, v19, v0);
      v18(v16, (int64_t)v15, v0);
      v20 = (objc_class *)type metadata accessor for MediaMomentBridge();
      v21 = (char *)objc_allocWithZone(v20);
      v18(&v21[OBJC_IVAR___SMMediaMoment_mediaMoment], (int64_t)v16, v0);
      v34.receiver = v21;
      v34.super_class = v20;
      objc_msgSendSuper2(&v34, sel_init);
      v22 = *(void (**)(char *, uint64_t))(v14 + 8);
      v22(v16, v0);
      v22(v15, v0);
      sub_24A77BFBC();
      sub_24A77BFE0();
      v6 = v27;
      sub_24A77BFEC();
      sub_24A77BFC8();
      result = sub_24A695848(v9, v11, v33 & 1, v6);
      v9 = result;
      v11 = v23;
      v13 = v24 & 1;
      if (!--v7)
      {
        sub_24A695838(result, v23, v13);
        v25 = v35;
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
LABEL_10:
    v26 = sub_24A69592C(v25, (uint64_t (*)(uint64_t))type metadata accessor for MediaMomentBridge, &qword_257949CA8, (void (*)(id *, uint64_t))sub_24A728488);
    swift_bridgeObjectRelease();
    return v26;
  }
  return result;
}

uint64_t sub_24A6950D8()
{
  return sub_24A6951A8();
}

uint64_t sub_24A6950E8()
{
  return sub_24A6951A8();
}

uint64_t sub_24A6950F8(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;

  v1 = a1;
  v2 = sub_24A778CEC();
  v4 = v3;
  v6 = v5 & 1;
  sub_24A695A98();
  sub_24A695ADC();
  v7 = sub_24A778B9C();
  sub_24A683100(v2, v4, v6);

  return v7 & 1;
}

uint64_t sub_24A6951A0()
{
  return sub_24A6951A8();
}

uint64_t sub_24A6951A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;

  v0 = sub_24A778CEC();
  v2 = v1;
  v4 = v3 & 1;
  sub_24A695A98();
  sub_24A695ADC();
  v5 = sub_24A778B9C();
  sub_24A683100(v0, v2, v4);
  return v5 & 1;
}

id sub_24A69526C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v0 = sub_24A778CEC();
  if ((v2 & 1) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v0 + 1);
  sub_24A683100(v0, v1, 0);
  return 0;
}

id CatalogWorkoutBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CatalogWorkoutBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CatalogWorkoutBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogWorkoutBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CatalogWorkout.narrator.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t i;
  int64_t v17;
  char *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  void (*v51)(char *, unint64_t, uint64_t);
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;

  v42 = a1;
  v1 = sub_24A778AF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v41 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v41 - v7;
  v8 = sub_24A778C68();
  v9 = *(_QWORD *)(v8 + 56);
  v43 = v8 + 56;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v44 = (unint64_t)(v10 + 63) >> 6;
  v48 = v8;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x24BE899A0];
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v49 = (v12 - 1) & v12;
  v50 = v14;
  for (i = __clz(__rbit64(v12)) | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = *(_QWORD *)(v48 + 48) + *(_QWORD *)(v2 + 72) * i;
    v51 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    v23 = v46;
    v51(v46, v22, v1);
    v24 = v52;
    v45 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v45(v52, v23, v1);
    v25 = sub_24A778AE8();
    v27 = v26;
    v54 = v25;
    v55 = v26;
    v29 = v28 & 1;
    v56 = v28 & 1;
    v53 = 4;
    sub_24A694390();
    sub_24A6943D4();
    v30 = sub_24A778B9C();
    sub_24A683100(v25, v27, v29);
    v31 = v47;
    v51(v47, (unint64_t)v24, v1);
    if ((v30 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v31, v1);
LABEL_28:
      swift_release();
      v18 = v42;
      v45(v42, v52, v1);
      v40 = 0;
LABEL_29:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v18, v40, 1, v1);
      return swift_bridgeObjectRelease();
    }
    v32 = sub_24A778AE8();
    v34 = v33;
    v54 = v32;
    v55 = v33;
    v36 = v35 & 1;
    v56 = v35 & 1;
    v53 = 2;
    v37 = v15;
    v38 = sub_24A778B9C();
    sub_24A683100(v32, v34, v36);
    v39 = *(void (**)(char *, uint64_t))(v2 + 8);
    v39(v31, v1);
    if ((v38 & 1) != 0)
      goto LABEL_28;
    result = ((uint64_t (*)(char *, uint64_t))v39)(v52, v1);
    v15 = v37;
    v12 = v49;
    v14 = v50;
    if (v49)
      goto LABEL_4;
LABEL_5:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v17 >= v44)
    {
      swift_release();
      v40 = 1;
      v18 = v42;
      goto LABEL_29;
    }
    v18 = v42;
    v19 = *(_QWORD *)(v43 + 8 * v17);
    v20 = v14 + 1;
    if (v19)
      goto LABEL_22;
    v20 = v14 + 2;
    if (v14 + 2 >= v44)
      goto LABEL_31;
    v19 = *(_QWORD *)(v43 + 8 * v20);
    if (v19)
      goto LABEL_22;
    v20 = v14 + 3;
    if (v14 + 3 >= v44)
      goto LABEL_31;
    v19 = *(_QWORD *)(v43 + 8 * v20);
    if (v19)
      goto LABEL_22;
    v20 = v14 + 4;
    if (v14 + 4 >= v44)
      goto LABEL_31;
    v19 = *(_QWORD *)(v43 + 8 * v20);
    if (v19)
      goto LABEL_22;
    v20 = v14 + 5;
    if (v14 + 5 >= v44)
      goto LABEL_31;
    v19 = *(_QWORD *)(v43 + 8 * v20);
    if (v19)
      goto LABEL_22;
    v21 = v14 + 6;
    if (v14 + 6 >= v44)
    {
LABEL_31:
      swift_release();
      v40 = 1;
      goto LABEL_29;
    }
    v19 = *(_QWORD *)(v43 + 8 * v21);
    if (!v19)
    {
      while (1)
      {
        v20 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_33;
        if (v20 >= v44)
          goto LABEL_31;
        v19 = *(_QWORD *)(v43 + 8 * v20);
        ++v21;
        if (v19)
          goto LABEL_22;
      }
    }
    v20 = v14 + 6;
LABEL_22:
    v49 = (v19 - 1) & v19;
    v50 = v20;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_24A695798(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_24A695838(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

int64_t sub_24A695848(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_24A69592C(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, void (*a4)(id *, uint64_t))
{
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  uint64_t v16;

  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24A77C028();
    swift_bridgeObjectRelease();
  }
  a2(0);
  sub_24A695D8C(a3, a2);
  result = sub_24A77BC2C();
  v16 = result;
  if (v8)
  {
    swift_bridgeObjectRetain();
    v10 = sub_24A77C028();
    result = swift_bridgeObjectRelease();
    if (!v10)
      return v16;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      return v16;
  }
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v10; ++i)
      {
        v12 = MEMORY[0x24BD19588](i, a1);
        a4(&v15, v12);

      }
    }
    else
    {
      v13 = (void **)(a1 + 32);
      do
      {
        v14 = *v13++;
        a4(&v15, (uint64_t)v14);

        --v10;
      }
      while (v10);
    }
    return v16;
  }
  __break(1u);
  return result;
}

unint64_t sub_24A695A98()
{
  unint64_t result;

  result = qword_257949C60;
  if (!qword_257949C60)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE89D88], MEMORY[0x24BE89D78]);
    atomic_store(result, (unint64_t *)&qword_257949C60);
  }
  return result;
}

unint64_t sub_24A695ADC()
{
  unint64_t result;

  result = qword_257949C68;
  if (!qword_257949C68)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE89D90], MEMORY[0x24BE89D78]);
    atomic_store(result, (unint64_t *)&qword_257949C68);
  }
  return result;
}

uint64_t sub_24A695B20()
{
  return type metadata accessor for CatalogWorkoutBridge();
}

uint64_t sub_24A695B28()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778CF8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CatalogWorkoutBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.__allocating_init(workout:isPartOfAStack:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.dateReleased.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.narrator.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.location.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.artwork.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.streamingURL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.duration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.summary.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.musicTracks.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.musicPlaylistURL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.musicPlaylistIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.mediaMoments.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.isGuidedWalk.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.isGuidedRun.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.isGuidedVideo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of CatalogWorkoutBridge.mediaTypeRawValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t sub_24A695D8C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Localization.workoutUILocalizedString(_:feature:)()
{
  id v0;
  uint64_t v1;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  v1 = sub_24A77856C();
  swift_bridgeObjectRelease();

  return v1;
}

BOOL static LocalizationFeature.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LocalizationFeature.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t LocalizationFeature.hashValue.getter()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t LocalizationFeature.tableName.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x617A696C61636F4CLL;
}

id sub_24A695FAC()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for WorkoutUIBundlePlaceholder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_2544D6158 = (uint64_t)result;
  return result;
}

id WorkoutUIBundle.getter()
{
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_2544D6158;
}

void WorkoutUIBundle.setter(uint64_t a1)
{
  void *v2;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_2544D6158;
  qword_2544D6158 = a1;

}

uint64_t (*WorkoutUIBundle.modify())()
{
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_24A69614C()
{
  unint64_t result;

  result = qword_257949CC0;
  if (!qword_257949CC0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for LocalizationFeature, &type metadata for LocalizationFeature);
    atomic_store(result, (unint64_t *)&qword_257949CC0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LocalizationFeature(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A6961DC + 4 * byte_24A7820B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A696210 + 4 * byte_24A7820B0[v4]))();
}

uint64_t sub_24A696210(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A696218(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A696220);
  return result;
}

uint64_t sub_24A69622C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A696234);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A696238(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A696240(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizationFeature()
{
  return &type metadata for LocalizationFeature;
}

ValueMetadata *type metadata accessor for Localization()
{
  return &type metadata for Localization;
}

Swift::Bool __swiftcall TargetZone.withinRange(rawValue:)(Swift::Double rawValue)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  double v7;
  double v8;
  int v9;
  __n128 v10;
  Swift::Double v17;
  uint64_t v18;

  v2 = sub_24A779388();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A7793A0();
  sub_24A7793B8();
  if ((v6 & 1) != 0)
  {
    v8 = vabdd_f64(rawValue, v7);
    sub_24A7793D0();
    v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v9 == *MEMORY[0x24BEC5978] || v9 == *MEMORY[0x24BEC5970] || v9 == *MEMORY[0x24BEC5990])
    {
      v10.n128_u64[0] = 0x3FCC9C4DA9003EEALL;
    }
    else
    {
      v10.n128_u64[0] = 5.0;
      if (v9 != *MEMORY[0x24BEC59A8]
        && v9 != *MEMORY[0x24BEC5988]
        && v9 != *MEMORY[0x24BEC5998]
        && v9 != *MEMORY[0x24BEC5980])
      {
        (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v10);
        v10.n128_u64[0] = 0;
      }
    }
    return v8 <= v10.n128_f64[0];
  }
  else if (v7 <= rawValue)
  {
    sub_24A7793AC();
    return v17 >= rawValue;
  }
  else
  {
    return 0;
  }
}

uint64_t TargetZone.targetState(rawValue:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t (*v15)(char *, uint64_t);
  int v16;
  int v17;
  int v18;
  int v19;
  double v20;
  BOOL v22;
  double v23;
  BOOL v24;
  BOOL v25;
  int v27;
  BOOL v30;
  BOOL v31;
  uint64_t v33;
  unsigned int *v34;
  unsigned int *v35;
  uint64_t v37;

  v4 = sub_24A779388();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v37 - v9;
  sub_24A7793AC();
  v12 = v11;
  sub_24A7793B8();
  v14 = v13;
  if ((sub_24A7793A0() & 1) != 0)
  {
    sub_24A7793D0();
    v15 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
    v16 = v15(v10, v4);
    v17 = *MEMORY[0x24BEC5978];
    v18 = *MEMORY[0x24BEC5970];
    v19 = *MEMORY[0x24BEC5990];
    v20 = 0.22352;
    v22 = v16 == *MEMORY[0x24BEC5978] || v16 == v18 || v16 == v19;
    v23 = 0.22352;
    if (!v22)
    {
      v23 = 5.0;
      v24 = v16 == *MEMORY[0x24BEC59A8] || v16 == *MEMORY[0x24BEC5988];
      v25 = v24 || v16 == *MEMORY[0x24BEC5998];
      if (!v25 && v16 != *MEMORY[0x24BEC5980])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        v23 = 0.0;
      }
    }
    sub_24A7793D0();
    v27 = v15(v8, v4);
    if (v27 != v17 && v27 != v18 && v27 != v19)
    {
      v20 = 5.0;
      v30 = v27 == *MEMORY[0x24BEC59A8] || v27 == *MEMORY[0x24BEC5988];
      v31 = v30 || v27 == *MEMORY[0x24BEC5998];
      if (!v31 && v27 != *MEMORY[0x24BEC5980])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        v20 = 0.0;
      }
    }
    v12 = v12 + v23;
    v14 = v14 - v20;
  }
  v33 = sub_24A7793DC();
  v34 = (unsigned int *)MEMORY[0x24BEC59E8];
  v35 = (unsigned int *)MEMORY[0x24BEC59F0];
  if (v14 <= a2)
    v35 = (unsigned int *)MEMORY[0x24BEC59F8];
  if (v12 >= a2)
    v34 = v35;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(a1, *v34, v33);
}

uint64_t static TargetZone.backgroundColor(targetState:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_24A77B320();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A7793DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  v10 = *MEMORY[0x24BEC59F8];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
  if ((_DWORD)a1 == v10)
    return MEMORY[0x24BD189AC](v5, 0.0, 0.231, 0.149, 1.0);
  v11 = MEMORY[0x24BD189AC](v5, 0.213, 0.086, 0.063, 1.0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t static TargetZone.foregroundColor(targetState:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_24A77B320();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A7793DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  v10 = *MEMORY[0x24BEC59F8];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
  if ((_DWORD)a1 == v10)
    return MEMORY[0x24BD189AC](v5, 0.012, 1.0, 0.659, 1.0);
  v11 = MEMORY[0x24BD189AC](v5, 1.0, 0.373, 0.271, 1.0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

double static HeartRateTargetZone.singleRangeThreshold.getter()
{
  return 5.0;
}

double HeartRateTargetZone.currentRange.getter()
{
  double result;
  char v1;

  result = COERCE_DOUBLE(sub_24A7797C0());
  if ((v1 & 1) != 0)
    return 0.0;
  return result;
}

double static PowerZonesAlertTargetZone.singleRangeThreshold.getter()
{
  return 5.0;
}

double PowerZonesAlertTargetZone.currentRange.getter()
{
  double result;
  char v1;

  result = COERCE_DOUBLE(sub_24A7799C4());
  if ((v1 & 1) != 0)
    return 0.0;
  return result;
}

uint64_t WorkoutStep.targetIconName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  int v5;
  int v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_24A779388();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_24A7792A4())
  {
    sub_24A7793D0();
    v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
    v5 = *MEMORY[0x24BEC5998];
    v6 = *MEMORY[0x24BEC5980];
    swift_release();
    if (v4 == v5 || v4 == v6)
    {
      return 0x6C69662E746C6F62;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      return 0xD00000000000001BLL;
    }
  }
  else
  {
    v8 = sub_24A7792D4();
    swift_release();
    if (v8)
    {
      return 0x69662E7472616568;
    }
    else
    {
      v10 = sub_24A7792EC();
      swift_release();
      if (v10)
        return 0x6C69662E746C6F62;
      else
        return 0;
    }
  }
}

uint64_t GroundContactTimeMetricView.init(metricType:groundContactTime:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_24A696AD8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;

  if (*v0 == 30)
  {
    if (qword_2544D6160 == -1)
      goto LABEL_6;
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 31)
    return 0xD000000000000012;
  if (qword_2544D6160 != -1)
    goto LABEL_9;
LABEL_6:
  swift_beginAccess();
  v1 = (id)qword_2544D6158;
  v2 = sub_24A77856C();

  return v2;
}

uint64_t sub_24A696C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  _QWORD v17[2];

  v1 = sub_24A778674();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v13 = (id)qword_2544D6158;
    v14 = sub_24A77856C();

  }
  else
  {
    v17[0] = round(*(double *)(v0 + 8) * 1000.0);
    sub_24A77886C();
    sub_24A6971B4();
    sub_24A7785E4();
    sub_24A778668();
    MEMORY[0x24BD15C34](v4, v6);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    sub_24A6971F8();
    sub_24A77B8E4();
    v15(v12, v6);
    return v17[1];
  }
  return v14;
}

void GroundContactTimeMetricView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v5 = sub_24A696C4C();
  v7 = v6;
  if ((v3 & 1) != 0)
  {
    v8 = v4;
    v9 = 0;
    v10 = 0;
  }
  else
  {
    v11 = qword_2544D6160;
    v12 = v4;
    if (v11 != -1)
      swift_once();
    swift_beginAccess();
    v13 = (id)qword_2544D6158;
    v9 = sub_24A77856C();
    v10 = v14;

  }
  v15 = sub_24A696AD8();
  v17 = v16;

  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v17;
  *(_WORD *)(a1 + 48) = 0;
}

uint64_t sub_24A697038()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for GroundContactTimeMetricView(uint64_t a1)
{

}

uint64_t initializeWithCopy for GroundContactTimeMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for GroundContactTimeMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for GroundContactTimeMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for GroundContactTimeMetricView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroundContactTimeMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroundContactTimeMetricView()
{
  return &type metadata for GroundContactTimeMetricView;
}

unint64_t sub_24A6971B4()
{
  unint64_t result;

  result = qword_257949CD0;
  if (!qword_257949CD0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_257949CD0);
  }
  return result;
}

unint64_t sub_24A6971F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257949CD8;
  if (!qword_257949CD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949CC8);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDCD4C0], v1);
    atomic_store(result, (unint64_t *)&qword_257949CD8);
  }
  return result;
}

double Double.smoothedForDisplay.getter(double a1)
{
  return round(a1 * 100.0) / 100.0;
}

uint64_t IntervalDistanceBasedTimeMetricView.init(step:formattingManager:intervalsMetricsPublisher:workoutStatePublisher:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  sub_24A77997C();
  sub_24A63C880(&qword_257946FB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5FA0], MEMORY[0x24BEC5F98]);
  swift_retain();
  v6 = a2;
  swift_retain();
  v7 = sub_24A77A57C();
  v9 = v8;
  sub_24A779208();
  sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
  v10 = sub_24A77A57C();
  v12 = v11;
  swift_release();

  result = swift_release();
  *a3 = a1;
  a3[1] = v6;
  a3[2] = v7;
  a3[3] = v9;
  a3[4] = v10;
  a3[5] = v12;
  return result;
}

uint64_t sub_24A697358()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = *(void **)(v0 + 8);
  v2 = (void *)sub_24A7792F8();
  v3 = sub_24A77BD58();

  if ((v3 & 1) != 0
    && (v4 = (void *)sub_24A7792F8(),
        v5 = objc_msgSend(v4, sel_requiredDistance),
        v4,
        v5))
  {
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37968]), sel_initWithGoalTypeIdentifier_value_, 1, v5);
    v7 = NLSessionActivityGoal.intervalDisplayString(formattingManager:)(v1);
    v9 = v8;
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v10 = (id)qword_2544D6158;
    sub_24A77856C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_24A780030;
    *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v11 + 64) = sub_24A66952C();
    *(_QWORD *)(v11 + 32) = v7;
    *(_QWORD *)(v11 + 40) = v9;
    v12 = sub_24A77B9C8();

    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    result = sub_24A77C01C();
    __break(1u);
  }
  return result;
}

uint64_t IntervalDistanceBasedTimeMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  double v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t *v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int16 v106;
  char v107;
  uint64_t v108;
  char v109;
  uint64_t v110;

  v86 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for WorkoutTimeView();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v77 = (uint64_t)&v76 - v9;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F30);
  MEMORY[0x24BDAC7A8](v76);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F38);
  MEMORY[0x24BDAC7A8](v12);
  v79 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CE0);
  v14 = MEMORY[0x24BDAC7A8](v85);
  v78 = (uint64_t)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v80 = (uint64_t)&v76 - v16;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CE8);
  MEMORY[0x24BDAC7A8](v84);
  v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1[1];
  *(_QWORD *)&v81 = *v1;
  *((_QWORD *)&v81 + 1) = v19;
  v20 = v1[3];
  v21 = v1[4];
  v22 = v1[5];
  v82 = v1[2];
  v83 = v21;
  swift_retain();
  sub_24A779970();
  v24 = v23;
  swift_release();
  if ((v24 & 1) != 0)
  {
    swift_retain();
    sub_24A779958();
    swift_release();
    *(_QWORD *)v8 = swift_getKeyPath();
    v8[8] = 0;
    *((_QWORD *)v8 + 2) = swift_getKeyPath();
    v8[24] = 0;
    v46 = (uint64_t)&v8[v5[6]];
    v47 = sub_24A778818();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
    v48 = v5[7];
    v8[v48] = 0;
    swift_retain();
    sub_24A65FA3C((uint64_t)v4, v46);
    v8[v48] = 0;
    v49 = (uint64_t *)&v8[v5[8]];
    sub_24A779208();
    sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
    v50 = sub_24A77A57C();
    v52 = v51;
    sub_24A63CD04((uint64_t)v4, &qword_2579478E8);
    *v49 = v50;
    v49[1] = v52;
    v53 = v77;
    sub_24A685270((uint64_t)v8, v77);
    v88 = v81;
    *(_QWORD *)&v89 = v82;
    *((_QWORD *)&v89 + 1) = v20;
    *(_QWORD *)&v90 = v83;
    *((_QWORD *)&v90 + 1) = v22;
    v54 = sub_24A697358();
    v56 = v55;
    v57 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    v58 = MEMORY[0x24BD18928](v57);
    sub_24A697D9C(v53, (uint64_t)v11);
    v59 = (uint64_t *)&v11[*(int *)(v76 + 36)];
    *v59 = v54;
    v59[1] = v56;
    v59[2] = v58;
    v59[3] = 0x4008000000000000;
    sub_24A697DE0(v53);
    if (qword_2579467F8 != -1)
      swift_once();
    v60 = *(double *)&qword_257948970;
    v61 = sub_24A77B674();
    v62 = v79;
    sub_24A6429BC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v79, 0.0, 1, v60, 0, v61, v63);
    sub_24A63CD04((uint64_t)v11, &qword_257946F30);
    LOBYTE(v60) = sub_24A77ACD8();
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
    sub_24A77A390();
    v65 = v64;
    v67 = v66;
    v69 = v68;
    v71 = v70;
    v72 = v78;
    sub_24A63CCC0(v62, v78, &qword_257946F38);
    v73 = v72 + *(int *)(v85 + 36);
    *(_BYTE *)v73 = LOBYTE(v60);
    *(_QWORD *)(v73 + 8) = v65;
    *(_QWORD *)(v73 + 16) = v67;
    *(_QWORD *)(v73 + 24) = v69;
    *(_QWORD *)(v73 + 32) = v71;
    *(_BYTE *)(v73 + 40) = 0;
    sub_24A63CD04(v62, &qword_257946F38);
    v74 = v80;
    sub_24A697E1C(v72, v80);
    sub_24A63CCC0(v74, (uint64_t)v18, &qword_257949CE0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949CF0);
    v75 = MEMORY[0x24BDECC60];
    sub_24A665CEC(&qword_257949CF8, &qword_257949CF0, sub_24A697E64, MEMORY[0x24BDECC60]);
    sub_24A665CEC(&qword_257949D20, &qword_257949CE0, sub_24A697ED4, v75);
    sub_24A77AB28();
    return sub_24A63CD04(v74, &qword_257949CE0);
  }
  else
  {
    sub_24A779808();
    v25 = sub_24A7797F0();
    v27 = v26;
    v88 = v81;
    *(_QWORD *)&v89 = v82;
    *((_QWORD *)&v89 + 1) = v20;
    *(_QWORD *)&v90 = v83;
    *((_QWORD *)&v90 + 1) = v22;
    v28 = sub_24A697358();
    v30 = v29;
    KeyPath = swift_getKeyPath();
    swift_bridgeObjectRelease_n();
    v100 = v25;
    v101 = v27;
    v102 = 0;
    v103 = 0;
    v104 = v28;
    v105 = v30;
    v106 = 0;
    v107 = 0;
    v108 = KeyPath;
    v109 = 0;
    v110 = 0x3FD6666666666666;
    if (qword_2579467F8 != -1)
      swift_once();
    v32 = *(double *)&qword_257948970;
    sub_24A77B674();
    sub_24A642814(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v88, 0.0, 1, v32, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A63BEDC(KeyPath, 0);
    v33 = sub_24A77ACD8();
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
    sub_24A77A390();
    v87 = 0;
    v34 = v97;
    *((_OWORD *)v18 + 8) = v96;
    *((_OWORD *)v18 + 9) = v34;
    v35 = v99;
    *((_OWORD *)v18 + 10) = v98;
    *((_OWORD *)v18 + 11) = v35;
    v36 = v93;
    *((_OWORD *)v18 + 4) = v92;
    *((_OWORD *)v18 + 5) = v36;
    v37 = v95;
    *((_OWORD *)v18 + 6) = v94;
    *((_OWORD *)v18 + 7) = v37;
    v38 = v89;
    *(_OWORD *)v18 = v88;
    *((_OWORD *)v18 + 1) = v38;
    v39 = v91;
    *((_OWORD *)v18 + 2) = v90;
    *((_OWORD *)v18 + 3) = v39;
    v18[192] = v33;
    *((_QWORD *)v18 + 25) = v40;
    *((_QWORD *)v18 + 26) = v41;
    *((_QWORD *)v18 + 27) = v42;
    *((_QWORD *)v18 + 28) = v43;
    v18[232] = v87;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949CF0);
    v44 = MEMORY[0x24BDECC60];
    sub_24A665CEC(&qword_257949CF8, &qword_257949CF0, sub_24A697E64, MEMORY[0x24BDECC60]);
    sub_24A665CEC(&qword_257949D20, &qword_257949CE0, sub_24A697ED4, v44);
    return sub_24A77AB28();
  }
}

uint64_t sub_24A697D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutTimeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A697DE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutTimeView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A697E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A697E64()
{
  return sub_24A665CEC(&qword_257949D00, &qword_257949D08, (uint64_t (*)(void))sub_24A697E88, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_24A697E88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257949D10;
  if (!qword_257949D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949D18);
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for MetricTextWithAccessory<A>, v1);
    atomic_store(result, (unint64_t *)&qword_257949D10);
  }
  return result;
}

uint64_t sub_24A697ED4()
{
  return sub_24A665CEC(&qword_257949D28, &qword_257946F38, (uint64_t (*)(void))sub_24A65F7C4, MEMORY[0x24BDEDBB8]);
}

uint64_t sub_24A697EF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for IntervalDistanceBasedTimeMetricView(uint64_t a1)
{
  swift_release();

  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for IntervalDistanceBasedTimeMetricView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  v6 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for IntervalDistanceBasedTimeMetricView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for IntervalDistanceBasedTimeMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_release();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for IntervalDistanceBasedTimeMetricView()
{
  return &type metadata for IntervalDistanceBasedTimeMetricView;
}

unint64_t sub_24A6980A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257949D30;
  if (!qword_257949D30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949D38);
    v2 = MEMORY[0x24BDECC60];
    v3[0] = sub_24A665CEC(&qword_257949CF8, &qword_257949CF0, sub_24A697E64, MEMORY[0x24BDECC60]);
    v3[1] = sub_24A665CEC(&qword_257949D20, &qword_257949CE0, sub_24A697ED4, v2);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257949D30);
  }
  return result;
}

id sub_24A698204()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaMomentsScrollView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MediaMomentsScrollView()
{
  return objc_opt_self();
}

_QWORD *sub_24A698254(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_24A779448();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *((_BYTE *)v4 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v15 = (char *)v4 + v14;
    v16 = (uint64_t)a2 + v14;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = *(_BYTE *)(v16 + 8);
    v17 = a3[13];
    *(_QWORD *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_QWORD *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    v18 = a3[14];
    v19 = (_QWORD *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_24A77A5DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v23 = a3[15];
    v24 = (char *)v4 + v23;
    v25 = (uint64_t)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = *(_BYTE *)(v25 + 8);
    sub_24A63BEC0(*(_QWORD *)v25, v27);
    *(_QWORD *)v24 = v26;
    v24[8] = v27;
  }
  return v4;
}

uint64_t sub_24A698400(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + a2[5];
  v5 = sub_24A779448();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_24A77A5DC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return sub_24A63BEDC(*(_QWORD *)(a1 + a2[15]), *(_BYTE *)(a1 + a2[15] + 8));
}

uint64_t sub_24A6984B0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A779448();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[14];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_24A77A5DC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v21 = a3[15];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = *(_BYTE *)(v23 + 8);
  sub_24A63BEC0(*(_QWORD *)v23, v25);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v25;
  return a1;
}

uint64_t *sub_24A698628(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A779448();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  v10 = a3[11];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v13;
  *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  if (a1 != a2)
  {
    v14 = a3[14];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_24A63CD04((uint64_t)a1 + v14, &qword_2579498A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_24A77A5DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v18 = a3[15];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = v20[8];
  sub_24A63BEC0(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = v22;
  sub_24A63BEDC(v23, v24);
  return a1;
}

uint64_t sub_24A6987C0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A779448();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[14];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_24A77A5DC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v22 = a3[15];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  return a1;
}

uint64_t sub_24A698928(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A779448();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  if (a1 != a2)
  {
    v17 = a3[14];
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_24A63CD04(a1 + v17, &qword_2579498A0);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_24A77A5DC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  v22 = a3[15];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  LOBYTE(v24) = *((_BYTE *)v24 + 8);
  v26 = *(_QWORD *)v23;
  v27 = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(v23 + 8) = (_BYTE)v24;
  sub_24A63BEDC(v26, v27);
  return a1;
}

uint64_t sub_24A698AB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A698AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_24A779448();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2579498A8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 56);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_24A698B68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A698B74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_24A779448();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2579498A8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 56);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ZoneBarView()
{
  uint64_t result;

  result = qword_257949DD0;
  if (!qword_257949DD0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A698C50()
{
  unint64_t v0;
  unint64_t v1;

  sub_24A779448();
  if (v0 <= 0x3F)
  {
    sub_24A68D620();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24A698D14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A698D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  void *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[7];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E30);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ZoneBarView();
  v7 = *(double *)(v1 + *(int *)(v6 + 36));
  sub_24A698EF4(*(_QWORD *)(v1 + *(int *)(v6 + 24)));
  *(_QWORD *)v5 = sub_24A77A9FC();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E38);
  sub_24A69912C(v1, (uint64_t)&v5[*(int *)(v8 + 44)]);
  sub_24A77B668();
  if (v7 < -INFINITY)
  {
    sub_24A77BC68();
    v9 = (void *)sub_24A77AC78();
    sub_24A779FF4();

  }
  sub_24A77A6A8();
  sub_24A63CCC0((uint64_t)v5, a1, &qword_257949E30);
  v10 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257949E40) + 36));
  v11 = v15[5];
  v10[4] = v15[4];
  v10[5] = v11;
  v10[6] = v15[6];
  v12 = v15[1];
  *v10 = v15[0];
  v10[1] = v12;
  v13 = v15[3];
  v10[2] = v15[2];
  v10[3] = v13;
  return sub_24A63CD04((uint64_t)v5, &qword_257949E30);
}

uint64_t sub_24A698EF4(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v9;
  char v10;
  _QWORD v11[4];
  char v12;

  v2 = v1;
  v4 = (char *)v1 + *(int *)(type metadata accessor for ZoneBarView() + 60);
  v5 = *(_QWORD *)v4;
  v6 = v4[8];
  sub_24A63BEC0(*(_QWORD *)v4, v6);
  sub_24A63E608(v5, v6, &v12);
  result = sub_24A63BEDC(v5, v6);
  if (v12 != 7 && v12 != 0)
  {
    if (qword_257946838 != -1)
      swift_once();
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_24A779748();
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579499A0);
    v9 = sub_24A77BFF8();
    result = swift_bridgeObjectRelease();
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v9 + 16) > a1)
    {
      sub_24A67BC90(v9 + 40 * a1 + 32, (uint64_t)v11);
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(v2, v2[3]);
      sub_24A77973C();
      if ((v10 & 1) == 0)
      {
        __swift_project_boxed_opaque_existential_1(v11, v11[3]);
        sub_24A779514();
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
    __break(1u);
    return result;
  }
  if (qword_257946838 != -1)
    return swift_once();
  return result;
}

uint64_t sub_24A69912C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[15];
  unsigned __int8 v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E48);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)&v21[-v9];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v21[-v11];
  v13 = a1 + *(int *)(type metadata accessor for ZoneBarView() + 60);
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_24A63BEC0(*(_QWORD *)v13, v15);
  sub_24A63E608(v14, v15, &v22);
  sub_24A63BEDC(v14, v15);
  if (v22 <= 8u && ((1 << v22) & 0x181) != 0)
    v16 = sub_24A77B668();
  else
    v16 = sub_24A77B65C();
  *v10 = v16;
  v10[1] = v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E50);
  sub_24A6992E0(a1, (uint64_t)v10 + *(int *)(v18 + 44));
  sub_24A63F6C4((uint64_t)v10, (uint64_t)v12, &qword_257949E48);
  sub_24A63CCC0((uint64_t)v12, (uint64_t)v7, &qword_257949E48);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E58);
  sub_24A63CCC0((uint64_t)v7, a2 + *(int *)(v19 + 48), &qword_257949E48);
  sub_24A63CD04((uint64_t)v12, &qword_257949E48);
  return sub_24A63CD04((uint64_t)v7, &qword_257949E48);
}

uint64_t sub_24A6992E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  char *v52;
  __int128 v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char *v107;
  double v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;

  v163 = a1;
  v167 = a2;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E60);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v151 = (char *)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E68);
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v157 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E70);
  MEMORY[0x24BDAC7A8](v154);
  v156 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E78);
  v5 = MEMORY[0x24BDAC7A8](v155);
  v161 = (uint64_t)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v160 = (uint64_t)&v134 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487F0);
  MEMORY[0x24BDAC7A8](v8);
  v147 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v10);
  v141 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E80);
  MEMORY[0x24BDAC7A8](v12);
  v136 = (uint64_t *)((char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E88);
  MEMORY[0x24BDAC7A8](v135);
  v139 = (uint64_t)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E90);
  MEMORY[0x24BDAC7A8](v137);
  v143 = (uint64_t)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949E98);
  MEMORY[0x24BDAC7A8](v140);
  v144 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EA0);
  MEMORY[0x24BDAC7A8](v142);
  v148 = (uint64_t)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EA8);
  v18 = MEMORY[0x24BDAC7A8](v146);
  v150 = (uint64_t)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v145 = (uint64_t)&v134 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v149 = (char *)&v134 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EB0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v166 = (uint64_t)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v165 = (uint64_t)&v134 - v26;
  v27 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (uint64_t *)((char *)&v134 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AC0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v134 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EB8);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v134 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EC0);
  v36 = MEMORY[0x24BDAC7A8](v162);
  v164 = (uint64_t)&v134 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v134 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v134 - v41;
  if (qword_257946830 != -1)
    swift_once();
  v43 = qword_257959888;
  v44 = (char *)v29 + *(int *)(v27 + 20);
  v45 = *MEMORY[0x24BDEEB68];
  v46 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v44, v45, v46);
  *v29 = v43;
  v29[1] = v43;
  v47 = type metadata accessor for ZoneBarView();
  v48 = v163;
  v49 = sub_24A779AA8();
  sub_24A655654((uint64_t)v29, (uint64_t)v32);
  *(_QWORD *)&v32[*(int *)(v30 + 52)] = v49;
  *(_WORD *)&v32[*(int *)(v30 + 56)] = 256;
  sub_24A655698((uint64_t)v29);
  v138 = (int *)v47;
  v50 = *(int *)(v47 + 28);
  if (*(_BYTE *)(v48 + v50))
    v51 = 1.0;
  else
    v51 = 0.37;
  sub_24A63CCC0((uint64_t)v32, (uint64_t)v35, &qword_257948AC0);
  *(double *)&v35[*(int *)(v33 + 36)] = v51;
  sub_24A63CD04((uint64_t)v32, &qword_257948AC0);
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A63CCC0((uint64_t)v35, (uint64_t)v40, &qword_257949EB8);
  v52 = &v40[*(int *)(v162 + 36)];
  v53 = v172;
  *(_OWORD *)v52 = v171;
  *((_OWORD *)v52 + 1) = v53;
  *((_OWORD *)v52 + 2) = v173;
  sub_24A63CD04((uint64_t)v35, &qword_257949EB8);
  sub_24A63F6C4((uint64_t)v40, (uint64_t)v42, &qword_257949EC0);
  v54 = *(unsigned __int8 *)(v48 + v50);
  v55 = (uint64_t)v42;
  if (v54 == 1)
  {
    v56 = v48;
    v57 = sub_24A77A930();
    v58 = (uint64_t)v136;
    *v136 = v57;
    *(_QWORD *)(v58 + 8) = 0x4010000000000000;
    *(_BYTE *)(v58 + 16) = 0;
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949ED8);
    sub_24A69A208(v56, v58 + *(int *)(v59 + 44));
    v60 = sub_24A77B350();
    KeyPath = swift_getKeyPath();
    v62 = v139;
    sub_24A63CCC0(v58, v139, &qword_257949E80);
    v63 = (uint64_t *)(v62 + *(int *)(v135 + 36));
    *v63 = KeyPath;
    v63[1] = v60;
    sub_24A63CD04(v58, &qword_257949E80);
    if (qword_257946840 != -1)
      swift_once();
    sub_24A77ADD4();
    v64 = *MEMORY[0x24BDF1668];
    v65 = sub_24A77ADC8();
    v66 = *(_QWORD *)(v65 - 8);
    v67 = (uint64_t)v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 104))(v141, v64, v65);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v67, 0, 1, v65);
    v68 = sub_24A77AE1C();
    sub_24A63CD04(v67, &qword_257946FD0);
    v69 = swift_getKeyPath();
    v70 = v143;
    sub_24A63CCC0(v62, v143, &qword_257949E88);
    v71 = (uint64_t *)(v70 + *(int *)(v137 + 36));
    *v71 = v69;
    v71[1] = v68;
    sub_24A63CD04(v62, &qword_257949E88);
    v72 = *MEMORY[0x24BDF1D90];
    v73 = sub_24A77AF6C();
    v74 = *(_QWORD *)(v73 - 8);
    v75 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 104))(v147, v72, v73);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v75, 0, 1, v73);
    v76 = swift_getKeyPath();
    v77 = (uint64_t)v144;
    v78 = (uint64_t *)&v144[*(int *)(v140 + 36)];
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487E8);
    sub_24A63CCC0(v75, (uint64_t)v78 + *(int *)(v79 + 28), &qword_2579487F0);
    *v78 = v76;
    sub_24A63CCC0(v70, v77, &qword_257949E90);
    sub_24A63CD04(v75, &qword_2579487F0);
    sub_24A63CD04(v70, &qword_257949E90);
    LOBYTE(v76) = sub_24A77ACA8();
    v80 = v138;
    sub_24A77A390();
    v82 = v81;
    v84 = v83;
    v86 = v85;
    v88 = v87;
    v89 = v148;
    sub_24A63CCC0(v77, v148, &qword_257949E98);
    v90 = v89 + *(int *)(v142 + 36);
    *(_BYTE *)v90 = v76;
    *(_QWORD *)(v90 + 8) = v82;
    *(_QWORD *)(v90 + 16) = v84;
    *(_QWORD *)(v90 + 24) = v86;
    *(_QWORD *)(v90 + 32) = v88;
    *(_BYTE *)(v90 + 40) = 0;
    sub_24A63CD04(v77, &qword_257949E98);
    LOBYTE(v73) = sub_24A77ACCC();
    v91 = sub_24A77ACE4();
    sub_24A77ACE4();
    v92 = sub_24A77ACE4();
    v93 = (uint64_t)v149;
    if (v92 != v73)
      v91 = sub_24A77ACE4();
    sub_24A77A390();
    v95 = v94;
    v97 = v96;
    v99 = v98;
    v101 = v100;
    v102 = v145;
    sub_24A63CCC0(v89, v145, &qword_257949EA0);
    v103 = v102 + *(int *)(v146 + 36);
    *(_BYTE *)v103 = v91;
    *(_QWORD *)(v103 + 8) = v95;
    *(_QWORD *)(v103 + 16) = v97;
    *(_QWORD *)(v103 + 24) = v99;
    *(_QWORD *)(v103 + 32) = v101;
    *(_BYTE *)(v103 + 40) = 0;
    sub_24A63CD04(v89, &qword_257949EA0);
    sub_24A63F6C4(v102, v93, &qword_257949EA8);
    v104 = v56 + v80[15];
    v105 = *(_QWORD *)v104;
    v106 = *(_BYTE *)(v104 + 8);
    sub_24A63BEC0(*(_QWORD *)v104, v106);
    sub_24A63E608(v105, v106, &v169);
    sub_24A63BEDC(v105, v106);
    v107 = v157;
    if (v169 <= 8u && ((1 << v169) & 0x181) != 0)
    {
      if (qword_257946838 != -1)
        swift_once();
      v108 = *(double *)&qword_257959890;
      if (qword_257946850 != -1)
        swift_once();
      v109 = v108 - *(double *)&qword_2579598A8 + 2.5;
    }
    else
    {
      v113 = *(double *)(v56 + v80[9]);
      if (qword_257946850 != -1)
        swift_once();
      v109 = v113 + *(double *)&qword_2579598A8 / -3.0;
    }
    v114 = v56 + v80[11];
    v115 = *(_QWORD *)v114;
    v170 = *(_BYTE *)(v114 + 8);
    v168 = 0x3FF0000000000000;
    v169 = v115;
    sub_24A6971B4();
    v116 = v151;
    sub_24A77A42C();
    sub_24A63CFF0(&qword_257949EE0, &qword_257949E60, MEMORY[0x24BDEBC00]);
    sub_24A69AC94();
    v117 = v153;
    sub_24A77B08C();
    (*(void (**)(char *, uint64_t))(v152 + 8))(v116, v117);
    sub_24A77B350();
    v118 = sub_24A77B374();
    swift_release();
    if (qword_257946858 != -1)
      swift_once();
    v119 = qword_2579598B0;
    v120 = v158;
    v121 = (uint64_t)v156;
    v122 = v159;
    (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v156, v107, v159);
    v123 = (uint64_t *)(v121 + *(int *)(v154 + 36));
    *v123 = v118;
    v123[1] = v119;
    v123[2] = 0;
    v123[3] = 0;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v107, v122);
    v124 = v161;
    sub_24A63CCC0(v121, v161, &qword_257949E70);
    v125 = v124 + *(int *)(v155 + 36);
    *(_QWORD *)v125 = 0;
    *(double *)(v125 + 8) = v109;
    sub_24A63CD04(v121, &qword_257949E70);
    v126 = v160;
    sub_24A63F6C4(v124, v160, &qword_257949E78);
    v127 = v150;
    sub_24A63CCC0(v93, v150, &qword_257949EA8);
    sub_24A63CCC0(v126, v124, &qword_257949E78);
    v112 = v166;
    sub_24A63CCC0(v127, v166, &qword_257949EA8);
    v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EF0);
    sub_24A63CCC0(v124, v112 + *(int *)(v128 + 48), &qword_257949E78);
    sub_24A63CD04(v126, &qword_257949E78);
    sub_24A63CD04(v93, &qword_257949EA8);
    sub_24A63CD04(v124, &qword_257949E78);
    sub_24A63CD04(v127, &qword_257949EA8);
    v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EC8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v112, 0, 1, v129);
    v111 = v165;
    sub_24A63F6C4(v112, v165, &qword_257949EB0);
  }
  else
  {
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EC8);
    v111 = v165;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v165, 1, 1, v110);
    v112 = v166;
  }
  v130 = v164;
  sub_24A63CCC0(v55, v164, &qword_257949EC0);
  sub_24A63CCC0(v111, v112, &qword_257949EB0);
  v131 = v167;
  sub_24A63CCC0(v130, v167, &qword_257949EC0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949ED0);
  sub_24A63CCC0(v112, v131 + *(int *)(v132 + 48), &qword_257949EB0);
  sub_24A63CD04(v111, &qword_257949EB0);
  sub_24A63CD04(v55, &qword_257949EC0);
  sub_24A63CD04(v112, &qword_257949EB0);
  return sub_24A63CD04(v130, &qword_257949EC0);
}

uint64_t sub_24A69A208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[24];

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EF8);
  MEMORY[0x24BDAC7A8](v3);
  v63 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v60);
  v6 = (uint64_t *)((char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_24A77B410();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949F00);
  v14 = MEMORY[0x24BDAC7A8](v61);
  v58 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v57 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v62 = (uint64_t)&v57 - v19;
  v20 = sub_24A69A774();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDF40B0], v7);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v60 + 28), v10, v7);
  *v6 = KeyPath;
  v22 = *(int *)(v11 + 36);
  v23 = a1;
  sub_24A63CCC0((uint64_t)v6, (uint64_t)v13 + v22, &qword_2579492E8);
  *v13 = v20;
  swift_retain();
  sub_24A63CD04((uint64_t)v6, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  LOBYTE(v20) = sub_24A77ACC0();
  v24 = type metadata accessor for ZoneBarView();
  v25 = a1 + *(int *)(v24 + 60);
  v26 = *(_QWORD *)v25;
  LOBYTE(KeyPath) = *(_BYTE *)(v25 + 8);
  sub_24A63BEC0(*(_QWORD *)v25, KeyPath);
  sub_24A63E608(v26, KeyPath, v66);
  sub_24A63BEDC(v26, KeyPath);
  sub_24A77A390();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_24A63CCC0((uint64_t)v13, (uint64_t)v18, &qword_2579492F0);
  v35 = &v18[*(int *)(v61 + 36)];
  *v35 = v20;
  *((_QWORD *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_24A63CD04((uint64_t)v13, &qword_2579492F0);
  v36 = (uint64_t)v18;
  v37 = v62;
  sub_24A63F6C4(v36, v62, &qword_257949F00);
  v38 = *(_QWORD *)(v23 + *(int *)(v24 + 24));
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v39 = (id)qword_2544D6158;
  sub_24A77856C();

  v40 = (uint64_t)v63;
  sub_24A7788A8();
  v41 = sub_24A7788D8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_24A780030;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
  }
  else
  {
    v43 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(result + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(result + 64) = v43;
    *(_QWORD *)(result + 32) = v38 + 1;
    v44 = sub_24A77B9BC();
    v46 = v45;
    swift_bridgeObjectRelease();
    sub_24A63CD04(v40, &qword_257949EF8);
    v64 = v44;
    v65 = v46;
    sub_24A645928();
    v47 = sub_24A77AFD8();
    v49 = v48;
    v51 = v50;
    v53 = v52 & 1;
    v54 = v58;
    sub_24A63CCC0(v37, v58, &qword_257949F00);
    v55 = v59;
    sub_24A63CCC0(v54, v59, &qword_257949F00);
    v56 = v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257949F08) + 48);
    *(_QWORD *)v56 = v47;
    *(_QWORD *)(v56 + 8) = v49;
    *(_BYTE *)(v56 + 16) = v53;
    *(_QWORD *)(v56 + 24) = v51;
    sub_24A6436C4(v47, v49, v53);
    swift_bridgeObjectRetain();
    sub_24A63CD04(v37, &qword_257949F00);
    sub_24A64596C(v47, v49, v53);
    swift_bridgeObjectRelease();
    return sub_24A63CD04(v54, &qword_257949F00);
  }
  return result;
}

uint64_t sub_24A69A774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;

  v1 = sub_24A77A018();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A779448();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ZoneBarView();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0 + *(int *)(v9 + 20), v5);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v10 == *MEMORY[0x24BEC5A88] || v10 == *MEMORY[0x24BEC5A80])
    return sub_24A77B3C8();
  sub_24A779A3C();
  v12 = sub_24A77A00C();
  v13 = sub_24A77BC5C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_24A635000, v12, v13, "Asked to display a zone image for an unknown zone type. Returning heart.", v14, 2u);
    MEMORY[0x24BD1A2B4](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v11 = sub_24A77B3C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

double sub_24A69A978()
{
  uint64_t v0;
  double result;

  if (qword_257946848 != -1)
    swift_once();
  v0 = qword_2579598A0;
  if (qword_257946850 != -1)
    swift_once();
  result = *(double *)&qword_2579598A8;
  qword_257949D68 = v0;
  qword_257949D70 = qword_2579598A8;
  return result;
}

double sub_24A69A9FC@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  double v5;
  double v6;
  double result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_24A77B368();
  if (qword_257946868 != -1)
    swift_once();
  v5 = *(double *)&qword_257949D68;
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A77A4EC();
  *(_QWORD *)a1 = v4;
  *(_WORD *)(a1 + 8) = 256;
  *(_QWORD *)(a1 + 16) = v8;
  result = v6 * a2 + v5 * -0.5;
  *(_BYTE *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(double *)(a1 + 64) = result;
  *(_QWORD *)(a1 + 72) = 0;
  return result;
}

double sub_24A69AB08@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  sub_24A69AEEC((uint64_t)v8, a2, a3, a4, a5);
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_24A69AB48()
{
  sub_24A69B1C4();
  return sub_24A77B470();
}

uint64_t sub_24A69AB98()
{
  sub_24A69B1C4();
  return sub_24A77B440();
}

uint64_t sub_24A69ABE8()
{
  sub_24A69B1C4();
  return sub_24A77B458();
}

uint64_t sub_24A69AC20@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  double (*v6)@<D0>(uint64_t@<X8>);

  v2 = sub_24A77AC60();
  if ((v3 & 1) != 0)
  {
    v6 = 0;
    result = 0;
  }
  else
  {
    v4 = v2;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    v6 = sub_24A69AD98;
  }
  *a1 = v6;
  a1[1] = (double (*)@<D0>(uint64_t@<X8>))result;
  return result;
}

unint64_t sub_24A69AC94()
{
  unint64_t result;

  result = qword_257949EE8;
  if (!qword_257949EE8)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7824EC, &type metadata for ChevronProgressViewStyle);
    atomic_store(result, (unint64_t *)&qword_257949EE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChevronProgressViewStyle()
{
  return &type metadata for ChevronProgressViewStyle;
}

unint64_t sub_24A69ACF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257949F10;
  if (!qword_257949F10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949E40);
    v2[0] = sub_24A63CFF0(&qword_257949F18, &qword_257949E30, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257949F10);
  }
  return result;
}

uint64_t sub_24A69AD78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A69AD88()
{
  return swift_deallocObject();
}

double sub_24A69AD98@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A69A9FC(a1, *(double *)(v1 + 16));
}

ValueMetadata *type metadata accessor for ChevronProgressViewStyle.Chevron()
{
  return &type metadata for ChevronProgressViewStyle.Chevron;
}

unint64_t sub_24A69ADB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257949F20;
  if (!qword_257949F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257949F28);
    v2 = sub_24A63CFF0(&qword_257949F30, &qword_257949F38, MEMORY[0x24BDEC6F8]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257949F20);
  }
  return result;
}

uint64_t sub_24A69AE30()
{
  return sub_24A63CFF0(&qword_257949F40, &qword_257949F48, MEMORY[0x24BDEB358]);
}

unint64_t sub_24A69AE60()
{
  unint64_t result;

  result = qword_257949F50;
  if (!qword_257949F50)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A78257C, &type metadata for ChevronProgressViewStyle.Chevron);
    atomic_store(result, (unint64_t *)&qword_257949F50);
  }
  return result;
}

unint64_t sub_24A69AEA8()
{
  unint64_t result;

  result = qword_257949F58;
  if (!qword_257949F58)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A78252C, &type metadata for ChevronProgressViewStyle.Chevron);
    atomic_store(result, (unint64_t *)&qword_257949F58);
  }
  return result;
}

double sub_24A69AEEC@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  CGPath *Mutable;
  CGFloat Height;
  CGFloat v12;
  CGFloat Width;
  double v14;
  double result;
  __int128 v16;
  __int128 v17;
  char v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  Mutable = CGPathCreateMutable();
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  Height = CGRectGetHeight(v19);
  v12 = Height + Height;
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  Width = CGRectGetWidth(v20);
  v14 = atan(v12 / Width);
  __sincos_stret(v14 * 0.5);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetMidX(v21);
  v22.origin.x = a2;
  v22.origin.y = a3;
  v22.size.width = a4;
  v22.size.height = a5;
  CGRectGetMaxY(v22);
  v23.origin.x = a2;
  v23.origin.y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  CGRectGetMidX(v23);
  v24.origin.x = a2;
  v24.origin.y = a3;
  v24.size.width = a4;
  v24.size.height = a5;
  CGRectGetMinY(v24);
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  CGRectGetMaxX(v25);
  v26.origin.x = a2;
  v26.origin.y = a3;
  v26.size.width = a4;
  v26.size.height = a5;
  CGRectGetMaxY(v26);
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  CGRectGetMaxX(v27);
  __sincos_stret(v14);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  CGRectGetMaxY(v28);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  CGRectGetMinX(v29);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  CGRectGetMaxX(v30);
  sub_24A77BC8C();
  sub_24A77BCA4();
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  CGRectGetMaxX(v31);
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  CGRectGetMaxY(v32);
  sub_24A77BC98();
  sub_24A77BCA4();
  sub_24A77BCA4();
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  CGRectGetMinX(v33);
  v34.origin.x = a2;
  v34.origin.y = a3;
  v34.size.width = a4;
  v34.size.height = a5;
  CGRectGetMaxY(v34);
  sub_24A77BC98();
  CGPathCloseSubpath(Mutable);
  sub_24A77AF18();
  result = *(double *)&v16;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v17;
  *(_BYTE *)(a1 + 32) = v18;
  return result;
}

unint64_t sub_24A69B1C4()
{
  unint64_t result;

  result = qword_257949F60;
  if (!qword_257949F60)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7825CC, &type metadata for ChevronProgressViewStyle.Chevron);
    atomic_store(result, (unint64_t *)&qword_257949F60);
  }
  return result;
}

uint64_t HeartRateMetricView.init(heartRate:heartRateValueType:isStale:workoutPaused:lowPowerModeAnimationSuspended:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v14 = (int *)type metadata accessor for HeartRateMetricView();
  v15 = a7 + v14[9];
  *(_QWORD *)v15 = swift_getKeyPath();
  *(_BYTE *)(v15 + 8) = 0;
  v16 = a7 + v14[10];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 8) = 0;
  v17 = a7 + v14[11];
  *(_QWORD *)v17 = swift_getKeyPath();
  *(_BYTE *)(v17 + 8) = 0;
  *(_QWORD *)(a7 + v14[12]) = 0x3FD6666666666666;
  v18 = (_QWORD *)(a7 + v14[13]);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)a7 = a1;
  *(_BYTE *)(a7 + 8) = a2 & 1;
  v19 = a7 + v14[5];
  v20 = sub_24A7798EC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a3, v20);
  *(_BYTE *)(a7 + v14[6]) = a4;
  *(_BYTE *)(a7 + v14[7]) = a5;
  *(_BYTE *)(a7 + v14[8]) = a6;
  return result;
}

uint64_t type metadata accessor for HeartRateMetricView()
{
  uint64_t result;

  result = qword_257949FC8;
  if (!qword_257949FC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A69B360()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  _BYTE *v18;
  uint64_t v19;
  char v20;
  char v21;
  _BYTE v22[15];
  char v23;

  v1 = (int *)type metadata accessor for HeartRateMetricView();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = &v22[-v6];
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = &v22[-v9];
  v11 = v0 + *(int *)(v8 + 36);
  v12 = *(_QWORD *)v11;
  v13 = *(_BYTE *)(v11 + 8);
  sub_24A63BEC0(*(_QWORD *)v11, v13);
  v14 = sub_24A63EC60(v12, v13);
  sub_24A63BEDC(v12, v13);
  sub_24A69BFA0(v0, (uint64_t)v10);
  if ((v14 & 1) != 0)
  {
    sub_24A69BFE4((uint64_t)v10);
    sub_24A69BFA0(v0, (uint64_t)v7);
LABEL_4:
    sub_24A69BFE4((uint64_t)v7);
    sub_24A69BFA0(v0, (uint64_t)v4);
    goto LABEL_5;
  }
  v15 = v10[v1[7]];
  sub_24A69BFE4((uint64_t)v10);
  sub_24A69BFA0(v0, (uint64_t)v7);
  if ((v15 & 1) != 0)
    goto LABEL_4;
  v18 = &v7[v1[11]];
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_24A63BEC0(*(_QWORD *)v18, v20);
  sub_24A63EE18(v19, v20, &v23);
  sub_24A63BEDC(v19, v20);
  sub_24A69BFE4((uint64_t)v7);
  v21 = v23;
  sub_24A69BFA0(v0, (uint64_t)v4);
  if ((v21 & 1) == 0)
  {
    v16 = v4[v1[8]];
    goto LABEL_6;
  }
LABEL_5:
  v16 = 1;
LABEL_6:
  sub_24A69BFE4((uint64_t)v4);
  return v16;
}

uint64_t sub_24A69B50C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_24A778674();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A77C16C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v24 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v24 - v17;
  if ((v1[1] & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v19 = (id)qword_2544D6158;
    v20 = sub_24A77856C();

  }
  else
  {
    v28 = *v1;
    sub_24A77886C();
    sub_24A6971B4();
    sub_24A7785E4();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE38E8], v4);
    MEMORY[0x24BD15C28](v7, 0, 1, v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    v21(v13, v9);
    v22 = v25;
    sub_24A778668();
    MEMORY[0x24BD15C34](v22, v9);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v27);
    v21(v16, v9);
    sub_24A63CFF0((unint64_t *)&qword_257949CD8, &qword_257949CC8, MEMORY[0x24BDCD4C0]);
    sub_24A77B8E4();
    v21(v18, v9);
    return v29;
  }
  return v20;
}

uint64_t sub_24A69B844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  _QWORD v15[4];

  v1 = v0;
  v2 = sub_24A7798EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEC5F20], v2);
  sub_24A69C8C8();
  sub_24A77BAF4();
  sub_24A77BAF4();
  v7 = v15[0];
  v8 = v15[3];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7 == v8)
  {
    if (qword_2544D6160 == -1)
      goto LABEL_6;
    goto LABEL_9;
  }
  v9 = v1 + *(int *)(v6 + 40);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_24A63BEC0(*(_QWORD *)v9, v11);
  sub_24A63E608(v10, v11, v15);
  sub_24A63BEDC(v10, v11);
  if (LOBYTE(v15[0]) != 5)
    return 0;
  if (qword_2544D6160 != -1)
LABEL_9:
    swift_once();
LABEL_6:
  swift_beginAccess();
  v12 = (id)qword_2544D6158;
  v13 = sub_24A77856C();

  return v13;
}

uint64_t HeartRateMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v2 = type metadata accessor for HeartRateMetricView();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257949F68);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A69B50C();
  v10 = v9;
  v11 = (uint64_t *)(v1 + *(int *)(v2 + 52));
  v12 = *v11;
  v13 = v11[1];
  v22 = v8;
  v23 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_24A69B844();
  v16 = v15;
  v17 = *(_BYTE *)(v1 + 8);
  sub_24A69BFA0(v1, (uint64_t)v4);
  if ((v17 & 1) != 0)
    v18 = 0;
  else
    v18 = v4[*(int *)(v2 + 24)];
  sub_24A69BFE4((uint64_t)v4);
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *(_DWORD *)(v7 + 47) = 0;
  v19 = &v7[v5[15]];
  *(_QWORD *)v19 = swift_getKeyPath();
  v19[8] = 0;
  *(_QWORD *)&v7[v5[16]] = 0x3FD6666666666666;
  *(_QWORD *)v7 = v22;
  *((_QWORD *)v7 + 1) = v10;
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 2) = v23;
  *((_QWORD *)v7 + 3) = v13;
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 4) = v14;
  *((_QWORD *)v7 + 5) = v16;
  v7[48] = v18;
  *(_WORD *)(v7 + 49) = 0;
  sub_24A69BC4C(v1, (uint64_t)&v7[v5[14]]);
  return sub_24A63F6C4((uint64_t)v7, v24, &qword_257949F68);
}

uint64_t sub_24A69BC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t KeyPath;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  char v34;
  uint64_t v35;
  char v36;
  __int16 v37;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A028);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - v8;
  v10 = sub_24A7798EC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEC5F18], v10);
  sub_24A69C8C8();
  sub_24A77BAF4();
  sub_24A77BAF4();
  v15 = v32;
  v16 = v31;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v15 == v16)
  {
    if (*(_BYTE *)(a1 + *(int *)(v14 + 24)) == 1)
    {
      if ((*(_BYTE *)(a1 + *(int *)(v14 + 28)) & 1) != 0)
      {
        v17 = 6;
      }
      else if (*(_BYTE *)(a1 + 8))
      {
        v17 = 1;
      }
      else
      {
        v17 = 4;
      }
    }
    else if (*(_BYTE *)(a1 + *(int *)(v14 + 28)))
    {
      v17 = 3;
    }
    else
    {
      v17 = 2;
    }
    if (*(_BYTE *)(a1 + 8))
      v19 = 0.0;
    else
      v19 = *(double *)a1;
    v20 = sub_24A69B360();
    KeyPath = swift_getKeyPath();
    v32 = v17;
    v33 = v19;
    v34 = v20 & 1;
    v35 = KeyPath;
    v36 = 0;
    v37 = 257;
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v22 = (id)qword_2544D6158;
    v23 = sub_24A77856C();
    v25 = v24;

    v29 = v23;
    v30 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794A038);
    sub_24A69C910();
    sub_24A645928();
    sub_24A77B1C4();
    swift_release();
    swift_bridgeObjectRelease();
    sub_24A63F6C4((uint64_t)v7, (uint64_t)v9, &qword_25794A028);
    sub_24A63F6C4((uint64_t)v9, a2, &qword_25794A028);
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(a2, v18, 1, v28);
}

uint64_t sub_24A69BFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A69BFE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeartRateMetricView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A69C020()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for HeartRateMetricView(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_24A7798EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
    v12 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v13 = (char *)v4 + v12;
    v14 = *(uint64_t *)((char *)a2 + v12);
    LOBYTE(v9) = *((_BYTE *)a2 + v12 + 8);
    sub_24A63BEC0(v14, v9);
    *(_QWORD *)v13 = v14;
    v13[8] = v9;
    v15 = a3[10];
    v16 = (char *)v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v9) = *(_BYTE *)(v17 + 8);
    sub_24A63BEC0(*(_QWORD *)v17, v9);
    *(_QWORD *)v16 = v18;
    v16[8] = v9;
    v19 = a3[11];
    v20 = (char *)v4 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = *(_QWORD *)v21;
    LOBYTE(v9) = *(_BYTE *)(v21 + 8);
    sub_24A63BEC0(*(_QWORD *)v21, v9);
    *(_QWORD *)v20 = v22;
    v20[8] = v9;
    v23 = a3[13];
    *(_QWORD *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HeartRateMetricView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + a2[5];
  v5 = sub_24A7798EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_24A63BEDC(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
  sub_24A63BEDC(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  sub_24A63BEDC(*(_QWORD *)(a1 + a2[11]), *(_BYTE *)(a1 + a2[11] + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeartRateMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24A7798EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v12 = a1 + v11;
  v13 = *(_QWORD *)(a2 + v11);
  LOBYTE(v8) = *(_BYTE *)(a2 + v11 + 8);
  sub_24A63BEC0(v13, v8);
  *(_QWORD *)v12 = v13;
  *(_BYTE *)(v12 + 8) = v8;
  v14 = a3[10];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  LOBYTE(v8) = *(_BYTE *)(v16 + 8);
  sub_24A63BEC0(*(_QWORD *)v16, v8);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v8;
  v18 = a3[11];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  LOBYTE(v8) = *(_BYTE *)(v20 + 8);
  sub_24A63BEC0(*(_QWORD *)v20, v8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v8;
  v22 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeartRateMetricView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_24A7798EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v9) = *(_BYTE *)(v13 + 8);
  sub_24A63BEC0(*(_QWORD *)v13, v9);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v9;
  sub_24A63BEDC(v15, v16);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = (uint64_t)a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v9) = *(_BYTE *)(v19 + 8);
  sub_24A63BEC0(*(_QWORD *)v19, v9);
  v21 = *(_QWORD *)v18;
  v22 = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v9;
  sub_24A63BEDC(v21, v22);
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = (uint64_t)a2 + v23;
  v26 = *(_QWORD *)v25;
  LOBYTE(v9) = *(_BYTE *)(v25 + 8);
  sub_24A63BEC0(*(_QWORD *)v25, v9);
  v27 = *(_QWORD *)v24;
  v28 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v9;
  sub_24A63BEDC(v27, v28);
  *(_QWORD *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  v29 = a3[13];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HeartRateMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24A7798EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[10];
  v15 = a3[11];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t assignWithTake for HeartRateMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24A7798EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  sub_24A63BEDC(v15, v16);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  LOBYTE(v19) = *((_BYTE *)v19 + 8);
  v21 = *(_QWORD *)v18;
  v22 = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = (_BYTE)v19;
  sub_24A63BEDC(v21, v22);
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  LOBYTE(v25) = *((_BYTE *)v25 + 8);
  v27 = *(_QWORD *)v24;
  v28 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = (_BYTE)v25;
  sub_24A63BEDC(v27, v28);
  v29 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateMetricView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A69C6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_24A7798EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 52) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartRateMetricView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A69C774(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24A7798EC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 52) + 8) = a2;
  return result;
}

uint64_t sub_24A69C7F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A7798EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A69C89C()
{
  return sub_24A63CFF0(&qword_25794A020, &qword_257949F68, (uint64_t)&protocol conformance descriptor for MetricTextWithAccessory<A>);
}

unint64_t sub_24A69C8C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794A030;
  if (!qword_25794A030)
  {
    v1 = sub_24A7798EC();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEC5F38], v1);
    atomic_store(result, (unint64_t *)&qword_25794A030);
  }
  return result;
}

unint64_t sub_24A69C910()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A040;
  if (!qword_25794A040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A038);
    v2[0] = sub_24A6569E4();
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A040);
  }
  return result;
}

uint64_t static Dependencies.workout(wheelchairStatusProvider:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[40];
  __int128 v68[2];
  _BYTE v69[40];
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;

  v4 = sub_24A779EC8();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v7 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  v43 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778B90();
  MEMORY[0x24BD16180](a2);
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v10 = sub_24A779EE0();
  swift_allocObject();
  v11 = sub_24A779ED4();
  v74 = v10;
  v75 = MEMORY[0x24BE86E40];
  v73[0] = v11;
  v12 = sub_24A779BC8();
  swift_allocObject();
  v13 = sub_24A779BB0();
  sub_24A779BBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949738);
  sub_24A778B84();
  v14 = v73[0];
  v15 = v73[1];
  v16 = type metadata accessor for WheelchairStatusBridge();
  v17 = swift_allocObject();
  v44 = a1;
  *(_QWORD *)(v17 + 16) = a1;
  v46 = v17;
  v74 = v12;
  v75 = MEMORY[0x24BE8E418];
  v45 = v13;
  v73[0] = v13;
  v71 = v16;
  v72 = sub_24A63C880(&qword_25794A048, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairStatusBridge, (uint64_t)&protocol conformance descriptor for WheelchairStatusBridge);
  v70[0] = v17;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_24A778B84();
  sub_24A779ACC();
  swift_allocObject();
  v50 = sub_24A779AC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949758);
  sub_24A778B84();
  v18 = sub_24A779B80();
  swift_allocObject();
  v19 = sub_24A779B74();
  v71 = v18;
  v72 = MEMORY[0x24BE8E250];
  v70[0] = v19;
  sub_24A67BC90((uint64_t)v73, (uint64_t)v69);
  v20 = sub_24A779B98();
  swift_allocObject();
  v21 = sub_24A779B8C();
  v71 = v20;
  v72 = MEMORY[0x24BE8E2D0];
  v70[0] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A050);
  sub_24A778B84();
  sub_24A779B68();
  sub_24A67BC90((uint64_t)v69, (uint64_t)v68);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A058);
  sub_24A778B84();
  v40 = sub_24A779B5C();
  type metadata accessor for MetricNavigationTracker();
  swift_allocObject();
  v22 = swift_unknownObjectRetain();
  v39 = sub_24A72CF44(v22, v15);
  swift_unknownObjectRelease();
  sub_24A67BC90((uint64_t)v69, (uint64_t)v68);
  type metadata accessor for MetricApplicationLifecycleTracker();
  v23 = swift_allocObject();
  *(_BYTE *)(v23 + 16) = 0;
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_OWORD *)(v23 + 112) = 0u;
  *(_OWORD *)(v23 + 128) = 0u;
  *(_OWORD *)(v23 + 144) = 0u;
  *(_OWORD *)(v23 + 160) = 0u;
  *(_QWORD *)(v23 + 176) = 0;
  v24 = v23 + OBJC_IVAR____TtC9WorkoutUI33MetricApplicationLifecycleTracker_currentPage;
  v25 = sub_24A778A04();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(_QWORD *)(v23 + 24) = v14;
  *(_QWORD *)(v23 + 32) = v15;
  sub_24A6865F8(v68, v23 + 40);
  sub_24A779F1C();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  v38 = sub_24A779F10();
  v26 = v41;
  sub_24A779F04();
  v27 = v42;
  v28 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  v28(sub_24A68ABB4, v29);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v27);
  v30 = sub_24A779C64();
  swift_allocObject();
  swift_unknownObjectRetain();
  v31 = sub_24A779C58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A060);
  sub_24A778B84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A068);
  sub_24A778B84();
  sub_24A67BC90((uint64_t)v67, (uint64_t)&v66);
  sub_24A67BC90((uint64_t)v68, (uint64_t)&v65);
  v63 = v30;
  v64 = MEMORY[0x24BE8EB78];
  v42 = v31;
  v62 = v31;
  sub_24A779BF8();
  swift_allocObject();
  v37 = v14;
  swift_unknownObjectRetain();
  swift_retain();
  v32 = sub_24A779BEC();
  v43 = v32;
  sub_24A779BE0();
  swift_allocObject();
  swift_retain();
  v33 = sub_24A779BD4();
  v34 = v47;
  sub_24A779EBC();
  v51 = v32;
  v52 = v70;
  v53 = v50;
  v54 = v44;
  v55 = v40;
  v56 = v39;
  v57 = v23;
  v58 = v38;
  v59 = v33;
  v60 = v45;
  v61 = v34;
  v35 = sub_24A778B78();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  return v35;
}

uint64_t sub_24A69D06C()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = objc_msgSend(v0, sel_connectedScenes);

  sub_24A69D810();
  sub_24A63C880(&qword_25794A170, (uint64_t (*)(uint64_t))sub_24A69D810, MEMORY[0x24BEE5BD8]);
  v2 = sub_24A77BC14();

  return v2;
}

uint64_t sub_24A69D108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  uint64_t v37[3];
  uint64_t v38;
  uint64_t v39;

  v34[0] = a1;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A070);
  v39 = sub_24A69D7D0(&qword_25794A078, &qword_25794A070);
  __swift_allocate_boxed_opaque_existential_1(v37);
  sub_24A779BF8();
  swift_retain();
  sub_24A7789F8();
  v33 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  sub_24A67BC90(a2, (uint64_t)v34);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A080);
  v39 = sub_24A69D7D0(&qword_25794A088, &qword_25794A080);
  __swift_allocate_boxed_opaque_existential_1(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949838);
  sub_24A7789F8();
  v32 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v35 = sub_24A779ACC();
  v36 = (_UNKNOWN **)MEMORY[0x24BE8DEC0];
  v34[0] = a3;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A090);
  v39 = sub_24A69D7D0(&qword_25794A098, &qword_25794A090);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0A0);
  sub_24A7789F8();
  v18 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v34[0] = a4;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0A8);
  v39 = sub_24A69D7D0(&qword_25794A0B0, &qword_25794A0A8);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0B8);
  sub_24A7789F8();
  v19 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v34[0] = a5;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0C0);
  v39 = sub_24A69D7D0(&qword_25794A0C8, &qword_25794A0C0);
  __swift_allocate_boxed_opaque_existential_1(v37);
  sub_24A779B68();
  swift_retain();
  sub_24A7789F8();
  v20 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v35 = type metadata accessor for MetricNavigationTracker();
  v36 = &protocol witness table for MetricNavigationTracker;
  v34[0] = a6;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0D0);
  v39 = sub_24A69D7D0(&qword_25794A0D8, &qword_25794A0D0);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0E0);
  sub_24A7789F8();
  v21 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v35 = type metadata accessor for MetricApplicationLifecycleTracker();
  v36 = &protocol witness table for MetricApplicationLifecycleTracker;
  v34[0] = a7;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0E8);
  v39 = sub_24A69D7D0(&qword_25794A0F0, &qword_25794A0E8);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A0F8);
  sub_24A7789F8();
  v22 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v35 = sub_24A779F1C();
  v36 = (_UNKNOWN **)MEMORY[0x24BE86F20];
  v34[0] = a8;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A100);
  v39 = sub_24A69D7D0(&qword_25794A108, &qword_25794A100);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A110);
  sub_24A7789F8();
  v23 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v35 = sub_24A779BE0();
  v36 = (_UNKNOWN **)MEMORY[0x24BE8E470];
  v34[0] = a9;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A118);
  v39 = sub_24A69D7D0(&qword_25794A120, &qword_25794A118);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A128);
  sub_24A7789F8();
  v24 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v35 = sub_24A779BC8();
  v36 = (_UNKNOWN **)MEMORY[0x24BE8E418];
  v34[0] = a10;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A130);
  v39 = sub_24A69D7D0(&qword_25794A138, &qword_25794A130);
  __swift_allocate_boxed_opaque_existential_1(v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A140);
  sub_24A7789F8();
  v25 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v26 = sub_24A779EC8();
  v35 = v26;
  v36 = (_UNKNOWN **)MEMORY[0x24BE86B38];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1, a11, v26);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A148);
  v39 = sub_24A69D7D0(&qword_25794A150, &qword_25794A148);
  __swift_allocate_boxed_opaque_existential_1(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A158);
  sub_24A7789F8();
  v28 = sub_24A778EA8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A160);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_24A782780;
  *(_QWORD *)(v29 + 32) = v33;
  *(_QWORD *)(v29 + 40) = v32;
  *(_QWORD *)(v29 + 48) = v18;
  *(_QWORD *)(v29 + 56) = v19;
  *(_QWORD *)(v29 + 64) = v20;
  *(_QWORD *)(v29 + 72) = v21;
  *(_QWORD *)(v29 + 80) = v22;
  *(_QWORD *)(v29 + 88) = v23;
  *(_QWORD *)(v29 + 96) = v24;
  *(_QWORD *)(v29 + 104) = v25;
  *(_QWORD *)(v29 + 112) = v28;
  sub_24A778E9C();
  swift_bridgeObjectRelease();
  v30 = sub_24A778E90();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_24A69D768()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A69D794()
{
  uint64_t *v0;

  return sub_24A69D108(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12]);
}

uint64_t sub_24A69D7D0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE885D0], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A69D810()
{
  unint64_t result;

  result = qword_25794A168;
  if (!qword_25794A168)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25794A168);
  }
  return result;
}

uint64_t PaceMetricView.init(formattingManager:metricType:activityType:pace:gpsUnavailable:visualAlertDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = result;
  *(_BYTE *)(a7 + 32) = 0;
  *(double *)(a7 + 40) = a8;
  *(_BYTE *)(a7 + 48) = a4;
  *(_QWORD *)(a7 + 56) = a5;
  *(_QWORD *)(a7 + 64) = a6;
  return result;
}

void sub_24A69D8C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)v0;
  v3 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(double *)(v0 + 40);
  if ((sub_24A69DAEC() & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v6 = (id)qword_2544D6158;
    sub_24A77856C();
    goto LABEL_7;
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_meterUnit);
  v8 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v7, v5);

  v9 = v1;
  v10 = v3;
  sub_24A63BEC0(v2, v4);
  swift_bridgeObjectRetain();
  v11 = FIUIDistanceTypeForActivityType();
  v12 = MEMORY[0x24BD19A98](v11);
  v13 = FIUIDistanceTypeForActivityType();

  sub_24A63BEDC(v2, v4);
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v9, sel_localizedPaceStringWithDistance_overDuration_paceFormat_distanceType_, v8, v12, v13, 1.0);

  if (v6)
  {
    sub_24A77B9B0();
LABEL_7:

    return;
  }
  __break(1u);
}

uint64_t sub_24A69DAEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  double v4;
  unsigned int v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = *(double *)(v0 + 40);
  v5 = *(unsigned __int8 *)(v0 + 48);
  v6 = *(id *)v0;
  v7 = v1;
  sub_24A63BEC0(v2, v3);
  swift_bridgeObjectRetain();
  v8 = FIUIDistanceTypeForActivityType();
  v9 = MEMORY[0x24BD19A98](v8);

  sub_24A63BEDC(v2, v3);
  swift_bridgeObjectRelease();
  if (v9 == 4
    && v4 >= 0.0
    && objc_msgSend(v7, sel_effectiveTypeIdentifier) == (id)13
    && (objc_msgSend(v7, sel_isIndoor) & 1) != 0)
  {
    return 0;
  }
  v10 = v6;
  v11 = v7;
  sub_24A63BEC0(v2, v3);
  swift_bridgeObjectRetain();
  v12 = FIUIDistanceTypeForActivityType();
  v13 = MEMORY[0x24BD19A98](v12);

  sub_24A63BEDC(v2, v3);
  swift_bridgeObjectRelease();
  if (v13 != 4)
    return 0;
  if (v4 < 0.0)
    return 1;
  return v5;
}

id sub_24A69DC30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id result;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(id *)v0;
  v6 = v3;
  sub_24A63BEC0(v2, v4);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v2, v4);
  sub_24A63E608(v2, v4, &v36);
  sub_24A63BEDC(v2, v4);

  sub_24A63BEDC(v2, v4);
  swift_bridgeObjectRelease();
  if (v36 - 6 < 2)
    goto LABEL_4;
  if (v36 == 5)
  {
    v20 = v5;
    v21 = v6;
    sub_24A63BEC0(v2, v4);
    swift_bridgeObjectRetain();
    v22 = FIUIDistanceTypeForActivityType();
    result = objc_msgSend(v20, sel_unitManager);
    if (!result)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    v23 = result;
    v24 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, FIUIDistanceTypeForActivityType());

    v25 = FIUIDistanceTypeForActivityType();
    v26 = MEMORY[0x24BD19A98](v25);

    sub_24A63BEDC(v2, v4);
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v20, sel_localizedDistinguishingPaceUnitStringWithMetricType_distanceType_distanceUnit_paceFormat_abbreviated_multiline_, v1, v22, v24, v26, v1 == 48, 0);
    if (v19)
      goto LABEL_11;
    return 0;
  }
  if (!v36)
  {
LABEL_4:
    v7 = v5;
    v8 = v6;
    sub_24A63BEC0(v2, v4);
    swift_bridgeObjectRetain();
    v9 = FIUIDistanceTypeForActivityType();
    v10 = MEMORY[0x24BD19A98](v9);

    sub_24A63BEDC(v2, v4);
    swift_bridgeObjectRelease();
    if (v10 == 4 && v1 == 4)
      return 0;
    v11 = v7;
    v12 = v8;
    sub_24A63BEC0(v2, v4);
    swift_bridgeObjectRetain();
    v13 = FIUIDistanceTypeForActivityType();
    result = objc_msgSend(v11, sel_unitManager);
    if (result)
    {
      v15 = result;
      v16 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, FIUIDistanceTypeForActivityType());

      v17 = FIUIDistanceTypeForActivityType();
      v18 = MEMORY[0x24BD19A98](v17);

      sub_24A63BEDC(v2, v4);
      swift_bridgeObjectRelease();
      v19 = objc_msgSend(v11, sel_localizedDistinguishingPaceUnitStringWithMetricType_distanceType_distanceUnit_paceFormat_abbreviated_multiline_, v1, v13, v16, v18, 0, 1);
      if (!v19)
        return 0;
LABEL_11:
      v27 = v19;
      v28 = sub_24A77B9B0();

      return (id)v28;
    }
    __break(1u);
    goto LABEL_17;
  }
  v29 = v5;
  v30 = v6;
  sub_24A63BEC0(v2, v4);
  swift_bridgeObjectRetain();
  v31 = FIUIDistanceTypeForActivityType();
  result = objc_msgSend(v29, sel_unitManager);
  if (result)
  {
    v32 = result;
    v33 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, FIUIDistanceTypeForActivityType());

    v34 = FIUIDistanceTypeForActivityType();
    v35 = MEMORY[0x24BD19A98](v34);

    sub_24A63BEDC(v2, v4);
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v29, sel_localizedDistinguishingPaceUnitStringWithMetricType_distanceType_distanceUnit_paceFormat_abbreviated_multiline_, v1, v31, v33, v35, 0, 1);
    if (v19)
      goto LABEL_11;
    return 0;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24A69E01C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;
  id v5;
  id v6;
  int v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned __int8 v15;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(id *)v0;
  v6 = v2;
  sub_24A63BEC0(v3, v4);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v3, v4);
  sub_24A63E608(v3, v4, &v15);
  sub_24A63BEDC(v3, v4);

  sub_24A63BEDC(v3, v4);
  swift_bridgeObjectRelease();
  v7 = v15;
  v8 = v5;
  v9 = v6;
  sub_24A63BEC0(v3, v4);
  swift_bridgeObjectRetain();
  v10 = FIUIDistanceTypeForActivityType();
  v11 = MEMORY[0x24BD19A98](v10);

  sub_24A63BEDC(v3, v4);
  swift_bridgeObjectRelease();
  if (v7)
  {
    if (v11 != 4)
      return 0;
    goto LABEL_6;
  }
  v12 = 0;
  if (v11 == 4 && v1 == 4)
  {
LABEL_6:
    v13 = objc_msgSend(v8, sel_localizedSpeedUnitStringForActivityType_, v9);
    if (v13)
    {
      v12 = sub_24A77B9B0();

      return v12;
    }
    return 0;
  }
  return v12;
}

id sub_24A69E1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unsigned __int8 v14;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(id *)v0;
  v7 = v3;
  sub_24A63BEC0(v2, v4);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v2, v4);
  sub_24A63E608(v2, v4, &v14);
  sub_24A63BEDC(v2, v4);

  sub_24A63BEDC(v2, v4);
  swift_bridgeObjectRelease();
  if (v14 - 6 < 2)
    return sub_24A69DC30();
  if (v14 == 8)
  {
    swift_bridgeObjectRetain();
    return (id)v5;
  }
  if (!v14)
    return sub_24A69DC30();
  v8 = v6;
  v9 = v7;
  sub_24A63BEC0(v2, v4);
  swift_bridgeObjectRetain();
  v10 = FIUIDistanceTypeForActivityType();
  v11 = MEMORY[0x24BD19A98](v10);

  sub_24A63BEDC(v2, v4);
  swift_bridgeObjectRelease();
  if (v11 != 4 || v1 != 4)
    return sub_24A69DC30();
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v12 = (id)qword_2544D6158;
  v5 = sub_24A77856C();

  return (id)v5;
}

id PaceMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_24A69D8C8();
  v10 = v3;
  v11 = v2;
  v4 = sub_24A69E01C();
  v8 = v5;
  v9 = v4;
  result = sub_24A69E1B4();
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

id sub_24A69E4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_24A69D8C8();
  v10 = v3;
  v11 = v2;
  v4 = sub_24A69E01C();
  v8 = v5;
  v9 = v4;
  result = sub_24A69E1B4();
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_24A69E5CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PaceMetricView(uint64_t a1)
{

  sub_24A63BEDC(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaceMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  id v9;
  id v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(_BYTE *)(a2 + 32);
  v9 = v4;
  v10 = v7;
  sub_24A63BEC0(v6, v8);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaceMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  sub_24A63BEC0(v10, v11);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  sub_24A63BEDC(v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PaceMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;

  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v7;
  sub_24A63BEDC(v8, v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PaceMetricView()
{
  return &type metadata for PaceMetricView;
}

uint64_t RaceRemainingDistanceMetricView.init(remainingDistance:formattingManager:distanceType:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

double RaceRemainingDistanceMetricView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  double result;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int16 v11;
  char v12;

  v3 = qword_2544D6160;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v4 = (id)qword_2544D6158;
    sub_24A77856C();

    v5 = (id)qword_2544D6158;
    sub_24A77856C();

  }
  else
  {
    *(id *)(v1 + 16);
    if (v3 != -1)
      swift_once();
    swift_beginAccess();
    v6 = (id)qword_2544D6158;
    sub_24A77856C();

  }
  sub_24A6710D8();
  sub_24A6459E8();
  sub_24A77AB28();
  result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = v10;
  *(_WORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 50) = v12;
  return result;
}

uint64_t sub_24A69EA7C()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for RaceRemainingDistanceMetricView(uint64_t a1)
{

}

uint64_t initializeWithCopy for RaceRemainingDistanceMetricView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for RaceRemainingDistanceMetricView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = (void *)a2[2];
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  *(_QWORD *)(a1 + 24) = a2[3];
  return a1;
}

uint64_t assignWithTake for RaceRemainingDistanceMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RaceRemainingDistanceMetricView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RaceRemainingDistanceMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RaceRemainingDistanceMetricView()
{
  return &type metadata for RaceRemainingDistanceMetricView;
}

unint64_t sub_24A69EC14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A178;
  if (!qword_25794A178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A180);
    v2[0] = sub_24A6710D8();
    v2[1] = sub_24A6459E8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A178);
  }
  return result;
}

uint64_t sub_24A69EC80@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t KeyPath;
  char v13;
  uint64_t v14;
  char v15;
  double v16;
  uint64_t v17;

  KeyPath = swift_getKeyPath();
  v13 = a4 & 1;
  sub_24A6436C4(a2, a3, v13);
  v14 = qword_257946738;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  v15 = a1 & 1;
  v16 = *(double *)&qword_257959838;
  if (FIUICurrentLanguageRequiresTallScript())
    v16 = v16 + 1.0;
  v17 = swift_getKeyPath();
  *(_QWORD *)a6 = a2;
  *(_QWORD *)(a6 + 8) = a3;
  *(_BYTE *)(a6 + 16) = v13;
  *(_QWORD *)(a6 + 24) = a5;
  *(_BYTE *)(a6 + 32) = v15;
  *(_QWORD *)(a6 + 40) = KeyPath;
  *(_BYTE *)(a6 + 48) = 0;
  *(_BYTE *)(a6 + 56) = v15;
  *(double *)(a6 + 64) = v16;
  *(_QWORD *)(a6 + 72) = v17;
  *(_BYTE *)(a6 + 80) = 0;
  sub_24A6436C4(a2, a3, v13);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(KeyPath, 0);
  sub_24A64596C(a2, a3, v13);
  swift_bridgeObjectRelease();
  return sub_24A63BEDC(KeyPath, 0);
}

uint64_t View.metricDetail(_:color:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[4];

  v6[0] = a1;
  v6[1] = a2;
  v6[2] = a3;
  v6[3] = 0x4008000000000000;
  return MEMORY[0x24BD188D4](v6, a4, &type metadata for MetricDetail, a5);
}

uint64_t sub_24A69EDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_24A77A5F4();
  v4[0] = v1;
  v4[1] = sub_24A65F848();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for MetricDetail()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for MetricDetail(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for MetricDetail(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for MetricDetail(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for MetricDetail()
{
  return &type metadata for MetricDetail;
}

uint64_t sub_24A69EF78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A69EF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v33;
  int v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  char v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v37 = a5;
  v38 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A1A0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A1A8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  *(_QWORD *)&v13[*(int *)(v8 + 36)] = 0x3FF0000000000000;
  v35 = v13;
  v39 = a2;
  v40 = a3;
  sub_24A645928();
  v39 = sub_24A77BE54();
  v40 = v15;
  v16 = sub_24A77AFD8();
  v18 = v17;
  LOBYTE(v8) = v19 & 1;
  sub_24A69EC80(1, v16, v17, v19 & 1, v20, (uint64_t)&v39);
  sub_24A64596C(v16, v18, v8);
  swift_bridgeObjectRelease();
  v22 = v39;
  v21 = v40;
  LOBYTE(v8) = v41;
  v23 = v42;
  v24 = v44;
  v25 = v45;
  v33 = v46;
  v34 = v43;
  v26 = v47;
  v27 = v48;
  v28 = v49;
  v36 = v11;
  sub_24A63CCC0((uint64_t)v13, (uint64_t)v11, &qword_25794A1A0);
  v29 = (uint64_t)v11;
  v30 = v37;
  sub_24A63CCC0(v29, v37, &qword_25794A1A0);
  v31 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A1B0) + 48);
  *(_QWORD *)v31 = v22;
  *(_QWORD *)(v31 + 8) = v21;
  *(_BYTE *)(v31 + 16) = v8;
  *(_QWORD *)(v31 + 24) = v23;
  *(_BYTE *)(v31 + 32) = v34;
  *(_QWORD *)(v31 + 40) = v24;
  *(_BYTE *)(v31 + 48) = v25;
  *(_BYTE *)(v31 + 56) = v33;
  *(_QWORD *)(v31 + 64) = v26;
  *(_QWORD *)(v31 + 72) = v27;
  *(_BYTE *)(v31 + 80) = v28;
  *(_QWORD *)(v31 + 88) = v38;
  sub_24A6436C4(v22, v21, v8);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v24, v25);
  sub_24A63BEC0(v27, v28);
  swift_retain_n();
  sub_24A63CD04((uint64_t)v35, &qword_25794A1A0);
  sub_24A64596C(v22, v21, v8);
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v24, v25);
  sub_24A63BEDC(v27, v28);
  swift_release();
  return sub_24A63CD04((uint64_t)v36, &qword_25794A1A0);
}

uint64_t sub_24A69F21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A188);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v9 = v2[1];
  v10 = v2[2];
  v11 = v2[3];
  *(_QWORD *)v7 = sub_24A77A930();
  *((_QWORD *)v7 + 1) = v11;
  v7[16] = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A190);
  sub_24A69EF88(a1, v8, v9, v10, (uint64_t)&v7[*(int *)(v12 + 44)]);
  sub_24A63CCC0((uint64_t)v7, a2, &qword_25794A188);
  *(_QWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A198) + 36)) = 0;
  return sub_24A63CD04((uint64_t)v7, &qword_25794A188);
}

unint64_t sub_24A69F320()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A1B8;
  if (!qword_25794A1B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A198);
    v2[0] = sub_24A69F38C();
    v2[1] = sub_24A69F3D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A1B8);
  }
  return result;
}

unint64_t sub_24A69F38C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794A1C0;
  if (!qword_25794A1C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A188);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_25794A1C0);
  }
  return result;
}

unint64_t sub_24A69F3D8()
{
  unint64_t result;

  result = qword_25794A1C8;
  if (!qword_25794A1C8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for MetricRow, &type metadata for MetricRow);
    atomic_store(result, (unint64_t *)&qword_25794A1C8);
  }
  return result;
}

uint64_t type metadata accessor for SharedPowerViewFunctionality.BundleLookup()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PowerStatusView.BundleLookup()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for PowerStatusView()
{
  return &type metadata for PowerStatusView;
}

id sub_24A69F46C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  char v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v7;

  v1 = *(_QWORD *)v0;
  v2 = *(double *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 32);
  sub_24A63BEC0(v4, v5);
  sub_24A63E608(v4, v5, &v7);
  sub_24A63BEDC(v4, v5);
  return sub_24A69F5F8(v3, v1, &v7, v2);
}

uint64_t sub_24A69F4EC()
{
  sub_24A69F9EC();
  return sub_24A77AABC();
}

uint64_t sub_24A69F53C()
{
  sub_24A69F9EC();
  return sub_24A77AA68();
}

void sub_24A69F58C()
{
  sub_24A69F9EC();
  sub_24A77AAB0();
  __break(1u);
}

unint64_t sub_24A69F5B4()
{
  unint64_t result;

  result = qword_25794A300;
  if (!qword_25794A300)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A782980, &type metadata for PowerStatusView);
    atomic_store(result, (unint64_t *)&qword_25794A300);
  }
  return result;
}

id sub_24A69F5F8(char a1, uint64_t a2, unsigned __int8 *a3, double a4)
{
  int v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;

  v7 = *a3;
  if ((v7 - 2) < 3 || v7 == 5)
  {
    v8 = (void *)objc_opt_self();
    v9 = objc_msgSend(v8, sel_currentDevice);
    sub_24A6CDE34();

    v10 = objc_msgSend(v8, sel_currentDevice);
    sub_24A6CDE34();

    v11 = objc_msgSend(v8, sel_currentDevice);
    sub_24A6CDE34();

  }
  type metadata accessor for SharedPowerViewFunctionality.BundleLookup();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = objc_allocWithZone(MEMORY[0x24BE37940]);
  v15 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v14, sel_initWithFrame_heartFilledImageName_heartSpriteImageName_heartSuspendedSpriteImageName_spriteFrameCount_spriteColumnCount_resourceBundle_, v15, v16, v17, 60, 10, v13, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v18, sel_setAnimationsSuspended_, a1 & 1);
  objc_msgSend(v18, sel_setState_, a2);
  objc_msgSend(v18, sel_setBeatsPerMinute_, a4);
  return v18;
}

unint64_t sub_24A69F9EC()
{
  unint64_t result;

  result = qword_25794A308;
  if (!qword_25794A308)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7829D0, &type metadata for PowerStatusView);
    atomic_store(result, (unint64_t *)&qword_25794A308);
  }
  return result;
}

uint64_t static CatalogMediaTypeBridge.makeMediaTypeBridge(from:)(unsigned __int8 a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1 + 1;
  else
    return 0;
}

uint64_t static CatalogMediaTypeBridge.makeMediaTypeBridge(from:)(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t CatalogMediaTypeBridge.rawStringValue.getter(uint64_t a1)
{
  uint64_t result;

  if ((unint64_t)(a1 - 1) < 4)
    return sub_24A778D34();
  result = sub_24A77C19C();
  __break(1u);
  return result;
}

unint64_t CatalogMediaType.init(mediaTypeBridge:)(uint64_t a1)
{
  unint64_t result;

  result = a1 - 1;
  if (result >= 4)
  {
    result = sub_24A77C19C();
    __break(1u);
  }
  return result;
}

uint64_t CatalogMediaTypeBridge.init(rawStringValue:)()
{
  unsigned __int8 v0;

  v0 = MEMORY[0x24BD1633C]();
  if (v0 == 4)
    return 0;
  else
    return v0 + 1;
}

uint64_t CatalogMediaTypeBridge.init(rawValue:)(uint64_t a1)
{
  return sub_24A69FF14(a1);
}

uint64_t sub_24A69FB1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_24A69FF14(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void static CatalogMediaTypeHelper.mediaTypeBridgeRawValue(from:)(uint64_t a1, uint64_t a2)
{
  char *v4;

  swift_bridgeObjectRetain();
  v4 = (char *)sub_24A69FB9C + 4 * byte_24A782A60[MEMORY[0x24BD1633C](a1, a2)];
  __asm { BR              X10 }
}

id sub_24A69FB9C()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 2);
}

id sub_24A69FC30()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 2);
  swift_bridgeObjectRelease();
  return v0;
}

id CatalogMediaTypeHelper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CatalogMediaTypeHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogMediaTypeHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CatalogMediaTypeHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogMediaTypeHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CatalogMediaTypeBridge.activityType.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 1;
  result = 52;
  switch(v1)
  {
    case 0:
      result = 37;
      break;
    case 1:
      return result;
    case 2:
    case 3:
      result = 0;
      break;
    default:
      result = sub_24A77C19C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t CatalogMediaTypeBridge.description.getter(uint64_t a1)
{
  uint64_t result;

  if ((unint64_t)(a1 - 1) < 4)
    return sub_24A778D34();
  result = sub_24A77C19C();
  __break(1u);
  return result;
}

uint64_t sub_24A69FDF4()
{
  _QWORD *v0;
  uint64_t result;

  if ((unint64_t)(*v0 - 1) < 4)
    return sub_24A778D34();
  result = sub_24A77C19C();
  __break(1u);
  return result;
}

uint64_t CatalogMediaTypeBridge.logString.getter(uint64_t a1)
{
  uint64_t result;

  if ((unint64_t)(a1 - 1) >= 4)
  {
    result = sub_24A77C19C();
    __break(1u);
  }
  else
  {
    sub_24A778D34();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    sub_24A77BA4C();
    sub_24A77C160();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    sub_24A77BA4C();
    return 0;
  }
  return result;
}

uint64_t sub_24A69FF0C()
{
  uint64_t *v0;

  return CatalogMediaTypeBridge.logString.getter(*v0);
}

uint64_t sub_24A69FF14(uint64_t result)
{
  if ((unint64_t)(result - 5) < 0xFFFFFFFFFFFFFFFCLL)
    return 0;
  return result;
}

uint64_t type metadata accessor for CatalogMediaTypeHelper()
{
  return objc_opt_self();
}

unint64_t sub_24A69FF4C()
{
  unint64_t result;

  result = qword_25794A310;
  if (!qword_25794A310)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for CatalogMediaTypeBridge, &type metadata for CatalogMediaTypeBridge);
    atomic_store(result, (unint64_t *)&qword_25794A310);
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogMediaTypeBridge()
{
  return &type metadata for CatalogMediaTypeBridge;
}

id static PacerWorkoutConfiguration.aheadColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 1.0, 0.658823529, 1.0);
}

id static PacerWorkoutConfiguration.behindColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.37254902, 0.274509804, 1.0);
}

id static RaceWorkoutConfiguration.aheadColors.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static RaceWorkoutConfiguration.behindColors.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

BOOL WorkoutConfiguration.canBeAdded.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579486A0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_24A779154();
  swift_release();
  if (v3)
    return 0;
  sub_24A7791A8();
  v5 = sub_24A77898C();
  v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v2, 1, v5) == 1;
  sub_24A63CD04((uint64_t)v2, &qword_2579486A0);
  return v4;
}

SEL *WorkoutConfiguration.displayColor.getter()
{
  SEL *v0;
  SEL *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  SEL *v7;
  void *v8;
  id v9;
  id v11;
  id v13;
  void *v14;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_24A779724();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779190();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x24BEC5CB8])
  {
    if (v6 == *MEMORY[0x24BEC5CD0])
      return (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
    if (v6 == *MEMORY[0x24BEC5CC0])
    {
      v11 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      return (SEL *)objc_msgSend(v11, sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    }
    else
    {
      if (v6 != *MEMORY[0x24BEC5CC8])
      {
        if (v6 != *MEMORY[0x24BEC5CB0])
          goto LABEL_19;
        v13 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
        if (v13)
        {
          v14 = v13;
          v1 = (SEL *)objc_msgSend(v13, sel_nonGradientTextColor);

          if (v1)
            return v1;
          __break(1u);
        }
        __break(1u);
        while (1)
        {
LABEL_18:
          sub_24A77C01C();
          __break(1u);
LABEL_19:
          v15[0] = 0;
          v15[1] = 0xE000000000000000;
          sub_24A77BF5C();
          swift_bridgeObjectRelease();
          v1 = (SEL *)-[SEL description](v1, sel_description, 0xD00000000000002ELL, 0x800000024A78B960);
          sub_24A77B9B0();

          sub_24A77BA4C();
          swift_bridgeObjectRelease();
        }
      }
      return (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
    }
  }
  sub_24A778FC8();
  if (!swift_dynamicCastClass())
    goto LABEL_18;
  v7 = v0;
  v8 = (void *)sub_24A778FBC();
  v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

  v1 = _HKWorkoutGoalType.color.getter((uint64_t)v9);
  return v1;
}

id static PacerWorkoutConfiguration.displayColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
}

uint64_t WorkoutConfiguration.displayDetail(_:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t result;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;

  v3 = sub_24A779370();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778FC8();
  if (swift_dynamicCastClass())
  {
    v7 = v1;
    v8 = (void *)sub_24A778FBC();
    v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

    if (v9)
    {
      v10 = (void *)sub_24A778FBC();
      v11 = NLSessionActivityGoal.displayString(formattingManager:localizedOpenString:)(a1, 0, 0);
      v13 = v12;

      v52 = v11;
      v53 = v13;
      sub_24A645928();
      v14 = sub_24A77BE48();
      swift_bridgeObjectRelease();

    }
    else
    {

      return 0;
    }
    return v14;
  }
  sub_24A7790B8();
  if (swift_dynamicCastClass())
  {
    v15 = v1;
    v16 = (void *)sub_24A7790AC();
    v14 = sub_24A77907C();

    return v14;
  }
  sub_24A779040();
  if (swift_dynamicCastClass())
  {
    v17 = v1;
    v18 = RaceWorkoutConfiguration.cityAndLengthTitle(_:)(a1);
    if (!v19)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEC5960], v3);
      v14 = (uint64_t)RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)((uint64_t)v6, a1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return v14;
    }
    goto LABEL_9;
  }
  sub_24A779064();
  if (swift_dynamicCastClass())
  {
    v20 = v1;
    v21 = (void *)sub_24A77904C();
    v22 = objc_msgSend(v21, sel_goalTypeIdentifier);

    v23 = (void *)sub_24A77904C();
    objc_msgSend(v23, sel_doubleValue);
    v25 = v24;

    v26 = (void *)sub_24A779130();
    v27 = objc_msgSend(a1, sel_localizedCompactGoalDescriptionForGoalType_goalValue_activityType_, v22, v26, v25);

    if (v27)
    {
      v28 = sub_24A77B9B0();
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0;
    }
    v35 = (void *)sub_24A779058();
    v36 = objc_msgSend(v35, sel_goalTypeIdentifier);

    v37 = (void *)sub_24A779058();
    objc_msgSend(v37, sel_doubleValue);
    v39 = v38;

    v40 = (void *)sub_24A779130();
    v41 = objc_msgSend(a1, sel_localizedGoalDescriptionForGoalType_goalValue_activityType_, v36, v40, v39);

    if (v41 && (v42 = sub_24A77B9B0(), v44 = v43, v41, v30) && v44)
    {
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v45 = (id)qword_2544D6158;
      sub_24A77856C();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_24A780450;
      v47 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v46 + 56) = MEMORY[0x24BEE0D00];
      v48 = sub_24A66952C();
      *(_QWORD *)(v46 + 32) = v28;
      *(_QWORD *)(v46 + 40) = v30;
      *(_QWORD *)(v46 + 96) = v47;
      *(_QWORD *)(v46 + 104) = v48;
      *(_QWORD *)(v46 + 64) = v48;
      *(_QWORD *)(v46 + 72) = v42;
      *(_QWORD *)(v46 + 80) = v44;
      v14 = sub_24A77B9C8();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      return 0;
    }
    return v14;
  }
  sub_24A778FA4();
  if (swift_dynamicCastClass())
  {
    v17 = v1;
    v31 = sub_24A778F98();
    v33 = v32;
    swift_bridgeObjectRelease();
    v34 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0)
      v34 = v31 & 0xFFFFFFFFFFFFLL;
    if (v34)
      v18 = sub_24A778F98();
    else
      v18 = sub_24A77B9EC();
LABEL_9:
    v14 = v18;

    return v14;
  }
  v52 = 0;
  v53 = 0xE000000000000000;
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  v52 = 0xD00000000000002FLL;
  v53 = 0x800000024A78B9E0;
  v50 = objc_msgSend(v1, sel_description);
  sub_24A77B9B0();

  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

uint64_t WorkoutConfiguration.displayName(formattingManager:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  uint64_t v9;
  id v10;

  sub_24A778FC8();
  if (swift_dynamicCastClass())
  {
    v3 = v1;
    v4 = (void *)sub_24A778FBC();
    v5 = objc_msgSend(v4, sel_goalTypeIdentifier);

    v6 = _HKWorkoutGoalType.displayName(formattingManager:)(a1, (uint64_t)v5);
    return v6;
  }
  sub_24A7790B8();
  if (swift_dynamicCastClass())
    return sub_24A77B9EC();
  sub_24A779040();
  if (swift_dynamicCastClass())
  {
    if (qword_2544D6160 == -1)
      goto LABEL_10;
    goto LABEL_14;
  }
  sub_24A779064();
  if (swift_dynamicCastClass())
  {
    if (qword_2544D6160 == -1)
    {
LABEL_10:
      swift_beginAccess();
      v8 = (id)qword_2544D6158;
      v9 = sub_24A77856C();

      return v9;
    }
LABEL_14:
    swift_once();
    goto LABEL_10;
  }
  sub_24A778FA4();
  if (swift_dynamicCastClass())
  {
    if (qword_2544D6160 == -1)
      goto LABEL_10;
    goto LABEL_14;
  }
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v1, sel_description);
  sub_24A77B9B0();

  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

uint64_t static IntervalWorkoutConfiguration.displayName.getter()
{
  return sub_24A77B9EC();
}

uint64_t static RaceWorkoutConfiguration.displayName.getter()
{
  id v0;
  uint64_t v1;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  v1 = sub_24A77856C();

  return v1;
}

uint64_t static PacerWorkoutConfiguration.displayName.getter()
{
  id v0;
  uint64_t v1;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  v1 = sub_24A77856C();

  return v1;
}

uint64_t static MultiSportWorkoutConfiguration.displayName.getter()
{
  id v0;
  uint64_t v1;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  v1 = sub_24A77856C();

  return v1;
}

uint64_t WorkoutConfiguration.displayNameShort(formattingManager:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;

  sub_24A778FC8();
  if (!swift_dynamicCastClass())
    return WorkoutConfiguration.displayName(formattingManager:)(a1);
  v3 = v1;
  v4 = (void *)sub_24A778FBC();
  v5 = objc_msgSend(v4, sel_goalTypeIdentifier);

  v6 = _HKWorkoutGoalType.displayNameShort(formattingManager:)(a1, (uint64_t)v5);
  return v6;
}

uint64_t RaceWorkoutConfiguration.cityAndLengthTitle(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = sub_24A779370();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779028();
  v8 = v7;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEC5960], v2);
  v9 = (unint64_t)RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)((uint64_t)v5, a1);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v12 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v12)
    goto LABEL_10;
  v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v13 = v9 & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v14 = (id)qword_2544D6158;
    sub_24A77856C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_24A780450;
    v16 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
    v17 = sub_24A66952C();
    *(_QWORD *)(v15 + 32) = v9;
    *(_QWORD *)(v15 + 40) = v11;
    *(_QWORD *)(v15 + 96) = v16;
    *(_QWORD *)(v15 + 104) = v17;
    *(_QWORD *)(v15 + 64) = v17;
    *(_QWORD *)(v15 + 72) = v6;
    *(_QWORD *)(v15 + 80) = v8;
    v18 = sub_24A77B9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v18;
}

id RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  double v13;
  double v14;
  double v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint8_t *v20;
  double v21;
  void *v22;
  uint64_t v23;
  id result;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_24A77A018();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A779370();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x24BEC5960])
  {
    sub_24A779010();
    v14 = v13;
  }
  else if (v12 == *MEMORY[0x24BEC5958])
  {
    sub_24A778FEC();
    v14 = v15;
  }
  else
  {
    sub_24A779A3C();
    v16 = sub_24A77A00C();
    v17 = sub_24A77BC5C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v32 = v16;
      v19 = v18;
      *(_WORD *)v18 = 0;
      v20 = v19;
      v16 = v32;
      MEMORY[0x24BD1A2B4](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_24A779010();
    v14 = v21;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v22 = (void *)sub_24A779130();
  v23 = FIUIDistanceTypeForActivityType();

  result = objc_msgSend(a2, sel_unitManager);
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, v23);

    v27 = objc_msgSend(a2, sel_localizedStringWithDistanceInMeters_distanceUnit_unitStyle_decimalPrecision_, v26, 2, 2, v14);
    if (v27)
    {
      v28 = sub_24A77B9B0();
      v30 = v29;

      v37 = v28;
      v38 = v30;
      v35 = 32;
      v36 = 0xE100000000000000;
      v33 = 0;
      v34 = 0xE000000000000000;
      sub_24A645928();
      v27 = (id)sub_24A77BE6C();
      swift_bridgeObjectRelease();
    }
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t WorkoutConfiguration.titleForPreview(_:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_24A778FC8();
  if (swift_dynamicCastClass())
  {
    v3 = qword_2544D6160;
    v4 = v1;
    if (v3 != -1)
      swift_once();
    swift_beginAccess();
    v5 = (id)qword_2544D6158;
    sub_24A77856C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_24A780450;
    v7 = (void *)sub_24A779130();
    v8 = objc_msgSend(v7, sel_localizedName, 0xE000000000000000);

    v9 = sub_24A77B9B0();
    v11 = v10;

    v12 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    v13 = sub_24A66952C();
    *(_QWORD *)(v6 + 64) = v13;
    *(_QWORD *)(v6 + 32) = v9;
    *(_QWORD *)(v6 + 40) = v11;
    v14 = (void *)sub_24A778FBC();
    v15 = objc_msgSend(v14, sel_goalTypeIdentifier);

    v16 = _HKWorkoutGoalType.displayName(formattingManager:)(a1, (uint64_t)v15);
    *(_QWORD *)(v6 + 96) = v12;
    *(_QWORD *)(v6 + 104) = v13;
    *(_QWORD *)(v6 + 72) = v16;
    *(_QWORD *)(v6 + 80) = v17;
    v18 = sub_24A77B9C8();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24A779064();
    if (swift_dynamicCastClass())
    {
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v19 = (id)qword_2544D6158;
      sub_24A77856C();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_24A780450;
      v21 = (void *)sub_24A779130();
      v22 = objc_msgSend(v21, sel_localizedName, 0xE000000000000000);

      v23 = sub_24A77B9B0();
      v25 = v24;

      v26 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
      v27 = sub_24A66952C();
      *(_QWORD *)(v20 + 64) = v27;
      *(_QWORD *)(v20 + 32) = v23;
      *(_QWORD *)(v20 + 40) = v25;
      v28 = (id)qword_2544D6158;
      v29 = sub_24A77856C();
      v31 = v30;

      *(_QWORD *)(v20 + 96) = v26;
      *(_QWORD *)(v20 + 104) = v27;
      *(_QWORD *)(v20 + 72) = v29;
      *(_QWORD *)(v20 + 80) = v31;
      v18 = sub_24A77B9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      return WorkoutConfiguration.displayDetail(_:)(a1);
    }
  }
  return v18;
}

BOOL WorkoutConfiguration.displayDetailUseLowercaseSmallCaps.getter()
{
  void *v0;
  _BOOL8 result;
  id v2;
  void *v3;
  id v4;

  sub_24A7790B8();
  result = 0;
  if (!swift_dynamicCastClass())
  {
    sub_24A778FA4();
    if (!swift_dynamicCastClass())
    {
      sub_24A778FC8();
      if (!swift_dynamicCastClass())
        return 1;
      v2 = v0;
      v3 = (void *)sub_24A778FBC();
      v4 = objc_msgSend(v3, sel_goalTypeIdentifier);

      if (v4)
        return 1;
    }
  }
  return result;
}

id static IntervalWorkoutConfiguration.displayColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
}

id static RaceWorkoutConfiguration.displayColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
}

SEL *WorkoutConfiguration.displayColorForCurrentContrastMode.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  void *v8;
  id v9;
  SEL *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  _QWORD v21[2];

  v1 = v0;
  v2 = sub_24A779724();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779190();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x24BEC5CB8])
  {
    if (v6 == *MEMORY[0x24BEC5CD0])
    {
      v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.721568627, 0.588235294, 0.980392157, 1.0);
      v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

      if (v10)
        return v10;
      __break(1u);
    }
    if (v6 == *MEMORY[0x24BEC5CC0])
    {
      v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.521568627, 1.0, 0.835294118, 1.0);
      v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

      if (v10)
        return v10;
      __break(1u);
    }
    if (v6 == *MEMORY[0x24BEC5CC8])
    {
      v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.623529412, 1.0, 0.992156863, 1.0);
      v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

      if (v10)
        return v10;
      __break(1u);
    }
    if (v6 != *MEMORY[0x24BEC5CB0])
      goto LABEL_26;
    v14 = (void *)objc_opt_self();
    v15 = objc_msgSend(v14, sel_keyColors);
    if (v15)
    {
      v16 = v15;
      v1 = objc_msgSend(v15, sel_nonGradientTextColor);

      if (v1)
      {
        v17 = objc_msgSend(v14, sel_keyColors);
        if (v17)
        {
          v18 = v17;
          v19 = objc_msgSend(v17, sel_nonGradientTextColor);

          if (v19)
          {
            v10 = (SEL *)(id)FIUIColorForCurrentContrastMode();

            if (v10)
              return v10;
            goto LABEL_24;
          }
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          while (1)
          {
LABEL_25:
            sub_24A77C01C();
            __break(1u);
LABEL_26:
            v21[0] = 0;
            v21[1] = 0xE000000000000000;
            sub_24A77BF5C();
            swift_bridgeObjectRelease();
            v1 = objc_msgSend(v1, sel_description, 0xD00000000000002ELL, 0x800000024A78B960);
            sub_24A77B9B0();

            sub_24A77BA4C();
            swift_bridgeObjectRelease();
          }
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_24A778FC8();
  if (!swift_dynamicCastClass())
    goto LABEL_25;
  v7 = v0;
  v8 = (void *)sub_24A778FBC();
  v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

  v10 = _HKWorkoutGoalType.colorForCurrentContrastMode.getter((uint64_t)v9);
  return v10;
}

id static IntervalWorkoutConfiguration.highContrastDisplayColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.721568627, 0.588235294, 0.980392157, 1.0);
}

id static RaceWorkoutConfiguration.highContrastDisplayColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.521568627, 1.0, 0.835294118, 1.0);
}

id static PacerWorkoutConfiguration.highContrastDisplayColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.623529412, 1.0, 0.992156863, 1.0);
}

void _s11WorkoutCore010MultiSportA13ConfigurationC0A2UIE12displayColorSo7UIColorCvgZ_0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
  if (!v0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v1 = v0;
  v2 = objc_msgSend(v0, sel_nonGradientTextColor);

  if (!v2)
LABEL_5:
    __break(1u);
}

id WorkoutConfiguration.displayPlatterColor.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_24A779724();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779190();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x24BEC5CB8])
  {
    if (v6 == *MEMORY[0x24BEC5CD0])
    {
      v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
      v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);
    }
    else if (v6 == *MEMORY[0x24BEC5CC0])
    {
      v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
      v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);
    }
    else
    {
      if (v6 != *MEMORY[0x24BEC5CC8])
      {
        if (v6 != *MEMORY[0x24BEC5CB0])
          goto LABEL_19;
        v11 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
        if (v11)
        {
          v12 = v11;
          v1 = objc_msgSend(v11, sel_nonGradientTextColor);

          if (v1)
          {
            v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.16);
            goto LABEL_14;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        while (1)
        {
LABEL_18:
          sub_24A77C01C();
          __break(1u);
LABEL_19:
          v15[0] = 0;
          v15[1] = 0xE000000000000000;
          sub_24A77BF5C();
          swift_bridgeObjectRelease();
          v1 = objc_msgSend(v1, sel_description, 0xD00000000000002ELL, 0x800000024A78B960);
          sub_24A77B9B0();

          sub_24A77BA4C();
          swift_bridgeObjectRelease();
        }
      }
      v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
      v10 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);
    }
LABEL_14:
    v9 = v10;
    goto LABEL_15;
  }
  sub_24A778FC8();
  if (!swift_dynamicCastClass())
    goto LABEL_18;
  v1 = v0;
  v7 = (void *)sub_24A778FBC();
  v8 = objc_msgSend(v7, sel_goalTypeIdentifier);

  v9 = (id)_HKWorkoutGoalType.platterColor.getter((uint64_t)v8);
LABEL_15:
  v13 = v9;

  return v13;
}

id static IntervalWorkoutConfiguration.platterColor.getter()
{
  return sub_24A6A2630((SEL *)&selRef_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157);
}

id static RaceWorkoutConfiguration.platterColor.getter()
{
  return sub_24A6A2630((SEL *)&selRef_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098);
}

id static PacerWorkoutConfiguration.platterColor.getter()
{
  return sub_24A6A2630((SEL *)&selRef_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216);
}

id sub_24A6A2630(SEL *a1, double a2, double a3, double a4)
{
  id v4;
  id v5;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), *a1, a2, a3, a4, 1.0);
  v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.22);

  return v5;
}

void static MultiSportWorkoutConfiguration.platterColor.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_nonGradientTextColor);

    if (v2)
    {
      objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.16);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id WorkoutConfiguration.displayThumbnailColor.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v13[2];

  v1 = v0;
  v2 = sub_24A779724();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779190();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BEC5CB8])
  {
    sub_24A778FC8();
    if (!swift_dynamicCastClass())
    {
      while (1)
      {
        sub_24A77C01C();
        __break(1u);
LABEL_15:
        v13[0] = 0;
        v13[1] = 0xE000000000000000;
        sub_24A77BF5C();
        swift_bridgeObjectRelease();
        v1 = objc_msgSend(v1, sel_description, 0xD00000000000002ELL, 0x800000024A78B960);
        sub_24A77B9B0();

        sub_24A77BA4C();
        swift_bridgeObjectRelease();
      }
    }
    v7 = v0;
    v8 = (void *)sub_24A778FBC();
    v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

    v10 = _HKWorkoutGoalType.gradientStartingColor.getter((uint64_t)v9);
  }
  else
  {
    if (v6 == *MEMORY[0x24BEC5CD0])
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.133333333, 0.0941176471, 0.215686275, 1.0);
    if (v6 == *MEMORY[0x24BEC5CC0])
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    if (v6 == *MEMORY[0x24BEC5CC8])
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0941176471, 0.196078431, 0.2, 1.0);
    if (v6 != *MEMORY[0x24BEC5CB0])
      goto LABEL_15;
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.117647059, 0.160784314, 0.0235294118, 1.0);
  }
  return v10;
}

uint64_t WorkoutConfiguration.displaySymbolName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  _QWORD v12[2];

  v1 = v0;
  v2 = sub_24A779724();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779190();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BEC5CB8])
  {
    sub_24A778FC8();
    if (swift_dynamicCastClass())
    {
      v7 = v0;
      v8 = (void *)sub_24A778FBC();
      v9 = objc_msgSend(v8, sel_goalTypeIdentifier);

      v10 = 0xD000000000000015;
      v1 = (id)0x800000024A78B250;
      switch((unint64_t)v9)
      {
        case 0uLL:
          goto LABEL_13;
        case 1uLL:
          v10 = 0xD00000000000001CLL;
          goto LABEL_13;
        case 2uLL:
          v10 = 0x72656D6974;
          goto LABEL_13;
        case 3uLL:
          v10 = 0x656D616C66;
LABEL_13:

          return v10;
        default:
          goto LABEL_17;
      }
    }
    while (1)
    {
LABEL_17:
      sub_24A77C01C();
      __break(1u);
LABEL_18:
      v12[0] = 0;
      v12[1] = 0xE000000000000000;
      sub_24A77BF5C();
      sub_24A77BA4C();
      v1 = objc_msgSend(v1, sel_description);
      sub_24A77B9B0();

      sub_24A77BA4C();
      swift_bridgeObjectRelease();
    }
  }
  if (v6 == *MEMORY[0x24BEC5CD0])
    return 0x696C632E7473696CLL;
  if (v6 == *MEMORY[0x24BEC5CC0])
    return 0x6574756F72;
  if (v6 == *MEMORY[0x24BEC5CC8])
    return 0xD000000000000022;
  if (v6 != *MEMORY[0x24BEC5CB0])
    goto LABEL_18;
  return 0xD00000000000001ALL;
}

uint64_t static IntervalWorkoutConfiguration.displaySymbolName.getter()
{
  return 0x696C632E7473696CLL;
}

uint64_t static RaceWorkoutConfiguration.displaySymbolName.getter()
{
  return 0x6574756F72;
}

unint64_t static PacerWorkoutConfiguration.displaySymbolName.getter()
{
  return 0xD000000000000022;
}

unint64_t static MultiSportWorkoutConfiguration.displaySymbolName.getter()
{
  return 0xD00000000000001ALL;
}

void WorkoutConfiguration.colors.getter(SEL **a1@<X8>)
{
  void *v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  void *v9;
  id v10;
  SEL *v11;
  SEL *v12;
  SEL *v13;
  SEL *v14;
  uint64_t v15;
  id v16;
  id v17;
  SEL *v18;
  SEL *v19;
  id v20;
  SEL *v21;
  SEL *v22;
  id v23;
  _QWORD v24[2];

  v2 = v1;
  v4 = sub_24A779724();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779190();
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x24BEC5CB8])
  {
    sub_24A778FC8();
    if (swift_dynamicCastClass())
    {
      v2 = v1;
      v9 = (void *)sub_24A778FBC();
      v10 = objc_msgSend(v9, sel_goalTypeIdentifier);

      switch((unint64_t)v10)
      {
        case 0uLL:
          v11 = WorkoutConfiguration.displayColor.getter();
          v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.705882353, 1.0, 0.0, 1.0);
          v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.243137255, 0.862745098, 0.0, 1.0);
          v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(0);
          v15 = 0;
          goto LABEL_15;
        case 1uLL:
          v11 = WorkoutConfiguration.displayColor.getter();
          v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.815686275, 1.0, 1.0);
          v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.666666667, 1.0, 1.0);
          v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(1);
          v15 = 1;
          goto LABEL_15;
        case 2uLL:
          v11 = WorkoutConfiguration.displayColor.getter();
          v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.917647059, 0.0, 1.0);
          v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.764705882, 0.0, 1.0);
          v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(2);
          v15 = 2;
          goto LABEL_15;
        case 3uLL:
          v11 = WorkoutConfiguration.displayColor.getter();
          v12 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.196078431, 0.529411765, 1.0);
          v13 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.882352941, 0.0, 0.0784313725, 1.0);
          v14 = (SEL *)_HKWorkoutGoalType.gradientStartingColor.getter(3);
          v15 = 3;
LABEL_15:
          v22 = (SEL *)_HKWorkoutGoalType.gradientEndingColor.getter(v15);

          *a1 = v11;
          a1[1] = v12;
          a1[2] = v13;
          a1[3] = v14;
          a1[4] = v22;
          return;
        default:
          goto LABEL_18;
      }
    }
    while (1)
    {
LABEL_18:
      sub_24A77C01C();
      __break(1u);
LABEL_19:
      v24[0] = 0;
      v24[1] = 0xE000000000000000;
      sub_24A77BF5C();
      sub_24A77BA4C();
      v23 = objc_msgSend(v2, sel_description);
      v2 = (id)sub_24A77B9B0();

      sub_24A77BA4C();
      swift_bridgeObjectRelease();
    }
  }
  if (v8 == *MEMORY[0x24BEC5CD0])
  {
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.415686275, 0.160784314, 0.952941176, 1.0);
    v18 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
    v19 = (SEL *)objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.2);
    v20 = objc_msgSend(v16, sel_colorWithAlphaComponent_, 0.2);
LABEL_9:
    v21 = (SEL *)v20;
    *a1 = v18;
    a1[1] = (SEL *)v16;
    a1[2] = (SEL *)v17;
    a1[3] = v19;
    a1[4] = v21;
    return;
  }
  if (v8 == *MEMORY[0x24BEC5CC0])
  {
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    v18 = (SEL *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    v19 = (SEL *)objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.2);
    v20 = objc_msgSend(v16, sel_colorWithAlphaComponent_, 0.2);
    goto LABEL_9;
  }
  if (v8 == *MEMORY[0x24BEC5CC8])
  {
    sub_24A779064();
    static PacerWorkoutConfiguration.colors.getter(a1);
  }
  else
  {
    if (v8 != *MEMORY[0x24BEC5CB0])
      goto LABEL_19;
    sub_24A778FA4();
    static MultiSportWorkoutConfiguration.colors.getter(a1);
  }
}

id static IntervalWorkoutConfiguration.colors.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.415686275, 0.160784314, 0.952941176, 1.0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0);
  v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static RaceWorkoutConfiguration.colors.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static PacerWorkoutConfiguration.colors.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.105882353, 0.654901961, 0.607843137, 1.0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
  v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  result = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

void static MultiSportWorkoutConfiguration.colors.getter(_QWORD *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_nonGradientTextColor);

    if (v4)
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.717647059, 1.0, 0.0, 1.0);
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.215686275, 0.980392157, 0.0, 1.0);
      v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0823529412, 0.109803922, 0.00784313725, 1.0);
      v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.145098039, 0.196078431, 0.0666666667, 1.0);
      *a1 = v4;
      a1[1] = v5;
      a1[2] = v6;
      a1[3] = v7;
      a1[4] = v8;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t WorkoutConfiguration.logDisplayName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = sub_24A779724();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEC5CE8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A778854();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77919C();
  sub_24A63C880(&qword_25794A398, v8, MEMORY[0x24BDCEAB8]);
  v21 = sub_24A77C160();
  v22 = v12;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  sub_24A77BA4C();
  sub_24A779190();
  sub_24A63C880(&qword_25794A3A0, v3, MEMORY[0x24BEC5D00]);
  sub_24A77C160();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  sub_24A77BA4C();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_24A6A7DF8;
  *(_QWORD *)(v14 + 24) = v13;
  v19 = (uint64_t)sub_24A6A7E3C;
  v20 = v14;
  v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A3A8);
  sub_24A77B9D4();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  v15 = (void *)sub_24A779130();
  v16 = objc_msgSend(v15, sel_description);
  sub_24A77B9B0();

  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  v17 = v21;
  if (sub_24A779154())
  {
    v19 = 0x6469766F7270202CLL;
    v20 = 0xEB000000003D7265;
    sub_24A779508();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    sub_24A77BA4C();
    swift_release();
    swift_bridgeObjectRelease();
    return v21;
  }
  return v17;
}

uint64_t WorkoutConfiguration.firstActivityType.getter()
{
  void *v0;
  id v1;
  uint64_t result;
  id v3;
  void *v4;
  uint64_t v5;

  sub_24A778FA4();
  if (!swift_dynamicCastClass())
    return sub_24A779130();
  v1 = v0;
  result = sub_24A778F8C();
  if ((result & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x24BD19588](0, result);
    goto LABEL_5;
  }
  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(result + 32);
LABEL_5:
    v4 = v3;
    swift_bridgeObjectRelease();
    v5 = sub_24A779130();

    return v5;
  }
  __break(1u);
  return result;
}

uint64_t WorkoutConfiguration.accessibilityIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  id v6;

  sub_24A778FC8();
  if (swift_dynamicCastClass())
  {
    v1 = v0;
    v2 = (void *)sub_24A778FBC();
    objc_msgSend(v2, sel_goalTypeIdentifier);

    v3 = _sSo18_HKWorkoutGoalTypeV9WorkoutUIE23accessibilityIdentifierSSvg_0();
    return v3;
  }
  sub_24A7790B8();
  if (swift_dynamicCastClass())
  {
    v4 = aCustom;
LABEL_11:
    swift_beginAccess();
    v3 = *(_QWORD *)v4;
    swift_bridgeObjectRetain();
    return v3;
  }
  sub_24A779040();
  if (swift_dynamicCastClass())
  {
    v4 = aRaceRoute;
    goto LABEL_11;
  }
  sub_24A779064();
  if (swift_dynamicCastClass())
  {
    v4 = aPacer;
    goto LABEL_11;
  }
  sub_24A778FA4();
  if (swift_dynamicCastClass())
  {
    v4 = aMultisport;
    goto LABEL_11;
  }
  sub_24A77BF5C();
  sub_24A77BA4C();
  v6 = objc_msgSend(v0, sel_description);
  sub_24A77B9B0();

  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

void WorkoutConfiguration.displayImage.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  sub_24A779040();
  if (swift_dynamicCastClass())
  {
    v1 = v0;
    v2 = sub_24A779034();
    v4 = v3;
    v5 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    v6 = (void *)sub_24A7786BC();
    v7 = objc_msgSend(v5, sel_initWithData_, v6);
    sub_24A6706DC(v2, v4);

    if (v7)
    {
      sub_24A77B3BC();

      return;
    }

  }
  sub_24A778FA4();
  if (swift_dynamicCastClass())
  {
    v8 = (void *)sub_24A779130();
    v9 = (id)FIUIStaticScalableWorkoutIconImageWithPadding();

    if (v9)
    {
      v10 = objc_msgSend(v9, sel_imageWithRenderingMode_, 2);

      sub_24A77B3BC();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    WorkoutConfiguration.displaySymbolName.getter();
    sub_24A77B3EC();
  }
}

uint64_t WorkoutConfiguration.detailDisplayImage.getter()
{
  sub_24A779040();
  if (!swift_dynamicCastClass())
  {
    sub_24A778FA4();
    if (!swift_dynamicCastClass())
      WorkoutConfiguration.displaySymbolName.getter();
  }
  return sub_24A77B3EC();
}

BOOL WorkoutConfiguration.canBeModified.getter()
{
  uint64_t v0;

  v0 = sub_24A779154();
  if (v0)
    swift_release();
  return v0 == 0;
}

uint64_t WorkoutConfiguration.canBeShared.getter()
{
  sub_24A779040();
  if (swift_dynamicCastClass())
    return 0;
  if (sub_24A779154())
  {
    swift_release();
    return 0;
  }
  return 1;
}

uint64_t WorkoutConfiguration.canBeSaved.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;

  sub_24A778FC8();
  if (swift_dynamicCastClass())
  {
    v1 = v0;
    v2 = (void *)sub_24A778FBC();
    v3 = objc_msgSend(v2, sel_goalTypeIdentifier);

    if (!v3)
      return 0;
  }
  result = sub_24A779154();
  if (result)
  {
    swift_release();
    return 1;
  }
  return result;
}

BOOL WorkoutConfiguration.showExternalProviderDescription.getter()
{
  uint64_t v0;

  v0 = sub_24A779154();
  if (v0)
    swift_release();
  return v0 != 0;
}

uint64_t sub_24A6A4198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a3;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487E8);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (uint64_t *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487F0);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946ED0);
  MEMORY[0x24BDAC7A8](v45);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946ED8);
  MEMORY[0x24BDAC7A8](v10);
  v48 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A460);
  MEMORY[0x24BDAC7A8](v51);
  v49 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A450);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  v55 = a2;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v14 = sub_24A77AFD8();
  v16 = v15;
  v18 = v17 & 1;
  sub_24A77B38C();
  v19 = sub_24A77AF48();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release();
  v26 = v23 & 1;
  sub_24A64596C(v14, v16, v18);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v28 = sub_24A77AF6C();
  v29 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v44, 1, 1, v28);
  v30 = swift_getKeyPath();
  v31 = v46;
  sub_24A63CCC0(v29, (uint64_t)v46 + *(int *)(v47 + 28), &qword_2579487F0);
  *v31 = v30;
  sub_24A63CCC0((uint64_t)v31, (uint64_t)&v9[*(int *)(v45 + 36)], &qword_2579487E8);
  *(_QWORD *)v9 = v19;
  *((_QWORD *)v9 + 1) = v21;
  v9[16] = v26;
  *((_QWORD *)v9 + 3) = v25;
  *((_QWORD *)v9 + 4) = KeyPath;
  v9[40] = 0;
  sub_24A6436C4(v19, v21, v26);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A63CD04((uint64_t)v31, &qword_2579487E8);
  sub_24A63CD04(v29, &qword_2579487F0);
  sub_24A64596C(v19, v21, v26);
  swift_release();
  swift_bridgeObjectRelease();
  v32 = sub_24A77B674();
  v33 = v48;
  sub_24A642150(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v48, 0.0, 1, 0.0, 1, v32, v34);
  sub_24A63CD04((uint64_t)v9, &qword_257946ED0);
  v35 = sub_24A77AE94();
  v36 = swift_getKeyPath();
  v37 = v49;
  sub_24A63CCC0(v33, v49, &qword_257946ED8);
  v38 = (uint64_t *)(v37 + *(int *)(v51 + 36));
  *v38 = v36;
  v38[1] = v35;
  sub_24A63CD04(v33, &qword_257946ED8);
  v39 = swift_getKeyPath();
  v40 = v50;
  sub_24A63CCC0(v37, v50, &qword_25794A460);
  v41 = v40 + *(int *)(v52 + 36);
  *(_QWORD *)v41 = v39;
  *(_QWORD *)(v41 + 8) = 0;
  *(_BYTE *)(v41 + 16) = 1;
  sub_24A63CD04(v37, &qword_25794A460);
  sub_24A63CCC0(v40, v53, &qword_25794A450);
  return sub_24A63CD04(v40, &qword_25794A450);
}

uint64_t sub_24A6A45F8()
{
  id v0;
  void *v1;
  unsigned int v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  sub_24A77856C();

  v1 = (void *)sub_24A779130();
  v2 = objc_msgSend(v1, sel_requiresLocationDisambiguation, 0xE000000000000000);

  v3 = (void *)sub_24A779130();
  v4 = v3;
  if (v2)
  {
    v5 = (void *)sub_24A77BD94();

    v6 = objc_msgSend(v5, sel_localizedName);
    v7 = sub_24A77B9B0();
    v47 = v8;

    v9 = (void *)sub_24A779130();
    v10 = (void *)sub_24A77BD94();

    v11 = objc_msgSend(v10, sel_localizedName);
    v12 = sub_24A77B9B0();
    v14 = v13;

    v15 = (id)qword_2544D6158;
    sub_24A77856C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_24A780450;
    v17 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
    v18 = sub_24A66952C();
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v47;
    *(_QWORD *)(v16 + 96) = v17;
    *(_QWORD *)(v16 + 104) = v18;
    *(_QWORD *)(v16 + 64) = v18;
    *(_QWORD *)(v16 + 72) = v12;
    *(_QWORD *)(v16 + 80) = v14;
    v19 = sub_24A77B98C();
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_24A780030;
    *(_QWORD *)(v22 + 56) = v17;
    *(_QWORD *)(v22 + 64) = v18;
    *(_QWORD *)(v22 + 32) = v19;
  }
  else
  {
    v23 = objc_msgSend(v3, sel_requiresSwimmingLocationDisambiguation);

    if (v23)
    {
      v24 = (void *)sub_24A779130();
      v25 = (void *)sub_24A77BD94();

      v26 = objc_msgSend(v25, sel_localizedName);
      v27 = sub_24A77B9B0();
      v29 = v28;

      v30 = (void *)sub_24A779130();
      v31 = (void *)sub_24A77BD94();

      v32 = objc_msgSend(v31, sel_localizedName);
      v33 = sub_24A77B9B0();
      v35 = v34;

      v36 = (id)qword_2544D6158;
      sub_24A77856C();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_24A780450;
      v38 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v37 + 56) = MEMORY[0x24BEE0D00];
      v39 = sub_24A66952C();
      *(_QWORD *)(v37 + 32) = v27;
      *(_QWORD *)(v37 + 40) = v29;
      *(_QWORD *)(v37 + 96) = v38;
      *(_QWORD *)(v37 + 104) = v39;
      *(_QWORD *)(v37 + 64) = v39;
      *(_QWORD *)(v37 + 72) = v33;
      *(_QWORD *)(v37 + 80) = v35;
      v40 = sub_24A77B98C();
      v21 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_24A780030;
      *(_QWORD *)(v22 + 56) = v38;
      *(_QWORD *)(v22 + 64) = v39;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_24A780030;
      v42 = (void *)sub_24A779130();
      v43 = objc_msgSend(v42, sel_localizedName);

      v40 = sub_24A77B9B0();
      v21 = v44;

      *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v22 + 64) = sub_24A66952C();
    }
    *(_QWORD *)(v22 + 32) = v40;
  }
  *(_QWORD *)(v22 + 40) = v21;
  v45 = sub_24A77B98C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t WorkoutConfiguration.saveConfigurationText()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_24A6A45F8();
  sub_24A645928();
  result = sub_24A77AFD8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t WorkoutConfiguration.externalProviderDescriptionHeaderStack()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_24A77AA08();
  *(_QWORD *)(a1 + 8) = 0x4014000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A3B0);
  return sub_24A6A4C30(a1 + *(int *)(v2 + 44));
}

uint64_t sub_24A6A4C30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  id v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v107 = a1;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A400);
  MEMORY[0x24BDAC7A8](v94);
  v95 = (uint64_t)&v90 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A408);
  v3 = *(_QWORD *)(v2 - 8);
  v108 = v2;
  v109 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v90 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_24A778968();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A410);
  MEMORY[0x24BDAC7A8](v102);
  v96 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A418);
  MEMORY[0x24BDAC7A8](v99);
  v101 = (uint64_t)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A420);
  v9 = MEMORY[0x24BDAC7A8](v100);
  v106 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v105 = (char *)&v90 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v91 = (uint64_t)&v90 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v90 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v90 - v21;
  v23 = sub_24A778818();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v98 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v90 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A428);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v104 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v110 = (uint64_t)&v90 - v32;
  sub_24A779160();
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v34 = v33(v22, 1, v23);
  v103 = v24;
  if (v34 == 1)
  {
    sub_24A63CD04((uint64_t)v22, &qword_2579478E8);
    sub_24A77913C();
    if (v33(v20, 1, v23) == 1)
    {
      sub_24A63CD04((uint64_t)v20, &qword_2579478E8);
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A430);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v110, 1, 1, v35);
      v36 = v108;
      v37 = (uint64_t)v104;
      v38 = (uint64_t)v105;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v98, v20, v23);
      sub_24A778950();
      v52 = sub_24A778908();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v6, v93);
      v38 = (uint64_t)v105;
      v97 = v23;
      if ((v52 & 1) != 0)
      {
        v37 = (uint64_t)v104;
        if (qword_2544D6160 != -1)
          swift_once();
        swift_beginAccess();
        v53 = (id)qword_2544D6158;
        v54 = sub_24A77856C();
        v56 = v55;

        v57 = v90;
        sub_24A6A4198(v54, v56, v90);
        swift_bridgeObjectRelease();
        sub_24A63CCC0(v57, v95, &qword_25794A408);
        swift_storeEnumTagMultiPayload();
        sub_24A6A81F4();
        sub_24A6A849C();
        v58 = v96;
        sub_24A77AB28();
        sub_24A63CD04(v57, &qword_25794A408);
        v59 = v97;
        v60 = (uint64_t)v58;
      }
      else
      {
        if (qword_2544D6160 != -1)
          swift_once();
        swift_beginAccess();
        v62 = (id)qword_2544D6158;
        sub_24A77856C();

        v63 = (void *)objc_opt_self();
        v64 = (void *)sub_24A7787AC();
        v65 = objc_msgSend(v63, sel_stringWithDayNameAndShortMonthFromDate_, v64);

        v37 = (uint64_t)v104;
        if (v65)
        {
          v66 = sub_24A77B9B0();
          v68 = v67;

          __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
          v69 = swift_allocObject();
          *(_OWORD *)(v69 + 16) = xmmword_24A780030;
          *(_QWORD *)(v69 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v69 + 64) = sub_24A66952C();
          *(_QWORD *)(v69 + 32) = v66;
          *(_QWORD *)(v69 + 40) = v68;
          v70 = sub_24A77B98C();
          v72 = v71;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v73 = v91;
          sub_24A6A4198(v70, v72, v91);
          v74 = 0;
          v59 = v97;
        }
        else
        {
          v74 = 1;
          v59 = v97;
          v73 = v91;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v73, v74, 1, v108);
        sub_24A63CCC0(v73, v95, &qword_25794A420);
        swift_storeEnumTagMultiPayload();
        sub_24A6A81F4();
        sub_24A6A849C();
        v60 = (uint64_t)v96;
        sub_24A77AB28();
        sub_24A63CD04(v73, &qword_25794A420);
      }
      sub_24A63CCC0(v60, v101, &qword_25794A410);
      swift_storeEnumTagMultiPayload();
      sub_24A6A849C();
      sub_24A6A8500();
      sub_24A77AB28();
      sub_24A63CD04(v60, &qword_25794A410);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v98, v59);
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A430);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v37, 0, 1, v75);
      sub_24A6A856C(v37, v110);
      v36 = v108;
    }
  }
  else
  {
    v39 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v97 = v23;
    v39(v28, v22, v23);
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v40 = (id)qword_2544D6158;
    sub_24A77856C();

    v41 = (void *)objc_opt_self();
    v42 = (void *)sub_24A7787AC();
    v43 = objc_msgSend(v41, sel_stringWithDayNameAndShortMonthFromDate_, v42);

    v36 = v108;
    v37 = (uint64_t)v104;
    if (v43)
    {
      v44 = sub_24A77B9B0();
      v46 = v45;

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_24A780030;
      *(_QWORD *)(v47 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v47 + 64) = sub_24A66952C();
      *(_QWORD *)(v47 + 32) = v44;
      *(_QWORD *)(v47 + 40) = v46;
      v48 = sub_24A77B98C();
      v50 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24A6A4198(v48, v50, (uint64_t)v16);
      v51 = 0;
    }
    else
    {
      v51 = 1;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v16, v51, 1, v36);
    sub_24A63CCC0((uint64_t)v16, v101, &qword_25794A420);
    swift_storeEnumTagMultiPayload();
    sub_24A6A849C();
    sub_24A6A8500();
    sub_24A77AB28();
    sub_24A63CD04((uint64_t)v16, &qword_25794A420);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v28, v97);
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A430);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v37, 0, 1, v61);
    sub_24A6A856C(v37, v110);
    v38 = (uint64_t)v105;
  }
  if (sub_24A779154())
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v76 = (id)qword_2544D6158;
    sub_24A77856C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_24A780030;
    v78 = sub_24A7794E4();
    v80 = v79;
    *(_QWORD *)(v77 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v77 + 64) = sub_24A66952C();
    *(_QWORD *)(v77 + 32) = v78;
    *(_QWORD *)(v77 + 40) = v80;
    v81 = sub_24A77B98C();
    v83 = v82;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A6A4198(v81, v83, v38);
    swift_bridgeObjectRelease();
    swift_release();
    v84 = 0;
  }
  else
  {
    v84 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v38, v84, 1, v36);
  v85 = v110;
  sub_24A63CCC0(v110, v37, &qword_25794A428);
  v86 = v106;
  sub_24A63CCC0(v38, v106, &qword_25794A420);
  v87 = v107;
  sub_24A63CCC0(v37, v107, &qword_25794A428);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A438);
  sub_24A63CCC0(v86, v87 + *(int *)(v88 + 48), &qword_25794A420);
  sub_24A63CD04(v38, &qword_25794A420);
  sub_24A63CD04(v85, &qword_25794A428);
  sub_24A63CD04(v86, &qword_25794A420);
  return sub_24A63CD04(v37, &qword_25794A428);
}

uint64_t WorkoutConfiguration.externalProviderDescriptionHeaderListSection()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A3B8);
  sub_24A6A7E70();
  return sub_24A77B614();
}

uint64_t sub_24A6A59B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A3D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = sub_24A77AA08();
  *((_QWORD *)v4 + 1) = 0x4014000000000000;
  v4[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A3B0);
  sub_24A6A4C30((uint64_t)&v4[*(int *)(v8 + 44)]);
  v12[1] = sub_24A77B35C();
  swift_retain();
  v9 = sub_24A77B554();
  sub_24A63CCC0((uint64_t)v4, (uint64_t)v7, &qword_25794A3E0);
  swift_release();
  *(_QWORD *)&v7[*(int *)(v5 + 36)] = v9;
  sub_24A63CD04((uint64_t)v4, &qword_25794A3E0);
  sub_24A63CCC0((uint64_t)v7, a1, &qword_25794A3D0);
  v10 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A3B8) + 36);
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_BYTE *)(v10 + 32) = 1;
  return sub_24A63CD04((uint64_t)v7, &qword_25794A3D0);
}

id static IntervalWorkoutConfiguration.displayListColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.122, 0.086, 0.196, 1.0);
}

uint64_t static IntervalWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_24A6A7B48((uint64_t *)aCustom);
}

uint64_t static IntervalWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_24A6A7BA8(a1, a2, aCustom, &qword_25794A348);
}

uint64_t (*static IntervalWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t RaceWorkoutConfiguration.displayDateFor(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint8_t *v31;
  uint8_t *v32;
  id v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t result;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  id v52;
  void *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  os_log_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v2 = sub_24A7788D8();
  v73 = *(_QWORD *)(v2 - 8);
  v74 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v71 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EF8);
  MEMORY[0x24BDAC7A8](v4);
  v72 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A3E8);
  MEMORY[0x24BDAC7A8](v6);
  v70 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A77895C();
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v76 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_24A778968();
  v10 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A77A018();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_24A779370();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_24A778818();
  v82 = *(_QWORD *)(v21 - 8);
  v83 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v75 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v68 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v26 == *MEMORY[0x24BEC5960])
  {
    sub_24A779004();
    v27 = v25;
  }
  else
  {
    v79 = v25;
    if (v26 == *MEMORY[0x24BEC5958])
    {
      v27 = v79;
      sub_24A778FE0();
    }
    else
    {
      sub_24A779A3C();
      v28 = sub_24A77A00C();
      v29 = sub_24A77BC5C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v69 = v28;
        v31 = v30;
        *(_WORD *)v30 = 0;
        v32 = v31;
        v28 = v69;
        MEMORY[0x24BD1A2B4](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      v27 = v79;
      sub_24A779004();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  sub_24A778950();
  v34 = sub_24A778908();
  v35 = *(void (**)(char *, uint64_t))(v10 + 8);
  v36 = v81;
  v35(v12, v81);
  v37 = v82;
  if ((v34 & 1) != 0 || (sub_24A778950(), v38 = sub_24A778920(), v35(v12, v36), (v38 & 1) != 0))
  {
    objc_msgSend(v33, sel_setDateStyle_, 2);
    objc_msgSend(v33, sel_setTimeStyle_, 0);
    objc_msgSend(v33, sel_setDoesRelativeDateFormatting_, 1);
    v39 = v83;
LABEL_11:
    v40 = (void *)sub_24A7787AC();
    v41 = objc_msgSend(v33, sel_stringFromDate_, v40);

    v42 = sub_24A77B9B0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v39);
    return v42;
  }
  v80 = v33;
  sub_24A778950();
  v44 = v75;
  sub_24A7787F4();
  v46 = v77;
  v45 = v78;
  v47 = v27;
  v48 = v37;
  v49 = v76;
  (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v76, *MEMORY[0x24BDCF1E8], v78);
  v79 = v47;
  LOBYTE(v47) = sub_24A778944();
  v50 = v49;
  v37 = v48;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v50, v45);
  v39 = v83;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v83);
  v35(v12, v36);
  if ((v47 & 1) != 0)
  {
    v51 = (void *)sub_24A77B980();
    v33 = v80;
    objc_msgSend(v80, sel_setDateFormat_, v51);

    v27 = v79;
    goto LABEL_11;
  }
  v33 = v80;
  v52 = objc_msgSend(v80, sel_locale);
  if (v52)
  {
    v53 = v52;
    v54 = v71;
    sub_24A778878();

    v55 = v72;
    v56 = v73;
    v57 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v54, v74);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v55, 0, 1, v57);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48))(v55, 1, v57);
    v27 = v79;
    if ((_DWORD)result != 1)
    {
      v58 = v70;
      sub_24A77889C();
      v59 = v57;
      v60 = (uint64_t)v58;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v59);
      v61 = sub_24A778890();
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
      {
        sub_24A63CD04(v60, &qword_25794A3E8);
      }
      else
      {
        v63 = sub_24A778884();
        v64 = v60;
        v66 = v65;
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v64, v61);
        if (v63 == 20035 && v66 == 0xE200000000000000
          || (sub_24A77C184() & 1) != 0
          || v63 == 22356 && v66 == 0xE200000000000000
          || (sub_24A77C184() & 1) != 0
          || v63 == 19272 && v66 == 0xE200000000000000
          || (sub_24A77C184() & 1) != 0
          || v63 == 20054 && v66 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_24A77C184();
          swift_bridgeObjectRelease();
        }
      }
      v67 = (void *)sub_24A77B980();
      objc_msgSend(v33, sel_setLocalizedDateFormatFromTemplate_, v67);

      goto LABEL_11;
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v72, 1, 1, v74);
  }
  __break(1u);
  return result;
}

id RaceWorkoutConfiguration.configurationViewTitle(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  _QWORD v15[2];

  v2 = sub_24A779370();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779028();
  v8 = v7;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEC5960], v2);
  v9 = RaceWorkoutConfiguration.displayDistanceFor(_:formatter:)((uint64_t)v5, a1);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v6 && v8 == 0xE000000000000000
    || (sub_24A77C184() & 1) != 0
    || (!v9 ? (v12 = v11 == 0xE000000000000000) : (v12 = 0), v12 || (sub_24A77C184() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (v9)
      v13 = 0;
    else
      v13 = v11 == 0xE000000000000000;
    if (v13 || (sub_24A77C184() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    v15[0] = v9;
    v15[1] = v11;
    sub_24A77BA4C();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    return (id)v15[0];
  }
  return v9;
}

uint64_t RaceWorkoutConfiguration.displayDurationFor(_:formatter:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  double v13;
  double v14;
  double v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint8_t *v20;
  double v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v4 = sub_24A77A018();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A779370();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x24BEC5960])
  {
    sub_24A77901C();
    v14 = v13;
  }
  else if (v12 == *MEMORY[0x24BEC5958])
  {
    sub_24A778FF8();
    v14 = v15;
  }
  else
  {
    sub_24A779A3C();
    v16 = sub_24A77A00C();
    v17 = sub_24A77BC5C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v27 = a2;
      v19 = v18;
      *(_WORD *)v18 = 0;
      v20 = v19;
      a2 = v27;
      MEMORY[0x24BD1A2B4](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_24A77901C();
    v14 = v21;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v22 = objc_msgSend(a2, sel_stringWithDuration_durationFormat_, 2, v14);
  if (!v22)
    return 0;
  v23 = v22;
  v24 = sub_24A77B9B0();

  return v24;
}

uint64_t RaceWorkoutConfiguration.displayPaceValueFor(_:formatter:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint8_t *v23;
  double v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v36;
  void *v37;

  v4 = sub_24A77A018();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A779370();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x24BEC5960])
  {
    sub_24A779010();
    v14 = v13;
    sub_24A77901C();
    v16 = v15;
  }
  else if (v12 == *MEMORY[0x24BEC5958])
  {
    sub_24A778FEC();
    v14 = v17;
    sub_24A778FF8();
    v16 = v18;
  }
  else
  {
    sub_24A779A3C();
    v19 = sub_24A77A00C();
    v20 = sub_24A77BC5C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v37 = a2;
      v22 = v21;
      *(_WORD *)v21 = 0;
      v23 = v22;
      a2 = v37;
      MEMORY[0x24BD1A2B4](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_24A779010();
    v14 = v24;
    sub_24A77901C();
    v16 = v25;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v26 = objc_msgSend((id)objc_opt_self(), sel_meterUnit);
  v27 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v26, v14);

  v28 = (void *)sub_24A779130();
  v29 = FIUIPaceFormatForWorkoutActivityType();

  v30 = (void *)sub_24A779130();
  v31 = FIUIDistanceTypeForActivityType();

  v32 = objc_msgSend(a2, sel_localizedPaceStringWithDistance_overDuration_paceFormat_distanceType_, v27, v29, v31, v16);
  if (v32)
  {
    v33 = v32;
    v34 = sub_24A77B9B0();

  }
  else
  {

    return 0;
  }
  return v34;
}

id RaceWorkoutConfiguration.displayPaceUnitWith(_:)(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id result;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = (void *)sub_24A779130();
  v3 = FIUIPaceFormatForWorkoutActivityType();

  v4 = (void *)sub_24A779130();
  v5 = FIUIDistanceTypeForActivityType();

  result = objc_msgSend(a1, sel_unitManager);
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, v5);

    if (v3 == 4)
    {
      v9 = objc_msgSend(a1, sel_localizedSpeedUnitStringForDistanceUnit_unitStyle_, v8, 1);
      if (v9)
      {
        v10 = v9;
        v11 = sub_24A77B9B0();

      }
      else
      {
        return 0;
      }
    }
    else
    {
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v12 = (id)qword_2544D6158;
      v13 = 0xE000000000000000;
      sub_24A77856C();

      v14 = objc_msgSend(a1, sel_localizedShortUnitStringForDistanceUnit_, v8, 0xE000000000000000);
      if (v14)
      {
        v15 = v14;
        v16 = sub_24A77B9B0();
        v13 = v17;

      }
      else
      {
        v16 = 0;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_24A780030;
      *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v18 + 64) = sub_24A66952C();
      *(_QWORD *)(v18 + 32) = v16;
      *(_QWORD *)(v18 + 40) = v13;
      v11 = sub_24A77B9C8();
      swift_bridgeObjectRelease();
    }
    return (id)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static RaceWorkoutConfiguration.behindGhostColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
}

id static RaceWorkoutConfiguration.expiredColors.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.654901961, 0.654901961, 0.654901961, 1.0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.133333333, 0.133333333, 0.133333333, 1.0);
  v4 = v2;
  v5 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);
  result = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.2);
  *a1 = v4;
  a1[1] = v4;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = result;
  return result;
}

id static RaceWorkoutConfiguration.raceCompleteColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.6, 0.6, 0.6, 1.0);
}

id static RaceWorkoutConfiguration.raceGhostColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0);
}

id RaceWorkoutConfiguration.colorsFor(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id result;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;

  v4 = sub_24A779754();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x24BEC5D58])
  {
LABEL_2:
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.654901961, 0.654901961, 0.654901961, 1.0);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.133333333, 0.133333333, 0.133333333, 1.0);
    v11 = v9;
    v12 = objc_msgSend(v10, sel_colorWithAlphaComponent_, 0.2);
    result = objc_msgSend(v11, sel_colorWithAlphaComponent_, 0.2);
    *a2 = v11;
    a2[1] = v11;
    a2[2] = v10;
    a2[3] = v12;
LABEL_8:
    a2[4] = result;
    return result;
  }
  if (v8 == *MEMORY[0x24BEC5D50])
  {
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    v17 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.2);
    v18 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.2);
LABEL_7:
    result = v18;
    *a2 = v16;
    a2[1] = v14;
    a2[2] = v15;
    a2[3] = v17;
    goto LABEL_8;
  }
  if (v8 == *MEMORY[0x24BEC5D60])
  {
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
    v17 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.2);
    v18 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.2);
    goto LABEL_7;
  }
  if (v8 == *MEMORY[0x24BEC5D70] || v8 == *MEMORY[0x24BEC5D68])
    goto LABEL_2;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v23 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.2);
  v24 = objc_msgSend(v20, sel_colorWithAlphaComponent_, 0.2);
  *a2 = v22;
  a2[1] = v20;
  a2[2] = v21;
  a2[3] = v23;
  a2[4] = v24;
  return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RaceWorkoutConfiguration.colorsFor(_:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_24A779754();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7793F4();
  RaceWorkoutConfiguration.colorsFor(_:)((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id static RaceWorkoutConfiguration.routeBackgroundColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0196078431, 0.619607843, 0.560784314, 1.0);
}

id _s11WorkoutCore04RaceA13ConfigurationC0A2UIE19routeHighlightColorSo7UIColorCvgZ_0()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
}

id static RaceWorkoutConfiguration.metricStoppedUpdatingColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.564705882, 0.564705882, 0.564705882, 1.0);
}

uint64_t static RaceWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_24A6A7B48((uint64_t *)aRaceRoute);
}

uint64_t static RaceWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_24A6A7BA8(a1, a2, aRaceRoute, &aRaceRoute[1]);
}

uint64_t (*static RaceWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id PacerWorkoutConfiguration.localizedPaceString(formatter:)(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  id result;
  void *v14;
  id v15;
  id v16;
  void *v17;

  v2 = (void *)sub_24A779130();
  v3 = FIUIPaceFormatForWorkoutActivityType();

  v4 = (void *)sub_24A779130();
  v5 = FIUIDistanceTypeForActivityType();

  v6 = (void *)sub_24A77904C();
  v7 = objc_msgSend(v6, sel_value);

  v8 = (void *)sub_24A779058();
  objc_msgSend(v8, sel_doubleValue);
  v10 = v9;

  v11 = objc_msgSend(a1, sel_localizedPaceStringWithDistance_overDuration_paceFormat_distanceType_, v7, v3, v5, v10);
  if (!v11)
    return 0;
  v12 = sub_24A77B9B0();

  if (v3 != 4)
    return (id)v12;
  result = objc_msgSend(a1, sel_unitManager);
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, sel_paceDistanceUnitForDistanceType_, v5);

    v16 = objc_msgSend(a1, sel_localizedSpeedUnitStringForDistanceUnit_unitStyle_, v15, 1);
    if (v16)
    {
      v17 = v16;
      sub_24A77B9B0();

      sub_24A77BA4C();
      swift_bridgeObjectRelease();
      return (id)v12;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

id PacerWorkoutConfiguration.pickerPaceDescriptionString(formatter:)(void *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v2 = (void *)sub_24A779130();
  v3 = FIUIPaceFormatForWorkoutActivityType();

  if (v3 == 4)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v4 = (id)qword_2544D6158;
    sub_24A77856C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_24A780030;
    v6 = PacerWorkoutConfiguration.localizedPaceString(formatter:)(a1);
    v8 = v7;
    *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v5 + 64) = sub_24A66952C();
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v8;
    sub_24A77B9C8();
    swift_bridgeObjectRelease();
    sub_24A645928();
    v9 = sub_24A77BE54();
    swift_bridgeObjectRelease();
    return (id)v9;
  }
  result = objc_msgSend(a1, sel_unitManager);
  if (result)
  {
    v11 = result;
    v12 = (void *)sub_24A779130();
    v13 = objc_msgSend(v11, sel_userDistanceHKUnitForActivityType_, v12);

    v14 = (void *)sub_24A779130();
    v15 = FIUIDistanceTypeForActivityType();

    result = objc_msgSend(a1, sel_localizedPaceUnitStringWithDistanceType_distanceUnit_, v15, MEMORY[0x24BD19A74](v13));
    if (result)
    {
      v16 = result;
      v17 = sub_24A77B9B0();
      v19 = v18;

      v20 = PacerWorkoutConfiguration.localizedPaceString(formatter:)(a1);
      v22 = v21;
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v23 = (id)qword_2544D6158;
      sub_24A77856C();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_24A780450;
      v25 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
      v26 = sub_24A66952C();
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v22;
      *(_QWORD *)(v24 + 96) = v25;
      *(_QWORD *)(v24 + 104) = v26;
      *(_QWORD *)(v24 + 64) = v26;
      *(_QWORD *)(v24 + 72) = v17;
      *(_QWORD *)(v24 + 80) = v19;
      sub_24A77B9C8();
      swift_bridgeObjectRelease();
      sub_24A645928();
      v9 = sub_24A77BE54();
      swift_bridgeObjectRelease();

      return (id)v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static PacerWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_24A6A7B48((uint64_t *)aPacer);
}

uint64_t static PacerWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_24A6A7BA8(a1, a2, aPacer, &qword_25794A368);
}

uint64_t (*static PacerWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id static MultiSportWorkoutConfiguration.displayListColor.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.09, 0.141, 0.0, 1.0);
}

id sub_24A6A79D4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.216, 0.302, 0.0, 1.0);
  qword_25794A370 = (uint64_t)result;
  return result;
}

id static MultiSportWorkoutConfiguration.primaryPlatterColor.getter()
{
  return sub_24A6A7B00(&qword_257946870, (id *)&qword_25794A370);
}

id sub_24A6A7A38()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.149, 0.212, 0.0, 1.0);
  qword_25794A378 = (uint64_t)result;
  return result;
}

id static MultiSportWorkoutConfiguration.secondaryPlatterColor.getter()
{
  return sub_24A6A7B00(&qword_257946878, (id *)&qword_25794A378);
}

id sub_24A6A7A9C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.106, 0.149, 0.0, 1.0);
  qword_25794A380 = (uint64_t)result;
  return result;
}

id static MultiSportWorkoutConfiguration.tertiaryPlatterColor.getter()
{
  return sub_24A6A7B00(&qword_257946880, (id *)&qword_25794A380);
}

id sub_24A6A7B00(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t static MultiSportWorkoutConfiguration.accessibilityIdentifier.getter()
{
  return sub_24A6A7B48((uint64_t *)aMultisport);
}

uint64_t sub_24A6A7B48(uint64_t *a1)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static MultiSportWorkoutConfiguration.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_24A6A7BA8(a1, a2, aMultisport, &aMultisport[1]);
}

uint64_t sub_24A6A7BA8(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  swift_beginAccess();
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MultiSportWorkoutConfiguration.accessibilityIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id _s11WorkoutCore04RaceA13ConfigurationC0A2UIE19performanceColorForySo7UIColorCSdFZ_0(double a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v2 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  if (a1 >= 0.0)
  {
    v3 = objc_msgSend(v2, sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  }
  else
  {
    v3 = objc_msgSend(v2, sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  }
  v6 = v5;
  v7 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.2);

  return v6;
}

uint64_t sub_24A6A7DD4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24A6A7DF8(void *a1)
{
  return WorkoutConfiguration.displayName(formattingManager:)(a1);
}

uint64_t sub_24A6A7E18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6A7E3C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_24A6A7E68@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6A59B8(a1);
}

unint64_t sub_24A6A7E70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A3C0;
  if (!qword_25794A3C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A3B8);
    v2[0] = sub_24A6A7EF4();
    v2[1] = sub_24A63CFF0(&qword_257946E40, &qword_257946E48, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A3C0);
  }
  return result;
}

unint64_t sub_24A6A7EF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A3C8;
  if (!qword_25794A3C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A3D0);
    v2[0] = sub_24A63CFF0(&qword_25794A3D8, &qword_25794A3E0, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A63CFF0(&qword_2579487B0, &qword_2579487B8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A3C8);
  }
  return result;
}

id _s11WorkoutCore04RaceA13ConfigurationC0A2UIE18pointOuterColorForySo7UIColorCAA0C8PositionOFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  double *v6;
  int v7;
  double v8;
  id v9;
  id v10;
  id v11;
  id v13;
  uint64_t v14;

  v2 = sub_24A779400();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (double *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(double *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BEC5A28])
  {
    (*(void (**)(double *, uint64_t))(v3 + 96))(v6, v2);
    v8 = *v6;
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.662745098, 1.0, 0.882352941, 1.0);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 1.0, 0.721568627, 0.682352941, 1.0);
    v11 = v10;
    if (v8 >= 0.0)
    {

    }
    else
    {

      return v11;
    }
    return v9;
  }
  if (v7 == *MEMORY[0x24BEC5A38])
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.835294118, 0.835294118, 0.835294118, 1.0);
  v13 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  (*(void (**)(double *, uint64_t))(v3 + 8))(v6, v2);
  return v13;
}

uint64_t sub_24A6A8148()
{
  return MEMORY[0x24BDF1F80];
}

uint64_t sub_24A6A8154()
{
  return sub_24A63CFF0(&qword_25794A3D8, &qword_25794A3E0, MEMORY[0x24BDF4700]);
}

unint64_t sub_24A6A8184()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[3];

  result = qword_25794A3F0;
  if (!qword_25794A3F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A3F8);
    v2 = sub_24A6A7E70();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794A3F0);
  }
  return result;
}

unint64_t sub_24A6A81F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A440;
  if (!qword_25794A440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A408);
    v2[0] = sub_24A6A8260();
    v2[1] = sub_24A6A8458();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A440);
  }
  return result;
}

unint64_t sub_24A6A8260()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A448;
  if (!qword_25794A448)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A450);
    v2[0] = sub_24A6A82E4();
    v2[1] = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A448);
  }
  return result;
}

unint64_t sub_24A6A82E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A458;
  if (!qword_25794A458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A460);
    v2[0] = sub_24A6A8368();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A458);
  }
  return result;
}

unint64_t sub_24A6A8368()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A468;
  if (!qword_25794A468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946ED8);
    v2[0] = sub_24A6A83D4();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A468);
  }
  return result;
}

unint64_t sub_24A6A83D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A470;
  if (!qword_25794A470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946ED0);
    v2[0] = sub_24A670190();
    v2[1] = sub_24A63CFF0(&qword_25794A478, &qword_2579487E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A470);
  }
  return result;
}

unint64_t sub_24A6A8458()
{
  unint64_t result;

  result = qword_25794A480;
  if (!qword_25794A480)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A787E84, &type metadata for BodyHyphenation);
    atomic_store(result, (unint64_t *)&qword_25794A480);
  }
  return result;
}

unint64_t sub_24A6A849C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794A488;
  if (!qword_25794A488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A420);
    v2 = sub_24A6A81F4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794A488);
  }
  return result;
}

unint64_t sub_24A6A8500()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A490;
  if (!qword_25794A490)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A410);
    v2[0] = sub_24A6A81F4();
    v2[1] = sub_24A6A849C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A490);
  }
  return result;
}

uint64_t sub_24A6A856C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_24A6A85D8(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *View;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, int *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t, int *);
  uint64_t v33;
  void (*v35)(char *, char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A778818();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v36(a1, a2, v7);
    View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    v9 = View[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_24A77B80C();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v35(v10, v11, v12);
    v13 = View[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *(_QWORD *)&a1[View[7]] = *(_QWORD *)&a2[View[7]];
    v16 = View[8];
    v17 = &a1[v16];
    v18 = &a2[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = a3[5];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)View - 1);
    v23 = *(unsigned int (**)(char *, uint64_t, int *))(v22 + 48);
    swift_retain();
    if (v23(v21, 1, View))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v36(v20, v21, v7);
      v35(&v20[View[5]], &v21[View[5]], v12);
      v26 = View[6];
      v27 = &v20[v26];
      v28 = &v21[v26];
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      *(_QWORD *)&v20[View[7]] = *(_QWORD *)&v21[View[7]];
      v29 = View[8];
      v30 = &v20[v29];
      v31 = &v21[v29];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v30[8] = v31[8];
      v32 = *(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56);
      swift_retain();
      v32(v20, 0, 1, View);
    }
    v33 = a3[7];
    *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
    *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];
    a1[a3[8]] = a2[a3[8]];
  }
  return a1;
}

uint64_t sub_24A6A87FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t View;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t result;

  v4 = sub_24A778818();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v7 = a1 + *(int *)(View + 20);
  v8 = sub_24A77B80C();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_release();
  v10 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 48))(v10, 1, View);
  if (!(_DWORD)result)
  {
    v5(v10, v4);
    v9(v10 + *(int *)(View + 20), v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_24A6A88F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *View;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, int *);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, _QWORD, uint64_t, int *);
  uint64_t v31;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t, uint64_t);

  v6 = sub_24A778818();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v34(a1, a2, v6);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v8 = View[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_24A77B80C();
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v33(v9, v10, v11);
  v12 = View[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + View[7]) = *(_QWORD *)(a2 + View[7]);
  v15 = View[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a3[5];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = *((_QWORD *)View - 1);
  v22 = *(unsigned int (**)(char *, uint64_t, int *))(v21 + 48);
  swift_retain();
  if (v22(v20, 1, View))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v34((uint64_t)v19, (uint64_t)v20, v6);
    v33((uint64_t)&v19[View[5]], (uint64_t)&v20[View[5]], v11);
    v24 = View[6];
    v25 = &v19[v24];
    v26 = &v20[v24];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    *(_QWORD *)&v19[View[7]] = *(_QWORD *)&v20[View[7]];
    v27 = View[8];
    v28 = &v19[v27];
    v29 = &v20[v27];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v30 = *(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56);
    swift_retain();
    v30(v19, 0, 1, View);
  }
  v31 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_24A6A8AEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *View;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, int *);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char v35;
  void (*v36)(char *, _QWORD, uint64_t, int *);
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  int *v51;

  v6 = sub_24A778818();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  v50 = *(void (**)(uint64_t, uint64_t))(v48 + 24);
  v50(a1, a2);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v8 = View[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_24A77B80C();
  v47 = *(_QWORD *)(v11 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 24);
  v12(v9, v10, v11);
  v13 = View[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  *(_QWORD *)(a1 + View[7]) = *(_QWORD *)(a2 + View[7]);
  swift_retain();
  swift_release();
  v17 = View[8];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  *(_BYTE *)(v18 + 8) = *((_BYTE *)v19 + 8);
  *(_QWORD *)v18 = v20;
  v51 = a3;
  v21 = a3[5];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = *((_QWORD *)View - 1);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  v26 = v25(a1 + v21, 1, View);
  v27 = v25((uint64_t)v23, 1, View);
  if (!v26)
  {
    if (!v27)
    {
      ((void (*)(char *, char *, uint64_t))v50)(v22, v23, v49);
      v12((uint64_t)&v22[View[5]], (uint64_t)&v23[View[5]], v11);
      v39 = View[6];
      v40 = &v22[v39];
      v41 = &v23[v39];
      v42 = v41[8];
      *(_QWORD *)v40 = *(_QWORD *)v41;
      v40[8] = v42;
      *(_QWORD *)&v22[View[7]] = *(_QWORD *)&v23[View[7]];
      swift_retain();
      swift_release();
      v43 = View[8];
      v44 = &v22[v43];
      v45 = &v23[v43];
      v46 = *(_QWORD *)v45;
      v44[8] = v45[8];
      *(_QWORD *)v44 = v46;
      goto LABEL_7;
    }
    sub_24A678780((uint64_t)v22);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v22, v23, v49);
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v22[View[5]], &v23[View[5]], v11);
  v28 = View[6];
  v29 = &v22[v28];
  v30 = &v23[v28];
  v31 = v30[8];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v31;
  *(_QWORD *)&v22[View[7]] = *(_QWORD *)&v23[View[7]];
  v32 = View[8];
  v33 = &v22[v32];
  v34 = &v23[v32];
  v35 = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v35;
  v36 = *(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56);
  swift_retain();
  v36(v22, 0, 1, View);
LABEL_7:
  *(_QWORD *)(a1 + v51[6]) = *(_QWORD *)(a2 + v51[6]);
  *(_QWORD *)(a1 + v51[7]) = *(_QWORD *)(a2 + v51[7]);
  *(_BYTE *)(a1 + v51[8]) = *(_BYTE *)(a2 + v51[8]);
  return a1;
}

uint64_t sub_24A6A8DA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *View;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t, uint64_t);

  v6 = sub_24A778818();
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v32(a1, a2, v6);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v8 = View[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_24A77B80C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v13 = View[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)(a1 + View[7]) = *(_QWORD *)(a2 + View[7]);
  v16 = View[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[5];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = *((_QWORD *)View - 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v22 + 48))(a2 + v19, 1, View))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v32((uint64_t)v20, (uint64_t)v21, v6);
    v12((uint64_t)&v20[View[5]], (uint64_t)&v21[View[5]], v11);
    v24 = View[6];
    v25 = &v20[v24];
    v26 = &v21[v24];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    *(_QWORD *)&v20[View[7]] = *(_QWORD *)&v21[View[7]];
    v27 = View[8];
    v28 = &v20[v27];
    v29 = &v21[v27];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v20, 0, 1, View);
  }
  v30 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_24A6A8F8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *View;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  int *v45;

  v6 = sub_24A778818();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  v44 = *(void (**)(uint64_t, uint64_t))(v42 + 40);
  v44(a1, a2);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v8 = View[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_24A77B80C();
  v41 = *(_QWORD *)(v11 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40);
  v12(v9, v10, v11);
  v13 = View[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)(a1 + View[7]) = *(_QWORD *)(a2 + View[7]);
  swift_release();
  v16 = View[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v45 = a3;
  v19 = a3[5];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = *((_QWORD *)View - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(a1 + v19, 1, View);
  v25 = v23((uint64_t)v21, 1, View);
  if (!v24)
  {
    if (!v25)
    {
      ((void (*)(char *, char *, uint64_t))v44)(v20, v21, v43);
      v12((uint64_t)&v20[View[5]], (uint64_t)&v21[View[5]], v11);
      v35 = View[6];
      v36 = &v20[v35];
      v37 = &v21[v35];
      *(_QWORD *)v36 = *(_QWORD *)v37;
      v36[8] = v37[8];
      *(_QWORD *)&v20[View[7]] = *(_QWORD *)&v21[View[7]];
      swift_release();
      v38 = View[8];
      v39 = &v20[v38];
      v40 = &v21[v38];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v39[8] = v40[8];
      goto LABEL_7;
    }
    sub_24A678780((uint64_t)v20);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v20, v21, v43);
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v20[View[5]], &v21[View[5]], v11);
  v26 = View[6];
  v27 = &v20[v26];
  v28 = &v21[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  *(_QWORD *)&v20[View[7]] = *(_QWORD *)&v21[View[7]];
  v29 = View[8];
  v30 = &v20[v29];
  v31 = &v21[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v20, 0, 1, View);
LABEL_7:
  v33 = v45[7];
  *(_QWORD *)(a1 + v45[6]) = *(_QWORD *)(a2 + v45[6]);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  *(_BYTE *)(a1 + v45[8]) = *(_BYTE *)(a2 + v45[8]);
  return a1;
}

uint64_t sub_24A6A922C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6A9238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t View;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v7 = *(_QWORD *)(View - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = View;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_24A6A92F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6A9300(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t View;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v9 = *(_QWORD *)(View - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = View;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for TrainingLoadBaselineMarks()
{
  uint64_t result;

  result = qword_25794A4F0;
  if (!qword_25794A4F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A6A93E4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for TrainingLoadViewModel.ChartPoint(319);
  if (v0 <= 0x3F)
  {
    sub_24A6A9480();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_24A6A9480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25794A500)
  {
    type metadata accessor for TrainingLoadViewModel.ChartPoint(255);
    v0 = sub_24A77BDE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25794A500);
  }
}

uint64_t sub_24A6A94D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6A94E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54[6];

  v44 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A568);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A578);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_24A77A2D0();
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A560);
  v49 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A558);
  v32 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v45 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A550);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v36 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A548);
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A9C0();
  sub_24A778818();
  v43 = a1;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v54[0] = a3;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v45;
  v19 = v46;
  sub_24A77A2C4();
  sub_24A77A408();
  v20 = MEMORY[0x24BDB8230];
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)v54);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v10);
  v50 = v10;
  v51 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_24A77A0A8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v19);
  result = sub_24A77A9C0();
  if (qword_257946888 != -1)
    result = swift_once();
  if (*(_QWORD *)(qword_2579598D8 + 16))
  {
    v23 = *(_QWORD *)(qword_2579598D8 + 40);
    v50 = *(_QWORD *)(qword_2579598D8 + 32);
    v51 = v23;
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x24BEE0D00];
    v25 = MEMORY[0x24BDB84A8];
    v26 = v40;
    sub_24A77A174();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = v19;
    v51 = OpaqueTypeConformance2;
    v27 = swift_getOpaqueTypeConformance2();
    v28 = v36;
    v29 = v37;
    sub_24A77A090();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v42);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v29);
    type metadata accessor for TrainingLoadBaselineMarks();
    v50 = v29;
    v51 = v24;
    v52 = v27;
    v53 = v25;
    swift_getOpaqueTypeConformance2();
    v30 = v33;
    v31 = v39;
    sub_24A77A0E4();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v31);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v44, v30, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A6A9AC4()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A580);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A780030;
  *(_QWORD *)(v0 + 32) = 0x656E696C65736162;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  sub_24A77B368();
  result = sub_24A77A4BC();
  *(_QWORD *)(v0 + 48) = result;
  qword_2579598D8 = v0;
  return result;
}

uint64_t sub_24A6A9B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t View;
  uint64_t v4;
  uint64_t v6;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  if ((*(_BYTE *)(v1 + *(int *)(View + 32) + 8) & 1) != 0)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A540);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  else
  {
    MEMORY[0x24BDAC7A8](View);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794A548);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A550);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A558);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A560);
    sub_24A77A2D0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_24A77A210();
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A540);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
}

uint64_t sub_24A6A9D28()
{
  return sub_24A77A048();
}

uint64_t sub_24A6A9D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6A94E4(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t sub_24A6A9D4C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24A6A9D78()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794A588;
  if (!qword_25794A588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A590);
    v2 = sub_24A6A9DDC();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB84F0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794A588);
  }
  return result;
}

unint64_t sub_24A6A9DDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794A598;
  if (!qword_25794A598)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A540);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8118], v1);
    atomic_store(result, (unint64_t *)&qword_25794A598);
  }
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.base.getter()
{
  return 0x74756F6B726F57;
}

uint64_t sub_24A6A9E40(uint64_t a1)
{
  return sub_24A6AA6FC(a1, &qword_25794A5A0, 0x800000024A78BFB0, algn_25794A5A8);
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.base.getter()
{
  return sub_24A6AB328(&qword_257946890, &qword_25794A5A0);
}

uint64_t sub_24A6A9E80()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A5B0 = v1;
  *(_QWORD *)algn_25794A5B8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.tvConnectButton.getter()
{
  return sub_24A6AB328(&qword_257946898, &qword_25794A5B0);
}

uint64_t sub_24A6A9F28()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A5C0 = v1;
  *(_QWORD *)algn_25794A5C8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.predictedActivity.getter()
{
  return sub_24A6AB328(&qword_2579468A0, &qword_25794A5C0);
}

uint64_t sub_24A6A9FD4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A5D0 = v1;
  *(_QWORD *)algn_25794A5D8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.guided.getter()
{
  return sub_24A6AB328(&qword_2579468A8, &qword_25794A5D0);
}

uint64_t sub_24A6AA07C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A5E0 = v1;
  *(_QWORD *)algn_25794A5E8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.guidedWalk.getter()
{
  return sub_24A6AB328(&qword_2579468B0, &qword_25794A5E0);
}

uint64_t sub_24A6AA12C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A5F0 = v1;
  *(_QWORD *)algn_25794A5F8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.guidedRun.getter()
{
  return sub_24A6AB328(&qword_2579468B8, &qword_25794A5F0);
}

uint64_t sub_24A6AA1D8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A600 = v1;
  *(_QWORD *)algn_25794A608 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.managed.getter()
{
  return sub_24A6AB328(&qword_2579468C0, &qword_25794A600);
}

uint64_t sub_24A6AA280()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A610 = v1;
  *(_QWORD *)algn_25794A618 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.tip.getter()
{
  return sub_24A6AB328(&qword_2579468C8, &qword_25794A610);
}

uint64_t sub_24A6AA320()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946890 != -1)
    swift_once();
  v1 = qword_25794A5A0;
  v2 = *(_QWORD *)algn_25794A5A8;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A620 = v1;
  *(_QWORD *)algn_25794A628 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.addWorkout.getter()
{
  return sub_24A6AB328(&qword_2579468D0, &qword_25794A620);
}

uint64_t static WorkoutAccessibilityIdentifier.ActivityPicker.configButton.getter()
{
  return 0x75426769666E6F43;
}

uint64_t sub_24A6AA3F0()
{
  uint64_t result;

  sub_24A77BF5C();
  result = swift_bridgeObjectRelease();
  qword_25794A630 = 0xD000000000000017;
  *(_QWORD *)algn_25794A638 = 0x800000024A78BF90;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.AlertsEntryView.base.getter()
{
  return sub_24A6AB328(&qword_2579468D8, &qword_25794A630);
}

uint64_t sub_24A6AA470()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_2579468D8 != -1)
    swift_once();
  v1 = qword_25794A630;
  v2 = *(_QWORD *)algn_25794A638;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A640 = v1;
  *(_QWORD *)algn_25794A648 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.AlertsEntryView.picker.getter()
{
  return sub_24A6AB328(&qword_2579468E0, &qword_25794A640);
}

unint64_t static WorkoutAccessibilityIdentifier.MetricPicker.base.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_24A6AA534()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A650 = 0xD000000000000014;
  *(_QWORD *)algn_25794A658 = 0x800000024A78BEC0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.MetricPicker.off.getter()
{
  return sub_24A6AB328(&qword_2579468E8, &qword_25794A650);
}

uint64_t sub_24A6AA5B4()
{
  uint64_t result;

  sub_24A77BF5C();
  result = swift_bridgeObjectRelease();
  qword_25794A660 = 0xD00000000000001CLL;
  *(_QWORD *)algn_25794A668 = 0x800000024A78BF70;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.PacerAlertsEntryView.base.getter()
{
  return sub_24A6AB328(&qword_2579468F0, &qword_25794A660);
}

uint64_t sub_24A6AA634()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_2579468F0 != -1)
    swift_once();
  v1 = qword_25794A660;
  v2 = *(_QWORD *)algn_25794A668;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A670 = v1;
  *(_QWORD *)algn_25794A678 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.PacerAlertsEntryView.toggle.getter()
{
  return sub_24A6AB328(&qword_2579468F8, &qword_25794A670);
}

uint64_t sub_24A6AA6DC(uint64_t a1)
{
  return sub_24A6AA6FC(a1, &qword_25794A680, 0x800000024A78BF50, algn_25794A688);
}

uint64_t sub_24A6AA6FC(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;

  sub_24A77BF5C();
  result = swift_bridgeObjectRelease();
  *a2 = 0xD000000000000016;
  *a4 = a3;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionMetrics.base.getter()
{
  return sub_24A6AB328(&qword_257946900, &qword_25794A680);
}

uint64_t sub_24A6AA77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  sub_24A77BF5C();
  if (qword_257946900 != -1)
    swift_once();
  v1 = qword_25794A680;
  v0 = *(_QWORD *)algn_25794A688;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = sub_24A77BA4C();
  qword_25794A690 = v1;
  *(_QWORD *)algn_25794A698 = v0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionMetrics.workoutFigure.getter()
{
  return sub_24A6AB328(&qword_257946908, &qword_25794A690);
}

uint64_t sub_24A6AA85C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946908 != -1)
    swift_once();
  v1 = qword_25794A690;
  v2 = *(_QWORD *)algn_25794A698;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A6A0 = v1;
  *(_QWORD *)algn_25794A6A8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionMetrics.multisportFigure.getter()
{
  return sub_24A6AB328(&qword_257946910, &qword_25794A6A0);
}

unint64_t static WorkoutAccessibilityIdentifier.SessionControls.base.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_24A6AA928()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A6B0 = 0xD000000000000010;
  *(_QWORD *)algn_25794A6B8 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.endWorkout.getter()
{
  return sub_24A6AB328(&qword_257946918, &qword_25794A6B0);
}

uint64_t sub_24A6AA9B8()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A6C0 = 0xD000000000000010;
  *(_QWORD *)algn_25794A6C8 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.startWorkout.getter()
{
  return sub_24A6AB328(&qword_257946920, &qword_25794A6C0);
}

uint64_t sub_24A6AAA4C()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A6D0 = 0xD000000000000010;
  *(_QWORD *)algn_25794A6D8 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.quickSwitch.getter()
{
  return sub_24A6AB328(&qword_257946928, &qword_25794A6D0);
}

uint64_t sub_24A6AAADC(uint64_t a1)
{
  return sub_24A6AAD30(a1, 0x57656D757365522ELL, 0xEE0074756F6B726FLL, qword_25794A6E0, &qword_25794A6E0[1]);
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.resumeWorkout.getter()
{
  return sub_24A6AB328(&qword_257946930, qword_25794A6E0);
}

uint64_t sub_24A6AAB2C()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A6F0 = 0xD000000000000010;
  *(_QWORD *)algn_25794A6F8 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.pauseWorkout.getter()
{
  return sub_24A6AB328(&qword_257946938, &qword_25794A6F0);
}

uint64_t sub_24A6AABC0()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A700 = 0xD000000000000010;
  *(_QWORD *)algn_25794A708 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.chooseLane.getter()
{
  return sub_24A6AB328(&qword_257946940, &qword_25794A700);
}

uint64_t sub_24A6AAC50()
{
  uint64_t result;

  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  result = sub_24A77BA4C();
  qword_25794A710 = 0xD000000000000010;
  *(_QWORD *)algn_25794A718 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.startMirroring.getter()
{
  return sub_24A6AB328(&qword_257946948, &qword_25794A710);
}

uint64_t sub_24A6AAD00(uint64_t a1)
{
  return sub_24A6AAD30(a1, 0x72694D706F74532ELL, 0xEE00676E69726F72, qword_25794A720, &qword_25794A720[1]);
}

uint64_t sub_24A6AAD30(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t result;

  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  result = sub_24A77BA4C();
  *a4 = 0xD000000000000010;
  *a5 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.stopMirroring.getter()
{
  return sub_24A6AB328(&qword_257946950, qword_25794A720);
}

uint64_t sub_24A6AADE4()
{
  uint64_t result;

  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  result = sub_24A77BA4C();
  qword_25794A730 = 0xD000000000000010;
  *(_QWORD *)algn_25794A738 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.safetyCheckInSession.getter()
{
  return sub_24A6AB328(&qword_257946958, &qword_25794A730);
}

uint64_t sub_24A6AAE8C()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A740 = 0xD000000000000010;
  *(_QWORD *)algn_25794A748 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.markSegment.getter()
{
  return sub_24A6AB328(&qword_257946960, &qword_25794A740);
}

uint64_t sub_24A6AAF1C()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A750 = 0xD000000000000010;
  *(_QWORD *)algn_25794A758 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.nextInterval.getter()
{
  return sub_24A6AB328(&qword_257946968, &qword_25794A750);
}

uint64_t sub_24A6AAFB0()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A760 = 0xD000000000000010;
  *(_QWORD *)algn_25794A768 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.nextLeg.getter()
{
  return sub_24A6AB328(&qword_257946970, &qword_25794A760);
}

uint64_t sub_24A6AB038()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A770 = 0xD000000000000010;
  *(_QWORD *)algn_25794A778 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.blankSpace.getter()
{
  return sub_24A6AB328(&qword_257946978, &qword_25794A770);
}

uint64_t sub_24A6AB0C8()
{
  uint64_t result;

  result = sub_24A77BA4C();
  qword_25794A780 = 0xD000000000000010;
  *(_QWORD *)algn_25794A788 = 0x800000024A78BEE0;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.SessionControls.preferences.getter()
{
  return sub_24A6AB328(&qword_257946980, &qword_25794A780);
}

uint64_t sub_24A6AB158()
{
  uint64_t result;

  sub_24A77BF5C();
  result = swift_bridgeObjectRelease();
  qword_25794A790 = 0xD000000000000020;
  *(_QWORD *)algn_25794A798 = 0x800000024A78BF00;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView.base.getter()
{
  return sub_24A6AB328(&qword_257946988, &qword_25794A790);
}

uint64_t sub_24A6AB1D8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946988 != -1)
    swift_once();
  v1 = qword_25794A790;
  v2 = *(_QWORD *)algn_25794A798;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A7A0 = v1;
  *(_QWORD *)algn_25794A7A8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView.nextInterval.getter()
{
  return sub_24A6AB328(&qword_257946990, &qword_25794A7A0);
}

uint64_t sub_24A6AB27C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_257946988 != -1)
    swift_once();
  v1 = qword_25794A790;
  v2 = *(_QWORD *)algn_25794A798;
  swift_bridgeObjectRetain();
  result = sub_24A77BA4C();
  qword_25794A7B0 = v1;
  unk_25794A7B8 = v2;
  return result;
}

uint64_t static WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView.nextStep.getter()
{
  return sub_24A6AB328(&qword_257946998, &qword_25794A7B0);
}

uint64_t sub_24A6AB328(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static WorkoutAccessibilityIdentifier.build(_:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579482B8);
  sub_24A66770C();
  return sub_24A77B92C();
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier()
{
  return &type metadata for WorkoutAccessibilityIdentifier;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.ActivityPicker()
{
  return &type metadata for WorkoutAccessibilityIdentifier.ActivityPicker;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.AlertsEntryView()
{
  return &type metadata for WorkoutAccessibilityIdentifier.AlertsEntryView;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.MetricPicker()
{
  return &type metadata for WorkoutAccessibilityIdentifier.MetricPicker;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.PacerAlertsEntryView()
{
  return &type metadata for WorkoutAccessibilityIdentifier.PacerAlertsEntryView;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.SessionMetrics()
{
  return &type metadata for WorkoutAccessibilityIdentifier.SessionMetrics;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.SessionControls()
{
  return &type metadata for WorkoutAccessibilityIdentifier.SessionControls;
}

ValueMetadata *type metadata accessor for WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView()
{
  return &type metadata for WorkoutAccessibilityIdentifier.WorkoutIntervalAlertView;
}

uint64_t sub_24A6AB448()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24A6AB4DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 56 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
    v17 = (v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFFFF8;
    v18 = (v10 + v16) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_OWORD *)(v18 + 16);
    v19 = *(_OWORD *)(v18 + 32);
    v21 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
    *(_OWORD *)(v17 + 16) = v20;
    *(_OWORD *)(v17 + 32) = v19;
    *(_OWORD *)v17 = v21;
  }
  return v4;
}

uint64_t sub_24A6AB5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_24A6AB650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_OWORD *)(v15 + 16);
  v16 = *(_OWORD *)(v15 + 32);
  v18 = *(_OWORD *)v15;
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 16) = v17;
  *(_OWORD *)(v14 + 32) = v16;
  *(_OWORD *)v14 = v18;
  return a1;
}

uint64_t sub_24A6AB6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  v14[4] = v15[4];
  v14[5] = v15[5];
  v14[6] = v15[6];
  return a1;
}

uint64_t sub_24A6AB7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_OWORD *)(v15 + 16);
  v16 = *(_OWORD *)(v15 + 32);
  v18 = *(_OWORD *)v15;
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 16) = v17;
  *(_OWORD *)(v14 + 32) = v16;
  *(_OWORD *)v14 = v18;
  return a1;
}

uint64_t sub_24A6AB85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  v14[4] = v15[4];
  v14[5] = v15[5];
  v14[6] = v15[6];
  return a1;
}

uint64_t sub_24A6AB920(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  if (v8 >= a2)
  {
    if (v8)
    {
      if (v5 >= v7)
        return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(a1, *(unsigned int *)(v4 + 84));
      else
        return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
    }
    return 0;
  }
  if (((((*(_QWORD *)(v6 + 64) + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 56) & 0xFFFFFFF8) != 0)
    v11 = 2;
  else
    v11 = a2 - v8 + 1;
  if (v11 >= 0x10000)
    v12 = 4;
  else
    v12 = 2;
  if (v11 < 0x100)
    v12 = 1;
  if (v11 >= 2)
    v13 = v12;
  else
    v13 = 0;
  return ((uint64_t (*)(void))((char *)&loc_24A6AB9BC + 4 * asc_24A782EF0[v13]))();
}

void sub_24A6ABA40(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFC8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X16 }
  }
  if (((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFC8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + ((*(_QWORD *)(v5 + 64) + v8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 56);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_24A6ABB58()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_24A6ABB60(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24A6ABB68);
}

void sub_24A6ABBA4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_24A6ABBAC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_24A6ABBB4(uint64_t a1, int a2, unsigned int a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_WORD *)(v9 + v10) = 0;
  if (!a2)
    JUMPOUT(0x24A6ABBBCLL);
  if (v4 >= a3)
    return (*(uint64_t (**)(uint64_t))(v7 + 56))(v9);
  else
    return (*(uint64_t (**)(uint64_t))(v6 + 56))((v8 + v9) & v5);
}

void type metadata accessor for WorkoutNotificationResultView()
{
  JUMPOUT(0x24BD1A14CLL);
}

uint64_t sub_24A6ABBE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6ABC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[2];
  _QWORD v39[3];

  v33 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v27 = *(_QWORD *)(a1 + 24);
  swift_getTupleTypeMetadata3();
  v5 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v5);
  v6 = sub_24A77B530();
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - v7;
  v9 = sub_24A77A5F4();
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  v12 = sub_24A77A5F4();
  v32 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v29 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v31 = (uint64_t)&v26 - v15;
  sub_24A77AA08();
  v34 = v4;
  v35 = v27;
  v36 = *(_OWORD *)(a1 + 32);
  v37 = v2;
  sub_24A77B524();
  sub_24A77ACCC();
  v16 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v6);
  sub_24A77B2A8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
  v17 = sub_24A77ACD8();
  v18 = sub_24A77ACF0();
  sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v17)
    sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v18)
    sub_24A77ACE4();
  v19 = MEMORY[0x24BDECC60];
  v39[0] = v16;
  v39[1] = MEMORY[0x24BDECC60];
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v9, v39);
  v22 = (uint64_t)v29;
  sub_24A77B2A8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
  v38[0] = v21;
  v38[1] = v19;
  MEMORY[0x24BD1A1F4](v20, v12, v38);
  v23 = v31;
  sub_24A6B90A4(v22, v12, v31);
  v24 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v24(v22, v12);
  sub_24A6B8268(v23, v12, v33);
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v23, v12);
}

void sub_24A6ABF60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for WorkoutNotificationResultView();
}

uint64_t sub_24A6AC040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);

  sub_24A6B90A4(v10 + *(int *)(a1 + 52), v1, v9);
  sub_24A6B90A4(v10, v2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v9, v1);
  *(_QWORD *)(v11 - 128) = 0;
  *(_BYTE *)(v11 - 120) = 1;
  *(_QWORD *)(v11 - 112) = v5;
  *(_QWORD *)(v11 - 104) = v11 - 128;
  v12 = *(_QWORD *)(v11 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v3, v8, v2);
  *(_QWORD *)(v11 - 96) = v3;
  v13 = MEMORY[0x24BDF4638];
  *(_QWORD *)(v11 - 152) = v1;
  *(_QWORD *)(v11 - 144) = v13;
  *(_QWORD *)(v11 - 136) = v2;
  v14 = MEMORY[0x24BDF4610];
  *(_QWORD *)(v11 - 176) = v7;
  *(_QWORD *)(v11 - 168) = v14;
  *(_QWORD *)(v11 - 160) = v6;
  sub_24A66AB50((uint64_t *)(v11 - 112), 3uLL, v11 - 152);
  v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v15(v8, v2);
  v16 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v16(v9, v1);
  v15(v3, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v16)(v5, v1);
}

void sub_24A6AC144()
{
  uint64_t v0;

  sub_24A6ABF60(*(_QWORD *)(v0 + 48));
}

uint64_t sub_24A6AC154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[2];

  swift_getTupleTypeMetadata3();
  v0 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v0);
  v1 = sub_24A77B530();
  v2 = sub_24A77A5F4();
  v3 = sub_24A77A5F4();
  v4 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v1);
  v5 = MEMORY[0x24BDECC60];
  v9[0] = v4;
  v9[1] = MEMORY[0x24BDECC60];
  v6 = MEMORY[0x24BDED308];
  v8[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v9);
  v8[1] = v5;
  return MEMORY[0x24BD1A1F4](v6, v3, v8);
}

id sub_24A6AC24C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.39);

  return v1;
}

id sub_24A6AC2B0()
{
  void *v0;

  sub_24A6AC2F8();
  type metadata accessor for CGColor(0);
  v0 = (void *)sub_24A77BB0C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24A6AC2F8()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.39);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24A782FA0;
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_clearColor);
  v5 = objc_msgSend(v4, sel_CGColor);

  *(_QWORD *)(v2 + 32) = v5;
  v6 = objc_msgSend(v3, sel_clearColor);
  v7 = objc_msgSend(v6, sel_CGColor);

  *(_QWORD *)(v2 + 40) = v7;
  *(_QWORD *)(v2 + 48) = objc_msgSend(v1, sel_CGColor);
  sub_24A77BB24();

  return v2;
}

uint64_t NullMetricImpressionTracker.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t NullMetricImpressionTracker.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24A6AC460()
{
  return 0;
}

uint64_t NullMetricImpressionTracker.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t NullMetricImpressionTracker.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NullMetricImpressionTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for NullMetricImpressionTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.trackIndexPathApperance(_:cell:identifier:name:element:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.trackIndexPathDisappearance(_:identifier:name:element:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.trackShelfWithCellApperance(cell:indexPath:shelfIdentifier:shelfName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.updateVisibleBounds(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.snapshotOnScreenImpressions(on:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.consumeImpressions(on:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of NullMetricImpressionTracker.removeAllImpressions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t *sub_24A6AC50C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *DayEntry;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A778818();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
    v9 = DayEntry[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = DayEntry[6];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v16 = *v14;
    v15 = v14[1];
    *v13 = v16;
    v13[1] = v15;
    v17 = DayEntry[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + DayEntry[8]) = *(uint64_t *)((char *)a2 + DayEntry[8]);
    v21 = *(int *)(a3 + 20);
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_24A77B86C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A6AC67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for TrainingLoadDayEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D10);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = sub_24A77B86C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_24A6AC74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = DayEntry[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  v16 = DayEntry[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  v20 = *(int *)(a3 + 20);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_24A77B86C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24A6AC888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = DayEntry[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = DayEntry[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v18 = *(int *)(a3 + 20);
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_24A63CD04(a1 + v18, &qword_257946D10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_24A77B86C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A6ACA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + DayEntry[6]) = *(_OWORD *)(a2 + DayEntry[6]);
  *(_OWORD *)(a1 + DayEntry[7]) = *(_OWORD *)(a2 + DayEntry[7]);
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  v11 = *(int *)(a3 + 20);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_24A77B86C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24A6ACB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = DayEntry[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = DayEntry[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  swift_release();
  if (a1 != a2)
  {
    v21 = *(int *)(a3 + 20);
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_24A63CD04(a1 + v21, &qword_257946D10);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_24A77B86C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24A6ACC6C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6ACC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DayEntry;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v7 = *(_QWORD *)(DayEntry - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = DayEntry;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A910);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24A6ACCF0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6ACCFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t DayEntry;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v9 = *(_QWORD *)(DayEntry - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = DayEntry;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A910);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TrainingLoadDayWidgetEntryView()
{
  uint64_t result;

  result = qword_2544D5F98;
  if (!qword_2544D5F98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A6ACDB8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for TrainingLoadDayEntry();
  if (v0 <= 0x3F)
  {
    sub_24A6ACE3C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_24A6ACE3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2544D6128)
  {
    sub_24A77B86C();
    v0 = sub_24A77A3F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2544D6128);
  }
}

uint64_t sub_24A6ACE90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6ACEA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v20;
  unsigned __int8 v21;
  char v22;

  v20 = a1;
  v2 = sub_24A77B86C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CB0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A918);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A920);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A6AD0D0(v1, (uint64_t)v11);
  v22 = 0;
  type metadata accessor for TrainingLoadDayWidgetEntryView();
  sub_24A63EFEC((uint64_t)v5);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v16 == *MEMORY[0x24BDFAED8])
  {
    v17 = 5;
  }
  else
  {
    if (v16 != *MEMORY[0x24BDFAF08])
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v17 = 2;
  }
  v21 = v17;
  TrainingLoadURLBuilder.url(route:source:)((uint64_t)&v22, &v21);
  v18 = sub_24A7786B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
  sub_24A6AD700();
  sub_24A77B068();
  sub_24A63CD04((uint64_t)v8, &qword_257949CB0);
  sub_24A63CD04((uint64_t)v11, &qword_25794A918);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20, v15, v12);
}

uint64_t sub_24A6AD0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t DayEntry;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  int v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  int v27;
  _BYTE *v28;
  id v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[4];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t DayWidgetSystemSmallView;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t DayWidgetRectangularView;
  uint64_t v47;

  v45 = a2;
  DayWidgetSystemSmallView = type metadata accessor for TrainingLoadDayWidgetSystemSmallView();
  MEMORY[0x24BDAC7A8](DayWidgetSystemSmallView);
  v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A960);
  MEMORY[0x24BDAC7A8](v43);
  v42 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A968);
  MEMORY[0x24BDAC7A8](v39);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A948);
  MEMORY[0x24BDAC7A8](v44);
  v40 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A970);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)&v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  MEMORY[0x24BDAC7A8](DayEntry);
  v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DayWidgetRectangularView = type metadata accessor for TrainingLoadDayWidgetRectangularView();
  MEMORY[0x24BDAC7A8](DayWidgetRectangularView);
  v16 = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_24A77B86C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v35[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for TrainingLoadDayWidgetEntryView();
  v21 = a1;
  sub_24A63EFEC((uint64_t)v20);
  v37 = v18;
  v38 = v17;
  v22 = (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 88))(v20, v17);
  if (v22 == *MEMORY[0x24BDFAED8])
  {
    sub_24A65FAD0(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayEntry);
    KeyPath = swift_getKeyPath();
    v24 = DayWidgetSystemSmallView;
    *(_QWORD *)&v4[*(int *)(DayWidgetSystemSmallView + 28)] = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    swift_storeEnumTagMultiPayload();
    sub_24A6AD988((uint64_t)v14, (uint64_t)v4);
    *(_QWORD *)&v4[*(int *)(v24 + 20)] = 0x4053800000000000;
    v47 = 0x4034000000000000;
    sub_24A679934();
    sub_24A77A438();
    sub_24A65FAD0((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetSystemSmallView);
    swift_storeEnumTagMultiPayload();
    sub_24A63C880(&qword_25794A950, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView, (uint64_t)&unk_24A783A18);
    sub_24A63C880(&qword_25794A958, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetSystemSmallView, (uint64_t)&unk_24A780F58);
    v25 = (uint64_t)v40;
    sub_24A77AB28();
    sub_24A6ADA14(v25, (uint64_t)v42);
    swift_storeEnumTagMultiPayload();
    sub_24A6AD7E8();
    sub_24A77AB28();
    sub_24A63CD04(v25, &qword_25794A948);
    return sub_24A65FB14((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetSystemSmallView);
  }
  else
  {
    v27 = v22;
    v28 = v42;
    v36 = *MEMORY[0x24BDFAF08];
    sub_24A65FAD0(v21, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayEntry);
    v29 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v29, sel_scale);
    v31 = v30;

    *v11 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D38);
    swift_storeEnumTagMultiPayload();
    v32 = swift_getKeyPath();
    v33 = DayWidgetRectangularView;
    *(_QWORD *)&v16[*(int *)(DayWidgetRectangularView + 28)] = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    swift_storeEnumTagMultiPayload();
    sub_24A6AD988((uint64_t)v14, (uint64_t)v16);
    *(double *)&v16[*(int *)(v33 + 20)] = 340.0 / v31;
    sub_24A6AD9CC((uint64_t)v11, (uint64_t)&v16[*(int *)(v33 + 24)]);
    if (v27 == v36)
    {
      sub_24A65FAD0((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      swift_storeEnumTagMultiPayload();
      sub_24A63C880(&qword_25794A950, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView, (uint64_t)&unk_24A783A18);
      sub_24A63C880(&qword_25794A958, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetSystemSmallView, (uint64_t)&unk_24A780F58);
      v34 = (uint64_t)v40;
      sub_24A77AB28();
      sub_24A6ADA14(v34, (uint64_t)v28);
      swift_storeEnumTagMultiPayload();
      sub_24A6AD7E8();
      sub_24A77AB28();
      sub_24A63CD04(v34, &qword_25794A948);
      return sub_24A65FB14((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    }
    else
    {
      sub_24A65FAD0((uint64_t)v16, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      swift_storeEnumTagMultiPayload();
      sub_24A6AD7E8();
      sub_24A63C880(&qword_25794A950, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView, (uint64_t)&unk_24A783A18);
      sub_24A77AB28();
      sub_24A65FB14((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v37 + 8))(v20, v38);
    }
  }
}

unint64_t sub_24A6AD700()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794A928;
  if (!qword_25794A928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A918);
    v2 = sub_24A6AD764();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794A928);
  }
  return result;
}

unint64_t sub_24A6AD764()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A930;
  if (!qword_25794A930)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A938);
    v2[0] = sub_24A6AD7E8();
    v2[1] = sub_24A63C880(&qword_25794A950, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView, (uint64_t)&unk_24A783A18);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A930);
  }
  return result;
}

unint64_t sub_24A6AD7E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A940;
  if (!qword_25794A940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A948);
    v2[0] = sub_24A63C880(&qword_25794A950, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetRectangularView, (uint64_t)&unk_24A783A18);
    v2[1] = sub_24A63C880(&qword_25794A958, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayWidgetSystemSmallView, (uint64_t)&unk_24A780F58);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A940);
  }
  return result;
}

uint64_t sub_24A6AD884()
{
  return sub_24A77A894();
}

uint64_t sub_24A6AD8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24A6AD8E8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDFADE0], MEMORY[0x24BDFAB68]);
}

uint64_t sub_24A6AD8C8()
{
  return sub_24A77A78C();
}

uint64_t sub_24A6AD8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_24A6AD964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24A6AD8E8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDED930], MEMORY[0x24BDEE0E0]);
}

uint64_t sub_24A6AD988(uint64_t a1, uint64_t a2)
{
  uint64_t DayEntry;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DayEntry - 8) + 32))(a2, a1, DayEntry);
  return a2;
}

uint64_t sub_24A6AD9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6ADA14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6ADA5C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A918);
  sub_24A6AD700();
  return swift_getOpaqueTypeConformance2();
}

uint64_t DistanceDetailMetricView.init(distance:formattingManager:distanceType:distanceUnit:metricType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  *(double *)a6 = a7;
  *(_QWORD *)(a6 + 8) = result;
  *(_QWORD *)(a6 + 16) = a2;
  *(_QWORD *)(a6 + 24) = a3;
  *(_BYTE *)(a6 + 32) = a4 & 1;
  *(_QWORD *)(a6 + 40) = a5;
  return result;
}

uint64_t sub_24A6ADAC4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1 > 34)
  {
    if (v1 == 35)
    {
      if (qword_2544D6160 == -1)
      {
LABEL_11:
        swift_beginAccess();
        v2 = (id)qword_2544D6158;
        v1 = sub_24A77856C();

        return v1;
      }
    }
    else
    {
      if (v1 != 42)
        return 0x6E776F6E6B6E550ALL;
      if (qword_2544D6160 == -1)
        goto LABEL_11;
    }
LABEL_14:
    swift_once();
    goto LABEL_11;
  }
  if (v1)
  {
    if (v1 == 22)
    {
      if (qword_2544D6160 == -1)
        goto LABEL_11;
      goto LABEL_14;
    }
    return 0x6E776F6E6B6E550ALL;
  }
  return v1;
}

uint64_t DistanceDetailMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v3 = *v1;
  v4 = v1[2];
  v5 = v1[3];
  v6 = *((_BYTE *)v1 + 32);
  v7 = (id)v1[1];
  result = sub_24A6ADAC4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = result;
  *(_QWORD *)(a1 + 48) = v9;
  return result;
}

uint64_t sub_24A6ADD54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6ADD64@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v3 = *v1;
  v4 = v1[2];
  v5 = v1[3];
  v6 = *((_BYTE *)v1 + 32);
  v7 = (id)v1[1];
  result = sub_24A6ADAC4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = result;
  *(_QWORD *)(a1 + 48) = v9;
  return result;
}

void destroy for DistanceDetailMetricView(uint64_t a1)
{

}

uint64_t initializeWithCopy for DistanceDetailMetricView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for DistanceDetailMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for DistanceDetailMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DistanceDetailMetricView()
{
  return &type metadata for DistanceDetailMetricView;
}

WorkoutUI::RaceCompleteRaceTimeMetricView __swiftcall RaceCompleteRaceTimeMetricView.init(raceTime:didWinRace:)(Swift::Double raceTime, Swift::Bool didWinRace)
{
  uint64_t v2;
  WorkoutUI::RaceCompleteRaceTimeMetricView result;

  *(Swift::Double *)v2 = raceTime;
  *(_BYTE *)(v2 + 8) = didWinRace;
  result.raceTime = raceTime;
  result.didWinRace = didWinRace;
  return result;
}

uint64_t RaceCompleteRaceTimeMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  id v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v29[2];
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_24A77C16C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A77C2A4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A77C2B0();
  v30 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(unsigned __int8 *)(v1 + 8);
  sub_24A77C2C8();
  v29[1] = v14;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38C8], v3);
  sub_24A77C298();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24A778338();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_24A68C7E8();
  sub_24A77C2BC();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  v32 = v34;
  v33 = v35;
  sub_24A645928();
  v15 = sub_24A77AFD8();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  KeyPath = swift_getKeyPath();
  v23 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  if (v31 == 1)
  {
    v24 = 0.62745098;
    v25 = 0.0;
    v26 = 1.0;
  }
  else
  {
    v26 = 0.407843137;
    v24 = 0.321568627;
    v25 = 1.0;
  }
  v27 = MEMORY[0x24BD189B8](objc_msgSend(v23, sel_initWithRed_green_blue_alpha_, v25, v26, v24, 1.0));
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v15;
  *(_QWORD *)(a1 + 8) = v17;
  *(_BYTE *)(a1 + 16) = v19 & 1;
  *(_QWORD *)(a1 + 24) = v21;
  *(_WORD *)(a1 + 32) = 256;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = result;
  *(_QWORD *)(a1 + 64) = v27;
  return result;
}

uint64_t sub_24A6AE184()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for RaceCompleteRaceTimeMetricView()
{
  return &type metadata for RaceCompleteRaceTimeMetricView;
}

unint64_t sub_24A6AE1A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794A978;
  if (!qword_25794A978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A980);
    v2[0] = sub_24A6AE214();
    v2[1] = sub_24A6AE280();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794A978);
  }
  return result;
}

unint64_t sub_24A6AE214()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_25794A988;
  if (!qword_25794A988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A990);
    v2 = sub_24A63F8AC();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794A988);
  }
  return result;
}

unint64_t sub_24A6AE280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257947768;
  if (!qword_257947768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947770);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_257947768);
  }
  return result;
}

uint64_t GuidedWorkoutPickerItem.ItemType.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_24A778C2C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A6AE454(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A998);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v8 + 48)], v1);
    sub_24A77C238();
    sub_24A77C238();
    sub_24A63C880(&qword_25794A9A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE890D0], MEMORY[0x24BE890E0]);
    sub_24A77B914();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_24A77C238();
    sub_24A77C238();
    sub_24A77BA1C();
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for GuidedWorkoutPickerItem.ItemType(uint64_t a1)
{
  return sub_24A6AF174(a1, qword_25794AAD0);
}

uint64_t sub_24A6AE454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL static GuidedWorkoutPickerItem.ButtonType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GuidedWorkoutPickerItem.ItemType.hashValue.getter()
{
  return sub_24A6AE67C((void (*)(_BYTE *))GuidedWorkoutPickerItem.ItemType.hash(into:));
}

uint64_t sub_24A6AE4C0(uint64_t a1, uint64_t a2)
{
  return sub_24A6AE6C8(a1, a2, (void (*)(_BYTE *))GuidedWorkoutPickerItem.ItemType.hash(into:));
}

uint64_t sub_24A6AE4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A6AE718(a1, a2, a3, (void (*)(_BYTE *))GuidedWorkoutPickerItem.ItemType.hash(into:));
}

uint64_t GuidedWorkoutPickerItem.ButtonType.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t GuidedWorkoutPickerItem.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6AE454(v1, a1);
}

uint64_t GuidedWorkoutPickerItem.init(type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24A6AEC94(a1, a2);
}

uint64_t GuidedWorkoutPickerItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_24A778C2C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A6AE454(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A998);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v8 + 48)], v1);
    sub_24A77C238();
    sub_24A778BB4();
    sub_24A77BA1C();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    swift_bridgeObjectRelease();
    return GuidedWorkoutPickerItem.ItemType.hash(into:)();
  }
}

uint64_t GuidedWorkoutPickerItem.hashValue.getter()
{
  return sub_24A6AE67C((void (*)(_BYTE *))GuidedWorkoutPickerItem.hash(into:));
}

uint64_t sub_24A6AE67C(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_24A77C22C();
  a1(v3);
  return sub_24A77C25C();
}

uint64_t sub_24A6AE6BC(uint64_t a1, uint64_t a2)
{
  return sub_24A6AE6C8(a1, a2, (void (*)(_BYTE *))GuidedWorkoutPickerItem.hash(into:));
}

uint64_t sub_24A6AE6C8(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_24A77C22C();
  a3(v5);
  return sub_24A77C25C();
}

uint64_t sub_24A6AE70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A6AE718(a1, a2, a3, (void (*)(_BYTE *))GuidedWorkoutPickerItem.hash(into:));
}

uint64_t sub_24A6AE718(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_24A77C22C();
  a4(v6);
  return sub_24A77C25C();
}

uint64_t GuidedWorkoutPickerItem.ItemType.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[15];
  char v15;
  uint64_t v16;
  unint64_t v17;

  v1 = v0;
  v2 = sub_24A778C2C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A6AE454(v1, (uint64_t)v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v10 = *v8;
  if (EnumCaseMultiPayload == 1)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A998);
    (*(void (**)(_BYTE *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v11 + 48)], v2);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_24A77BF5C();
    sub_24A77BA4C();
    v15 = v10;
    sub_24A77C004();
    sub_24A77BA4C();
    sub_24A63C880(&qword_25794A9A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE890D0], MEMORY[0x24BE890F0]);
    sub_24A77C160();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    v12 = v16;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_24A77BA4C();
    v15 = v10;
    sub_24A77C004();
    sub_24A77BA4C();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    return v16;
  }
  return v12;
}

uint64_t _s9WorkoutUI06GuidedA10PickerItemV0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  int v24;
  int v25;
  unsigned __int8 *v26;
  void (*v27)(char *, unsigned __int8 *, uint64_t);
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t);
  char v36;
  uint64_t v38;
  char *v39;

  v39 = (char *)a2;
  v3 = sub_24A778C2C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - v8;
  v10 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unsigned __int8 *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (unsigned __int8 *)&v38 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB08);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v18[*(int *)(v19 + 48)];
  sub_24A6AE454(a1, (uint64_t)v18);
  sub_24A6AE454((uint64_t)v39, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24A6AE454((uint64_t)v18, (uint64_t)v15);
    v32 = *((_QWORD *)v15 + 1);
    v31 = *((_QWORD *)v15 + 2);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (*v15 == *v20)
      {
        if (v32 == *((_QWORD *)v20 + 1) && v31 == *((_QWORD *)v20 + 2))
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v36 = sub_24A77C184();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v36 & 1) == 0)
            goto LABEL_17;
        }
        sub_24A6AF478((uint64_t)v18);
        v33 = 1;
        return v33 & 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      sub_24A6AF478((uint64_t)v18);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
LABEL_8:
    sub_24A6AFCC8((uint64_t)v18);
LABEL_18:
    v33 = 0;
    return v33 & 1;
  }
  v21 = v3;
  v39 = v6;
  sub_24A6AE454((uint64_t)v18, (uint64_t)v12);
  v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
  v23 = &v12[v22];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(&v12[v22], v21);
    goto LABEL_8;
  }
  v24 = *v12;
  v25 = *v20;
  v26 = (unsigned __int8 *)&v20[v22];
  v27 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v4 + 32);
  v28 = v9;
  v27(v9, v23, v21);
  v29 = (uint64_t)v39;
  v27(v39, v26, v21);
  if (v24 != v25)
  {
    v30 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v30(v29, v21);
    v30((uint64_t)v28, v21);
    goto LABEL_17;
  }
  v33 = MEMORY[0x24BD16210](v28, v29);
  v34 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v34(v29, v21);
  v34((uint64_t)v28, v21);
  sub_24A6AF478((uint64_t)v18);
  return v33 & 1;
}

uint64_t sub_24A6AEC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s9WorkoutUI06GuidedA10PickerItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  int v27;
  int v28;
  unsigned __int8 *v29;
  void (*v30)(char *, unsigned __int8 *, uint64_t);
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;

  v4 = sub_24A778C2C();
  v5 = *(_QWORD **)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v45 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v45 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - v12;
  v14 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (unsigned __int8 *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (unsigned __int8 *)&v45 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB08);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &v22[*(int *)(v23 + 48)];
  sub_24A6AE454(a1, (uint64_t)v22);
  sub_24A6AE454(a2, (uint64_t)v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24A6AE454((uint64_t)v22, (uint64_t)v16);
    v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
    v26 = &v16[v25];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = *v16;
      v28 = *v24;
      v29 = (unsigned __int8 *)&v24[v25];
      v30 = (void (*)(char *, unsigned __int8 *, uint64_t))v5[4];
      v30(v13, v26, v4);
      v31 = v48;
      v30(v48, v29, v4);
      v32 = (void (*)(char *, char *, uint64_t))v5[2];
      v33 = v47;
      v32(v47, v13, v4);
      v34 = v46;
      v32(v46, v31, v4);
      if (v27 == v28)
      {
        v38 = sub_24A778BB4();
        v40 = v39;
        if (v38 == sub_24A778BB4() && v40 == v41)
          v35 = 1;
        else
          v35 = sub_24A77C184();
        v33 = v47;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = 0;
      }
      v43 = (void (*)(char *, uint64_t))v5[1];
      v43(v34, v4);
      v43(v33, v4);
      v43(v48, v4);
      v43(v13, v4);
      goto LABEL_24;
    }
    ((void (*)(unsigned __int8 *, uint64_t))v5[1])(&v16[v25], v4);
  }
  else
  {
    sub_24A6AE454((uint64_t)v22, (uint64_t)v19);
    v37 = *((_QWORD *)v19 + 1);
    v36 = *((_QWORD *)v19 + 2);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (*v19 == *v24)
      {
        if (v37 == *((_QWORD *)v24 + 1) && v36 == *((_QWORD *)v24 + 2))
          v35 = 1;
        else
          v35 = sub_24A77C184();
      }
      else
      {
        v35 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      sub_24A6AF478((uint64_t)v22);
      return v35 & 1;
    }
    swift_bridgeObjectRelease();
  }
  sub_24A6AFCC8((uint64_t)v22);
  v35 = 0;
  return v35 & 1;
}

uint64_t sub_24A6AF078()
{
  return sub_24A63C880(&qword_25794A9B0, type metadata accessor for GuidedWorkoutPickerItem.ItemType, (uint64_t)&protocol conformance descriptor for GuidedWorkoutPickerItem.ItemType);
}

unint64_t sub_24A6AF0A8()
{
  unint64_t result;

  result = qword_25794A9B8;
  if (!qword_25794A9B8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for GuidedWorkoutPickerItem.TileType, &type metadata for GuidedWorkoutPickerItem.TileType);
    atomic_store(result, (unint64_t *)&qword_25794A9B8);
  }
  return result;
}

unint64_t sub_24A6AF0F0()
{
  unint64_t result;

  result = qword_25794A9C0;
  if (!qword_25794A9C0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for GuidedWorkoutPickerItem.ButtonType, &type metadata for GuidedWorkoutPickerItem.ButtonType);
    atomic_store(result, (unint64_t *)&qword_25794A9C0);
  }
  return result;
}

uint64_t sub_24A6AF134()
{
  return sub_24A63C880(&qword_25794A9C8, type metadata accessor for GuidedWorkoutPickerItem, (uint64_t)&protocol conformance descriptor for GuidedWorkoutPickerItem);
}

uint64_t type metadata accessor for GuidedWorkoutPickerItem(uint64_t a1)
{
  return sub_24A6AF174(a1, qword_25794AA28);
}

uint64_t sub_24A6AF174(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for GuidedWorkoutPickerItem(uint64_t *a1, uint64_t *a2)
{
  int v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for GuidedWorkoutPickerItem.ItemType(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_24A778C2C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      v11 = a2[2];
      a1[1] = a2[1];
      a1[2] = v11;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for GuidedWorkoutPickerItem(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
  v3 = sub_24A778C2C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for GuidedWorkoutPickerItem(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_BYTE *)a1 = *(_BYTE *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
    v6 = a1 + v5;
    v7 = a2 + v5;
    v8 = sub_24A778C2C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v9;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for GuidedWorkoutPickerItem(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_24A6AF478(a1);
    type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = sub_24A778C2C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A6AF478(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeWithTake for GuidedWorkoutPickerItem(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;

  v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
    v6 = &a1[v5];
    v7 = &a2[v5];
    v8 = sub_24A778C2C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for GuidedWorkoutPickerItem(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_24A6AF478((uint64_t)a1);
    v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
      v6 = &a1[v5];
      v7 = &a2[v5];
      v8 = sub_24A778C2C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidedWorkoutPickerItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6AF638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GuidedWorkoutPickerItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6AF680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedWorkoutPickerItem.ItemType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_24A6AF6C0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GuidedWorkoutPickerItem.ItemType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for GuidedWorkoutPickerItem.ItemType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_24A778C2C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      v12 = a2[2];
      a1[1] = a2[1];
      a1[2] = v12;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for GuidedWorkoutPickerItem.ItemType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
  v3 = sub_24A778C2C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_BYTE *)a1 = *(_BYTE *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
    v6 = a1 + v5;
    v7 = a2 + v5;
    v8 = sub_24A778C2C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v9;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_24A6AF478(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = sub_24A778C2C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *initializeWithTake for GuidedWorkoutPickerItem.ItemType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = sub_24A778C2C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for GuidedWorkoutPickerItem.ItemType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_24A6AF478((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794A998) + 48);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_24A778C2C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for GuidedWorkoutPickerItem.ItemType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_24A6AFB54()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24A6AFB64()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = &unk_24A783418;
  result = sub_24A778C2C();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidedWorkoutPickerItem.TileType()
{
  return &type metadata for GuidedWorkoutPickerItem.TileType;
}

uint64_t _s9WorkoutUI23GuidedWorkoutPickerItemV10ButtonTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A6AFC48 + 4 * byte_24A783215[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A6AFC7C + 4 * asc_24A783210[v4]))();
}

uint64_t sub_24A6AFC7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6AFC84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A6AFC8CLL);
  return result;
}

uint64_t sub_24A6AFC98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A6AFCA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A6AFCA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6AFCAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GuidedWorkoutPickerItem.ButtonType()
{
  return &type metadata for GuidedWorkoutPickerItem.ButtonType;
}

uint64_t sub_24A6AFCC8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

WorkoutUI::ListRowBackgroundViewModifier __swiftcall ListRowBackgroundViewModifier.init(applyListRowBackground:)(WorkoutUI::ListRowBackgroundViewModifier applyListRowBackground)
{
  WorkoutUI::ListRowBackgroundViewModifier *v1;

  v1->applyListRowBackground = applyListRowBackground.applyListRowBackground;
  return applyListRowBackground;
}

uint64_t ListRowBackgroundViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  double v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, double);
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v75 = a2;
  v74 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB10);
  v73 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v69 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB18);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F28);
  v71 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v63 - v11;
  v13 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_OWORD *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F20);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB20);
  MEMORY[0x24BDAC7A8](v19);
  v70 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v63 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB28);
  MEMORY[0x24BDAC7A8](v24);
  v29 = MEMORY[0x24BDAC7A8](v25);
  if (*v76 == 1)
  {
    v66 = v28;
    v67 = (uint64_t)&v63 - v27;
    v64 = v12;
    v65 = v9;
    v68 = v26;
    v69 = (char *)v4;
    v30 = v73;
    v76 = v6;
    v31 = (char *)v15 + *(int *)(v13 + 20);
    v32 = *MEMORY[0x24BDEEB68];
    v33 = sub_24A77A9D8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
    __asm { FMOV            V0.2D, #10.0 }
    *v15 = _Q0;
    LODWORD(v31) = sub_24A77AB94();
    sub_24A77A408();
    sub_24A655654((uint64_t)v15, (uint64_t)v18);
    v39 = *(double *)&v77 * 0.5;
    v40 = (uint64_t)&v18[*(int *)(v16 + 68)];
    sub_24A655654((uint64_t)v15, v40);
    *(double *)(v40 + *(int *)(sub_24A77A678() + 20)) = v39;
    v41 = v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794AB40) + 36);
    v42 = v78;
    *(_OWORD *)v41 = v77;
    *(_OWORD *)(v41 + 16) = v42;
    *(_QWORD *)(v41 + 32) = v79;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB48);
    *(_DWORD *)(v40 + *(int *)(v43 + 52)) = (_DWORD)v31;
    *(_WORD *)(v40 + *(int *)(v43 + 56)) = 256;
    v44 = sub_24A77B668();
    v46 = v45;
    v47 = (uint64_t *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794AB50) + 36));
    *v47 = v44;
    v47[1] = v46;
    sub_24A655698((uint64_t)v15);
    v48 = sub_24A77B668();
    sub_24A642A14(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, INFINITY, 0, v48, v49);
    sub_24A63CD04((uint64_t)v18, &qword_257946F20);
    v50 = v71;
    v51 = v72;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v23, 0, 1, v72);
    v52 = v70;
    sub_24A63CCC0((uint64_t)v23, v70, &qword_25794AB20);
    v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v52, 1, v51);
    v54 = 0;
    if (v53 != 1)
    {
      v55 = v52;
      v56 = (uint64_t)v64;
      sub_24A63F6C4(v55, (uint64_t)v64, &qword_257946F28);
      sub_24A63CCC0(v56, (uint64_t)v65, &qword_257946F28);
      sub_24A6B038C();
      v54 = sub_24A77B554();
      sub_24A63CD04(v56, &qword_257946F28);
    }
    v57 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v66, v74, v2);
    *(_QWORD *)(v57 + *(int *)(v68 + 36)) = v54;
    sub_24A63CD04((uint64_t)v23, &qword_25794AB20);
    v58 = v67;
    sub_24A63F6C4(v57, v67, &qword_25794AB28);
    sub_24A63CCC0(v58, (uint64_t)v76, &qword_25794AB28);
    swift_storeEnumTagMultiPayload();
    sub_24A6B02F0();
    sub_24A63CFF0(&qword_25794AB38, &qword_25794AB10, MEMORY[0x24BDEFB78]);
    sub_24A77AB28();
    return sub_24A63CD04(v58, &qword_25794AB28);
  }
  else
  {
    v60 = v73;
    v61 = *(void (**)(char *, uint64_t, uint64_t, double))(v73 + 16);
    v62 = v69;
    v61(v69, v74, v2, v29);
    ((void (*)(char *, char *, uint64_t))v61)(v6, v62, v2);
    swift_storeEnumTagMultiPayload();
    sub_24A6B02F0();
    sub_24A63CFF0(&qword_25794AB38, &qword_25794AB10, MEMORY[0x24BDEFB78]);
    sub_24A77AB28();
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v62, v2);
  }
}

unint64_t sub_24A6B02F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794AB30;
  if (!qword_25794AB30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794AB28);
    v2[0] = sub_24A63CFF0(&qword_25794AB38, &qword_25794AB10, MEMORY[0x24BDEFB78]);
    v2[1] = sub_24A63CFF0(&qword_2579487B0, &qword_2579487B8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794AB30);
  }
  return result;
}

unint64_t sub_24A6B038C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794AB58;
  if (!qword_25794AB58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F28);
    v2[0] = sub_24A63CFF0(&qword_25794AB60, &qword_257946F20, MEMORY[0x24BDEFA70]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794AB58);
  }
  return result;
}

uint64_t sub_24A6B0410()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for ListRowBackgroundViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ListRowBackgroundViewModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A6B0510 + 4 * byte_24A783485[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A6B0544 + 4 * byte_24A783480[v4]))();
}

uint64_t sub_24A6B0544(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6B054C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A6B0554);
  return result;
}

uint64_t sub_24A6B0560(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A6B0568);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A6B056C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6B0574(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListRowBackgroundViewModifier()
{
  return &type metadata for ListRowBackgroundViewModifier;
}

unint64_t sub_24A6B0594()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794AB68;
  if (!qword_25794AB68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794AB70);
    v2[0] = sub_24A6B02F0();
    v2[1] = sub_24A63CFF0(&qword_25794AB38, &qword_25794AB10, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794AB68);
  }
  return result;
}

uint64_t sub_24A6B065C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

id sub_24A6B0730()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  return *v1;
}

void sub_24A6B07D0(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id SeymourAvailabilityProvider.__allocating_init(dependenciesWrapper:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = objc_allocWithZone((Class)type metadata accessor for SeymourAvailabilityProvider());
  swift_retain();
  v5 = SeymourAvailabilityProvider.init(dependencies:)();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id SeymourAvailabilityProvider.init(dependenciesWrapper:)(void *a1)
{
  id v2;
  id v3;

  v2 = objc_allocWithZone((Class)type metadata accessor for SeymourAvailabilityProvider());
  swift_retain();
  v3 = SeymourAvailabilityProvider.init(dependencies:)();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id SeymourAvailabilityProvider.__allocating_init(dependencies:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return SeymourAvailabilityProvider.init(dependencies:)();
}

uint64_t type metadata accessor for SeymourAvailabilityProvider()
{
  return objc_opt_self();
}

id SeymourAvailabilityProvider.init(dependencies:)()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  unsigned int v6;
  id v7;
  id v8;
  objc_super v10;
  __int128 v11[2];

  v1 = &v0[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  *(_QWORD *)&v0[OBJC_IVAR___NLSeymourAvailabilityProvider_availability] = 1;
  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949738);
  sub_24A778B84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794AB88);
  sub_24A778B84();
  sub_24A6865F8(v11, (uint64_t)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_contentAvailabilityClient]);
  sub_24A779F40();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(_QWORD *)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_eventHubToken] = sub_24A779F34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794ABA0);
  sub_24A778B84();
  sub_24A6865F8(v11, (uint64_t)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient]);
  v3 = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)&v2[OBJC_IVAR___NLSeymourAvailabilityProvider_observers] = v3;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = (void *)sub_24A77B980();
  v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

  swift_beginAccess();
  *(_QWORD *)v1 = v6 ^ 1;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for SeymourAvailabilityProvider();
  v7 = objc_msgSendSuper2(&v10, sel_init);
  swift_getObjectType();
  sub_24A779F94();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = v7;
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  sub_24A779FB8();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  objc_msgSend(v8, sel_update);
  swift_unknownObjectRelease();

  swift_release();
  return v8;
}

uint64_t sub_24A6B0D24()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24A6B0D48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  void *v8;
  uint64_t v9;

  v3 = sub_24A778DF4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x24BD1A368](a2 + 16);
  if (result)
  {
    v8 = (void *)result;
    sub_24A779F88();
    sub_24A6B0E10((uint64_t)v6);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_24A6B0E08(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6B0D48(a1, v1);
}

id sub_24A6B0E10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v51;
  id result;
  void *v53;
  char *v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949818);
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  v3 = *(_QWORD *)(v61 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v60 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v71 = (char *)&v58 - v5;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949820);
  v66 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v63 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v64 = v9;
  v65 = (char *)&v58 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v69 = (char *)&v58 - v11;
  v12 = sub_24A778EFC();
  v67 = *(_QWORD *)(v12 - 8);
  v68 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v72 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24A778DF4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v58 - v20;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v15 + 104))((char *)&v58 - v20, *MEMORY[0x24BE8ACF8], v14, v19);
  sub_24A6B3584();
  sub_24A77BAF4();
  sub_24A77BAF4();
  if (v74 == v76 && v75 == v77)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
LABEL_5:
    v59 = v3;
    sub_24A778EF0();
    __swift_project_boxed_opaque_existential_1(&v73[OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient], *(_QWORD *)&v73[OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient + 24]);
    sub_24A779E50();
    v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
    v24 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v25 + v24, v17, v14);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = sub_24A6B32EC;
    *(_QWORD *)(v26 + 24) = v25;
    v27 = v60;
    v28 = v61;
    v29 = v71;
    v30 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v71, v62);
    v31 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v32 = (v59 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v33 + v31, v27, v30);
    v34 = (_QWORD *)(v33 + v32);
    *v34 = sub_24A6B3888;
    v34[1] = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794ABE0);
    v35 = v65;
    sub_24A778F44();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
    v36 = swift_allocObject();
    v37 = v73;
    *(_QWORD *)(v36 + 16) = v73;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_24A6B3744;
    *(_QWORD *)(v38 + 24) = v36;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = sub_24A6B3874;
    *(_QWORD *)(v39 + 24) = v38;
    v40 = v66;
    v41 = v63;
    v42 = v70;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v35, v70);
    v43 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v44 = (v64 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v45 + v43, v41, v42);
    v46 = (_QWORD *)(v45 + v44);
    *v46 = sub_24A6B388C;
    v46[1] = v39;
    v47 = v37;
    v48 = v69;
    sub_24A778F44();
    v49 = *(void (**)(char *, uint64_t))(v40 + 8);
    v49(v35, v42);
    v50 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = 0;
    *(_QWORD *)(v51 + 24) = 0;
    v50(sub_24A687E78, v51);
    swift_release();
    swift_release();
    v49(v48, v42);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v72, v68);
  }
  v22 = sub_24A77C184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
  if ((v22 & 1) != 0)
    goto LABEL_5;
  v53 = v73;
  v54 = &v73[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  result = (id)swift_beginAccess();
  v55 = *(_QWORD *)v54;
  *(_QWORD *)v54 = 1;
  if (v55 != 1)
  {
    v56 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v57 = (void *)sub_24A77B980();
    objc_msgSend(v56, sel_setBool_forKey_, 0, v57);

    return objc_msgSend(v53, sel_notifyObservers);
  }
  return result;
}

void sub_24A6B1458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x24BD1A368](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_update);

  }
}

void sub_24A6B14B0(uint64_t a1)
{
  uint64_t v1;

  sub_24A6B1458(a1, v1);
}

id SeymourAvailabilityProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SeymourAvailabilityProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SeymourAvailabilityProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourAvailabilityProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall SeymourAvailabilityProvider.update()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (**v18)(uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t (**v25)(void *);
  char *v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949808);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - v5;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v7 = *(_QWORD *)(v33 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v33);
  v34 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v30 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_contentAvailabilityClient), *(_QWORD *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_contentAvailabilityClient + 24));
  sub_24A779E44();
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_24A6B1DD0;
  *(_QWORD *)(v14 + 24) = v13;
  v15 = v31;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v31, v6, v1);
  v16 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v17 + v16, v15, v1);
  v18 = (uint64_t (**)(uint64_t))(v17 + ((v3 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v18 = sub_24A6B299C;
  v18[1] = (uint64_t (*)(uint64_t))v14;
  v19 = v32;
  sub_24A778F44();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_24A6B2278;
  *(_QWORD *)(v20 + 24) = 0;
  v21 = v33;
  v22 = v34;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v34, v19, v33);
  v23 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v23, v22, v21);
  v25 = (uint64_t (**)(void *))(v24 + ((v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v25 = sub_24A6B2E9C;
  v25[1] = (uint64_t (*)(void *))v20;
  v26 = v35;
  sub_24A778F44();
  v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v19, v21);
  v28 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  v28(sub_24A68ABB4, v29);
  swift_release();
  swift_release();
  v27(v26, v21);
}

uint64_t sub_24A6B1908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t (**v31)(uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (**v42)(void *);
  char *v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[4];
  char *v64;

  v51 = a1;
  v52 = sub_24A778DF4();
  v4 = *(_QWORD *)(v52 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v52);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949818);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  v7 = *(_QWORD *)(v54 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v48 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949820);
  v58 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v58 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v56 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)&v48 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)&v48 - v16;
  v17 = sub_24A778EFC();
  v60 = *(_QWORD *)(v17 - 8);
  v61 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v62 = a2;
  v64 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778EF0();
  swift_beginAccess();
  v19 = MEMORY[0x24BD1A368](a2 + 16);
  if (v19)
  {
    v20 = (void *)v19;
    sub_24A67BC90(v19 + OBJC_IVAR___NLSeymourAvailabilityProvider_subscriptionClient, (uint64_t)v63);

    v50 = v2;
    v49 = v11;
    __swift_project_boxed_opaque_existential_1(v63, v63[3]);
    sub_24A779E50();
    v21 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v51, v52);
    v22 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v62;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = sub_24A6B32EC;
    *(_QWORD *)(v24 + 24) = v23;
    v26 = v53;
    v25 = v54;
    v27 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v10, v55);
    v28 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v29 = (v7 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v30 + v28, v26, v27);
    v31 = (uint64_t (**)(uint64_t))(v30 + v29);
    *v31 = sub_24A6B3300;
    v31[1] = (uint64_t (*)(uint64_t))v24;
    v32 = v62;
    swift_retain();
    v53 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_25794ABE0);
    v33 = v57;
    sub_24A778F44();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = sub_24A6B3328;
    *(_QWORD *)(v34 + 24) = v32;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = sub_24A6B3330;
    *(_QWORD *)(v35 + 24) = v34;
    v36 = v58;
    v37 = v56;
    v38 = v49;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v56, v33, v49);
    v39 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v40 = (v12 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v39, v37, v38);
    v42 = (uint64_t (**)(void *))(v41 + v40);
    *v42 = sub_24A6B3368;
    v42[1] = (uint64_t (*)(void *))v35;
    swift_retain();
    v43 = v59;
    sub_24A778F44();
    v44 = *(void (**)(char *, uint64_t))(v36 + 8);
    v44(v33, v38);
    v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = 0;
    *(_QWORD *)(v46 + 24) = 0;
    v45(sub_24A687E78, v46);
    swift_release();
    swift_release();
    v44(v43, v38);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v64, v61);
}

uint64_t sub_24A6B1DD0(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6B1908(a1, v1);
}

id sub_24A6B1DE8(uint64_t a1, char a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  char v10;
  char *v11;
  id result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  _QWORD v17[6];

  v3 = v2;
  v5 = sub_24A778DF4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x24BE8ACF8], v5, v7);
  sub_24A6B3584();
  sub_24A77BAF4();
  sub_24A77BAF4();
  if (v17[1] == v17[4] && v17[2] == v17[5])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_24A77C184();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 &= v10;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v11 = &v2[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  result = (id)swift_beginAccess();
  v13 = *(_QWORD *)v11;
  v14 = (a2 & 1) == 0;
  *(_QWORD *)v11 = v14;
  if (v13 != v14)
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v16 = (void *)sub_24A77B980();
    objc_msgSend(v15, sel_setBool_forKey_, a2 & 1, v16);

    return objc_msgSend(v3, sel_notifyObservers);
  }
  return result;
}

void sub_24A6B1FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_getErrorValue();
  v3 = sub_24A77C1E4();
  v5 = v4;
  sub_24A6B3448();
  if (v3 == sub_24A77C1E4() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_24A77C184();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_13;
  }
  swift_getErrorValue();
  v9 = sub_24A77C1D8();
  if (v9 != sub_24A77C1D8())
  {
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A780030;
    swift_getErrorValue();
    v18 = sub_24A77C1C0();
    v20 = v19;
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 64) = sub_24A66952C();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(inited + 40) = v20;
    v21 = sub_24A77BC5C();
    sub_24A67B7C8((uint64_t)"Seymour Availability Provider failed with error: %@", 51, 2, v21, inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
    swift_arrayDestroy();
    return;
  }
  v10 = sub_24A77BC74();
  sub_24A67B7C8((uint64_t)"Seymour Availability Provider found no subscription", 51, 2, v10, MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  v11 = MEMORY[0x24BD1A368](a2 + 16);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = (uint64_t *)(v11 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
    swift_beginAccess();
    v14 = *v13;
    *v13 = 1;
    if (v14 != 1)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v16 = (void *)sub_24A77B980();
      objc_msgSend(v15, sel_setBool_forKey_, 0, v16);

      objc_msgSend(v12, sel_notifyObservers);
    }

  }
}

uint64_t sub_24A6B2278()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A780030;
  swift_getErrorValue();
  v1 = sub_24A77C1C0();
  v3 = v2;
  *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 64) = sub_24A66952C();
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v3;
  v4 = sub_24A77BC5C();
  sub_24A67B7C8((uint64_t)"Seymour Availability Provider failed with error: %@", 51, 2, v4, inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
  return swift_arrayDestroy();
}

id SeymourAvailabilityProvider.addObserver(_:)(uint64_t a1)
{
  return sub_24A6B23B8(a1, (SEL *)&selRef_addObject_);
}

id SeymourAvailabilityProvider.removeObserver(_:)(uint64_t a1)
{
  return sub_24A6B23B8(a1, (SEL *)&selRef_removeObject_);
}

id sub_24A6B23B8(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  id *v5;

  v5 = (id *)(v2 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v5, *a2, a1);
}

id sub_24A6B2424(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id *v6;

  v6 = (id *)(a1 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v6, *a4, a3);
}

Swift::Void __swiftcall SeymourAvailabilityProvider.notifyObservers()()
{
  uint64_t v0;
  id *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t i;
  void *v7;

  v1 = (id *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  v2 = objc_msgSend(*v1, sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794ABB0);
  v3 = sub_24A77BB18();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v4 = sub_24A77C028();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = (_QWORD *)(v0 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
    swift_beginAccess();
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = (void *)MEMORY[0x24BD19588](i, v3);
      }
      else
      {
        v7 = *(void **)(v3 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v7, sel_availabilityDidUpdateWith_, *v5);
      swift_unknownObjectRelease();
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_24A6B261C(uint64_t a1@<X1>, uint64_t a2@<X2>, BOOL *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char v11;
  uint64_t v12;

  v6 = sub_24A778818();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = (void *)MEMORY[0x24BD1A368](a1 + 16);
  if (v10)
  {
    sub_24A77880C();
    v11 = sub_24A778E18();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_24A6B1DE8(a2, v11 & 1);

  }
  *a3 = v10 == 0;
}

id sub_24A6B2710(uint64_t a1, char *a2)
{
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  uint64_t v10;
  id v11;
  void *v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A780030;
  swift_getErrorValue();
  v4 = sub_24A77C1C0();
  v6 = v5;
  *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 64) = sub_24A66952C();
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = sub_24A77BC5C();
  sub_24A67B7C8((uint64_t)"Seymour Availability Provider failed with error: %@", 51, 2, v7, inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
  swift_arrayDestroy();
  v8 = &a2[OBJC_IVAR___NLSeymourAvailabilityProvider_availability];
  result = (id)swift_beginAccess();
  v10 = *(_QWORD *)v8;
  *(_QWORD *)v8 = 1;
  if (v10 != 1)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v12 = (void *)sub_24A77B980();
    objc_msgSend(v11, sel_setBool_forKey_, 0, v12);

    return objc_msgSend(a2, sel_notifyObservers);
  }
  return result;
}

uint64_t sub_24A6B289C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_24A778E24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794ABE0);
  return sub_24A778F44();
}

uint64_t sub_24A6B299C(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6B29E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))MEMORY[0x24BE8AD00]);
}

uint64_t sub_24A6B29CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A6B29E8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE8D7C8]);
}

uint64_t sub_24A6B29E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  swift_retain();
  return sub_24A778F44();
}

uint64_t sub_24A6B2AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_24A778E60();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  type metadata accessor for CatalogWorkoutDetailBridge();
  swift_retain();
  return sub_24A778F44();
}

void sub_24A6B2BE4(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  char v8;

  a3(&v7, a5);
  v6 = v7;
  v7 = v7;
  v8 = 0;
  a1(&v7);
  sub_24A68AD60((id)v6, 0);
}

void sub_24A6B2C5C(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  void *v6;
  void *v7;
  char v8;

  a3(&v7, a5);
  v6 = v7;
  v8 = 0;
  a1(&v7);
  sub_24A68AD60(v6, 0);
}

void sub_24A6B2CD4(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  void *v6;
  void *v7;
  char v8;

  a3(&v7, a5);
  v6 = v7;
  v8 = 0;
  a1(&v7);
  sub_24A68BDA8(v6);
}

uint64_t sub_24A6B2D4C()
{
  return objectdestroy_7Tm(&qword_257949808);
}

uint64_t sub_24A6B2D58(uint64_t a1, uint64_t a2)
{
  return sub_24A6B36AC(a1, a2, &qword_257949808, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_24A689D18);
}

uint64_t sub_24A6B2D6C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  v7 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794ABE0);
  return sub_24A778F44();
}

uint64_t sub_24A6B2DF4(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  v7 = a1;
  return sub_24A778F44();
}

uint64_t sub_24A6B2E78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6B2E9C(void *a1)
{
  uint64_t v1;

  return sub_24A6B2DF4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24A6B2EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24A6B2EC0(a1, a2, a3, a4, a5, &qword_257949500, (uint64_t)&unk_251BF8978, (uint64_t)sub_24A6B3298);
}

uint64_t sub_24A6B2EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  void (*v13)(uint64_t, _QWORD *);
  _QWORD *v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v13 = (void (*)(uint64_t, _QWORD *))sub_24A778F50();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a4;
  v14[5] = a5;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_24A6B2F64()
{
  return objectdestroy_7Tm(&qword_257949500);
}

uint64_t sub_24A6B2F70(uint64_t a1, uint64_t a2)
{
  return sub_24A6B37CC(a1, a2, &qword_257949500, (uint64_t)&unk_251BF8978, (uint64_t)sub_24A6B3298);
}

uint64_t sub_24A6B2F8C(void *a1, char a2, uint64_t (*a3)(void **, double), uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, void (*a10)(void *, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void *, uint64_t);
  void *v26;
  char v27;

  v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v25 = a10;
    v21 = a1;
    a5(a1);
    v22 = (void (*)(uint64_t, uint64_t))sub_24A778F50();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a3;
    *(_QWORD *)(v23 + 24) = a4;
    swift_retain();
    v22(a9, v23);
    swift_release();
    swift_release();
    v25(a1, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    v26 = a1;
    v27 = 0;
    return a3(&v26, v17);
  }
}

uint64_t sub_24A6B30CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_24A6B311C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___NLSeymourAvailabilityProvider_availability);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

id sub_24A6B3168@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___NLSeymourAvailabilityProvider_observers);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for SeymourAvailabilityProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SeymourAvailabilityProvider.availability.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SeymourAvailabilityProvider.observers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SeymourAvailabilityProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_24A6B3208()
{
  return objectdestroy_21Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE8B320]);
}

uint64_t sub_24A6B3214(uint64_t a1, uint64_t a2)
{
  return sub_24A6B3524(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE8B320], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_24A6B2CD4);
}

uint64_t sub_24A6B3228()
{
  return objectdestroy_21Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE8D7C8]);
}

void sub_24A6B3234(void (*a1)(void **), uint64_t a2)
{
  sub_24A6B3240(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE8D7C8]);
}

void sub_24A6B3240(void (*a1)(void **), uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  sub_24A6B2C5C(a1, a2, *(void (**)(void **__return_ptr, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v6 + 32) & ~v6));
}

uint64_t sub_24A6B3298(uint64_t a1)
{
  return sub_24A6B33C4(a1, &qword_257949500, (uint64_t)&unk_251BF89A0, (uint64_t)sub_24A68B610, (void (*)(void *, uint64_t))sub_24A68AD60);
}

void sub_24A6B32C4(void (*a1)(void **), uint64_t a2)
{
  uint64_t v2;

  sub_24A6B2C5C(a1, a2, *(void (**)(void **__return_ptr, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_24A6B32D0()
{
  return objectdestroy_21Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE8AD00]);
}

void sub_24A6B32DC(void (*a1)(void **), uint64_t a2)
{
  sub_24A6B3240(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE8AD00]);
}

void sub_24A6B32EC(BOOL *a1@<X8>)
{
  sub_24A6B3644(a1);
}

uint64_t sub_24A6B3300(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6B289C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24A6B3308()
{
  return objectdestroy_7Tm(&qword_257949818);
}

uint64_t sub_24A6B3314(uint64_t a1, uint64_t a2)
{
  return sub_24A6B36AC(a1, a2, &qword_257949818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_24A689C58);
}

void sub_24A6B3328(uint64_t a1)
{
  uint64_t v1;

  sub_24A6B1FB8(a1, v1);
}

uint64_t sub_24A6B3330@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

uint64_t sub_24A6B3368(void *a1)
{
  uint64_t v1;

  return sub_24A6B2D6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24A6B3370()
{
  return objectdestroy_7Tm(&qword_257949820);
}

uint64_t sub_24A6B337C(uint64_t a1, uint64_t a2)
{
  return sub_24A6B37CC(a1, a2, &qword_257949820, (uint64_t)&unk_251BF8B30, (uint64_t)sub_24A6B33A0);
}

uint64_t sub_24A6B33A0(uint64_t a1)
{
  return sub_24A6B33C4(a1, &qword_257949820, (uint64_t)&unk_251BF8B58, (uint64_t)sub_24A687E78, (void (*)(void *, uint64_t))sub_24A68AD60);
}

uint64_t sub_24A6B33C4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t))
{
  uint64_t v5;

  return sub_24A6B2F8C(*(void **)a1, *(_BYTE *)(a1 + 8), *(uint64_t (**)(void **, double))(v5 + 16), *(_QWORD *)(v5 + 24), *(void (**)(void *))(v5 + 32), *(_QWORD *)(v5 + 40), a2, a3, a4, a5);
}

uint64_t objectdestroy_34Tm_0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_24A6B343C(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  sub_24A6B2BE4(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

unint64_t sub_24A6B3448()
{
  unint64_t result;

  result = qword_25794ABE8;
  if (!qword_25794ABE8)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE8C278], MEMORY[0x24BE8C270]);
    atomic_store(result, (unint64_t *)&qword_25794ABE8);
  }
  return result;
}

uint64_t sub_24A6B348C()
{
  return objectdestroy_21Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE8AFB0]);
}

uint64_t objectdestroy_21Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_24A6B3510(uint64_t a1, uint64_t a2)
{
  return sub_24A6B3524(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE8AFB0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_24A6B2BE4);
}

uint64_t sub_24A6B3524(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, a2, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v4 + ((v7 + 32) & ~v7));
}

unint64_t sub_24A6B3584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794ABF0;
  if (!qword_25794ABF0)
  {
    v1 = sub_24A778DF4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE8AD10], v1);
    atomic_store(result, (unint64_t *)&qword_25794ABF0);
  }
  return result;
}

uint64_t objectdestroy_40Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_24A778DF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_24A6B3644(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A778DF4() - 8) + 80);
  sub_24A6B261C(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_24A6B36A0()
{
  return objectdestroy_7Tm(&qword_257949818);
}

uint64_t sub_24A6B36AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(v4 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a4(a1, a2, v4 + v8, *v9, v9[1]);
}

uint64_t sub_24A6B3720()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_24A6B3744(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6B2710(a1, *(char **)(v1 + 16));
}

uint64_t sub_24A6B374C()
{
  return objectdestroy_7Tm(&qword_257949820);
}

uint64_t objectdestroy_7Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6B37CC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;

  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (uint64_t *)(v5 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_24A6B2EC0(a1, a2, v5 + v12, *v13, v13[1], a3, a4, a5);
}

uint64_t sub_24A6B3874@<X0>(_BYTE *a1@<X8>)
{
  return sub_24A6B3330(a1);
}

void RingDetailView.init(ringType:value:goal:isWheelchairUser:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  KeyPath = swift_getKeyPath();
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  v12 = v11;
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  v14 = v13;
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)a3 = a1;
  *(double *)(a3 + 8) = a4;
  *(double *)(a3 + 16) = a5;
  *(_BYTE *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = KeyPath;
  *(_BYTE *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = v12;
  *(_QWORD *)(a3 + 56) = v14;
  *(_QWORD *)(a3 + 64) = v15;
}

uint64_t sub_24A6B3968()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = sub_24A778674();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v2 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v31 - v8;
  v11 = *(_QWORD *)(v0 + 8);
  v10 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 32);
  v13 = *(_BYTE *)(v0 + 40);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v14 = (id)qword_2544D6158;
  v15 = sub_24A77856C();
  v37 = v16;
  v38 = v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A780450;
  v40 = v11;
  sub_24A63BEC0(v12, v13);
  sub_24A77886C();
  v18 = sub_24A6971B4();
  v33 = v12;
  v31[1] = v18;
  sub_24A7785E4();
  sub_24A778668();
  v19 = v13;
  MEMORY[0x24BD15C34](v2, v4);
  v36 = *(_QWORD *)(v36 + 8);
  ((void (*)(char *, uint64_t))v36)(v2, v39);
  v20 = *(void (**)(char *, uint64_t))(v35 + 8);
  v20(v6, v4);
  v32 = v20;
  v35 = sub_24A63CFF0((unint64_t *)&qword_257949CD8, &qword_257949CC8, MEMORY[0x24BDCD4C0]);
  sub_24A77B8E4();
  v20(v9, v4);
  v21 = v33;
  sub_24A63BEDC(v33, v19);
  v22 = v6;
  v23 = v41;
  v24 = v42;
  *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE0D00];
  v34 = sub_24A66952C();
  *(_QWORD *)(v17 + 64) = v34;
  *(_QWORD *)(v17 + 32) = v23;
  *(_QWORD *)(v17 + 40) = v24;
  v40 = v10;
  sub_24A63BEC0(v21, v19);
  sub_24A77886C();
  sub_24A7785E4();
  sub_24A778668();
  MEMORY[0x24BD15C34](v2, v4);
  ((void (*)(char *, uint64_t))v36)(v2, v39);
  v25 = v32;
  v32(v22, v4);
  sub_24A77B8E4();
  v25(v9, v4);
  sub_24A63BEDC(v21, v19);
  v26 = v41;
  v27 = v42;
  v28 = v34;
  *(_QWORD *)(v17 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v17 + 104) = v28;
  *(_QWORD *)(v17 + 72) = v26;
  *(_QWORD *)(v17 + 80) = v27;
  v29 = sub_24A77B98C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t RingDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  _BYTE v48[32];
  _BYTE v49[24];
  char v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v46 = a1;
  v2 = sub_24A77AC24();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794ABF8);
  v6 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v43 - v10;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AC00);
  MEMORY[0x24BDAC7A8](v44);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[3];
  v54 = v1[2];
  v55 = v14;
  v56 = *((_QWORD *)v1 + 8);
  v15 = v1[1];
  v52 = *v1;
  v53 = v15;
  v16 = v54;
  v17 = BYTE8(v54);
  sub_24A6B49A8((uint64_t)&v52);
  sub_24A63E608(v16, v17, &v47);
  sub_24A6B49D4((uint64_t)&v52);
  if (v47 == 5)
  {
    *(_OWORD *)&v48[16] = v54;
    *(_OWORD *)v49 = v55;
    *(_QWORD *)&v49[16] = v56;
    v47 = v52;
    *(_OWORD *)v48 = v53;
    v18 = sub_24A6B3968();
    v20 = v19;
    v21 = v52;
    *(_QWORD *)&v47 = sub_24A6B41A0(SBYTE8(v53), v52);
    *((_QWORD *)&v47 + 1) = v22;
    sub_24A645928();
    v23 = sub_24A77BE54();
    v25 = v24;
    swift_bridgeObjectRelease();
    v26 = sub_24A6B4418(v21);
    *(_QWORD *)v13 = v18;
    *((_QWORD *)v13 + 1) = v20;
    *((_QWORD *)v13 + 2) = 0;
    *((_QWORD *)v13 + 3) = 0;
    *((_QWORD *)v13 + 4) = v23;
    *((_QWORD *)v13 + 5) = v25;
    *((_WORD *)v13 + 24) = 256;
    *((_QWORD *)v13 + 7) = v26;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949890);
    sub_24A68CA00();
    v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948F70);
    v28 = sub_24A63CFF0(&qword_257948F68, &qword_257948F70, MEMORY[0x24BDF4700]);
    *(_QWORD *)&v47 = v27;
    *((_QWORD *)&v47 + 1) = v28;
    swift_getOpaqueTypeConformance2();
    return sub_24A77AB28();
  }
  else
  {
    v30 = sub_24A77AA08();
    v31 = v56;
    sub_24A6B4560((uint64_t)&v52, (uint64_t *)&v47);
    v32 = v48[0];
    v33 = *(_QWORD *)&v48[8];
    v34 = v49[0];
    v35 = *(_QWORD *)&v49[8];
    v36 = v47;
    v37 = *(_OWORD *)&v48[16];
    *(_QWORD *)&v47 = v30;
    *((_QWORD *)&v47 + 1) = v31;
    v48[0] = 0;
    *(_OWORD *)&v48[8] = v36;
    v48[24] = v32;
    *(_QWORD *)v49 = v33;
    *(_OWORD *)&v49[8] = v37;
    v50 = v34;
    v51 = v35;
    sub_24A77AC18();
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F70);
    v38 = sub_24A63CFF0(&qword_257948F68, &qword_257948F70, MEMORY[0x24BDF4700]);
    sub_24A77B200();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v39 = *(_QWORD *)&v49[8];
    v40 = *(_QWORD *)&v49[16];
    v41 = v50;
    sub_24A64596C(*(uint64_t *)&v48[8], *(uint64_t *)&v48[16], v48[24]);
    swift_bridgeObjectRelease();
    sub_24A64596C(v39, v40, v41);
    swift_bridgeObjectRelease();
    v42 = v45;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v45);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v11, v42);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949890);
    sub_24A68CA00();
    *(_QWORD *)&v47 = v43;
    *((_QWORD *)&v47 + 1) = v38;
    swift_getOpaqueTypeConformance2();
    sub_24A77AB28();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v42);
  }
}

uint64_t sub_24A6B41A0(char a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  v2 = 0;
  switch(a2)
  {
    case 0:
      if ((a1 & 1) != 0)
      {
        if (qword_2544D6160 != -1)
          swift_once();
        goto LABEL_13;
      }
      if (qword_2544D6160 == -1)
        goto LABEL_13;
      goto LABEL_12;
    case 1:
      if (qword_2544D6160 == -1)
        goto LABEL_13;
      goto LABEL_12;
    case 2:
      if (qword_2544D6160 == -1)
        goto LABEL_13;
LABEL_12:
      swift_once();
LABEL_13:
      swift_beginAccess();
      v3 = (id)qword_2544D6158;
      v2 = sub_24A77856C();

      break;
    case 3:
      return v2;
    default:
      v2 = 0x6E776F6E6B6E55;
      break;
  }
  return v2;
}

uint64_t sub_24A6B4418(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  switch(a1)
  {
    case 0:
      v1 = objc_msgSend((id)objc_opt_self(), sel_sedentaryColors);
      if (!v1)
      {
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x24A6B4550);
      }
      v2 = v1;
      v3 = objc_msgSend(v1, sel_nonGradientTextColor);

      if (v3)
LABEL_17:
        JUMPOUT(0x24BD189B8);
      __break(1u);
      return sub_24A77B368();
    case 1:
      v5 = objc_msgSend((id)objc_opt_self(), sel_briskColors);
      if (!v5)
        goto LABEL_13;
      v6 = v5;
      v7 = objc_msgSend(v5, sel_nonGradientTextColor);

      if (v7)
        goto LABEL_17;
      __break(1u);
LABEL_9:
      v8 = objc_msgSend((id)objc_opt_self(), sel_energyColors);
      if (!v8)
        goto LABEL_14;
      v9 = v8;
      v10 = objc_msgSend(v8, sel_nonGradientTextColor);

      if (v10)
        goto LABEL_17;
      goto LABEL_15;
    case 2:
      goto LABEL_9;
    default:
      return sub_24A77B368();
  }
}

uint64_t sub_24A6B4560@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  void (*v59)(char *, uint64_t);
  unsigned int v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;

  v67 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 24);
  v57 = a1;
  v68 = sub_24A6B41A0(v6, v66);
  v69 = v7;
  v61 = sub_24A645928();
  v8 = sub_24A77BE54();
  v10 = v9;
  swift_bridgeObjectRelease();
  v68 = v8;
  v69 = v10;
  v11 = sub_24A77AFD8();
  v13 = v12;
  v15 = v14 & 1;
  v60 = *MEMORY[0x24BDF1668];
  v16 = v60;
  v17 = sub_24A77ADC8();
  v18 = *(_QWORD *)(v17 - 8);
  v59 = *(void (**)(char *, uint64_t))(v18 + 104);
  v19 = v16;
  v20 = v17;
  v56 = v17;
  v59(v5, v19);
  v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v58(v5, 0, 1, v20);
  sub_24A77AE1C();
  sub_24A64439C((uint64_t)v5);
  sub_24A77AD5C();
  swift_release();
  v21 = sub_24A77AF84();
  v23 = v22;
  LOBYTE(v20) = v24;
  swift_release();
  sub_24A64596C(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_24A77B368();
  v25 = sub_24A77B374();
  swift_release();
  v68 = v25;
  v26 = sub_24A77AF54();
  v64 = v27;
  v65 = v26;
  v63 = v28;
  v62 = v29 & 1;
  sub_24A64596C(v21, v23, v20 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v68 = sub_24A6B3968();
  v69 = v30;
  v31 = sub_24A77AFD8();
  v33 = v32;
  v35 = v34 & 1;
  sub_24A77AE04();
  v36 = v56;
  ((void (*)(char *, _QWORD, uint64_t))v59)(v5, v60, v56);
  v58(v5, 0, 1, v36);
  sub_24A77AE1C();
  sub_24A64439C((uint64_t)v5);
  sub_24A77AD5C();
  swift_release();
  sub_24A77AE7C();
  swift_release();
  v37 = sub_24A77AF84();
  v39 = v38;
  v41 = v40;
  swift_release();
  LOBYTE(v21) = v41 & 1;
  sub_24A64596C(v31, v33, v35);
  swift_bridgeObjectRelease();
  sub_24A6B4418(v66);
  v42 = sub_24A77AF48();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  swift_release();
  sub_24A64596C(v37, v39, v21);
  swift_bridgeObjectRelease();
  v49 = v62;
  LOBYTE(v68) = v62;
  v50 = v67;
  v51 = v64;
  v52 = v65;
  v53 = v63;
  *v67 = v65;
  v50[1] = v53;
  *((_BYTE *)v50 + 16) = v49;
  v50[3] = v51;
  v50[4] = v42;
  v50[5] = v44;
  *((_BYTE *)v50 + 48) = v46 & 1;
  v50[7] = v48;
  sub_24A6436C4(v52, v53, v49);
  swift_bridgeObjectRetain();
  sub_24A6436C4(v42, v44, v46 & 1);
  swift_bridgeObjectRetain();
  sub_24A64596C(v42, v44, v46 & 1);
  swift_bridgeObjectRelease();
  sub_24A64596C(v52, v53, v68);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6B49A8(uint64_t a1)
{
  sub_24A63BEC0(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t sub_24A6B49D4(uint64_t a1)
{
  sub_24A63BEDC(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t sub_24A6B4A00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for RingDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  sub_24A63BEC0(v4, v5);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for RingDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  sub_24A63BEC0(v4, v5);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  sub_24A63BEDC(v6, v7);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for RingDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  sub_24A63BEDC(v6, v7);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for RingDetailView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RingDetailView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RingDetailView()
{
  return &type metadata for RingDetailView;
}

unint64_t sub_24A6B4C30()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[4];

  result = qword_25794AC08;
  if (!qword_25794AC08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794AC10);
    v2 = sub_24A68CA00();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948F70);
    v3[3] = sub_24A63CFF0(&qword_257948F68, &qword_257948F70, MEMORY[0x24BDF4700]);
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794AC08);
  }
  return result;
}

uint64_t CatalogLockupBridge.catalogLockup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___SMCatalogLockup_catalogLockup;
  v4 = sub_24A778C2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CatalogLockupBridge.mediaTagStringBuilder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A67BC90(v1 + OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder, a1);
}

id CatalogLockupBridge.__allocating_init(catalogLockup:mediaTagStringBuilder:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___SMCatalogLockup_catalogLockup];
  v7 = sub_24A778C2C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  sub_24A67BC90(a2, (uint64_t)&v5[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder]);
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id CatalogLockupBridge.init(catalogLockup:mediaTagStringBuilder:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v5 = &v2[OBJC_IVAR___SMCatalogLockup_catalogLockup];
  v6 = sub_24A778C2C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  sub_24A67BC90(a2, (uint64_t)&v2[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder]);
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for CatalogLockupBridge();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for CatalogLockupBridge()
{
  uint64_t result;

  result = qword_25794AC68;
  if (!qword_25794AC68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A6B4F00()
{
  return sub_24A6B5074(MEMORY[0x24BE890C0]);
}

uint64_t sub_24A6B4F18()
{
  return sub_24A6B5074(MEMORY[0x24BE88FE0]);
}

id sub_24A6B4F30(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v12;

  v5 = sub_24A779B50();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(&a1[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder], *(_QWORD *)&a1[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder + 24]);
  v9 = a1;
  a3();
  sub_24A779B20();
  v10 = (void *)sub_24A779AD8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v10;
}

uint64_t sub_24A6B5068()
{
  return sub_24A6B5074(MEMORY[0x24BE88FB0]);
}

uint64_t sub_24A6B5074(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_24A779B50();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder), *(_QWORD *)(v1 + OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder + 24));
  a1();
  sub_24A779B20();
  v7 = sub_24A779AD8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_24A6B51A0()
{
  return sub_24A778BB4();
}

id sub_24A6B51F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  objc_class *v15;
  char *v16;
  id v17;
  void (*v18)(char *, uint64_t);
  objc_super v20;

  v0 = sub_24A778ED8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A778D64();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A778F38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - v12;
  sub_24A778BF0();
  sub_24A778D58();
  sub_24A6B53B8((uint64_t)v6);
  sub_24A778ECC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v10, v13, v7);
  v15 = (objc_class *)type metadata accessor for ArtworkBridge();
  v16 = (char *)objc_allocWithZone(v15);
  v14(&v16[OBJC_IVAR___SMArtwork_artwork], v10, v7);
  v20.receiver = v16;
  v20.super_class = v15;
  v17 = objc_msgSendSuper2(&v20, sel_init);
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  v18(v13, v7);
  return v17;
}

uint64_t sub_24A6B53B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A778D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_24A6B5424()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  v0 = sub_24A778C20();
  if (v2 == 0xFF)
    return 0;
  if ((v2 & 1) == 0)
  {
    sub_24A6B548C(v0, v1, v2);
    return 0;
  }
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v0 + 1);
}

uint64_t sub_24A6B548C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_24A683100(result, a2, a3 & 1);
  return result;
}

uint64_t sub_24A6B54A4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  v0 = sub_24A778C20();
  if (v2 != 0xFF)
  {
    if ((v2 & 1) != 0)
      __asm { BR              X10 }
    sub_24A6B548C(v0, v1, v2);
  }
  return 0;
}

void sub_24A6B5514()
{
  JUMPOUT(0x24A6B54E4);
}

void sub_24A6B5520()
{
  JUMPOUT(0x24A6B54E4);
}

void sub_24A6B552C()
{
  JUMPOUT(0x24A6B54E4);
}

uint64_t sub_24A6B5568()
{
  char v0;
  char v1;

  v0 = sub_24A778BE4();
  if (v1 == -1)
    return 5;
  if ((v1 & 1) != 0)
    return qword_24A783648[v0];
  return 6;
}

unint64_t sub_24A6B55F0()
{
  char v0;
  unint64_t result;

  sub_24A778BCC();
  if (v0 == -1 || (v0 & 1) == 0)
    return 2;
  result = sub_24A778AA0();
  if (result >= 2)
    return 2;
  return result;
}

id sub_24A6B5658(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A6B5728()
{
  return sub_24A778BC0();
}

id CatalogLockupBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CatalogLockupBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CatalogLockupBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogLockupBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static CatalogLockupBridge.guidedWalkCanonical(mediaTagStringBuilder:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, char *, uint64_t);
  objc_class *v52;
  char *v53;
  id v54;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  objc_super v65;
  _BYTE v66[40];

  v62 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AC18);
  MEMORY[0x24BDAC7A8](v1);
  v61 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v64 = (uint64_t)&v56 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CB0);
  MEMORY[0x24BDAC7A8](v5);
  v63 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AC20);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AC28);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AC30);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v56 - v20;
  v57 = (char *)&v56 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AC38);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v24;
  v25 = sub_24A778C2C();
  v26 = *(_QWORD *)(v25 - 8);
  v59 = v25;
  v60 = v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v56 - v30;
  sub_24A778C14();
  v32 = sub_24A778D64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v24, 1, 1, v32);
  v33 = sub_24A778818();
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v34(v21, 1, 1, v33);
  v35 = sub_24A778DE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v15, 1, 1, v35);
  v34(v18, 1, 1, v33);
  v36 = sub_24A778AC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v12, 1, 1, v36);
  v37 = sub_24A778F38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v9, 1, 1, v37);
  v38 = sub_24A7786B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v63, 1, 1, v38);
  v39 = sub_24A778C44();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v40(v64, 1, 1, v39);
  v41 = (uint64_t)v61;
  v40((uint64_t)v61, 1, 1, v39);
  v42 = (uint64_t)v9;
  v43 = (uint64_t)v18;
  v44 = v31;
  v45 = (uint64_t)v57;
  v46 = (uint64_t)v58;
  v47 = (uint64_t)v56;
  sub_24A778C08();
  sub_24A63CD04(v41, &qword_25794AC18);
  sub_24A63CD04(v64, &qword_25794AC18);
  sub_24A63CD04(v63, &qword_257949CB0);
  sub_24A63CD04(v42, &qword_25794AC20);
  sub_24A63CD04((uint64_t)v12, &qword_25794AC28);
  sub_24A63CD04(v43, &qword_2579478E8);
  sub_24A63CD04(v47, &qword_25794AC30);
  sub_24A63CD04(v45, &qword_2579478E8);
  sub_24A63CD04(v46, &qword_25794AC38);
  v49 = v59;
  v48 = v60;
  v50 = *(void (**)(char *, uint64_t))(v60 + 8);
  v50(v28, v59);
  v51 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v51(v28, v44, v49);
  sub_24A67BC90(v62, (uint64_t)v66);
  v52 = (objc_class *)type metadata accessor for CatalogLockupBridge();
  v53 = (char *)objc_allocWithZone(v52);
  v51(&v53[OBJC_IVAR___SMCatalogLockup_catalogLockup], v28, v49);
  sub_24A67BC90((uint64_t)v66, (uint64_t)&v53[OBJC_IVAR___SMCatalogLockup_mediaTagStringBuilder]);
  v65.receiver = v53;
  v65.super_class = v52;
  v54 = objc_msgSendSuper2(&v65, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  v50(v28, v49);
  v50(v44, v49);
  return v54;
}

uint64_t sub_24A6B5E08()
{
  return type metadata accessor for CatalogLockupBridge();
}

uint64_t sub_24A6B5E10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778C2C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CatalogLockupBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CatalogLockupBridge.__allocating_init(catalogLockup:mediaTagStringBuilder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CatalogLockupBridge.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CatalogLockupBridge.subtitle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CatalogLockupBridge.detail.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CatalogLockupBridge.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CatalogLockupBridge.artwork.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CatalogLockupBridge.mediaTypeRawValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CatalogLockupBridge.mediaType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CatalogLockupBridge.assetLoadStatus.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CatalogLockupBridge.bundleReason.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CatalogLockupBridge.recencyTag.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t OvernightMetricsViewModel.overnightVitalsState.getter@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;
  char v5;

  result = sub_24A779FDC();
  if ((result & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    result = sub_24A779FD0();
    if (result)
      v4 = 3;
    else
      v4 = 2;
    if ((v3 & 1) != 0)
      v5 = 1;
    else
      v5 = v4;
  }
  *a1 = v5;
  return result;
}

uint64_t WorkoutTypeImage.init(workoutType:iconSize:color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

double WorkoutTypeImage.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  double result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  __int128 v21;

  v3 = sub_24A77B3D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = (id)FIUIStaticScalableWorkoutIconImage();
  if (!v8)
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  FIUIIconSize();
  v9 = objc_msgSend(v8, sel_imageWithRenderingMode_, 2);
  sub_24A77B3BC();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF3FD0], v3);
  v10 = sub_24A77B41C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  KeyPath = swift_getKeyPath();
  swift_retain();
  sub_24A77B668();
  sub_24A77A4B0();
  v12 = v17;
  v13 = v18;
  v14 = v19;
  v15 = v20;

  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = KeyPath;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v12;
  *(_BYTE *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v14;
  *(_BYTE *)(a1 + 64) = v15;
  result = *(double *)&v21;
  *(_OWORD *)(a1 + 72) = v21;
  return result;
}

uint64_t sub_24A6B61FC()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_24A6B6210(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WorkoutTypeImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WorkoutTypeImage(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutTypeImage()
{
  return &type metadata for WorkoutTypeImage;
}

unint64_t sub_24A6B6304()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794AC78;
  if (!qword_25794AC78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794AC80);
    v2[0] = sub_24A6B6370();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794AC78);
  }
  return result;
}

unint64_t sub_24A6B6370()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794AC88;
  if (!qword_25794AC88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794AC90);
    v2[0] = sub_24A6B63DC();
    v2[1] = sub_24A6AE280();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794AC88);
  }
  return result;
}

unint64_t sub_24A6B63DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2579487A0;
  if (!qword_2579487A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579487A8);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2579487A0);
  }
  return result;
}

unint64_t HKWorkoutActivityType.accessibilityIdentifier.getter()
{
  id v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = (id)_HKWorkoutActivityNameForActivityType();
  if (!v0)
    return 0xD000000000000010;
  v1 = v0;
  v2 = sub_24A77B9B0();
  v4 = v3;

  if ((sub_24A77BAA0() & 1) != 0)
  {
    v5 = sub_24A77BA28();
    v6 = sub_24A667670(v5, v2, v4);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x24BD19018](v6, v8, v10, v12);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t *sub_24A6B6538(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_24A778818();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)v4 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)v4 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24A6B660C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24A6B6670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_24A6B671C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24A6B67FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_24A6B6884(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_24A6B6938()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6B6944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_24A778818();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24A6B69C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6B69D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24A778818();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TrainingLoadDayEntry()
{
  uint64_t result;

  result = qword_2544D6168;
  if (!qword_2544D6168)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A6B6A88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778818();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A6B6B14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_24A778818();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CurrentStepMetricView.init(intervalsMetricsPublisher:workoutStatePublisher:step:formattingManager:activityType:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_24A77997C();
  sub_24A63C880(&qword_257946FB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5FA0], MEMORY[0x24BEC5F98]);
  swift_retain();
  v8 = sub_24A77A57C();
  v10 = v9;
  sub_24A779208();
  sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
  v11 = sub_24A77A57C();
  v13 = v12;
  result = swift_release();
  *a4 = v8;
  a4[1] = v10;
  a4[2] = v11;
  a4[3] = v13;
  a4[4] = a1;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

void sub_24A6B6C40()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v0 = (void *)sub_24A7792F8();
  v1 = objc_msgSend(v0, sel_goalTypeIdentifier);

  if (v1 == (id)1
    && (v2 = (void *)sub_24A7792F8(),
        v3 = objc_msgSend(v2, sel_value),
        v2,
        v3))
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_meterUnit);
    objc_msgSend(v3, sel_doubleValueForUnit_, v4);

    swift_retain();
    sub_24A779940();
    swift_release();

  }
  else
  {
    sub_24A77C01C();
    __break(1u);
  }
}

void sub_24A6B6D80()
{
  void *v0;
  char v1;
  void *v2;
  id v3;
  id v4;

  v0 = (void *)sub_24A7792F8();
  v1 = sub_24A77BD58();

  if ((v1 & 1) != 0
    && (v2 = (void *)sub_24A7792F8(),
        v3 = objc_msgSend(v2, sel_requiredDistance),
        v2,
        v3))
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_meterUnit);
    objc_msgSend(v3, sel_doubleValueForUnit_, v4);

    swift_retain();
    sub_24A779940();
    swift_release();

  }
  else
  {
    sub_24A77C01C();
    __break(1u);
  }
}

uint64_t CurrentStepMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v57 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v46 - v5;
  v56 = type metadata accessor for IntervalTimeMetricView();
  MEMORY[0x24BDAC7A8](v56);
  v48 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v52 = (uint64_t)&v46 - v8;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AC98);
  MEMORY[0x24BDAC7A8](v53);
  v55 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for DistanceRemainingMetricView();
  MEMORY[0x24BDAC7A8](v54);
  v11 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v51 = (char *)&v46 - v13;
  v15 = *v1;
  v14 = v1[1];
  v16 = v1[2];
  v17 = v1[3];
  v19 = v1[4];
  v18 = (char *)v1[5];
  v20 = v1[6];
  v21 = (void *)sub_24A7792F8();
  v22 = objc_msgSend(v21, sel_goalTypeIdentifier);

  if (v22 == (id)1)
  {
    v58 = v15;
    v59 = v14;
    v60 = v16;
    v61 = v17;
    v62 = v19;
    v63 = (uint64_t)v18;
    v64 = v20;
    sub_24A6B6C40();
    v24 = v23;
    v25 = (void *)sub_24A7792F8();
    v26 = objc_msgSend(v25, sel_value);

    if (!v26 || (v27 = objc_msgSend(v26, sel__unit), v26, !v27))
      v27 = objc_msgSend((id)objc_opt_self(), sel_meterUnit);
    v28 = v54;
    sub_24A779304();
    v29 = v18;
    v30 = FIUIDistanceTypeForActivityType();
    *v11 = v24;
    v11[1] = v27;
    *(_QWORD *)((char *)v11 + *(int *)(v28 + 28)) = v29;
    *(_QWORD *)((char *)v11 + *(int *)(v28 + 32)) = v30;
    v31 = (uint64_t)v51;
    sub_24A65FA8C((uint64_t)v11, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for DistanceRemainingMetricView);
    sub_24A65FAD0(v31, v55, (uint64_t (*)(_QWORD))type metadata accessor for DistanceRemainingMetricView);
    swift_storeEnumTagMultiPayload();
    sub_24A63C880(&qword_25794ACA0, (uint64_t (*)(uint64_t))type metadata accessor for DistanceRemainingMetricView, (uint64_t)&unk_24A78871C);
    sub_24A63C880(&qword_25794ACA8, (uint64_t (*)(uint64_t))type metadata accessor for IntervalTimeMetricView, (uint64_t)&unk_24A783B90);
    sub_24A77AB28();
    v32 = v31;
    v33 = type metadata accessor for DistanceRemainingMetricView;
  }
  else
  {
    v46 = v15;
    v47 = v16;
    v51 = v18;
    swift_retain();
    swift_retain();
    v34 = (uint64_t)v49;
    sub_24A779958();
    swift_release();
    swift_retain();
    v35 = sub_24A7791C0();
    swift_release();
    swift_retain();
    v36 = (uint64_t)v50;
    sub_24A7791F0();
    swift_release();
    v37 = (void *)sub_24A7792F8();
    v38 = sub_24A77BD58();

    v39 = 0;
    if ((v38 & 1) != 0)
    {
      v58 = v46;
      v59 = v14;
      v60 = v47;
      v61 = v17;
      v62 = v19;
      v63 = (uint64_t)v51;
      v64 = v20;
      sub_24A6B6D80();
      v39 = v40;
    }
    v41 = (uint64_t)v48;
    *v48 = v19;
    v42 = (int *)v56;
    sub_24A6B7398(v34, v41 + *(int *)(v56 + 20));
    *(_QWORD *)(v41 + v42[6]) = v35;
    sub_24A6B7398(v36, v41 + v42[7]);
    v43 = v41 + v42[8];
    *(_QWORD *)v43 = v39;
    *(_BYTE *)(v43 + 8) = (v38 & 1) == 0;
    v44 = v52;
    sub_24A65FA8C(v41, v52, (uint64_t (*)(_QWORD))type metadata accessor for IntervalTimeMetricView);
    sub_24A65FAD0(v44, v55, (uint64_t (*)(_QWORD))type metadata accessor for IntervalTimeMetricView);
    swift_storeEnumTagMultiPayload();
    sub_24A63C880(&qword_25794ACA0, (uint64_t (*)(uint64_t))type metadata accessor for DistanceRemainingMetricView, (uint64_t)&unk_24A78871C);
    sub_24A63C880(&qword_25794ACA8, (uint64_t (*)(uint64_t))type metadata accessor for IntervalTimeMetricView, (uint64_t)&unk_24A783B90);
    sub_24A77AB28();
    v32 = v44;
    v33 = type metadata accessor for IntervalTimeMetricView;
  }
  return sub_24A65FB14(v32, (uint64_t (*)(_QWORD))v33);
}

uint64_t sub_24A6B7398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6B73E0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CurrentStepMetricView()
{
  return &type metadata for CurrentStepMetricView;
}

unint64_t sub_24A6B7404()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794ACB0;
  if (!qword_25794ACB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794ACB8);
    v2[0] = sub_24A63C880(&qword_25794ACA0, (uint64_t (*)(uint64_t))type metadata accessor for DistanceRemainingMetricView, (uint64_t)&unk_24A78871C);
    v2[1] = sub_24A63C880(&qword_25794ACA8, (uint64_t (*)(uint64_t))type metadata accessor for IntervalTimeMetricView, (uint64_t)&unk_24A783B90);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794ACB0);
  }
  return result;
}

uint64_t RepeatRowView.init(repeatCount:referenceRepeatCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5 & 1;
  return result;
}

void sub_24A6B74B4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  v1 = sub_24A77856C();
  v3 = v2;

  qword_2579598F0 = v1;
  *(_QWORD *)algn_2579598F8 = v3;
}

uint64_t RepeatRowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  char v27;

  v25 = a1;
  v24 = sub_24A77AE70();
  v2 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77AD50();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A77AEB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794ACC0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_OWORD *)(v1 + 16);
  v26[0] = *(_OWORD *)v1;
  v26[1] = v16;
  v27 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)v15 = sub_24A77A930();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794ACC8);
  sub_24A6B77EC((uint64_t)v26, (uint64_t)&v15[*(int *)(v17 + 44)]);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDF1878], v9);
  sub_24A77AD44();
  sub_24A77ADF8();
  sub_24A77AE28();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDF17C8], v24);
  v19 = sub_24A77AE88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  KeyPath = swift_getKeyPath();
  v21 = v25;
  sub_24A63CCC0((uint64_t)v15, v25, &qword_25794ACC0);
  v22 = (uint64_t *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794ACD0) + 36));
  *v22 = KeyPath;
  v22[1] = v19;
  return sub_24A63CD04((uint64_t)v15, &qword_25794ACC0);
}

uint64_t sub_24A6B77EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794ACE8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794ACF0);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - v10;
  if (qword_2579469A0 != -1)
    swift_once();
  v26 = qword_2579598F0;
  v27 = *(_QWORD *)algn_2579598F8;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v12 = sub_24A77AFD8();
  v14 = v13;
  v24 = v15;
  v17 = v16 & 1;
  *(_QWORD *)v6 = sub_24A77A930();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794ACF8);
  sub_24A6B7A84(a1, (uint64_t)&v6[*(int *)(v18 + 44)]);
  v19 = MEMORY[0x24BD189B8](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.607843137, 0.431372549, 0.980392157, 1.0));
  KeyPath = swift_getKeyPath();
  sub_24A63CCC0((uint64_t)v6, (uint64_t)v8, &qword_25794ACE8);
  v21 = (uint64_t *)&v8[*(int *)(v25 + 36)];
  *v21 = KeyPath;
  v21[1] = v19;
  sub_24A63CD04((uint64_t)v6, &qword_25794ACE8);
  sub_24A63F6C4((uint64_t)v8, (uint64_t)v11, &qword_25794ACF0);
  sub_24A63CCC0((uint64_t)v11, (uint64_t)v8, &qword_25794ACF0);
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v24;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AD00);
  sub_24A63CCC0((uint64_t)v8, a2 + *(int *)(v22 + 64), &qword_25794ACF0);
  sub_24A6436C4(v12, v14, v17);
  swift_bridgeObjectRetain();
  sub_24A63CD04((uint64_t)v11, &qword_25794ACF0);
  sub_24A63CD04((uint64_t)v8, &qword_25794ACF0);
  sub_24A64596C(v12, v14, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6B7A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _BYTE v61[16];
  uint64_t v62;
  char v63;

  v54 = (_QWORD *)a1;
  v55 = a2;
  v2 = sub_24A77A9B4();
  MEMORY[0x24BDAC7A8](v2);
  v53[1] = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_QWORD *)((char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_24A77B410();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (_QWORD *)((char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v53 - v15;
  v17 = sub_24A77B3C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDF40B8], v7);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 28), v10, v7);
  *v6 = KeyPath;
  sub_24A63CCC0((uint64_t)v6, (uint64_t)v13 + *(int *)(v11 + 36), &qword_2579492E8);
  *v13 = v17;
  swift_retain();
  v19 = (uint64_t)v6;
  v20 = (uint64_t)v54;
  sub_24A63CD04(v19, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  v21 = (uint64_t)v16;
  sub_24A63F6C4((uint64_t)v13, (uint64_t)v16, &qword_2579492F0);
  sub_24A63F6C4(v20 + 24, (uint64_t)v61, &qword_25794AD08);
  sub_24A63F6C4((uint64_t)v61, (uint64_t)&v62, &qword_25794AD08);
  v56 = 0;
  v57 = 0;
  v22 = 0;
  v23 = 0;
  if ((v63 & 1) == 0)
  {
    v24 = v62;
    v59 = *(_OWORD *)v20;
    v60 = *(_QWORD *)(v20 + 16);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AD10);
    MEMORY[0x24BD18B74](&v58, v25);
    if (v24 == v58)
    {
      v56 = 0;
      v57 = 0;
      v22 = 0;
      v23 = 0;
    }
    else
    {
      sub_24A77A9A8();
      sub_24A77A99C();
      *(_QWORD *)&v59 = v24;
      sub_24A77A978();
      sub_24A77A99C();
      sub_24A77A9CC();
      v26 = sub_24A77AFC0();
      v28 = v27;
      v30 = v29 & 1;
      v31 = sub_24A77AF3C();
      v22 = v32;
      v23 = v33;
      v56 = v34 & 1;
      v57 = v31;
      sub_24A64596C(v26, v28, v30);
      swift_bridgeObjectRelease();
    }
  }
  sub_24A77A9A8();
  sub_24A77A99C();
  v59 = *(_OWORD *)v20;
  v60 = *(_QWORD *)(v20 + 16);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AD10);
  MEMORY[0x24BD18B74](&v58, v35);
  sub_24A77A978();
  sub_24A77A99C();
  sub_24A77A9CC();
  v36 = sub_24A77AFC0();
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  sub_24A63CCC0(v21, (uint64_t)v13, &qword_2579492F0);
  v43 = (uint64_t)v13;
  v54 = v13;
  v44 = v55;
  sub_24A63CCC0(v43, v55, &qword_2579492F0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(qword_25794AD18);
  v46 = (uint64_t *)(v44 + *(int *)(v45 + 48));
  v47 = v23;
  v48 = v22;
  v49 = v56;
  v50 = v57;
  *v46 = v57;
  v46[1] = v48;
  v46[2] = v49;
  v46[3] = v47;
  v51 = v44 + *(int *)(v45 + 64);
  *(_QWORD *)v51 = v36;
  *(_QWORD *)(v51 + 8) = v38;
  *(_BYTE *)(v51 + 16) = v42;
  *(_QWORD *)(v51 + 24) = v40;
  sub_24A6B8208(v50, v48, v49, v47);
  sub_24A6436C4(v36, v38, v42);
  swift_bridgeObjectRetain();
  sub_24A63CD04(v21, &qword_2579492F0);
  sub_24A64596C(v36, v38, v42);
  swift_bridgeObjectRelease();
  sub_24A6B8238(v50, v48, v49, v47);
  return sub_24A63CD04((uint64_t)v54, &qword_2579492F0);
}

uint64_t sub_24A6B7FA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for RepeatRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RepeatRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for RepeatRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepeatRowView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepeatRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepeatRowView()
{
  return &type metadata for RepeatRowView;
}

unint64_t sub_24A6B815C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794ACD8;
  if (!qword_25794ACD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794ACD0);
    v2[0] = sub_24A63CFF0(&qword_25794ACE0, &qword_25794ACC0, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794ACD8);
  }
  return result;
}

uint64_t sub_24A6B8208(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24A6436C4(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24A6B8238(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24A64596C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24A6B8268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

void AlignedLeadingAccessoryContentView.init(alignment:leadingAccessory:content:)(uint64_t a1, void (*a2)(void))
{
  a2();
  type metadata accessor for AlignedLeadingAccessoryContentView();
}

uint64_t sub_24A6B82DC(uint64_t a1)
{
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = v1();
  *(_QWORD *)(v3 + *(int *)(a1 + 56)) = 0x4022000000000000;
  *(_QWORD *)(v3 + *(int *)(a1 + 60)) = v2;
  return result;
}

void type metadata accessor for AlignedLeadingAccessoryContentView()
{
  JUMPOUT(0x24BD1A14CLL);
}

void AlignedLeadingAccessoryContentView.init(spacing:alignment:leadingAccessory:content:)(uint64_t a1, void (*a2)(void))
{
  a2();
  type metadata accessor for AlignedLeadingAccessoryContentView();
}

uint64_t sub_24A6B8394(uint64_t a1)
{
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = v1();
  *(_QWORD *)(v3 + *(int *)(a1 + 56)) = v4;
  *(_QWORD *)(v3 + *(int *)(a1 + 60)) = v2;
  return result;
}

uint64_t AlignedLeadingAccessoryContentView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[2];

  v22 = a2;
  v20 = *(_QWORD *)(a1 + 16);
  sub_24A77A5F4();
  v19 = *(_QWORD *)(a1 + 24);
  swift_getTupleTypeMetadata2();
  v4 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v4);
  v5 = sub_24A77B4D0();
  v21 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - v6;
  v8 = sub_24A77A5F4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - v13;
  v23 = v20;
  v24 = v19;
  v25 = *(_OWORD *)(a1 + 32);
  v26 = v2;
  sub_24A77B4C4();
  sub_24A77B674();
  v18 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v5);
  sub_24A77B278();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  v27[0] = v18;
  v27[1] = MEMORY[0x24BDEDBB8];
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v27);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v14, v11, v8);
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  v15(v22, v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v8);
}

void sub_24A6B8644(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v19[0] = a1;
  v23 = a6;
  v9 = *(_QWORD *)(a3 - 8);
  v20 = a5;
  v21 = v9;
  MEMORY[0x24BDAC7A8](a1);
  v22 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_24A77A5F4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v19 - v17;
  sub_24A77B668();
  sub_24A77B26C();
  v28[0] = a4;
  v28[1] = MEMORY[0x24BDEBEE0];
  v19[1] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v12, v28);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v27 = v20;
  type metadata accessor for AlignedLeadingAccessoryContentView();
}

uint64_t sub_24A6B87B8(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v10 = *(_QWORD *)(v9 - 184);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v11(v5, *(_QWORD *)(v9 - 208) + *(int *)(a1 + 52), v1);
  v3(v6, v7, v4);
  *(_QWORD *)(v9 - 128) = v6;
  v12 = *(_QWORD *)(v9 - 176);
  v11(v12, v5, v1);
  *(_QWORD *)(v9 - 120) = v12;
  v13 = v12;
  *(_QWORD *)(v9 - 144) = v4;
  *(_QWORD *)(v9 - 136) = v1;
  *(_QWORD *)(v9 - 160) = *(_QWORD *)(v9 - 200);
  *(_QWORD *)(v9 - 152) = v8;
  sub_24A66AB50((uint64_t *)(v9 - 128), 2uLL, v9 - 144);
  v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v14(v5, v1);
  v2(v7, v4);
  v14(v13, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v2)(v6, v4);
}

void sub_24A6B8880(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_24A6B8644(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_24A6B8890()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6B88C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24A6B8964(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
    v17 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((v10 + v16) & 0xFFFFFFFFFFFFF8);
    *v17 = *v18;
    *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_24A6B8A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A6B8B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A6B8BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A6B8C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A6B8D18(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  if (v8 >= a2)
  {
    if (v8)
    {
      if (v5 >= v7)
        return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(a1, *(unsigned int *)(v4 + 84));
      else
        return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
    }
    return 0;
  }
  if (((((((*(_QWORD *)(v6 + 64) + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v11 = 2;
  else
    v11 = a2 - v8 + 1;
  if (v11 >= 0x10000)
    v12 = 4;
  else
    v12 = 2;
  if (v11 < 0x100)
    v12 = 1;
  if (v11 >= 2)
    v13 = v12;
  else
    v13 = 0;
  return ((uint64_t (*)(void))((char *)&loc_24A6B8DBC + 4 * byte_24A783940[v13]))();
}

void sub_24A6B8E40(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X16 }
  }
  if (((((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((*(_QWORD *)(v6 + 64) + ((*(_QWORD *)(v5 + 64) + v8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_24A6B8F60()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_24A6B8F68(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24A6B8F70);
}

void sub_24A6B8FAC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_24A6B8FB4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_24A6B8FBC(uint64_t a1, int a2, unsigned int a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_WORD *)(v9 + v10) = 0;
  if (!a2)
    JUMPOUT(0x24A6B8FC4);
  if (v4 >= a3)
    return (*(uint64_t (**)(uint64_t))(v7 + 56))(v9);
  else
    return (*(uint64_t (**)(uint64_t))(v6 + 56))((v8 + v9) & v5);
}

uint64_t sub_24A6B8FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v0 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v0);
  v1 = sub_24A77B4D0();
  v2 = sub_24A77A5F4();
  v4[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v1);
  v4[1] = MEMORY[0x24BDEDBB8];
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

uint64_t *sub_24A6B90A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *DayEntry;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A778818();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
    v9 = DayEntry[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = DayEntry[6];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v16 = *v14;
    v15 = v14[1];
    *v13 = v16;
    v13[1] = v15;
    v17 = DayEntry[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + DayEntry[8]) = *(uint64_t *)((char *)a2 + DayEntry[8]);
    v21 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_24A77B848();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v26 = a3[7];
    v27 = (uint64_t *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_24A77A66C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A6B929C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for TrainingLoadDayEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_24A77B848();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v8 = sub_24A77A66C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_24A6B93BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = DayEntry[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  v16 = DayEntry[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  v20 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_24A77B848();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v24 = a3[7];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = sub_24A77A66C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24A6B9584(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = DayEntry[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = DayEntry[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  if (a1 != a2)
  {
    v18 = a3[6];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_24A63CD04(a1 + v18, &qword_257946D38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_24A77B848();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = a3[7];
    v23 = (_QWORD *)(a1 + v22);
    v24 = (_QWORD *)(a2 + v22);
    sub_24A63CD04(a1 + v22, &qword_257946D30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_24A77A66C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A6B979C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + DayEntry[6]) = *(_OWORD *)(a2 + DayEntry[6]);
  *(_OWORD *)(a1 + DayEntry[7]) = *(_OWORD *)(a2 + DayEntry[7]);
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  v11 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_24A77B848();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_24A77A66C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24A6B9934(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *DayEntry;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  DayEntry = (int *)type metadata accessor for TrainingLoadDayEntry();
  v8 = DayEntry[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = DayEntry[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = DayEntry[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + DayEntry[8]) = *(_QWORD *)(a2 + DayEntry[8]);
  swift_release();
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  if (a1 != a2)
  {
    v21 = a3[6];
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_24A63CD04(a1 + v21, &qword_257946D38);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_24A77B848();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    v26 = a3[7];
    v27 = (void *)(a1 + v26);
    v28 = (const void *)(a2 + v26);
    sub_24A63CD04(a1 + v26, &qword_257946D30);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_24A77A66C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24A6B9B24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6B9B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DayEntry;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v7 = *(_QWORD *)(DayEntry - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = DayEntry;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A970);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E30);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 28);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_24A6B9BD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6B9BDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t DayEntry;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v9 = *(_QWORD *)(DayEntry - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = DayEntry;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A970);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948E30);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 28);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TrainingLoadDayWidgetRectangularView()
{
  uint64_t result;

  result = qword_25794ADF8;
  if (!qword_25794ADF8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A6B9CC0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for TrainingLoadDayEntry();
  if (v0 <= 0x3F)
  {
    sub_24A6B9D8C(319, qword_25794AE08, (void (*)(uint64_t))MEMORY[0x24BDFADE0]);
    if (v1 <= 0x3F)
    {
      sub_24A6B9D8C(319, (unint64_t *)&qword_257948EB0, (void (*)(uint64_t))MEMORY[0x24BDED930]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_24A6B9D8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_24A77A3F0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_24A6B9DD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6B9DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t DayViewModel;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t KeyPath;
  uint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t DayView;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;

  v131 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v3);
  v130 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_24A77AEB8();
  v120 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v118 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE48);
  MEMORY[0x24BDAC7A8](v6);
  v119 = (uint64_t *)((char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE50);
  MEMORY[0x24BDAC7A8](v123);
  v124 = (uint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE58);
  v126 = *(_QWORD *)(v9 - 8);
  v127 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v125 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE60);
  MEMORY[0x24BDAC7A8](v121);
  v129 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v128 = (uint64_t)&v106 - v13;
  v14 = sub_24A77A66C();
  v107 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v106 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayView = type metadata accessor for TrainingLoadDayView();
  MEMORY[0x24BDAC7A8](DayView);
  v24 = (uint64_t *)((char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25);
  v110 = (uint64_t)&v106 - v26;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F70);
  MEMORY[0x24BDAC7A8](v109);
  v28 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F78);
  MEMORY[0x24BDAC7A8](v29);
  v114 = (uint64_t)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE68);
  MEMORY[0x24BDAC7A8](v111);
  v115 = (uint64_t)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE70);
  MEMORY[0x24BDAC7A8](v113);
  v116 = (uint64_t)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v112 = (uint64_t)&v106 - v34;
  MEMORY[0x24BDAC7A8](v35);
  v132 = (uint64_t)&v106 - v36;
  v37 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadDayEntry() + 20));
  v38 = *v37;
  v39 = *((_BYTE *)v37 + 8);
  type metadata accessor for TrainingLoadDayWidgetRectangularView();
  sub_24A63F01C((uint64_t)v22);
  v40 = sub_24A77B848();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v22, 0, 1, v40);
  v117 = a1;
  sub_24A63E9C8((uint64_t)v19);
  sub_24A67AEB8(&qword_257948F38, MEMORY[0x24BDED950]);
  sub_24A77BEA8();
  sub_24A67AEB8(&qword_257948F40, MEMORY[0x24BDED940]);
  v41 = sub_24A77B974();
  v42 = *(void (**)(char *, uint64_t))(v107 + 8);
  v42(v16, v14);
  v42(v19, v14);
  DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  v44 = DayViewModel;
  v45 = 1;
  if ((v39 & 1) == 0)
  {
    *(_QWORD *)((char *)v24 + *(int *)(DayViewModel + 28)) = 0x3FE3333333333333;
    *v24 = v38;
    sub_24A779C7C();
    sub_24A779C70();
    v45 = 0;
    v46 = (_QWORD *)((char *)v24 + *(int *)(v44 + 24));
    *v46 = v47;
    v46[1] = v48;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v24, v45, 1, v44);
  v49 = DayView;
  sub_24A63F6C4((uint64_t)v22, (uint64_t)v24 + *(int *)(DayView + 20), &qword_257948F30);
  *((_BYTE *)v24 + *(int *)(v49 + 24)) = (v41 & 1) == 0;
  v50 = v110;
  sub_24A67AEF8((uint64_t)v24, v110);
  v51 = v117;
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A65FAD0(v50, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayView);
  v52 = &v28[*(int *)(v109 + 36)];
  v53 = v134;
  *(_OWORD *)v52 = v133;
  *((_OWORD *)v52 + 1) = v53;
  *((_OWORD *)v52 + 2) = v135;
  sub_24A65FB14(v50, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayView);
  v54 = sub_24A77B668();
  v55 = v114;
  sub_24A6423D8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v114, 0.0, 1, INFINITY, 0, v54, v56);
  sub_24A63CD04((uint64_t)v28, &qword_257946F70);
  v57 = sub_24A77ACF0();
  sub_24A77A390();
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v66 = v115;
  sub_24A63CCC0(v55, v115, &qword_257946F78);
  v67 = v66 + *(int *)(v111 + 36);
  *(_BYTE *)v67 = v57;
  *(_QWORD *)(v67 + 8) = v59;
  *(_QWORD *)(v67 + 16) = v61;
  *(_QWORD *)(v67 + 24) = v63;
  *(_QWORD *)(v67 + 32) = v65;
  *(_BYTE *)(v67 + 40) = 0;
  sub_24A63CD04(v55, &qword_257946F78);
  v68 = sub_24A77ACFC();
  sub_24A77A390();
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v77 = v112;
  sub_24A63CCC0(v66, v112, &qword_25794AE68);
  v78 = v77 + *(int *)(v113 + 36);
  *(_BYTE *)v78 = v68;
  *(_QWORD *)(v78 + 8) = v70;
  *(_QWORD *)(v78 + 16) = v72;
  *(_QWORD *)(v78 + 24) = v74;
  *(_QWORD *)(v78 + 32) = v76;
  *(_BYTE *)(v78 + 40) = 0;
  sub_24A63CD04(v66, &qword_25794AE68);
  sub_24A63F6C4(v77, v132, &qword_25794AE70);
  v79 = sub_24A77AA08();
  v80 = (uint64_t)v119;
  *v119 = v79;
  *(_QWORD *)(v80 + 8) = 0;
  *(_BYTE *)(v80 + 16) = 1;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE78);
  sub_24A6BA83C(v51, (uint64_t *)(v80 + *(int *)(v81 + 44)));
  v82 = v120;
  v83 = v118;
  v84 = v122;
  (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v118, *MEMORY[0x24BDF1878], v122);
  v85 = sub_24A77ADC8();
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
  v88 = (uint64_t)v130;
  v87(v130, 1, 1, v85);
  sub_24A77ADEC();
  v89 = sub_24A77AE34();
  sub_24A63CD04(v88, &qword_257946FD0);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
  KeyPath = swift_getKeyPath();
  v91 = v124;
  sub_24A63CCC0(v80, v124, &qword_25794AE48);
  v92 = (uint64_t *)(v91 + *(int *)(v123 + 36));
  *v92 = KeyPath;
  v92[1] = v89;
  sub_24A63CD04(v80, &qword_25794AE48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v86 + 104))(v88, *MEMORY[0x24BDF1668], v85);
  v87((char *)v88, 0, 1, v85);
  sub_24A6BB200();
  v93 = v125;
  sub_24A77B0A4();
  sub_24A63CD04(v88, &qword_257946FD0);
  sub_24A63CD04(v91, &qword_25794AE50);
  v94 = swift_getKeyPath();
  v96 = v126;
  v95 = v127;
  v97 = (uint64_t)v129;
  (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v129, v93, v127);
  v98 = (uint64_t *)(v97 + *(int *)(v121 + 36));
  *v98 = v94;
  v98[1] = 0x3FE3333333333333;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v95);
  v99 = v128;
  sub_24A63F6C4(v97, v128, &qword_25794AE60);
  v100 = v132;
  v101 = v116;
  sub_24A63CCC0(v132, v116, &qword_25794AE70);
  sub_24A63CCC0(v99, v97, &qword_25794AE60);
  v102 = v131;
  sub_24A63CCC0(v101, v131, &qword_25794AE70);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE90);
  sub_24A63CCC0(v97, v102 + *(int *)(v103 + 48), &qword_25794AE60);
  v104 = v102 + *(int *)(v103 + 64);
  *(_QWORD *)v104 = 0;
  *(_BYTE *)(v104 + 8) = 0;
  sub_24A63CD04(v99, &qword_25794AE60);
  sub_24A63CD04(v100, &qword_25794AE70);
  sub_24A63CD04(v97, &qword_25794AE60);
  return sub_24A63CD04(v101, &qword_25794AE70);
}

uint64_t sub_24A6BA83C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t DayEntry;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  double v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  uint64_t v78;
  double v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t DayWidgetRectangularView;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;

  v115 = a2;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE98);
  MEMORY[0x24BDAC7A8](v113);
  v118 = (uint64_t)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v112 = (char *)&v95 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v114 = (uint64_t)&v95 - v7;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AEA0);
  v111 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v116 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v95 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v119 = (char *)&v95 - v13;
  v14 = sub_24A77B848();
  v106 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v105 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v104 = (uint64_t)&v95 - v17;
  DayWidgetRectangularView = type metadata accessor for TrainingLoadDayWidgetRectangularView();
  MEMORY[0x24BDAC7A8](DayWidgetRectangularView);
  v103 = (uint64_t)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v95 - v20;
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v22 = (id)qword_2544D6158;
  v23 = sub_24A77856C();
  v25 = v24;

  v120 = v23;
  v121 = v25;
  v26 = sub_24A645928();
  v27 = sub_24A77AFD8();
  v29 = v28;
  v31 = v30 & 1;
  v120 = sub_24A77B338();
  v108 = sub_24A77AF54();
  v107 = v32;
  v101 = v33;
  v109 = v34;
  sub_24A64596C(v27, v29, v31);
  swift_release();
  swift_bridgeObjectRelease();
  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  v100 = a1 + *(int *)(DayEntry + 20);
  LODWORD(v27) = *(unsigned __int8 *)(v100 + 8);
  sub_24A65FAD0(a1, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  v110 = v11;
  v96 = v14;
  if ((_DWORD)v27 == 1)
  {
    v36 = v104;
    sub_24A63F01C(v104);
    v37 = v105;
    sub_24A77B830();
    v38 = sub_24A77B824();
    v39 = *(void (**)(char *, uint64_t))(v106 + 8);
    v39(v37, v14);
    v39((char *)v36, v14);
    sub_24A65FB14((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    if ((v38 & 1) != 0)
    {
      v40 = 0.6;
      goto LABEL_8;
    }
  }
  else
  {
    sub_24A65FB14((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  }
  v40 = 1.0;
LABEL_8:
  v41 = (uint64_t *)(a1 + *(int *)(DayEntry + 28));
  v42 = v41[1];
  v120 = *v41;
  v121 = v42;
  swift_bridgeObjectRetain();
  v99 = v26;
  v43 = sub_24A77AFD8();
  v45 = v44;
  v46 = DayEntry;
  v97 = DayEntry;
  v48 = v47 & 1;
  v120 = *(_QWORD *)(a1 + *(int *)(v46 + 32));
  v49 = v120;
  swift_retain();
  v50 = sub_24A77AF54();
  v52 = v51;
  v53 = a1;
  v98 = a1;
  v55 = v54;
  v57 = v56 & 1;
  sub_24A64596C(v43, v45, v48);
  swift_release();
  swift_bridgeObjectRelease();
  v120 = v50;
  v121 = v52;
  v122 = v57;
  v123 = v55;
  LODWORD(v100) = ~*(unsigned __int8 *)(v100 + 8);
  sub_24A77B05C();
  sub_24A64596C(v50, v52, v57);
  swift_bridgeObjectRelease();
  v58 = (uint64_t *)(v53 + *(int *)(v97 + 24));
  v59 = v58[1];
  v120 = *v58;
  v121 = v59;
  swift_bridgeObjectRetain();
  v60 = sub_24A77AFD8();
  v62 = v61;
  LOBYTE(v55) = v63 & 1;
  v120 = v49;
  swift_retain();
  v64 = sub_24A77AF54();
  v66 = v65;
  v68 = v67;
  v70 = v69 & 1;
  sub_24A64596C(v60, v62, v55);
  swift_release();
  swift_bridgeObjectRelease();
  v120 = v64;
  v121 = v66;
  v122 = v70;
  v123 = v68;
  v71 = v110;
  sub_24A77B05C();
  sub_24A64596C(v64, v66, v70);
  swift_bridgeObjectRelease();
  v72 = v103;
  sub_24A65FAD0(v98, v103, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  if ((v100 & 1) != 0)
  {
    sub_24A65FB14(v72, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
    goto LABEL_12;
  }
  v73 = v104;
  sub_24A63F01C(v104);
  v74 = v105;
  sub_24A77B830();
  v75 = sub_24A77B824();
  v76 = *(void (**)(char *, uint64_t))(v106 + 8);
  v77 = v74;
  v78 = v96;
  v76(v77, v96);
  v76((char *)v73, v78);
  sub_24A65FB14(v72, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayWidgetRectangularView);
  if ((v75 & 1) == 0)
  {
LABEL_12:
    v79 = 1.0;
    goto LABEL_13;
  }
  v79 = 0.6;
LABEL_13:
  v80 = v101 & 1;
  v82 = v111;
  v81 = (uint64_t)v112;
  v83 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
  v84 = v117;
  v83(v112, v71, v117);
  *(double *)(v81 + *(int *)(v113 + 36)) = v79;
  v113 = *(_QWORD *)(v82 + 8);
  ((void (*)(char *, uint64_t))v113)(v71, v84);
  v85 = v114;
  sub_24A63F6C4(v81, v114, &qword_25794AE98);
  LOBYTE(v120) = v80;
  v86 = v116;
  v83(v116, v119, v84);
  sub_24A63CCC0(v85, v118, &qword_25794AE98);
  v87 = v115;
  v88 = v108;
  v89 = v107;
  *v115 = v108;
  v87[1] = v89;
  *((_BYTE *)v87 + 16) = v80;
  v87[3] = v109;
  *((double *)v87 + 4) = v40;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AEA8);
  v83((char *)v87 + *(int *)(v90 + 48), v86, v84);
  v91 = (uint64_t)v87 + *(int *)(v90 + 64);
  v92 = v118;
  sub_24A63CCC0(v118, v91, &qword_25794AE98);
  sub_24A6436C4(v88, v89, v80);
  swift_bridgeObjectRetain();
  sub_24A6436C4(v88, v89, v80);
  swift_bridgeObjectRetain();
  sub_24A63CD04(v85, &qword_25794AE98);
  v93 = (void (*)(char *, uint64_t))v113;
  ((void (*)(char *, uint64_t))v113)(v119, v84);
  sub_24A64596C(v88, v89, v80);
  swift_bridgeObjectRelease();
  sub_24A63CD04(v92, &qword_25794AE98);
  v93(v86, v84);
  sub_24A64596C(v88, v89, v120);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6BB110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946F60);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_24A77A930();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AE40);
  sub_24A6B9DE8(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  v7 = sub_24A77B668();
  sub_24A642A6C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v7, v8);
  return sub_24A63CD04((uint64_t)v5, &qword_257946F60);
}

unint64_t sub_24A6BB200()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794AE80;
  if (!qword_25794AE80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794AE50);
    v2[0] = sub_24A63CFF0(&qword_25794AE88, &qword_25794AE48, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794AE80);
  }
  return result;
}

unint64_t sub_24A6BB2A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794AEB0;
  if (!qword_25794AEB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946F68);
    v2[0] = sub_24A63CFF0(&qword_25794AEB8, &qword_257946F60, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794AEB0);
  }
  return result;
}

double sub_24A6BB32C@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double v4;
  double result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if (a3 <= a2)
  {
    sub_24A77B338();
    swift_retain();
  }
  else
  {
    swift_retain();
    sub_24A77B338();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD8);
  v4 = COERCE_DOUBLE(swift_allocObject());
  *(_OWORD *)(*(_QWORD *)&v4 + 16) = xmmword_24A780450;
  *(_QWORD *)(*(_QWORD *)&v4 + 32) = sub_24A77B374();
  *(_QWORD *)(*(_QWORD *)&v4 + 40) = sub_24A77B374();
  *(double *)&v6 = v4;
  sub_24A77BB24();
  MEMORY[0x24BD18C58](*(_QWORD *)&v4);
  sub_24A77B6F8();
  sub_24A77B704();
  sub_24A77A570();
  swift_release();
  swift_release();
  result = v4;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  return result;
}

_QWORD *RaceElevationChartProperties.__allocating_init(activityType:chartPoints:)(void *a1, _QWORD *a2)
{
  _QWORD *v4;

  swift_allocObject();
  v4 = sub_24A6BCD68(a1, a2);

  return v4;
}

_QWORD *RaceElevationChartProperties.init(activityType:chartPoints:)(void *a1, _QWORD *a2)
{
  _QWORD *v3;

  v3 = sub_24A6BCD68(a1, a2);

  return v3;
}

uint64_t sub_24A6BB4D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  unint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t result;
  double v19;
  uint64_t v20;
  _QWORD *v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A7794D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  swift_bridgeObjectRetain();
  sub_24A6BBB50(&v21);
  v9 = v21;
  v10 = v21[2];
  if (v10)
  {
    v11 = (char *)v21 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v12(v8, v11, v5);
    sub_24A7794B4();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v10 > v9[2])
    {
      __break(1u);
      result = swift_release();
      __break(1u);
      return result;
    }
    v12(v4, &v11[*(_QWORD *)(v6 + 72) * (v10 - 1)], v5);
    v15 = 0;
  }
  else
  {
    v14 = 0.0;
    v15 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v15, 1, v5);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_24A6BD0B0((uint64_t)v4);
    v16 = 0.0;
  }
  else
  {
    sub_24A7794B4();
    v16 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  result = sub_24A7798BC();
  if (v16 - v14 < v19)
  {
    sub_24A7798D4();
    return sub_24A7798D4();
  }
  return result;
}

double sub_24A6BB6C0(double a1, double a2)
{
  uint64_t v2;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  v5 = vabdd_f64(a1, a2);
  sub_24A7798E0();
  if (v5 > v6)
    return *(double *)(v2 + 32);
  if (a2 >= a1)
    v8 = a1;
  else
    v8 = a2;
  v9 = v8 + v5 * 0.5;
  sub_24A7798B0();
  v7 = v9 - v10 * 0.5;
  sub_24A7798B0();
  if (*(double *)(v2 + 40) < v11 + v7)
    return 0.0;
  if (v7 < 0.0)
  {
    sub_24A7798B0();
    return 0.0;
  }
  return v7;
}

uint64_t sub_24A6BB758@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  double v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  double v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  double v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v5 = sub_24A7794D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v2 + 24);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v34 = v10;
    v35 = a1;
    v19 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v20 = *(_QWORD *)(v6 + 72);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v21(v13, v19, v5);
      sub_24A7794CC();
      if (v22 >= a2)
        break;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      v19 += v20;
      if (!--v18)
      {
        v23 = 1;
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v13, v5);
    v23 = 0;
LABEL_8:
    v10 = v34;
    a1 = v35;
  }
  else
  {
    swift_bridgeObjectRetain();
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v16, v23, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v16, 1, v5) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v16, v5);
  sub_24A6BD0B0((uint64_t)v16);
  if (!*(_QWORD *)(v17 + 16))
    return sub_24A7794C0();
  v24 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v25(v10, v24, v5);
  sub_24A7794CC();
  if (v26 >= a2)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v10, v5);
  v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v10, v5);
  v28 = *(_QWORD *)(v17 + 16);
  if (!v28)
    return sub_24A7794C0();
  v29 = v33;
  v25(v33, v24 + *(_QWORD *)(v6 + 72) * (v28 - 1), v5);
  sub_24A7794CC();
  if (v30 > a2)
  {
    v27(v29, v5);
    return sub_24A7794C0();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v29, v5);
}

uint64_t sub_24A6BBA04(double a1, double a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  double v9;
  uint64_t v10;
  unint64_t v11;

  v2 = sub_24A6BB6C0(a1, a2);
  v4 = v3;
  sub_24A7798B0();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A780030;
  *(double *)(v7 + 32) = v2;
  if (v2 <= v4)
  {
    v9 = v6 * 0.25;
    v10 = 5;
    do
    {
      v11 = *(_QWORD *)(v7 + 24);
      if (v10 - 4 >= v11 >> 1)
        v7 = (uint64_t)sub_24A64D484((_QWORD *)(v11 > 1), v10 - 3, 1, (_QWORD *)v7);
      *(_QWORD *)(v7 + 16) = v10 - 3;
      *(double *)(v7 + 8 * v10) = v2;
      v2 = v9 + v2;
      ++v10;
    }
    while (v2 <= v4);
  }
  return v7;
}

uint64_t RaceElevationChartProperties.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t RaceElevationChartProperties.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_24A6BBB50(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(sub_24A7794D8() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_24A7195F8(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_24A6BBBD0(v5);
  *a1 = v3;
}

void sub_24A6BBBD0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  double v45;
  double v46;
  double v47;
  _BOOL4 v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  char *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  unint64_t v151;
  void (*v152)(_QWORD, _QWORD, _QWORD);
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;

  v2 = v1;
  v4 = sub_24A7794D8();
  v163 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v149 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v160 = (char *)&v143 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v155 = (char *)&v143 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v157 = (char *)&v143 - v11;
  v12 = a1;
  v13 = a1[1];
  v14 = sub_24A77C154();
  if (v14 < v13)
  {
    if (v13 >= 0)
      v15 = v13;
    else
      v15 = v13 + 1;
    if (v13 >= -1)
    {
      v145 = v14;
      if (v13 < 2)
      {
        v20 = (char *)MEMORY[0x24BEE4AF8];
        v19 = MEMORY[0x24BEE4AF8]
            + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
        v144 = MEMORY[0x24BEE4AF8];
        if (v13 != 1)
        {
          v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          v86 = v12;
          if (v22 < 2)
            goto LABEL_117;
          goto LABEL_104;
        }
      }
      else
      {
        v16 = v15 >> 1;
        v17 = sub_24A77BB3C();
        *(_QWORD *)(v17 + 16) = v16;
        v18 = (*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80);
        v144 = v17;
        v19 = v17 + v18;
      }
      v21 = 0;
      v20 = (char *)MEMORY[0x24BEE4AF8];
      v151 = v19;
      v158 = v12;
      v159 = v4;
      while (1)
      {
        v23 = v21;
        v24 = v21 + 1;
        v150 = v21;
        if (v21 + 1 >= v13)
        {
          v39 = v21 + 1;
          v49 = v158;
        }
        else
        {
          v25 = *v158;
          v153 = v25;
          v26 = v163;
          v27 = *(_QWORD *)(v163 + 72);
          v161 = v13;
          v162 = v27;
          v28 = *(void (**)(_QWORD, _QWORD, _QWORD))(v163 + 16);
          v28(v157, v25 + v27 * v24, v4);
          v29 = v25 + v27 * v23;
          v30 = v155;
          v28(v155, v29, v4);
          v31 = v157;
          sub_24A7794B4();
          v33 = v32;
          sub_24A7794B4();
          v35 = v34;
          v36 = *(void (**)(_QWORD, _QWORD))(v26 + 8);
          v37 = v30;
          v23 = v150;
          v36(v37, v4);
          v36(v31, v4);
          v38 = v162;
          v39 = v23 + 2;
          if (v23 + 2 >= v161)
          {
            v13 = v161;
          }
          else
          {
            v146 = v20;
            v147 = v2;
            v156 = v162 * v24;
            v40 = v153;
            v154 = v162 * v39;
            while (1)
            {
              v41 = v39;
              v42 = v157;
              v43 = v159;
              v28(v157, v40 + v154, v159);
              v44 = v155;
              v28(v155, v40 + v156, v43);
              sub_24A7794B4();
              v46 = v45;
              sub_24A7794B4();
              v48 = v46 >= v47;
              v36(v44, v43);
              v36(v42, v43);
              if (v33 < v35 == v48)
                break;
              v39 = v41 + 1;
              v38 = v162;
              v40 += v162;
              if (v161 == v41 + 1)
              {
                v13 = v161;
                v39 = v161;
                v20 = v146;
                v2 = v147;
                v4 = v159;
                v23 = v150;
                goto LABEL_24;
              }
            }
            v4 = v159;
            v39 = v41;
            v20 = v146;
            v2 = v147;
            v23 = v150;
            v13 = v161;
            v38 = v162;
          }
LABEL_24:
          v49 = v158;
          if (v33 < v35)
          {
            if (v39 < v23)
              goto LABEL_141;
            if (v23 < v39)
            {
              v146 = v20;
              v147 = v2;
              v50 = 0;
              v51 = v38 * (v39 - 1);
              v52 = v23;
              v53 = v39 * v38;
              v54 = v52;
              v55 = v52 * v38;
              do
              {
                if (v54 != v39 + v50 - 1)
                {
                  v56 = v153;
                  if (!v153)
                    goto LABEL_146;
                  v57 = v39;
                  v58 = v153 + v55;
                  v59 = v153 + v51;
                  v156 = *(_QWORD *)(v163 + 32);
                  ((void (*)(char *, uint64_t, uint64_t))v156)(v149, v153 + v55, v159);
                  if (v55 < v51 || v58 >= v56 + v53)
                  {
                    v4 = v159;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    v4 = v159;
                    if (v55 != v51)
                      swift_arrayInitWithTakeBackToFront();
                  }
                  ((void (*)(uint64_t, char *, uint64_t))v156)(v59, v149, v4);
                  v49 = v158;
                  v39 = v57;
                  v38 = v162;
                }
                ++v54;
                --v50;
                v51 -= v38;
                v53 -= v38;
                v55 += v38;
              }
              while (v54 < v39 + v50);
              v20 = v146;
              v2 = v147;
              v23 = v150;
              v13 = v161;
            }
          }
        }
        if (v39 < v13)
        {
          if (__OFSUB__(v39, v23))
            goto LABEL_139;
          if (v39 - v23 < v145)
          {
            if (__OFADD__(v23, v145))
              goto LABEL_142;
            if (v23 + v145 >= v13)
              v60 = v13;
            else
              v60 = v23 + v145;
            if (v60 < v23)
            {
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              break;
            }
            if (v39 != v60)
            {
              v146 = v20;
              v147 = v2;
              v61 = *(_QWORD *)(v163 + 72);
              v152 = *(void (**)(_QWORD, _QWORD, _QWORD))(v163 + 16);
              v153 = v61;
              v62 = v61 * (v39 - 1);
              v63 = v39 * v61;
              v148 = v60;
              do
              {
                v65 = 0;
                v156 = v39;
                v154 = v63;
                while (1)
                {
                  v66 = *v49;
                  v161 = v63 + v65;
                  v162 = v23;
                  v67 = v63 + v65 + v66;
                  v68 = v157;
                  v69 = v49;
                  v70 = v152;
                  v152(v157, v67, v4);
                  v71 = v62;
                  v72 = v62 + v65 + v66;
                  v73 = v69;
                  v74 = v155;
                  v70(v155, v72, v4);
                  sub_24A7794B4();
                  v76 = v75;
                  sub_24A7794B4();
                  v78 = v77;
                  v79 = *(void (**)(_QWORD, _QWORD))(v163 + 8);
                  v79(v74, v4);
                  v79(v68, v4);
                  if (v76 >= v78)
                    break;
                  v80 = *v73;
                  if (!*v73)
                    goto LABEL_144;
                  v63 = v154;
                  v62 = v71;
                  v81 = v80 + v71 + v65;
                  v82 = *(void (**)(_QWORD, _QWORD, _QWORD))(v163 + 32);
                  v4 = v159;
                  v82(v160, v80 + v154 + v65, v159);
                  swift_arrayInitWithTakeFrontToBack();
                  v82(v81, v160, v4);
                  v65 -= v153;
                  v23 = v162 + 1;
                  v64 = v156;
                  v49 = v158;
                  if (v156 == v162 + 1)
                    goto LABEL_49;
                }
                v4 = v159;
                v64 = v156;
                v49 = v73;
                v62 = v71;
                v63 = v154;
LABEL_49:
                v39 = v64 + 1;
                v62 += v153;
                v63 += v153;
                v23 = v150;
              }
              while (v39 != v148);
              v39 = v148;
              v20 = v146;
              v2 = v147;
            }
          }
        }
        if (v39 < v23)
          goto LABEL_134;
        v83 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_24A718E50(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
        v85 = *((_QWORD *)v20 + 2);
        v84 = *((_QWORD *)v20 + 3);
        v22 = v85 + 1;
        if (v85 >= v84 >> 1)
          v20 = sub_24A718E50((char *)(v84 > 1), v85 + 1, 1, v20);
        v86 = v83;
        *((_QWORD *)v20 + 2) = v22;
        v87 = v20 + 32;
        v88 = &v20[16 * v85 + 32];
        *(_QWORD *)v88 = v23;
        *((_QWORD *)v88 + 1) = v39;
        v156 = v39;
        if (v85)
        {
          while (1)
          {
            v89 = v22 - 1;
            if (v22 >= 4)
            {
              v94 = &v87[16 * v22];
              v95 = *((_QWORD *)v94 - 8);
              v96 = *((_QWORD *)v94 - 7);
              v100 = __OFSUB__(v96, v95);
              v97 = v96 - v95;
              if (v100)
                goto LABEL_123;
              v99 = *((_QWORD *)v94 - 6);
              v98 = *((_QWORD *)v94 - 5);
              v100 = __OFSUB__(v98, v99);
              v92 = v98 - v99;
              v93 = v100;
              if (v100)
                goto LABEL_124;
              v101 = v22 - 2;
              v102 = &v87[16 * v22 - 32];
              v104 = *(_QWORD *)v102;
              v103 = *((_QWORD *)v102 + 1);
              v100 = __OFSUB__(v103, v104);
              v105 = v103 - v104;
              if (v100)
                goto LABEL_126;
              v100 = __OFADD__(v92, v105);
              v106 = v92 + v105;
              if (v100)
                goto LABEL_129;
              if (v106 >= v97)
              {
                v124 = &v87[16 * v89];
                v126 = *(_QWORD *)v124;
                v125 = *((_QWORD *)v124 + 1);
                v100 = __OFSUB__(v125, v126);
                v127 = v125 - v126;
                if (v100)
                  goto LABEL_133;
                v117 = v92 < v127;
                goto LABEL_93;
              }
            }
            else
            {
              if (v22 != 3)
              {
                v118 = *((_QWORD *)v20 + 4);
                v119 = *((_QWORD *)v20 + 5);
                v100 = __OFSUB__(v119, v118);
                v111 = v119 - v118;
                v112 = v100;
                goto LABEL_87;
              }
              v91 = *((_QWORD *)v20 + 4);
              v90 = *((_QWORD *)v20 + 5);
              v100 = __OFSUB__(v90, v91);
              v92 = v90 - v91;
              v93 = v100;
            }
            if ((v93 & 1) != 0)
              goto LABEL_125;
            v101 = v22 - 2;
            v107 = &v87[16 * v22 - 32];
            v109 = *(_QWORD *)v107;
            v108 = *((_QWORD *)v107 + 1);
            v110 = __OFSUB__(v108, v109);
            v111 = v108 - v109;
            v112 = v110;
            if (v110)
              goto LABEL_128;
            v113 = &v87[16 * v89];
            v115 = *(_QWORD *)v113;
            v114 = *((_QWORD *)v113 + 1);
            v100 = __OFSUB__(v114, v115);
            v116 = v114 - v115;
            if (v100)
              goto LABEL_131;
            if (__OFADD__(v111, v116))
              goto LABEL_132;
            if (v111 + v116 >= v92)
            {
              v117 = v92 < v116;
LABEL_93:
              if (v117)
                v89 = v101;
              goto LABEL_95;
            }
LABEL_87:
            if ((v112 & 1) != 0)
              goto LABEL_127;
            v120 = &v87[16 * v89];
            v122 = *(_QWORD *)v120;
            v121 = *((_QWORD *)v120 + 1);
            v100 = __OFSUB__(v121, v122);
            v123 = v121 - v122;
            if (v100)
              goto LABEL_130;
            if (v123 < v111)
              goto LABEL_14;
LABEL_95:
            v128 = v89 - 1;
            if (v89 - 1 >= v22)
            {
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            if (!*v86)
              goto LABEL_145;
            v129 = v20;
            v130 = &v87[16 * v128];
            v131 = *(_QWORD *)v130;
            v132 = &v87[16 * v89];
            v133 = *((_QWORD *)v132 + 1);
            sub_24A6BC890(*v86 + *(_QWORD *)(v163 + 72) * *(_QWORD *)v130, *v86 + *(_QWORD *)(v163 + 72) * *(_QWORD *)v132, *v86 + *(_QWORD *)(v163 + 72) * v133, v151);
            if (v2)
              goto LABEL_117;
            if (v133 < v131)
              goto LABEL_120;
            if (v89 > *((_QWORD *)v129 + 2))
              goto LABEL_121;
            *(_QWORD *)v130 = v131;
            *(_QWORD *)&v87[16 * v128 + 8] = v133;
            v134 = *((_QWORD *)v129 + 2);
            if (v89 >= v134)
              goto LABEL_122;
            v20 = v129;
            v22 = v134 - 1;
            memmove(&v87[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
            *((_QWORD *)v129 + 2) = v134 - 1;
            v86 = v158;
            v4 = v159;
            if (v134 <= 2)
              goto LABEL_14;
          }
        }
        v22 = 1;
LABEL_14:
        v13 = v86[1];
        v21 = v156;
        if (v156 >= v13)
        {
          v19 = v151;
          if (v22 < 2)
          {
LABEL_117:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v144 + 16) = 0;
            swift_bridgeObjectRelease();
            return;
          }
LABEL_104:
          v135 = *v86;
          while (1)
          {
            v136 = v22 - 2;
            if (v22 < 2)
              goto LABEL_135;
            if (!v135)
              goto LABEL_147;
            v137 = v20;
            v138 = v20 + 32;
            v139 = *(_QWORD *)&v20[16 * v136 + 32];
            v140 = *(_QWORD *)&v20[16 * v22 + 24];
            sub_24A6BC890(v135 + *(_QWORD *)(v163 + 72) * v139, v135 + *(_QWORD *)(v163 + 72) * *(_QWORD *)&v138[16 * v22 - 16], v135 + *(_QWORD *)(v163 + 72) * v140, v19);
            if (v2)
              goto LABEL_117;
            if (v140 < v139)
              goto LABEL_136;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v137 = sub_24A719060((uint64_t)v137);
            if (v136 >= *((_QWORD *)v137 + 2))
              goto LABEL_137;
            v141 = &v137[16 * v136 + 32];
            *(_QWORD *)v141 = v139;
            *((_QWORD *)v141 + 1) = v140;
            v142 = *((_QWORD *)v137 + 2);
            if (v22 > v142)
              goto LABEL_138;
            v20 = v137;
            memmove(&v137[16 * v22 + 16], &v137[16 * v22 + 32], 16 * (v142 - v22));
            *((_QWORD *)v137 + 2) = v142 - 1;
            v22 = v142 - 1;
            if (v142 <= 2)
              goto LABEL_117;
          }
        }
      }
    }
    sub_24A77C010();
    __break(1u);
    return;
  }
  if (v13 < 0)
    goto LABEL_140;
  if (v13)
    sub_24A6BC61C(0, v13, 1, v12);
}

void sub_24A6BC61C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v36 = a1;
  v7 = sub_24A7794D8();
  v8 = *(_QWORD **)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v34 - v11;
  v13.n128_f64[0] = MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)&v34 - v14;
  v42 = a3;
  v35 = a2;
  if (a3 != a2)
  {
    v15 = v8[9];
    v37 = (void (*)(char *, uint64_t, uint64_t))v8[2];
    v46 = v15 * (v42 - 1);
    v40 = v15;
    v16 = v15 * v42;
    v44 = a4;
LABEL_5:
    v17 = 0;
    v45 = v36;
    v41 = v16;
    while (1)
    {
      v18 = *a4;
      v19 = v16 + v17 + *a4;
      v20 = v38;
      v21 = v8;
      v22 = v37;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v37)(v38, v19, v7, v13);
      v23 = v39;
      v22(v39, v46 + v17 + v18, v7);
      v8 = v21;
      v16 = v41;
      sub_24A7794B4();
      v25 = v24;
      sub_24A7794B4();
      v27 = v26;
      v28 = (void (*)(char *, uint64_t))v8[1];
      v28(v23, v7);
      v29 = v20;
      a4 = v44;
      v28(v29, v7);
      if (v25 >= v27)
      {
LABEL_4:
        v46 += v40;
        v16 += v40;
        if (++v42 == v35)
          return;
        goto LABEL_5;
      }
      v30 = *a4;
      if (!*a4)
        break;
      v31 = (char *)(v30 + v46 + v17);
      v32 = v8;
      v33 = (void (*)(char *, uint64_t, uint64_t))v8[4];
      v33(v43, v30 + v16 + v17, v7);
      swift_arrayInitWithTakeFrontToBack();
      v33(v31, (uint64_t)v43, v7);
      v17 -= v40;
      a4 = v44;
      ++v45;
      v8 = v32;
      if (v42 == v45)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_24A6BC890(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  BOOL v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, unint64_t, uint64_t);
  unint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  v8 = sub_24A7794D8();
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - v11;
  v56 = v13;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_62;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_63;
  v16 = (uint64_t)(a2 - a1) / v14;
  v59 = a1;
  v58 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v31 = a4 + v19;
      v57 = a4 + v19;
      v59 = a2;
      v54 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v33 = -v14;
        v34 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
        v52 = a4;
        v53 = v34;
        do
        {
          v35 = a3 + v33;
          v36 = v53;
          v53(v12, v31 + v33, v8);
          v37 = a2 + v33;
          v38 = a3;
          v39 = v12;
          v40 = v55;
          v36(v55, a2 + v33, v8);
          sub_24A7794B4();
          v42 = v41;
          sub_24A7794B4();
          v44 = v43;
          v45 = *(void (**)(char *, uint64_t))(v56 + 8);
          v46 = v40;
          v12 = v39;
          v45(v46, v8);
          v45(v39, v8);
          if (v42 >= v44)
          {
            v49 = v57;
            v57 += v33;
            if (v38 < v49 || v35 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v38 != v49)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v37 = a2;
            v48 = v52;
          }
          else
          {
            if (v38 < a2 || v35 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v48 = v52;
            }
            else
            {
              v47 = v38 == a2;
              v48 = v52;
              if (!v47)
                swift_arrayInitWithTakeBackToFront();
            }
            v59 += v33;
          }
          v31 = v57;
          if (v57 <= v48)
            break;
          a2 = v37;
          a3 = v35;
        }
        while (v37 > v54);
      }
      goto LABEL_60;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v54 = a4 + v18;
    v57 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      v21 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
      do
      {
        v21(v12, a2, v8);
        v22 = v55;
        v21(v55, a4, v8);
        sub_24A7794B4();
        v24 = v23;
        sub_24A7794B4();
        v26 = v25;
        v27 = *(void (**)(char *, uint64_t))(v56 + 8);
        v27(v22, v8);
        v27(v12, v8);
        v28 = v59;
        if (v24 >= v26)
        {
          v30 = v58 + v14;
          if (v59 < v58 || v59 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v58 = v30;
          v29 = a2;
        }
        else
        {
          v29 = a2 + v14;
          if (v59 < a2 || v59 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            v28 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v59 = v28 + v14;
        a4 = v58;
        if (v58 >= v54)
          break;
        a2 = v29;
      }
      while (v29 < a3);
    }
LABEL_60:
    sub_24A718F48(&v59, &v58, (uint64_t *)&v57);
    return 1;
  }
LABEL_64:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

_QWORD *sub_24A6BCD68(void *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v28;

  v3 = v2;
  v6 = sub_24A7794D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.682352941, 0.705882353, 0.749019608, 1.0);
  v3[2] = a1;
  v3[3] = a2;
  v10 = a2[2];
  if (v10)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, (unint64_t)a2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * (v10 - 1), v6);
    v11 = a1;
    swift_bridgeObjectRetain();
    sub_24A7794CC();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v14 = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
  }
  v3[4] = 0;
  v3[5] = v13;
  sub_24A6BB4D0(a2);
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  v3[6] = v16;
  v3[7] = v18;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.0, 0.62745098, 0.525490196, 1.0);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 1.0, 0.62745098, 1.0);
  v22 = objc_msgSend(v20, sel_colorWithAlphaComponent_, 0.2);

  v3[9] = MEMORY[0x24BD189B8](v21);
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.2, 0.0823529412, 0.0666666667, 1.0);
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.407843137, 0.321568627, 1.0);
  v26 = objc_msgSend(v24, sel_colorWithAlphaComponent_, 0.2);

  v3[10] = MEMORY[0x24BD189B8](v25);
  return v3;
}

uint64_t type metadata accessor for RaceElevationChartProperties()
{
  return objc_opt_self();
}

uint64_t method lookup function for RaceElevationChartProperties()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RaceElevationChartProperties.__allocating_init(activityType:chartPoints:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_24A6BD0B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A6BD0F0(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double *v12;
  uint64_t *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE v27[40];

  v8 = sub_24A779400();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (double *)&v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(double *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  if ((*(unsigned int (**)(double *, uint64_t))(v9 + 88))(v12, v8) == *MEMORY[0x24BEC5A28])
  {
    (*(void (**)(double *, uint64_t))(v9 + 96))(v12, v8);
    if (*v12 >= 0.0)
    {
      v13 = a2 + 9;
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v9 + 8))(v12, v8);
  }
  v13 = a2 + 10;
LABEL_6:
  v14 = *v13;
  if (a4 >= a3)
    v15 = a3;
  else
    v15 = a4;
  if (a3 > a4)
    v16 = a3;
  else
    v16 = a4;
  swift_retain();
  sub_24A6BB32C((uint64_t)v27, a3, a4);
  v17 = sub_24A6BB6C0(a3, a4);
  v19 = v18;
  v20 = a2[4];
  v21 = a2[5];
  v22 = _s11WorkoutCore04RaceA13ConfigurationC0A2UIE18pointOuterColorForySo7UIColorCAA0C8PositionOFZ_0(a1);
  v23 = MEMORY[0x24BD189B8](v22);
  MEMORY[0x24BDAC7A8](v23);
  *(&v26 - 14) = a1;
  *(&v26 - 13) = (uint64_t)a2;
  *(&v26 - 12) = v20;
  *(&v26 - 11) = v21;
  *((double *)&v26 - 10) = a3;
  *((double *)&v26 - 9) = v17;
  *(&v26 - 8) = v19;
  *((double *)&v26 - 7) = v15;
  *((double *)&v26 - 6) = v16;
  *((double *)&v26 - 5) = a4;
  *(&v26 - 4) = (uint64_t)v27;
  *(&v26 - 3) = v14;
  *(&v26 - 2) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFE0);
  sub_24A6BEF18();
  sub_24A77A21C();
  sub_24A646AE8((uint64_t)v27);
  swift_release();
  return swift_release();
}

uint64_t sub_24A6BD2E4@<X0>(uint64_t a1@<X0>, double *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>, double a13@<D6>, double a14@<D7>)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  char *v75;
  int v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void (*v102)(uint64_t, uint64_t);
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  double v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t OpaqueTypeConformance2;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  double v115;
  double v116;
  double v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  char *v121;
  void (*v122)(_QWORD, _QWORD, _QWORD);
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  void (*v131)(char *, uint64_t);
  char *v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  double v138;
  double v139;
  double v140;
  double v141;
  uint64_t v142;
  double v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  double v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t);
  void (*v155)(uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  double v167;
  double v168;
  double v169;
  double v170;
  uint64_t v171;
  double v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t);
  void (*v180)(char *, uint64_t);
  uint64_t (*v181)(uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  __int128 *v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char **v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;

  v206 = a4;
  v200 = a3;
  v212 = a1;
  v218 = a6;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B120);
  MEMORY[0x24BDAC7A8](v24);
  v189 = (uint64_t)&v187 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B130);
  v188 = *(_QWORD *)(v194 - 8);
  MEMORY[0x24BDAC7A8](v194);
  v187 = (char *)&v187 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v193 = (char *)&v187 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B100);
  MEMORY[0x24BDAC7A8](v29);
  v191 = (uint64_t)&v187 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B0F0);
  MEMORY[0x24BDAC7A8](v31);
  v195 = (uint64_t)&v187 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B110);
  MEMORY[0x24BDAC7A8](v33);
  v190 = (uint64_t)&v187 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v192 = (uint64_t)&v187 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B050);
  MEMORY[0x24BDAC7A8](v37);
  v205 = (uint64_t)&v187 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B0A8);
  MEMORY[0x24BDAC7A8](v39);
  v204 = (uint64_t)&v187 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v216 = (char **)((char *)&v187 - v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B080);
  MEMORY[0x24BDAC7A8](v43);
  v203 = (uint64_t)&v187 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v213 = (uint64_t)&v187 - v46;
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B138);
  v214 = *(_QWORD *)(v215 - 8);
  MEMORY[0x24BDAC7A8](v215);
  v202 = (char *)&v187 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)&v187 - v49;
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B140);
  MEMORY[0x24BDAC7A8](v197);
  v52 = (char *)&v187 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B018);
  MEMORY[0x24BDAC7A8](v53);
  v196 = (char *)&v187 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B008);
  MEMORY[0x24BDAC7A8](v55);
  v207 = (uint64_t)&v187 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFF8);
  MEMORY[0x24BDAC7A8](v57);
  v211 = (uint64_t)&v187 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_24A7794D8();
  v209 = *(_QWORD *)(v210 - 8);
  MEMORY[0x24BDAC7A8](v210);
  v60 = (char *)&v187 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
  v219 = *(_QWORD *)(v61 - 8);
  v220 = v61;
  MEMORY[0x24BDAC7A8](v61);
  v208 = (uint64_t)&v187 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v63);
  v223 = (char *)&v187 - v64;
  v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B128);
  v217 = *(_QWORD *)(v221 - 8);
  MEMORY[0x24BDAC7A8](v221);
  v66 = (char *)&v187 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v67);
  v198 = (uint64_t)&v187 - v68;
  MEMORY[0x24BDAC7A8](v69);
  v222 = (uint64_t)&v187 - v70;
  v71 = sub_24A779400();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = MEMORY[0x24BDAC7A8](v71);
  v75 = (char *)&v187 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v72 + 16))(v75, v212, v71, v73);
  v76 = (*(uint64_t (**)(char *, uint64_t))(v72 + 88))(v75, v71);
  if (v76 == *MEMORY[0x24BEC5A28])
  {
    sub_24A71C12C((uint64_t)a2, (uint64_t)v66, a10, a11);
    sub_24A6BB6C0(a9, a14);
    sub_24A71C55C((uint64_t)a2, v200, (uint64_t)v50, a12, a13);
    sub_24A7798E0();
    v201 = v66;
    v199 = v50;
    if (vabdd_f64(a9, a14) <= v77)
    {
      v212 = a5;
      v81 = v220;
      if (qword_257946A10 != -1)
        swift_once();
      v107 = a2[6] + 4.0 / *(double *)&qword_2579599A8 * (a2[7] - a2[6]);
      v224 = sub_24A6BBA04(a9, a14);
      swift_getKeyPath();
      v108 = swift_allocObject();
      *(_QWORD *)(v108 + 16) = a2;
      *(double *)(v108 + 24) = v107;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947208);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794B168);
      sub_24A63CFF0(&qword_25794B170, &qword_257947208, MEMORY[0x24BEE12D8]);
      v109 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
      v225 = sub_24A77A2E8();
      v226 = MEMORY[0x24BDF3E48];
      v227 = MEMORY[0x24BDB8280];
      v228 = MEMORY[0x24BDF3E18];
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      v225 = v109;
      v226 = OpaqueTypeConformance2;
      v111 = swift_getOpaqueTypeConformance2();
      v225 = v81;
      v226 = v111;
      swift_getOpaqueTypeConformance2();
      v112 = v213;
      sub_24A77B5D8();
      v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B090);
      v79 = v112;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v112, 0, 1, v113);
      v80 = v212;
    }
    else
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B090);
      v79 = v213;
      (*(void (**)(void))(*(_QWORD *)(v78 - 8) + 56))();
      v80 = a5;
      v81 = v220;
    }
    v114 = COERCE_DOUBLE(MEMORY[0x24BD189B8](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_24A6BB758((uint64_t)v60, a14);
    sub_24A7794CC();
    v116 = v115;
    v117 = a2[6];
    sub_24A7794B4();
    v118 = v208;
    sub_24A71E7FC(v114, v208, v116, v117, v119);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v60, v210);
    v120 = v219;
    v121 = v223;
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v223, v118, v81);
    swift_release();
    v122 = (void (*)(_QWORD, _QWORD, _QWORD))v216;
    sub_24A71C830((uint64_t)a2, v206, v80, (uint64_t)v216, a9);
    v123 = v217;
    v124 = v222;
    (*(void (**)(uint64_t, char *, uint64_t))(v217 + 16))(v222, v201, v221);
    v225 = v124;
    v125 = v202;
    (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v202, v199, v215);
    v226 = (uint64_t)v125;
    v126 = v203;
    sub_24A63CCC0(v79, v203, &qword_25794B080);
    v227 = v126;
    (*(void (**)(uint64_t, char *, uint64_t))(v120 + 16))(v118, v121, v81);
    v228 = v118;
    v127 = (uint64_t)v122;
    v128 = v204;
    sub_24A63CCC0(v127, v204, &qword_25794B0A8);
    v229 = v128;
    v129 = v205;
    sub_24A6BE870(&v225, v205);
    sub_24A63CD04(v128, &qword_25794B0A8);
    v130 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
    v130(v118, v81);
    sub_24A63CD04(v126, &qword_25794B080);
    v131 = *(void (**)(char *, uint64_t))(v214 + 8);
    v132 = v125;
    v133 = v215;
    v131(v132, v215);
    v134 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
    v135 = v221;
    v134(v124, v221);
    v136 = v207;
    sub_24A63CCC0(v129, v207, &qword_25794B050);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B160);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v129, &qword_25794B050);
    v137 = v211;
    sub_24A63CCC0(v136, v211, &qword_25794B008);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B158);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v136, &qword_25794B008);
    sub_24A63CCC0(v137, v218, &qword_25794AFF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B148);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v137, &qword_25794AFF8);
    sub_24A63CD04((uint64_t)v216, &qword_25794B0A8);
    v130((uint64_t)v223, v81);
    sub_24A63CD04(v213, &qword_25794B080);
    v131(v199, v133);
    return ((uint64_t (*)(char *, uint64_t))v134)(v201, v135);
  }
  else if (v76 == *MEMORY[0x24BEC5A18])
  {
    v82 = v222;
    sub_24A71C12C((uint64_t)a2, v222, a7, a8);
    v83 = COERCE_DOUBLE(MEMORY[0x24BD189B8](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_24A6BB758((uint64_t)v60, a9);
    sub_24A7794CC();
    v85 = v84;
    v86 = a2[6];
    sub_24A7794B4();
    v87 = v208;
    sub_24A71E7FC(v83, v208, v85, v86, v88);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v60, v210);
    v216 = *(char ***)(v219 + 32);
    v89 = v219;
    v90 = v223;
    v91 = v220;
    ((void (*)(char *, uint64_t, uint64_t))v216)(v223, v87, v220);
    swift_release();
    v92 = v217;
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v217 + 16);
    v94 = v198;
    v95 = v82;
    v96 = v221;
    v93(v198, v95, v221);
    v97 = *(void (**)(uint64_t, char *, uint64_t))(v89 + 16);
    v98 = v91;
    v97(v87, v90, v91);
    sub_24A77A108();
    sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v93((uint64_t)v52, v94, v96);
    sub_24A77A2E8();
    v99 = (uint64_t)v196;
    v100 = v197;
    v101 = &v52[*(int *)(v197 + 48)];
    v97((uint64_t)v101, (char *)v87, v98);
    (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v99, v52, v96);
    ((void (*)(uint64_t, char *, uint64_t))v216)(v99 + *(int *)(v100 + 48), v101, v98);
    v102 = *(void (**)(uint64_t, uint64_t))(v219 + 8);
    v102(v87, v98);
    v103 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
    v103(v94, v96);
    v104 = v207;
    sub_24A63CCC0(v99, v207, &qword_25794B018);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B160);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v99, &qword_25794B018);
    v105 = v211;
    sub_24A63CCC0(v104, v211, &qword_25794B008);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B158);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v104, &qword_25794B008);
    sub_24A63CCC0(v105, v218, &qword_25794AFF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B148);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v105, &qword_25794AFF8);
    v102((uint64_t)v223, v220);
    return ((uint64_t (*)(uint64_t, uint64_t))v103)(v222, v96);
  }
  else if (v76 == *MEMORY[0x24BEC5A38])
  {
    sub_24A71C12C((uint64_t)a2, v222, a7, a8);
    v138 = COERCE_DOUBLE(MEMORY[0x24BD189B8](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_24A6BB758((uint64_t)v60, a14);
    sub_24A7794CC();
    v140 = v139;
    v141 = a2[6];
    sub_24A7794B4();
    v142 = v208;
    sub_24A71E7FC(v138, v208, v140, v141, v143);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v60, v210);
    v144 = v219;
    v145 = v220;
    v146 = v223;
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v223, v142, v220);
    swift_release();
    v147 = COERCE_DOUBLE(MEMORY[0x24BD189B8](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    v148 = v192;
    sub_24A71CB30((uint64_t)a2, v147, a5, v192, a9);
    swift_release();
    v149 = v217;
    v150 = v198;
    v151 = v221;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v217 + 16))(v198, v222, v221);
    v225 = v150;
    (*(void (**)(uint64_t, char *, uint64_t))(v144 + 16))(v142, v146, v145);
    v226 = v142;
    v152 = v190;
    sub_24A63CCC0(v148, v190, &qword_25794B110);
    v227 = v152;
    v153 = v191;
    sub_24A6BEA90(&v225, v191);
    sub_24A63CD04(v152, &qword_25794B110);
    v154 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
    v154(v142, v145);
    v155 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
    v155(v150, v151);
    v156 = v195;
    sub_24A63CCC0(v153, v195, &qword_25794B100);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B150);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v153, &qword_25794B100);
    v157 = v211;
    sub_24A63CCC0(v156, v211, &qword_25794B0F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B158);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v156, &qword_25794B0F0);
    sub_24A63CCC0(v157, v218, &qword_25794AFF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B148);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v157, &qword_25794AFF8);
    sub_24A63CD04(v148, &qword_25794B110);
    v154((uint64_t)v223, v145);
    return ((uint64_t (*)(uint64_t, uint64_t))v155)(v222, v151);
  }
  else if (v76 == *MEMORY[0x24BEC5A20])
  {
    sub_24A71C12C((uint64_t)a2, v222, a2[4], a9);
    v158 = v198;
    sub_24A71C12C((uint64_t)a2, v198, a9, a2[5]);
    v159 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B020);
    v160 = sub_24A77A108();
    v161 = sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v225 = v159;
    v226 = v160;
    v227 = v161;
    v228 = MEMORY[0x24BDB7D80];
    swift_getOpaqueTypeConformance2();
    v162 = v187;
    v163 = v221;
    sub_24A77A0E4();
    v164 = v217;
    v216 = *(char ***)(v217 + 8);
    ((void (*)(uint64_t, uint64_t))v216)(v158, v163);
    v165 = v188;
    v166 = v193;
    (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v193, v162, v194);
    v167 = COERCE_DOUBLE(MEMORY[0x24BD189B8](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.568627451, 0.568627451, 0.568627451, 1.0)));
    sub_24A6BB758((uint64_t)v60, a9);
    sub_24A7794CC();
    v169 = v168;
    v170 = a2[6];
    sub_24A7794B4();
    v171 = v208;
    sub_24A71E7FC(v167, v208, v169, v170, v172);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v60, v210);
    v173 = v219;
    v174 = v220;
    v175 = v223;
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v223, v171, v220);
    swift_release();
    v176 = v221;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 16))(v158, v222, v221);
    v225 = v158;
    v177 = v194;
    (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v162, v166, v194);
    v226 = (uint64_t)v162;
    (*(void (**)(uint64_t, char *, uint64_t))(v173 + 16))(v171, v175, v174);
    v227 = v171;
    v178 = v189;
    sub_24A6BEC00(&v225, v189);
    v179 = *(void (**)(uint64_t, uint64_t))(v173 + 8);
    v179(v171, v174);
    v180 = *(void (**)(char *, uint64_t))(v165 + 8);
    v180(v162, v177);
    v181 = (uint64_t (*)(uint64_t, uint64_t))v216;
    ((void (*)(uint64_t, uint64_t))v216)(v158, v176);
    v182 = v195;
    sub_24A63CCC0(v178, v195, &qword_25794B120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B150);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v178, &qword_25794B120);
    v183 = v211;
    sub_24A63CCC0(v182, v211, &qword_25794B0F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B158);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v182, &qword_25794B0F0);
    sub_24A63CCC0(v183, v218, &qword_25794AFF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B148);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v183, &qword_25794AFF8);
    v179((uint64_t)v175, v174);
    v180(v193, v194);
    return v181(v222, v176);
  }
  else
  {
    v184 = v222;
    sub_24A71C12C((uint64_t)a2, v222, a7, a8);
    v185 = v217;
    v186 = v221;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v217 + 16))(v218, v184, v221);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B148);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v184, v186);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v75, v71);
  }
}

uint64_t sub_24A6BE870@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25794B178);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B128);
  sub_24A77A108();
  sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
  v7 = *a1;
  v18 = *(_QWORD *)(v6 - 8);
  v19 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v5, v7, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B138);
  sub_24A6BF324(&qword_25794B060, &qword_25794B058, &qword_25794B068, &qword_25794B070);
  v17 = &v5[v3[12]];
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(void))(v9 + 16))();
  sub_24A6BF39C();
  v10 = (uint64_t)&v5[v3[16]];
  sub_24A63CCC0(a1[2], v10, &qword_25794B080);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
  sub_24A77A2E8();
  v12 = &v5[v3[20]];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, a1[3], v11);
  sub_24A6BF4F4();
  v14 = (uint64_t)&v5[v3[24]];
  sub_24A63CCC0(a1[4], v14, &qword_25794B0A8);
  v15 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v20, v5, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + v3[12], v17, v8);
  sub_24A63F6C4(v10, v15 + v3[16], &qword_25794B080);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v15 + v3[20], v12, v11);
  return sub_24A63F6C4(v14, v15 + v3[24], &qword_25794B0A8);
}

uint64_t sub_24A6BEA90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B180);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B128);
  sub_24A77A108();
  sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v6, *a1, v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
  sub_24A77A2E8();
  v10 = &v6[*(int *)(v4 + 48)];
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))(v10, a1[1], v9);
  sub_24A6BF93C();
  v12 = (uint64_t)&v6[*(int *)(v4 + 64)];
  sub_24A63CCC0(a1[2], v12, &qword_25794B110);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v4 + 48), v10, v9);
  return sub_24A63F6C4(v12, a2 + *(int *)(v4 + 64), &qword_25794B110);
}

uint64_t sub_24A6BEC00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B188);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B128);
  sub_24A77A108();
  sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 16))(v5, *a1, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B130);
  v9 = &v5[*(int *)(v3 + 48)];
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 16))(v9, a1[1], v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
  sub_24A77A2E8();
  v12 = &v5[*(int *)(v3 + 64)];
  v13 = a1[2];
  v14 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v13, v11);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v16 = v19;
  v15(v19, v5, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16 + *(int *)(v3 + 48), v9, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16 + *(int *)(v3 + 64), v12, v11);
}

uint64_t sub_24A6BED88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B190);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B198);
  sub_24A77A264();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 16))(v5, *a1, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B1A0);
  sub_24A77A2D0();
  v9 = &v5[*(int *)(v3 + 48)];
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 16))(v9, a1[1], v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B1A8);
  sub_24A77A354();
  sub_24A6BFBF0();
  v12 = &v5[*(int *)(v3 + 64)];
  v13 = a1[2];
  v14 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v13, v11);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v16 = v19;
  v15(v19, v5, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16 + *(int *)(v3 + 48), v9, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16 + *(int *)(v3 + 64), v12, v11);
}

uint64_t sub_24A6BEEF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6BD2E4(*(_QWORD *)(v1 + 16), *(double **)(v1 + 24), *(__int128 **)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), a1, *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88));
}

unint64_t sub_24A6BEF18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  result = qword_25794AFE8;
  if (!qword_25794AFE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794AFE0);
    v2 = sub_24A6BF788(&qword_25794AFF0, &qword_25794AFF8, sub_24A6BF014, sub_24A6BF764);
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B020);
    v3[3] = sub_24A77A108();
    v3[4] = sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v3[5] = MEMORY[0x24BDB7D80];
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7FA8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794AFE8);
  }
  return result;
}

uint64_t sub_24A6BF014()
{
  return sub_24A6BF788(&qword_25794B000, &qword_25794B008, (uint64_t (*)(void))sub_24A6BF038, (uint64_t (*)(void))sub_24A6BF174);
}

unint64_t sub_24A6BF038()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];
  _QWORD v4[2];

  result = qword_25794B010;
  if (!qword_25794B010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B018);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B020);
    sub_24A77A108();
    sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v4[0] = swift_getOpaqueTypeConformance2();
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    sub_24A77A2E8();
    v3[3] = MEMORY[0x24BDB8280];
    v3[4] = MEMORY[0x24BDF3E18];
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v4[1] = swift_getOpaqueTypeConformance2();
    v3[0] = v4;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B010);
  }
  return result;
}

unint64_t sub_24A6BF174()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];
  _QWORD v4[5];

  result = qword_25794B048;
  if (!qword_25794B048)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B050);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B020);
    sub_24A77A108();
    sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v4[0] = swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B058);
    sub_24A6BF324(&qword_25794B060, &qword_25794B058, &qword_25794B068, &qword_25794B070);
    v4[1] = swift_getOpaqueTypeConformance2();
    v4[2] = sub_24A6BF39C();
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    sub_24A77A2E8();
    v3[3] = MEMORY[0x24BDB8280];
    v3[4] = MEMORY[0x24BDF3E18];
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[4] = sub_24A6BF4F4();
    v3[0] = v4;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B048);
  }
  return result;
}

uint64_t sub_24A6BF324(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_24A63CFF0(a3, a4, MEMORY[0x24BDB8118]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8490], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A6BF39C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794B078;
  if (!qword_25794B078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B080);
    v2 = sub_24A6BF400();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB84F0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794B078);
  }
  return result;
}

unint64_t sub_24A6BF400()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];

  result = qword_25794B088;
  if (!qword_25794B088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B090);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B098);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    sub_24A77A2E8();
    v3[3] = MEMORY[0x24BDB8280];
    v3[4] = MEMORY[0x24BDF3E18];
    swift_getOpaqueTypeConformance2();
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8490], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B088);
  }
  return result;
}

unint64_t sub_24A6BF4F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[5];
  _QWORD v5[2];

  result = qword_25794B0A0;
  if (!qword_25794B0A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    sub_24A77A2E8();
    swift_getOpaqueTypeConformance2();
    v5[0] = swift_getOpaqueTypeConformance2();
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0B0);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0B8);
    sub_24A77A354();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0C0);
    sub_24A6BF65C();
    v4[1] = v2;
    v4[2] = v3;
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[4] = sub_24A6BF6E0();
    v5[1] = swift_getOpaqueTypeConformance2();
    v4[0] = v5;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25794B0A0);
  }
  return result;
}

unint64_t sub_24A6BF65C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B0C8;
  if (!qword_25794B0C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0C0);
    v2[0] = sub_24A63CFF0(&qword_25794B0D0, &qword_25794B0D8, MEMORY[0x24BDEC0E0]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B0C8);
  }
  return result;
}

unint64_t sub_24A6BF6E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794B0E0;
  if (!qword_25794B0E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0B8);
    v2 = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B0E0);
  }
  return result;
}

uint64_t sub_24A6BF764()
{
  return sub_24A6BF788(&qword_25794B0E8, &qword_25794B0F0, (uint64_t (*)(void))sub_24A6BF7F8, (uint64_t (*)(void))sub_24A6BFA58);
}

uint64_t sub_24A6BF788(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7FA8], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A6BF7F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];
  _QWORD v4[3];

  result = qword_25794B0F8;
  if (!qword_25794B0F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B100);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B020);
    sub_24A77A108();
    sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v4[0] = swift_getOpaqueTypeConformance2();
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    sub_24A77A2E8();
    v3[3] = MEMORY[0x24BDB8280];
    v3[4] = MEMORY[0x24BDF3E18];
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v4[1] = swift_getOpaqueTypeConformance2();
    v4[2] = sub_24A6BF93C();
    v3[0] = v4;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B0F8);
  }
  return result;
}

unint64_t sub_24A6BF93C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[5];
  _QWORD v6[2];

  result = qword_25794B108;
  if (!qword_25794B108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B110);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    sub_24A77A2E8();
    swift_getOpaqueTypeConformance2();
    v6[0] = swift_getOpaqueTypeConformance2();
    v2 = sub_24A77A354();
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0C0);
    v4 = sub_24A6BF65C();
    v5[1] = v2;
    v5[2] = v3;
    v5[3] = MEMORY[0x24BDB8320];
    v5[4] = v4;
    v6[1] = swift_getOpaqueTypeConformance2();
    v5[0] = v6;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25794B108);
  }
  return result;
}

unint64_t sub_24A6BFA58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];
  _QWORD v4[3];

  result = qword_25794B118;
  if (!qword_25794B118)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B120);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B020);
    sub_24A77A108();
    sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v4[0] = swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B128);
    v4[1] = swift_getOpaqueTypeConformance2();
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    sub_24A77A2E8();
    v3[3] = MEMORY[0x24BDB8280];
    v3[4] = MEMORY[0x24BDF3E18];
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v4[2] = swift_getOpaqueTypeConformance2();
    v3[0] = v4;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B118);
  }
  return result;
}

uint64_t sub_24A6BFBC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6BFBE4@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A71E36C(a1, *(_QWORD *)(v2 + 16), a2, *(_QWORD *)(v2 + 24));
}

unint64_t sub_24A6BFBF0()
{
  unint64_t result;

  result = qword_25794B1B0;
  if (!qword_25794B1B0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8478], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_25794B1B0);
  }
  return result;
}

uint64_t *sub_24A6BFC34(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24A778818();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v16 = (char *)v7 + v15;
    v17 = (char *)a2 + v15;
    swift_bridgeObjectRetain();
    if (v13(v17, 1, v11))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    v19 = a3[8];
    v20 = (char *)v7 + v19;
    v21 = (char *)a2 + v19;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
  }
  return v7;
}

uint64_t sub_24A6BFDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_24A778818();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_QWORD *sub_24A6BFE90(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  swift_bridgeObjectRetain();
  if (v11(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  return a1;
}

char *sub_24A6C0004(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v22[8] = v23[8];
  *(_QWORD *)v22 = v24;
  return a1;
}

_QWORD *sub_24A6C0218(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)&a2[a3[6]];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  return a1;
}

char *sub_24A6C0378(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  *(_QWORD *)a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  return a1;
}

uint64_t sub_24A6C057C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6C0588(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_24A6C0608()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24A6C0614(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for IntervalTimeMetricView()
{
  uint64_t result;

  result = qword_25794B210;
  if (!qword_25794B210)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A6C06C8()
{
  unint64_t v0;

  sub_24A685C00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24A6C0758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6C0768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v26 = a1;
  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A778818();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - v15;
  v17 = (void *)sub_24A7792F8();
  v18 = objc_msgSend(v17, sel_goalTypeIdentifier);

  if (v18 != (id)2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v27, 1, 1, v7);
  v19 = (void *)sub_24A7792F8();
  v20 = objc_msgSend(v19, sel_value);

  if (!v20)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v27, 1, 1, v7);
  v21 = type metadata accessor for IntervalTimeMetricView();
  sub_24A63CCC0(v3 + *(int *)(v21 + 20), (uint64_t)v6, &qword_2579478E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v26, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v13, v7);
    sub_24A63CD04((uint64_t)v6, &qword_2579478E8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
  }
  sub_24A778764();
  v23 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
  objc_msgSend(v20, sel_doubleValueForUnit_, v23);

  v24 = v27;
  sub_24A7787A0();

  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v10, v7);
  v25(v16, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v24, 0, 1, v7);
}

double sub_24A6C0A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - v7;
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - v17;
  sub_24A6C0768(a1, (uint64_t)v8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    sub_24A63CD04((uint64_t)v8, &qword_2579478E8);
    v20 = type metadata accessor for IntervalTimeMetricView();
    sub_24A63CCC0(v1 + *(int *)(v20 + 20), (uint64_t)v5, &qword_2579478E8);
    if (v19(v5, 1, v9) == 1)
    {
      sub_24A63CD04((uint64_t)v5, &qword_2579478E8);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, a1, v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v5, v9);
      sub_24A778764();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    sub_24A778794();
    v22 = v23;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
    sub_24A778794();
    v22 = v21;
    v15 = v18;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v22;
}

void sub_24A6C0C6C()
{
  void *v0;
  id v1;
  void *v2;
  char v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v0 = (void *)sub_24A7792F8();
  v1 = objc_msgSend(v0, sel_goalTypeIdentifier);

  if (v1 == (id)2)
  {
    v2 = (void *)sub_24A7792F8();
    v3 = sub_24A77BD58();

    if ((v3 & 1) != 0)
    {
      v4 = (void *)sub_24A7792F8();
      if ((sub_24A77BD58() & 1) != 0)
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
      else
        _HKWorkoutGoalType.color.getter((uint64_t)objc_msgSend(v4, sel_goalTypeIdentifier));

LABEL_16:
      JUMPOUT(0x24BD189B8);
    }
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
    if (!v5)
    {
      __break(1u);
      goto LABEL_14;
    }
    v6 = v5;
    v7 = objc_msgSend(v5, sel_nonGradientTextColor);

    if (v7)
      goto LABEL_16;
    __break(1u);
  }
  v8 = objc_msgSend((id)objc_opt_self(), sel_elapsedTimeColors);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_nonGradientTextColor);

    if (v10)
      goto LABEL_16;
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_14:
  __break(1u);
  goto LABEL_15;
}

uint64_t sub_24A6C0DE0(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  _DWORD *v14;
  _DWORD *v15;
  unsigned int *v16;
  void (*v17)(char *, char *, uint64_t);
  int v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  double v22[2];

  v2 = sub_24A77C16C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v22 - v10;
  v12 = (void *)sub_24A7792F8();
  v13 = objc_msgSend(v12, sel_goalTypeIdentifier);

  v14 = (_DWORD *)MEMORY[0x24BEE38E0];
  v15 = (_DWORD *)MEMORY[0x24BEE38E8];
  if (v13 == (id)2)
    v16 = (unsigned int *)MEMORY[0x24BEE38E0];
  else
    v16 = (unsigned int *)MEMORY[0x24BEE38E8];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v11, *v16, v2);
  v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v17(v8, v11, v2);
  v22[1] = round(a1 * 100.0) / 100.0;
  v17(v5, v8, v2);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v18 == *MEMORY[0x24BEE38D0]
    || v18 == *MEMORY[0x24BEE38C8]
    || v18 == *v14
    || v18 == *v15
    || v18 == *MEMORY[0x24BEE38B8]
    || v18 == *MEMORY[0x24BEE38C0])
  {
    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
  }
  else
  {
    sub_24A77BBF0();
    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
    v19(v5, v2);
  }
  sub_24A779808();
  v20 = sub_24A7797F0();
  v19(v11, v2);
  return v20;
}

uint64_t sub_24A6C1058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v92 = a1;
  v2 = type metadata accessor for IntervalTimeMetricView();
  v78 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v79 = v3;
  v80 = (uint64_t)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_24A77ABC4();
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v75 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949348);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v71 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946EC0);
  v85 = *(_QWORD *)(v8 - 8);
  v86 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v84 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946EC8);
  MEMORY[0x24BDAC7A8](v10);
  v89 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B258);
  MEMORY[0x24BDAC7A8](v87);
  v91 = (uint64_t)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B260);
  MEMORY[0x24BDAC7A8](v88);
  v90 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v14);
  v72 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v71 - v17;
  v19 = sub_24A778818();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v71 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v71 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v71 - v30;
  sub_24A77880C();
  v32 = v2;
  v33 = *(int *)(v2 + 20);
  v93 = v1;
  sub_24A63CCC0(v1 + v33, (uint64_t)v18, &qword_2579478E8);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v34(v18, 1, v19) == 1)
  {
    sub_24A63CD04((uint64_t)v18, &qword_2579478E8);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v31, v28, v19);
    v35 = *(void (**)(char *, uint64_t))(v20 + 8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v18, v19);
    sub_24A778764();
    v35 = *(void (**)(char *, uint64_t))(v20 + 8);
    v35(v25, v19);
  }
  v73 = v31;
  v74 = v35;
  v35(v28, v19);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v31, v19);
  v36 = v75;
  sub_24A77ABB8();
  v37 = v93;
  v38 = v93 + *(int *)(v32 + 28);
  v39 = v72;
  sub_24A63CCC0(v38, v72, &qword_2579478E8);
  v40 = v34((char *)v39, 1, v19) != 1;
  sub_24A63CD04(v39, &qword_2579478E8);
  v41 = v76;
  v42 = (uint64_t)v82;
  v43 = v77;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v82, v36, v77);
  *(_BYTE *)(v42 + *(int *)(v83 + 36)) = v40;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v43);
  v44 = v80;
  sub_24A6C193C(v37, v80);
  v45 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  v46 = swift_allocObject();
  sub_24A6C1A68(v44, v46 + v45);
  sub_24A63CCC0(v42, v81, &qword_257949348);
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = sub_24A6C1AAC;
  *(_QWORD *)(v47 + 24) = v46;
  sub_24A63CFF0(&qword_257949370, &qword_257949348, (uint64_t)&unk_24A785328);
  sub_24A6459E8();
  v48 = v84;
  sub_24A77A468();
  sub_24A63CD04(v42, &qword_257949348);
  v49 = v19;
  if (qword_2579467F8 != -1)
    swift_once();
  v50 = *(double *)&qword_257948970;
  v51 = sub_24A77B674();
  v52 = v89;
  v54 = sub_24A642AC4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v89, 0.0, 1, v50, 0, v51, v53);
  (*(void (**)(char *, uint64_t, double))(v85 + 8))(v48, v86, v54);
  LOBYTE(v50) = sub_24A77ACD8();
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  sub_24A77A390();
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v62 = v61;
  v63 = v91;
  sub_24A63CCC0(v52, v91, &qword_257946EC8);
  v64 = v63 + *(int *)(v87 + 36);
  *(_BYTE *)v64 = LOBYTE(v50);
  *(_QWORD *)(v64 + 8) = v56;
  *(_QWORD *)(v64 + 16) = v58;
  *(_QWORD *)(v64 + 24) = v60;
  *(_QWORD *)(v64 + 32) = v62;
  *(_BYTE *)(v64 + 40) = 0;
  sub_24A63CD04(v52, &qword_257946EC8);
  sub_24A6C0C6C();
  v66 = v65;
  KeyPath = swift_getKeyPath();
  v68 = v90;
  sub_24A63CCC0(v63, v90, &qword_25794B258);
  v69 = (uint64_t *)(v68 + *(int *)(v88 + 36));
  *v69 = KeyPath;
  v69[1] = v66;
  sub_24A63CD04(v63, &qword_25794B258);
  v74(v73, v49);
  return sub_24A6C1B2C(v68, v92);
}

void sub_24A6C1788(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_24A778818();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  sub_24A77A45C();
  v6 = sub_24A6C0A34((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = sub_24A6C0DE0(v6);
  v9 = v8;
  v10 = (void *)sub_24A7792F8();
  v11 = objc_msgSend(v10, sel_goalTypeIdentifier);

  v12 = 0;
  v13 = 0;
  if (v11 == (id)2)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v14 = (id)qword_2544D6158;
    v12 = sub_24A77856C();
    v13 = v15;

  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_WORD *)(a1 + 48) = 0;
}

uint64_t sub_24A6C193C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntervalTimeMetricView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6C1980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v1 = type metadata accessor for IntervalTimeMetricView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_24A778818();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v8 = v3 + *(int *)(v1 + 28);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return swift_deallocObject();
}

uint64_t sub_24A6C1A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntervalTimeMetricView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24A6C1AAC(uint64_t a1@<X8>)
{
  type metadata accessor for IntervalTimeMetricView();
  sub_24A6C1788(a1);
}

uint64_t sub_24A6C1AF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6C1B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A685F20(a1, *(void (**)(_QWORD *__return_ptr, char *))(v2 + 16), a2);
}

uint64_t sub_24A6C1B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24A6C1B78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B268;
  if (!qword_25794B268)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B260);
    v2[0] = sub_24A665CEC(&qword_25794B270, &qword_25794B258, sub_24A6C1C1C, MEMORY[0x24BDECC60]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B268);
  }
  return result;
}

uint64_t sub_24A6C1C1C()
{
  return sub_24A665CEC(&qword_25794B278, &qword_257946EC8, (uint64_t (*)(void))sub_24A6C1C40, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_24A6C1C40()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794B280;
  if (!qword_25794B280)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946EC0);
    v2 = sub_24A6459E8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEBD40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794B280);
  }
  return result;
}

uint64_t NLSessionActivityGoal.intervalDisplayString(formattingManager:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (objc_msgSend(v1, sel_goalTypeIdentifier) == (id)2
    && (v3 = objc_msgSend(v1, sel_requiredDistance), v3, !v3))
  {
    objc_msgSend(v1, sel_doubleValue);
    sub_24A779808();
    return sub_24A7797F0();
  }
  else
  {
    v4 = sub_24A77B9EC();
    v6 = NLSessionActivityGoal.displayString(formattingManager:localizedOpenString:)(a1, v4, v5);
    swift_bridgeObjectRelease();
    return v6;
  }
}

uint64_t NLSessionActivityGoal.displayString(formattingManager:localizedOpenString:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B288);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((unint64_t)objc_msgSend(v4, sel_goalTypeIdentifier))
  {
    case 0uLL:
      if (a3)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v33 = sub_24A7799E8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
        a2 = sub_24A77B9F8();
        sub_24A6C235C((uint64_t)v10);
      }
      return a2;
    case 1uLL:
      goto LABEL_9;
    case 2uLL:
      v11 = objc_msgSend(v4, sel_requiredDistance);
      if (!v11)
        goto LABEL_20;
      v12 = v11;
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37968]), sel_initWithGoalTypeIdentifier_value_, 1, v11);
      v14 = NLSessionActivityGoal.displayString(formattingManager:localizedOpenString:)(a1, 0, 0);
      v16 = v15;

      objc_msgSend(v4, sel_doubleValue);
      v17 = objc_msgSend(a1, sel_stringWithDuration_durationFormat_, 3);
      if (v17)
      {
        v18 = v17;
        v19 = sub_24A77B9B0();
        v21 = v20;

      }
      else
      {
        v19 = 0;
        v21 = 0;
      }
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v34 = (id)qword_2544D6158;
      sub_24A77856C();

      if (v21)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_24A780450;
        v36 = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
        v37 = sub_24A66952C();
        *(_QWORD *)(v35 + 32) = v14;
        *(_QWORD *)(v35 + 40) = v16;
        *(_QWORD *)(v35 + 96) = v36;
        *(_QWORD *)(v35 + 104) = v37;
        *(_QWORD *)(v35 + 64) = v37;
        *(_QWORD *)(v35 + 72) = v19;
        *(_QWORD *)(v35 + 80) = v21;
        a2 = sub_24A77B9C8();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_20:
        objc_msgSend(v4, sel_doubleValue);
        v22 = objc_msgSend(a1, sel_stringWithDuration_durationFormat_, 7);
        if (!v22)
        {
          __break(1u);
LABEL_24:
          v42 = 0;
          v43 = 0xE000000000000000;
          sub_24A77BF5C();
          swift_bridgeObjectRelease();
          v42 = 0xD000000000000012;
          v43 = 0x800000024A78C660;
          v40 = objc_msgSend(v4, sel_description);
          sub_24A77B9B0();

          sub_24A77BA4C();
          swift_bridgeObjectRelease();
LABEL_25:
          sub_24A77C01C();
          __break(1u);
          JUMPOUT(0x24A6C234CLL);
        }
LABEL_21:
        v38 = v22;
        a2 = sub_24A77B9B0();

      }
      break;
    case 3uLL:
      objc_msgSend(v4, sel_doubleValue);
      v22 = objc_msgSend(a1, sel_localizedStringWithEnergyInCalories_energyType_unitStyle_, 1, 1);
      if (v22)
        goto LABEL_21;
      __break(1u);
LABEL_9:
      v23 = objc_msgSend(v4, sel_value);
      if (!v23)
        goto LABEL_25;
      v24 = v23;
      v25 = objc_msgSend(v23, sel__unit);
      v26 = sub_24A656340(v25);

      v27 = objc_msgSend((id)objc_opt_self(), sel_defaultPrecisionForDistanceUnit_, v26);
      objc_msgSend(v4, sel_doubleValue);
      v28 = objc_msgSend(a1, sel_localizedStringWithDistanceInMeters_distanceUnit_unitStyle_decimalPrecision_roundingMode_decimalTrimmingMode_, v26, 2, v27, 6, 2);
      if (v28)
      {
        v29 = v28;
        v30 = sub_24A77B9B0();
        v32 = v31;

        v42 = v30;
        v43 = v32;
        v46 = 32;
        v47 = 0xE100000000000000;
        v44 = 0;
        v45 = 0xE000000000000000;
        sub_24A645928();
        a2 = sub_24A77BE6C();

        swift_bridgeObjectRelease();
      }
      else
      {

        a2 = 0;
      }
      break;
    default:
      goto LABEL_24;
  }
  return a2;
}

uint64_t sub_24A6C235C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B288);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24A6C239C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24A6C23E4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24A6C2488 + 4 * byte_24A783C16[a2]))(0xD000000000000015);
}

uint64_t sub_24A6C2488(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000015 && v1 == 0x800000024A789650)
    v2 = 1;
  else
    v2 = sub_24A77C184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_24A6C2574(char a1)
{
  sub_24A77C22C();
  __asm { BR              X10 }
}

uint64_t sub_24A6C25C0()
{
  sub_24A77BA1C();
  swift_bridgeObjectRelease();
  return sub_24A77C25C();
}

void sub_24A6C2670(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24A6C26AC()
{
  sub_24A77BA1C();
  return swift_bridgeObjectRelease();
}

void sub_24A6C2748(uint64_t a1, char a2)
{
  sub_24A77C22C();
  __asm { BR              X10 }
}

uint64_t sub_24A6C2790()
{
  sub_24A77BA1C();
  swift_bridgeObjectRelease();
  return sub_24A77C25C();
}

void TrainingLoadURLBuilder.url(route:source:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CB0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_24A7784D0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *a2;
  sub_24A7784C4();
  sub_24A7784AC();
  sub_24A778494();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A7784A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B290);
  sub_24A778458();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A780030;
  __asm { BR              X10 }
}

uint64_t sub_24A6C2A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_24A778434();
  swift_bridgeObjectRelease();
  sub_24A778470();
  sub_24A778488();
  v5 = sub_24A7786B0();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5) == 1)
  {
    sub_24A63CD04(v1, &qword_257949CB0);
    *(_QWORD *)(v4 - 96) = 0;
    *(_QWORD *)(v4 - 88) = 0xE000000000000000;
    sub_24A77BF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 - 96) = 0xD00000000000001FLL;
    *(_QWORD *)(v4 - 88) = 0x800000024A78C6E0;
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    sub_24A77BA4C();
    __asm { BR              X10 }
  }
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v6 + 32))(*(_QWORD *)(v4 - 104), v1, v5);
}

void sub_24A6C2BE0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 0xD000000000000015;
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77C01C();
  __break(1u);
}

uint64_t TrainingLoadURLBuilder.Route.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_24A6C2EDC(a1);
}

unint64_t TrainingLoadURLBuilder.Route.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_24A6C2CF0()
{
  return sub_24A6C2F54();
}

uint64_t sub_24A6C2D0C()
{
  return sub_24A77BA1C();
}

uint64_t sub_24A6C2D28()
{
  return sub_24A6C2FC8();
}

uint64_t sub_24A6C2D44@<X0>(BOOL *a1@<X8>)
{
  return sub_24A6C301C(a1);
}

void sub_24A6C2D50(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000024A789630;
}

WorkoutUI::TrainingLoadURLBuilder::Source_optional __swiftcall TrainingLoadURLBuilder.Source.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WorkoutUI::TrainingLoadURLBuilder::Source_optional result;
  char v5;

  v2 = v1;
  v3 = sub_24A77C070();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TrainingLoadURLBuilder.Source.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24A6C2DF4 + 4 * byte_24A783C3A[*v0]))(0x736C61746976, 0xE600000000000000);
}

unint64_t sub_24A6C2DF4()
{
  return 0xD000000000000015;
}

uint64_t sub_24A6C2E30()
{
  return 0x7974697669746361;
}

uint64_t sub_24A6C2E48()
{
  return 0x7373656E746966;
}

unint64_t sub_24A6C2E60()
{
  return 0xD000000000000014;
}

void sub_24A6C2E7C(char *a1)
{
  sub_24A6C239C(*a1);
}

void sub_24A6C2E88()
{
  char *v0;

  sub_24A6C2574(*v0);
}

void sub_24A6C2E90(uint64_t a1)
{
  char *v1;

  sub_24A6C2670(a1, *v1);
}

void sub_24A6C2E98(uint64_t a1)
{
  char *v1;

  sub_24A6C2748(a1, *v1);
}

WorkoutUI::TrainingLoadURLBuilder::Source_optional sub_24A6C2EA0(Swift::String *a1)
{
  return TrainingLoadURLBuilder.Source.init(rawValue:)(*a1);
}

uint64_t sub_24A6C2EAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TrainingLoadURLBuilder.Source.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t TrainingLoadURLBuilder.RoutingKey.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_24A6C2EDC(a1);
}

uint64_t sub_24A6C2EDC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24A77C070();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t TrainingLoadURLBuilder.RoutingKey.rawValue.getter()
{
  return 0x656372756F73;
}

uint64_t sub_24A6C2F40()
{
  return sub_24A6C2F54();
}

uint64_t sub_24A6C2F54()
{
  sub_24A77C22C();
  sub_24A77BA1C();
  return sub_24A77C25C();
}

uint64_t sub_24A6C2FA0()
{
  return sub_24A77BA1C();
}

uint64_t sub_24A6C2FB4()
{
  return sub_24A6C2FC8();
}

uint64_t sub_24A6C2FC8()
{
  sub_24A77C22C();
  sub_24A77BA1C();
  return sub_24A77C25C();
}

uint64_t sub_24A6C3010@<X0>(BOOL *a1@<X8>)
{
  return sub_24A6C301C(a1);
}

uint64_t sub_24A6C301C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24A77C070();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_24A6C3068(_QWORD *a1@<X8>)
{
  *a1 = 0x656372756F73;
  a1[1] = 0xE600000000000000;
}

uint64_t TrainingLoadURLBuilder.getTrainingLoadRoute(from:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  BOOL v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  result = sub_24A77868C();
  v3 = result;
  v4 = *(_QWORD *)(result + 16);
  if (!v4)
    goto LABEL_8;
  if (*(_QWORD *)(result + 32) != 47 || *(_QWORD *)(result + 40) != 0xE100000000000000)
  {
    result = sub_24A77C184();
    if ((result & 1) == 0)
    {
LABEL_17:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_24A77BAB8();
      v11 = sub_24A77C070();
      result = swift_bridgeObjectRelease();
      v6 = v11 != 0;
      goto LABEL_18;
    }
  }
  if (v4 == 1)
  {
LABEL_8:
    result = swift_bridgeObjectRelease();
    v6 = 1;
LABEL_18:
    *a1 = v6;
    return result;
  }
  v7 = (_QWORD *)(v3 + 56);
  v8 = 1;
  while (1)
  {
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (*(v7 - 1) != 47 || *v7 != 0xE100000000000000)
    {
      result = sub_24A77C184();
      if ((result & 1) == 0)
        goto LABEL_17;
    }
    v7 += 2;
    ++v8;
    if (v9 == v4)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t TrainingLoadURLBuilder.getTrainingLoadSource(from:)@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  _QWORD v29[2];
  char *v30;
  uint64_t v31;
  _BYTE *v32;
  char *v33;

  v2 = sub_24A778458();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B298);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B2A0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24A7784D0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77847C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    result = sub_24A63CD04((uint64_t)v11, &qword_25794B2A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v17 = sub_24A778464();
    if (v17)
    {
      v33 = v15;
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v30 = v8;
        v31 = v12;
        v32 = a1;
        v19 = v17 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        v20 = *(_QWORD *)(v3 + 72);
        v21 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
        v29[1] = v17;
        swift_bridgeObjectRetain();
        while (1)
        {
          v21(v5, v19, v2);
          if (sub_24A778440() == 0x656372756F73 && v22 == 0xE600000000000000)
            break;
          v23 = sub_24A77C184();
          swift_bridgeObjectRelease();
          if ((v23 & 1) != 0)
            goto LABEL_14;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          v19 += v20;
          if (!--v18)
          {
            swift_bridgeObjectRelease();
            v24 = 1;
            v12 = v31;
            a1 = v32;
            v8 = v30;
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
LABEL_14:
        v15 = v33;
        swift_bridgeObjectRelease();
        v8 = v30;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v30, v5, v2);
        v24 = 0;
        v12 = v31;
        a1 = v32;
      }
      else
      {
        v24 = 1;
LABEL_12:
        v15 = v33;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v24, 1, v2);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
      {
        sub_24A63CD04((uint64_t)v8, &qword_25794B298);
      }
      else
      {
        v25 = sub_24A77844C();
        v27 = v26;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        if (v27)
        {
          v28._countAndFlagsBits = v25;
          v28._object = v27;
          TrainingLoadURLBuilder.Source.init(rawValue:)(v28);
          return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        }
      }
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  *a1 = 6;
  return result;
}

unint64_t sub_24A6C3544()
{
  unint64_t result;

  result = qword_25794B2A8;
  if (!qword_25794B2A8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadURLBuilder.Route, &type metadata for TrainingLoadURLBuilder.Route);
    atomic_store(result, (unint64_t *)&qword_25794B2A8);
  }
  return result;
}

unint64_t sub_24A6C358C()
{
  unint64_t result;

  result = qword_25794B2B0;
  if (!qword_25794B2B0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadURLBuilder.Source, &type metadata for TrainingLoadURLBuilder.Source);
    atomic_store(result, (unint64_t *)&qword_25794B2B0);
  }
  return result;
}

unint64_t sub_24A6C35D4()
{
  unint64_t result;

  result = qword_25794B2B8;
  if (!qword_25794B2B8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadURLBuilder.RoutingKey, &type metadata for TrainingLoadURLBuilder.RoutingKey);
    atomic_store(result, (unint64_t *)&qword_25794B2B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder()
{
  return &type metadata for TrainingLoadURLBuilder;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder.Route()
{
  return &type metadata for TrainingLoadURLBuilder.Route;
}

uint64_t getEnumTagSinglePayload for TrainingLoadURLBuilder.Source(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadURLBuilder.Source(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_24A6C3718 + 4 * byte_24A783C45[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24A6C374C + 4 * byte_24A783C40[v4]))();
}

uint64_t sub_24A6C374C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6C3754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A6C375CLL);
  return result;
}

uint64_t sub_24A6C3768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A6C3770);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_24A6C3774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6C377C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder.Source()
{
  return &type metadata for TrainingLoadURLBuilder.Source;
}

uint64_t _s9WorkoutUI22TrainingLoadURLBuilderV5RouteOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24A6C37D8 + 4 * byte_24A783C4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24A6C37F8 + 4 * byte_24A783C4F[v4]))();
}

_BYTE *sub_24A6C37D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24A6C37F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24A6C3800(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24A6C3808(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24A6C3810(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24A6C3818(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadURLBuilder.RoutingKey()
{
  return &type metadata for TrainingLoadURLBuilder.RoutingKey;
}

uint64_t DownhillRunCountMetricView.init(downhillRunCount:formattingManager:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = a3;
  *(_QWORD *)(a4 + 8) = result;
  *(_BYTE *)(a4 + 16) = a2 & 1;
  return result;
}

uint64_t DownhillRunCountMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B288);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 8);
  if (*(_BYTE *)(v1 + 16))
    v6 = 0;
  v15[1] = v6;
  sub_24A6C3948();
  v7 = sub_24A77BE78();
  v9 = v8;
  v10 = sub_24A7799E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = sub_24A77B9F8();
  v13 = v12;
  result = sub_24A6C235C((uint64_t)v5);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

unint64_t sub_24A6C3948()
{
  unint64_t result;

  result = qword_25794B2C0;
  if (!qword_25794B2C0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE1EC0], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_25794B2C0);
  }
  return result;
}

uint64_t sub_24A6C398C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for DownhillRunCountMetricView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  return a1;
}

void destroy for DownhillRunCountMetricView(id *a1)
{

}

uint64_t assignWithCopy for DownhillRunCountMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  return a1;
}

uint64_t assignWithTake for DownhillRunCountMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownhillRunCountMetricView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownhillRunCountMetricView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownhillRunCountMetricView()
{
  return &type metadata for DownhillRunCountMetricView;
}

uint64_t SegmentDurationMetricView.init(segmentIndex:segmentDuration:workoutPaused:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a3 = a1;
  *(double *)(a3 + 8) = a4;
  *(_BYTE *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + 24) = result;
  *(_BYTE *)(a3 + 32) = 0;
  return result;
}

double SegmentDurationMetricView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[2];
  char v11;
  _OWORD v12[8];
  char v13;
  _BYTE v14[136];

  v3 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v3;
  v11 = *(_BYTE *)(v1 + 32);
  v4 = sub_24A77A900();
  sub_24A6C3C4C((uint64_t)v10, (uint64_t)v12);
  *(_OWORD *)&v14[103] = v12[6];
  *(_OWORD *)&v14[87] = v12[5];
  *(_OWORD *)&v14[39] = v12[2];
  *(_OWORD *)&v14[23] = v12[1];
  *(_OWORD *)&v14[119] = v12[7];
  *(_OWORD *)&v14[55] = v12[3];
  *(_OWORD *)&v14[71] = v12[4];
  *(_OWORD *)&v14[7] = v12[0];
  v5 = *(_OWORD *)&v14[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v14[80];
  v6 = *(_OWORD *)&v14[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v14[96];
  *(_OWORD *)(a1 + 129) = v6;
  v7 = *(_OWORD *)v14;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v14[16];
  result = *(double *)&v14[32];
  v9 = *(_OWORD *)&v14[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v14[32];
  *(_OWORD *)(a1 + 65) = v9;
  *(_OWORD *)(a1 + 81) = v5;
  v14[135] = v13;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 145) = *(_QWORD *)&v14[128];
  *(_OWORD *)(a1 + 17) = v7;
  *(_QWORD *)(a1 + 160) = 0;
  return result;
}

void sub_24A6C3C4C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = objc_msgSend((id)objc_opt_self(), sel_splitsColors);
  v9 = objc_msgSend(v8, sel_valueDisplayColor);

  if (v9)
  {
    v10 = MEMORY[0x24BD189B8](v9);
    v11 = *(_QWORD *)(a1 + 24);
    v12 = *(_BYTE *)(a1 + 32);
    sub_24A6C41B0(a1);
    sub_24A63E608(v11, v12, &v45);
    sub_24A6C41DC(a1);
    v13 = v45;
    if (v45 == 2)
    {
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      sub_24A77B668();
      v36 = 1;
      sub_24A77A4B0();
      v34 = v46;
      v35 = v45;
      v33 = v47;
      v14 = v48;
      v15 = v49;
      v16 = v50;
    }
    else
    {
      v35 = 0;
      v36 = 0;
      v33 = 0;
      v34 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
    }
    sub_24A6C41B0(a1);
    sub_24A63E608(v11, v12, &v41);
    sub_24A6C41DC(a1);
    if (v41 <= 8u && ((1 << v41) & 0x181) != 0)
    {
      v37 = *(_QWORD *)a1;
      v41 = sub_24A77C160();
      v42 = v17;
      sub_24A77BA4C();
      v18 = sub_24A77B3C8();
      v19 = sub_24A77AE40();
      KeyPath = swift_getKeyPath();
      v37 = v18;
      v38 = KeyPath;
      v39 = v19;
      v40 = 0;
    }
    else
    {
      v37 = *(_QWORD *)a1;
      v41 = sub_24A77C160();
      v42 = v21;
      sub_24A77BA4C();
      v22 = sub_24A77B3C8();
      v23 = sub_24A77ADC8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
      v24 = sub_24A77AE1C();
      sub_24A64439C((uint64_t)v6);
      v25 = swift_getKeyPath();
      v37 = v22;
      v38 = v25;
      v39 = v24;
      v40 = 1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B2E8);
    sub_24A6C4210();
    sub_24A77AB28();
    v26 = v41;
    v27 = v42;
    v28 = v43;
    v29 = v44;
    LOBYTE(v41) = v13 != 2;
    LOBYTE(v37) = v44;
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = 0x3FF0000000000000;
    v30 = v36;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = v30;
    v31 = v34;
    *(_QWORD *)(a2 + 48) = v35;
    *(_QWORD *)(a2 + 56) = v31;
    *(_QWORD *)(a2 + 64) = v33;
    *(_QWORD *)(a2 + 72) = v14;
    *(_QWORD *)(a2 + 80) = v15;
    *(_QWORD *)(a2 + 88) = v16;
    *(_BYTE *)(a2 + 96) = v13 != 2;
    *(_QWORD *)(a2 + 104) = v26;
    *(_QWORD *)(a2 + 112) = v27;
    *(_QWORD *)(a2 + 120) = v28;
    *(_BYTE *)(a2 + 128) = v29;
    swift_retain();
    sub_24A6C4294();
    sub_24A6C42C8();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

double sub_24A6C4018@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[2];
  char v11;
  _OWORD v12[8];
  char v13;
  _BYTE v14[136];

  v3 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v3;
  v11 = *(_BYTE *)(v1 + 32);
  v4 = sub_24A77A900();
  sub_24A6C3C4C((uint64_t)v10, (uint64_t)v12);
  *(_OWORD *)&v14[103] = v12[6];
  *(_OWORD *)&v14[87] = v12[5];
  *(_OWORD *)&v14[39] = v12[2];
  *(_OWORD *)&v14[23] = v12[1];
  *(_OWORD *)&v14[119] = v12[7];
  *(_OWORD *)&v14[55] = v12[3];
  *(_OWORD *)&v14[71] = v12[4];
  *(_OWORD *)&v14[7] = v12[0];
  v5 = *(_OWORD *)&v14[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v14[80];
  v6 = *(_OWORD *)&v14[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v14[96];
  *(_OWORD *)(a1 + 129) = v6;
  v7 = *(_OWORD *)v14;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v14[16];
  result = *(double *)&v14[32];
  v9 = *(_OWORD *)&v14[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v14[32];
  *(_OWORD *)(a1 + 65) = v9;
  *(_OWORD *)(a1 + 81) = v5;
  v14[135] = v13;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 145) = *(_QWORD *)&v14[128];
  *(_OWORD *)(a1 + 17) = v7;
  *(_QWORD *)(a1 + 160) = 0;
  return result;
}

uint64_t sub_24A6C4108()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SegmentDurationMetricView()
{
  return &type metadata for SegmentDurationMetricView;
}

unint64_t sub_24A6C412C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B2C8;
  if (!qword_25794B2C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B2D0);
    v2[0] = sub_24A63CFF0(&qword_25794B2D8, &qword_25794B2E0, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A69F3D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B2C8);
  }
  return result;
}

uint64_t sub_24A6C41B0(uint64_t a1)
{
  sub_24A63BEC0(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_24A6C41DC(uint64_t a1)
{
  sub_24A63BEDC(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

unint64_t sub_24A6C4210()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794B2F0;
  if (!qword_25794B2F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B2E8);
    v2 = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B2F0);
  }
  return result;
}

uint64_t sub_24A6C4294()
{
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_24A6C42C8()
{
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24A6C42F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(void **)(v1 + 128);
  if (v2 && (v3 = *(void **)(v1 + 136)) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474F8);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_24A780450;
    v6 = v2;
    v7 = v3;
    MEMORY[0x24BD189B8](v6);
    *(_QWORD *)(v5 + 32) = sub_24A77B62C();
    *(_QWORD *)(v5 + 40) = v8;
    v9 = v7;
    MEMORY[0x24BD189B8]();
    *(_QWORD *)(v5 + 48) = sub_24A77B62C();
    *(_QWORD *)(v5 + 56) = v10;
    MEMORY[0x24BD18C4C](v5);
    sub_24A77B6E0();
    sub_24A77B6D4();
    sub_24A77A570();

    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 32) = v13;
  }
  else
  {
    sub_24A77C01C();
    __break(1u);
  }
}

uint64_t SessionChart.init(data:chartProperties:faking:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;

  v40 = a3;
  v38 = a1;
  v39 = type metadata accessor for SessionChartState(0);
  MEMORY[0x24BDAC7A8](v39);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A77AD74();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2[1];
  v60 = *a2;
  v61 = v15;
  v62 = a2[2];
  v37 = (void *)*((_QWORD *)a2 + 6);
  v16 = *(__int128 *)((char *)a2 + 104);
  v56 = *(__int128 *)((char *)a2 + 88);
  v57 = v16;
  v58 = *(__int128 *)((char *)a2 + 120);
  v59 = *((_QWORD *)a2 + 17);
  v17 = *(__int128 *)((char *)a2 + 72);
  v54 = *(__int128 *)((char *)a2 + 56);
  v55 = v17;
  v18 = (int *)type metadata accessor for SessionChart(0);
  v19 = a4 + v18[8];
  v51 = 0;
  v52 = 0;
  v53 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B2F8);
  sub_24A77B47C();
  v20 = v42;
  v21 = *((_QWORD *)&v42 + 1);
  *(_OWORD *)v19 = v41;
  *(_BYTE *)(v19 + 16) = v20;
  *(_QWORD *)(v19 + 24) = v21;
  v36 = v18[10];
  sub_24A77B758();
  sub_24A77ADEC();
  v22 = sub_24A77ADC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
  sub_24A77AE1C();
  sub_24A63CD04((uint64_t)v14, &qword_257946FD0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDF15C0], v8);
  v23 = sub_24A77AD80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v41 = v60;
  v42 = v61;
  v43 = v62;
  v47 = v56;
  v48 = v57;
  v49 = v58;
  v24 = v55;
  v45 = v54;
  v25 = v37;
  *(_QWORD *)(a4 + v36) = v23;
  v44 = v25;
  v50 = v59;
  v46 = v24;
  v26 = v38;
  sub_24A6C47E4((uint64_t)&v41, (uint64_t)v7);
  *(_QWORD *)a4 = v26;
  v27 = v61;
  *(_OWORD *)(a4 + 8) = v60;
  *(_OWORD *)(a4 + 24) = v27;
  *(_OWORD *)(a4 + 40) = v62;
  *(_QWORD *)(a4 + 56) = v25;
  v28 = v57;
  *(_OWORD *)(a4 + 96) = v56;
  *(_OWORD *)(a4 + 112) = v28;
  *(_OWORD *)(a4 + 128) = v58;
  *(_QWORD *)(a4 + 144) = v59;
  v29 = v55;
  *(_OWORD *)(a4 + 64) = v54;
  *(_OWORD *)(a4 + 80) = v29;
  *(_QWORD *)(a4 + 152) = MEMORY[0x24BD189B8](v25);
  v30 = a4 + v18[7];
  sub_24A63CCC0((uint64_t)v7, v30, &qword_25794B300);
  *(_QWORD *)(v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794B308) + 28)) = 0;
  v31 = &v7[*(int *)(v39 + 20)];
  v32 = *(_QWORD *)v31;
  v33 = *((_QWORD *)v31 + 1);
  LOBYTE(v9) = v31[16];
  sub_24A65FB14((uint64_t)v7, type metadata accessor for SessionChartState);
  result = swift_release();
  *(_QWORD *)v19 = v32;
  *(_QWORD *)(v19 + 8) = v33;
  *(_BYTE *)(v19 + 16) = v9;
  *(_QWORD *)(v19 + 24) = 0;
  *(_BYTE *)(a4 + v18[9]) = v40;
  return result;
}

uint64_t type metadata accessor for SessionChartState(uint64_t a1)
{
  return sub_24A6AF174(a1, (uint64_t *)&unk_25794B4D8);
}

uint64_t type metadata accessor for SessionChart(uint64_t a1)
{
  return sub_24A6AF174(a1, (uint64_t *)&unk_25794B420);
}

uint64_t sub_24A6C47E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t result;
  double v49;
  double v50;
  char *v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  double v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  char v69;
  char v70;
  char *v71;
  uint64_t (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  char *v112;

  v108 = a2;
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5C8);
  MEMORY[0x24BDAC7A8](v104);
  v107 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v103 = (char *)&v97 - v5;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  MEMORY[0x24BDAC7A8](v105);
  v106 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A77922C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A778818();
  v12 = *(char **)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v97 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v102 = (char *)&v97 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v100 = (char *)&v97 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v101 = (char *)&v97 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v97 - v25;
  MEMORY[0x24BDAC7A8](v27);
  v30 = *(_QWORD *)(v29 + 16);
  v112 = v12;
  if (!v30)
  {
LABEL_15:
    sub_24A77880C();
    v53 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v12 + 2);
    v53(v14, v26, v11);
    sub_24A77877C();
    sub_24A63C880(qword_25794B4F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    result = sub_24A77B95C();
    if ((result & 1) != 0)
    {
      v55 = v103;
      v54 = v104;
      v56 = &v103[*(int *)(v104 + 48)];
      v57 = v11;
      v58 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v12 + 4);
      v58(v103, v17, v57);
      v58(v56, v26, v57);
      v59 = v107;
      v60 = &v107[*(int *)(v54 + 48)];
      v53(v107, v55, v57);
      v53(v60, v56, v57);
      v61 = v106;
      v58(v106, v59, v57);
      v62 = (void (*)(char *, uint64_t))*((_QWORD *)v112 + 1);
      v62(v60, v57);
      v63 = &v59[*(int *)(v54 + 48)];
      v58(v59, v55, v57);
      v58(v63, v56, v57);
      v58(&v61[*(int *)(v105 + 36)], v63, v57);
      v62(v59, v57);
      v64 = (uint64_t)v61;
LABEL_29:
      v83 = v108;
      sub_24A63F6C4(v64, v108, &qword_25794B300);
      result = type metadata accessor for SessionChartState(0);
      v84 = v83 + *(int *)(result + 20);
      *(_QWORD *)v84 = 0;
      *(_QWORD *)(v84 + 8) = 0;
      *(_BYTE *)(v84 + 16) = 1;
      return result;
    }
    goto LABEL_33;
  }
  v109 = (char *)&v97 - v28;
  v110 = v11;
  v31 = *(unsigned __int8 *)(a1 + 32);
  v97 = *(unsigned __int8 *)(a1 + 72);
  v98 = v31;
  v32 = *(double *)(a1 + 80);
  v33 = v29;
  sub_24A778788();
  v17 = (char *)(v33 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
  v34 = *(_QWORD *)(v8 + 72);
  v35 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v99 = v33;
  swift_bridgeObjectRetain();
  v36 = INFINITY;
  v37 = -INFINITY;
  do
  {
    v35(v10, v17, v7);
    sub_24A779214();
    v38 = sub_24A778800();
    v111 = (void (*)(char *, uint64_t))*((_QWORD *)v112 + 1);
    v111(v26, v110);
    if (v38 == 1)
    {
      sub_24A779214();
      v39 = v34;
      v40 = v8;
      v42 = v109;
      v41 = v110;
      v111(v109, v110);
      v43 = v42;
      v8 = v40;
      v34 = v39;
      (*((void (**)(char *, char *, uint64_t))v112 + 4))(v43, v26, v41);
    }
    sub_24A779220();
    if (v44 < v36)
    {
      sub_24A779220();
      v36 = v45;
    }
    sub_24A779220();
    if (v37 < v46)
    {
      sub_24A779220();
      v37 = v47;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v17 += v34;
    --v30;
  }
  while (v30);
  result = swift_bridgeObjectRelease();
  if (v36 > v37)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v37 - v36 >= v32)
  {
    v11 = v110;
    v51 = v112;
    v52 = v101;
    v12 = v102;
    v14 = v100;
  }
  else
  {
    v49 = (v36 + v37) * 0.5;
    v50 = v32 * 0.5;
    v11 = v110;
    v51 = v112;
    v52 = v101;
    v12 = v102;
    v14 = v100;
    if (v97)
    {
      v36 = v49 - v50;
      v37 = v50 + v49;
      if (v49 - v50 > v50 + v49)
      {
        __break(1u);
        goto LABEL_15;
      }
    }
    else
    {
      v65 = v50 - v49;
      if (v50 <= v49)
        v65 = 0.0;
      v36 = v49 - v50 + v65;
      v37 = v50 + v49 + v65;
      if (v36 > v37)
        goto LABEL_36;
    }
  }
  sub_24A77880C();
  v66 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v51 + 2);
  v66(v26, v52, v11);
  sub_24A77877C();
  v67 = v14;
  v68 = v109;
  if ((v98 & 1) == 0)
  {
    sub_24A778788();
    v69 = sub_24A7787DC();
    v111(v26, v11);
    v67 = v14;
    if ((v69 & 1) == 0)
    {
      sub_24A63C880(qword_25794B4F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      if ((sub_24A77B950() & 1) != 0)
        v67 = v14;
      else
        v67 = v68;
    }
  }
  v66(v12, v67, v11);
  sub_24A63C880(qword_25794B4F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v70 = sub_24A77B95C();
  v71 = v14;
  v72 = (uint64_t (*)(char *, uint64_t))v111;
  v111(v71, v11);
  result = v72(v68, v11);
  if (v36 <= v37)
  {
    if ((v70 & 1) != 0)
    {
      v85 = v51;
      v87 = v103;
      v86 = v104;
      v88 = &v103[*(int *)(v104 + 48)];
      v89 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v85 + 4);
      v89(v103, v12, v11);
      v89(v88, v52, v11);
      v90 = v107;
      v91 = &v107[*(int *)(v86 + 48)];
      v66(v107, v87, v11);
      v66(v91, v88, v11);
      v92 = (uint64_t)v106;
      v89(v106, v90, v11);
      v93 = v111;
      v111(v91, v11);
      v94 = &v90[*(int *)(v86 + 48)];
      v89(v90, v87, v11);
      v89(v94, v88, v11);
      v89((char *)(v92 + *(int *)(v105 + 36)), v94, v11);
      v93(v90, v11);
      v95 = v108;
      sub_24A63F6C4(v92, v108, &qword_25794B300);
      result = type metadata accessor for SessionChartState(0);
      v96 = v95 + *(int *)(result + 20);
      *(double *)v96 = v36;
      *(double *)(v96 + 8) = v37;
      *(_BYTE *)(v96 + 16) = 0;
      return result;
    }
    goto LABEL_35;
  }
  if ((v70 & 1) != 0)
  {
    v73 = v51;
    v75 = v103;
    v74 = v104;
    v76 = &v103[*(int *)(v104 + 48)];
    v77 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v73 + 4);
    v77(v103, v12, v11);
    v77(v76, v52, v11);
    v78 = v107;
    v79 = &v107[*(int *)(v74 + 48)];
    v66(v107, v75, v11);
    v66(v79, v76, v11);
    v80 = v106;
    v77(v106, v78, v11);
    v81 = v111;
    v111(v79, v11);
    v82 = &v78[*(int *)(v74 + 48)];
    v77(v78, v75, v11);
    v77(v82, v76, v11);
    v77(&v80[*(int *)(v105 + 36)], v82, v11);
    v81(v78, v11);
    v64 = (uint64_t)v80;
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t SessionChart.body.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  v82 = a1;
  v2 = type metadata accessor for SessionChart(0);
  v80 = *(_QWORD *)(v2 - 8);
  v81 = *(_QWORD *)(v80 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v79 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B310);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  MEMORY[0x24BDAC7A8](v65);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B318);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B320);
  v67 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v62 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B328);
  v71 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v64 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B330);
  v73 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v68 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B338);
  v76 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v70 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B340);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v74 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v1;
  sub_24A6C57C4((uint64_t)v11);
  sub_24A6C5C30((uint64_t)v8);
  v17 = sub_24A77A360();
  v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v63(v6, 1, 1, v17);
  v18 = sub_24A6C6000();
  v19 = sub_24A6C6328(&qword_25794B370, &qword_25794B300, MEMORY[0x24BDB7A98]);
  v20 = v65;
  sub_24A77B020();
  sub_24A63CD04((uint64_t)v6, &qword_25794B310);
  sub_24A63CD04((uint64_t)v8, &qword_25794B300);
  sub_24A63CD04((uint64_t)v11, &qword_25794B318);
  v21 = v61;
  v84 = v61;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B378);
  v88 = v9;
  v89 = v20;
  v90 = v18;
  v91 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v24 = MEMORY[0x24BDB82F0];
  v25 = sub_24A63CFF0(&qword_25794B380, &qword_25794B378, MEMORY[0x24BDB82F0]);
  v26 = v64;
  v27 = v66;
  v28 = v62;
  sub_24A77AFE4();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v28, v27);
  v86 = sub_24A6C6234();
  v87 = v29;
  v63(v6, 1, 1, v17);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B388);
  v88 = v27;
  v89 = v22;
  v90 = OpaqueTypeConformance2;
  v91 = v25;
  v31 = swift_getOpaqueTypeConformance2();
  v32 = sub_24A6C6328((unint64_t *)&qword_25794B390, &qword_25794B388, MEMORY[0x24BDB84C8]);
  v33 = v68;
  v34 = v69;
  sub_24A77B038();
  sub_24A63CD04((uint64_t)v6, &qword_25794B310);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v34);
  v83 = v21;
  v35 = v21;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B398);
  v88 = v34;
  v89 = v30;
  v90 = v31;
  v91 = v32;
  v37 = swift_getOpaqueTypeConformance2();
  v38 = sub_24A63CFF0(&qword_25794B3A0, &qword_25794B398, v24);
  v39 = v70;
  v40 = v72;
  sub_24A77AFFC();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v40);
  v85 = *v35;
  v41 = v79;
  sub_24A6C67EC((uint64_t)v35, v79);
  v42 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  v43 = swift_allocObject();
  sub_24A6C6834(v41, v43 + v42);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B3A8);
  v88 = v40;
  v89 = v36;
  v90 = v37;
  v91 = v38;
  swift_getOpaqueTypeConformance2();
  sub_24A6C68C4();
  v44 = v74;
  v45 = v75;
  sub_24A77B2CC();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v39, v45);
  LOBYTE(v36) = sub_24A77ACC0();
  sub_24A77A390();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = v77;
  v55 = v82;
  v56 = v44;
  v57 = v44;
  v58 = v78;
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v82, v56, v78);
  v59 = v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794B3C0) + 36);
  *(_BYTE *)v59 = v36;
  *(_QWORD *)(v59 + 8) = v47;
  *(_QWORD *)(v59 + 16) = v49;
  *(_QWORD *)(v59 + 24) = v51;
  *(_QWORD *)(v59 + 32) = v53;
  *(_BYTE *)(v59 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v57, v58);
}

uint64_t sub_24A6C57C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v28 = a1;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B368);
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5D0);
  MEMORY[0x24BDAC7A8](v27);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SessionChart(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B358);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + 40) & 1) != 0)
  {
    v34 = *(_QWORD *)v2;
    sub_24A6C67EC(v2, (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = swift_allocObject();
    sub_24A6C6834((uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B3A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
    sub_24A63CFF0(&qword_25794B5D8, &qword_25794B3A8, MEMORY[0x24BEE12D8]);
    v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B040);
    v30 = sub_24A77A2E8();
    v31 = MEMORY[0x24BDF3E48];
    v32 = MEMORY[0x24BDB8280];
    v33 = MEMORY[0x24BDF3E18];
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v30 = v16;
    v31 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_24A63C880(&qword_25794B5E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5770], MEMORY[0x24BEC5788]);
    sub_24A77A228();
    v18 = v26;
    v19 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v6, v4, v29);
    swift_storeEnumTagMultiPayload();
    v20 = MEMORY[0x24BDB8148];
    sub_24A63CFF0(&qword_25794B350, &qword_25794B358, MEMORY[0x24BDB8148]);
    sub_24A63CFF0(&qword_25794B360, &qword_25794B368, v20);
    sub_24A77AB28();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  }
  else
  {
    v30 = *(_QWORD *)v2;
    sub_24A6C67EC(v2, (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v23 = swift_allocObject();
    sub_24A6C6834((uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B3A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5E8);
    sub_24A63CFF0(&qword_25794B5D8, &qword_25794B3A8, MEMORY[0x24BEE12D8]);
    sub_24A6CAE84();
    sub_24A63C880(&qword_25794B5E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5770], MEMORY[0x24BEC5788]);
    sub_24A77A228();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v13, v10);
    swift_storeEnumTagMultiPayload();
    v24 = MEMORY[0x24BDB8148];
    sub_24A63CFF0(&qword_25794B350, &qword_25794B358, MEMORY[0x24BDB8148]);
    sub_24A63CFF0(&qword_25794B360, &qword_25794B368, v24);
    sub_24A77AB28();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_24A6C5C30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t result;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;

  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5C8);
  MEMORY[0x24BDAC7A8](v46);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v39 - v6;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  MEMORY[0x24BDAC7A8](v44);
  v45 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A778818();
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - v12;
  v14 = sub_24A77922C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v39 - v19;
  if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for SessionChart(0) + 36)) == 1)
  {
    v40 = v4;
    v41 = a1;
    v21 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    if (v21)
    {
      v22 = *(_QWORD *)v1
          + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
      v23(v20, v22, v14);
      v23(v17, v22 + *(_QWORD *)(v15 + 72) * (v21 - 1), v14);
      v24 = v13;
      sub_24A779214();
      sub_24A779214();
      sub_24A63C880(qword_25794B4F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      LOBYTE(v22) = sub_24A77B95C();
      v25 = *(void (**)(char *, uint64_t))(v15 + 8);
      v25(v17, v14);
      v25(v20, v14);
      if ((v22 & 1) != 0)
      {
        v26 = v46;
        v27 = v42;
        v28 = &v42[*(int *)(v46 + 48)];
        v29 = v10;
        v30 = v43;
        v31 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
        v31(v42, v24, v8);
        v31(v28, v29, v8);
        v32 = v40;
        v33 = &v40[*(int *)(v26 + 48)];
        v34 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
        v34(v40, v27, v8);
        v34(v33, v28, v8);
        v35 = (uint64_t)v45;
        v31(v45, v32, v8);
        v36 = *(void (**)(char *, uint64_t))(v30 + 8);
        v36(v33, v8);
        v37 = &v32[*(int *)(v26 + 48)];
        v31(v32, v27, v8);
        v31(v37, v28, v8);
        v31((char *)(v35 + *(int *)(v44 + 36)), v37, v8);
        v36(v32, v8);
        return sub_24A63F6C4(v35, v41, &qword_25794B300);
      }
      __break(1u);
    }
    result = sub_24A77C01C();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
    return sub_24A77B488();
  }
  return result;
}

unint64_t sub_24A6C6000()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794B348;
  if (!qword_25794B348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B318);
    v2 = MEMORY[0x24BDB8148];
    v3[0] = sub_24A63CFF0(&qword_25794B350, &qword_25794B358, MEMORY[0x24BDB8148]);
    v3[1] = sub_24A63CFF0(&qword_25794B360, &qword_25794B368, v2);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B348);
  }
  return result;
}

uint64_t sub_24A6C60A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_24A77A198();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_24A77A12C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for SessionChart(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  sub_24A6C7E0C();
  sub_24A6C67EC(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_24A6C6834((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  sub_24A77A120();
  sub_24A77A18C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B548);
  sub_24A778818();
  sub_24A6CAB10();
  return sub_24A77A30C();
}

uint64_t sub_24A6C622C()
{
  uint64_t v0;

  return sub_24A6C60A4(*(_QWORD *)(v0 + 16));
}

double sub_24A6C6234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  double v9;
  char v10;
  double v11;
  __int128 v13;
  char v14;
  uint64_t v15;
  double v16;
  char v17;

  v1 = v0;
  v2 = type metadata accessor for SessionChart(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (double *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = v0 + *(int *)(v5 + 32);
  v7 = *(_BYTE *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  v13 = *(_OWORD *)v6;
  v14 = v7;
  v15 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B520);
  sub_24A77B488();
  v9 = v16;
  v10 = v17;
  sub_24A6C67EC(v1, (uint64_t)v4);
  if ((v10 & 1) == 0)
    goto LABEL_4;
  v11 = v4[11];
  sub_24A65FB14((uint64_t)v4, type metadata accessor for SessionChart);
  v9 = 0.0;
  if (v11 < 0.0)
  {
    __break(1u);
LABEL_4:
    sub_24A65FB14((uint64_t)v4, type metadata accessor for SessionChart);
  }
  return v9;
}

uint64_t sub_24A6C6328(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8498], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A6C637C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_24A77A198();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_24A77A12C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for SessionChart(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A780450;
  *(double *)(v7 + 32) = sub_24A6C6234();
  sub_24A6C6234();
  *(_QWORD *)(v7 + 40) = v8;
  sub_24A6C67EC(a1, (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  sub_24A6C6834((uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  sub_24A77A120();
  sub_24A77A18C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B528);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B530);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B538);
  v13 = sub_24A63CFF0(&qword_25794B540, &qword_25794B538, MEMORY[0x24BDB7E40]);
  v16 = v12;
  v17 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v16 = v11;
  v17 = MEMORY[0x24BDF3E48];
  v18 = OpaqueTypeConformance2;
  v19 = MEMORY[0x24BDF3E18];
  swift_getOpaqueTypeConformance2();
  return sub_24A77A30C();
}

uint64_t sub_24A6C65B4()
{
  uint64_t v0;

  return sub_24A6C637C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24A6C65BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char v23;
  __int128 *v24;
  char v25;
  uint64_t v26;
  __int128 v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[10];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for SessionChartState(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_OWORD *)(a3 + 88);
  v14 = *(_OWORD *)(a3 + 120);
  v39[6] = *(_OWORD *)(a3 + 104);
  v39[7] = v14;
  v39[8] = *(_OWORD *)(a3 + 136);
  v15 = *(_OWORD *)(a3 + 24);
  v16 = *(_OWORD *)(a3 + 56);
  v39[2] = *(_OWORD *)(a3 + 40);
  v39[3] = v16;
  v39[4] = *(_OWORD *)(a3 + 72);
  v39[5] = v13;
  v39[0] = *(_OWORD *)(a3 + 8);
  v39[1] = v15;
  v17 = *(_OWORD *)(a3 + 88);
  v18 = *(_OWORD *)(a3 + 120);
  v36 = *(_OWORD *)(a3 + 104);
  v37 = v18;
  v38 = *(_OWORD *)(a3 + 136);
  v19 = *(_OWORD *)(a3 + 24);
  v20 = *(_OWORD *)(a3 + 56);
  v32 = *(_OWORD *)(a3 + 40);
  v33 = v20;
  v34 = *(_OWORD *)(a3 + 72);
  v35 = v17;
  v30 = *(_OWORD *)(a3 + 8);
  v31 = v19;
  sub_24A6CA884((uint64_t)v39);
  sub_24A6C47E4((uint64_t)&v30, (uint64_t)v12);
  sub_24A6CA8F4((uint64_t)v39);
  sub_24A63CCC0((uint64_t)v12, (uint64_t)v9, &qword_25794B300);
  v21 = type metadata accessor for SessionChart(0);
  sub_24A63CCC0((uint64_t)v9, (uint64_t)v6, &qword_25794B300);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  sub_24A77B494();
  sub_24A63CD04((uint64_t)v9, &qword_25794B300);
  v22 = &v12[*(int *)(v10 + 20)];
  v23 = v22[16];
  v24 = (__int128 *)(a3 + *(int *)(v21 + 32));
  v25 = *((_BYTE *)v24 + 16);
  v26 = *((_QWORD *)v24 + 3);
  v30 = *v24;
  LOBYTE(v31) = v25;
  *((_QWORD *)&v31 + 1) = v26;
  v28 = *(_OWORD *)v22;
  v29 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B520);
  sub_24A77B494();
  return sub_24A65FB14((uint64_t)v12, type metadata accessor for SessionChartState);
}

uint64_t sub_24A6C67EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionChart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6C6834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionChart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6C6878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SessionChart(0) - 8) + 80);
  return sub_24A6C65BC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_24A6C68C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794B3B0;
  if (!qword_25794B3B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B3A8);
    v2 = sub_24A63C880(&qword_25794B3B8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5770], MEMORY[0x24BEC5780]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794B3B0);
  }
  return result;
}

uint64_t sub_24A6C6940()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6C6950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  void *v53;
  id v54;
  id v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t OpaqueTypeConformance2;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  void (*v125)(char *, uint64_t);
  _QWORD *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  unint64_t v140;
  _OWORD v141[2];
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;

  v123 = a2;
  v114 = sub_24A77A354();
  v111 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v109 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B610);
  v113 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v112 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B608);
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v115 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B1A8);
  v120 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v121 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v119 = (char *)&v92 - v8;
  v106 = sub_24A77A2D0();
  v103 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v101 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B600);
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v105 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B1A0);
  v132 = *(_QWORD *)(v11 - 8);
  v133 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v110 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v104 = (char *)&v92 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v131 = (char *)&v92 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v17);
  v98 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v92 - v20;
  v93 = sub_24A778818();
  v22 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v24 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A578);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_24A77A264();
  v99 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v95 = (char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5F8);
  v102 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v96 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B198);
  v135 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v129 = (char *)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v134 = (char *)&v92 - v32;
  sub_24A77A9C0();
  sub_24A779214();
  v128 = v27;
  v127 = v24;
  v33 = v93;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v125 = *(void (**)(char *, uint64_t))(v22 + 8);
  v34 = v24;
  v35 = v33;
  v125(v34, v33);
  sub_24A77A9C0();
  v36 = v126;
  *(_QWORD *)&v143 = sub_24A6C6234();
  v94 = v21;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v36[9];
  *(_QWORD *)&v143 = v36[8];
  *((_QWORD *)&v143 + 1) = v37;
  swift_bridgeObjectRetain();
  sub_24A779220();
  *(_QWORD *)&v141[0] = v38;
  v124 = sub_24A645928();
  sub_24A77A180();
  swift_bridgeObjectRelease();
  v39 = v95;
  sub_24A77A258();
  sub_24A6C42F8((uint64_t)v141);
  v143 = v141[0];
  v144 = v141[1];
  v145 = v142;
  v40 = MEMORY[0x24BDEC7D0];
  v41 = MEMORY[0x24BDB8198];
  v42 = MEMORY[0x24BDEC7B8];
  v43 = v96;
  v44 = v97;
  sub_24A77A09C();
  sub_24A646AE8((uint64_t)v141);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v39, v44);
  *(_QWORD *)&v143 = v44;
  *((_QWORD *)&v143 + 1) = v40;
  *(_QWORD *)&v144 = v41;
  *((_QWORD *)&v144 + 1) = v42;
  swift_getOpaqueTypeConformance2();
  v45 = v129;
  v46 = v100;
  sub_24A77A0B4();
  v47 = v43;
  v48 = v101;
  (*(void (**)(char *, uint64_t))(v102 + 8))(v47, v46);
  v49 = v35;
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v45, v130);
  sub_24A77A9C0();
  v50 = v127;
  sub_24A779214();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v125(v50, v49);
  v51 = v36[9];
  *(_QWORD *)&v143 = v36[8];
  *((_QWORD *)&v143 + 1) = v51;
  swift_bridgeObjectRetain();
  v102 = a1;
  sub_24A779220();
  v137 = v52;
  sub_24A77A180();
  swift_bridgeObjectRelease();
  sub_24A77A2C4();
  v53 = (void *)v36[18];
  if (v53)
  {
    v54 = (id)v36[18];
  }
  else
  {
    v54 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v53 = 0;
  }
  v55 = v53;
  *(_QWORD *)&v143 = MEMORY[0x24BD189B8](v54);
  v56 = (char *)MEMORY[0x24BDB8230];
  v57 = v105;
  v58 = v106;
  v59 = MEMORY[0x24BDF3E48];
  v60 = MEMORY[0x24BDF3E18];
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v48, v58);
  sub_24A77A408();
  v137 = (char *)v58;
  v138 = v59;
  v139 = v56;
  v140 = v60;
  swift_getOpaqueTypeConformance2();
  v61 = v104;
  v62 = v108;
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)&v143);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v57, v62);
  (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v131, v61, v133);
  sub_24A77A9C0();
  v63 = v127;
  v64 = v102;
  sub_24A779214();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v125(v63, v49);
  v65 = v126[9];
  v137 = (char *)v126[8];
  v138 = v65;
  swift_bridgeObjectRetain();
  sub_24A779220();
  v136 = v66;
  sub_24A77A180();
  swift_bridgeObjectRelease();
  v67 = v109;
  sub_24A77A348();
  v68 = sub_24A6BFBF0();
  v69 = MEMORY[0x24BDF4458];
  v70 = (char *)MEMORY[0x24BDB8320];
  v71 = v112;
  v72 = v114;
  sub_24A77A0D8();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v67, v72);
  v137 = (char *)v72;
  v138 = v69;
  v139 = v70;
  v140 = v68;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v74 = v115;
  v75 = v116;
  sub_24A77A078();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v71, v75);
  v136 = sub_24A6C7A58(v64);
  v137 = (char *)v75;
  v138 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v76 = v121;
  v77 = v118;
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v77);
  v78 = v120;
  v79 = v119;
  v80 = v122;
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v76, v122);
  v81 = v129;
  v82 = v130;
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v129, v134, v130);
  v137 = v81;
  v84 = v132;
  v83 = v133;
  v85 = v110;
  v86 = v131;
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v110, v131, v133);
  v138 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v76, v79, v80);
  v139 = v76;
  sub_24A6BED88(&v137, v123);
  v87 = *(void (**)(char *, uint64_t))(v78 + 8);
  v87(v79, v80);
  v88 = *(void (**)(char *, uint64_t))(v84 + 8);
  v89 = v83;
  v88(v86, v83);
  v90 = *(void (**)(char *, uint64_t))(v135 + 8);
  v90(v134, v82);
  v87(v76, v80);
  v88(v85, v89);
  return ((uint64_t (*)(char *, uint64_t))v90)(v81, v82);
}

uint64_t sub_24A6C7690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v31 = a1;
  v41 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v2);
  v38 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v30 - v5;
  v6 = sub_24A778818();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A578);
  MEMORY[0x24BDAC7A8](v10);
  v32 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24A77A2E8();
  v13 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  v37 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B040);
  v17 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  v40 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v33 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A9C0();
  sub_24A779214();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = *(_QWORD *)(v34 + 72);
  v46 = *(_QWORD *)(v34 + 64);
  v20 = v46;
  v47 = v19;
  swift_bridgeObjectRetain();
  v42 = sub_24A6C6234();
  sub_24A645928();
  sub_24A77A180();
  swift_bridgeObjectRelease();
  v46 = v20;
  v47 = v19;
  swift_bridgeObjectRetain();
  v21 = v31;
  sub_24A779220();
  v42 = v22;
  sub_24A77A180();
  swift_bridgeObjectRelease();
  sub_24A77A2DC();
  v46 = sub_24A6C7A58(v21);
  v23 = MEMORY[0x24BDF3E48];
  v24 = MEMORY[0x24BDB8280];
  v25 = MEMORY[0x24BDF3E18];
  v26 = v33;
  v27 = *(double *)&v36;
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, double))(v37 + 8))(v15, COERCE_DOUBLE(*(_QWORD *)&v27));
  sub_24A77A408();
  v42 = v27;
  v43 = v23;
  v44 = v24;
  v45 = v25;
  swift_getOpaqueTypeConformance2();
  v28 = v39;
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)&v46);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v26, v28);
}

uint64_t sub_24A6C7A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char *v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t, double);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  id v27;
  id v28;
  unsigned int v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;

  v2 = v1;
  v4 = sub_24A77922C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B618);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B620);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v37 - v15;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v37 - v18;
  v21 = *(void **)(v2 + 104);
  if (!v21 || *(_BYTE *)(v2 + 96) != 1)
    return swift_retain();
  v38 = v7;
  v39 = a1;
  v40 = v21;
  v22 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v22)
  {
    v23 = *(void (**)(char *, unint64_t, uint64_t, double))(v5 + 16);
    v23((char *)&v37 - v18, *(_QWORD *)v2+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * (v22 - 1), v4, v19);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v20, 0, 1, v4);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
    v24((char *)&v37 - v18, 1, 1, v4, v19);
    v23 = *(void (**)(char *, unint64_t, uint64_t, double))(v5 + 16);
  }
  ((void (*)(char *, uint64_t, uint64_t))v23)(v16, v39, v4);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v16, 0, 1, v4);
  v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_24A63CCC0((uint64_t)v20, (uint64_t)v10, &qword_25794B620);
  sub_24A63CCC0((uint64_t)v16, v25, &qword_25794B620);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v10, 1, v4) == 1)
  {
    v27 = v40;
    v28 = v40;
    sub_24A63CD04((uint64_t)v16, &qword_25794B620);
    sub_24A63CD04((uint64_t)v20, &qword_25794B620);
    if (v26(v25, 1, v4) == 1)
    {
      sub_24A63CD04((uint64_t)v10, &qword_25794B620);
      return MEMORY[0x24BD189B8](v27);
    }
  }
  else
  {
    sub_24A63CCC0((uint64_t)v10, (uint64_t)v13, &qword_25794B620);
    v29 = v26(v25, 1, v4);
    v30 = v40;
    if (v29 != 1)
    {
      v32 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v38, v25, v4);
      sub_24A63C880(&qword_25794B3B8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5770], MEMORY[0x24BEC5780]);
      v33 = v30;
      v34 = sub_24A77B974();
      v35 = *(void (**)(char *, uint64_t))(v5 + 8);
      v35(v32, v4);
      sub_24A63CD04((uint64_t)v16, &qword_25794B620);
      sub_24A63CD04((uint64_t)v20, &qword_25794B620);
      v35(v13, v4);
      v27 = v40;
      sub_24A63CD04((uint64_t)v10, &qword_25794B620);
      if ((v34 & 1) != 0)
        return MEMORY[0x24BD189B8](v27);
      goto LABEL_14;
    }
    v31 = v40;
    sub_24A63CD04((uint64_t)v16, &qword_25794B620);
    v27 = v40;
    sub_24A63CD04((uint64_t)v20, &qword_25794B620);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  }
  sub_24A63CD04((uint64_t)v10, &qword_25794B618);
LABEL_14:

  return swift_retain();
}

unint64_t sub_24A6C7E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  char v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, char *, uint64_t);
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v1 = v0;
  v2 = sub_24A778818();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v38 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v36 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - v14;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  MEMORY[0x24BDAC7A8](v44);
  v37 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v36 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947478);
  v20 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v40 = *(_QWORD *)(v3 + 72);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24A780030;
  v39 = v20;
  v42 = v21 + v20;
  v22 = v1 + *(int *)(type metadata accessor for SessionChart(0) + 28);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  sub_24A77B488();
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 16);
  v24(v42, v19, v2);
  sub_24A63CD04((uint64_t)v19, &qword_25794B300);
  v42 = v23;
  v43 = v22;
  sub_24A77B488();
  v24((uint64_t)v12, v19, v2);
  sub_24A63CD04((uint64_t)v19, &qword_25794B300);
  sub_24A7787A0();
  v41 = v3;
  v25 = *(void (**)(char *, uint64_t))(v3 + 8);
  v25(v12, v2);
  while (1)
  {
    v24((uint64_t)v12, v15, v2);
    sub_24A77B488();
    v24((uint64_t)v9, &v19[*(int *)(v44 + 36)], v2);
    sub_24A63CD04((uint64_t)v19, &qword_25794B300);
    v26 = sub_24A7787B8();
    v25(v9, v2);
    v25(v12, v2);
    if ((v26 & 1) == 0)
      break;
    v24((uint64_t)v45, v15, v2);
    v28 = *(_QWORD *)(v21 + 16);
    v27 = *(_QWORD *)(v21 + 24);
    if (v28 >= v27 >> 1)
      v21 = sub_24A64D6BC(v27 > 1, v28 + 1, 1, v21);
    *(_QWORD *)(v21 + 16) = v28 + 1;
    v29 = v21 + v39 + v28 * v40;
    v30 = *(void (**)(unint64_t, char *, uint64_t))(v41 + 32);
    v30(v29, v45, v2);
    sub_24A7787A0();
    v25(v15, v2);
    v30((unint64_t)v15, v12, v2);
  }
  v31 = (uint64_t)v37;
  sub_24A77B488();
  v32 = v38;
  v24((uint64_t)v38, (char *)(v31 + *(int *)(v44 + 36)), v2);
  sub_24A63CD04(v31, &qword_25794B300);
  v34 = *(_QWORD *)(v21 + 16);
  v33 = *(_QWORD *)(v21 + 24);
  if (v34 >= v33 >> 1)
    v21 = sub_24A64D6BC(v33 > 1, v34 + 1, 1, v21);
  *(_QWORD *)(v21 + 16) = v34 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v21 + v39 + v34 * v40, v32, v2);
  v25(v15, v2);
  return v21;
}

uint64_t sub_24A6C8208@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5A0);
  MEMORY[0x24BDAC7A8](v31);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B570);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B560);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B598);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5A8);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v31 - v20;
  v22 = sub_24A77A33C();
  if (v22)
  {
    v23 = v22;
    v24 = v34;
    result = sub_24A77A330();
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else if (result - 1 == v23)
    {
      sub_24A6C8F0C((uint64_t)v21);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v21, v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5B8);
      swift_storeEnumTagMultiPayload();
      sub_24A63CCC0((uint64_t)v8, v24, &qword_25794B560);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5B0);
      swift_storeEnumTagMultiPayload();
      sub_24A63CD04((uint64_t)v8, &qword_25794B560);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    }
    else
    {
      sub_24A6C8D50((uint64_t)v14);
      sub_24A63CCC0((uint64_t)v14, v24, &qword_25794B598);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5B0);
      swift_storeEnumTagMultiPayload();
      return sub_24A63CD04((uint64_t)v14, &qword_25794B598);
    }
  }
  else
  {
    sub_24A6C8638((uint64_t)v21);
    sub_24A6C8D50((uint64_t)v14);
    v26 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v26(v18, v21, v15);
    sub_24A63CCC0((uint64_t)v14, (uint64_t)v11, &qword_25794B598);
    sub_24A63CFF0(&qword_25794B588, &qword_25794B580, MEMORY[0x24BDB7E40]);
    v26(v3, v18, v15);
    sub_24A6CAD6C();
    v33 = v21;
    v27 = v31;
    v28 = (uint64_t)&v3[*(int *)(v31 + 48)];
    sub_24A63CCC0((uint64_t)v11, v28, &qword_25794B598);
    v29 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v32, v3, v15);
    sub_24A63F6C4(v28, v29 + *(int *)(v27 + 48), &qword_25794B598);
    sub_24A63CD04((uint64_t)v11, &qword_25794B598);
    v30 = *(void (**)(char *, uint64_t))(v16 + 8);
    v30(v18, v15);
    sub_24A63CCC0(v29, (uint64_t)v8, &qword_25794B570);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5B8);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04(v29, &qword_25794B570);
    sub_24A63CCC0((uint64_t)v8, v34, &qword_25794B560);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5B0);
    swift_storeEnumTagMultiPayload();
    sub_24A63CD04((uint64_t)v8, &qword_25794B560);
    sub_24A63CD04((uint64_t)v14, &qword_25794B598);
    return ((uint64_t (*)(char *, uint64_t))v30)(v33, v15);
  }
  return result;
}

uint64_t sub_24A6C8638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  double v31;
  double v32;
  void (*v33)(char *, uint64_t);
  double v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  unint64_t v47;
  uint64_t v48;
  _QWORD v49[4];
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v4 = sub_24A77A1EC();
  MEMORY[0x24BDAC7A8](v4);
  v49[3] = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A77A204();
  MEMORY[0x24BDAC7A8](v6);
  v49[2] = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B580);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B578);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v53 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24A778818();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v49 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v49 - v23;
  if (*(_BYTE *)(v1 + 40) != 1)
  {
    v49[1] = a1;
    type metadata accessor for SessionChart(0);
    v49[0] = v1;
    a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
    sub_24A77B488();
    v30 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v30(v18, &v24[*(int *)(v19 + 36)], v12);
    sub_24A63CD04((uint64_t)v24, &qword_25794B300);
    sub_24A77B488();
    v30(v15, v21, v12);
    sub_24A63CD04((uint64_t)v21, &qword_25794B300);
    sub_24A778794();
    v32 = v31;
    v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    v33(v15, v12);
    v33(v18, v12);
    v34 = round(v32 / 60.0);
    if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) != 0)
    {
      if (v34 > -9.22337204e18)
      {
        if (v34 < 9.22337204e18)
        {
          a1 = (uint64_t)v34;
          if (qword_2544D6160 == -1)
          {
LABEL_12:
            swift_beginAccess();
            v35 = (id)qword_2544D6158;
            v47 = 0xE000000000000000;
            sub_24A77856C();

            __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
            v36 = swift_allocObject();
            v37 = MEMORY[0x24BEE1768];
            *(_OWORD *)(v36 + 16) = xmmword_24A780030;
            v38 = MEMORY[0x24BEE17F0];
            *(_QWORD *)(v36 + 56) = v37;
            *(_QWORD *)(v36 + 64) = v38;
            *(_QWORD *)(v36 + 32) = a1;
            sub_24A77B98C();
            swift_bridgeObjectRelease();
            v29 = swift_bridgeObjectRelease();
            v2 = v49[0];
            goto LABEL_13;
          }
LABEL_20:
          swift_once();
          goto LABEL_12;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v25 = (id)qword_2544D6158;
  v47 = 0xE000000000000000;
  sub_24A77856C();

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24A780030;
  v27 = round(*(double *)(v1 + 16) / 60.0);
  if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v28 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v26 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v26 + 64) = v28;
  *(_QWORD *)(v26 + 32) = (uint64_t)v27;
  sub_24A77B98C();
  swift_bridgeObjectRelease();
  v29 = swift_bridgeObjectRelease();
LABEL_13:
  MEMORY[0x24BDAC7A8](v29);
  sub_24A77A1F8();
  sub_24A77A1E0();
  v47 = MEMORY[0x24BDF1FA8];
  v48 = MEMORY[0x24BDF1F80];
  v46[0] = sub_24A6CAE08;
  v46[1] = v46;
  v39 = v50;
  sub_24A77A15C();
  swift_bridgeObjectRelease();
  type metadata accessor for SessionChart(0);
  v40 = sub_24A63CFF0(&qword_25794B588, &qword_25794B580, MEMORY[0x24BDB7E40]);
  v42 = v52;
  v41 = v53;
  sub_24A77A27C();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v42);
  v43 = MEMORY[0x24BD189B8](*(id *)(v2 + 120));
  v57 = v40;
  v58 = v43;
  v56 = v42;
  swift_getOpaqueTypeConformance2();
  v44 = v55;
  sub_24A77A270();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v41, v44);
}

uint64_t sub_24A6C8D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v3 = sub_24A77A030();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B5C0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v8 + 56))(a1, 1, 1, v7, v9);
  sub_24A77A408();
  v17 = v14;
  v18 = v15;
  v19 = v16;
  sub_24A77A024();
  v13[1] = MEMORY[0x24BD189B8](*(id *)(v1 + 112));
  sub_24A77A270();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v11, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
}

uint64_t sub_24A6C8F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = a1;
  v1 = sub_24A77A1EC();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_24A77A204();
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B580);
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B578);
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v9 = (id)qword_2544D6158;
  v10 = sub_24A77856C();
  v12 = v11;

  v23 = v10;
  v24 = v12;
  sub_24A645928();
  sub_24A77BE54();
  v13 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v13);
  sub_24A77A1F8();
  sub_24A77A1E0();
  v17[2] = MEMORY[0x24BDF1FA8];
  v17[3] = MEMORY[0x24BDF1F80];
  v17[0] = sub_24A6CAE08;
  v17[1] = v17;
  sub_24A77A15C();
  swift_bridgeObjectRelease();
  type metadata accessor for SessionChart(0);
  v14 = v20;
  v15 = sub_24A63CFF0(&qword_25794B588, &qword_25794B580, MEMORY[0x24BDB7E40]);
  sub_24A77A27C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  v22 = MEMORY[0x24BD189B8](*(id *)(v14 + 120));
  v23 = v3;
  v24 = v15;
  swift_getOpaqueTypeConformance2();
  sub_24A77A270();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v6);
}

uint64_t sub_24A6C9290@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_24A645928();
  swift_bridgeObjectRetain();
  result = sub_24A77AFD8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_24A6C92F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v16[0] = a2;
  v3 = sub_24A77A1EC();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_24A77A204();
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B538);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B530);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A1F8();
  sub_24A77A1E0();
  sub_24A77A168();
  type metadata accessor for SessionChart(0);
  v13 = sub_24A63CFF0(&qword_25794B540, &qword_25794B538, MEMORY[0x24BDB7E40]);
  sub_24A77A27C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = MEMORY[0x24BD189B8](*(id *)(a1 + 120));
  v16[2] = v13;
  v16[3] = v14;
  v16[1] = v5;
  swift_getOpaqueTypeConformance2();
  sub_24A77A270();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionChart(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v31;
  void *v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  void *v34;
  uint64_t v35;
  uint64_t v36;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = (void *)a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v9;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    v10 = (void *)a2[13];
    v11 = (void *)a2[14];
    *(_QWORD *)(a1 + 104) = v10;
    *(_QWORD *)(a1 + 112) = v11;
    v13 = (void *)a2[15];
    v12 = (void *)a2[16];
    *(_QWORD *)(a1 + 120) = v13;
    *(_QWORD *)(a1 + 128) = v12;
    v31 = v12;
    v32 = (void *)a2[17];
    v14 = a2[19];
    v34 = (void *)a2[18];
    *(_QWORD *)(a1 + 136) = v32;
    *(_QWORD *)(a1 + 144) = v34;
    v15 = a3[7];
    v35 = (uint64_t)a2 + v15;
    v36 = a1 + v15;
    *(_QWORD *)(a1 + 152) = v14;
    v16 = sub_24A778818();
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17 = v8;
    swift_bridgeObjectRetain();
    v18 = v10;
    v19 = v11;
    v20 = v13;
    v21 = v31;
    v22 = v32;
    v23 = v34;
    swift_retain();
    v33(v36, v35, v16);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
    v33(v36 + *(int *)(v24 + 36), v35 + *(int *)(v24 + 36), v16);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
    *(_QWORD *)(v36 + *(int *)(v25 + 28)) = *(_QWORD *)(v35 + *(int *)(v25 + 28));
    v26 = a3[8];
    v27 = a3[9];
    v28 = v7 + v26;
    v29 = (uint64_t)a2 + v26;
    *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    *(_BYTE *)(v7 + v27) = *((_BYTE *)a2 + v27);
    *(_QWORD *)(v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for SessionChart(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_24A778818();
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v6(&v4[*(int *)(v7 + 36)], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  void *v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v8 = *(void **)(a2 + 104);
  v7 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v8;
  *(_QWORD *)(a1 + 112) = v7;
  v9 = *(void **)(a2 + 120);
  v10 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = v10;
  v11 = *(void **)(a2 + 136);
  v29 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v11;
  *(_QWORD *)(a1 + 144) = v29;
  v12 = a3[7];
  v30 = a2 + v12;
  v31 = a1 + v12;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v13 = sub_24A778818();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14 = v5;
  swift_bridgeObjectRetain();
  v15 = v8;
  v16 = v7;
  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = v29;
  swift_retain();
  v28(v31, v30, v13);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v28(v31 + *(int *)(v21 + 36), v30 + *(int *)(v21 + 36), v13);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  *(_QWORD *)(v31 + *(int *)(v22 + 28)) = *(_QWORD *)(v30 + *(int *)(v22 + 28));
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v9 = *(void **)(a1 + 104);
  v10 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = v10;

  v12 = *(void **)(a2 + 112);
  v13 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 120);
  v16 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v15;
  v17 = v15;

  v18 = *(void **)(a1 + 128);
  v19 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v19;
  v20 = v19;

  v21 = *(void **)(a1 + 136);
  v22 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v22;
  v23 = v22;

  v24 = *(void **)(a1 + 144);
  v25 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 144) = v25;
  v26 = v25;

  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_retain();
  swift_release();
  v27 = a3[7];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_24A778818();
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24);
  v31(v28, v29, v30);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v31(v28 + *(int *)(v32 + 36), v29 + *(int *)(v32 + 36), v30);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  *(_QWORD *)(v28 + *(int *)(v33 + 28)) = *(_QWORD *)(v29 + *(int *)(v33 + 28));
  swift_retain();
  swift_release();
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = (__int128 *)(a2 + v34);
  v37 = *v36;
  *(_BYTE *)(v35 + 16) = *((_BYTE *)v36 + 16);
  *(_OWORD *)v35 = v37;
  *(_QWORD *)(v35 + 24) = *((_QWORD *)v36 + 3);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 8) = v6;
  v10 = sub_24A778818();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  *(_QWORD *)(v8 + *(int *)(v13 + 28)) = *(_QWORD *)(v9 + *(int *)(v13 + 28));
  v14 = a3[8];
  v15 = a3[9];
  v16 = (_OWORD *)(a1 + v14);
  v17 = (_OWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for SessionChart(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v8 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  v9 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  v10 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  v11 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  v12 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  v13 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);

  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_release();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_24A778818();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v18(v15 + *(int *)(v19 + 36), v16 + *(int *)(v19 + 36), v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  *(_QWORD *)(v15 + *(int *)(v20 + 28)) = *(_QWORD *)(v16 + *(int *)(v20 + 28));
  swift_release();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  swift_release();
  v24 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionChart()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6C9F24(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SessionChart()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24A6C9FB0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_24A6CA028()
{
  unint64_t v0;

  sub_24A6CA0CC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24A6CA0CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25794B430)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B300);
    v0 = sub_24A77B4AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25794B430);
  }
}

unint64_t sub_24A6CA128()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[6];

  result = qword_25794B478;
  if (!qword_25794B478)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B3C0);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B338);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B3A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B330);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B398);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B328);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B388);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B320);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B378);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B318);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B300);
    sub_24A6C6000();
    sub_24A6C6328(&qword_25794B370, &qword_25794B300, MEMORY[0x24BDB7A98]);
    swift_getOpaqueTypeConformance2();
    v1 = MEMORY[0x24BDB82F0];
    sub_24A63CFF0(&qword_25794B380, &qword_25794B378, MEMORY[0x24BDB82F0]);
    swift_getOpaqueTypeConformance2();
    sub_24A6C6328((unint64_t *)&qword_25794B390, &qword_25794B388, MEMORY[0x24BDB84C8]);
    swift_getOpaqueTypeConformance2();
    sub_24A63CFF0(&qword_25794B3A0, &qword_25794B398, v1);
    v5[2] = v3;
    v5[3] = v2;
    v5[4] = swift_getOpaqueTypeConformance2();
    v5[5] = sub_24A6C68C4();
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v4, v5);
    atomic_store(result, (unint64_t *)&qword_25794B478);
  }
  return result;
}

uint64_t *sub_24A6CA374(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A778818();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
  }
  return a1;
}

uint64_t sub_24A6CA438(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(uint64_t, uint64_t);

  v2 = sub_24A778818();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794B300) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v3, v2);
}

uint64_t sub_24A6CA4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_24A778818();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  return a1;
}

uint64_t sub_24A6CA538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = sub_24A778818();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = v12;
  return a1;
}

uint64_t sub_24A6CA5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_24A778818();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  return a1;
}

uint64_t sub_24A6CA668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_24A778818();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  return a1;
}

uint64_t sub_24A6CA700()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6CA70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_24A6CA74C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6CA758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_24A6CA79C()
{
  unint64_t v0;

  sub_24A6CA80C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24A6CA80C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25794B4E8)
  {
    sub_24A778818();
    sub_24A63C880(qword_25794B4F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v0 = sub_24A77B968();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25794B4E8);
  }
}

uint64_t sub_24A6CA884(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *(void **)(a1 + 48);
  v3 = *(void **)(a1 + 96);
  v4 = *(void **)(a1 + 104);
  v5 = *(void **)(a1 + 112);
  v6 = *(void **)(a1 + 120);
  v7 = *(void **)(a1 + 128);
  v8 = *(id *)(a1 + 136);
  v9 = v2;
  swift_bridgeObjectRetain();
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  return a1;
}

uint64_t sub_24A6CA8F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = *(void **)(a1 + 48);
  v3 = *(void **)(a1 + 96);
  v4 = *(void **)(a1 + 104);
  v5 = *(void **)(a1 + 120);
  v6 = *(void **)(a1 + 128);
  v7 = *(void **)(a1 + 136);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;

  v1 = type metadata accessor for SessionChart(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  v4 = (char *)v3 + *(int *)(v1 + 28);
  v5 = sub_24A778818();
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B300);
  v6(&v4[*(int *)(v7 + 36)], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B308);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6CAA98(uint64_t a1)
{
  return sub_24A6CAAB4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_24A6C92F8);
}

uint64_t sub_24A6CAAA8(uint64_t a1)
{
  return sub_24A6CAAB4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_24A6C8208);
}

uint64_t sub_24A6CAAB4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SessionChart(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_24A6CAB10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B550;
  if (!qword_25794B550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B548);
    v2[0] = sub_24A6CAB7C();
    v2[1] = sub_24A6CAD6C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7FB0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B550);
  }
  return result;
}

unint64_t sub_24A6CAB7C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  _QWORD v5[6];

  result = qword_25794B558;
  if (!qword_25794B558)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B560);
    v2 = sub_24A6CAC74();
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B578);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B580);
    sub_24A63CFF0(&qword_25794B588, &qword_25794B580, MEMORY[0x24BDB7E40]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5[2] = v3;
    v5[3] = MEMORY[0x24BDF3E48];
    v5[4] = OpaqueTypeConformance2;
    v5[5] = MEMORY[0x24BDF3E18];
    v5[0] = v2;
    v5[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7FB0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25794B558);
  }
  return result;
}

unint64_t sub_24A6CAC74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD v3[4];

  result = qword_25794B568;
  if (!qword_25794B568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B570);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B578);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B580);
    sub_24A63CFF0(&qword_25794B588, &qword_25794B580, MEMORY[0x24BDB7E40]);
    v3[2] = swift_getOpaqueTypeConformance2();
    v3[3] = MEMORY[0x24BDF3E18];
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_24A6CAD6C();
    v2 = v3;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B88], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794B568);
  }
  return result;
}

unint64_t sub_24A6CAD6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_25794B590;
  if (!qword_25794B590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B598);
    v2[1] = sub_24A77A030();
    v2[2] = MEMORY[0x24BDF3E48];
    v2[3] = MEMORY[0x24BDB7B30];
    v2[4] = MEMORY[0x24BDF3E18];
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB84F8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B590);
  }
  return result;
}

uint64_t sub_24A6CAE08@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6C9290(a1);
}

uint64_t sub_24A6CAE14(uint64_t a1)
{
  return sub_24A6CAE30(a1, (uint64_t (*)(uint64_t))sub_24A6C7690);
}

uint64_t sub_24A6CAE24(uint64_t a1)
{
  return sub_24A6CAE30(a1, (uint64_t (*)(uint64_t))sub_24A6C6950);
}

uint64_t sub_24A6CAE30(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  type metadata accessor for SessionChart(0);
  return a2(a1);
}

unint64_t sub_24A6CAE84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];
  _QWORD v6[3];

  result = qword_25794B5F0;
  if (!qword_25794B5F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B5E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B5F8);
    sub_24A77A264();
    swift_getOpaqueTypeConformance2();
    v6[0] = swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B600);
    sub_24A77A2D0();
    v2 = MEMORY[0x24BDF3E48];
    v3 = MEMORY[0x24BDF3E18];
    swift_getOpaqueTypeConformance2();
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B608);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B610);
    sub_24A77A354();
    sub_24A6BFBF0();
    swift_getOpaqueTypeConformance2();
    v5[1] = v4;
    v5[2] = v2;
    v5[3] = swift_getOpaqueTypeConformance2();
    v5[4] = v3;
    v6[2] = swift_getOpaqueTypeConformance2();
    v5[0] = v6;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25794B5F0);
  }
  return result;
}

uint64_t DownhillRun.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6CB0C8(&OBJC_IVAR___WODownhillRun_startTime, a1);
}

uint64_t DownhillRun.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6CB0C8(&OBJC_IVAR___WODownhillRun_endTime, a1);
}

