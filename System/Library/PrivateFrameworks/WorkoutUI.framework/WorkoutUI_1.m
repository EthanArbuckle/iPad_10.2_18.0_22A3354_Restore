uint64_t sub_24A6CB0C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_24A778818();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

double sub_24A6CB14C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___WODownhillRun_workoutTime;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_24A6CB1E0(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR___WODownhillRun_workoutTime);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_24A6CB230())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void *DownhillRun.averageSpeed.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_averageSpeed);
  v2 = v1;
  return v1;
}

void *DownhillRun.maximumSpeed.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_maximumSpeed);
  v2 = v1;
  return v1;
}

void *DownhillRun.alpineSlope.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_alpineSlope);
  v2 = v1;
  return v1;
}

void *DownhillRun.elevationAscended.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_elevationAscended);
  v2 = v1;
  return v1;
}

void *DownhillRun.elevationDescended.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___WODownhillRun_elevationDescended);
  v2 = v1;
  return v1;
}

void *sub_24A6CB3AC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___WODownhillRun_distance);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_24A6CB404(void *a1)
{
  sub_24A6CB560(a1, &OBJC_IVAR___WODownhillRun_distance);
}

uint64_t (*sub_24A6CB410())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_24A6CB460(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id *v3;

  v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *sub_24A6CB4A4()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___WODownhillRun_averageHeartRate);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_24A6CB4FC(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  void **v5;
  void *v6;
  id v7;

  v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a3;
  v7 = a3;

}

void sub_24A6CB554(void *a1)
{
  sub_24A6CB560(a1, &OBJC_IVAR___WODownhillRun_averageHeartRate);
}

void sub_24A6CB560(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;

}

void sub_24A6CB5AC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  void **v6;
  void *v7;
  id v8;

  v5 = *a1;
  v6 = (void **)(*a2 + *a5);
  swift_beginAccess();
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

}

uint64_t (*sub_24A6CB608())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id DownhillRun.__allocating_init(downhillRunEvent:workoutTime:distance:averageHeartRate:)(void *a1, void *a2, void *a3, double a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_24A6CCCC0(a1, a2, a3, a4);

  return v10;
}

id DownhillRun.init(downhillRunEvent:workoutTime:distance:averageHeartRate:)(void *a1, void *a2, void *a3, double a4)
{
  id v7;

  v7 = sub_24A6CCCC0(a1, a2, a3, a4);

  return v7;
}

void sub_24A6CB784(void *a1, void *a2, uint64_t a3, dispatch_group_t group, const char *a5)
{
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  void **v18;
  void *v19;
  id v20;
  uint64_t v21;

  if (a2)
  {
    sub_24A64F254(0, &qword_25794B678);
    v10 = a2;
    v11 = a2;
    v12 = a2;
    v13 = sub_24A77BDD0();
    v14 = sub_24A77BC74();
    if (!os_log_type_enabled(v13, v14))
    {

      if (!a1)
        goto LABEL_6;
      goto LABEL_5;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138412290;
    v17 = a2;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    sub_24A77BE00();
    *v16 = v21;

    _os_log_impl(&dword_24A635000, v13, v14, a5, v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v16, -1, -1);
    MEMORY[0x24BD1A2B4](v15, -1, -1);

  }
  if (a1)
  {
LABEL_5:
    v18 = (void **)(a3 + 16);
    swift_beginAccess();
    v19 = *v18;
    *v18 = a1;
    v20 = a1;

  }
LABEL_6:
  dispatch_group_leave(group);
}

void sub_24A6CB9E8(uint64_t a1, void *a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, SEL *a6)
{
  id v9;
  id v10;
  id v11;
  id v12;

  if (a2)
  {
    v9 = a2;
    v10 = objc_msgSend(v9, *a6);
    if (v10)
    {
      v11 = v10;
      v12 = v10;
      a4(v11, 0);

      return;
    }

  }
  a4(0, a3);
}

uint64_t sub_24A6CBA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v21)(char *, char *, uint64_t);
  double v22;
  double v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - v10;
  v12 = sub_24A778818();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - v17;
  sub_24A6CDB08(a1, (uint64_t)v11);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1)
    return sub_24A63CD04((uint64_t)v11, &qword_2579478E8);
  v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v18, v11, v12);
  sub_24A6CDB08(a2, (uint64_t)v8);
  if (v19(v8, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return sub_24A63CD04((uint64_t)v8, &qword_2579478E8);
  }
  else
  {
    v21(v15, v8, v12);
    sub_24A778794();
    v23 = v22;
    v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v15, v12);
    v24(v18, v12);
    result = swift_beginAccess();
    *(double *)(a3 + 16) = v23 + *(double *)(a3 + 16);
  }
  return result;
}

uint64_t sub_24A6CBC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  v12 = *(void (**)(char *, char *))(a1 + 32);
  if (a2)
  {
    sub_24A7787E8();
    v13 = sub_24A778818();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 0, 1, v13);
  }
  else
  {
    v14 = sub_24A778818();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  }
  if (a3)
  {
    sub_24A7787E8();
    v15 = sub_24A778818();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
  }
  else
  {
    v16 = sub_24A778818();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  swift_retain();
  v12(v11, v8);
  swift_release();
  sub_24A63CD04((uint64_t)v8, &qword_2579478E8);
  return sub_24A63CD04((uint64_t)v11, &qword_2579478E8);
}

BOOL static DownhillRun.supports(activityType:)(uint64_t a1)
{
  return a1 == 61 || a1 == 67;
}

id DownhillRun.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DownhillRun.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DownhillRun.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownhillRun();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DownhillRun.description.getter()
{
  sub_24A77BF5C();
  sub_24A77BA4C();
  swift_beginAccess();
  sub_24A77BBFC();
  sub_24A77BA4C();
  sub_24A778818();
  sub_24A6CD7A8();
  sub_24A77C160();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  sub_24A77C160();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B630);
  sub_24A77BDDC();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  sub_24A77BDDC();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  sub_24A77BDDC();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  sub_24A77BDDC();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  swift_beginAccess();
  sub_24A77BDDC();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  sub_24A77BDDC();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  swift_beginAccess();
  sub_24A77BDDC();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_24A6CC484(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

void sub_24A6CC50C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  _QWORD aBlock[6];

  v31 = a4;
  v32 = a3;
  v7 = sub_24A778818();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_fiui_activityType, v9);
  if (v12)
  {
    v13 = v12;
    v14 = FIUIDistanceTypeForActivityType();

    v15 = objc_msgSend((id)objc_opt_self(), sel_quantityTypeForDistanceType_, v14);
    v16 = (void *)objc_opt_self();
    v17 = objc_msgSend(v16, sel_predicateForObjectsFromWorkout_, a1);
    sub_24A7783EC();
    v18 = (void *)sub_24A7787AC();
    v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v11, v7);
    sub_24A7783D4();
    v20 = (void *)sub_24A7787AC();
    v19(v11, v7);
    v21 = objc_msgSend(v16, sel_predicateForSamplesWithStartDate_endDate_options_, v18, v20, 0);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_24A7840F0;
    *(_QWORD *)(v22 + 32) = v17;
    *(_QWORD *)(v22 + 40) = v21;
    aBlock[0] = v22;
    sub_24A77BB24();
    sub_24A64F254(0, &qword_25794B670);
    v23 = v17;
    v24 = v21;
    v25 = (void *)sub_24A77BB0C();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v25);

    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v31;
    *(_QWORD *)(v27 + 24) = a5;
    v28 = objc_allocWithZone(MEMORY[0x24BDD4008]);
    aBlock[4] = sub_24A6CDC2C;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24A6CC484;
    aBlock[3] = &block_descriptor_26;
    v29 = _Block_copy(aBlock);
    swift_retain();
    v30 = objc_msgSend(v28, sel_initWithQuantityType_quantitySamplePredicate_options_completionHandler_, v15, v26, 16, v29);
    _Block_release(v29);
    swift_release();
    objc_msgSend(v32, sel_executeQuery_, v30);

  }
  else
  {
    __break(1u);
  }
}

void sub_24A6CC814(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  _QWORD aBlock[6];

  v29 = a3;
  v8 = sub_24A778818();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_predicateForObjectsFromWorkout_, a1);
  sub_24A7783EC();
  v14 = (void *)sub_24A7787AC();
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  sub_24A7783D4();
  v16 = (void *)sub_24A7787AC();
  v15(v11, v8);
  v17 = objc_msgSend(v12, sel_predicateForSamplesWithStartDate_endDate_options_, v14, v16, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24A7840F0;
  *(_QWORD *)(v18 + 32) = v13;
  *(_QWORD *)(v18 + 40) = v17;
  aBlock[0] = v18;
  sub_24A77BB24();
  sub_24A64F254(0, &qword_25794B670);
  v19 = v13;
  v20 = v17;
  v21 = (void *)sub_24A77BB0C();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v21);

  sub_24A64F254(0, &qword_2579472F0);
  v23 = (void *)MEMORY[0x24BD19294]((id)*MEMORY[0x24BDD35B8]);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a4;
  *(_QWORD *)(v24 + 24) = a5;
  v25 = objc_allocWithZone(MEMORY[0x24BDD4008]);
  aBlock[4] = sub_24A6CDC0C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A6CC484;
  aBlock[3] = &block_descriptor_20;
  v26 = _Block_copy(aBlock);
  swift_retain();
  v27 = objc_msgSend(v25, sel_initWithQuantityType_quantitySamplePredicate_options_completionHandler_, v23, v22, 2, v26);

  _Block_release(v26);
  swift_release();
  objc_msgSend(v29, sel_executeQuery_, v27);

}

double _s9WorkoutUI11DownhillRunC09calculateA4Time12dateInterval17pauseResumeEventsSd10Foundation04DateH0V_SaySo14HKWorkoutEventCGSgtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void (*v9)(char *, uint64_t);
  void *v10;
  void *v11;
  double v12;
  _QWORD aBlock[6];

  v3 = sub_24A778818();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  sub_24A7783EC();
  v8 = (void *)sub_24A7787AC();
  v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  sub_24A7783D4();
  v10 = (void *)sub_24A7787AC();
  v9(v6, v3);
  if (a2)
  {
    sub_24A64F254(0, &qword_2579472F8);
    a2 = (void *)sub_24A77BB0C();
  }
  aBlock[4] = sub_24A6CDAE8;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A6CBC8C;
  aBlock[3] = &block_descriptor_1;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  _HKEnumerateActiveWorkoutIntervalsStartingPaused();
  _Block_release(v11);

  swift_beginAccess();
  v12 = *(double *)(v7 + 16);
  swift_release();
  return v12;
}

id sub_24A6CCCC0(void *a1, void *a2, void *a3, double a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  void (*v17)(char *, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  int v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  int v63;
  uint64_t v64;
  void **v65;
  void *v66;
  void *v67;
  id v68;
  void **v69;
  void *v70;
  void *v71;
  id v72;
  objc_class *v73;
  uint64_t v75;
  void **v76;
  void **v77;
  void *v78;
  void *v79;
  objc_super v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;

  v78 = a2;
  v79 = a3;
  v7 = sub_24A778818();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A7783F8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = (void **)&v4[OBJC_IVAR___WODownhillRun_distance];
  *(_QWORD *)&v4[OBJC_IVAR___WODownhillRun_distance] = 0;
  v77 = (void **)&v4[OBJC_IVAR___WODownhillRun_averageHeartRate];
  *(_QWORD *)&v4[OBJC_IVAR___WODownhillRun_averageHeartRate] = 0;
  v15 = v4;
  v16 = objc_msgSend(a1, sel_dateInterval);
  sub_24A7783C8();

  sub_24A7783EC();
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v14, v11);
  v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(&v15[OBJC_IVAR___WODownhillRun_startTime], v10, v7);
  v19 = objc_msgSend(a1, sel_dateInterval);
  sub_24A7783C8();

  sub_24A7783D4();
  v17(v14, v11);
  v18(&v15[OBJC_IVAR___WODownhillRun_endTime], v10, v7);
  v20 = objc_msgSend(a1, sel_metadata);
  if (!v20)
  {
    v82 = 0u;
    v83 = 0u;
LABEL_11:
    sub_24A63CD04((uint64_t)&v82, &qword_257946D48);
    v28 = 0;
    goto LABEL_12;
  }
  v21 = v20;
  v22 = sub_24A77B8FC();

  v23 = sub_24A77B9B0();
  if (*(_QWORD *)(v22 + 16) && (v25 = sub_24A64E74C(v23, v24), (v26 & 1) != 0))
  {
    sub_24A64E7B0(*(_QWORD *)(v22 + 56) + 32 * v25, (uint64_t)&v82);
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v83 + 1))
    goto LABEL_11;
  sub_24A64F254(0, (unint64_t *)&qword_257947308);
  v27 = swift_dynamicCast();
  v28 = v81;
  if (!v27)
    v28 = 0;
LABEL_12:
  *(_QWORD *)&v15[OBJC_IVAR___WODownhillRun_averageSpeed] = v28;
  v29 = objc_msgSend(a1, sel_metadata);
  if (!v29)
  {
    v82 = 0u;
    v83 = 0u;
LABEL_22:
    sub_24A63CD04((uint64_t)&v82, &qword_257946D48);
    v37 = 0;
    goto LABEL_23;
  }
  v30 = v29;
  v31 = sub_24A77B8FC();

  v32 = sub_24A77B9B0();
  if (*(_QWORD *)(v31 + 16) && (v34 = sub_24A64E74C(v32, v33), (v35 & 1) != 0))
  {
    sub_24A64E7B0(*(_QWORD *)(v31 + 56) + 32 * v34, (uint64_t)&v82);
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v83 + 1))
    goto LABEL_22;
  sub_24A64F254(0, (unint64_t *)&qword_257947308);
  v36 = swift_dynamicCast();
  v37 = v81;
  if (!v36)
    v37 = 0;
LABEL_23:
  *(_QWORD *)&v15[OBJC_IVAR___WODownhillRun_maximumSpeed] = v37;
  v38 = objc_msgSend(a1, sel_metadata);
  if (!v38)
  {
    v82 = 0u;
    v83 = 0u;
LABEL_33:
    sub_24A63CD04((uint64_t)&v82, &qword_257946D48);
    v46 = 0;
    goto LABEL_34;
  }
  v39 = v38;
  v40 = sub_24A77B8FC();

  v41 = sub_24A77B9B0();
  if (*(_QWORD *)(v40 + 16) && (v43 = sub_24A64E74C(v41, v42), (v44 & 1) != 0))
  {
    sub_24A64E7B0(*(_QWORD *)(v40 + 56) + 32 * v43, (uint64_t)&v82);
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v83 + 1))
    goto LABEL_33;
  sub_24A64F254(0, (unint64_t *)&qword_257947308);
  v45 = swift_dynamicCast();
  v46 = v81;
  if (!v45)
    v46 = 0;
LABEL_34:
  *(_QWORD *)&v15[OBJC_IVAR___WODownhillRun_alpineSlope] = v46;
  v47 = objc_msgSend(a1, sel_metadata);
  if (!v47)
  {
    v82 = 0u;
    v83 = 0u;
LABEL_44:
    sub_24A63CD04((uint64_t)&v82, &qword_257946D48);
    v55 = 0;
    goto LABEL_45;
  }
  v48 = v47;
  v49 = sub_24A77B8FC();

  v50 = sub_24A77B9B0();
  if (*(_QWORD *)(v49 + 16) && (v52 = sub_24A64E74C(v50, v51), (v53 & 1) != 0))
  {
    sub_24A64E7B0(*(_QWORD *)(v49 + 56) + 32 * v52, (uint64_t)&v82);
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v83 + 1))
    goto LABEL_44;
  sub_24A64F254(0, (unint64_t *)&qword_257947308);
  v54 = swift_dynamicCast();
  v55 = v81;
  if (!v54)
    v55 = 0;
LABEL_45:
  *(_QWORD *)&v15[OBJC_IVAR___WODownhillRun_elevationAscended] = v55;
  v56 = objc_msgSend(a1, sel_metadata);
  if (!v56)
  {
    v82 = 0u;
    v83 = 0u;
LABEL_55:
    sub_24A63CD04((uint64_t)&v82, &qword_257946D48);
    v64 = 0;
    goto LABEL_56;
  }
  v57 = v56;
  v58 = sub_24A77B8FC();

  v59 = sub_24A77B9B0();
  if (*(_QWORD *)(v58 + 16) && (v61 = sub_24A64E74C(v59, v60), (v62 & 1) != 0))
  {
    sub_24A64E7B0(*(_QWORD *)(v58 + 56) + 32 * v61, (uint64_t)&v82);
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v83 + 1))
    goto LABEL_55;
  sub_24A64F254(0, (unint64_t *)&qword_257947308);
  v63 = swift_dynamicCast();
  v64 = v81;
  if (!v63)
    v64 = 0;
LABEL_56:
  *(_QWORD *)&v15[OBJC_IVAR___WODownhillRun_elevationDescended] = v64;
  *(double *)&v15[OBJC_IVAR___WODownhillRun_workoutTime] = a4;
  v65 = v76;
  swift_beginAccess();
  v66 = *v65;
  v67 = v78;
  *v65 = v78;
  v68 = v67;

  v69 = v77;
  swift_beginAccess();
  v70 = *v69;
  v71 = v79;
  *v69 = v79;
  v72 = v71;

  v73 = (objc_class *)type metadata accessor for DownhillRun();
  v80.receiver = v15;
  v80.super_class = v73;
  return objc_msgSendSuper2(&v80, sel_init);
}

id _s9WorkoutUI11DownhillRunC04makecD008downhillD5Event7workout11healthStoreACSo09HKWorkoutG0C_So0K0CSo08HKHealthJ0CtFZ_0(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  double v29;
  NSObject *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;

  v6 = sub_24A7783F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - v10;
  v12 = dispatch_group_create();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  v42 = v13 + 16;
  dispatch_group_enter(v12);
  v14 = objc_msgSend(a1, sel_dateInterval);
  sub_24A7783C8();

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v12;
  v41 = v13;
  swift_retain();
  v16 = v12;
  v17 = a3;
  sub_24A6CC50C(a2, (uint64_t)v11, a3, (uint64_t)sub_24A6CDB78, v15);
  swift_release();
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v11, v6);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  dispatch_group_enter(v16);
  v20 = objc_msgSend(a1, sel_dateInterval);
  sub_24A7783C8();

  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = v16;
  v40 = v16;
  swift_retain();
  v22 = a2;
  v23 = (uint64_t)a2;
  v24 = (uint64_t)v39;
  sub_24A6CC814(v23, (uint64_t)v11, v17, (uint64_t)sub_24A6CDBC8, v21);
  swift_release();
  v18(v11, v6);
  v43 = a1;
  v25 = objc_msgSend(a1, sel_dateInterval);
  sub_24A7783C8();

  v26 = objc_msgSend(v22, sel_workoutEvents);
  if (v26)
  {
    v27 = v26;
    sub_24A64F254(0, &qword_2579472F8);
    v28 = (void *)sub_24A77BB18();

  }
  else
  {
    v28 = 0;
  }
  v29 = _s9WorkoutUI11DownhillRunC09calculateA4Time12dateInterval17pauseResumeEventsSd10Foundation04DateH0V_SaySo14HKWorkoutEventCGSgtFZ_0(v24, v28);
  swift_bridgeObjectRelease();
  v18((char *)v24, v6);
  v30 = v40;
  sub_24A77BCB0();
  swift_beginAccess();
  v31 = *(void **)(v41 + 16);
  swift_beginAccess();
  v32 = *(void **)(v19 + 16);
  objc_allocWithZone((Class)type metadata accessor for DownhillRun());
  v33 = v32;
  v34 = v43;
  v35 = v31;
  v36 = sub_24A6CCCC0(v34, v31, v32, v29);

  swift_release();
  swift_release();

  return v36;
}

uint64_t type metadata accessor for DownhillRun()
{
  uint64_t result;

  result = qword_25794B660;
  if (!qword_25794B660)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_24A6CD7A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794B628;
  if (!qword_25794B628)
  {
    v1 = sub_24A778818();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDCE988], v1);
    atomic_store(result, (unint64_t *)&qword_25794B628);
  }
  return result;
}

double sub_24A6CD7F0@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR___WODownhillRun_workoutTime);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

uint64_t sub_24A6CD840(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___WODownhillRun_workoutTime);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

id sub_24A6CD894@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___WODownhillRun_distance, a2);
}

void sub_24A6CD8A0(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_24A6CB5AC(a1, a2, a3, a4, &OBJC_IVAR___WODownhillRun_distance);
}

id sub_24A6CD8BC@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___WODownhillRun_averageHeartRate, a2);
}

id keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, void **a3@<X8>)
{
  void **v4;
  void *v5;

  v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_24A6CD914(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_24A6CB5AC(a1, a2, a3, a4, &OBJC_IVAR___WODownhillRun_averageHeartRate);
}

uint64_t sub_24A6CD930()
{
  return type metadata accessor for DownhillRun();
}

uint64_t sub_24A6CD938()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778818();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DownhillRun()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DownhillRun.workoutTime.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DownhillRun.workoutTime.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DownhillRun.workoutTime.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DownhillRun.distance.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DownhillRun.distance.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DownhillRun.distance.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DownhillRun.averageHeartRate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DownhillRun.averageHeartRate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DownhillRun.averageHeartRate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DownhillRun.__allocating_init(downhillRunEvent:workoutTime:distance:averageHeartRate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t sub_24A6CDAD8()
{
  return swift_deallocObject();
}

uint64_t sub_24A6CDAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24A6CBA98(a1, a2, v2);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24A6CDB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6CDB50()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_24A6CDB78(void *a1, void *a2)
{
  uint64_t v2;

  sub_24A6CB784(a1, a2, *(_QWORD *)(v2 + 16), *(dispatch_group_t *)(v2 + 24), "Error calculating distance for downhill run. error=%@");
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_24A6CDBC8(void *a1, void *a2)
{
  uint64_t v2;

  sub_24A6CB784(a1, a2, *(_QWORD *)(v2 + 16), *(dispatch_group_t *)(v2 + 24), "Error calculating average heart rate for downhill run. error=%@");
}

uint64_t sub_24A6CDBE8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24A6CDC0C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_24A6CB9E8(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), (SEL *)&selRef_averageQuantity);
}

void sub_24A6CDC2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_24A6CB9E8(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), (SEL *)&selRef_sumQuantity);
}

void static LayoutUtilities.deviceDependentValue<A>(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)()
{
  id v0;
  char v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = sub_24A6CDE34();

  __asm { BR              X10 }
}

uint64_t sub_24A6CDCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void static LayoutUtilities.layoutMetric(regular42:)()
{
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
}

BOOL UIDevice.isLargeDisplayZoomEnabled.getter()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_scale);
  v3 = v2;

  v4 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v4, sel_nativeScale);
  v6 = v5;

  return v3 != v6;
}

uint64_t sub_24A6CDE34()
{
  void *v0;
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double Height;
  id v11;
  double v12;
  double v13;
  double v14;
  CGRect v26;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_nativeBounds);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v26.origin.x = v3;
  v26.origin.y = v5;
  v26.size.width = v7;
  v26.size.height = v9;
  Height = CGRectGetHeight(v26);
  v11 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v11, sel_scale);
  v13 = v12;

  v14 = Height / v13;
  if (Height / v13 >= 0.0 && v14 <= 480.0)
    return 0;
  if (v14 >= 481.0 && v14 <= 568.0)
    return 1;
  if (v14 >= 569.0 && v14 <= 693.0)
    return 2;
  if (v14 >= 694.0 && v14 <= 736.0)
    return 3;
  if (v14 >= 737.0 && v14 <= 812.0)
    return 4;
  if (v14 >= 813.0 && v14 <= 844.0)
    return 5;
  if (v14 >= 845.0 && v14 <= 847.0)
    return 6;
  if (v14 >= 848.0 && v14 <= 852.0)
    return 7;
  if (v14 >= 853.0 && v14 <= 896.0)
    return 8;
  if (v14 > 926.0 || v14 < 897.0)
    return 10;
  else
    return 9;
}

void _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0()
{
  id v0;
  char v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = sub_24A6CDE34();

  __asm { BR              X10 }
}

double sub_24A6CE120(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;
  uint64_t v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  id v30;
  double v31;
  double v32;
  id v33;
  double v34;
  double v35;
  id v36;
  double v37;
  double v38;
  id v39;
  double v40;
  double v41;

  v27 = v26;
  v28 = objc_msgSend(v24, *(SEL *)(v25 + 1616));
  v29 = (void *)objc_opt_self();
  v30 = objc_msgSend(v29, sel_mainScreen);
  objc_msgSend(v30, sel_scale);
  v32 = v31;

  v33 = objc_msgSend(v29, sel_mainScreen);
  objc_msgSend(v33, sel_nativeScale);
  v35 = v34;

  if (v32 != v35)
  {
    v36 = objc_msgSend(v29, sel_mainScreen);
    objc_msgSend(v36, sel_scale);
    v38 = v37;

    v39 = objc_msgSend(v29, sel_mainScreen);
    objc_msgSend(v39, sel_nativeScale);
    v41 = v40;

    return v26 * (v38 / v41 * 0.95);
  }
  return v27;
}

ValueMetadata *type metadata accessor for LayoutUtilities()
{
  return &type metadata for LayoutUtilities;
}

uint64_t static MediaTagStringBuilderOptions.workout.getter()
{
  return sub_24A779B20();
}

uint64_t static MediaTagStringBuilderOptions.workoutWithOverrides(highlightColorOverride:fallbackHighlightColor:lineHeightMultiple:lineSpacing:nonHighlightedColor:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  id v31;
  id v32;
  void *v33;
  char v34;
  char *v35;
  id v36;
  _QWORD v38[2];
  int v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;

  v40 = a7;
  v41 = a8;
  v39 = a6;
  v38[0] = a3;
  v38[1] = a5;
  v43 = a4;
  v10 = sub_24A779B50();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v44 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v38 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v38 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v38 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v38 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v38 - v26;
  sub_24A779B20();
  v28 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v28(v24, v27, v10);
  v29 = (uint64_t)a1;
  if (!a1)
    v29 = sub_24A779B44();
  v42 = v29;
  v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  v31 = a1;
  v30(v24, v10);
  v28(v21, v27, v10);
  if (!a2)
    sub_24A779B2C();
  v32 = a2;
  v30(v21, v10);
  v28(v18, v27, v10);
  if ((v43 & 1) != 0)
    sub_24A779B08();
  v33 = v40;
  v34 = v39;
  v30(v18, v10);
  v28(v15, v27, v10);
  if ((v34 & 1) != 0)
    sub_24A779AE4();
  v30(v15, v10);
  v35 = v44;
  v28(v44, v27, v10);
  if (!v33)
    sub_24A779B14();
  v36 = v33;
  v30(v35, v10);
  sub_24A779AFC();
  sub_24A779AF0();
  sub_24A779B38();
  return ((uint64_t (*)(char *, uint64_t))v30)(v27, v10);
}

uint64_t TrainingLoadBand.color.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_24A77B320();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779CAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x24BE3FC88])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FDF9F9F9F9F9FA0;
    v12.n128_u64[0] = 0x3FDA9A9A9A9A9A9BLL;
    v13.n128_u64[0] = 0x3FEAFAFAFAFAFAFBLL;
    return MEMORY[0x24BD189AC](v5, v11, v12, v13, 1.0);
  }
  if (v10 == *MEMORY[0x24BE3FC60])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FE0505050505050;
    v12.n128_u64[0] = 0x3FE0D0D0D0D0D0D1;
LABEL_9:
    v13.n128_u64[0] = 1.0;
    return MEMORY[0x24BD189AC](v5, v11, v12, v13, 1.0);
  }
  if (v10 == *MEMORY[0x24BE3FC50])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FD5555555555555;
    v12.n128_u64[0] = 0x3FE5D5D5D5D5D5D6;
    goto LABEL_9;
  }
  if (v10 == *MEMORY[0x24BE3FC58])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FE7575757575757;
    v12.n128_u64[0] = 0x3FDC5C5C5C5C5C5CLL;
    goto LABEL_9;
  }
  if (v10 != *MEMORY[0x24BE3FC80])
  {
    v14 = sub_24A77B35C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v14;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
  v12.n128_u64[0] = 0x3FDB1B1B1B1B1B1BLL;
  v13.n128_u64[0] = 0x3FECBCBCBCBCBCBDLL;
  v11.n128_u64[0] = 1.0;
  return MEMORY[0x24BD189AC](v5, v11, v12, v13, 1.0);
}

uint64_t TrainingLoadBand.background.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_24A77B320();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779CAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x24BE3FC88])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FCF9F9F9F9F9FA0;
    v12.n128_u64[0] = 0x3FAC1C1C1C1C1C1CLL;
    v13.n128_u64[0] = 0x3FE3B3B3B3B3B3B4;
  }
  else if (v10 == *MEMORY[0x24BE3FC60])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FD1919191919192;
    v12.n128_u64[0] = 0x3FC7979797979798;
    v13.n128_u64[0] = 0x3FED3D3D3D3D3D3DLL;
  }
  else if (v10 == *MEMORY[0x24BE3FC50])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FCF1F1F1F1F1F1FLL;
    v12.n128_u64[0] = 0x3FE3535353535353;
    v13.n128_u64[0] = 0x3FEF1F1F1F1F1F1FLL;
  }
  else if (v10 == *MEMORY[0x24BE3FC58])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v11.n128_u64[0] = 0x3FE5F5F5F5F5F5F6;
    v12.n128_u64[0] = 0x3FD5959595959596;
    v13.n128_u64[0] = 1.0;
  }
  else
  {
    if (v10 != *MEMORY[0x24BE3FC80])
    {
      v14 = sub_24A77B35C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v14;
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v12.n128_u64[0] = 0x3FD5151515151515;
    v13.n128_u64[0] = 0x3FE999999999999ALL;
    v11.n128_u64[0] = 1.0;
  }
  return MEMORY[0x24BD189AC](v5, v11, v12, v13, 1.0);
}

__n128 TrainingLoadBand.layeredBackground.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 result;
  __n128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD8);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24A780450;
  v3 = (void *)objc_opt_self();
  MEMORY[0x24BD189B8](objc_msgSend(v3, sel_secondarySystemBackgroundColor));
  v4 = sub_24A77B374();
  swift_release();
  *(_QWORD *)(v2 + 32) = v4;
  MEMORY[0x24BD189B8](objc_msgSend(v3, sel_secondarySystemBackgroundColor));
  v5 = sub_24A77B374();
  swift_release();
  *(_QWORD *)(v2 + 40) = v5;
  v26 = v2;
  sub_24A77BB24();
  sub_24A77B6D4();
  sub_24A77B6E0();
  MEMORY[0x24BD18C58](v2);
  sub_24A77A570();
  v6 = v22;
  v21 = v23;
  v7 = v24;
  v8 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474F8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A7810C0;
  TrainingLoadBand.background.getter();
  sub_24A77B374();
  swift_release();
  *(_QWORD *)(v9 + 32) = sub_24A77B62C();
  *(_QWORD *)(v9 + 40) = v10;
  TrainingLoadBand.background.getter();
  sub_24A77B374();
  swift_release();
  *(_QWORD *)(v9 + 48) = sub_24A77B62C();
  *(_QWORD *)(v9 + 56) = v11;
  TrainingLoadBand.background.getter();
  sub_24A77B374();
  swift_release();
  *(_QWORD *)(v9 + 64) = sub_24A77B62C();
  *(_QWORD *)(v9 + 72) = v12;
  sub_24A77B6D4();
  sub_24A77B6E0();
  MEMORY[0x24BD18C4C](v9);
  sub_24A77A570();
  v13 = v26;
  v20 = v27;
  v14 = v28;
  v15 = v29;
  v16 = sub_24A77B668();
  v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A6436D4((uint64_t)&v22);
  sub_24A6436D4((uint64_t)&v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A646AE8((uint64_t)&v26);
  sub_24A646AE8((uint64_t)&v22);
  *(_QWORD *)a1 = v16;
  *(_QWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = v21;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v13;
  result = v20;
  *(__n128 *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  return result;
}

uint64_t TrainingLoadBand.localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_24A779CAC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BE3FC88])
  {
    if (qword_2544D6160 == -1)
      goto LABEL_15;
    goto LABEL_18;
  }
  if (v7 == *MEMORY[0x24BE3FC60])
  {
    if (qword_2544D6160 == -1)
      goto LABEL_15;
    goto LABEL_18;
  }
  if (v7 == *MEMORY[0x24BE3FC50])
  {
    if (qword_2544D6160 == -1)
      goto LABEL_15;
    goto LABEL_18;
  }
  if (v7 == *MEMORY[0x24BE3FC58])
  {
    if (qword_2544D6160 == -1)
      goto LABEL_15;
    goto LABEL_18;
  }
  if (v7 != *MEMORY[0x24BE3FC80])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  if (qword_2544D6160 != -1)
LABEL_18:
    swift_once();
LABEL_15:
  swift_beginAccess();
  v8 = (id)qword_2544D6158;
  v9 = sub_24A77856C();

  return v9;
}

unint64_t sub_24A6CF0E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794B688;
  if (!qword_25794B688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B690);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v1);
    atomic_store(result, (unint64_t *)&qword_25794B688);
  }
  return result;
}

uint64_t MoveRingDetailView.init(activityRing:isWheelchairUser:formattingManager:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = sub_24A778D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for MoveRingDetailView();
  *(_BYTE *)(a4 + *(int *)(result + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for MoveRingDetailView()
{
  uint64_t result;

  result = qword_25794B700;
  if (!qword_25794B700)
    return swift_getSingletonMetadata();
  return result;
}

void MoveRingDetailView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  double v28;
  char v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v2 = v1;
  v4 = sub_24A778B60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - v9;
  sub_24A778D04();
  sub_24A778B54();
  v12 = v11;
  v37 = *(void (**)(char *, uint64_t))(v5 + 8);
  v37(v10, v4);
  v13 = sub_24A778D10();
  v15 = v14;
  v17 = v16 & 1;
  v39 = v13;
  v40 = v14;
  v41 = v16 & 1;
  v38 = 1;
  sub_24A6CF47C();
  sub_24A6CF4C0();
  v18 = sub_24A778B9C();
  sub_24A683100(v13, v15, v17);
  if ((v18 & 1) == 0)
  {
    objc_msgSend(*(id *)(v2 + *(int *)(type metadata accessor for MoveRingDetailView() + 24)), sel_energyBurnedInUserUnitForCalories_, v12);
    v12 = v19;
  }
  sub_24A778D04();
  sub_24A778B48();
  v21 = v20;
  v37(v7, v4);
  v22 = sub_24A778D10();
  v24 = v23;
  v39 = v22;
  v40 = v23;
  v26 = v25 & 1;
  v41 = v25 & 1;
  v38 = 1;
  v27 = sub_24A778B9C();
  sub_24A683100(v22, v24, v26);
  if ((v27 & 1) == 0)
  {
    objc_msgSend(*(id *)(v2 + *(int *)(type metadata accessor for MoveRingDetailView() + 24)), sel_energyBurnedInUserUnitForCalories_, v21);
    v21 = v28;
  }
  v29 = *(_BYTE *)(v2 + *(int *)(type metadata accessor for MoveRingDetailView() + 20));
  KeyPath = swift_getKeyPath();
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  v32 = v31;
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  v34 = v33;
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)a1 = 2;
  *(double *)(a1 + 8) = v12;
  *(double *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 24) = v29;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v32;
  *(_QWORD *)(a1 + 56) = v34;
  *(_QWORD *)(a1 + 64) = v35;
}

unint64_t sub_24A6CF47C()
{
  unint64_t result;

  result = qword_25794B698;
  if (!qword_25794B698)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE89D00], MEMORY[0x24BE89CF8]);
    atomic_store(result, (unint64_t *)&qword_25794B698);
  }
  return result;
}

unint64_t sub_24A6CF4C0()
{
  unint64_t result;

  result = qword_25794B6A0;
  if (!qword_25794B6A0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BE89D08], MEMORY[0x24BE89CF8]);
    atomic_store(result, (unint64_t *)&qword_25794B6A0);
  }
  return result;
}

uint64_t sub_24A6CF510()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for MoveRingDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A778D1C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = v9;
  }
  return a1;
}

void destroy for MoveRingDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A778D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_24A778D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_24A778D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t initializeWithTake for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_24A778D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MoveRingDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_24A778D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for MoveRingDetailView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6CF7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_24A778D1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveRingDetailView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6CF838(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24A778D1C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_24A6CF8B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778D1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24A6CF934()
{
  unint64_t result;

  result = qword_25794B740;
  if (!qword_25794B740)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for RingDetailView, &type metadata for RingDetailView);
    atomic_store(result, (unint64_t *)&qword_25794B740);
  }
  return result;
}

uint64_t EmbeddedGoalConfigurationView.init(goalConfiguration:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EmbeddedGoalConfigurationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t KeyPath;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  char v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;

  v52 = a1;
  v2 = sub_24A77AC24();
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v49 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A77A6C0();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2579499D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579499D8);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579499E0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)v1;
  v12 = *(void **)(v1 + 8);
  v40 = sub_24A77A930();
  sub_24A6CFCD8(v13, (uint64_t)v8);
  v14 = &v8[v6[13]];
  v15 = sub_24A77AA08();
  sub_24A6D0028(v13, v12, (uint64_t)v53);
  v16 = v53[0];
  v17 = v53[1];
  v18 = v54;
  v39 = v55;
  v19 = v56;
  v20 = v57;
  v21 = v58;
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v14 = v15;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  *((_QWORD *)v14 + 3) = v16;
  *((_QWORD *)v14 + 4) = v17;
  v14[40] = v18;
  *((_OWORD *)v14 + 3) = v39;
  *((_QWORD *)v14 + 8) = v19;
  v14[72] = v20;
  *((_QWORD *)v14 + 10) = v21;
  *((_QWORD *)v14 + 11) = KeyPath;
  v14[96] = 0;
  *(_QWORD *)&v8[v6[14]] = 0x4022000000000000;
  *(_QWORD *)&v8[v6[15]] = v40;
  v23 = v43;
  sub_24A77A6B4();
  v24 = swift_getKeyPath();
  v25 = (uint64_t)v41;
  v26 = (uint64_t *)&v41[*(int *)(v42 + 36)];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947780);
  v29 = v45;
  v28 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v26 + *(int *)(v27 + 28), v23, v46);
  *v26 = v24;
  sub_24A63CCC0((uint64_t)v8, v25, &qword_2579499D0);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
  sub_24A63CD04((uint64_t)v8, &qword_2579499D0);
  v30 = v49;
  sub_24A77AC18();
  sub_24A6902CC();
  v31 = v44;
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v51);
  sub_24A63CD04(v25, &qword_2579499D8);
  v32 = sub_24A77B368();
  v33 = swift_getKeyPath();
  v35 = v47;
  v34 = v48;
  v36 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v52, v31, v48);
  v37 = (uint64_t *)(v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579499F8) + 36));
  *v37 = v33;
  v37[1] = v32;
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v31, v34);
}

void sub_24A6CFCD8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  SEL *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A08);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A77A5A0();
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A10);
  MEMORY[0x24BDAC7A8](v34);
  v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A18);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779040();
  if (swift_dynamicCastClass())
  {
    v32 = v6;
    v33 = v11;
    v14 = a1;
    v15 = sub_24A779034();
    v17 = v16;
    v18 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    v19 = (void *)sub_24A7786BC();
    v20 = objc_msgSend(v18, sel_initWithData_, v19);
    sub_24A6706DC(v15, v17);

    if (v20)
    {
      v21 = sub_24A77B3BC();

      v6 = v32;
      v11 = v33;
LABEL_10:
      sub_24A77A594();
      v26 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v5, v8, v6);
      sub_24A63CCC0((uint64_t)v5, (uint64_t)v10 + *(int *)(v34 + 36), &qword_257949A08);
      *v10 = v21;
      swift_retain();
      sub_24A63CD04((uint64_t)v5, &qword_257949A08);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
      swift_release();
      v27 = WorkoutConfiguration.displayColor.getter();
      v28 = MEMORY[0x24BD189B8](v27);
      KeyPath = swift_getKeyPath();
      v37 = v28;
      swift_retain();
      v30 = sub_24A77A4BC();
      sub_24A63CCC0((uint64_t)v10, (uint64_t)v13, &qword_257949A10);
      swift_release();
      v31 = (uint64_t *)&v13[*(int *)(v11 + 36)];
      *v31 = KeyPath;
      v31[1] = v30;
      sub_24A63CD04((uint64_t)v10, &qword_257949A10);
      sub_24A6D0600((uint64_t)v13, v36);
      return;
    }

    v6 = v32;
    v11 = v33;
  }
  sub_24A778FA4();
  if (!swift_dynamicCastClass())
  {
    WorkoutConfiguration.displaySymbolName.getter();
    v25 = sub_24A77B3EC();
    goto LABEL_9;
  }
  v22 = (void *)sub_24A779130();
  v23 = (id)FIUIStaticScalableWorkoutIconImageWithPadding();

  if (v23)
  {
    v24 = objc_msgSend(v23, sel_imageWithRenderingMode_, 2);

    v25 = sub_24A77B3BC();
LABEL_9:
    v21 = v25;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_24A6D0028@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_24A778FC8();
  v43 = a3;
  if (swift_dynamicCastClass())
  {
    v6 = a1;
    v7 = (void *)sub_24A778FBC();
    v8 = objc_msgSend(v7, sel_goalTypeIdentifier);

    _HKWorkoutGoalType.displayNameShort(formattingManager:)(a2, (uint64_t)v8);
LABEL_3:

LABEL_6:
    v9 = a2;
    sub_24A645928();
    v10 = sub_24A77AFD8();
    v12 = v11;
    v14 = v13 & 1;
    sub_24A77AD98();
    sub_24A77ADEC();
    sub_24A77AE58();
    swift_release();
    v15 = sub_24A77AF84();
    v41 = v16;
    v42 = v15;
    v40 = v17;
    v19 = v18;
    swift_release();
    v20 = v19 & 1;
    sub_24A64596C(v10, v12, v14);
    swift_bridgeObjectRelease();
    v21 = (void *)sub_24A778FBC();
    NLSessionActivityGoal.displayString(formattingManager:localizedOpenString:)(v9, 0, 0);

    v22 = sub_24A77AFD8();
    v24 = v23;
    v26 = v25 & 1;
    sub_24A77B38C();
    v27 = sub_24A77AF48();
    v29 = v28;
    v31 = v30;
    swift_release();
    LOBYTE(v9) = v31 & 1;
    sub_24A64596C(v22, v24, v26);
    swift_bridgeObjectRelease();
    sub_24A77AD98();
    sub_24A77ADE0();
    sub_24A77AE58();
    swift_release();
    sub_24A77AD68();
    swift_release();
    v32 = sub_24A77AF84();
    v34 = v33;
    LOBYTE(v24) = v35;
    v37 = v36;
    swift_release();
    sub_24A64596C(v27, v29, (char)v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)v43 = v42;
    *(_QWORD *)(v43 + 8) = v40;
    *(_BYTE *)(v43 + 16) = v20;
    *(_QWORD *)(v43 + 24) = v41;
    *(_QWORD *)(v43 + 32) = v32;
    *(_QWORD *)(v43 + 40) = v34;
    *(_BYTE *)(v43 + 48) = v24 & 1;
    *(_QWORD *)(v43 + 56) = v37;
    sub_24A6436C4(v42, v40, v20);
    swift_bridgeObjectRetain();
    sub_24A6436C4(v32, v34, v24 & 1);
    swift_bridgeObjectRetain();
    sub_24A64596C(v32, v34, v24 & 1);
    swift_bridgeObjectRelease();
    sub_24A64596C(v42, v40, v20);
    return swift_bridgeObjectRelease();
  }
  sub_24A7790B8();
  if (swift_dynamicCastClass())
  {
    sub_24A77B9EC();
    goto LABEL_6;
  }
  sub_24A779040();
  if (swift_dynamicCastClass())
  {
    if (qword_2544D6160 == -1)
      goto LABEL_12;
    goto LABEL_16;
  }
  sub_24A779064();
  if (swift_dynamicCastClass())
  {
    if (qword_2544D6160 == -1)
    {
LABEL_12:
      swift_beginAccess();
      v6 = (id)qword_2544D6158;
      sub_24A77856C();
      goto LABEL_3;
    }
LABEL_16:
    swift_once();
    goto LABEL_12;
  }
  sub_24A778FA4();
  if (swift_dynamicCastClass())
  {
    if (qword_2544D6160 == -1)
      goto LABEL_12;
    goto LABEL_16;
  }
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  v39 = objc_msgSend(a1, sel_description);
  sub_24A77B9B0();

  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

uint64_t sub_24A6D05D8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for EmbeddedGoalConfigurationView()
{
  return &type metadata for EmbeddedGoalConfigurationView;
}

uint64_t sub_24A6D0600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TrainingLoadOnboardingCore.init(imageName:title:message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  v7 = (char *)a6 + *(int *)(type metadata accessor for TrainingLoadOnboardingCore() + 24);
  v8 = sub_24A778548();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a5, v8);
}

uint64_t type metadata accessor for TrainingLoadOnboardingCore()
{
  uint64_t result;

  result = qword_25794B7A0;
  if (!qword_25794B7A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainingLoadOnboardingCore.imageName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainingLoadOnboardingCore.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainingLoadOnboardingCore.message.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TrainingLoadOnboardingCore() + 24);
  v4 = sub_24A778548();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TrainingLoadOnboardingCore.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  __int128 v78;
  char v79;
  _BYTE v80[7];
  char v81;
  _BYTE v82[7];
  _BYTE v83[7];
  char v84;
  _BYTE v85[7];
  _OWORD v86[18];
  _OWORD v87[9];
  __int128 v88;
  _OWORD v89[2];
  _QWORD v90[59];
  _OWORD v91[9];
  char v92;
  _BYTE v93[7];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _OWORD v99[11];
  uint64_t v100;
  char v101;
  _BYTE v102[7];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  _BYTE v108[7];
  char v109;
  _BYTE v110[7];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;

  v44 = a1;
  v2 = sub_24A77B3D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v1;
  v6 = qword_2544D6160;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  swift_beginAccess();
  v7 = (id)qword_2544D6158;
  sub_24A77B428();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v8 = sub_24A77B41C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24A77B668();
  sub_24A77A4B0();
  v71 = v8;
  v72 = 0;
  v73 = 1;
  v74 = v66;
  v75 = v67;
  v76 = v68;
  v77 = v69;
  v78 = v70;
  sub_24A77B668();
  sub_24A642B1C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v54, 0.0, 1, 0.0, 1);
  swift_release();
  LOBYTE(v8) = sub_24A77ACC0();
  sub_24A77A390();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v79 = 0;
  v17 = sub_24A77ACCC();
  sub_24A77A390();
  v19 = v18;
  v41 = v20;
  v42 = v18;
  v21 = v20;
  v23 = v22;
  v39 = v24;
  v40 = v22;
  v25 = v24;
  v26 = v79;
  v81 = 0;
  sub_24A6D0D10(v43, (uint64_t)&v45);
  v27 = sub_24A77ACA8();
  sub_24A77A390();
  v84 = 0;
  v28 = v81;
  *(_DWORD *)v93 = *(_DWORD *)v85;
  *(_DWORD *)&v93[3] = *(_DWORD *)&v85[3];
  v86[8] = v62;
  v86[9] = v63;
  v86[10] = v64;
  *(_QWORD *)&v86[11] = v65;
  v86[4] = v58;
  v86[5] = v59;
  v86[6] = v60;
  v86[7] = v61;
  v86[0] = v54;
  v86[1] = v55;
  v86[2] = v56;
  v86[3] = v57;
  BYTE8(v86[11]) = v8;
  *(_DWORD *)((char *)&v86[11] + 9) = *(_DWORD *)v80;
  HIDWORD(v86[11]) = *(_DWORD *)&v80[3];
  *(_QWORD *)&v86[12] = v10;
  *((_QWORD *)&v86[12] + 1) = v12;
  *(_QWORD *)&v86[13] = v14;
  *((_QWORD *)&v86[13] + 1) = v16;
  LOBYTE(v86[14]) = v26;
  *(_DWORD *)((char *)&v86[14] + 1) = *(_DWORD *)v83;
  DWORD1(v86[14]) = *(_DWORD *)&v83[3];
  BYTE8(v86[14]) = v17;
  HIDWORD(v86[14]) = *(_DWORD *)&v82[3];
  *(_DWORD *)((char *)&v86[14] + 9) = *(_DWORD *)v82;
  *(_QWORD *)&v86[15] = v19;
  *((_QWORD *)&v86[15] + 1) = v21;
  *(_QWORD *)&v86[16] = v23;
  *((_QWORD *)&v86[16] + 1) = v25;
  LOBYTE(v86[17]) = v81;
  v87[6] = v51;
  v87[7] = v52;
  v87[8] = v53;
  v87[2] = v47;
  v87[3] = v48;
  v87[4] = v49;
  v87[5] = v50;
  v87[0] = v45;
  v87[1] = v46;
  LOBYTE(v88) = v27;
  *(_DWORD *)((char *)&v88 + 1) = *(_DWORD *)v85;
  DWORD1(v88) = *(_DWORD *)&v85[3];
  *((_QWORD *)&v88 + 1) = v29;
  v30 = v29;
  *(_QWORD *)&v89[0] = v31;
  v32 = v31;
  *((_QWORD *)&v89[0] + 1) = v33;
  v34 = v33;
  *(_QWORD *)&v89[1] = v35;
  v36 = v35;
  BYTE8(v89[1]) = 0;
  memcpy(v90, v86, 0x111uLL);
  *(_OWORD *)&v90[51] = v53;
  *(_OWORD *)&v90[53] = v88;
  *(_OWORD *)&v90[55] = v89[0];
  *(_OWORD *)((char *)&v90[56] + 1) = *(_OWORD *)((char *)v89 + 9);
  *(_OWORD *)&v90[43] = v49;
  *(_OWORD *)&v90[45] = v50;
  *(_OWORD *)&v90[47] = v51;
  *(_OWORD *)&v90[49] = v52;
  *(_OWORD *)&v90[35] = v45;
  *(_OWORD *)&v90[37] = v46;
  *(_OWORD *)&v90[39] = v47;
  *(_OWORD *)&v90[41] = v48;
  memcpy(v44, v90, 0x1D1uLL);
  v91[6] = v51;
  v91[7] = v52;
  v91[8] = v53;
  v91[2] = v47;
  v91[3] = v48;
  v91[4] = v49;
  v91[5] = v50;
  v91[0] = v45;
  v91[1] = v46;
  v92 = v27;
  v94 = v30;
  v95 = v32;
  v96 = v34;
  v97 = v36;
  v98 = 0;
  sub_24A6436FC((uint64_t)v86);
  sub_24A6D1284((uint64_t)v87);
  sub_24A6D130C((uint64_t)v91);
  v99[8] = v62;
  v99[9] = v63;
  v99[10] = v64;
  v100 = v65;
  v99[4] = v58;
  v99[5] = v59;
  v99[6] = v60;
  v99[7] = v61;
  v99[0] = v54;
  v99[1] = v55;
  v99[2] = v56;
  v99[3] = v57;
  v101 = v8;
  *(_DWORD *)v102 = *(_DWORD *)v80;
  *(_DWORD *)&v102[3] = *(_DWORD *)&v80[3];
  v103 = v10;
  v104 = v12;
  v105 = v14;
  v106 = v16;
  v107 = v26;
  *(_DWORD *)v108 = *(_DWORD *)v83;
  *(_DWORD *)&v108[3] = *(_DWORD *)&v83[3];
  v109 = v17;
  *(_DWORD *)&v110[3] = *(_DWORD *)&v82[3];
  *(_DWORD *)v110 = *(_DWORD *)v82;
  v111 = v42;
  v112 = v41;
  v113 = v40;
  v114 = v39;
  v115 = v28;
  return sub_24A682830((uint64_t)v99);
}

uint64_t sub_24A6D0D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t OnboardingCore;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *);
  unsigned int v71;
  uint64_t v72;
  int v73;
  char *v74;
  int v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[7];
  char v86;
  _BYTE v87[7];
  char v88;
  _BYTE v89[7];
  _BYTE v90[7];
  char v91;

  v78 = sub_24A778548();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v74 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77AE70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = a1;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v83 = v9;
  v84 = v10;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v11 = sub_24A77AFD8();
  v13 = v12;
  v15 = v14 & 1;
  sub_24A77AD20();
  v71 = *MEMORY[0x24BDF17C8];
  v70 = *(void (**)(char *))(v6 + 104);
  v68 = v5;
  v70(v8);
  v67 = v8;
  sub_24A77AE88();
  swift_release();
  v69 = *(void (**)(char *, uint64_t))(v6 + 8);
  v69(v8, v5);
  v16 = sub_24A77AF84();
  v18 = v17;
  LOBYTE(v5) = v19;
  swift_release();
  sub_24A64596C(v11, v13, v15);
  swift_bridgeObjectRelease();
  v20 = sub_24A77AF78();
  v22 = v21;
  v24 = v23 & 1;
  sub_24A64596C(v16, v18, v5 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v83) = sub_24A77AB88();
  v25 = sub_24A77AF54();
  v79 = v26;
  v80 = v25;
  v81 = v27;
  v73 = v28 & 1;
  sub_24A64596C(v20, v22, v24);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v75 = sub_24A77ACCC();
  sub_24A77A390();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  OnboardingCore = type metadata accessor for TrainingLoadOnboardingCore();
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v74, v72 + *(int *)(OnboardingCore + 24), v78);
  v38 = sub_24A77AFCC();
  v40 = v39;
  v42 = v41 & 1;
  sub_24A77AD98();
  v43 = v67;
  v44 = v68;
  ((void (*)(char *, _QWORD, uint64_t))v70)(v67, v71, v68);
  sub_24A77AE88();
  swift_release();
  v69(v43, v44);
  v45 = sub_24A77AF84();
  v47 = v46;
  LOBYTE(v43) = v48;
  swift_release();
  sub_24A64596C(v38, v40, v42);
  swift_bridgeObjectRelease();
  v49 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v83 = MEMORY[0x24BD189B8](v49);
  v50 = sub_24A77AF54();
  v52 = v51;
  v54 = v53;
  v56 = v55 & 1;
  sub_24A64596C(v45, v47, v43 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v57 = swift_getKeyPath();
  v58 = v73;
  v82 = v73;
  v91 = v73;
  v88 = 0;
  v86 = v56;
  *(_DWORD *)(a2 + 17) = v83;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v83 + 3);
  *(_DWORD *)(a2 + 41) = *(_DWORD *)v90;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v90[3];
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v89;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v89[3];
  v59 = *(_DWORD *)v87;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v87[3];
  *(_DWORD *)(a2 + 89) = v59;
  v60 = *(_DWORD *)v85;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v85[3];
  *(_DWORD *)(a2 + 113) = v60;
  v62 = v79;
  v61 = v80;
  *(_QWORD *)a2 = v80;
  *(_QWORD *)(a2 + 8) = v62;
  *(_BYTE *)(a2 + 16) = v58;
  v63 = KeyPath;
  *(_QWORD *)(a2 + 24) = v81;
  *(_QWORD *)(a2 + 32) = v63;
  *(_BYTE *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = v75;
  *(_QWORD *)(a2 + 56) = v30;
  *(_QWORD *)(a2 + 64) = v32;
  *(_QWORD *)(a2 + 72) = v34;
  *(_QWORD *)(a2 + 80) = v36;
  *(_BYTE *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = v50;
  *(_QWORD *)(a2 + 104) = v52;
  *(_BYTE *)(a2 + 112) = v56;
  *(_QWORD *)(a2 + 120) = v54;
  *(_QWORD *)(a2 + 128) = v57;
  *(_BYTE *)(a2 + 136) = 1;
  v64 = v61;
  sub_24A6436C4(v61, v62, v58);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A6436C4(v50, v52, v56);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A64596C(v50, v52, v56);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24A64596C(v64, v62, v82);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6D1284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  sub_24A6436C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A6436C4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_24A6D130C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  sub_24A64596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  sub_24A64596C(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A6D1394()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadOnboardingCore(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_24A778548();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TrainingLoadOnboardingCore(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_24A778548();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TrainingLoadOnboardingCore(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778548();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for TrainingLoadOnboardingCore(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778548();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for TrainingLoadOnboardingCore(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_24A778548();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for TrainingLoadOnboardingCore(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_24A778548();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadOnboardingCore()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6D16B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_24A778548();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TrainingLoadOnboardingCore()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6D173C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_24A778548();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24A6D17B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778548();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24A6D1828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794B7E0;
  if (!qword_25794B7E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B7E8);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_25794B7E0);
  }
  return result;
}

id NLSessionActivityGoal.color.getter()
{
  return sub_24A6D1ED8((uint64_t (*)(id))_HKWorkoutGoalType.color.getter, 0.458823529, 0.898039216, 0.898039216);
}

SEL *_HKWorkoutGoalType.color.getter(uint64_t a1)
{
  return sub_24A6D18BC(a1, (SEL *)&selRef_nonGradientTextColor);
}

SEL *_HKWorkoutGoalType.colorForCurrentContrastMode.getter(uint64_t a1)
{
  return sub_24A6D18BC(a1, (SEL *)&selRef_textDisplayColor);
}

SEL *sub_24A6D18BC(uint64_t a1, SEL *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  switch(a1)
  {
    case 0:
      v3 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
      if (!v3)
      {
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      v4 = v3;
      a2 = (SEL *)objc_msgSend(v3, *a2);

      if (a2)
        return a2;
      __break(1u);
LABEL_5:
      v5 = objc_msgSend((id)objc_opt_self(), sel_elapsedTimeColors);
      if (!v5)
        goto LABEL_15;
      v6 = v5;
      a2 = (SEL *)objc_msgSend(v5, *a2);

      if (a2)
        return a2;
      __break(1u);
LABEL_8:
      v7 = objc_msgSend((id)objc_opt_self(), sel_energyColors);
      if (!v7)
      {
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      v8 = v7;
      a2 = (SEL *)objc_msgSend(v7, *a2);

      if (!a2)
      {
        __break(1u);
LABEL_11:
        v9 = objc_msgSend((id)objc_opt_self(), sel_distanceColors);
        if (v9)
        {
          v10 = v9;
          a2 = (SEL *)objc_msgSend(v9, *a2);

          if (a2)
            return a2;
LABEL_18:
          __break(1u);
LABEL_19:
          sub_24A77C01C();
          __break(1u);
          JUMPOUT(0x24A6D1A7CLL);
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      return a2;
    case 1:
      goto LABEL_11;
    case 2:
      goto LABEL_5;
    case 3:
      goto LABEL_8;
    default:
      goto LABEL_19;
  }
}

uint64_t _HKWorkoutGoalType.platterColor.getter(uint64_t a1)
{
  uint64_t v1;
  SEL *v2;
  id v3;
  id v4;
  uint64_t result;

  switch(a1)
  {
    case 0:
      v1 = 0;
      goto LABEL_6;
    case 1:
      v1 = 1;
LABEL_6:
      v2 = _HKWorkoutGoalType.color.getter(v1);
      v3 = -[SEL colorWithAlphaComponent:](v2, sel_colorWithAlphaComponent_, 0.16);
      goto LABEL_7;
    case 2:
      v2 = _HKWorkoutGoalType.color.getter(2);
      v3 = -[SEL colorWithAlphaComponent:](v2, sel_colorWithAlphaComponent_, 0.18);
      goto LABEL_7;
    case 3:
      v2 = _HKWorkoutGoalType.color.getter(3);
      v3 = -[SEL colorWithAlphaComponent:](v2, sel_colorWithAlphaComponent_, 0.22);
LABEL_7:
      v4 = v3;

      result = (uint64_t)v4;
      break;
    default:
      result = sub_24A77C01C();
      __break(1u);
      break;
  }
  return result;
}

id _HKWorkoutGoalType.gradientStartingColor.getter(uint64_t a1)
{
  id v1;
  double v2;
  double v3;
  uint64_t v4;
  id result;
  double v6;

  switch(a1)
  {
    case 0:
      v1 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      v2 = 0.0823529412;
      v3 = 0.109803922;
      v4 = 0x3F80101010101010;
      goto LABEL_5;
    case 1:
      v1 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      v3 = 0.105882353;
      v6 = 0.141176471;
      v2 = 0.0;
      goto LABEL_7;
    case 2:
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.145098039, 0.133333333, 0.0196078431, 1.0);
    case 3:
      v1 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      v2 = 0.290196078;
      v3 = 0.0196078431;
      v4 = 0x3FB8181818181818;
LABEL_5:
      v6 = *(double *)&v4;
LABEL_7:
      result = objc_msgSend(v1, sel_initWithDisplayP3Red_green_blue_alpha_, v2, v3, v6, 1.0);
      break;
    default:
      result = (id)sub_24A77C01C();
      __break(1u);
      break;
  }
  return result;
}

id _HKWorkoutGoalType.gradientEndingColor.getter(uint64_t a1)
{
  id v1;
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  id result;

  switch(a1)
  {
    case 0:
      v1 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      v2 = 0.145098039;
      v3 = 0.196078431;
      v4 = 0x3FB1111111111111;
      goto LABEL_4;
    case 1:
      v1 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      v3 = 0.17254902;
      v5 = 0.22745098;
      v2 = 0.0;
      goto LABEL_7;
    case 2:
      v1 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      v2 = 0.223529412;
      v3 = 0.2;
      v4 = 0x3FA0101010101010;
LABEL_4:
      v5 = *(double *)&v4;
LABEL_7:
      result = objc_msgSend(v1, sel_initWithDisplayP3Red_green_blue_alpha_, v2, v3, v5, 1.0);
      break;
    case 3:
      result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.254901961, 0.0196078431, 0.0823529412, 1.0);
      break;
    default:
      result = (id)sub_24A77C01C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t NLSessionActivityGoal.platterColor.getter()
{
  void *v0;
  id v1;
  id v2;

  if ((sub_24A77BD58() & 1) == 0)
    return _HKWorkoutGoalType.platterColor.getter((uint64_t)objc_msgSend(v0, sel_goalTypeIdentifier));
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, 0.458823529, 0.898039216, 0.898039216, 1.0);
  v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.22);

  return (uint64_t)v2;
}

id NLSessionActivityGoal.colorForCurrentContrastMode.getter()
{
  return sub_24A6D1ED8((uint64_t (*)(id))_HKWorkoutGoalType.colorForCurrentContrastMode.getter, 0.623529412, 1.0, 0.992156863);
}

id sub_24A6D1ED8(uint64_t (*a1)(id), double a2, double a3, double a4)
{
  void *v4;

  if ((sub_24A77BD58() & 1) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithDisplayP3Red_green_blue_alpha_, a2, a3, a4, 1.0);
  else
    return (id)a1(objc_msgSend(v4, sel_goalTypeIdentifier));
}

uint64_t *sub_24A6D1F64(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_24A779CAC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(_OWORD *)((char *)v4 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
  }
  return v4;
}

uint64_t sub_24A6D2010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_24A779CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_24A6D2048(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A779CAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_24A6D20C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A779CAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_24A6D215C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A779CAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_24A6D21DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A779CAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

uint64_t sub_24A6D225C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6D2268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_24A779CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_24A6D22A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6D22B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_24A779CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for TrainingLoadDayViewModel()
{
  uint64_t result;

  result = qword_25794B848;
  if (!qword_25794B848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A6D2334()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A779CAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A6D23B8()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t DayViewModel;
  int v7;
  uint64_t v8;

  v1 = sub_24A779CAC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v0 > 1.0)
    return 0;
  if (*v0 < -0.95)
    return 6;
  DayViewModel = type metadata accessor for TrainingLoadDayViewModel();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, (char *)v0 + *(int *)(DayViewModel + 20), v1);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v7 == *MEMORY[0x24BE3FC88])
    return 5;
  if (v7 == *MEMORY[0x24BE3FC60])
    return 4;
  if (v7 == *MEMORY[0x24BE3FC50])
    return 3;
  if (v7 == *MEMORY[0x24BE3FC58])
    return 2;
  if (v7 == *MEMORY[0x24BE3FC80])
    return 1;
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

uint64_t sub_24A6D2554()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  __n128 v6;
  BOOL v9;
  uint64_t v10;

  v1 = sub_24A779CAC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for TrainingLoadDayViewModel();
  if (*(double *)((char *)v0 + *(int *)(result + 24)) != *(double *)((char *)v0 + *(int *)(result + 24) + 8))
  {
    v6.n128_u64[0] = 0.75;
    if (*v0 <= 1.0 && *v0 >= -0.95)
    {
      (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v4, (char *)v0 + *(int *)(result + 20), v1, v6);
      result = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
      if ((_DWORD)result != *MEMORY[0x24BE3FC88])
      {
        v9 = (_DWORD)result == *MEMORY[0x24BE3FC60]
          || (_DWORD)result == *MEMORY[0x24BE3FC50]
          || (_DWORD)result == *MEMORY[0x24BE3FC58];
        if (!v9 && (_DWORD)result != *MEMORY[0x24BE3FC80])
        {
          result = sub_24A77C01C();
          __break(1u);
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrainingLoadTodayViewBand(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadTodayViewBand(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_24A6D2824 + 4 * byte_24A7844C5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_24A6D2858 + 4 * byte_24A7844C0[v4]))();
}

uint64_t sub_24A6D2858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6D2860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A6D2868);
  return result;
}

uint64_t sub_24A6D2874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A6D287CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_24A6D2880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6D2888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadTodayViewBand()
{
  return &type metadata for TrainingLoadTodayViewBand;
}

unint64_t sub_24A6D28A8()
{
  unint64_t result;

  result = qword_25794B888;
  if (!qword_25794B888)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A78456C, &type metadata for TrainingLoadTodayViewBand);
    atomic_store(result, (unint64_t *)&qword_25794B888);
  }
  return result;
}

uint64_t destroy for PacerView(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_24A63BEDC(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for PacerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_BYTE *)(a2 + 64);
  swift_retain();
  swift_retain();
  sub_24A63BEC0(v4, v5);
  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 64) = v5;
  return a1;
}

uint64_t assignWithCopy for PacerView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)v2 + 40);
  *(_QWORD *)(a1 + 48) = v2[6];
  v4 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_24A63BEC0(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_24A63BEDC(v5, v6);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PacerView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PacerView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerView()
{
  return &type metadata for PacerView;
}

uint64_t sub_24A6D2B84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6D2B94(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  _QWORD v7[2];
  char v8;
  uint64_t v9;
  _BYTE v10[32];

  v2 = *a1;
  v1 = a1[1];
  v3 = *((unsigned __int8 *)a1 + 16);
  v4 = a1[3];
  sub_24A77A4EC();
  v7[0] = v2;
  v7[1] = v1;
  v8 = v3;
  v9 = v4;
  PacerViewConfiguration.pillConfiguration.getter((uint64_t)v10);
  v5 = v10[24];
  swift_release();
  result = swift_release();
  if (v5)
  {
    if (v5 == 1 && v3)
      goto LABEL_4;
  }
  else if (v3)
  {
LABEL_4:
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)v7);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A6D2CCC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)@<X0>(uint64_t@<X8>);
  uint64_t (*v34)@<X0>(uint64_t@<X8>);
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t (**v39)@<X0>(uint64_t@<X8>);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;

  v60 = a2;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948130);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_OWORD *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B8A8);
  MEMORY[0x24BDAC7A8](v54);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B8B0);
  MEMORY[0x24BDAC7A8](v57);
  v59 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v56 = (uint64_t)&v47 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v58 = (uint64_t)&v47 - v13;
  v52 = sub_24A77A930();
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)a1;
  swift_retain();
  v16 = v14;
  swift_retain();
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_BYTE *)(a1 + 64);
  sub_24A63BEC0(v17, v18);
  sub_24A63E608(v17, v18, &v63);
  sub_24A63BEDC(v17, v18);
  if (v63 <= 8u && ((1 << v63) & 0x181) != 0)
  {
    v19 = *(_OWORD *)(a1 + 40);
    v61 = *(_OWORD *)(a1 + 24);
    v62 = v19;
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v63);
    swift_release();
    swift_release();
  }
  sub_24A77B668();
  sub_24A77A4B0();
  v51 = v63;
  v50 = v64;
  v20 = v65;
  v21 = v66;
  v49 = v67;
  v48 = v68;
  v22 = (char *)v6 + *(int *)(v4 + 20);
  v23 = *MEMORY[0x24BDEEB68];
  v24 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v30 = v53;
  sub_24A655654((uint64_t)v6, v53);
  *(_WORD *)(v30 + *(int *)(v55 + 36)) = 256;
  sub_24A63CCC0(v30, (uint64_t)&v8[*(int *)(v54 + 36)], &qword_257948130);
  *(_QWORD *)v8 = v52;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  *((_QWORD *)v8 + 3) = v15;
  *((_WORD *)v8 + 16) = 256;
  *((_QWORD *)v8 + 5) = v16;
  *((_WORD *)v8 + 24) = 256;
  *((_QWORD *)v8 + 7) = v51;
  v8[64] = v50;
  *((_QWORD *)v8 + 9) = v20;
  v8[80] = v21;
  v31 = v48;
  *((_QWORD *)v8 + 11) = v49;
  *((_QWORD *)v8 + 12) = v31;
  swift_retain();
  swift_retain();
  sub_24A63CD04(v30, &qword_257948130);
  sub_24A655698((uint64_t)v6);
  swift_release();
  swift_release();
  v32 = sub_24A77B668();
  v34 = v33;
  v35 = swift_allocObject();
  v36 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v35 + 64) = v36;
  *(_BYTE *)(v35 + 80) = *(_BYTE *)(a1 + 64);
  v37 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v35 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 32) = v37;
  v38 = v56;
  sub_24A63CCC0((uint64_t)v8, v56, &qword_25794B8A8);
  v39 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v38 + *(int *)(v57 + 36));
  *v39 = sub_24A6D3574;
  v39[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v35;
  v39[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v32;
  v39[3] = v34;
  sub_24A6D357C(a1);
  sub_24A63CD04((uint64_t)v8, &qword_25794B8A8);
  v40 = v38;
  v41 = v58;
  sub_24A6D35CC(v40, v58);
  v42 = v59;
  sub_24A63CCC0(v41, v59, &qword_25794B8B0);
  v43 = v60;
  *v60 = 0;
  *((_BYTE *)v43 + 8) = 1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B8B8);
  sub_24A63CCC0(v42, (uint64_t)v43 + *(int *)(v44 + 48), &qword_25794B8B0);
  v45 = (char *)v43 + *(int *)(v44 + 64);
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  sub_24A63CD04(v41, &qword_25794B8B0);
  return sub_24A63CD04(v42, &qword_25794B8B0);
}

uint64_t sub_24A6D3178@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t result;
  double v21;
  double v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v4 = sub_24A77B668();
  v24 = v5;
  v25 = v4;
  sub_24A6D3320(a1, (uint64_t)&v26);
  v6 = v26;
  v7 = v27;
  v8 = v28;
  v9 = v29;
  v10 = v30;
  v11 = v31;
  v12 = v32;
  v13 = v33;
  v14 = v34;
  v15 = v35;
  v16 = v36;
  v23 = v37;
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_BYTE *)(a1 + 64);
  sub_24A63BEC0(v17, v18);
  sub_24A63E608(v17, v18, &v26);
  sub_24A63BEDC(v17, v18);
  if (v26 <= 8u && ((1 << v26) & 0x181) != 0)
  {
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v26);
    v19 = v27;
    swift_release();
    result = swift_release();
    v21 = v19 * -0.25;
  }
  else
  {
    PacerViewConfiguration.pillConfiguration.getter((uint64_t)&v26);
    v22 = v27;
    swift_release();
    result = swift_release();
    v21 = v22 * -0.25 + -2.5;
  }
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v6;
  *(double *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_BYTE *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v15;
  *(_QWORD *)(a2 + 96) = v16;
  *(_BYTE *)(a2 + 104) = v23;
  *(_QWORD *)(a2 + 112) = 0;
  *(double *)(a2 + 120) = v21;
  return result;
}

uint64_t sub_24A6D3320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16[2];
  uint64_t v17;
  uint64_t v18;

  v4 = sub_24A77B35C();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  KeyPath = swift_getKeyPath();
  v16[0] = v5;
  v16[1] = v6;
  LOBYTE(v17) = v7;
  *(_DWORD *)((char *)&v17 + 1) = *(_DWORD *)(a1 + 41);
  HIDWORD(v17) = *(_DWORD *)(a1 + 44);
  v18 = v8;
  sub_24A6D2B94(v16);
  v11 = v10;
  v12 = sub_24A77B680();
  PacerViewConfiguration.pillConfiguration.getter((uint64_t)v16);
  v13 = v17;
  v14 = v18;
  swift_release();
  swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = KeyPath;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 80) = v13;
  *(_BYTE *)(a2 + 88) = v14;
  swift_retain();
  sub_24A63BEC0(KeyPath, 0);
  swift_retain();
  sub_24A63BEDC(KeyPath, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_24A6D3464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD v10[4];
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B890);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_OWORD *)(v1 + 48);
  v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v6;
  v11 = *(_BYTE *)(v1 + 64);
  v7 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v7;
  *(_QWORD *)v5 = sub_24A77A9FC();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B898);
  sub_24A6D2CCC((uint64_t)v10, &v5[*(int *)(v8 + 44)]);
  sub_24A63CCC0((uint64_t)v5, a1, &qword_25794B890);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794B8A0) + 36)) = 0;
  return sub_24A63CD04((uint64_t)v5, &qword_25794B890);
}

uint64_t sub_24A6D353C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_24A63BEDC(*(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject();
}

uint64_t sub_24A6D3574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6D3178(v1 + 16, a1);
}

uint64_t sub_24A6D357C(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  swift_retain();
  swift_retain();
  sub_24A63BEC0(v2, v3);
  return a1;
}

uint64_t sub_24A6D35CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24A6D3620()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B8C0;
  if (!qword_25794B8C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B8A0);
    v2[0] = sub_24A6D368C();
    v2[1] = sub_24A69F3D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B8C0);
  }
  return result;
}

unint64_t sub_24A6D368C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794B8C8;
  if (!qword_25794B8C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B890);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_25794B8C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortViewCurrentWorkloadButton()
{
  return &type metadata for EffortViewCurrentWorkloadButton;
}

uint64_t sub_24A6D36E8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_24A6D36F8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _BYTE v7[200];
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  _OWORD v21[12];
  char v22;

  v2 = sub_24A77A930();
  sub_24A6D3954((uint64_t)v21);
  v3 = sub_24A77AD98();
  KeyPath = swift_getKeyPath();
  v5 = sub_24A77B368();
  sub_24A77B668();
  *(_OWORD *)&v7[151] = v21[9];
  *(_OWORD *)&v7[167] = v21[10];
  *(_OWORD *)&v7[183] = v21[11];
  *(_OWORD *)&v7[87] = v21[5];
  *(_OWORD *)&v7[103] = v21[6];
  *(_OWORD *)&v7[119] = v21[7];
  *(_OWORD *)&v7[135] = v21[8];
  *(_OWORD *)&v7[23] = v21[1];
  *(_OWORD *)&v7[39] = v21[2];
  *(_OWORD *)&v7[55] = v21[3];
  *(_OWORD *)&v7[71] = v21[4];
  v7[199] = v22;
  *(_OWORD *)&v7[7] = v21[0];
  sub_24A77A6A8();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v7;
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v7[64];
  *(_OWORD *)(a1 + 65) = *(_OWORD *)&v7[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v7[32];
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v7[16];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v7[128];
  *(_OWORD *)(a1 + 129) = *(_OWORD *)&v7[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v7[96];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v7[80];
  *(_QWORD *)(a1 + 209) = *(_QWORD *)&v7[192];
  *(_OWORD *)(a1 + 193) = *(_OWORD *)&v7[176];
  *(_OWORD *)(a1 + 177) = *(_OWORD *)&v7[160];
  *(_OWORD *)(a1 + 161) = *(_OWORD *)&v7[144];
  *(_QWORD *)(a1 + 224) = KeyPath;
  *(_QWORD *)(a1 + 232) = v3;
  *(_QWORD *)(a1 + 240) = v5;
  *(_QWORD *)(a1 + 248) = v8;
  *(_BYTE *)(a1 + 256) = v9;
  *(_QWORD *)(a1 + 264) = v10;
  *(_BYTE *)(a1 + 272) = v11;
  *(_QWORD *)(a1 + 280) = v12;
  *(_BYTE *)(a1 + 288) = v13;
  *(_QWORD *)(a1 + 296) = v14;
  *(_BYTE *)(a1 + 304) = v15;
  *(_QWORD *)(a1 + 312) = v16;
  *(_BYTE *)(a1 + 320) = v17;
  *(_QWORD *)(a1 + 328) = v18;
  *(_BYTE *)(a1 + 336) = v19;
  result = *(double *)&v20;
  *(_OWORD *)(a1 + 344) = v20;
  *(_QWORD *)(a1 + 360) = 0x402C000000000000;
  return result;
}

uint64_t sub_24A6D3954@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)qword_2544D6158;
  sub_24A77856C();

  sub_24A645928();
  v3 = sub_24A77AFD8();
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = sub_24A77ACD8();
  sub_24A77A390();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = sub_24A77B3C8();
  v20 = sub_24A77ACD8();
  sub_24A77A390();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = sub_24A77ACF0();
  sub_24A77A390();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v16;
  *(_QWORD *)(a1 + 64) = v18;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_BYTE *)(a1 + 88) = 1;
  *(_QWORD *)(a1 + 96) = v19;
  *(_BYTE *)(a1 + 104) = v20;
  *(_QWORD *)(a1 + 112) = v22;
  *(_QWORD *)(a1 + 120) = v24;
  *(_QWORD *)(a1 + 128) = v26;
  *(_QWORD *)(a1 + 136) = v28;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 152) = v29;
  *(_QWORD *)(a1 + 160) = v30;
  *(_QWORD *)(a1 + 168) = v31;
  *(_QWORD *)(a1 + 176) = v32;
  *(_QWORD *)(a1 + 184) = v33;
  *(_BYTE *)(a1 + 192) = 0;
  sub_24A6436C4(v3, v5, v9);
  swift_bridgeObjectRetain();
  sub_24A64596C(v3, v5, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6D3B98()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B8D0);
  sub_24A6D3BEC();
  return sub_24A77B4B8();
}

unint64_t sub_24A6D3BEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B8D8;
  if (!qword_25794B8D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B8D0);
    v2[0] = sub_24A6D3C58();
    v2[1] = sub_24A6D3DE4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B8D8);
  }
  return result;
}

unint64_t sub_24A6D3C58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B8E0;
  if (!qword_25794B8E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B8E8);
    v2[0] = sub_24A6D3CC4();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B8E0);
  }
  return result;
}

unint64_t sub_24A6D3CC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B8F0;
  if (!qword_25794B8F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B8F8);
    v2[0] = sub_24A6D3D48();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B8F0);
  }
  return result;
}

unint64_t sub_24A6D3D48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B900;
  if (!qword_25794B900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B908);
    v2[0] = sub_24A63CFF0(&qword_25794B910, &qword_25794B918, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B900);
  }
  return result;
}

unint64_t sub_24A6D3DE4()
{
  unint64_t result;

  result = qword_25794B920;
  if (!qword_25794B920)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for EffortButtonBackgroundModifier, &type metadata for EffortButtonBackgroundModifier);
    atomic_store(result, (unint64_t *)&qword_25794B920);
  }
  return result;
}

uint64_t sub_24A6D3E30()
{
  return sub_24A63CFF0(&qword_25794B928, &qword_25794B930, MEMORY[0x24BDF43B0]);
}

Swift::Void __swiftcall UIViewController.setNavigationItemForegroundColor(_:)(UIColor a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  objc_class *v14;
  char isUniquelyReferenced_nonNull_native;
  id v16;
  void *v17;
  id v18;
  _OWORD v19[2];
  __int128 v20;
  unint64_t v21;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_navigationController);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_navigationBar);

    v7 = objc_msgSend(v6, sel_standardAppearance);
    v8 = objc_msgSend(v7, sel_copy);

    v9 = objc_msgSend(v8, sel_buttonAppearance);
    v10 = objc_msgSend(v9, sel_normal);
    v11 = objc_msgSend(v10, sel_titleTextAttributes);

    type metadata accessor for Key(0);
    sub_24A6D40A8();
    sub_24A77B8FC();

    v12 = (void *)*MEMORY[0x24BEBB368];
    v21 = sub_24A6D40F0();
    *(UIColor *)&v20 = a1;
    sub_24A64E7EC(&v20, v19);
    v13 = v12;
    v14 = a1.super.isa;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24A650E3C(v19, v13, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v9, sel_normal);
    v17 = (void *)sub_24A77B8F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setTitleTextAttributes_, v17);

    objc_msgSend(v8, sel_setButtonAppearance_, v9);
    v18 = objc_msgSend(v2, sel_navigationItem);
    objc_msgSend(v18, sel_setStandardAppearance_, v8);

  }
}

unint64_t sub_24A6D40A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257946B90;
  if (!qword_257946B90)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x24BD1A1F4](&unk_24A77E2E4, v1);
    atomic_store(result, (unint64_t *)&qword_257946B90);
  }
  return result;
}

unint64_t sub_24A6D40F0()
{
  unint64_t result;

  result = qword_25794B938;
  if (!qword_25794B938)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25794B938);
  }
  return result;
}

unint64_t sub_24A6D412C(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  void (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t View;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v9 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v25 = (uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v23 = (uint64_t)v21 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(sub_24A779D90() - 8);
  v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v24 = *(_QWORD *)(v14 + 72);
  v21[1] = a3;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x24BEE4AF8];
  v22 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, View) == 1)
    {
      sub_24A63CD04((uint64_t)v8, &qword_257947ED0);
    }
    else
    {
      v17 = v23;
      sub_24A678D20((uint64_t)v8, v23);
      sub_24A678D20(v17, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_24A64D59C(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_24A64D59C(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_24A678D20(v25, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v19);
      a1 = v22;
    }
    v15 += v24;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_24A6D4380(void (*a1)(uint64_t *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[2];
  uint64_t v48;
  void (*v49)(uint64_t *__return_ptr, __int128 *);

  result = MEMORY[0x24BEE4AF8];
  v48 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v8 = *(_OWORD *)(a3 + 192);
    v9 = *(_OWORD *)(a3 + 208);
    v10 = *(_OWORD *)(a3 + 160);
    v45 = *(_OWORD *)(a3 + 176);
    v46 = v8;
    v47[0] = v9;
    *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)(a3 + 217);
    v11 = *(_OWORD *)(a3 + 144);
    v42 = *(_OWORD *)(a3 + 128);
    v43 = v11;
    v44 = v10;
    v12 = *(_OWORD *)(a3 + 80);
    v38 = *(_OWORD *)(a3 + 64);
    v39 = v12;
    v13 = *(_OWORD *)(a3 + 112);
    v40 = *(_OWORD *)(a3 + 96);
    v41 = v13;
    v14 = *(_OWORD *)(a3 + 48);
    v36 = *(_OWORD *)(a3 + 32);
    v37 = v14;
    v34 = v46;
    v35[0] = v47[0];
    *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v47 + 9);
    v30 = v42;
    v31 = v43;
    v32 = v10;
    v33 = v45;
    v26 = v38;
    v27 = v12;
    v28 = v40;
    v29 = v41;
    v24 = v36;
    v25 = v14;
    sub_24A64F358((uint64_t)&v36);
    a1(&v23, &v24);
    v15 = sub_24A64F3DC((uint64_t)&v36);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 240;
      v49 = a1;
      while (1)
      {
        if (v23)
        {
          MEMORY[0x24BD19114](v15);
          if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_24A77BB30();
          sub_24A77BB48();
          sub_24A77BB24();
        }
        if (!--v6)
          break;
        v17 = *(_OWORD *)(a3 + v16 + 176);
        v46 = *(_OWORD *)(a3 + v16 + 160);
        v47[0] = v17;
        *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)(a3 + v16 + 185);
        v18 = *(_OWORD *)(a3 + v16 + 112);
        v42 = *(_OWORD *)(a3 + v16 + 96);
        v43 = v18;
        v19 = *(_OWORD *)(a3 + v16 + 144);
        v44 = *(_OWORD *)(a3 + v16 + 128);
        v45 = v19;
        v20 = *(_OWORD *)(a3 + v16 + 48);
        v38 = *(_OWORD *)(a3 + v16 + 32);
        v39 = v20;
        v21 = *(_OWORD *)(a3 + v16 + 80);
        v40 = *(_OWORD *)(a3 + v16 + 64);
        v41 = v21;
        v22 = *(_OWORD *)(a3 + v16 + 16);
        v36 = *(_OWORD *)(a3 + v16);
        v37 = v22;
        v34 = v46;
        v35[0] = v47[0];
        *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v47 + 9);
        v30 = v42;
        v31 = v43;
        v32 = v44;
        v33 = v45;
        v26 = v38;
        v27 = v20;
        v28 = v40;
        v29 = v41;
        v24 = v36;
        v25 = v22;
        sub_24A64F358((uint64_t)&v36);
        v49(&v23, &v24);
        v15 = sub_24A64F3DC((uint64_t)&v36);
        v16 += 208;
      }
      swift_bridgeObjectRelease();
      return v48;
    }
  }
  return result;
}

uint64_t TrainingLoadViewModel.ChartPoint.init(value:date:color:baseline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  int *View;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  int v24;

  v24 = a4;
  v23 = a3;
  v10 = sub_24A77B80C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24A778818();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v18, a1, v14, v16);
  sub_24A77B7C4();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v20 = a5 + View[6];
  v21 = a5 + View[8];
  *(double *)v20 = a6;
  *(_BYTE *)(v20 + 8) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a5, v18, v14);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5 + View[5], v13, v10);
  *(_QWORD *)(a5 + View[7]) = a2;
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v24 & 1;
  return result;
}

uint64_t TrainingLoadViewModel.ChartPoint.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6D4924((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t TrainingLoadViewModel.ChartPoint.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_24A778818();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TrainingLoadViewModel.ChartPoint.date.modify())()
{
  return nullsub_1;
}

uint64_t TrainingLoadViewModel.ChartPoint.baseline.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 32));
}

uint64_t TrainingLoadViewModel.ChartPoint.baseline.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v6 = v2 + *(int *)(result + 32);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TrainingLoadViewModel.ChartPoint.baseline.modify())(_QWORD)
{
  type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  return nullsub_1;
}

uint64_t TrainingLoadViewModel.ChartPoint.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6D4924((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t TrainingLoadViewModel.ChartPoint.init(value:date:dayIndex:color:baseline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  int *View;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v15 = a6 + View[6];
  v16 = a6 + View[8];
  *(double *)v15 = a7;
  *(_BYTE *)(v15 + 8) = 0;
  v17 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a6, a1, v17);
  v18 = a6 + View[5];
  v19 = sub_24A77B80C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a2, v19);
  *(_QWORD *)(a6 + View[7]) = a3;
  *(_QWORD *)v16 = a4;
  *(_BYTE *)(v16 + 8) = a5 & 1;
  return result;
}

uint64_t type metadata accessor for TrainingLoadViewModel.ChartPoint(uint64_t a1)
{
  return sub_24A6AF174(a1, qword_25794BA48);
}

uint64_t TrainingLoadViewModel.dataType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6D4924((uint64_t (*)(_QWORD))MEMORY[0x24BE3FD48], a1);
}

uint64_t sub_24A6D4924@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
}

uint64_t TrainingLoadViewModel.dayRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 20);
  v4 = sub_24A779CF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TrainingLoadViewModel.chronologicalTrainingLoadDaySummaries.getter()
{
  type metadata accessor for TrainingLoadViewModel(0);
  return swift_bridgeObjectRetain();
}

uint64_t TrainingLoadViewModel.trainingLoadBandForToday.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t ViewModel;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_24A63CCC0(v1 + *(int *)(ViewModel + 28), a1, &qword_25794B940);
}

uint64_t TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t ViewModel;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_24A63CCC0(v1 + *(int *)(ViewModel + 32), a1, &qword_2544D6260);
}

uint64_t TrainingLoadViewModel.fractionalBaselineDifferenceFromChronicForToday.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 36));
}

uint64_t TrainingLoadViewModel.formattedFractionalDifferenceFromChronicBaselineForToday.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainingLoadViewModel.chartPoints.getter()
{
  type metadata accessor for TrainingLoadViewModel(0);
  return swift_bridgeObjectRetain();
}

uint64_t TrainingLoadViewModel.emphasizedChartPoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t ViewModel;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_24A63CCC0(v1 + *(int *)(ViewModel + 48), a1, &qword_257947ED0);
}

uint64_t TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t View;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t ViewModel;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t);
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int isUniquelyReferenced_nonNull_native;
  char v63;
  unint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char v90;
  char v91;
  char v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  char *v100;
  char *v101;
  _QWORD *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  int v113;
  char v114;
  unint64_t v115;
  uint64_t v116;
  _BOOL8 v117;
  uint64_t v118;
  char v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t result;
  _QWORD v144[2];
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;

  v176 = sub_24A779CAC();
  v8 = *(_QWORD *)(v176 - 8);
  MEMORY[0x24BDAC7A8](v176);
  v156 = (char *)v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  MEMORY[0x24BDAC7A8](v10);
  v164 = (char *)v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v171 = *(_QWORD *)(View - 8);
  v172 = View;
  MEMORY[0x24BDAC7A8](View);
  v183 = (uint64_t)v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v180 = (uint64_t)v144 - v15;
  v155 = sub_24A778674();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (char *)v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_24A778638();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v148 = (char *)v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v18);
  v144[1] = (char *)v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B948);
  v146 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152);
  v145 = (char *)v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v147 = (char *)v144 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v151 = (char *)v144 - v24;
  v159 = sub_24A779DCC();
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v157 = (char *)v144 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_24A77B80C();
  v27 = *(_QWORD *)(v26 - 8);
  v186 = v26;
  v187 = v27;
  MEMORY[0x24BDAC7A8](v26);
  v185 = (uint64_t)v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v144 - v30;
  v182 = sub_24A779D90();
  v32 = *(_QWORD *)(v182 - 8);
  MEMORY[0x24BDAC7A8](v182);
  v160 = (char *)v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v184 = (char *)v144 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)v144 - v37;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
  MEMORY[0x24BDAC7A8](v39);
  v165 = (char *)v144 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v170 = (char *)v144 - v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
  MEMORY[0x24BDAC7A8](v43);
  v161 = (uint64_t)v144 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v169 = (uint64_t)v144 - v46;
  v47 = sub_24A779D0C();
  v166 = *(_QWORD *)(v47 - 8);
  v48 = *(void (**)(uint64_t, uint64_t))(v166 + 16);
  v167 = v47;
  v48(a4, a1);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v50 = a4 + *(int *)(ViewModel + 20);
  v51 = sub_24A779CF4();
  v162 = *(_QWORD *)(v51 - 8);
  v52 = *(void (**)(uint64_t, uint64_t))(v162 + 16);
  v53 = v50;
  v54 = a2;
  v163 = v51;
  v52(v53, a2);
  v177 = (int *)ViewModel;
  v178 = a2;
  *(_QWORD *)(a4 + *(int *)(ViewModel + 24)) = a3;
  v55 = *(_QWORD *)(a3 + 16);
  v181 = v32;
  v173 = a4;
  v174 = v8;
  v175 = a1;
  v168 = a3;
  if (v55)
  {
    v56 = a3 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v179 = *(_QWORD *)(v32 + 72);
    v57 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
    swift_bridgeObjectRetain_n();
    v58 = (_QWORD *)MEMORY[0x24BEE4B00];
    v59 = v182;
    while (1)
    {
      v57(v38, v56, v59);
      sub_24A779D6C();
      v57(v184, (unint64_t)v38, v59);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v189 = v58;
      v64 = sub_24A64E6B4((uint64_t)v31);
      v65 = v58[2];
      v66 = (v63 & 1) == 0;
      v67 = v65 + v66;
      if (__OFADD__(v65, v66))
        break;
      v68 = v63;
      if (v58[3] >= v67)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_24A6DB3E8();
      }
      else
      {
        sub_24A6DD040(v67, isUniquelyReferenced_nonNull_native);
        v69 = sub_24A64E6B4((uint64_t)v31);
        if ((v68 & 1) != (v70 & 1))
          goto LABEL_54;
        v64 = v69;
      }
      v71 = v181;
      v72 = v189;
      if ((v68 & 1) != 0)
      {
        v60 = v189[7] + v64 * v179;
        v61 = v179;
        v59 = v182;
        (*(void (**)(unint64_t, char *, uint64_t))(v181 + 40))(v60, v184, v182);
      }
      else
      {
        v189[(v64 >> 6) + 8] |= 1 << v64;
        (*(void (**)(unint64_t, char *, uint64_t))(v187 + 16))(v72[6] + *(_QWORD *)(v187 + 72) * v64, v31, v186);
        v73 = v72[7] + v64 * v179;
        v61 = v179;
        v59 = v182;
        (*(void (**)(unint64_t, char *, uint64_t))(v71 + 32))(v73, v184, v182);
        v74 = v72[2];
        v75 = __OFADD__(v74, 1);
        v76 = v74 + 1;
        if (v75)
          goto LABEL_52;
        v72[2] = v76;
      }
      v58 = v189;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v187 + 8))(v31, v186);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v59);
      v56 += v61;
      if (!--v55)
      {
        a3 = v168;
        swift_bridgeObjectRelease();
        a4 = v173;
        v8 = v174;
        v77 = v178;
        a1 = v175;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v58 = (_QWORD *)MEMORY[0x24BEE4B00];
    v77 = v54;
LABEL_16:
    v78 = v177;
    *(_QWORD *)(a4 + v177[16]) = v58;
    swift_bridgeObjectRetain();
    v79 = v169;
    sub_24A6D5920(a1, v77, a3, v169);
    v80 = a4 + v78[8];
    sub_24A63F6C4(v79, v80, &qword_2544D6260);
    v184 = *(char **)(v181 + 48);
    v81 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v184)(v80, 1, v182);
    v82 = v185;
    v83 = (uint64_t)v170;
    if (v81)
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v170, 1, 1, v176);
    else
      sub_24A779D84();
    sub_24A63F6C4(v83, a4 + v78[7], &qword_25794B940);
    v84 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v184)(v80, 1, v182);
    v179 = v80;
    if ((_DWORD)v84)
    {
      v85 = 0;
      v86 = 0;
      v87 = a4 + v78[9];
      *(_QWORD *)v87 = 0;
      *(_BYTE *)(v87 + 8) = 1;
    }
    else
    {
      v88 = v157;
      sub_24A779D54();
      v89 = sub_24A779D9C();
      v91 = v90;
      v92 = v90 & 1;
      v84 = (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v88, v159);
      v93 = a4 + v78[9];
      *(_QWORD *)v93 = v89;
      *(_BYTE *)(v93 + 8) = v92;
      if ((v91 & 1) != 0)
      {
        v85 = 0;
        v86 = 0;
      }
      else
      {
        v188 = v89;
        sub_24A77886C();
        v170 = (char *)sub_24A6971B4();
        v94 = v145;
        sub_24A7785FC();
        v95 = v148;
        sub_24A77862C();
        v96 = v147;
        v97 = v152;
        MEMORY[0x24BD15C04](v95, v152);
        (*(void (**)(char *, uint64_t))(v149 + 8))(v95, v150);
        v98 = *(void (**)(char *, uint64_t))(v146 + 8);
        v98(v94, v97);
        v99 = v153;
        sub_24A778668();
        v100 = v151;
        MEMORY[0x24BD15C1C](v99, v97);
        (*(void (**)(char *, uint64_t))(v154 + 8))(v99, v155);
        v101 = v96;
        v80 = v179;
        v98(v101, v97);
        sub_24A63CFF0(&qword_25794B950, &qword_25794B948, MEMORY[0x24BDCD480]);
        sub_24A77B8E4();
        v84 = ((uint64_t (*)(char *, uint64_t))v98)(v100, v97);
        v77 = v178;
        v85 = v189;
        v86 = v190;
      }
      a3 = v168;
    }
    v102 = (_QWORD *)(a4 + v78[10]);
    *v102 = v85;
    v102[1] = v86;
    MEMORY[0x24BDAC7A8](v84);
    v144[-2] = v77;
    v103 = sub_24A6D412C((void (*)(_QWORD))sub_24A6DE808, (uint64_t)&v144[-4], a3);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a4 + v78[11]) = v103;
    v104 = *(_QWORD *)(v103 + 16);
    if (!v104)
    {
      v108 = (_QWORD *)MEMORY[0x24BEE4B00];
      v124 = v176;
LABEL_40:
      v125 = v177;
      *(_QWORD *)(a4 + v177[15]) = v108;
      v126 = v161;
      sub_24A63CCC0(v80, v161, &qword_2544D6260);
      v127 = v182;
      v128 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v184)(v126, 1, v182);
      v129 = v174;
      v130 = (uint64_t)v164;
      if (v128 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v164, 1, 1, v172);
        swift_bridgeObjectRetain();
      }
      else
      {
        v131 = v126;
        v132 = v181;
        v133 = v124;
        v134 = (uint64_t)v160;
        (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v160, v131, v127);
        swift_bridgeObjectRetain();
        sub_24A6D6B44(v134, v178, v130);
        v135 = v134;
        v124 = v133;
        v80 = v179;
        (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v135, v127);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24A63F6C4(v130, a4 + v125[12], &qword_257947ED0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v184)(v80, 1, v127))
      {
        v136 = (uint64_t)v165;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56))(v165, 1, 1, v124);
      }
      else
      {
        v137 = v165;
        sub_24A779D84();
        v136 = (uint64_t)v137;
      }
      v138 = v167;
      v139 = v166;
      v140 = a4 + v125[13];
      sub_24A63F6C4(v136, v140, &qword_25794B940);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v140, 1, v124))
      {
        v141 = sub_24A77B368();
      }
      else
      {
        v142 = v156;
        (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v156, v140, v124);
        v141 = TrainingLoadBand.color.getter();
        (*(void (**)(char *, uint64_t))(v129 + 8))(v142, v124);
      }
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v175, v138);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v162 + 8))(v178, v163);
      *(_QWORD *)(a4 + v125[14]) = v141;
      return result;
    }
    v105 = v180 + *(int *)(v172 + 20);
    v106 = v103 + ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80));
    v107 = *(_QWORD *)(v171 + 72);
    v170 = (char *)v103;
    swift_bridgeObjectRetain();
    v108 = (_QWORD *)MEMORY[0x24BEE4B00];
    v110 = v186;
    v109 = v187;
    while (1)
    {
      v111 = v180;
      sub_24A65FAD0(v106, v180, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16);
      v112(v82, v105, v110);
      sub_24A678D20(v111, v183);
      v113 = swift_isUniquelyReferenced_nonNull_native();
      v189 = v108;
      v115 = sub_24A64E6B4(v82);
      v116 = v108[2];
      v117 = (v114 & 1) == 0;
      v118 = v116 + v117;
      if (__OFADD__(v116, v117))
        break;
      v119 = v114;
      if (v108[3] >= v118)
      {
        if ((v113 & 1) == 0)
          sub_24A6DB168();
      }
      else
      {
        sub_24A6DCC44(v118, v113);
        v120 = sub_24A64E6B4(v185);
        if ((v119 & 1) != (v121 & 1))
          goto LABEL_54;
        v115 = v120;
      }
      v110 = v186;
      v108 = v189;
      if ((v119 & 1) != 0)
      {
        sub_24A6DE830(v183, v189[7] + v115 * v107);
      }
      else
      {
        v189[(v115 >> 6) + 8] |= 1 << v115;
        v112(v108[6] + *(_QWORD *)(v187 + 72) * v115, v185, v110);
        sub_24A678D20(v183, v108[7] + v115 * v107);
        v122 = v108[2];
        v75 = __OFADD__(v122, 1);
        v123 = v122 + 1;
        if (v75)
          goto LABEL_53;
        v108[2] = v123;
        v108 = v189;
      }
      swift_bridgeObjectRelease();
      v109 = v187;
      v82 = v185;
      (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v185, v110);
      v106 += v107;
      if (!--v104)
      {
        swift_bridgeObjectRelease();
        a4 = v173;
        v124 = v176;
        v80 = v179;
        goto LABEL_40;
      }
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  result = sub_24A77C1B4();
  __break(1u);
  return result;
}

uint64_t sub_24A6D5920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  char *v44;
  int v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  NSObject *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_t v73;
  os_log_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  os_log_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  os_log_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  os_log_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  os_log_t v146;
  os_log_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t);
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  os_log_t v160;
  os_log_t v161;
  char *v162;
  uint64_t v163;
  uint64_t *v164;
  char *v165;
  os_log_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183[2];

  v181 = a3;
  v179 = a2;
  v175 = a4;
  v176 = a1;
  v180 = sub_24A779D90();
  v177 = *(uint64_t **)(v180 - 8);
  MEMORY[0x24BDAC7A8](v180);
  v167 = (char *)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v168);
  v169 = (char *)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A77B80C();
  v171 = *(_QWORD *)(v6 - 8);
  v172 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v165 = (char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v170 = (char *)&v155 - v9;
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB28);
  MEMORY[0x24BDAC7A8](v163);
  v162 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v160 = (os_log_t)((char *)&v155 - v12);
  MEMORY[0x24BDAC7A8](v13);
  v158 = (char *)&v155 - v14;
  v164 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
  MEMORY[0x24BDAC7A8](v164);
  v161 = (os_log_t)((char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v159 = (char *)&v155 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v157 = (char *)&v155 - v19;
  v178 = sub_24A779CF4();
  v20 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v166 = (os_log_t)((char *)&v155 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v155 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v155 - v26;
  v28 = sub_24A77A018();
  v173 = *(_QWORD *)(v28 - 8);
  v174 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v155 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v155 - v32;
  MEMORY[0x24BDAC7A8](v34);
  v36 = ((char *)&v155 - v35);
  MEMORY[0x24BDAC7A8](v37);
  v39 = ((char *)&v155 - v38);
  v40 = sub_24A779D0C();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v155 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v41 + 16))(v44, v176, v40, v42);
  v45 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v44, v40);
  if (v45 != *MEMORY[0x24BE3FD28])
  {
    v162 = v24;
    v161 = v39;
    v166 = v36;
    v176 = v20;
    v59 = v181;
    if (v45 == *MEMORY[0x24BE3FD38])
    {
      v60 = v166;
      sub_24A779A3C();
      v61 = v176;
      v62 = v162;
      v63 = v178;
      (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v162, v179, v178);
      v48 = v59;
      swift_bridgeObjectRetain_n();
      v64 = sub_24A77A00C();
      v65 = sub_24A77BC50();
      if (!os_log_type_enabled(v64, (os_log_type_t)v65))
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);

        (*(void (**)(os_log_t, uint64_t))(v173 + 8))(v60, v174);
        goto LABEL_15;
      }
      v66 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v183[0] = v67;
      *(_DWORD *)v66 = 136315650;
      v68 = *(_QWORD *)(v59 + 16);
      v161 = v64;
      v157 = (char *)v67;
      if (v68)
      {
        v69 = v177;
        v70 = (uint64_t)v159;
        v71 = v180;
        ((void (*)(char *, unint64_t, uint64_t))v177[2])(v159, v48+ ((*((unsigned __int8 *)v69 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v69 + 80))+ v177[9] * (v68 - 1), v180);
        v72 = 0;
        v73 = v160;
      }
      else
      {
        v72 = 1;
        v71 = v180;
        v69 = v177;
        v73 = v160;
        v70 = (uint64_t)v159;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v69[7])(v70, v72, 1, v71);
      v115 = sub_24A77BDDC();
      v117 = v116;
      sub_24A63CD04(v70, &qword_2544D6260);
      v182 = sub_24A76BC40(v115, v117, v183);
      sub_24A77BE00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      LODWORD(v158) = v65;
      v177 = v183;
      if (v68)
      {
        sub_24A779D6C();
        v118 = 0;
        v81 = v69;
      }
      else
      {
        v81 = v69;
        v118 = 1;
      }
      v120 = v171;
      v119 = v172;
      (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v171 + 56))(v73, v118, 1, v172);
      v121 = sub_24A77BDDC();
      v123 = v122;
      sub_24A63CD04((uint64_t)v73, &qword_25794BB28);
      v182 = sub_24A76BC40(v121, v123, v183);
      sub_24A77BE00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 22) = 2080;
      v124 = (uint64_t)v169;
      v125 = v162;
      sub_24A779CC4();
      v126 = v170;
      (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v170, v124 + *(int *)(v168 + 36), v119);
      sub_24A63CD04(v124, &qword_257947EE0);
      sub_24A63C880(&qword_25794BB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
      v127 = sub_24A77C160();
      v129 = v128;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v126, v119);
      v182 = sub_24A76BC40(v127, v129, v183);
      sub_24A77BE00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v125, v178);
      v130 = v161;
      _os_log_impl(&dword_24A635000, v161, (os_log_type_t)v158, "All Day day summary today %s, morningIndex %s, upperbound %s ", (uint8_t *)v66, 0x20u);
      v131 = v157;
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v131, -1, -1);
      MEMORY[0x24BD1A2B4](v66, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v173 + 8))(v166, v174);
    }
    else
    {
      if (v45 != *MEMORY[0x24BE3FD40])
      {
        v90 = v30;
        sub_24A779A3C();
        v91 = sub_24A77A00C();
        v92 = sub_24A77BC5C();
        if (os_log_type_enabled(v91, v92))
        {
          v93 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v93 = 0;
          _os_log_impl(&dword_24A635000, v91, v92, "Unknown training load data type.", v93, 2u);
          MEMORY[0x24BD1A2B4](v93, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v173 + 8))(v90, v174);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v177[7])(v175, 1, 1, v180);
        return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v44, v40);
      }
      v74 = v161;
      sub_24A779A3C();
      v75 = v176;
      v76 = v178;
      (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v27, v179, v178);
      v48 = v59;
      swift_bridgeObjectRetain_n();
      v77 = sub_24A77A00C();
      v78 = sub_24A77BC50();
      if (!os_log_type_enabled(v77, (os_log_type_t)v78))
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v27, v76);

        (*(void (**)(os_log_t, uint64_t))(v173 + 8))(v74, v174);
        v86 = v180;
LABEL_16:
        v87 = v175;
        v81 = v177;
        v88 = v167;
        v89 = *(_QWORD *)(v48 + 16);
        if (!v89)
          return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81[7])(v87, 1, 1, v86);
        goto LABEL_38;
      }
      v166 = v77;
      v79 = swift_slowAlloc();
      v160 = (os_log_t)swift_slowAlloc();
      v183[0] = (uint64_t)v160;
      *(_DWORD *)v79 = 136315650;
      v80 = *(_QWORD *)(v48 + 16);
      LODWORD(v162) = v78;
      if (v80)
      {
        v81 = v177;
        v82 = (uint64_t)v157;
        v83 = v180;
        ((void (*)(char *, unint64_t, uint64_t))v177[2])(v157, v48+ ((*((unsigned __int8 *)v81 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v81 + 80))+ v177[9] * (v80 - 1), v180);
        v84 = 0;
        v85 = (uint64_t)v158;
      }
      else
      {
        v84 = 1;
        v83 = v180;
        v81 = v177;
        v85 = (uint64_t)v158;
        v82 = (uint64_t)v157;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81[7])(v82, v84, 1, v83);
      v132 = sub_24A77BDDC();
      v134 = v133;
      sub_24A63CD04(v82, &qword_2544D6260);
      v182 = sub_24A76BC40(v132, v134, v183);
      v177 = v183;
      sub_24A77BE00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 12) = 2080;
      if (v80)
      {
        sub_24A779D6C();
        v135 = 0;
      }
      else
      {
        v135 = 1;
      }
      v137 = v171;
      v136 = v172;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v171 + 56))(v85, v135, 1, v172);
      v138 = sub_24A77BDDC();
      v140 = v139;
      sub_24A63CD04(v85, &qword_25794BB28);
      v182 = sub_24A76BC40(v138, v140, v183);
      sub_24A77BE00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 22) = 2080;
      v164 = (uint64_t *)(v79 + 24);
      v141 = (uint64_t)v169;
      sub_24A779CC4();
      v142 = v170;
      (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v170, v141 + *(int *)(v168 + 36), v136);
      sub_24A63CD04(v141, &qword_257947EE0);
      sub_24A63C880(&qword_25794BB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
      v143 = sub_24A77C160();
      v145 = v144;
      (*(void (**)(char *, uint64_t))(v137 + 8))(v142, v136);
      v182 = sub_24A76BC40(v143, v145, v183);
      sub_24A77BE00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v27, v178);
      v146 = v166;
      _os_log_impl(&dword_24A635000, v166, (os_log_type_t)v162, "workout day summary today %s, morningIndex %s, upperbound %s ", (uint8_t *)v79, 0x20u);
      v147 = v160;
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v147, -1, -1);
      MEMORY[0x24BD1A2B4](v79, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v173 + 8))(v161, v174);
    }
    v86 = v180;
    v87 = v175;
    v88 = v167;
    v48 = v181;
    v89 = *(_QWORD *)(v181 + 16);
    if (!v89)
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81[7])(v87, 1, 1, v86);
    goto LABEL_38;
  }
  sub_24A779A3C();
  v46 = v166;
  v47 = v178;
  (*(void (**)(os_log_t, uint64_t, uint64_t))(v20 + 16))(v166, v179, v178);
  v48 = v181;
  swift_bridgeObjectRetain_n();
  v49 = sub_24A77A00C();
  v50 = sub_24A77BC50();
  v51 = v33;
  if (!os_log_type_enabled(v49, (os_log_type_t)v50))
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(os_log_t, uint64_t))(v20 + 8))(v46, v47);

    (*(void (**)(char *, uint64_t))(v173 + 8))(v33, v174);
LABEL_15:
    v86 = v180;
    goto LABEL_16;
  }
  LODWORD(v159) = v50;
  v176 = v20;
  v52 = swift_slowAlloc();
  v53 = swift_slowAlloc();
  v183[0] = v53;
  *(_DWORD *)v52 = 136315650;
  v54 = *(_QWORD *)(v48 + 16);
  v55 = v180;
  v56 = v177;
  v156 = v51;
  v160 = v49;
  v158 = (char *)v53;
  if (v54)
  {
    v57 = v161;
    ((void (*)(os_log_t, unint64_t, uint64_t))v177[2])(v161, v48+ ((*((unsigned __int8 *)v177 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v177 + 80))+ v177[9] * (v54 - 1), v180);
    v58 = 0;
  }
  else
  {
    v58 = 1;
    v57 = v161;
  }
  v95 = 1;
  ((void (*)(os_log_t, uint64_t, uint64_t, uint64_t))v56[7])(v57, v58, 1, v55);
  v96 = sub_24A77BDDC();
  v98 = v97;
  sub_24A63CD04((uint64_t)v57, &qword_2544D6260);
  v182 = sub_24A76BC40(v96, v98, v183);
  sub_24A77BE00();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v52 + 12) = 2080;
  v164 = v183;
  v99 = v162;
  if (v54)
  {
    sub_24A779D6C();
    v95 = 0;
  }
  v100 = v171;
  v101 = v99;
  v102 = (uint64_t)v99;
  v103 = v172;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v101, v95, 1, v172);
  v104 = sub_24A77BDDC();
  v106 = v105;
  sub_24A63CD04(v102, &qword_25794BB28);
  v182 = sub_24A76BC40(v104, v106, v183);
  sub_24A77BE00();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v52 + 22) = 2080;
  v107 = (uint64_t)v169;
  v108 = v166;
  sub_24A779CC4();
  v109 = v170;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v170, v107 + *(int *)(v168 + 36), v103);
  sub_24A63CD04(v107, &qword_257947EE0);
  sub_24A63C880(&qword_25794BB30, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
  v110 = sub_24A77C160();
  v112 = v111;
  (*(void (**)(char *, uint64_t))(v100 + 8))(v109, v103);
  v182 = sub_24A76BC40(v110, v112, v183);
  sub_24A77BE00();
  swift_bridgeObjectRelease();
  (*(void (**)(os_log_t, uint64_t))(v176 + 8))(v108, v178);
  v113 = v160;
  _os_log_impl(&dword_24A635000, v160, (os_log_type_t)v159, "type day summary today %s, morningIndex %s, upperbound %s", (uint8_t *)v52, 0x20u);
  v114 = v158;
  swift_arrayDestroy();
  MEMORY[0x24BD1A2B4](v114, -1, -1);
  MEMORY[0x24BD1A2B4](v52, -1, -1);

  (*(void (**)(char *, uint64_t))(v173 + 8))(v156, v174);
  v86 = v180;
  v81 = v177;
  v88 = v167;
  v48 = v181;
  v87 = v175;
  v89 = *(_QWORD *)(v181 + 16);
  if (!v89)
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v81[7])(v87, 1, 1, v86);
LABEL_38:
  ((void (*)(char *, unint64_t, uint64_t))v81[2])(v88, v48+ ((*((unsigned __int8 *)v81 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v81 + 80))+ v81[9] * (v89 - 1), v86);
  v148 = v170;
  sub_24A779D6C();
  v149 = (uint64_t)v169;
  sub_24A779CC4();
  v151 = v171;
  v150 = v172;
  v152 = v165;
  (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v165, v149 + *(int *)(v168 + 36), v172);
  sub_24A63CD04(v149, &qword_257947EE0);
  sub_24A63C880(&qword_25794BB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_24A77BE24();
  v153 = v183[0];
  v154 = *(void (**)(char *, uint64_t))(v151 + 8);
  v154(v152, v150);
  v154(v148, v150);
  if (v153)
  {
    ((void (*)(char *, uint64_t))v81[1])(v88, v86);
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v81[7])(v87, 1, 1, v86);
  }
  ((void (*)(uint64_t, char *, uint64_t))v81[4])(v87, v88, v86);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v81[7])(v87, 0, 1, v86);
}

uint64_t sub_24A6D6B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char **v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  char *v56;
  char *v57;
  char *v58;
  char v59;
  char *v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int *View;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char **v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v95 = a2;
  v96 = a3;
  v76 = sub_24A779CAC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v74 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A778968();
  v84 = *(_QWORD *)(v5 - 8);
  v85 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A778818();
  v87 = *(_QWORD *)(v7 - 8);
  v88 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v86 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v94 = (uint64_t)&v72 - v10;
  v11 = sub_24A779D48();
  v81 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v80 = (char **)((char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = sub_24A77B80C();
  v13 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v93 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v90 = (char *)&v72 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v72 - v18;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v77);
  v89 = (uint64_t)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v72 - v22;
  v24 = sub_24A779D30();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_24A779DCC();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v79 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v78 = (char *)&v72 - v32;
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v72 - v34;
  v98 = a1;
  sub_24A779D54();
  sub_24A779DB4();
  v36 = *(void (**)(char *, uint64_t))(v29 + 8);
  v91 = v28;
  v92 = v36;
  v36(v35, v28);
  v37 = (void *)sub_24A779D24();
  v38 = v27;
  v39 = v97;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v38, v24);
  if (!v37)
    goto LABEL_8;
  objc_msgSend(v37, sel__value);
  v41 = v40;

  sub_24A779CC4();
  sub_24A779D6C();
  sub_24A63C880(&qword_25794BB20, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  v42 = sub_24A77B950();
  v43 = v90;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v90, v19, v39);
  v44 = v89;
  sub_24A63CCC0((uint64_t)v23, v89, &qword_257947EE0);
  v45 = v19;
  v46 = (v42 & 1) != 0 ? sub_24A77B95C() : 0;
  sub_24A63CD04(v44, &qword_257947EE0);
  v47 = *(void (**)(char *, uint64_t))(v13 + 8);
  v47(v43, v39);
  v47(v45, v39);
  sub_24A63CD04((uint64_t)v23, &qword_257947EE0);
  if ((v46 & 1) != 0)
  {
    v48 = v78;
    sub_24A779D54();
    v49 = v80;
    sub_24A779DC0();
    v92(v48, v91);
    v51 = v81;
    v50 = v82;
    v52 = (*(uint64_t (**)(char **, uint64_t))(v81 + 88))(v49, v82);
    v53 = *MEMORY[0x24BE400B0];
    if (v52 == *MEMORY[0x24BE400B0])
    {
      (*(void (**)(char **, uint64_t))(v51 + 96))(v49, v50);
      v90 = *v49;
    }
    else
    {
      (*(void (**)(char **, uint64_t))(v51 + 8))(v49, v50);
      v90 = 0;
    }
    v56 = v93;
    sub_24A779D6C();
    v57 = v83;
    sub_24A779CDC();
    sub_24A6D7200(v94);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v57, v85);
    v47(v56, v39);
    v58 = v79;
    sub_24A779D54();
    sub_24A779D9C();
    v73 = v13;
    if ((v59 & 1) != 0)
    {
      v92(v58, v91);
      v61 = sub_24A77B338();
    }
    else
    {
      v60 = v74;
      sub_24A779C7C();
      v61 = TrainingLoadBand.color.getter();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v60, v76);
      v92(v58, v91);
    }
    v62 = v52 != v53;
    v64 = v86;
    v63 = v87;
    v65 = v94;
    v66 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v94, v88);
    v67 = v93;
    sub_24A779D6C();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v66);
    View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    v69 = v96;
    v70 = v96 + View[6];
    v71 = v96 + View[8];
    *(_QWORD *)v70 = v41;
    *(_BYTE *)(v70 + 8) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v69, v64, v66);
    (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v69 + View[5], v67, v97);
    *(_QWORD *)(v69 + View[7]) = v61;
    *(_QWORD *)v71 = v90;
    *(_BYTE *)(v71 + 8) = v62;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)View - 1) + 56))(v69, 0, 1, View);
  }
  else
  {
LABEL_8:
    v54 = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v96, 1, 1, v54);
  }
}

uint64_t sub_24A6D7200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  void (*v16)(char *, uint64_t);
  _QWORD v18[2];

  v18[1] = a1;
  v1 = sub_24A77B80C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - v6;
  v8 = sub_24A778818();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v18 - v13;
  sub_24A77B800();
  sub_24A77B7C4();
  sub_24A77B7D0();
  v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v4, v1);
  sub_24A77B800();
  v15(v7, v1);
  sub_24A7786E0();
  sub_24A7786E0();
  sub_24A7786D4();
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v8);
}

uint64_t TrainingLoadViewModel.hasValue(onDay:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t View;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 60));
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_24A64E6B4(a1), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(v6 + 56);
    View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    v12 = *(_QWORD *)(View - 8);
    sub_24A65FAD0(v10 + *(_QWORD *)(v12 + 72) * v9, (uint64_t)v5, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    v13 = 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, View);
  }
  else
  {
    v14 = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
    v13 = 0;
  }
  sub_24A63CD04((uint64_t)v5, &qword_257947ED0);
  return v13;
}

uint64_t TrainingLoadViewModel.loadPercentage(onDay:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t View;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;

  v37 = a1;
  v2 = sub_24A778674();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v42 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A778638();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B948);
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v36 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v38 = (char *)&v36 - v15;
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v17 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v36 - v21;
  v23 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 60));
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_8;
  v24 = sub_24A64E6B4(v37);
  if ((v25 & 1) == 0)
    goto LABEL_8;
  sub_24A65FAD0(*(_QWORD *)(v23 + 56) + *(_QWORD *)(v17 + 72) * v24, (uint64_t)v19, type metadata accessor for TrainingLoadViewModel.ChartPoint);
  v26 = (uint64_t)v22;
  sub_24A678D20((uint64_t)v19, (uint64_t)v22);
  v27 = &v22[*(int *)(View + 24)];
  if ((v27[8] & 1) != 0 || (v28 = &v22[*(int *)(View + 32)], (v28[8] & 1) != 0) || *(double *)v28 <= 0.0)
  {
    sub_24A678780((uint64_t)v22);
LABEL_8:
    v45 = 0.0;
    sub_24A77886C();
    sub_24A6971B4();
    sub_24A7785FC();
    sub_24A77862C();
    MEMORY[0x24BD15C04](v6, v8);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
    v32 = *(void (**)(char *, uint64_t))(v39 + 8);
    v32(v10, v8);
    v33 = v42;
    sub_24A778668();
    v34 = v38;
    MEMORY[0x24BD15C1C](v33, v8);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v44);
    v32(v13, v8);
    sub_24A63CFF0(&qword_25794B950, &qword_25794B948, MEMORY[0x24BDCD480]);
    sub_24A77B8E4();
    v32(v34, v8);
    return v46;
  }
  v45 = (*(double *)v27 - *(double *)v28) / *(double *)v28;
  sub_24A77886C();
  sub_24A6971B4();
  sub_24A7785FC();
  sub_24A77862C();
  MEMORY[0x24BD15C04](v6, v8);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
  v29 = *(void (**)(char *, uint64_t))(v39 + 8);
  v29(v10, v8);
  v30 = v42;
  sub_24A778668();
  v31 = v38;
  MEMORY[0x24BD15C1C](v30, v8);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v44);
  v29(v13, v8);
  sub_24A63CFF0(&qword_25794B950, &qword_25794B948, MEMORY[0x24BDCD480]);
  sub_24A77B8E4();
  v29(v31, v8);
  sub_24A678780(v26);
  return v46;
}

uint64_t TrainingLoadViewModel.band(onDay:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t View;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v6 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  v12 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 60));
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = sub_24A64E6B4(a1);
    if ((v14 & 1) != 0)
    {
      sub_24A65FAD0(*(_QWORD *)(v12 + 56) + *(_QWORD *)(v6 + 72) * v13, (uint64_t)v8, type metadata accessor for TrainingLoadViewModel.ChartPoint);
      sub_24A678D20((uint64_t)v8, (uint64_t)v11);
      if ((v11[*(int *)(View + 24) + 8] & 1) == 0 && (v11[*(int *)(View + 32) + 8] & 1) == 0)
      {
        sub_24A779C88();
        sub_24A678780((uint64_t)v11);
        v17 = sub_24A779CAC();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 0, 1, v17);
      }
      sub_24A678780((uint64_t)v11);
    }
  }
  v15 = sub_24A779CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
}

Swift::String __swiftcall TrainingLoadViewModel.loadPercentageToday()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 40));
  if (v1[1])
  {
    v2 = *v1;
    v3 = (void *)v1[1];
  }
  else
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v4 = (id)qword_2544D6158;
    v2 = sub_24A77856C();
    v3 = v5;

  }
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = v3;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t _s9WorkoutUI21TrainingLoadViewModelV16loadBandForToday13HealthBalance0cdH0OSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t ViewModel;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  return sub_24A63CCC0(v1 + *(int *)(ViewModel + 52), a1, &qword_25794B940);
}

Swift::String __swiftcall TrainingLoadViewModel.loadBandTodayLocalizedDescription()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_24A6D8208((uint64_t (*)(char *))TrainingLoadViewModel.localizedDescription(onDay:));
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t TrainingLoadViewModel.localizedDescription(onDay:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  int v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A779D48();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A779DCC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A779D90();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v42 - v17;
  v19 = *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64);
  v43 = v1;
  v20 = *(_QWORD *)(v1 + v19);
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_24A64E6B4(v46), (v22 & 1) != 0))
  {
    v42 = v4;
    v23 = *(_QWORD *)(v20 + 56);
    v24 = v6;
    v25 = v5;
    v26 = (uint64_t)v8;
    v27 = v18;
    v29 = v44;
    v28 = v45;
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v15, v23 + *(_QWORD *)(v44 + 72) * v21, v45);
    v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v31 = v27;
    v30(v27, v15, v28);
    sub_24A779D54();
    sub_24A779DC0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 88))(v26, v25);
    if (v32 == *MEMORY[0x24BE40098])
    {
      (*(void (**)(uint64_t, uint64_t))(v24 + 96))(v26, v25);
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v33 = (id)qword_2544D6158;
      v34 = sub_24A77856C();

      (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v45);
      sub_24A63CD04(v26, &qword_25794B958);
      return v34;
    }
    if (v32 == *MEMORY[0x24BE400B0])
    {
      v37 = (uint64_t)v42;
      TrainingLoadViewModel.band(onDay:)(v46, (uint64_t)v42);
      v38 = sub_24A779CAC();
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) != 1)
      {
        v34 = TrainingLoadBand.localizedDescription.getter();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
        goto LABEL_19;
      }
      sub_24A63CD04(v37, &qword_25794B940);
      if (qword_2544D6160 == -1)
      {
LABEL_17:
        swift_beginAccess();
        v40 = (id)qword_2544D6158;
        v34 = sub_24A77856C();

LABEL_19:
        (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
        return v34;
      }
LABEL_23:
      swift_once();
      goto LABEL_17;
    }
    if (v32 == *MEMORY[0x24BE400A0])
    {
      if (qword_2544D6160 == -1)
        goto LABEL_17;
      goto LABEL_23;
    }
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v41 = (id)qword_2544D6158;
    v34 = sub_24A77856C();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v45);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v35 = (id)qword_2544D6158;
    v34 = sub_24A77856C();

  }
  return v34;
}

Swift::String __swiftcall TrainingLoadViewModel.loadBandTodayLocalizedLongDescriptionInNonActiveState()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_24A6D8208((uint64_t (*)(char *))TrainingLoadViewModel.localizedLongDescriptionInNonActiveState(onDay:));
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_24A6D8208(uint64_t (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_24A77B80C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TrainingLoadViewModel(0);
  sub_24A779CC4();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v8[*(int *)(v6 + 36)], v2);
  sub_24A63CD04((uint64_t)v8, &qword_257947EE0);
  v9 = a1(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t TrainingLoadViewModel.localizedLongDescriptionInNonActiveState(onDay:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = sub_24A779D48();
  v3 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779DCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A779D90();
  v38 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - v14;
  v16 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64));
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_24A64E6B4(a1), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(v16 + 56);
    v20 = v38;
    v21 = v10;
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v12, v19 + *(_QWORD *)(v38 + 72) * v17, v10);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v12, v10);
    sub_24A779D54();
    sub_24A779DC0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v22 = v37;
    v23 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v37);
    if (v23 == *MEMORY[0x24BE40098])
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v22);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B960);
      v25 = *(_QWORD *)&v5[*(int *)(v24 + 48)];
      v26 = *(_QWORD *)&v5[*(int *)(v24 + 64)];
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v27 = (id)qword_2544D6158;
      sub_24A77856C();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_24A780030;
      if (!__OFSUB__(v26, v25))
      {
        v29 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v28 + 64) = v29;
        *(_QWORD *)(v28 + 32) = v26 - v25;
        v30 = sub_24A77B98C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v10);
        sub_24A63CD04((uint64_t)v5, &qword_25794B958);
        return v30;
      }
      __break(1u);
      goto LABEL_21;
    }
    if (v23 == *MEMORY[0x24BE400B0])
    {
      v33 = qword_2544D6160;
      goto LABEL_15;
    }
    v33 = qword_2544D6160;
    if (v23 == *MEMORY[0x24BE400A0])
    {
LABEL_15:
      if (v33 == -1)
      {
LABEL_16:
        swift_beginAccess();
        v34 = (id)qword_2544D6158;
        v30 = sub_24A77856C();

        (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v21);
        return v30;
      }
LABEL_21:
      swift_once();
      goto LABEL_16;
    }
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v35 = (id)qword_2544D6158;
    v30 = sub_24A77856C();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }
  else
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v31 = (id)qword_2544D6158;
    v30 = sub_24A77856C();

  }
  return v30;
}

uint64_t _s9WorkoutUI21TrainingLoadViewModelV21loadBandForTodayColor05SwiftB00K0Vvg_0()
{
  type metadata accessor for TrainingLoadViewModel(0);
  return swift_retain();
}

uint64_t TrainingLoadViewModel.background(onDay:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  v6 = MEMORY[0x24BD189B8](v5);
  TrainingLoadViewModel.band(onDay:)(a1, (uint64_t)v4);
  v7 = sub_24A779CAC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_24A63CD04((uint64_t)v4, &qword_25794B940);
  }
  else
  {
    v9 = TrainingLoadBand.background.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
    swift_release();
    return v9;
  }
  return v6;
}

uint64_t TrainingLoadViewModel.color(onDay:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadViewModel.band(onDay:)(a1, (uint64_t)v4);
  v5 = sub_24A779CAC();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_24A63CD04((uint64_t)v4, &qword_25794B940);
    return sub_24A77B338();
  }
  else
  {
    v7 = TrainingLoadBand.color.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return v7;
}

uint64_t TrainingLoadViewModel.isPending(onDay:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_24A779D48();
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779DCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A779D90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - v15;
  v17 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64));
  if (*(_QWORD *)(v17 + 16))
  {
    v18 = sub_24A64E6B4(a1);
    if ((v19 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v11 + 72) * v18, v10);
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
      sub_24A779D54();
      sub_24A779DC0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v21 = v23;
      v20 = v24;
      if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v5, v24) == *MEMORY[0x24BE40098])
      {
        (*(void (**)(char *, uint64_t))(v21 + 96))(v5, v20);
        sub_24A63CD04((uint64_t)v5, &qword_25794B958);
        return 1;
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
    }
  }
  return 0;
}

uint64_t TrainingLoadViewModel.isNoData(onDay:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_24A779D48();
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779DCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A779D90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - v15;
  v17 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TrainingLoadViewModel(0) + 64));
  if (!*(_QWORD *)(v17 + 16))
    return 1;
  v18 = sub_24A64E6B4(a1);
  if ((v19 & 1) == 0)
    return 1;
  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v11 + 72) * v18, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
  sub_24A779D54();
  sub_24A779DC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v21 = v23;
  v20 = v24;
  if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v5, v24) == *MEMORY[0x24BE400A0])
    return 1;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
  return 0;
}

double TrainingLoadViewModel.loadBandFlavoredGradientBackground(rotated:)@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t ViewModel;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  double result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[6];
  _OWORD v40[2];
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A779CAC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  sub_24A63CCC0(v2 + *(int *)(ViewModel + 52), (uint64_t)v7, &qword_25794B940);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_24A63CD04((uint64_t)v7, &qword_25794B940);
    v13 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    *(_QWORD *)&v41 = MEMORY[0x24BD189B8](v13);
    WORD4(v41) = 256;
    sub_24A6DE874((uint64_t)&v41);
    sub_24A63F6C4((uint64_t)&v41, (uint64_t)v39, &qword_25794B968);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B970);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B978);
    sub_24A6DE880();
    sub_24A63CFF0(&qword_25794B988, &qword_25794B978, MEMORY[0x24BDEB358]);
    sub_24A77AB28();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    TrainingLoadBand.layeredBackground.getter((uint64_t)&v30);
    v14 = v31;
    v28 = v32;
    v29 = v30;
    v15 = v33;
    v16 = v34;
    v17 = v35;
    v27 = v36;
    v18 = v37;
    v19 = v38;
    if ((a1 & 1) != 0)
      v20 = 3.14159265;
    else
      v20 = 0.0;
    sub_24A77B6EC();
    v41 = v29;
    v42 = v14;
    v43 = v28;
    v44 = v15;
    v45 = v16;
    v46 = v17;
    v47 = v27;
    v48 = v18;
    v49 = v19;
    v50 = v20;
    v51 = v21;
    v52 = v22;
    sub_24A6DE904((uint64_t)&v41);
    sub_24A63F6C4((uint64_t)&v41, (uint64_t)&v53, &qword_25794B968);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B970);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B978);
    sub_24A6DE880();
    sub_24A63CFF0(&qword_25794B988, &qword_25794B978, MEMORY[0x24BDEB358]);
    sub_24A77AB28();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v57 = v39[4];
    v58 = v39[5];
    v59[0] = v40[0];
    *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)((char *)v40 + 9);
    v53 = v39[0];
    v54 = v39[1];
    v55 = v39[2];
    v56 = v39[3];
  }
  v23 = v58;
  a2[4] = v57;
  a2[5] = v23;
  a2[6] = v59[0];
  *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v59 + 9);
  v24 = v54;
  *a2 = v53;
  a2[1] = v24;
  result = *(double *)&v55;
  v26 = v56;
  a2[2] = v55;
  a2[3] = v26;
  return result;
}

Swift::String __swiftcall TrainingLoadViewModel.localizedName()()
{
  uint64_t v0;
  uint64_t ViewModel;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  int v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  Swift::String result;
  _QWORD v19[4];

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x24BDAC7A8](ViewModel);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A779D0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v0, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 != *MEMORY[0x24BE3FD28])
  {
    if (v9 == *MEMORY[0x24BE3FD38])
    {
      if (qword_2544D6160 == -1)
        goto LABEL_9;
    }
    else
    {
      if (v9 != *MEMORY[0x24BE3FD40])
      {
LABEL_13:
        sub_24A65FAD0(v0, (uint64_t)v3, type metadata accessor for TrainingLoadViewModel);
        v19[1] = 0;
        v19[2] = 0xE000000000000000;
        sub_24A77BF5C();
        sub_24A77BA4C();
        sub_24A77C004();
        v16 = sub_24A77C01C();
        __break(1u);
        goto LABEL_14;
      }
      if (qword_2544D6160 == -1)
      {
LABEL_9:
        swift_beginAccess();
        v11 = (id)qword_2544D6158;
        v12 = sub_24A77856C();
        goto LABEL_10;
      }
    }
    swift_once();
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
  v10 = (id)FILocalizedNameForIndoorAgnosticActivityType();
  if (!v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = v10;
  v12 = sub_24A77B9B0();
LABEL_10:
  v14 = v12;
  v15 = v13;

  v16 = v14;
  v17 = v15;
LABEL_14:
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

id TrainingLoadViewModel.displayImage()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  id result;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String View;
  uint64_t v37;

  v3 = sub_24A779D0C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B990);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B998);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B9A0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadViewModel.symbolName.getter();
  if (v16)
  {
    v37 = sub_24A77B3EC();
    View = TrainingLoadViewModel.localizedName()();
    sub_24A645928();
    v17 = sub_24A77AFD8();
    v34 = v7;
    v35 = a1;
    v19 = v18;
    v21 = v20 & 1;
    sub_24A77B110();
    sub_24A64596C(v17, v19, v21);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24A63CCC0((uint64_t)v15, (uint64_t)v9, &qword_25794B9A0);
    swift_storeEnumTagMultiPayload();
    sub_24A6DE90C();
    sub_24A77AB28();
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
    if ((*(unsigned int (**)(_QWORD *, uint64_t))(v4 + 88))(v6, v3) != *MEMORY[0x24BE3FD28])
    {
      (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B9A8);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 1, 1, v30);
    }
    v34 = v7;
    v35 = a1;
    (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v6, v3);
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37950]), sel_initWithActivityTypeIdentifier_isIndoor_, *v6, 0);
    result = (id)FIUIStaticScalableWorkoutIconImageWithPadding();
    if (!result)
    {
      __break(1u);
      return result;
    }
    v23 = result;
    v24 = objc_msgSend(result, sel_imageWithRenderingMode_, 2);

    v32 = v24;
    v37 = sub_24A77B3BC();
    View = TrainingLoadViewModel.localizedName()();
    sub_24A645928();
    v25 = sub_24A77AFD8();
    v27 = v26;
    LOBYTE(v23) = v28 & 1;
    sub_24A77B110();
    sub_24A64596C(v25, v27, (char)v23);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24A63CCC0((uint64_t)v15, (uint64_t)v9, &qword_25794B9A0);
    swift_storeEnumTagMultiPayload();
    sub_24A6DE90C();
    sub_24A77AB28();

  }
  sub_24A63CD04((uint64_t)v15, &qword_25794B9A0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B9A8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
  return (id)sub_24A63F6C4((uint64_t)v12, v35, &qword_25794B998);
}

uint64_t TrainingLoadViewModel.symbolName.getter()
{
  uint64_t v0;
  uint64_t ViewModel;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD v14[2];

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x24BDAC7A8](ViewModel);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A779D0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (_QWORD *)((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t, double))(v5 + 16))(v8, v0, v4, v6);
  v9 = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 != *MEMORY[0x24BE3FD28])
  {
    if (v9 == *MEMORY[0x24BE3FD38])
      return 0x2E78616D2E6E7573;
    if (v9 == *MEMORY[0x24BE3FD40])
      return 0;
    sub_24A65FAD0(v0, (uint64_t)v3, type metadata accessor for TrainingLoadViewModel);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_24A77BF5C();
    sub_24A77BA4C();
    sub_24A77C004();
    sub_24A77C01C();
    __break(1u);
LABEL_8:

    return 0;
  }
  (*(void (**)(_QWORD *, uint64_t))(v5 + 96))(v8, v4);
  v3 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37950]), sel_initWithActivityTypeIdentifier_isIndoor_, *v8, 0);
  v10 = objc_msgSend(v3, sel_symbolName);
  if (!v10)
    goto LABEL_8;
  v11 = v10;
  v12 = sub_24A77B9B0();

  return v12;
}

uint64_t TrainingLoadViewModel.hasDisplayImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_24A779D0C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadViewModel.symbolName.getter();
  v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
    return 1;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x24BE3FD28])
    return 1;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return 0;
}

uint64_t TrainingLoadViewModel.hash(into:)()
{
  uint64_t v0;
  uint64_t ViewModel;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_24A779D0C();
  sub_24A63C880(&qword_25794B9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FD48], MEMORY[0x24BE3FD58]);
  sub_24A77B914();
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  sub_24A779CF4();
  sub_24A63C880(&qword_25794B9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FCF0], MEMORY[0x24BE3FD08]);
  sub_24A77B914();
  v2 = *(_QWORD *)(v0 + *(int *)(ViewModel + 24));
  v3 = *(_QWORD *)(v2 + 16);
  result = sub_24A77C238();
  if (v3)
  {
    v5 = *(_QWORD *)(sub_24A779D90() - 8);
    v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    sub_24A63C880(&qword_25794B9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE400E8], MEMORY[0x24BE40100]);
    swift_bridgeObjectRetain();
    do
    {
      sub_24A77B914();
      v6 += v7;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24A6D9D88(uint64_t a1, uint64_t a2)
{
  uint64_t View;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  char v45;
  uint64_t v46;
  double *v47;
  char v48;
  double *v49;
  int v50;
  uint64_t v51;
  double *v52;
  char v53;
  double *v54;
  int v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v65 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v56 - v8;
  v10 = sub_24A77B80C();
  v66 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v63 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAF8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.n128_f64[0] = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v56 - v17;
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v61 = a2;
  v62 = 0;
  v59 = a1;
  v60 = v14;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v57 = v20;
  v58 = (unint64_t)(v22 + 63) >> 6;
  v56 = v58 - 1;
  while (1)
  {
    if (v24)
    {
      v64 = (v24 - 1) & v24;
      v25 = __clz(__rbit64(v24)) | (v62 << 6);
LABEL_10:
      v26 = v59;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v66 + 16))(v14, *(_QWORD *)(v59 + 48) + *(_QWORD *)(v66 + 72) * v25, v10, v16);
      v27 = *(_QWORD *)(v26 + 56) + *(_QWORD *)(v65 + 72) * v25;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB00);
      sub_24A65FAD0(v27, (uint64_t)&v14[*(int *)(v28 + 48)], type metadata accessor for TrainingLoadViewModel.ChartPoint);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 0, 1, v28);
      goto LABEL_32;
    }
    v29 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v29 < v58)
    {
      v30 = *(_QWORD *)(v57 + 8 * v29);
      if (v30)
        goto LABEL_14;
      v31 = v62 + 2;
      ++v62;
      if (v29 + 1 < v58)
      {
        v30 = *(_QWORD *)(v57 + 8 * v31);
        if (v30)
          goto LABEL_17;
        v62 = v29 + 1;
        if (v29 + 2 < v58)
        {
          v30 = *(_QWORD *)(v57 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_14;
          }
          v62 = v29 + 2;
          if (v29 + 3 < v58)
          {
            v30 = *(_QWORD *)(v57 + 8 * (v29 + 3));
            if (v30)
            {
              v29 += 3;
              goto LABEL_14;
            }
            v31 = v29 + 4;
            v62 = v29 + 3;
            if (v29 + 4 < v58)
              break;
          }
        }
      }
    }
LABEL_31:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB00);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v14, 1, 1, v32);
    v64 = 0;
LABEL_32:
    sub_24A63F6C4((uint64_t)v14, (uint64_t)v18, &qword_25794BAF8);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB00);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v18, 1, v33) == 1)
      return;
    v34 = (uint64_t)v6;
    v35 = View;
    v36 = (uint64_t)&v18[*(int *)(v33 + 48)];
    v37 = v10;
    v38 = v66;
    v39 = (uint64_t)v63;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v18, v37);
    sub_24A678D20(v36, (uint64_t)v9);
    v40 = v61;
    v41 = sub_24A64E6B4(v39);
    v43 = v42;
    v44 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v10 = v37;
    v44(v39, v37);
    if ((v43 & 1) == 0)
      goto LABEL_48;
    v6 = (char *)v34;
    sub_24A65FAD0(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v65 + 72) * v41, v34, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    v45 = sub_24A7787DC();
    View = v35;
    v14 = v60;
    if ((v45 & 1) == 0)
      goto LABEL_47;
    sub_24A63C880(&qword_25794BB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    sub_24A77BE24();
    if (v67)
      goto LABEL_47;
    v46 = *(int *)(View + 24);
    v47 = (double *)(v34 + v46);
    v48 = *(_BYTE *)(v34 + v46 + 8);
    v49 = (double *)&v9[v46];
    v50 = v9[v46 + 8];
    if ((v48 & 1) != 0)
    {
      if (!v50)
        goto LABEL_47;
    }
    else
    {
      if (*v47 != *v49)
        LOBYTE(v50) = 1;
      if ((v50 & 1) != 0)
      {
LABEL_47:
        sub_24A678780(v34);
LABEL_48:
        sub_24A678780((uint64_t)v9);
        return;
      }
    }
    if ((sub_24A77B32C() & 1) == 0)
      goto LABEL_47;
    v51 = *(int *)(View + 32);
    v52 = (double *)(v34 + v51);
    v53 = *(_BYTE *)(v34 + v51 + 8);
    v54 = (double *)&v9[v51];
    v55 = v9[v51 + 8];
    if ((v53 & 1) != 0)
    {
      if (!v55)
        goto LABEL_47;
    }
    else
    {
      if (*v52 != *v54)
        LOBYTE(v55) = 1;
      if ((v55 & 1) != 0)
        goto LABEL_47;
    }
    sub_24A678780(v34);
    sub_24A678780((uint64_t)v9);
    v24 = v64;
  }
  v30 = *(_QWORD *)(v57 + 8 * v31);
  if (v30)
  {
LABEL_17:
    v29 = v31;
LABEL_14:
    v64 = (v30 - 1) & v30;
    v25 = __clz(__rbit64(v30)) + (v29 << 6);
    v62 = v29;
    goto LABEL_10;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v58)
    {
      v62 = v56;
      goto LABEL_31;
    }
    v30 = *(_QWORD *)(v57 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_14;
  }
LABEL_52:
  __break(1u);
}

void sub_24A6DA2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  char *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int64_t v61;
  _BOOL4 v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = sub_24A779D90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v52 - v8;
  v10 = sub_24A77B80C();
  v64 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAE8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.n128_f64[0] = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v52 - v17;
  if (a1 == a2)
  {
    v62 = 1;
    return;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v62 = 0;
    return;
  }
  v57 = v14;
  v58 = a2;
  v61 = 0;
  v56 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v54 = v20;
  v55 = (unint64_t)(v22 + 63) >> 6;
  v53 = v55 - 1;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v26 = (v24 - 1) & v24;
      v27 = v25 | (v61 << 6);
LABEL_8:
      v28 = v56;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v64 + 16))(v14, *(_QWORD *)(v56 + 48) + *(_QWORD *)(v64 + 72) * v27, v65, v16);
      v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v5 + 72) * v27;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAF0);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(&v14[*(int *)(v30 + 48)], v29, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v14, 0, 1, v30);
      goto LABEL_30;
    }
    v31 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v31 < v55)
    {
      v32 = *(_QWORD *)(v54 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v61 + 2;
      ++v61;
      if (v31 + 1 < v55)
      {
        v32 = *(_QWORD *)(v54 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v61 = v31 + 1;
        if (v31 + 2 < v55)
        {
          v32 = *(_QWORD *)(v54 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v61 = v31 + 2;
          if (v31 + 3 < v55)
          {
            v32 = *(_QWORD *)(v54 + 8 * (v31 + 3));
            if (v32)
            {
              v31 += 3;
              goto LABEL_12;
            }
            v33 = v31 + 4;
            v61 = v31 + 3;
            if (v31 + 4 < v55)
              break;
          }
        }
      }
    }
LABEL_29:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v14, 1, 1, v34);
    v26 = 0;
LABEL_30:
    sub_24A63F6C4((uint64_t)v14, (uint64_t)v18, &qword_25794BAE8);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAF0);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v18, 1, v35);
    v62 = v36 == 1;
    if (v36 == 1)
      return;
    v63 = v26;
    v37 = &v18[*(int *)(v35 + 48)];
    v39 = v64;
    v38 = v65;
    v40 = v5;
    v41 = (uint64_t)v60;
    v42 = v18;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v18, v65);
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v9, v37, v4);
    v43 = v58;
    v44 = v9;
    v45 = sub_24A64E6B4(v41);
    v47 = v46;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
    if ((v47 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v4);
      goto LABEL_36;
    }
    v48 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v40 + 72) * v45;
    v49 = v59;
    (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v59, v48, v4);
    sub_24A63C880(&qword_25794BAE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE400E8], MEMORY[0x24BE40108]);
    v50 = sub_24A77B974();
    v51 = *(void (**)(char *, uint64_t))(v40 + 8);
    v51(v49, v4);
    v51(v44, v4);
    v9 = v44;
    v5 = v40;
    v14 = v57;
    v18 = v42;
    v24 = v63;
    if ((v50 & 1) == 0)
      return;
  }
  v32 = *(_QWORD *)(v54 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v26 = (v32 - 1) & v32;
    v27 = __clz(__rbit64(v32)) + (v31 << 6);
    v61 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v55)
    {
      v61 = v53;
      goto LABEL_29;
    }
    v32 = *(_QWORD *)(v54 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
}

uint64_t TrainingLoadViewModel.hashValue.getter()
{
  uint64_t v0;
  uint64_t ViewModel;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_24A77C22C();
  sub_24A779D0C();
  sub_24A63C880(&qword_25794B9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FD48], MEMORY[0x24BE3FD58]);
  sub_24A77B914();
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  sub_24A779CF4();
  sub_24A63C880(&qword_25794B9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FCF0], MEMORY[0x24BE3FD08]);
  sub_24A77B914();
  v2 = *(_QWORD *)(v0 + *(int *)(ViewModel + 24));
  v3 = *(_QWORD *)(v2 + 16);
  sub_24A77C238();
  if (v3)
  {
    v4 = *(_QWORD *)(sub_24A779D90() - 8);
    v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    sub_24A63C880(&qword_25794B9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE400E8], MEMORY[0x24BE40100]);
    swift_bridgeObjectRetain();
    do
    {
      sub_24A77B914();
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return sub_24A77C25C();
}

uint64_t sub_24A6DA904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_24A77C22C();
  sub_24A779D0C();
  sub_24A63C880(&qword_25794B9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FD48], MEMORY[0x24BE3FD58]);
  sub_24A77B914();
  sub_24A779CF4();
  sub_24A63C880(&qword_25794B9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FCF0], MEMORY[0x24BE3FD08]);
  sub_24A77B914();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  v5 = *(_QWORD *)(v4 + 16);
  sub_24A77C238();
  if (v5)
  {
    v6 = *(_QWORD *)(sub_24A779D90() - 8);
    v7 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    sub_24A63C880(&qword_25794B9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE400E8], MEMORY[0x24BE40100]);
    swift_bridgeObjectRetain();
    do
    {
      sub_24A77B914();
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return sub_24A77C25C();
}

void *sub_24A6DAA50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947188);
  v2 = *v0;
  v3 = sub_24A77C034();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A6DAC1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474D0);
  v2 = *v0;
  v3 = sub_24A77C034();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_24A64E7B0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_24A64E7EC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24A6DAE00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947428);
  v2 = *v0;
  v3 = sub_24A77C034();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24A6DAFA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947418);
  v2 = *v0;
  v3 = sub_24A77C034();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_24A64E7B0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_24A64E7EC(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A6DB168()
{
  uint64_t *v0;
  uint64_t View;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v27 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A77B80C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB18);
  v24 = v0;
  v8 = *v0;
  v9 = sub_24A77C034();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v24 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v25 = v8 + 64;
  v26 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v19, v4);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_24A65FAD0(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v3, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v19, v7, v4);
    result = (void *)sub_24A678D20((uint64_t)v3, *(_QWORD *)(v10 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_24A6DB3E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_24A779D90();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_24A77B80C();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB10);
  v33 = v0;
  v3 = *v0;
  v4 = sub_24A77C034();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_24A6DB6C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_24A778854();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474A8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_24A77C034();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24A6DB8F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947488);
  v2 = *v0;
  v3 = sub_24A77C034();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v18;
    result = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A6DBA94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_24A778854();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAC0);
  v23 = v0;
  v5 = *v0;
  v6 = sub_24A77C034();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A6DBCB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAB0);
  v2 = *v0;
  v3 = sub_24A77C034();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24A6DBE64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947480);
  v2 = *v0;
  v3 = sub_24A77C034();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A6DC014(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947188);
  v6 = a2;
  v7 = sub_24A77C040();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24A77C22C();
      sub_24A77BA1C();
      result = sub_24A77C25C();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_24A6DC328(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474D0);
  v6 = sub_24A77C040();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_24A64E7EC(v24, v35);
      }
      else
      {
        sub_24A64E7B0((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_24A77C22C();
      sub_24A77BA1C();
      result = sub_24A77C25C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_24A64E7EC(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24A6DC624(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  __int128 v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947428);
  v6 = sub_24A77C040();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v31 = v2;
  v32 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v32 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_33;
      v23 = *(_QWORD *)(v32 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v31;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v32 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v23 = *(_QWORD *)(v32 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
    v33 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
    if ((a2 & 1) == 0)
      swift_retain();
    sub_24A77C22C();
    sub_24A77ADB0();
    result = sub_24A77C25C();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v31;
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v30 = 1 << *(_BYTE *)(v5 + 32);
  if (v30 >= 64)
    bzero(v22, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v30;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24A6DC90C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947418);
  v35 = a2;
  v6 = sub_24A77C040();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_24A64E7EC(v22, v36);
    }
    else
    {
      sub_24A64E7B0((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_24A77B9B0();
    sub_24A77C22C();
    sub_24A77BA1C();
    v24 = sub_24A77C25C();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_24A64E7EC(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24A6DCC44(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t View;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v3 = v2;
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v47 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A77B80C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB18);
  v48 = a2;
  v12 = v11;
  v13 = sub_24A77C040();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v45 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = v2;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v44)
              goto LABEL_34;
            v27 = v45[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v12 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_24A678D20(v31 + v32 * v24, v49);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_24A65FAD0(v33 + v32 * v24, v49, type metadata accessor for TrainingLoadViewModel.ChartPoint);
    }
    sub_24A63C880(&qword_2579474B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
    result = sub_24A77B908();
    v34 = -1 << *(_BYTE *)(v14 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v10, v7);
    result = sub_24A678D20(v49, *(_QWORD *)(v14 + 56) + v32 * v22);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v12 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v14;
  return result;
}

uint64_t sub_24A6DD040(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_24A779D90();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_24A77B80C();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB10);
  v11 = sub_24A77C040();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_24A63C880(&qword_2579474B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
    result = sub_24A77B908();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_24A6DD438(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_24A778854();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474A8);
  v42 = a2;
  v10 = sub_24A77C040();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_24A63C880(&qword_257947490, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_24A77B908();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_24A6DD7CC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947488);
  v6 = sub_24A77C040();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v32;
      v34 = v31;
    }
    result = sub_24A77BDB8();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24A6DDA9C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v40 = sub_24A778854();
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAC0);
  result = sub_24A77C040();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v37 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    v36 = a2;
    v17 = 16;
    if ((a2 & 1) != 0)
      v17 = 32;
    v39 = v17;
    while (1)
    {
      if (v15)
      {
        v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v20 = v19 | (v11 << 6);
      }
      else
      {
        v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v21 >= v37)
          goto LABEL_33;
        v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          v11 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_33;
          v22 = v38[v11];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_40;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v38, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v11 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v11 >= v37)
                  goto LABEL_33;
                v22 = v38[v11];
                ++v23;
                if (v22)
                  goto LABEL_23;
              }
            }
            v11 = v23;
          }
        }
LABEL_23:
        v15 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      v24 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v20);
      v25 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + v39))(v7, *(_QWORD *)(v8 + 56) + v25 * v20, v40);
      sub_24A77C22C();
      sub_24A77C238();
      result = sub_24A77C25C();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v18 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v10 + 48) + v18) = v24;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v25 * v18, v7, v40);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v10;
  return result;
}

uint64_t sub_24A6DDDD8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAB8);
  result = sub_24A77C040();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v32[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v32[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_24A77C22C();
      sub_24A77C238();
      result = sub_24A77C25C();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_24A6DE0B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAB0);
  v36 = a2;
  v6 = sub_24A77C040();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24A77C22C();
    sub_24A77BA1C();
    result = sub_24A77C25C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24A6DE3C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947480);
  v38 = a2;
  v6 = sub_24A77C040();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_24A77C22C();
    sub_24A77BA1C();
    result = sub_24A77C25C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

BOOL _s9WorkoutUI21TrainingLoadViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t View;
  uint64_t v6;
  double *v7;
  char v8;
  double *v9;
  int v10;
  uint64_t v11;
  double *v12;
  char v13;
  double *v14;
  char v15;
  uint64_t v16;

  if ((sub_24A7787DC() & 1) == 0)
    return 0;
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  sub_24A77B80C();
  sub_24A63C880(&qword_25794BB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_24A77BE24();
  if (v16)
    return 0;
  v6 = *(int *)(View + 24);
  v7 = (double *)(a1 + v6);
  v8 = *(_BYTE *)(a1 + v6 + 8);
  v9 = (double *)(a2 + v6);
  v10 = *(unsigned __int8 *)(a2 + v6 + 8);
  if ((v8 & 1) != 0)
  {
    if (!v10)
      return 0;
  }
  else
  {
    if (*v7 != *v9)
      LOBYTE(v10) = 1;
    if ((v10 & 1) != 0)
      return 0;
  }
  if ((sub_24A77B32C() & 1) == 0)
    return 0;
  v11 = *(int *)(View + 32);
  v12 = (double *)(a1 + v11);
  v13 = *(_BYTE *)(a1 + v11 + 8);
  v14 = (double *)(a2 + v11);
  v15 = *(_BYTE *)(a2 + v11 + 8);
  if ((v13 & 1) != 0)
    return (v15 & 1) != 0;
  if (*v12 != *v14)
    v15 = 1;
  return (v15 & 1) == 0;
}

uint64_t type metadata accessor for TrainingLoadViewModel(uint64_t a1)
{
  return sub_24A6AF174(a1, (uint64_t *)&unk_2544D6268);
}

uint64_t sub_24A6DE808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A6D6B44(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_24A6DE830(uint64_t a1, uint64_t a2)
{
  uint64_t View;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 40))(a2, a1, View);
  return a2;
}

uint64_t sub_24A6DE874(uint64_t result)
{
  *(_BYTE *)(result + 120) = 1;
  return result;
}

unint64_t sub_24A6DE880()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794B980;
  if (!qword_25794B980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B970);
    v2[0] = sub_24A63CFF0((unint64_t *)&qword_25794B688, &qword_25794B690, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDED5D8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794B980);
  }
  return result;
}

uint64_t sub_24A6DE904(uint64_t result)
{
  *(_BYTE *)(result + 120) = 0;
  return result;
}

unint64_t sub_24A6DE90C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794B9B0;
  if (!qword_25794B9B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B9A0);
    v2 = sub_24A63C880((unint64_t *)&qword_257947700, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794B9B0);
  }
  return result;
}

uint64_t _s9WorkoutUI21TrainingLoadViewModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t View;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  int *ViewModel;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t *v52;
  uint64_t v53;
  _BYTE *v54;
  void (*v55)(_BYTE *, uint64_t);
  int *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  _BYTE *v63;
  char v64;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  char v69;
  void (*v70)(_BYTE *, uint64_t);
  _BYTE *v71;
  uint64_t v72;
  double *v73;
  char v74;
  uint64_t v75;
  double *v76;
  int v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  char v86;
  _BYTE *v87;
  uint64_t v88;
  _BYTE *v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  _BYTE *v92;
  BOOL ViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0;
  _BYTE *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(uint64_t, uint64_t, uint64_t);
  _BYTE *v99;
  uint64_t v100;
  _BYTE *v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(_BYTE *, uint64_t);
  uint64_t v106;
  char v107;
  _BYTE v108[12];
  int v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  _BYTE *v125;
  _BYTE *v126;
  _BYTE *v127;
  _BYTE *v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v121 = *(_QWORD *)(View - 8);
  MEMORY[0x24BDAC7A8](View);
  v116 = &v108[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAC8);
  MEMORY[0x24BDAC7A8](v120);
  v122 = &v108[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
  MEMORY[0x24BDAC7A8](v7);
  v124 = &v108[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v125 = &v108[-v10];
  MEMORY[0x24BDAC7A8](v11);
  v126 = &v108[-v12];
  v131 = sub_24A779D90();
  v129 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v123 = &v108[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAD0);
  MEMORY[0x24BDAC7A8](v14);
  v130 = &v108[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
  MEMORY[0x24BDAC7A8](v16);
  v127 = &v108[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v108[-v19];
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v108[-v22];
  v24 = sub_24A779CAC();
  v25 = *(_QWORD *)(v24 - 8);
  v133 = v24;
  v134 = v25;
  MEMORY[0x24BDAC7A8](v24);
  v128 = &v108[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BAD8);
  MEMORY[0x24BDAC7A8](v132);
  v118 = &v108[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v28);
  v30 = &v108[-v29];
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
  MEMORY[0x24BDAC7A8](v31);
  v115 = &v108[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v33);
  v119 = &v108[-v34];
  MEMORY[0x24BDAC7A8](v35);
  v117 = &v108[-v36];
  MEMORY[0x24BDAC7A8](v37);
  v39 = &v108[-v38];
  MEMORY[0x24BDAC7A8](v40);
  v42 = &v108[-v41];
  MEMORY[0x24BDAC7A8](v43);
  v45 = &v108[-v44];
  if ((sub_24A779D00() & 1) == 0)
    goto LABEL_18;
  v114 = View;
  ViewModel = (int *)type metadata accessor for TrainingLoadViewModel(0);
  if ((MEMORY[0x24BD172FC](a1 + ViewModel[5], a2 + ViewModel[5]) & 1) == 0
    || (sub_24A766208(*(_QWORD *)(a1 + ViewModel[6]), *(_QWORD *)(a2 + ViewModel[6])) & 1) == 0)
  {
    goto LABEL_18;
  }
  v47 = ViewModel[7];
  v111 = a1;
  sub_24A63CCC0(a1 + v47, (uint64_t)v45, &qword_25794B940);
  v112 = ViewModel;
  v48 = ViewModel[7];
  v113 = a2;
  sub_24A63CCC0(a2 + v48, (uint64_t)v42, &qword_25794B940);
  v49 = (uint64_t)&v30[*(int *)(v132 + 48)];
  sub_24A63CCC0((uint64_t)v45, (uint64_t)v30, &qword_25794B940);
  sub_24A63CCC0((uint64_t)v42, v49, &qword_25794B940);
  v50 = v133;
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
  if (v51((uint64_t)v30, 1, v133) == 1)
  {
    sub_24A63CD04((uint64_t)v42, &qword_25794B940);
    sub_24A63CD04((uint64_t)v45, &qword_25794B940);
    if (v51(v49, 1, v50) == 1)
    {
      v110 = v51;
      sub_24A63CD04((uint64_t)v30, &qword_25794B940);
      goto LABEL_11;
    }
LABEL_9:
    v52 = &qword_25794BAD8;
    v53 = (uint64_t)v30;
LABEL_17:
    sub_24A63CD04(v53, v52);
    goto LABEL_18;
  }
  sub_24A63CCC0((uint64_t)v30, (uint64_t)v39, &qword_25794B940);
  if (v51(v49, 1, v50) == 1)
  {
    sub_24A63CD04((uint64_t)v42, &qword_25794B940);
    sub_24A63CD04((uint64_t)v45, &qword_25794B940);
    (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v39, v50);
    goto LABEL_9;
  }
  v110 = v51;
  v54 = v128;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v134 + 32))(v128, v49, v50);
  sub_24A63C880(&qword_257949BE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FC90], MEMORY[0x24BE3FCA0]);
  v109 = sub_24A77B974();
  v55 = *(void (**)(_BYTE *, uint64_t))(v134 + 8);
  v55(v54, v50);
  sub_24A63CD04((uint64_t)v42, &qword_25794B940);
  sub_24A63CD04((uint64_t)v45, &qword_25794B940);
  v55(v39, v133);
  sub_24A63CD04((uint64_t)v30, &qword_25794B940);
  if ((v109 & 1) == 0)
    goto LABEL_18;
LABEL_11:
  v56 = v112;
  v57 = v111;
  sub_24A63CCC0(v111 + v112[8], (uint64_t)v23, &qword_2544D6260);
  sub_24A63CCC0(v113 + v56[8], (uint64_t)v20, &qword_2544D6260);
  v58 = v130;
  v59 = (uint64_t)&v130[*(int *)(v14 + 48)];
  sub_24A63CCC0((uint64_t)v23, (uint64_t)v130, &qword_2544D6260);
  sub_24A63CCC0((uint64_t)v20, v59, &qword_2544D6260);
  v60 = v129;
  v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
  v62 = v131;
  if (v61((uint64_t)v58, 1, v131) == 1)
  {
    sub_24A63CD04((uint64_t)v20, &qword_2544D6260);
    sub_24A63CD04((uint64_t)v23, &qword_2544D6260);
    if (v61(v59, 1, v62) == 1)
    {
      sub_24A63CD04((uint64_t)v58, &qword_2544D6260);
      goto LABEL_21;
    }
LABEL_16:
    v52 = &qword_25794BAD0;
    v53 = (uint64_t)v58;
    goto LABEL_17;
  }
  v63 = v127;
  sub_24A63CCC0((uint64_t)v58, (uint64_t)v127, &qword_2544D6260);
  if (v61(v59, 1, v62) == 1)
  {
    sub_24A63CD04((uint64_t)v20, &qword_2544D6260);
    sub_24A63CD04((uint64_t)v23, &qword_2544D6260);
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v63, v62);
    goto LABEL_16;
  }
  v66 = v57;
  v67 = v63;
  v68 = v123;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v123, v59, v62);
  sub_24A63C880(&qword_25794BAE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE400E8], MEMORY[0x24BE40108]);
  v69 = sub_24A77B974();
  v70 = *(void (**)(_BYTE *, uint64_t))(v60 + 8);
  v70(v68, v62);
  sub_24A63CD04((uint64_t)v20, &qword_2544D6260);
  sub_24A63CD04((uint64_t)v23, &qword_2544D6260);
  v71 = v67;
  v57 = v66;
  v56 = v112;
  v70(v71, v62);
  sub_24A63CD04((uint64_t)v58, &qword_2544D6260);
  if ((v69 & 1) == 0)
    goto LABEL_18;
LABEL_21:
  v72 = v56[9];
  v73 = (double *)(v57 + v72);
  v74 = *(_BYTE *)(v57 + v72 + 8);
  v75 = v113;
  v76 = (double *)(v113 + v72);
  v77 = *(unsigned __int8 *)(v113 + v72 + 8);
  if ((v74 & 1) != 0)
  {
    v78 = (uint64_t)v124;
    v79 = v125;
    v80 = v126;
    if (!v77)
      goto LABEL_18;
  }
  else
  {
    if (*v73 != *v76)
      LOBYTE(v77) = 1;
    v78 = (uint64_t)v124;
    v79 = v125;
    v80 = v126;
    if ((v77 & 1) != 0)
      goto LABEL_18;
  }
  v81 = v56[10];
  v82 = (_QWORD *)(v57 + v81);
  v83 = *(_QWORD *)(v57 + v81 + 8);
  v84 = (_QWORD *)(v113 + v81);
  v85 = v84[1];
  if (!v83)
  {
    if (v85)
      goto LABEL_18;
    goto LABEL_34;
  }
  if (!v85)
    goto LABEL_18;
  if (*v82 == *v84 && v83 == v85 || (v86 = sub_24A77C184(), v64 = 0, (v86 & 1) != 0))
  {
LABEL_34:
    if ((sub_24A766224(*(_QWORD *)(v57 + v56[11]), *(_QWORD *)(v75 + v56[11])) & 1) == 0)
      goto LABEL_18;
    sub_24A63CCC0(v57 + v56[12], (uint64_t)v80, &qword_257947ED0);
    sub_24A63CCC0(v75 + v56[12], (uint64_t)v79, &qword_257947ED0);
    v87 = v122;
    v88 = (uint64_t)&v122[*(int *)(v120 + 48)];
    sub_24A63CCC0((uint64_t)v80, (uint64_t)v122, &qword_257947ED0);
    v89 = v87;
    sub_24A63CCC0((uint64_t)v79, v88, &qword_257947ED0);
    v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
    v91 = v114;
    if (v90((uint64_t)v89, 1, v114) == 1)
    {
      sub_24A63CD04((uint64_t)v79, &qword_257947ED0);
      v89 = v122;
      sub_24A63CD04((uint64_t)v80, &qword_257947ED0);
      if (v90(v88, 1, v91) == 1)
      {
        sub_24A63CD04((uint64_t)v89, &qword_257947ED0);
LABEL_42:
        v94 = v117;
        sub_24A63CCC0(v57 + v56[13], (uint64_t)v117, &qword_25794B940);
        v95 = v119;
        sub_24A63CCC0(v113 + v56[13], (uint64_t)v119, &qword_25794B940);
        v30 = v118;
        v96 = (uint64_t)&v118[*(int *)(v132 + 48)];
        sub_24A63CCC0((uint64_t)v94, (uint64_t)v118, &qword_25794B940);
        sub_24A63CCC0((uint64_t)v95, v96, &qword_25794B940);
        v97 = v133;
        v98 = v110;
        if (v110((uint64_t)v30, 1, v133) == 1)
        {
          sub_24A63CD04((uint64_t)v95, &qword_25794B940);
          sub_24A63CD04((uint64_t)v94, &qword_25794B940);
          if (v98(v96, 1, v97) == 1)
          {
            sub_24A63CD04((uint64_t)v30, &qword_25794B940);
LABEL_48:
            v106 = v113;
            if ((sub_24A77B32C() & 1) != 0)
            {
              sub_24A6D9D88(*(_QWORD *)(v57 + v56[15]), *(_QWORD *)(v106 + v56[15]));
              if ((v107 & 1) != 0)
              {
                sub_24A6DA2D4(*(_QWORD *)(v57 + v56[16]), *(_QWORD *)(v106 + v56[16]));
                return v64 & 1;
              }
            }
            goto LABEL_18;
          }
          goto LABEL_9;
        }
        v99 = v115;
        sub_24A63CCC0((uint64_t)v30, (uint64_t)v115, &qword_25794B940);
        if (v98(v96, 1, v97) == 1)
        {
          sub_24A63CD04((uint64_t)v95, &qword_25794B940);
          sub_24A63CD04((uint64_t)v94, &qword_25794B940);
          (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v99, v97);
          goto LABEL_9;
        }
        v100 = v134;
        v101 = v128;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v134 + 32))(v128, v96, v97);
        sub_24A63C880(&qword_257949BE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FC90], MEMORY[0x24BE3FCA0]);
        v102 = sub_24A77B974();
        v103 = (uint64_t)v94;
        v104 = (uint64_t)v30;
        v105 = *(void (**)(_BYTE *, uint64_t))(v100 + 8);
        v105(v101, v97);
        sub_24A63CD04((uint64_t)v119, &qword_25794B940);
        sub_24A63CD04(v103, &qword_25794B940);
        v105(v99, v97);
        sub_24A63CD04(v104, &qword_25794B940);
        if ((v102 & 1) != 0)
          goto LABEL_48;
LABEL_18:
        v64 = 0;
        return v64 & 1;
      }
    }
    else
    {
      sub_24A63CCC0((uint64_t)v89, v78, &qword_257947ED0);
      if (v90(v88, 1, v91) != 1)
      {
        v92 = v116;
        sub_24A678D20(v88, (uint64_t)v116);
        ViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0 = _s9WorkoutUI21TrainingLoadViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0(v78, (uint64_t)v92);
        sub_24A678780((uint64_t)v92);
        sub_24A63CD04((uint64_t)v125, &qword_257947ED0);
        sub_24A63CD04((uint64_t)v126, &qword_257947ED0);
        sub_24A678780(v78);
        sub_24A63CD04((uint64_t)v89, &qword_257947ED0);
        if (!ViewModelV10ChartPointV2eeoiySbAE_AEtFZ_0)
          goto LABEL_18;
        goto LABEL_42;
      }
      sub_24A63CD04((uint64_t)v125, &qword_257947ED0);
      sub_24A63CD04((uint64_t)v126, &qword_257947ED0);
      sub_24A678780(v78);
    }
    v52 = &qword_25794BAC8;
    v53 = (uint64_t)v89;
    goto LABEL_17;
  }
  return v64 & 1;
}

uint64_t sub_24A6DF614()
{
  return sub_24A63C880(&qword_25794B9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
}

uint64_t sub_24A6DF640()
{
  return sub_24A63C880(&qword_25794B9D8, type metadata accessor for TrainingLoadViewModel, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadViewModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *View;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, _QWORD, uint64_t, int *);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A779D0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24A779CF4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_24A779CAC();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    v58 = v17;
    v59 = v16;
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_24A779D90();
    v24 = *(_QWORD *)(v23 - 8);
    v60 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = a3[9];
    v27 = a3[10];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v30 = (uint64_t *)((char *)a1 + v27);
    v31 = (uint64_t *)((char *)a2 + v27);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    v37 = *((_QWORD *)View - 1);
    v38 = *(unsigned int (**)(char *, uint64_t, int *))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38(v35, 1, View))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v40 = sub_24A778818();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v34, v35, v40);
      v41 = View[5];
      v42 = &v34[v41];
      v43 = &v35[v41];
      v44 = sub_24A77B80C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
      v45 = View[6];
      v46 = &v34[v45];
      v47 = &v35[v45];
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v47[8];
      *(_QWORD *)&v34[View[7]] = *(_QWORD *)&v35[View[7]];
      v48 = View[8];
      v49 = &v34[v48];
      v50 = &v35[v48];
      *(_QWORD *)v49 = *(_QWORD *)v50;
      v49[8] = v50[8];
      v51 = *(void (**)(char *, _QWORD, uint64_t, int *))(v37 + 56);
      swift_retain();
      v51(v34, 0, 1, View);
    }
    v52 = a3[13];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    if (v58((char *)a2 + v52, 1, v60))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v53, v54, v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v53, 0, 1, v60);
    }
    v56 = a3[15];
    *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v56) = *(uint64_t *)((char *)a2 + v56);
    *(uint64_t *)((char *)a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TrainingLoadViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t View;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_24A779D0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_24A779CF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[7];
  v8 = sub_24A779CAC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = a1 + a2[8];
  v12 = sub_24A779D90();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = a1 + a2[12];
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 48))(v14, 1, View))
  {
    v16 = sub_24A778818();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
    v17 = v14 + *(int *)(View + 20);
    v18 = sub_24A77B80C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    swift_release();
  }
  v19 = a1 + a2[13];
  if (!v10(v19, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *View;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, int *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, _QWORD, uint64_t, int *);
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;

  v6 = sub_24A779D0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A779CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_24A779CAC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  v56 = v16;
  v57 = v15;
  if (v16((uint64_t)v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_24A779D90();
  v22 = *(_QWORD *)(v21 - 8);
  v58 = v14;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[9];
  v25 = a3[10];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = (_QWORD *)(a1 + v25);
  v29 = (_QWORD *)(a2 + v25);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v35 = *((_QWORD *)View - 1);
  v36 = *(unsigned int (**)(char *, uint64_t, int *))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v33, 1, View))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v38 = sub_24A778818();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v32, v33, v38);
    v39 = View[5];
    v40 = &v32[v39];
    v41 = &v33[v39];
    v42 = sub_24A77B80C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    v43 = View[6];
    v44 = &v32[v43];
    v45 = &v33[v43];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    v44[8] = v45[8];
    *(_QWORD *)&v32[View[7]] = *(_QWORD *)&v33[View[7]];
    v46 = View[8];
    v47 = &v32[v46];
    v48 = &v33[v46];
    *(_QWORD *)v47 = *(_QWORD *)v48;
    v47[8] = v48[8];
    v49 = *(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56);
    swift_retain();
    v49(v32, 0, 1, View);
  }
  v50 = a3[13];
  v51 = (void *)(a1 + v50);
  v52 = (const void *)(a2 + v50);
  if (v56(a2 + v50, 1, v58))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v51, v52, v58);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v51, 0, 1, v58);
  }
  v54 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int *View;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, int *);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char v56;
  void (*v57)(char *, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;

  v6 = sub_24A779D0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A779CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_24A779CAC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
  v18 = v16(v13, 1, v14);
  v80 = v15;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = a3[8];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = sub_24A779D90();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_13:
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = (uint64_t *)(a2 + v29);
  v32 = *v31;
  *(_BYTE *)(v30 + 8) = *((_BYTE *)v31 + 8);
  *(_QWORD *)v30 = v32;
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[12];
  v37 = (char *)(a1 + v36);
  v38 = (char *)(a2 + v36);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v40 = *((_QWORD *)View - 1);
  v41 = *(uint64_t (**)(char *, uint64_t, int *))(v40 + 48);
  v42 = v41(v37, 1, View);
  v43 = v41(v38, 1, View);
  if (v42)
  {
    if (!v43)
    {
      v44 = sub_24A778818();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v37, v38, v44);
      v45 = View[5];
      v46 = &v37[v45];
      v47 = &v38[v45];
      v48 = sub_24A77B80C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
      v49 = View[6];
      v50 = &v37[v49];
      v51 = &v38[v49];
      v52 = v51[8];
      *(_QWORD *)v50 = *(_QWORD *)v51;
      v50[8] = v52;
      *(_QWORD *)&v37[View[7]] = *(_QWORD *)&v38[View[7]];
      v53 = View[8];
      v54 = &v37[v53];
      v55 = &v38[v53];
      v56 = v55[8];
      *(_QWORD *)v54 = *(_QWORD *)v55;
      v54[8] = v56;
      v57 = *(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56);
      swift_retain();
      v57(v37, 0, 1, View);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v43)
  {
    sub_24A678780((uint64_t)v37);
LABEL_18:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_19;
  }
  v66 = sub_24A778818();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v37, v38, v66);
  v67 = View[5];
  v68 = &v37[v67];
  v69 = &v38[v67];
  v70 = sub_24A77B80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  v71 = View[6];
  v72 = &v37[v71];
  v73 = &v38[v71];
  v74 = v73[8];
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v74;
  *(_QWORD *)&v37[View[7]] = *(_QWORD *)&v38[View[7]];
  swift_retain();
  swift_release();
  v75 = View[8];
  v76 = &v37[v75];
  v77 = &v38[v75];
  v78 = *(_QWORD *)v77;
  v76[8] = v77[8];
  *(_QWORD *)v76 = v78;
LABEL_19:
  v59 = a3[13];
  v60 = (void *)(a1 + v59);
  v61 = (const void *)(a2 + v59);
  v62 = v79(a1 + v59, 1, v14);
  v63 = v79((uint64_t)v61, 1, v14);
  if (!v62)
  {
    if (!v63)
    {
      (*(void (**)(void *, const void *, uint64_t))(v80 + 24))(v60, v61, v14);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v80 + 8))(v60, v14);
    goto LABEL_24;
  }
  if (v63)
  {
LABEL_24:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v80 + 16))(v60, v61, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v60, 0, 1, v14);
LABEL_25:
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *View;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  unsigned int (*v53)(const void *, uint64_t, uint64_t);

  v6 = sub_24A779D0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A779CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_24A779CAC();
  v15 = *(_QWORD *)(v14 - 8);
  v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v53(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_24A779D90();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v27 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v28 = (char *)(a1 + v27);
  v29 = (char *)(a2 + v27);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v31 = *((_QWORD *)View - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, View))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = sub_24A778818();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v28, v29, v33);
    v34 = View[5];
    v35 = &v28[v34];
    v52 = v14;
    v36 = v15;
    v37 = &v29[v34];
    v38 = sub_24A77B80C();
    v39 = v37;
    v15 = v36;
    v14 = v52;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v39, v38);
    v40 = View[6];
    v41 = &v28[v40];
    v42 = &v29[v40];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = v42[8];
    *(_QWORD *)&v28[View[7]] = *(_QWORD *)&v29[View[7]];
    v43 = View[8];
    v44 = &v28[v43];
    v45 = &v29[v43];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    v44[8] = v45[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, View);
  }
  v46 = a3[13];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  if (v53((const void *)(a2 + v46), 1, v14))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v47, v48, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v47, 0, 1, v14);
  }
  v50 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for TrainingLoadViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *View;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, int *);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;

  v6 = sub_24A779D0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A779CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_24A779CAC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
  v18 = v16(v13, 1, v14);
  v76 = v15;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[8];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = sub_24A779D90();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_13:
  v29 = a3[9];
  v30 = a3[10];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  v33 = (_QWORD *)(a1 + v30);
  v34 = (uint64_t *)(a2 + v30);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v37 = a3[12];
  v38 = (char *)(a1 + v37);
  v39 = (char *)(a2 + v37);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v41 = *((_QWORD *)View - 1);
  v42 = *(uint64_t (**)(char *, uint64_t, int *))(v41 + 48);
  v43 = v42(v38, 1, View);
  v44 = v42(v39, 1, View);
  if (v43)
  {
    if (!v44)
    {
      v45 = sub_24A778818();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v38, v39, v45);
      v46 = View[5];
      v47 = &v38[v46];
      v48 = &v39[v46];
      v49 = sub_24A77B80C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      v50 = View[6];
      v51 = &v38[v50];
      v52 = &v39[v50];
      *(_QWORD *)v51 = *(_QWORD *)v52;
      v51[8] = v52[8];
      *(_QWORD *)&v38[View[7]] = *(_QWORD *)&v39[View[7]];
      v53 = View[8];
      v54 = &v38[v53];
      v55 = &v39[v53];
      *(_QWORD *)v54 = *(_QWORD *)v55;
      v54[8] = v55[8];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v41 + 56))(v38, 0, 1, View);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v44)
  {
    sub_24A678780((uint64_t)v38);
LABEL_18:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  v64 = sub_24A778818();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v38, v39, v64);
  v65 = View[5];
  v66 = &v38[v65];
  v67 = &v39[v65];
  v68 = sub_24A77B80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 40))(v66, v67, v68);
  v69 = View[6];
  v70 = &v38[v69];
  v71 = &v39[v69];
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v70[8] = v71[8];
  *(_QWORD *)&v38[View[7]] = *(_QWORD *)&v39[View[7]];
  swift_release();
  v72 = View[8];
  v73 = &v38[v72];
  v74 = &v39[v72];
  *(_QWORD *)v73 = *(_QWORD *)v74;
  v73[8] = v74[8];
LABEL_19:
  v57 = a3[13];
  v58 = (void *)(a1 + v57);
  v59 = (const void *)(a2 + v57);
  v60 = v75(a1 + v57, 1, v14);
  v61 = v75((uint64_t)v59, 1, v14);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(v76 + 40))(v58, v59, v14);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v76 + 8))(v58, v14);
    goto LABEL_24;
  }
  if (v61)
  {
LABEL_24:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v58, v59, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v58, 0, 1, v14);
LABEL_25:
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_release();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6E0E54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_24A779D0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_24A779CF4();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_14:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[7];
    }
    else
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
      v12 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v17;
        v13 = a3[8];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[12];
      }
    }
    goto LABEL_14;
  }
  v14 = *(_QWORD *)(a1 + a3[6]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6E0F80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_24A779D0C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_24A779CF4();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
        return result;
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B940);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6260);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[12];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24A6E109C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_24A779D0C();
  if (v0 <= 0x3F)
  {
    sub_24A779CF4();
    if (v1 <= 0x3F)
    {
      sub_24A693828(319, &qword_25794B9E0, (void (*)(uint64_t))MEMORY[0x24BE3FC90]);
      if (v2 <= 0x3F)
      {
        sub_24A693828(319, &qword_25794B9E8, (void (*)(uint64_t))MEMORY[0x24BE400E8]);
        if (v3 <= 0x3F)
        {
          sub_24A693828(319, (unint64_t *)&qword_25794A500, (void (*)(uint64_t))type metadata accessor for TrainingLoadViewModel.ChartPoint);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingLoadViewModel.ChartPoint(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_24A778818();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24A77B80C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    v16 = a3[8];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
  }
  swift_retain();
  return a1;
}

uint64_t destroy for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_24A77B80C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_release();
}

uint64_t initializeWithCopy for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A77B80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A77B80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 8) = *((_BYTE *)v17 + 8);
  *(_QWORD *)v16 = v18;
  return a1;
}

uint64_t initializeWithTake for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A77B80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  return a1;
}

uint64_t assignWithTake for TrainingLoadViewModel.ChartPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A77B80C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_release();
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingLoadViewModel.ChartPoint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6E1680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_24A778818();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_24A77B80C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadViewModel.ChartPoint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6E1734(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_24A778818();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_24A77B80C();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_24A6E17D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_24A778818();
  if (v1 <= 0x3F)
  {
    result = sub_24A77B80C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_24A6E1878()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BA90;
  if (!qword_25794BA90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BA98);
    v2[0] = sub_24A6DE880();
    v2[1] = sub_24A63CFF0(&qword_25794B988, &qword_25794B978, MEMORY[0x24BDEB358]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BA90);
  }
  return result;
}

unint64_t sub_24A6E1900()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794BAA0;
  if (!qword_25794BAA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B998);
    v2 = sub_24A6E1964();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794BAA0);
  }
  return result;
}

unint64_t sub_24A6E1964()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BAA8;
  if (!qword_25794BAA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B9A8);
    v2[0] = sub_24A6DE90C();
    v2[1] = v2[0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BAA8);
  }
  return result;
}

uint64_t HKWorkout.makeDownhillRuns(healthStore:completion:)(void *a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  void *v2;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  id v9;
  uint64_t v10;

  v5 = objc_msgSend(v2, sel_downhillRunEvents);
  if (!v5)
    return a2(0, 0);
  v6 = v5;
  sub_24A64F254(0, &qword_2579472F8);
  v7 = sub_24A77BB18();

  v8 = v2;
  v9 = a1;
  v10 = sub_24A6E28D8(v7, v8, v9);
  swift_bridgeObjectRelease();

  a2(v10, 0);
  return swift_bridgeObjectRelease();
}

id sub_24A6E1AB0(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  v2 = HKWorkout.downhillRunEvents.getter();

  if (v2)
  {
    sub_24A64F254(0, &qword_2579472F8);
    v3 = (void *)sub_24A77BB0C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t HKWorkout.downhillRunEvents.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  uint64_t v23;
  id v24;
  __int128 v25;
  __int128 v26;
  void *v27;

  v1 = objc_msgSend(v0, sel_workoutActivityType);
  if (v1 != (id)67 && v1 != (id)61)
    return 0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_24A77B980();
  v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  if ((v4 & 1) != 0)
    return sub_24A6E1EC0();
  v5 = objc_msgSend(v0, sel_workoutEvents);
  if (!v5)
    return (uint64_t)v5;
  sub_24A64F254(0, &qword_2579472F8);
  v6 = sub_24A77BB18();

  v27 = (void *)MEMORY[0x24BEE4AF8];
  if (v6 >> 62)
    goto LABEL_36;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
LABEL_9:
    v8 = 0;
    v9 = 0x1F288D000uLL;
    v23 = v7;
    while (1)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v10 = (id)MEMORY[0x24BD19588](v8, v6);
      }
      else
      {
        if (v8 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          swift_bridgeObjectRetain();
          v7 = sub_24A77C028();
          swift_bridgeObjectRelease();
          if (!v7)
            break;
          goto LABEL_9;
        }
        v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      v11 = v10;
      v12 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_35;
      if (objc_msgSend(v10, sel_type) == (id)7)
      {
        v13 = v9;
        v14 = objc_msgSend(v11, sel_metadata);
        if (!v14)
        {
          v25 = 0u;
          v26 = 0u;
LABEL_27:
          sub_24A63FFE8((uint64_t)&v25);
          goto LABEL_28;
        }
        v15 = v14;
        v16 = sub_24A77B8FC();

        v17 = sub_24A77B9B0();
        if (*(_QWORD *)(v16 + 16) && (v19 = sub_24A64E74C(v17, v18), (v20 & 1) != 0))
        {
          sub_24A64E7B0(*(_QWORD *)(v16 + 56) + 32 * v19, (uint64_t)&v25);
        }
        else
        {
          v25 = 0u;
          v26 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v26 + 1))
          goto LABEL_27;
        sub_24A64F254(0, (unint64_t *)&qword_25794C8D0);
        if (!swift_dynamicCast())
          goto LABEL_28;
        v9 = v13;
        if (objc_msgSend(v24, (SEL)(v13 + 840)) != (id)1)
        {
          v21 = objc_msgSend(v24, (SEL)(v13 + 840));

          if (v21 == (id)3)
          {

            goto LABEL_29;
          }
LABEL_28:
          sub_24A77BFBC();
          sub_24A77BFE0();
          sub_24A77BFEC();
          sub_24A77BFC8();
LABEL_29:
          v9 = v13;
          v7 = v23;
          goto LABEL_11;
        }

        v7 = v23;
      }
      else
      {

      }
LABEL_11:
      ++v8;
      if (v12 == v7)
      {
        v5 = v27;
        goto LABEL_38;
      }
    }
  }
  v5 = (id)MEMORY[0x24BEE4AF8];
LABEL_38:
  swift_bridgeObjectRelease();
  return (uint64_t)v5;
}

uint64_t sub_24A6E1EC0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void (*v13)(char *, id);
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  char *v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  char *v59;
  void *v60;
  void *v61;
  char *v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v86;
  id v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  char *v99;
  id v100;
  id v101;
  char *v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  id v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, id);
  id v116;
  uint64_t v117;

  v1 = v0;
  v114 = sub_24A7783F8();
  v103 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (_QWORD *)sub_24A778818();
  v4 = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v86 - v9;
  v11 = objc_msgSend(v0, sel_endDate, v8);
  sub_24A7787E8();

  v12 = objc_msgSend(v1, sel_startDate);
  v99 = v6;
  sub_24A7787E8();

  sub_24A778794();
  v13 = *(void (**)(char *, id))(v4 + 8);
  v115 = v13;
  v116 = v3;
  v13(v6, v3);
  v13(v10, v3);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_mileUnit);
  v16 = objc_msgSend(v14, sel_hourUnit);
  v17 = objc_msgSend(v15, sel_unitDividedByUnit_, v16);

  v18 = (void *)objc_opt_self();
  v100 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v17, 11.0);
  v104 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v17, 12.0);
  v101 = v17;
  v95 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v17, 24.0);
  v97 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v17, 29.0);
  v19 = objc_msgSend(v14, sel_percentUnit);
  v92 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v19, 15.0);

  v20 = objc_msgSend(v14, sel_percentUnit);
  v93 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v20, 35.0);

  v21 = objc_msgSend(v14, sel_percentUnit);
  v98 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v21, 45.0);

  v22 = objc_msgSend(v14, sel_meterUnit);
  v23 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v22, 472.0);

  v24 = objc_msgSend(v14, sel_meterUnit);
  v90 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v24, 491.0);

  v25 = objc_msgSend(v14, sel_meterUnit);
  v96 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v25, 421.0);

  v26 = objc_msgSend(v14, sel_meterUnit);
  v27 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v26, 5.0);

  v28 = v112;
  v29 = objc_msgSend(v112, (SEL)&selRef_systemFontOfSize_weight_);
  v102 = v10;
  sub_24A7787E8();

  v30 = v113;
  sub_24A7783E0();
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB38);
  inited = swift_initStackObject();
  v110 = xmmword_24A7810B0;
  *(_OWORD *)(inited + 16) = xmmword_24A7810B0;
  v109 = *MEMORY[0x24BDD3160];
  *(_QWORD *)(inited + 32) = sub_24A77B9B0();
  *(_QWORD *)(inited + 40) = v32;
  v33 = sub_24A64F254(0, (unint64_t *)&qword_257947308);
  *(_QWORD *)(inited + 72) = v33;
  v34 = v104;
  *(_QWORD *)(inited + 48) = v104;
  v108 = *MEMORY[0x24BDD31D8];
  *(_QWORD *)(inited + 80) = sub_24A77B9B0();
  *(_QWORD *)(inited + 88) = v35;
  *(_QWORD *)(inited + 120) = v33;
  v36 = v95;
  *(_QWORD *)(inited + 96) = v95;
  v107 = *MEMORY[0x24BDD3130];
  *(_QWORD *)(inited + 128) = sub_24A77B9B0();
  *(_QWORD *)(inited + 136) = v37;
  *(_QWORD *)(inited + 168) = v33;
  v38 = v92;
  *(_QWORD *)(inited + 144) = v92;
  v106 = *MEMORY[0x24BDD3190];
  *(_QWORD *)(inited + 176) = sub_24A77B9B0();
  *(_QWORD *)(inited + 184) = v39;
  *(_QWORD *)(inited + 216) = v33;
  *(_QWORD *)(inited + 192) = v23;
  v105 = *MEMORY[0x24BDD3188];
  *(_QWORD *)(inited + 224) = sub_24A77B9B0();
  *(_QWORD *)(inited + 232) = v40;
  *(_QWORD *)(inited + 264) = v33;
  *(_QWORD *)(inited + 240) = v27;
  v94 = v34;
  v87 = v36;
  v95 = v38;
  v92 = v23;
  v89 = v27;
  sub_24A64BEE4(inited);
  v41 = (void *)sub_24A7783BC();
  v88 = MEMORY[0x24BEE4AD8] + 8;
  v42 = (void *)sub_24A77B8F0();
  swift_bridgeObjectRelease();
  v104 = (id)objc_opt_self();
  v91 = objc_msgSend(v104, sel_workoutEventWithType_dateInterval_metadata_, 7, v41, v42);

  v103 = *(_QWORD *)(v103 + 8);
  v43 = v30;
  v44 = v114;
  ((void (*)(char *, uint64_t))v103)(v43, v114);
  v45 = objc_msgSend(v28, sel_startDate);
  v46 = v99;
  sub_24A7787E8();

  sub_24A7787A0();
  v115(v46, v116);
  sub_24A7783E0();
  v47 = swift_initStackObject();
  *(_OWORD *)(v47 + 16) = v110;
  *(_QWORD *)(v47 + 32) = sub_24A77B9B0();
  *(_QWORD *)(v47 + 40) = v48;
  *(_QWORD *)(v47 + 72) = v33;
  v49 = v87;
  *(_QWORD *)(v47 + 48) = v87;
  *(_QWORD *)(v47 + 80) = sub_24A77B9B0();
  *(_QWORD *)(v47 + 88) = v50;
  *(_QWORD *)(v47 + 120) = v33;
  v51 = v97;
  *(_QWORD *)(v47 + 96) = v97;
  *(_QWORD *)(v47 + 128) = sub_24A77B9B0();
  *(_QWORD *)(v47 + 136) = v52;
  *(_QWORD *)(v47 + 168) = v33;
  v53 = v93;
  *(_QWORD *)(v47 + 144) = v93;
  *(_QWORD *)(v47 + 176) = sub_24A77B9B0();
  *(_QWORD *)(v47 + 184) = v54;
  *(_QWORD *)(v47 + 216) = v33;
  v55 = v90;
  *(_QWORD *)(v47 + 192) = v90;
  *(_QWORD *)(v47 + 224) = sub_24A77B9B0();
  *(_QWORD *)(v47 + 232) = v56;
  *(_QWORD *)(v47 + 264) = v33;
  v57 = v89;
  *(_QWORD *)(v47 + 240) = v89;
  v87 = v49;
  v58 = v57;
  v89 = v51;
  v97 = v53;
  v93 = v55;
  sub_24A64BEE4(v47);
  v59 = v113;
  v60 = (void *)sub_24A7783BC();
  v61 = (void *)sub_24A77B8F0();
  swift_bridgeObjectRelease();
  v90 = objc_msgSend(v104, sel_workoutEventWithType_dateInterval_metadata_, 7, v60, v61);

  v62 = v59;
  ((void (*)(char *, uint64_t))v103)(v59, v44);
  v63 = objc_msgSend(v112, sel_startDate);
  sub_24A7787E8();

  sub_24A7787A0();
  v115(v46, v116);
  v64 = v62;
  sub_24A7783E0();
  v65 = swift_initStackObject();
  *(_OWORD *)(v65 + 16) = v110;
  *(_QWORD *)(v65 + 32) = sub_24A77B9B0();
  *(_QWORD *)(v65 + 40) = v66;
  *(_QWORD *)(v65 + 72) = v33;
  v67 = v100;
  *(_QWORD *)(v65 + 48) = v100;
  *(_QWORD *)(v65 + 80) = sub_24A77B9B0();
  *(_QWORD *)(v65 + 88) = v68;
  *(_QWORD *)(v65 + 120) = v33;
  v69 = v87;
  *(_QWORD *)(v65 + 96) = v87;
  *(_QWORD *)(v65 + 128) = sub_24A77B9B0();
  *(_QWORD *)(v65 + 136) = v70;
  *(_QWORD *)(v65 + 168) = v33;
  v71 = v98;
  *(_QWORD *)(v65 + 144) = v98;
  *(_QWORD *)(v65 + 176) = sub_24A77B9B0();
  *(_QWORD *)(v65 + 184) = v72;
  *(_QWORD *)(v65 + 216) = v33;
  v73 = v96;
  *(_QWORD *)(v65 + 192) = v96;
  *(_QWORD *)(v65 + 224) = sub_24A77B9B0();
  *(_QWORD *)(v65 + 232) = v74;
  *(_QWORD *)(v65 + 264) = v33;
  *(_QWORD *)(v65 + 240) = v58;
  v116 = v69;
  v75 = v58;
  v76 = v67;
  v77 = v71;
  v78 = v73;
  sub_24A64BEE4(v65);
  v79 = (void *)sub_24A7783BC();
  v80 = (void *)sub_24A77B8F0();
  swift_bridgeObjectRelease();
  v81 = objc_msgSend(v104, sel_workoutEventWithType_dateInterval_metadata_, 7, v79, v80);

  ((void (*)(char *, uint64_t))v103)(v64, v114);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
  v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_24A782FA0;
  v83 = v90;
  *(_QWORD *)(v82 + 32) = v91;
  *(_QWORD *)(v82 + 40) = v83;
  *(_QWORD *)(v82 + 48) = v81;
  v117 = v82;
  sub_24A77BB24();
  v84 = v117;

  return v84;
}

uint64_t sub_24A6E28D8(unint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v6)
      break;
    v11 = MEMORY[0x24BEE4AF8];
    result = sub_24A77BFD4();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x24BD19588](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      _s9WorkoutUI11DownhillRunC04makecD008downhillD5Event7workout11healthStoreACSo09HKWorkoutG0C_So0K0CSo08HKHealthJ0CtFZ_0(v9, a2, a3);

      sub_24A77BFBC();
      sub_24A77BFE0();
      sub_24A77BFEC();
      sub_24A77BFC8();
      if (v6 == v8)
        return v11;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v6 = sub_24A77C028();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24A6E2A28@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;

  v35 = a1;
  v3 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (double *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB78);
  MEMORY[0x24BDAC7A8](v33);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v34 = (uint64_t)&v31 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB80);
  MEMORY[0x24BDAC7A8](v10);
  v32 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (double *)((char *)&v31 - v13);
  v15 = (char *)&v31 + *(int *)(v3 + 20) - v13;
  v16 = *MEMORY[0x24BDEEB68];
  v17 = sub_24A77A9D8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
  v18(v15, v16, v17);
  *v14 = a2;
  v14[1] = a2;
  *(_QWORD *)&v36 = 0x401E000000000000;
  BYTE8(v36) = 0;
  v39 = xmmword_24A784870;
  v40 = xmmword_24A784880;
  v41 = xmmword_24A784890;
  v42 = 1062240036;
  v44 = 0;
  v43 = 0;
  v45 = 0;
  v46 = 1065353216;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB88);
  sub_24A6E302C();
  sub_24A77B0E0();
  v18((char *)v5 + *(int *)(v3 + 20), v16, v17);
  *v5 = a2;
  v5[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD8);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24A780450;
  sub_24A77B368();
  v20 = sub_24A77B374();
  swift_release();
  *(_QWORD *)(v19 + 32) = v20;
  sub_24A77B368();
  v21 = sub_24A77B374();
  swift_release();
  *(_QWORD *)(v19 + 40) = v21;
  *(_QWORD *)&v36 = v19;
  sub_24A77BB24();
  v22 = v36;
  sub_24A77B6F8();
  sub_24A77B704();
  MEMORY[0x24BD18C58](v22);
  sub_24A77A570();
  sub_24A655654((uint64_t)v5, (uint64_t)v7);
  v23 = v33;
  v24 = &v7[*(int *)(v33 + 52)];
  v25 = v37;
  *(_OWORD *)v24 = v36;
  *((_OWORD *)v24 + 1) = v25;
  *((_QWORD *)v24 + 4) = v38;
  *(_WORD *)&v7[*(int *)(v23 + 56)] = 256;
  sub_24A655698((uint64_t)v5);
  v26 = v34;
  sub_24A6E3090((uint64_t)v7, v34);
  v27 = v32;
  sub_24A63CCC0((uint64_t)v14, v32, &qword_25794BB80);
  sub_24A63CCC0(v26, (uint64_t)v7, &qword_25794BB78);
  v28 = v35;
  sub_24A63CCC0(v27, v35, &qword_25794BB80);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB98);
  sub_24A63CCC0((uint64_t)v7, v28 + *(int *)(v29 + 48), &qword_25794BB78);
  sub_24A63CD04(v26, &qword_25794BB78);
  sub_24A63CD04((uint64_t)v14, &qword_25794BB80);
  sub_24A63CD04((uint64_t)v7, &qword_25794BB78);
  return sub_24A63CD04(v27, &qword_25794BB80);
}

uint64_t sub_24A6E2E00@<X0>(uint64_t *a1@<X8>)
{
  double *v1;
  double v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  *a1 = sub_24A77B668();
  a1[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB70);
  return sub_24A6E2A28((uint64_t)a1 + *(int *)(v5 + 44), v3);
}

uint64_t EffortButtonBackgroundModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  v5 = *v2;
  v6 = sub_24A77B668();
  v8 = v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB48);
  v11 = (_QWORD *)(a2 + *(int *)(result + 36));
  *v11 = v5;
  v11[1] = v6;
  v11[2] = v8;
  return result;
}

uint64_t sub_24A6E2ECC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6E2EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  v5 = *v2;
  v6 = sub_24A77B668();
  v8 = v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB48);
  v11 = (_QWORD *)(a2 + *(int *)(result + 36));
  *v11 = v5;
  v11[1] = v6;
  v11[2] = v8;
  return result;
}

ValueMetadata *type metadata accessor for EffortButtonBackgroundModifier()
{
  return &type metadata for EffortButtonBackgroundModifier;
}

unint64_t sub_24A6E2F70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BB50;
  if (!qword_25794BB50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BB48);
    v2[0] = sub_24A63CFF0(&qword_25794BB58, &qword_25794BB40, MEMORY[0x24BDEFB78]);
    v2[1] = sub_24A63CFF0(&qword_25794BB60, &qword_25794BB68, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BB50);
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortButtonBackground()
{
  return &type metadata for EffortButtonBackground;
}

uint64_t sub_24A6E301C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24A6E302C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BB90;
  if (!qword_25794BB90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BB88);
    v2[0] = MEMORY[0x24BDF0B30];
    v2[1] = MEMORY[0x24BDEB920];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BB90);
  }
  return result;
}

uint64_t sub_24A6E3090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6E30D8()
{
  return sub_24A63CFF0(&qword_25794BBA0, &qword_25794BBA8, MEMORY[0x24BDF4750]);
}

void static EffortUtilities.save(quantity:workout:healthStore:)(void *a1, void *a2, void *a3)
{
  _s9WorkoutUI15EffortUtilitiesC4save8quantity7workout0G8Activity11healthStore10completionySo10HKQuantityCSg_So9HKWorkoutCSo0mH0CSgSo08HKHealthJ0CySb_s5Error_pSgtcSgtFZ_0(a1, a2, 0, a3, (void (*)(uint64_t, _QWORD))nullsub_1, 0);
}

void static EffortUtilities.save(quantity:workout:workoutActivity:healthStore:)(void *a1, void *a2, void *a3, void *a4)
{
  _s9WorkoutUI15EffortUtilitiesC4save8quantity7workout0G8Activity11healthStore10completionySo10HKQuantityCSg_So9HKWorkoutCSo0mH0CSgSo08HKHealthJ0CySb_s5Error_pSgtcSgtFZ_0(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD))nullsub_1, 0);
}

uint64_t static EffortUtilities.save(quantity:workout:workoutActivity:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_24A778854();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v6 = sub_24A77A018();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A6E324C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v24;
  os_log_type_t type;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (void *)v0[3];
  if (v1)
  {
    v2 = (id)v0[3];
  }
  else
  {
    v3 = (void *)v0[4];
    sub_24A779A18();
    v4 = v3;
    v5 = sub_24A77A00C();
    v6 = sub_24A77BC74();
    v7 = os_log_type_enabled(v5, v6);
    v9 = v0[11];
    v8 = v0[12];
    v10 = v0[10];
    if (v7)
    {
      type = v6;
      v11 = v0[9];
      v24 = v0[8];
      v12 = v0[7];
      v13 = (void *)v0[4];
      v28 = v0[12];
      v27 = v0[10];
      v14 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v29 = v26;
      *(_DWORD *)v14 = 136446210;
      v15 = objc_msgSend(v13, sel_UUID);
      sub_24A77883C();

      sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
      v16 = sub_24A77C160();
      v18 = v17;
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v12);
      v0[2] = sub_24A76BC40(v16, v18, &v29);
      sub_24A77BE00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A635000, v5, type, "Storing sentinel for skip for workout %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v26, -1, -1);
      MEMORY[0x24BD1A2B4](v14, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v28, v27);
    }
    else
    {
      v19 = (void *)v0[4];

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    v1 = (void *)v0[3];
    v20 = objc_msgSend((id)objc_opt_self(), sel_appleEffortScoreUnit);
    v2 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v20, 0.0);

  }
  v0[13] = v2;
  v21 = v1;
  v22 = (_QWORD *)swift_task_alloc();
  v0[14] = v22;
  *v22 = v0;
  v22[1] = sub_24A6E350C;
  return sub_24A6E6408((uint64_t)v2, v0[4], v0[5], v0[6]);
}

uint64_t sub_24A6E350C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A6E3568()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 120));
}

uint64_t sub_24A6E35B0()
{
  uint64_t result;

  result = sub_24A77B980();
  qword_25794BBB0 = result;
  return result;
}

id static EffortUtilities.didUpdateDemoOverrideEffortValues.getter()
{
  if (qword_2579469A8 != -1)
    swift_once();
  return (id)qword_25794BBB0;
}

void *sub_24A6E3624()
{
  void *result;

  result = (void *)sub_24A64C140(MEMORY[0x24BEE4AF8]);
  off_25794BBB8 = result;
  return result;
}

uint64_t sub_24A6E3648(char a1, void *a2, void *a3, void *a4, void *a5, uint64_t (*a6)(_QWORD, id), uint64_t a7)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  NSObject *v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, _QWORD);
  id v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  id v54;
  NSObject *v55;
  int v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t (*v68)(_QWORD, id);
  uint64_t result;
  id v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  os_log_t v75;
  _QWORD *v76;
  os_log_t v77;
  os_log_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  os_log_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  os_log_t v89;
  os_log_t v90;
  char *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(_QWORD, id);
  id v100;
  uint64_t v101;
  os_log_t v102;

  v94 = a7;
  v100 = a5;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v93);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v85 - v15;
  v17 = sub_24A778854();
  v18 = *(_QWORD *)(v17 - 8);
  v95 = v17;
  v96 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_24A77A018();
  MEMORY[0x24BDAC7A8](v21);
  v23 = ((char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v85 - v25;
  v98 = v27;
  v99 = a6;
  v97 = v28;
  if ((a1 & 1) == 0)
  {
    v92 = a2;
    sub_24A779A18();
    v49 = v100;
    v50 = a3;
    v51 = a4;
    v52 = (char *)v49;
    v53 = v50;
    v54 = v51;
    v55 = sub_24A77A00C();
    v56 = sub_24A77BC5C();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      v90 = v23;
      v91 = v52;
      LODWORD(v87) = v56;
      v89 = v55;
      v57 = swift_slowAlloc();
      v58 = (_QWORD *)swift_slowAlloc();
      v88 = swift_slowAlloc();
      v101 = (uint64_t)v53;
      v102 = (os_log_t)v88;
      *(_DWORD *)v57 = 138412802;
      v59 = v53;
      sub_24A77BE00();
      v86 = v58;
      *v58 = v53;

      *(_WORD *)(v57 + 12) = 2082;
      v60 = objc_msgSend(v54, sel_UUID);
      sub_24A77883C();

      sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
      v61 = v95;
      v62 = sub_24A77C160();
      v64 = v63;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v20, v61);
      v101 = sub_24A76BC40(v62, v64, (uint64_t *)&v102);
      sub_24A77BE00();

      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 22) = 2082;
      if (v100)
      {
        v65 = v91;
        v66 = objc_msgSend(v91, sel_UUID);
        sub_24A77883C();

        v67 = 0;
        v68 = v99;
      }
      else
      {
        v67 = 1;
        v68 = v99;
        v65 = v91;
      }
      v78 = v90;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v13, v67, 1, v95);
      v79 = sub_24A77BDDC();
      v81 = v80;
      sub_24A63CD04((uint64_t)v13, &qword_257948898);
      v101 = sub_24A76BC40(v79, v81, (uint64_t *)&v102);
      sub_24A77BE00();

      swift_bridgeObjectRelease();
      v82 = v89;
      _os_log_impl(&dword_24A635000, v89, (os_log_type_t)v87, "Failed to store perceived effort %@ to workout %{public}s with activity %{public}s with no error.", (uint8_t *)v57, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
      v83 = v86;
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v83, -1, -1);
      v84 = v88;
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v84, -1, -1);
      MEMORY[0x24BD1A2B4](v57, -1, -1);

      result = (*(uint64_t (**)(os_log_t, uint64_t))(v97 + 8))(v78, v98);
      v70 = v92;
      if (!v68)
        return result;
    }
    else
    {

      result = (*(uint64_t (**)(NSObject *, uint64_t))(v97 + 8))(v23, v98);
      v68 = v99;
      v70 = v92;
      if (!v99)
        return result;
    }
    return v68(0, v70);
  }
  sub_24A779A18();
  v29 = v100;
  v30 = a3;
  v31 = a4;
  v32 = v29;
  v33 = v30;
  v34 = v31;
  v35 = sub_24A77A00C();
  v36 = sub_24A77BC74();
  if (os_log_type_enabled(v35, (os_log_type_t)v36))
  {
    v91 = v26;
    v92 = v32;
    LODWORD(v88) = v36;
    v90 = v35;
    v37 = swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    v89 = (os_log_t)swift_slowAlloc();
    v101 = (uint64_t)v33;
    v102 = v89;
    *(_DWORD *)v37 = 138412802;
    v39 = v33;
    sub_24A77BE00();
    v87 = v38;
    *v38 = v33;

    *(_WORD *)(v37 + 12) = 2082;
    v40 = objc_msgSend(v34, sel_UUID);
    sub_24A77883C();

    sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
    v41 = v95;
    v42 = sub_24A77C160();
    v44 = v43;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v20, v41);
    v101 = sub_24A76BC40(v42, v44, (uint64_t *)&v102);
    sub_24A77BE00();

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2082;
    if (v100)
    {
      v45 = v92;
      v46 = objc_msgSend(v92, sel_UUID);
      sub_24A77883C();

      v47 = 0;
      v48 = (uint64_t (*)(uint64_t, _QWORD))v99;
    }
    else
    {
      v47 = 1;
      v48 = (uint64_t (*)(uint64_t, _QWORD))v99;
      v45 = v92;
    }
    v71 = v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v16, v47, 1, v95);
    v72 = sub_24A77BDDC();
    v74 = v73;
    sub_24A63CD04((uint64_t)v16, &qword_257948898);
    v101 = sub_24A76BC40(v72, v74, (uint64_t *)&v102);
    sub_24A77BE00();

    swift_bridgeObjectRelease();
    v75 = v90;
    _os_log_impl(&dword_24A635000, v90, (os_log_type_t)v88, "Successfully stored perceived effort %@ to workout %{public}s with activity %{public}s", (uint8_t *)v37, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
    v76 = v87;
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v76, -1, -1);
    v77 = v89;
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v77, -1, -1);
    MEMORY[0x24BD1A2B4](v37, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v71, v98);
    if (v48)
      return v48(1, 0);
  }
  else
  {

    result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v26, v98);
    v48 = (uint64_t (*)(uint64_t, _QWORD))v99;
    if (v99)
      return v48(1, 0);
  }
  return result;
}

uint64_t sub_24A6E3E54(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

void static EffortUtilities.fetchExertion(forWorkout:healthStore:completion:)(void *a1, void *a2, void (*a3)(void), uint64_t a4)
{
  static EffortUtilities.fetchExertion(forWorkout:activity:healthStore:completion:)(a1, 0, a2, a3, a4);
}

void static EffortUtilities.fetchExertion(forWorkout:activity:healthStore:completion:)(void *a1, void *a2, void *a3, void (*a4)(void), uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  _QWORD aBlock[6];

  v11 = sub_24A778854();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a1);
  if (v18)
  {
    v34 = v18;
    a4();

    return;
  }
  v33 = a3;
  v34 = v5;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a4;
  *(_QWORD *)(v19 + 24) = a5;
  swift_retain_n();
  if (objc_msgSend(a1, sel_workoutActivityType) == (id)82 && !a2)
  {
    ((void (*)(_QWORD))a4)(0);
    swift_release();
    swift_release();
    return;
  }
  v20 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID);
  if (v20)
  {
    v21 = v20;
    sub_24A77883C();

    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) != 1)
    {
      v22 = (void *)objc_opt_self();
      v23 = (void *)sub_24A778830();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      v24 = objc_msgSend(v22, sel_predicateForObjectWithUUID_, v23);

      v25 = (_QWORD *)swift_allocObject();
      v26 = v33;
      v25[2] = v33;
      v25[3] = sub_24A6E7424;
      v25[4] = v19;
      v25[5] = a1;
      v25[6] = v34;
      v25[7] = a2;
      v27 = objc_allocWithZone(MEMORY[0x24BDD4148]);
      aBlock[4] = sub_24A6E7430;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24A6E5A30;
      aBlock[3] = &block_descriptor_2;
      v28 = _Block_copy(aBlock);
      v29 = a2;
      v30 = v26;
      swift_retain();
      v31 = a1;
      v32 = objc_msgSend(v27, sel_initWithPredicate_anchor_options_resultsHandler_, v24, 0, 0, v28);
      _Block_release(v28);
      swift_release();
      objc_msgSend(v30, sel_executeQuery_, v32);
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, 1, 1, v11);
    __break(1u);
  }
  swift_release();
  __break(1u);
}

void sub_24A6E4298(uint64_t a1, void (*a2)(id))
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  if (!a1)
    goto LABEL_7;
  v3 = *(void **)(a1 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
  if (!v3)
  {
    v5 = *(void **)(a1 + OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample);
    if (v5)
    {
      v4 = v5;
      v3 = 0;
      goto LABEL_6;
    }
LABEL_7:
    v7 = 0;
    goto LABEL_8;
  }
  v4 = *(id *)(a1 + OBJC_IVAR___WOEffortSampleCollection_effortSample);
LABEL_6:
  v6 = v3;
  v7 = objc_msgSend(v4, sel_quantity);

LABEL_8:
  a2(v7);

}

void static EffortUtilities.fetchExertionCollection(forWorkout:activity:healthStore:completion:)(void *a1, void *a2, void *a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v11 = sub_24A778854();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_workoutActivityType, v16) == (id)82 && a2 == 0)
  {
    a4(0);
  }
  else
  {
    v34 = a3;
    v35 = v5;
    v20 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID);
    if (v20)
    {
      v21 = v20;
      sub_24A77883C();

      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v14, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) != 1)
      {
        v22 = (void *)objc_opt_self();
        v23 = (void *)sub_24A778830();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
        v24 = objc_msgSend(v22, sel_predicateForObjectWithUUID_, v23);

        v25 = (_QWORD *)swift_allocObject();
        v27 = v34;
        v26 = v35;
        v25[2] = v34;
        v25[3] = a4;
        v25[4] = a5;
        v25[5] = a1;
        v25[6] = v26;
        v25[7] = a2;
        v28 = objc_allocWithZone(MEMORY[0x24BDD4148]);
        aBlock[4] = sub_24A6E7430;
        aBlock[5] = v25;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24A6E5A30;
        aBlock[3] = &block_descriptor_11;
        v29 = _Block_copy(aBlock);
        v30 = a2;
        v31 = v27;
        swift_retain();
        v32 = a1;
        v33 = objc_msgSend(v28, sel_initWithPredicate_anchor_options_resultsHandler_, v24, 0, 0, v29);
        _Block_release(v29);
        swift_release();
        objc_msgSend(v31, sel_executeQuery_, v33);

        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v18, 1, 1, v11);
    }
    __break(1u);
  }
}

void sub_24A6E4608(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7, void *a8, uint64_t a9, void *a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char *v33;
  id v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  void *v75;
  unint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(void);
  id v82;
  uint64_t v83;
  uint64_t v84;

  v76 = a2;
  v77 = a8;
  v80 = a7;
  v81 = a6;
  v82 = a5;
  v75 = a10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v75 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v75 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v75 - v22;
  v24 = sub_24A77A018();
  v78 = *(_QWORD *)(v24 - 8);
  v79 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v75 - v28;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v75 - v32;
  objc_msgSend(v82, sel_stopQuery_, a1, v31);
  if (a4)
  {
    v34 = a4;
    sub_24A779A18();
    v35 = a4;
    v36 = a4;
    v37 = sub_24A77A00C();
    v38 = sub_24A77BC5C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v84 = v40;
      *(_DWORD *)v39 = 136446210;
      swift_getErrorValue();
      v41 = sub_24A77C1CC();
      v83 = sub_24A76BC40(v41, v42, &v84);
      sub_24A77BE00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A635000, v37, v38, "Unable to fetch effort samples for workout: %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v40, -1, -1);
      MEMORY[0x24BD1A2B4](v39, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v33, v79);
    ((void (*)(_QWORD))v81)(0);

  }
  else
  {
    v44 = v76;
    v43 = v77;
    if (v76)
    {
      v45 = v23;
      if (v76 >> 62)
      {
        swift_bridgeObjectRetain();
        v46 = sub_24A77C028();
        swift_bridgeObjectRelease();
      }
      else
      {
        v46 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v47 = (uint64_t)v45;
      if (v46)
      {
        v82 = sub_24A6E7B10(v44, v75);
        v81();

        return;
      }
      sub_24A779A18();
      v57 = v43;
      v58 = sub_24A77A00C();
      v59 = sub_24A77BC50();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        v82 = (id)swift_slowAlloc();
        v84 = (uint64_t)v82;
        *(_DWORD *)v60 = 136446210;
        v61 = objc_msgSend(v57, sel_fiui_finalWorkoutUUID);
        if (v61)
        {
          v62 = v61;
          sub_24A77883C();

          v63 = sub_24A778854();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v20, 0, 1, v63);
        }
        else
        {
          v70 = sub_24A778854();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v20, 1, 1, v70);
        }
        sub_24A6E8E4C((uint64_t)v20, v47);
        v71 = sub_24A77BDDC();
        v73 = v72;
        sub_24A63CD04(v47, &qword_257948898);
        v83 = sub_24A76BC40(v71, v73, &v84);
        sub_24A77BE00();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24A635000, v58, v59, "Effort relationship array is empty for workout %{public}s", v60, 0xCu);
        v74 = v82;
        swift_arrayDestroy();
        MEMORY[0x24BD1A2B4](v74, -1, -1);
        MEMORY[0x24BD1A2B4](v60, -1, -1);

        (*(void (**)(char *, uint64_t))(v78 + 8))(v26, v79);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v78 + 8))(v26, v79);
      }
    }
    else
    {
      v48 = v29;
      sub_24A779A18();
      v49 = v43;
      v50 = sub_24A77A00C();
      v51 = sub_24A77BC50();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v82 = (id)swift_slowAlloc();
        v84 = (uint64_t)v82;
        *(_DWORD *)v52 = 136446210;
        v53 = objc_msgSend(v49, sel_fiui_finalWorkoutUUID);
        if (v53)
        {
          v54 = v53;
          sub_24A77883C();

          v55 = (uint64_t)v14;
          v56 = sub_24A778854();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v14, 0, 1, v56);
        }
        else
        {
          v64 = sub_24A778854();
          v55 = (uint64_t)v14;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v14, 1, 1, v64);
        }
        v65 = (uint64_t)v17;
        sub_24A6E8E4C(v55, (uint64_t)v17);
        v66 = sub_24A77BDDC();
        v68 = v67;
        sub_24A63CD04(v65, &qword_257948898);
        v83 = sub_24A76BC40(v66, v68, &v84);
        sub_24A77BE00();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24A635000, v50, v51, "No effort relationships returned for workout %{public}s", v52, 0xCu);
        v69 = v82;
        swift_arrayDestroy();
        MEMORY[0x24BD1A2B4](v69, -1, -1);
        MEMORY[0x24BD1A2B4](v52, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v79);
    }
    ((void (*)(_QWORD))v81)(0);
  }
}

void sub_24A6E4D48(int a1, int a2, void *a3, void *a4, void *a5, void *aBlock, void (*a7)(id, void *, id, uint64_t, void *))
{
  void *v11;
  uint64_t ObjCClassMetadata;
  id v13;
  id v14;
  id v15;

  v11 = _Block_copy(aBlock);
  ObjCClassMetadata = swift_getObjCClassMetadata();
  _Block_copy(v11);
  v13 = a3;
  v14 = a4;
  v15 = a5;
  a7(v13, a4, v15, ObjCClassMetadata, v11);
  _Block_release(v11);
  _Block_release(v11);

}

uint64_t static EffortUtilities.fetchExertion(forWorkout:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  char *v7;

  v7 = (char *)&dword_25794BBD8 + dword_25794BBD8;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24A6E4E70;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v7)(a1, 0, a2);
}

uint64_t sub_24A6E4E70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t static EffortUtilities.fetchExertion(forWorkout:activity:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25794BBD8 + dword_25794BBD8);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_24A6E8EF8;
  return v9(a1, a2, a3);
}

uint64_t static EffortUtilities.fetchEfforts(forMultisportWorkout:healthStore:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[7] = a1;
  v2[8] = a2;
  v3 = sub_24A77A018();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v4 = sub_24A77B794();
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v5 = sub_24A77B7B8();
  v2[16] = v5;
  v2[17] = *(_QWORD *)(v5 - 8);
  v2[18] = swift_task_alloc();
  v6 = sub_24A778854();
  v2[19] = v6;
  v2[20] = *(_QWORD *)(v6 - 8);
  v2[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A6E5044()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  if (objc_msgSend(*(id *)(v0 + 56), sel_workoutActivityType) == (id)82)
  {
    v1 = objc_msgSend(*(id *)(v0 + 56), sel_fiui_finalWorkoutUUID);
    v2 = *(_QWORD *)(v0 + 176);
    if (v1)
    {
      v3 = v1;
      v5 = *(_QWORD *)(v0 + 160);
      v4 = *(_QWORD *)(v0 + 168);
      v6 = *(_QWORD *)(v0 + 152);
      sub_24A77883C();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v6);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v6);
      if ((_DWORD)result != 1)
      {
        v8 = *(_QWORD *)(v0 + 176);
        v9 = *(_QWORD *)(v0 + 152);
        v10 = *(_QWORD *)(v0 + 160);
        v11 = (void *)objc_opt_self();
        v12 = (void *)sub_24A778830();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
        v13 = objc_msgSend(v11, sel_predicateForObjectWithUUID_, v12);
        *(_QWORD *)(v0 + 184) = v13;

        v14 = v13;
        sub_24A77B7AC();
        v15 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 192) = v15;
        *v15 = v0;
        v15[1] = sub_24A6E52D0;
        return sub_24A77B7A0();
      }
    }
    else
    {
      result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 56))(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 152));
    }
    __break(1u);
  }
  else
  {
    sub_24A779A18();
    v16 = sub_24A77A00C();
    v17 = sub_24A77BC5C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_24A635000, v16, v17, "fetchEffortsForMultisportWorkout was called with a non-multisport workout", v18, 2u);
      MEMORY[0x24BD1A2B4](v18, -1, -1);
    }
    v19 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 72);
    v21 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    v22 = sub_24A64C2D4(MEMORY[0x24BEE4AF8]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v22);
  }
  return result;
}

uint64_t sub_24A6E52D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_24A6E5340()
{
  uint64_t v0;
  void *v1;
  id v2;
  __objc2_meth *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  char **v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __objc2_meth *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;

  v1 = *(void **)(v0 + 56);
  v45 = sub_24A77B788();
  v2 = objc_msgSend(v1, sel_workoutActivities);
  v3 = (__objc2_meth *)sub_24A64F254(0, &qword_257947300);
  v4 = sub_24A77BB18();

  if (v4 >> 62)
    goto LABEL_32;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if (v5 < 1)
      {
        __break(1u);
        return;
      }
      v42 = v3;
      v6 = 0;
      v7 = v4 & 0xC000000000000001;
      v8 = (_QWORD *)MEMORY[0x24BEE4B00];
      v9 = &selRef_contentFrameForPage_;
      v3 = &stru_251C03000;
      v44 = v4;
      while (1)
      {
        v10 = v7 ? (id)MEMORY[0x24BD19588](v6, v4) : *(id *)(v4 + 8 * v6 + 32);
        v11 = v10;
        v12 = objc_msgSend(v10, v9[382], v42);
        v13 = objc_msgSend(v12, sel_activityType);

        if (v13 != (id)83)
          break;

LABEL_6:
        if (v5 == ++v6)
          goto LABEL_34;
      }
      v14 = v11;
      v15 = (char *)sub_24A6E7B10(v45, v11);
      v4 = (unint64_t)v15;
      v16 = *(void **)&v15[OBJC_IVAR___WOEffortSampleCollection_effortSample];
      if (v16)
        break;
      v18 = *(void **)&v15[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample];
      if (v18)
      {
        v17 = v18;
        v16 = 0;
        goto LABEL_15;
      }

      v20 = 0;
LABEL_16:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = sub_24A64E96C((uint64_t)v14);
      v24 = v8[2];
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (!__OFADD__(v24, v25))
      {
        v4 = v22;
        if (v8[3] >= v26)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v29 = 8 * v23;
            if ((v22 & 1) == 0)
              goto LABEL_26;
          }
          else
          {
            sub_24A6DB8F0();
            v29 = 8 * v23;
            if ((v4 & 1) == 0)
              goto LABEL_26;
          }
        }
        else
        {
          sub_24A6DD7CC(v26, isUniquelyReferenced_nonNull_native);
          v27 = sub_24A64E96C((uint64_t)v14);
          if ((v4 & 1) != (v28 & 1))
          {
            sub_24A77C1B4();
            return;
          }
          v23 = v27;
          v29 = 8 * v27;
          if ((v4 & 1) == 0)
          {
LABEL_26:
            v8[(v23 >> 6) + 8] |= 1 << v23;
            *(_QWORD *)(v8[6] + v29) = v14;
            *(_QWORD *)(v8[7] + v29) = v20;
            v31 = v8[2];
            v32 = __OFADD__(v31, 1);
            v33 = v31 + 1;
            if (v32)
              goto LABEL_31;
            v8[2] = v33;
            v34 = v14;
            goto LABEL_28;
          }
        }
        v30 = v8[7];

        *(_QWORD *)(v30 + v29) = v20;
LABEL_28:
        swift_bridgeObjectRelease();

        v9 = &selRef_contentFrameForPage_;
        v4 = v44;
        goto LABEL_6;
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v5 = sub_24A77C028();
      swift_bridgeObjectRelease();
      if (!v5)
        goto LABEL_33;
    }
    v17 = *(id *)&v15[OBJC_IVAR___WOEffortSampleCollection_effortSample];
LABEL_15:
    v19 = v16;
    v20 = objc_msgSend(v17, sel_quantity);

    goto LABEL_16;
  }
LABEL_33:
  v8 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_34:
  v35 = *(void **)(v43 + 184);
  v37 = *(_QWORD *)(v43 + 136);
  v36 = *(_QWORD *)(v43 + 144);
  v39 = *(_QWORD *)(v43 + 120);
  v38 = *(_QWORD *)(v43 + 128);
  v40 = *(_QWORD *)(v43 + 104);
  v41 = *(_QWORD *)(v43 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(_QWORD *))(v43 + 8))(v8);
}

uint64_t sub_24A6E5710()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 200);
  sub_24A779A18();
  v2 = v1;
  v3 = v1;
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 80);
    v23 = *(_QWORD *)(v0 + 72);
    v24 = *(_QWORD *)(v0 + 88);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v25 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_24A77C1CC();
    *(_QWORD *)(v0 + 48) = sub_24A76BC40(v9, v10, &v25);
    sub_24A77BE00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A635000, v4, v5, "Unable to fetch effort samples for multisport workout %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v8, -1, -1);
    MEMORY[0x24BD1A2B4](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    v11 = *(void **)(v0 + 200);
    v13 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v15 = *(void **)(v0 + 200);
  v16 = *(void **)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 128);
  v20 = sub_24A64C2D4(MEMORY[0x24BEE4AF8]);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v20);
}

id EffortUtilities.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EffortUtilities.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortUtilities();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EffortUtilities.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortUtilities();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A6E5A30(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7;
  void (*v9)(id, uint64_t, void *, void *);
  id v10;
  id v11;
  id v12;

  v7 = a3;
  v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_24A64F254(0, &qword_25794BC28);
    v7 = sub_24A77BB18();
  }
  swift_retain();
  v10 = a2;
  v11 = a4;
  v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_24A6E5AEC(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  void *v34;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A778818();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v33 - v14;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v33 - v18;
  if (!a3)
    goto LABEL_7;
  v34 = a1;
  v20 = a3;
  v21 = objc_msgSend(v20, sel_endDate);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  v22 = v21;
  sub_24A7787E8();

  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v23(v8, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_6:

    sub_24A63CD04((uint64_t)v8, &qword_2579478E8);
    a1 = v34;
LABEL_7:
    v25 = objc_msgSend(a2, sel_startDate, v17);
    sub_24A7787E8();

    v20 = objc_msgSend(a2, sel_endDate);
    sub_24A7787E8();
    goto LABEL_8;
  }
  v23(v15, v8, v9);
  v24 = objc_msgSend(v20, sel_startDate);
  sub_24A7787E8();

  a1 = v34;
LABEL_8:

  sub_24A64F254(0, &qword_2579472F0);
  v26 = (void *)MEMORY[0x24BD19294]((id)*MEMORY[0x24BDD36E0]);
  v27 = a1;
  v28 = (void *)sub_24A7787AC();
  v29 = (void *)sub_24A7787AC();
  v30 = objc_msgSend((id)objc_opt_self(), sel_quantitySampleWithType_quantity_startDate_endDate_, v26, v27, v28, v29);

  v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v15, v9);
  v31(v19, v9);
  return v30;
}

void sub_24A6E5DD4(void *a1, void *a2, void *a3, void *a4, void (*a5)(uint64_t, _QWORD), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  id v22;
  id v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  __int128 aBlock;
  __int128 v35;
  uint64_t (*v36)(char, void *);
  _QWORD *v37;

  v30 = a4;
  v11 = sub_24A778428();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24A778854();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void *)_s9WorkoutUI13DemoUtilitiesV11effortValue3forSo10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a2);

  if (v18)
  {
    if (qword_2579469B0 != -1)
      swift_once();
    v19 = objc_msgSend(a2, sel_UUID, v30);
    sub_24A77883C();

    swift_beginAccess();
    v20 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = off_25794BBB8;
    off_25794BBB8 = (_UNKNOWN *)0x8000000000000000;
    sub_24A650F5C((uint64_t)v20, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
    off_25794BBB8 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_endAccess();
    if (a5)
      a5(1, 0);
    v22 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_2579469A8 != -1)
      swift_once();
    aBlock = 0u;
    v35 = 0u;
    v23 = (id)qword_25794BBB0;
    sub_24A77841C();
    v24 = (void *)sub_24A778404();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
    objc_msgSend(v22, sel_postNotification_, v24);

  }
  else
  {
    v24 = sub_24A6E5AEC(a1, a2, a3);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = a1;
    v25[3] = a2;
    v25[4] = a3;
    v25[5] = a5;
    v25[6] = a6;
    v36 = sub_24A6E8ED8;
    v37 = v25;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v35 = sub_24A7208DC;
    *((_QWORD *)&v35 + 1) = &block_descriptor_46;
    v26 = _Block_copy(&aBlock);
    v27 = a3;
    v28 = a1;
    v29 = a2;
    sub_24A6E8EE8((uint64_t)a5);
    swift_release();
    objc_msgSend(v30, sel_relateWorkoutEffortSample_withWorkout_activity_completion_, v24, v29, v27, v26);
    _Block_release(v26);
  }

}

void _s9WorkoutUI15EffortUtilitiesC4save8quantity7workout0G8Activity11healthStore10completionySo10HKQuantityCSg_So9HKWorkoutCSo0mH0CSgSo08HKHealthJ0CySb_s5Error_pSgtcSgtFZ_0(void *a1, void *a2, void *a3, void *a4, void (*a5)(uint64_t, _QWORD), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint8_t *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  id v33;
  _QWORD v34[3];
  uint8_t *v35;
  int v36;
  uint64_t v37;
  os_log_t v38;
  void *v39;
  void *v40;
  void *v41;
  void (*v42)(uint64_t, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a5;
  v43 = a6;
  v41 = a3;
  v9 = sub_24A778854();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A77A018();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v17 = a1;
    v18 = v41;
  }
  else
  {
    v40 = a4;
    sub_24A779A18();
    v39 = a2;
    v19 = a2;
    v20 = sub_24A77A00C();
    v21 = sub_24A77BC74();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v38 = v20;
      v23 = swift_slowAlloc();
      v36 = v22;
      v24 = (uint8_t *)v23;
      v37 = swift_slowAlloc();
      v45 = v37;
      *(_DWORD *)v24 = 136446210;
      v34[2] = v24 + 12;
      v35 = v24;
      v34[1] = v24 + 4;
      v25 = objc_msgSend(v19, sel_UUID);
      sub_24A77883C();

      sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
      v26 = sub_24A77C160();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v44 = sub_24A76BC40(v26, v28, &v45);
      sub_24A77BE00();

      swift_bridgeObjectRelease();
      v29 = v38;
      v30 = v35;
      _os_log_impl(&dword_24A635000, v38, (os_log_type_t)v36, "Storing sentinel for skip for workout %{public}s", v35, 0xCu);
      v31 = v37;
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v31, -1, -1);
      MEMORY[0x24BD1A2B4](v30, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v32 = objc_msgSend((id)objc_opt_self(), sel_appleEffortScoreUnit);
    v17 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v32, 0.0);

    a4 = v40;
    v18 = v41;
    a2 = v39;
  }
  v33 = a1;
  sub_24A6E5DD4(v17, a2, v18, a4, v42, v43);

}

uint64_t sub_24A6E6408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  v4[29] = swift_task_alloc();
  v5 = sub_24A778854();
  v4[30] = v5;
  v4[31] = *(_QWORD *)(v5 - 8);
  v4[32] = swift_task_alloc();
  v6 = sub_24A77A018();
  v4[33] = v6;
  v4[34] = *(_QWORD *)(v6 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A6E64D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 208);
  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  v4 = sub_24A6E5AEC(*(void **)(v0 + 192), v3, v2);
  *(_QWORD *)(v0 + 304) = v4;
  *(_QWORD *)(v0 + 56) = v0 + 320;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_24A6E65A0;
  v5 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v6 = (_QWORD *)(v0 + 80);
  v6[1] = 0x40000000;
  v6[2] = sub_24A6E3E54;
  v6[3] = &block_descriptor_40;
  v6[4] = v5;
  objc_msgSend(v1, sel_relateWorkoutEffortSample_withWorkout_activity_completion_, v4, v3, v2, v6);
  return swift_continuation_await();
}

uint64_t sub_24A6E65A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_24A6E6600()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  os_log_type_t type;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  void *v77;
  NSObject *v78;
  os_log_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;

  v1 = *(unsigned __int8 *)(v0 + 320);
  if ((_DWORD)v1 == 1)
  {
    v2 = *(void **)(v0 + 192);
    v3 = *(void **)(v0 + 200);
    v4 = *(void **)(v0 + 208);
    sub_24A779A18();
    v5 = v2;
    v6 = v3;
    v7 = v4;
    v8 = v5;
    v9 = v6;
    v10 = v7;
    v11 = sub_24A77A00C();
    v12 = sub_24A77BC74();
    if (os_log_type_enabled(v11, v12))
    {
      v76 = v12;
      v78 = v11;
      v63 = *(_QWORD *)(v0 + 256);
      v65 = *(_QWORD *)(v0 + 240);
      v67 = *(_QWORD *)(v0 + 248);
      log = *(os_log_t *)(v0 + 208);
      v13 = *(void **)(v0 + 192);
      v61 = *(id *)(v0 + 200);
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      v82 = v74;
      *(_DWORD *)v14 = 138412802;
      *(_QWORD *)(v0 + 176) = v13;
      v16 = v13;
      sub_24A77BE00();
      v72 = v15;
      *v15 = v13;

      *(_WORD *)(v14 + 12) = 2082;
      v17 = objc_msgSend(v61, sel_UUID);
      sub_24A77883C();

      sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
      v18 = sub_24A77C160();
      v20 = v19;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v63, v65);
      *(_QWORD *)(v0 + 184) = sub_24A76BC40(v18, v20, &v82);
      sub_24A77BE00();
      swift_bridgeObjectRelease();

      *(_WORD *)(v14 + 22) = 2082;
      if (log)
      {
        v21 = objc_msgSend(*(id *)(v0 + 208), sel_UUID);
        sub_24A77883C();

        v22 = 0;
      }
      else
      {
        v22 = 1;
      }
      v52 = *(void **)(v0 + 304);
      logb = *(os_log_t *)(v0 + 296);
      v53 = *(_QWORD *)(v0 + 264);
      v54 = *(_QWORD *)(v0 + 272);
      v55 = *(_QWORD *)(v0 + 232);
      v56 = *(void **)(v0 + 208);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 248) + 56))(v55, v22, 1, *(_QWORD *)(v0 + 240));
      v57 = sub_24A77BDDC();
      v59 = v58;
      sub_24A63CD04(v55, &qword_257948898);
      *(_QWORD *)(v0 + 152) = sub_24A76BC40(v57, v59, &v82);
      sub_24A77BE00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A635000, v78, v76, "Successfully stored perceived effort %@ to workout %{public}s with activity %{public}s", (uint8_t *)v14, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v72, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v74, -1, -1);
      MEMORY[0x24BD1A2B4](v14, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v54 + 8))(logb, v53);
      v1 = 1;
    }
    else
    {
      v43 = *(_QWORD *)(v0 + 296);
      v44 = *(void **)(v0 + 304);
      v45 = *(_QWORD *)(v0 + 264);
      v46 = *(_QWORD *)(v0 + 272);
      v48 = *(void **)(v0 + 200);
      v47 = *(void **)(v0 + 208);
      v49 = *(void **)(v0 + 192);

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v43, v45);
    }
  }
  else
  {
    v23 = *(void **)(v0 + 192);
    v24 = *(void **)(v0 + 200);
    sub_24A779A18();
    v25 = v23;
    v26 = v24;
    v27 = v25;
    v28 = v26;
    v29 = sub_24A77A00C();
    v30 = sub_24A77BC5C();
    v31 = os_log_type_enabled(v29, v30);
    v32 = *(_QWORD *)(v0 + 288);
    v33 = *(_QWORD *)(v0 + 264);
    v80 = *(_QWORD *)(v0 + 272);
    if (v31)
    {
      type = v30;
      v34 = *(_QWORD *)(v0 + 256);
      v64 = *(_QWORD *)(v0 + 240);
      v66 = *(_QWORD *)(v0 + 248);
      v62 = *(id *)(v0 + 200);
      v35 = *(void **)(v0 + 192);
      v77 = *(void **)(v0 + 304);
      v79 = *(os_log_t *)(v0 + 288);
      v36 = swift_slowAlloc();
      loga = v29;
      v37 = (_QWORD *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v82 = v73;
      *(_DWORD *)v36 = 138412546;
      v81 = v1;
      *(_QWORD *)(v0 + 160) = v35;
      v75 = v33;
      v38 = v35;
      sub_24A77BE00();
      *v37 = v35;

      *(_WORD *)(v36 + 12) = 2082;
      v39 = objc_msgSend(v62, sel_UUID);
      sub_24A77883C();

      sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
      v40 = sub_24A77C160();
      v42 = v41;
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v34, v64);
      *(_QWORD *)(v0 + 168) = sub_24A76BC40(v40, v42, &v82);
      sub_24A77BE00();
      v1 = v81;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A635000, loga, type, "Failed to store perceived effort %@ to workout %{public}s with no error.", (uint8_t *)v36, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v37, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v73, -1, -1);
      MEMORY[0x24BD1A2B4](v36, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v80 + 8))(v79, v75);
    }
    else
    {
      v50 = *(void **)(v0 + 192);
      v51 = *(void **)(v0 + 200);

      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v32, v33);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_24A6E6CC0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *log;
  uint64_t v36;
  os_log_type_t type;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];

  v1 = *(void **)(v0 + 312);
  v3 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 200);
  swift_willThrow();
  sub_24A779A18();
  v4 = v3;
  v5 = v2;
  v6 = v1;
  v7 = v4;
  v8 = v5;
  v9 = v1;
  v10 = sub_24A77A00C();
  v11 = sub_24A77BC5C();
  if (os_log_type_enabled(v10, v11))
  {
    v34 = *(id *)(v0 + 312);
    v38 = *(void **)(v0 + 304);
    v39 = *(_QWORD *)(v0 + 272);
    v40 = *(_QWORD *)(v0 + 264);
    v41 = *(_QWORD *)(v0 + 280);
    type = v11;
    v12 = *(_QWORD *)(v0 + 256);
    v33 = *(_QWORD *)(v0 + 248);
    v32 = *(_QWORD *)(v0 + 240);
    v13 = *(void **)(v0 + 192);
    v31 = *(id *)(v0 + 200);
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v42[0] = v36;
    *(_DWORD *)v14 = 138412802;
    *(_QWORD *)(v0 + 128) = v13;
    log = v10;
    v16 = v13;
    sub_24A77BE00();
    *v15 = v13;

    *(_WORD *)(v14 + 12) = 2082;
    v17 = objc_msgSend(v31, sel_UUID);
    sub_24A77883C();

    sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
    v18 = sub_24A77C160();
    v20 = v19;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v12, v32);
    *(_QWORD *)(v0 + 136) = sub_24A76BC40(v18, v20, v42);
    sub_24A77BE00();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 22) = 2082;
    *(_QWORD *)(v0 + 144) = v34;
    v21 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
    v22 = sub_24A77B9D4();
    *(_QWORD *)(v0 + 120) = sub_24A76BC40(v22, v23, v42);
    sub_24A77BE00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A635000, log, type, "Failed to store effort %@ to workout %{public}s : %{public}s", (uint8_t *)v14, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v36, -1, -1);
    MEMORY[0x24BD1A2B4](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  }
  else
  {
    v24 = *(void **)(v0 + 312);
    v26 = *(_QWORD *)(v0 + 272);
    v25 = *(_QWORD *)(v0 + 280);
    v27 = *(_QWORD *)(v0 + 264);
    v29 = *(void **)(v0 + 192);
    v28 = *(void **)(v0 + 200);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void *_s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  _QWORD v34[2];
  uint8_t *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];

  v2 = sub_24A778854();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v34 - v7;
  v9 = sub_24A77A018();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)_s9WorkoutUI13DemoUtilitiesV11effortValue3forSo10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a1);
  if (v13)
  {
    v39 = v10;
    v40 = v9;
    sub_24A779A18();
    v14 = a1;
    v15 = sub_24A77A00C();
    v16 = sub_24A77BC74();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v42[0] = v36;
      v37 = v13;
      *(_DWORD *)v17 = 136315138;
      v34[1] = v17 + 4;
      v35 = v17;
      v18 = objc_msgSend(v14, sel_UUID);
      sub_24A77883C();

      sub_24A6E8E0C(&qword_25794A398, MEMORY[0x24BDCEAB8]);
      v19 = sub_24A77C160();
      v38 = v5;
      v20 = v3;
      v21 = v2;
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
      v41 = sub_24A76BC40(v19, v23, v42);
      v13 = v37;
      sub_24A77BE00();

      v2 = v21;
      v3 = v20;
      v5 = v38;
      swift_bridgeObjectRelease();
      v24 = v16;
      v25 = v35;
      _os_log_impl(&dword_24A635000, v15, v24, "Demo Data overriding effort value for workout %s", v35, 0xCu);
      v26 = v36;
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v26, -1, -1);
      MEMORY[0x24BD1A2B4](v25, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
    if (qword_2579469B0 != -1)
      swift_once();
    v27 = objc_msgSend(v14, sel_UUID);
    sub_24A77883C();

    swift_beginAccess();
    v28 = off_25794BBB8;
    if (*((_QWORD *)off_25794BBB8 + 2) && (v29 = sub_24A64E8D4((uint64_t)v5), (v30 & 1) != 0))
    {
      v31 = *(void **)(v28[7] + 8 * v29);
      swift_endAccess();
      v32 = v31;

      v13 = v31;
    }
    else
    {
      swift_endAccess();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t sub_24A6E7400()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24A6E7424(uint64_t a1)
{
  uint64_t v1;

  sub_24A6E4298(a1, *(void (**)(id))(v1 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_24A6E744C(void *a1, void *a2, uint64_t a3, void *a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void (*v19)(_QWORD *);
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  _QWORD *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  _QWORD aBlock[6];

  v10 = sub_24A778854();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a5;
  _Block_copy(a5);
  v18 = _s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(a1);
  if (v18)
  {
    v19 = (void (*)(_QWORD *))a5[2];
    v35 = v18;
    v19(a5);
    swift_release();

    return;
  }
  v35 = a4;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_24A6E8F28;
  *(_QWORD *)(v20 + 24) = v17;
  swift_retain_n();
  if (objc_msgSend(a1, sel_workoutActivityType) == (id)82 && !a2)
  {
    ((void (*)(_QWORD *, _QWORD))a5[2])(a5, 0);
    swift_release_n();
    swift_release();
    return;
  }
  v21 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID, a3);
  if (v21)
  {
    v22 = v21;
    sub_24A77883C();

    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) != 1)
    {
      v23 = (void *)objc_opt_self();
      v24 = (void *)sub_24A778830();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v25 = objc_msgSend(v23, sel_predicateForObjectWithUUID_, v24);

      v26 = (_QWORD *)swift_allocObject();
      v27 = v34;
      v26[2] = v34;
      v26[3] = sub_24A6E8F24;
      v26[4] = v20;
      v26[5] = a1;
      v26[6] = v35;
      v26[7] = a2;
      v28 = objc_allocWithZone(MEMORY[0x24BDD4148]);
      aBlock[4] = sub_24A6E7430;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24A6E5A30;
      aBlock[3] = &block_descriptor_38;
      v29 = _Block_copy(aBlock);
      v30 = a2;
      v31 = v27;
      swift_retain();
      v32 = a1;
      v33 = objc_msgSend(v28, sel_initWithPredicate_anchor_options_resultsHandler_, v25, 0, 0, v29);
      _Block_release(v29);
      swift_release();
      objc_msgSend(v31, sel_executeQuery_, v33);
      swift_release_n();
      swift_release();

      return;
    }
  }
  else
  {
    swift_release();
    _Block_release(a5);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
    __break(1u);
  }
  swift_release();
  _Block_release(a5);
  __break(1u);
}

id _s9WorkoutUI15EffortUtilitiesC22effortSampleCollection3forAA0cfG0CSaySo010HKQuantityF0CG_tFZ_0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  char v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  id v17;
  void *v18;
  char v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  objc_class *v24;
  char *v25;
  void *v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  objc_super v30;

  v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_24A77C028();
    if (v2)
      goto LABEL_3;
LABEL_29:
    v5 = 0;
    v7 = 0;
LABEL_30:
    swift_bridgeObjectRelease();
    v24 = (objc_class *)type metadata accessor for EffortSampleCollection();
    v25 = (char *)objc_allocWithZone(v24);
    *(_QWORD *)&v25[OBJC_IVAR___WOEffortSampleCollection_effortSample] = v7;
    *(_QWORD *)&v25[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample] = v5;
    v30.receiver = v25;
    v30.super_class = v24;
    return objc_msgSendSuper2(&v30, sel_init);
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_29;
LABEL_3:
  sub_24A64F254(0, (unint64_t *)&qword_2579477A0);
  result = (id)sub_24A64F254(0, &qword_2579472F0);
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v28 = v1 & 0xC000000000000001;
    v27 = (void *)*MEMORY[0x24BDD3588];
    v26 = (void *)*MEMORY[0x24BDD36E0];
    v29 = v1;
    while (1)
    {
      if (v28)
        v9 = (id)MEMORY[0x24BD19588](v4, v1);
      else
        v9 = *(id *)(v1 + 8 * v4 + 32);
      v7 = v9;
      v10 = objc_msgSend(v9, sel_quantityType, v26);
      v11 = (void *)MEMORY[0x24BD19294](v27);
      v12 = sub_24A77BDC4();

      if ((v12 & 1) == 0)
        goto LABEL_15;
      objc_msgSend(v7, sel__creationTimestamp);
      v14 = v13;
      if (v5)
        break;
      if (v13 <= 0.0)
        goto LABEL_15;
      v5 = v7;
      v7 = v6;
      v1 = v29;
      v8 = v2;
LABEL_6:
      ++v4;
      v6 = v7;
      if (v8 == v4)
        goto LABEL_30;
    }
    objc_msgSend(v5, sel__creationTimestamp);
    if (v15 >= v14)
    {
LABEL_15:
      v17 = objc_msgSend(v7, sel_quantityType);
      v18 = (void *)MEMORY[0x24BD19294](v26);
      v19 = sub_24A77BDC4();

      if ((v19 & 1) != 0)
      {
        objc_msgSend(v7, sel__creationTimestamp);
        v21 = v20;
        v1 = v29;
        if (!v6)
        {
          v8 = v2;
          if (v20 > 0.0)
            goto LABEL_6;
          v6 = 0;
          goto LABEL_25;
        }
        objc_msgSend(v6, sel__creationTimestamp);
        if (v22 >= v21)
          v23 = v7;
        else
          v23 = v6;
        if (v22 < v21)
          v6 = v7;
        v7 = v23;
LABEL_24:
        v8 = v2;
LABEL_25:

        v7 = v6;
        goto LABEL_6;
      }
    }
    else
    {
      v16 = v7;
      v7 = v5;
      v5 = v16;
    }
    v1 = v29;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id sub_24A6E7B10(unint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  id v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t j;
  id v27;
  void *v28;
  unint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  unint64_t v49;
  id v50;
  char *v52;
  char **v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t i;
  unint64_t v66;
  id v67;
  unint64_t v68;
  unint64_t v69;

  v61 = a2;
  v3 = sub_24A778854();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BC18);
  MEMORY[0x24BDAC7A8](v57);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char **)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v13 = (unint64_t)&v52 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v52 - v15;
  v69 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_49;
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = v17; i; i = sub_24A77C028())
  {
    v58 = v16;
    v59 = v4;
    v60 = v13;
    v62 = v7;
    v13 = 0;
    v66 = a1 & 0xC000000000000001;
    v55 = a1 & 0xFFFFFFFFFFFFFF8;
    v56 = v3;
    v53 = v10;
    v54 = a1 + 32;
    v10 = &selRef_contentFrameForPage_;
    v16 = (char *)0x24BDD3000;
    v64 = a1;
    v4 = MEMORY[0x24BEE4AF8];
    v7 = (char *)i;
    while (1)
    {
      if (v66)
      {
        v19 = (id)MEMORY[0x24BD19588](v13, a1);
      }
      else
      {
        if (v13 >= *(_QWORD *)(v55 + 16))
          goto LABEL_48;
        v19 = *(id *)(v54 + 8 * v13);
      }
      v20 = v19;
      if (__OFADD__(v13++, 1))
        break;
      v22 = objc_msgSend(v19, sel_samples);
      if (!v22)
        goto LABEL_6;
      v23 = v22;
      v67 = v20;
      sub_24A64F254(0, &qword_25794BC20);
      v24 = sub_24A77BB18();

      v68 = v4;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v25 = sub_24A77C028();
        if (!v25)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          v29 = v4;
          goto LABEL_29;
        }
      }
      else
      {
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v25)
          goto LABEL_28;
      }
      if (v25 < 1)
        goto LABEL_47;
      for (j = 0; j != v25; ++j)
      {
        if ((v24 & 0xC000000000000001) != 0)
          v27 = (id)MEMORY[0x24BD19588](j, v24);
        else
          v27 = *(id *)(v24 + 8 * j + 32);
        v28 = v27;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x24BD19114]();
          if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_24A77BB30();
          sub_24A77BB48();
          sub_24A77BB24();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v29 = v68;
      a1 = v64;
      v7 = (char *)i;
      v10 = &selRef_contentFrameForPage_;
LABEL_29:
      swift_bridgeObjectRelease();
      if (!v61)
      {
        v20 = v67;
        v3 = (uint64_t)objc_msgSend(v67, sel_activity);

        if (v3)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v3 = (uint64_t)&v69;
          sub_24A70D59C(v29);
        }
        goto LABEL_6;
      }
      v20 = v61;
      v30 = objc_msgSend(v67, sel_activity);
      v63 = v29;
      if (v30)
      {
        v31 = v30;
        v32 = objc_msgSend(v30, v10[377]);

        v33 = (uint64_t)v58;
        sub_24A77883C();

        v10 = &selRef_contentFrameForPage_;
        v34 = v59;
        v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
        v36 = v33;
        v37 = 0;
      }
      else
      {
        v33 = (uint64_t)v58;
        v34 = v59;
        v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
        v36 = (uint64_t)v58;
        v37 = 1;
      }
      v38 = v56;
      v35(v36, v37, 1, v56);
      v39 = objc_msgSend(v20, v10[377]);
      v40 = v60;
      sub_24A77883C();

      v35(v40, 0, 1, v38);
      v41 = (uint64_t)v62;
      v3 = (uint64_t)&v62[*(int *)(v57 + 48)];
      sub_24A6E8DC4(v33, (uint64_t)v62);
      sub_24A6E8DC4(v40, v3);
      v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
      if (v42(v41, 1, v38) == 1)
      {
        sub_24A63CD04(v40, &qword_257948898);
        sub_24A63CD04(v33, &qword_257948898);
        v43 = v42(v3, 1, v38);
        v4 = MEMORY[0x24BEE4AF8];
        v7 = (char *)i;
        if (v43 != 1)
          goto LABEL_40;
        sub_24A63CD04((uint64_t)v62, &qword_257948898);
        v10 = &selRef_contentFrameForPage_;
        v18 = v63;
        a1 = v64;
      }
      else
      {
        v44 = (uint64_t)v53;
        sub_24A6E8DC4(v41, (uint64_t)v53);
        v45 = v42(v3, 1, v38);
        v4 = MEMORY[0x24BEE4AF8];
        if (v45 == 1)
        {
          v3 = (uint64_t)&qword_257948898;
          sub_24A63CD04(v60, &qword_257948898);
          sub_24A63CD04((uint64_t)v58, &qword_257948898);
          (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v44, v38);
          v7 = (char *)i;
LABEL_40:
          sub_24A63CD04((uint64_t)v62, &qword_25794BC18);
          v10 = &selRef_contentFrameForPage_;
          a1 = v64;
LABEL_41:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        v46 = v59;
        v47 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v52, v3, v38);
        sub_24A6E8E0C(&qword_257947498, MEMORY[0x24BDCEA98]);
        v3 = sub_24A77B974();
        v48 = *(void (**)(char *, uint64_t))(v46 + 8);
        v48(v47, v38);
        sub_24A63CD04(v60, &qword_257948898);
        sub_24A63CD04((uint64_t)v58, &qword_257948898);
        v48((char *)v44, v38);
        sub_24A63CD04(v41, &qword_257948898);
        a1 = v64;
        v7 = (char *)i;
        v10 = &selRef_contentFrameForPage_;
        v18 = v63;
        if ((v3 & 1) == 0)
          goto LABEL_41;
      }
      v3 = (uint64_t)&v69;
      sub_24A70D59C(v18);
LABEL_5:

LABEL_6:
      if ((char *)v13 == v7)
      {
        swift_bridgeObjectRelease();
        v49 = v69;
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v49 = MEMORY[0x24BEE4AF8];
LABEL_51:
  v50 = _s9WorkoutUI15EffortUtilitiesC22effortSampleCollection3forAA0cfG0CSaySo010HKQuantityF0CG_tFZ_0(v49);
  swift_bridgeObjectRelease();
  return v50;
}

id sub_24A6E81D0(unint64_t a1, void *a2)
{
  char *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v2 = (char *)sub_24A6E7B10(a1, a2);
  v3 = v2;
  v4 = *(void **)&v2[OBJC_IVAR___WOEffortSampleCollection_effortSample];
  if (v4)
  {
    v5 = *(id *)&v2[OBJC_IVAR___WOEffortSampleCollection_effortSample];
  }
  else
  {
    v6 = *(void **)&v2[OBJC_IVAR___WOEffortSampleCollection_estimatedEffortSample];
    if (!v6)
    {

      return 0;
    }
    v5 = v6;
    v4 = 0;
  }
  v7 = v4;
  v8 = objc_msgSend(v5, sel_quantity);

  return v8;
}

void sub_24A6E826C(void *a1, void *a2, void *a3, uint64_t a4, void (**a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  _QWORD *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v10 = sub_24A778854();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a5;
  _Block_copy(a5);
  if (objc_msgSend(a1, sel_workoutActivityType) == (id)82 && a2 == 0)
  {
    a5[2](a5, 0);
    swift_release();
  }
  else
  {
    v32 = a4;
    v19 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID);
    if (v19)
    {
      v20 = v19;
      sub_24A77883C();

      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) != 1)
      {
        v21 = (void *)objc_opt_self();
        v22 = (void *)sub_24A778830();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        v23 = objc_msgSend(v21, sel_predicateForObjectWithUUID_, v22);

        v24 = (_QWORD *)swift_allocObject();
        v24[2] = a3;
        v24[3] = sub_24A6E8D44;
        v24[4] = v17;
        v24[5] = a1;
        v24[6] = v32;
        v24[7] = a2;
        v25 = objc_allocWithZone(MEMORY[0x24BDD4148]);
        aBlock[4] = sub_24A6E7430;
        aBlock[5] = v24;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24A6E5A30;
        aBlock[3] = &block_descriptor_24;
        v26 = _Block_copy(aBlock);
        v27 = a2;
        v28 = a3;
        swift_retain();
        v29 = a1;
        v30 = objc_msgSend(v25, sel_initWithPredicate_anchor_options_resultsHandler_, v23, 0, 0, v26);
        _Block_release(v26);
        swift_release();
        objc_msgSend(v28, sel_executeQuery_, v30);
        swift_release();

        return;
      }
    }
    else
    {
      _Block_release(a5);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
      __break(1u);
    }
    _Block_release(a5);
    __break(1u);
  }
}

uint64_t sub_24A6E8594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  v4 = sub_24A77A018();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v5 = sub_24A77B794();
  v3[14] = v5;
  v3[15] = *(_QWORD *)(v5 - 8);
  v3[16] = swift_task_alloc();
  v6 = sub_24A77B7B8();
  v3[17] = v6;
  v3[18] = *(_QWORD *)(v6 - 8);
  v3[19] = swift_task_alloc();
  v7 = sub_24A778854();
  v3[20] = v7;
  v3[21] = *(_QWORD *)(v7 - 8);
  v3[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A6E86A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 64);
  if (objc_msgSend(*(id *)(v0 + 56), sel_workoutActivityType) == (id)82 && v1 == 0)
  {
    sub_24A779A18();
    v19 = sub_24A77A00C();
    v20 = sub_24A77BC5C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_24A635000, v19, v20, "fetchEffortForWorkout was called with a multisport workout", v21, 2u);
      MEMORY[0x24BD1A2B4](v21, -1, -1);
    }
    v22 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    v3 = 0;
    goto LABEL_12;
  }
  v3 = _s9WorkoutUI15EffortUtilitiesC17fetchDemoExertion03forA0So10HKQuantityCSgSo9HKWorkoutC_tFZ_0(*(void **)(v0 + 56));
  if (v3)
  {
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void *))(v0 + 8))(v3);
  }
  v4 = objc_msgSend(*(id *)(v0 + 56), sel_fiui_finalWorkoutUUID);
  v5 = *(_QWORD *)(v0 + 184);
  if (v4)
  {
    v6 = v4;
    v8 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 160);
    sub_24A77883C();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v7, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v9);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v9);
    if ((_DWORD)result != 1)
    {
      v11 = *(_QWORD *)(v0 + 184);
      v12 = *(_QWORD *)(v0 + 160);
      v13 = *(_QWORD *)(v0 + 168);
      v14 = (void *)objc_opt_self();
      v15 = (void *)sub_24A778830();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      v16 = objc_msgSend(v14, sel_predicateForObjectWithUUID_, v15);
      *(_QWORD *)(v0 + 192) = v16;

      v17 = v16;
      sub_24A77B7AC();
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v18;
      *v18 = v0;
      v18[1] = sub_24A6E8938;
      return sub_24A77B7A0();
    }
  }
  else
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 160));
  }
  __break(1u);
  return result;
}

uint64_t sub_24A6E8938()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A6E899C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  id v10;

  v1 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(void **)(v0 + 64);
  v9 = sub_24A77B788();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v10 = sub_24A6E81D0(v9, v8);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_24A6E8A7C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 208);
  sub_24A779A18();
  v2 = v1;
  v3 = v1;
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 208);
    v23 = *(void **)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 144);
    v25 = *(_QWORD *)(v0 + 136);
    v26 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 80);
    v22 = *(_QWORD *)(v0 + 96);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v27 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_24A77C1CC();
    *(_QWORD *)(v0 + 48) = sub_24A76BC40(v9, v10, &v27);
    sub_24A77BE00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A635000, v4, v5, "Unable to fetch effort samples for workout: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v8, -1, -1);
    MEMORY[0x24BD1A2B4](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    v11 = *(void **)(v0 + 208);
    v12 = *(void **)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t type metadata accessor for EffortUtilities()
{
  return objc_opt_self();
}

uint64_t sub_24A6E8D20()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_24A6E8D44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t objectdestroy_3Tm()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void sub_24A6E8D98(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  sub_24A6E4608(a1, a2, a3, a4, *(void **)(v4 + 16), *(void (**)(void))(v4 + 24), *(_QWORD *)(v4 + 32), *(void **)(v4 + 40), *(_QWORD *)(v4 + 48), *(void **)(v4 + 56));
}

uint64_t sub_24A6E8DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6E8E0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24A778854();
    result = MEMORY[0x24BD1A1F4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A6E8E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6E8E94()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6E8ED8(char a1, void *a2)
{
  uint64_t v2;

  return sub_24A6E3648(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(uint64_t (**)(_QWORD, id))(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_24A6E8EE8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationRaceCompleteView()
{
  return &type metadata for WorkoutNotificationRaceCompleteView;
}

uint64_t sub_24A6E8F3C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24A6E8F4C(int64x2_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  char v16;
  int64x2_t v17;
  uint64_t v18;
  id v19;
  id v20;

  v3 = *v1;
  v4 = (void *)v1[1];
  if (!(*v1 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
      goto LABEL_3;
LABEL_10:
    v6 = 0;
    v7 = 0;
    v10 = 0;
    v15 = 0;
    v12 = 0;
    v16 = 0;
    v17 = 0uLL;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v18 = sub_24A77C028();
  swift_bridgeObjectRelease();
  if (v18 < 3)
    goto LABEL_10;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = MEMORY[0x24BD19588](0, v3);
    v19 = v4;
    v7 = MEMORY[0x24BD19588](1, v3);
    KeyPath = swift_getKeyPath();
    v20 = v19;
    v10 = MEMORY[0x24BD19588](2, v3);
    goto LABEL_8;
  }
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v5 == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 40);
  v8 = swift_getKeyPath();
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    KeyPath = v8;
    v10 = *(_QWORD *)(v3 + 48);
    v11 = v4;
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_8:
    v12 = swift_getKeyPath();
    v13 = v4;
    swift_retain();
    v14 = v13;
    swift_retain();
    v15 = v14;
    swift_release();

    swift_release();
    v16 = 2;
    v17 = vdupq_n_s64(2uLL);
    v17.i64[0] = KeyPath;
LABEL_11:
    a1->i64[0] = v6;
    a1->i64[1] = (uint64_t)v15;
    a1[1].i64[0] = 0;
    a1[1].i64[1] = v7;
    a1[2].i64[0] = (uint64_t)v15;
    a1[2].i64[1] = 0;
    a1[3] = v17;
    a1[4].i64[0] = v10;
    a1[4].i64[1] = (uint64_t)v15;
    a1[5].i64[0] = 0;
    a1[5].i64[1] = v12;
    a1[6].i8[0] = v16;
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_24A6E9120@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1[1];
  v12 = *v1;
  v13 = v3;
  v4 = v1[3];
  v14 = v1[2];
  v15 = v4;
  v16 = *((_QWORD *)v1 + 8);
  v17 = v12;
  if ((unint64_t)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_24A77C028();
    sub_24A646AE8((uint64_t)&v17);
    if (v10 >= 4)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) >= 4)
  {
LABEL_3:
    swift_getKeyPath();
    v5 = swift_allocObject();
    v6 = v15;
    *(_OWORD *)(v5 + 48) = v14;
    *(_OWORD *)(v5 + 64) = v6;
    *(_QWORD *)(v5 + 80) = v16;
    v7 = v13;
    *(_OWORD *)(v5 + 16) = v12;
    *(_OWORD *)(v5 + 32) = v7;
    sub_24A646BBC((uint64_t)&v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
    sub_24A646BEC();
    sub_24A646C9C();
    sub_24A77B5E4();
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947110);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947110);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

uint64_t sub_24A6E92A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  int64x2_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = v1[7];
  v11 = v1[8];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BC30);
  v13 = a1 + *(int *)(v12 + 56);
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)v13 = v14;
  *(_OWORD *)(v13 + 8) = xmmword_24A781A30;
  *(_OWORD *)(v13 + 24) = xmmword_24A781A40;
  *(_OWORD *)(v13 + 40) = xmmword_24A781A50;
  sub_24A6E8F4C(&v23);
  v15 = v29;
  v16 = v24;
  v17 = v25;
  v18 = v26;
  v19 = v27;
  v20 = v28;
  *(int64x2_t *)a1 = v23;
  *(_OWORD *)(a1 + 16) = v16;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v18;
  *(_OWORD *)(a1 + 64) = v19;
  *(_OWORD *)(a1 + 80) = v20;
  *(_BYTE *)(a1 + 96) = v15;
  v21 = a1 + *(int *)(v12 + 52);
  v23.i64[0] = v3;
  v23.i64[1] = v4;
  *(_QWORD *)&v24 = v5;
  *((_QWORD *)&v24 + 1) = v6;
  *(_QWORD *)&v25 = v7;
  *((_QWORD *)&v25 + 1) = v8;
  *(_QWORD *)&v26 = v9;
  *((_QWORD *)&v26 + 1) = v10;
  *(_QWORD *)&v27 = v11;
  return sub_24A6E9120(v21);
}

uint64_t sub_24A6E93F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_24A6E9428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794BC38;
  if (!qword_25794BC38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BC30);
    result = MEMORY[0x24BD1A1F4](&unk_24A782F48, v1);
    atomic_store(result, (unint64_t *)&qword_25794BC38);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutUIBundlePlaceholder()
{
  return objc_opt_self();
}

uint64_t StrideLengthMetricView.init(metricType:strideLength:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_24A6E94A8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;

  if (*v0 == 26)
  {
    if (qword_2544D6160 == -1)
      goto LABEL_6;
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 27)
    return 0xD000000000000012;
  if (qword_2544D6160 != -1)
    goto LABEL_9;
LABEL_6:
  swift_beginAccess();
  v1 = (id)qword_2544D6158;
  v2 = sub_24A77856C();

  return v2;
}

uint64_t sub_24A6E961C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  _QWORD v17[2];

  v1 = sub_24A778674();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v17 - v11;
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v13 = (id)qword_2544D6158;
    v14 = sub_24A77856C();

  }
  else
  {
    v17[0] = *(_QWORD *)(v0 + 8);
    sub_24A77886C();
    sub_24A6971B4();
    sub_24A7785E4();
    sub_24A778668();
    MEMORY[0x24BD15C34](v4, v6);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    sub_24A6971F8();
    sub_24A77B8E4();
    v15(v12, v6);
    return v17[1];
  }
  return v14;
}

id StrideLengthMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id result;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v5 = sub_24A6E961C();
  v6 = v5;
  v8 = v7;
  if ((v3 & 1) != 0)
  {
    v9 = 0;
    v10 = 0xE000000000000000;
LABEL_5:
    result = (id)sub_24A6E94A8();
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = result;
    *(_QWORD *)(a1 + 40) = v15;
    *(_WORD *)(a1 + 48) = 0;
    return result;
  }
  v16 = v5;
  v11 = v4;
  result = objc_msgSend(v11, sel_localizedShortUnitStringForDistanceUnit_, 1);
  if (result)
  {
    v13 = result;
    v9 = sub_24A77B9B0();
    v10 = v14;

    v6 = v16;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A6E997C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StrideLengthMetricView()
{
  return &type metadata for StrideLengthMetricView;
}

double PacerRow.secondsAheadOfPacer.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t PacerRow.init(secondsAheadOfPacer:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;

  if (qword_2579467B8 != -1)
    swift_once();
  v4 = qword_257959848;
  v5 = unk_257959850;
  v6 = qword_257959858;
  KeyPath = swift_getKeyPath();
  *(double *)a1 = a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_BYTE *)(a1 + 40) = 0;
  swift_retain();
  return swift_retain();
}

uint64_t PacerRow.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t KeyPath;
  unsigned __int8 v11;
  unsigned __int8 v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = *(double *)v1;
  v5 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  swift_retain_n();
  swift_retain_n();
  sub_24A63BEC0(v7, v8);
  sub_24A63BEC0(v7, v8);
  sub_24A63E608(v7, v8, &v19);
  sub_24A63BEDC(v7, v8);
  swift_release();
  swift_release();
  sub_24A63BEDC(v7, v8);
  v9 = v19;
  KeyPath = swift_getKeyPath();
  v11 = sub_24A77ACD8();
  v12 = sub_24A77ACF0();
  v13 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v11)
    v13 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v12)
    v13 = sub_24A77ACE4();
  result = sub_24A77A390();
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(double *)(a1 + 24) = v3;
  *(double *)(a1 + 32) = round(v3);
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = 0x4066800000000000;
  *(_QWORD *)(a1 + 56) = KeyPath;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_24A6E9BD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PacerRow(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_24A63BEDC(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for PacerRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_24A63BEC0(v5, v6);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for PacerRow(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = v2[3];
  v4 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_24A63BEC0(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t assignWithTake for PacerRow(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PacerRow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PacerRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PacerRow()
{
  return &type metadata for PacerRow;
}

unint64_t sub_24A6E9E1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BC40;
  if (!qword_25794BC40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BC48);
    v2[0] = sub_24A6E9E88();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BC40);
  }
  return result;
}

unint64_t sub_24A6E9E88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BC50;
  if (!qword_25794BC50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BC58);
    v2[0] = sub_24A6E9EF4();
    v2[1] = sub_24A69F3D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BC50);
  }
  return result;
}

unint64_t sub_24A6E9EF4()
{
  unint64_t result;

  result = qword_25794BC60;
  if (!qword_25794BC60)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7845A4, &type metadata for PacerView);
    atomic_store(result, (unint64_t *)&qword_25794BC60);
  }
  return result;
}

_QWORD *sub_24A6E9F38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v5;
    v6 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v6;
    v7 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v7;
    v8 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v8;
    v9 = *(int *)(a3 + 44);
    v10 = (uint64_t *)((char *)a2 + v9);
    v11 = (_QWORD *)(a1 + v9);
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_24A77A5DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
    }
    else
    {
      *v11 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_24A6EA074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_24A77A5DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_24A6EA114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(int *)(a3 + 44);
  v9 = (_QWORD *)(a2 + v8);
  v10 = (_QWORD *)(a1 + v8);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_24A77A5DC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  }
  else
  {
    *v10 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24A6EA21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 44);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_24A63CD04(a1 + v6, &qword_2579498A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_24A77A5DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A6EA390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v5 = *(int *)(a3 + 44);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_24A77A5DC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24A6EA460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 44);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_24A63CD04(a1 + v6, &qword_2579498A0);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_24A77A5DC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24A6EA5A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6EA5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2579498A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_24A6EA62C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6EA638(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2579498A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for EffortZoneView()
{
  uint64_t result;

  result = qword_25794BCC0;
  if (!qword_25794BCC0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A6EA6EC()
{
  unint64_t v0;

  sub_24A68D620();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24A6EA798()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24A6EA7A8()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = *(double *)(v0 + 24);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (uint64_t)v1;
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v7 = *(_QWORD *)(v2 + 8 * v5 + 32);
      v8 = v4 + v7;
      if (__OFADD__(v4, v7))
        break;
      v9 = v8 - 1;
      if (__OFSUB__(v8, 1))
        goto LABEL_17;
      if (v9 < v4)
        goto LABEL_18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_24A64D8DC(0, v6[2] + 1, 1, v6);
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
        v6 = sub_24A64D8DC((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
      ++v5;
      v6[2] = v11 + 1;
      v12 = &v6[2 * v11];
      v12[4] = v4;
      v12[5] = v9;
      v4 = v8;
      if (v3 == v5)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t sub_24A6EA908@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *(*v37)@<X0>(uint64_t@<X8>);
  double *v38;
  unint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  double *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t OpaqueTypeConformance2;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  double v96;

  v89 = a3;
  v5 = sub_24A77AC24();
  v87 = *(_QWORD *)(v5 - 8);
  v88 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v86 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_24A77A4F8();
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v70 = v7;
  v74 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_24A77AB40();
  MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_24A77A3E4();
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v67 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD10);
  v82 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v79 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EffortZoneView();
  v90 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v91 = v12;
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD18);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD20);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD28);
  v73 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v71 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD30);
  v83 = *(_QWORD *)(v21 - 8);
  v84 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v81 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A4EC();
  v24 = v23;
  v72 = a1;
  sub_24A77A4EC();
  v26 = v25;
  v27 = *a2;
  *v16 = sub_24A77B668();
  v16[1] = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD38);
  sub_24A6EB08C(a2, (uint64_t)v16 + *(int *)(v29 + 44), v24, v26, *(double *)&v27);
  v30 = sub_24A77B668();
  v32 = v31;
  v33 = a2[6];
  v34 = (uint64_t)a2;
  v35 = a2[7];
  v92 = a2[5];
  v93 = v33;
  v94 = v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
  MEMORY[0x24BD18B74](&v96, v36);
  v37 = 0;
  v38 = 0;
  if (v96 > 0.0)
  {
    sub_24A65FAD0((uint64_t)a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EffortZoneView);
    v39 = (*(unsigned __int8 *)(v90 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
    v38 = (double *)swift_allocObject();
    v38[2] = v24;
    v38[3] = v26;
    *((_QWORD *)v38 + 4) = v27;
    sub_24A6EC938((uint64_t)v13, (uint64_t)v38 + v39);
    v37 = sub_24A6ECC24;
  }
  sub_24A63CCC0((uint64_t)v16, (uint64_t)v19, &qword_25794BD18);
  v65 = v17;
  v40 = &v19[*(int *)(v17 + 36)];
  *(_QWORD *)v40 = v37;
  *((_QWORD *)v40 + 1) = v38;
  *((_QWORD *)v40 + 2) = v30;
  *((_QWORD *)v40 + 3) = v32;
  sub_24A63CD04((uint64_t)v16, &qword_25794BD18);
  sub_24A77ABAC();
  v41 = v67;
  sub_24A77A3CC();
  v66 = v34;
  sub_24A65FAD0(v34, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EffortZoneView);
  v42 = v75;
  v43 = v74;
  v44 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v72, v77);
  v45 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  v46 = (v91 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (*(unsigned __int8 *)(v42 + 80) + v46 + 24) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v48 = swift_allocObject();
  sub_24A6EC938((uint64_t)v13, v48 + v45);
  v49 = (double *)(v48 + v46);
  *v49 = v24;
  v49[1] = v26;
  *((_QWORD *)v49 + 2) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v48 + v47, v43, v44);
  sub_24A63C880(&qword_25794BD48, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_24A63C880(&qword_25794BD50, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  v50 = v79;
  v51 = v78;
  sub_24A77B5FC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v41, v51);
  sub_24A77A3FC();
  v52 = sub_24A6ECB7C();
  v53 = sub_24A63CFF0(&qword_25794BD78, &qword_25794BD10, MEMORY[0x24BDED570]);
  v54 = v71;
  v55 = v65;
  v56 = v85;
  sub_24A77B29C();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v50, v56);
  sub_24A63CD04((uint64_t)v19, &qword_25794BD20);
  v57 = v86;
  sub_24A77AC0C();
  v92 = v55;
  v93 = v56;
  v94 = v52;
  v95 = v53;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v60 = v80;
  v59 = v81;
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v88);
  v61 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v54, v60);
  MEMORY[0x24BDAC7A8](v61);
  *(&v64 - 2) = v66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD80);
  v92 = v60;
  v93 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_24A63CFF0(&qword_25794BD88, &qword_25794BD80, MEMORY[0x24BDF4B20]);
  v62 = v84;
  sub_24A77B254();
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v59, v62);
}

uint64_t sub_24A6EB08C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v54 = a2;
  v9 = type metadata accessor for EffortZoneView();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDB8);
  MEMORY[0x24BDAC7A8](v12);
  v53 = (uint64_t)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v43 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDC0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (_QWORD *)((char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDC8);
  MEMORY[0x24BDAC7A8](v49);
  v21 = (_QWORD *)((char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v22);
  v48 = (uint64_t)v43 - v23;
  v24 = sub_24A77B668();
  v44 = v25;
  v45 = v24;
  v26 = (char *)v19 + *(int *)(v17 + 36);
  v27 = sub_24A77A924();
  v28 = *a1;
  *(_QWORD *)v26 = v27;
  *((_QWORD *)v26 + 1) = v28;
  v26[16] = 0;
  v43[1] = &v26[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794BDD0) + 44)];
  sub_24A6EA7A8();
  v55 = v29;
  swift_getKeyPath();
  v30 = (double *)swift_allocObject();
  v30[2] = a3;
  v30[3] = a4;
  v30[4] = a5;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947610);
  v46 = sub_24A63CFF0(&qword_25794BDE0, &qword_25794BDD8, MEMORY[0x24BEE12D8]);
  sub_24A6ECCE8();
  sub_24A65422C();
  sub_24A77B5E4();
  v31 = v44;
  *v19 = v45;
  v19[1] = v31;
  sub_24A63CCC0((uint64_t)v19, (uint64_t)v21 + *(int *)(v49 + 36), &qword_25794BDC0);
  *v21 = 0;
  sub_24A63CD04((uint64_t)v19, &qword_25794BDC0);
  v32 = v48;
  sub_24A63F6C4((uint64_t)v21, v48, &qword_25794BDC8);
  v33 = sub_24A77A924();
  v34 = *a1;
  *(_QWORD *)v16 = v33;
  *((_QWORD *)v16 + 1) = v34;
  v16[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDF0);
  sub_24A6EA7A8();
  v55 = v35;
  swift_getKeyPath();
  v36 = v50;
  sub_24A65FAD0((uint64_t)a1, v50, (uint64_t (*)(_QWORD))type metadata accessor for EffortZoneView);
  v37 = (*(unsigned __int8 *)(v51 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v38 = (double *)swift_allocObject();
  v38[2] = a3;
  v38[3] = a4;
  v38[4] = a5;
  sub_24A6EC938(v36, (uint64_t)v38 + v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDF8);
  sub_24A63CFF0(&qword_25794BE00, &qword_25794BDF8, MEMORY[0x24BDF4700]);
  sub_24A77B5E4();
  sub_24A63CCC0(v32, (uint64_t)v21, &qword_25794BDC8);
  v39 = v53;
  sub_24A63CCC0((uint64_t)v16, v53, &qword_25794BDB8);
  v40 = v54;
  sub_24A63CCC0((uint64_t)v21, v54, &qword_25794BDC8);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE08);
  sub_24A63CCC0(v39, v40 + *(int *)(v41 + 48), &qword_25794BDB8);
  sub_24A63CD04((uint64_t)v16, &qword_25794BDB8);
  sub_24A63CD04(v32, &qword_25794BDC8);
  sub_24A63CD04(v39, &qword_25794BDB8);
  return sub_24A63CD04((uint64_t)v21, &qword_25794BDC8);
}

void sub_24A6EB4EC(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char v20;
  double v21;
  char v22;
  __int128 v23;

  v9 = *a1;
  v10 = a1[1];
  v11 = sub_24A71C0C8(*a1);
  v19 = a3;
  v20 = LOBYTE(a4);
  v21 = a5;
  v12 = sub_24A71C0C8(v10);
  if (__OFSUB__(v10, v9))
  {
    __break(1u);
  }
  else if (!__OFADD__(v10 - v9, 1))
  {
    v13 = (a3 + a5 * -3.0) / 10.0;
    v14 = v13 * 0.5;
    v15 = v13 / a4;
    v16 = 1.0 - v13 / a4;
    v17 = v13 / a4 + v16 * v12;
    v18 = v15 + v16 * v11;
    sub_24A77B668();
    sub_24A77A4B0();
    *(double *)a2 = v18;
    *(double *)(a2 + 8) = v17;
    *(double *)(a2 + 16) = v14;
    *(double *)(a2 + 24) = v19;
    *(_BYTE *)(a2 + 32) = v20;
    *(double *)(a2 + 40) = v21;
    *(_BYTE *)(a2 + 48) = v22;
    *(_OWORD *)(a2 + 56) = v23;
    return;
  }
  __break(1u);
}

uint64_t *sub_24A6EB614@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;

  v7 = *result;
  v8 = result[1];
  if (__OFSUB__(v8, *result))
  {
    __break(1u);
  }
  else if (!__OFADD__(v8 - *result, 1))
  {
    *(_QWORD *)a3 = sub_24A77A9FC();
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE10);
    return (uint64_t *)sub_24A6EB6D4(v7, v8, a2, (_QWORD *)(a3 + *(int *)(v13 + 44)), a4, a5, a6);
  }
  __break(1u);
  return result;
}

uint64_t sub_24A6EB6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  double *v29;
  char *v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;

  v47 = a4;
  v13 = type metadata accessor for EffortZoneView();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE18);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE20);
  MEMORY[0x24BDAC7A8](v45);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE28);
  MEMORY[0x24BDAC7A8](v46);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v44 - v24;
  *(_QWORD *)v18 = sub_24A77A924();
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 0;
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE30);
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if (((a2 - a1) & 0x8000000000000000) == 0)
  {
    *(_QWORD *)&v48 = 0;
    *((_QWORD *)&v48 + 1) = a2 - a1;
    swift_getKeyPath();
    sub_24A65FAD0(a3, (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for EffortZoneView);
    v27 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v28 = swift_allocObject();
    sub_24A6EC938((uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27);
    v29 = (double *)(v28 + ((v15 + v27 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v29 = a5;
    v29[1] = a6;
    v29[2] = a7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257948280);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE38);
    sub_24A6ECFC0();
    sub_24A6ED02C();
    sub_24A77B5E4();
    sub_24A77B668();
    sub_24A77A4B0();
    sub_24A63CCC0((uint64_t)v18, (uint64_t)v20, &qword_25794BE18);
    v30 = &v20[*(int *)(v45 + 36)];
    v31 = v49;
    *(_OWORD *)v30 = v48;
    *((_OWORD *)v30 + 1) = v31;
    *((_OWORD *)v30 + 2) = v50;
    sub_24A63CD04((uint64_t)v18, &qword_25794BE18);
    v32 = sub_24A77ACCC();
    sub_24A77A390();
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v40 = v39;
    sub_24A63CCC0((uint64_t)v20, (uint64_t)v22, &qword_25794BE20);
    v41 = &v22[*(int *)(v46 + 36)];
    *v41 = v32;
    *((_QWORD *)v41 + 1) = v34;
    *((_QWORD *)v41 + 2) = v36;
    *((_QWORD *)v41 + 3) = v38;
    *((_QWORD *)v41 + 4) = v40;
    v41[40] = 0;
    sub_24A63CD04((uint64_t)v20, &qword_25794BE20);
    sub_24A63F6C4((uint64_t)v22, (uint64_t)v25, &qword_25794BE28);
    sub_24A63CCC0((uint64_t)v25, (uint64_t)v22, &qword_25794BE28);
    v42 = v47;
    *v47 = 0;
    *((_BYTE *)v42 + 8) = 1;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BE60);
    sub_24A63CCC0((uint64_t)v22, (uint64_t)v42 + *(int *)(v43 + 48), &qword_25794BE28);
    sub_24A63CD04((uint64_t)v25, &qword_25794BE28);
    return sub_24A63CD04((uint64_t)v22, &qword_25794BE28);
  }
  __break(1u);
  return result;
}

double sub_24A6EBAA0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  __int128 v14;

  v2 = sub_24A77A930();
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A77B668();
  sub_24A77A4B0();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = 0x3FD6666666666666;
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v12;
  *(_BYTE *)(a1 + 104) = v13;
  result = *(double *)&v14;
  *(_OWORD *)(a1 + 112) = v14;
  return result;
}

_QWORD *sub_24A6EBBDC@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *result;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v10 = sub_24A77B5A8();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD90);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD98);
  MEMORY[0x24BDAC7A8](v44);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDA0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[6];
  v22 = a1[7];
  *(_QWORD *)&v46 = a1[5];
  *((_QWORD *)&v46 + 1) = v21;
  *(_QWORD *)&v47 = v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
  result = MEMORY[0x24BD18B74](&v45, v23);
  v25 = round(v45);
  if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v25 < 9.22337204e18)
  {
    v26 = (a3 + a5 * -3.0) / 10.0;
    v43 = v18;
    v27 = (uint64_t)v25;
    *(double *)&v46 = a3;
    *((double *)&v46 + 1) = a4;
    *(double *)&v47 = a5;
    v28 = v26 / a4 + (1.0 - v26 / a4) * sub_24A71C0C8((uint64_t)v25);
    sub_24A77A4EC();
    v30 = v28 * v29;
    *(double *)&v46 = a3;
    *((double *)&v46 + 1) = a4;
    *(double *)&v47 = a5;
    v31 = sub_24A71C074(v27);
    v32 = *MEMORY[0x24BDEEB68];
    v33 = sub_24A77A9D8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v12, v32, v33);
    v34 = sub_24A77B368();
    sub_24A65FAD0((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E8]);
    *(_QWORD *)&v15[*(int *)(v13 + 36)] = v34;
    sub_24A6ECC78((uint64_t)v12);
    sub_24A77B668();
    sub_24A77A4B0();
    sub_24A63CCC0((uint64_t)v15, (uint64_t)v17, &qword_25794BD90);
    v35 = &v17[*(int *)(v44 + 36)];
    v36 = v47;
    *(_OWORD *)v35 = v46;
    *((_OWORD *)v35 + 1) = v36;
    *((_OWORD *)v35 + 2) = v48;
    sub_24A63CD04((uint64_t)v15, &qword_25794BD90);
    sub_24A77A4EC();
    v38 = v37 - v30 * 0.5;
    sub_24A63CCC0((uint64_t)v17, (uint64_t)v20, &qword_25794BD98);
    v39 = (double *)&v20[*(int *)(v43 + 36)];
    *v39 = v26 * 0.5 + v31;
    v39[1] = v38;
    sub_24A63CD04((uint64_t)v17, &qword_25794BD98);
    v40 = sub_24A77B374();
    sub_24A63CCC0((uint64_t)v20, a2, &qword_25794BDA0);
    v41 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794BDA8) + 36);
    *(_QWORD *)v41 = v40;
    *(_OWORD *)(v41 + 8) = xmmword_24A784BC0;
    *(_QWORD *)(v41 + 24) = 0x4000000000000000;
    return (_QWORD *)sub_24A63CD04((uint64_t)v20, &qword_25794BDA0);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_24A6EBF88(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  __int128 v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  os_log_type_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD v59[2];
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75[3];
  double v76;
  double v77;

  v66 = a3;
  v65 = sub_24A77A8DC();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24A77A5DC();
  MEMORY[0x24BDAC7A8](v14);
  v73 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v59 - v19;
  v21 = *(_QWORD *)(a2 + 32);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = 0;
    v24 = (uint64_t *)(v21 + 32);
    v25 = *(_QWORD *)(v21 + 16);
    while (1)
    {
      v26 = *v24++;
      v27 = __OFADD__(v23, v26);
      v23 += v26;
      if (v27)
        break;
      if (!--v25)
      {
        v28 = (double)v23;
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_37;
  }
  v28 = 0.0;
LABEL_7:
  v77 = v28;
  v29 = *(double *)(a2 + 24);
  if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
    goto LABEL_38;
  if (v29 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v30 = 0;
  if (v22)
  {
    v31 = (uint64_t *)(v21 + 32);
    while (1)
    {
      v32 = *v31++;
      v27 = __OFADD__(v30, v32);
      v30 += v32;
      if (v27)
        break;
      if (!--v22)
        goto LABEL_14;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_14:
  v33 = (uint64_t)v29;
  if (v30 < (uint64_t)v29)
  {
LABEL_41:
    __break(1u);
    return;
  }
  v69 = v17;
  v70 = v20;
  v71 = v18;
  v34 = (a4 + a6 * -3.0) / 10.0;
  v35 = *(int *)(type metadata accessor for EffortZoneView() + 44);
  v59[0] = a2;
  v68 = a2 + v35;
  v67 = *MEMORY[0x24BDED100];
  *(_QWORD *)&v36 = 136315138;
  v60 = v36;
  v59[1] = MEMORY[0x24BEE4AD8] + 8;
  v72 = v13;
  v62 = a1;
  v61 = v11;
  while (1)
  {
    v37 = 3.0;
    v74 = v33 - 1;
    if ((unint64_t)(v33 - 1) <= 7)
      v37 = dbl_24A784CA0[v33 - 1];
    sub_24A63CCC0(v68, (uint64_t)v13, &qword_2579498A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v39 = v70;
      v38 = v71;
      v40 = v69;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v13, v69);
    }
    else
    {
      v41 = sub_24A77BC68();
      v42 = sub_24A77AC78();
      if (os_log_type_enabled(v42, v41))
      {
        v43 = swift_slowAlloc();
        v44 = swift_slowAlloc();
        v75[0] = v44;
        *(_DWORD *)v43 = v60;
        *(_QWORD *)(v43 + 4) = sub_24A76BC40(0x694474756F79614CLL, 0xEF6E6F6974636572, v75);
        _os_log_impl(&dword_24A635000, v42, v41, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BD1A2B4](v44, -1, -1);
        MEMORY[0x24BD1A2B4](v43, -1, -1);
      }

      v45 = v63;
      sub_24A77A8D0();
      v39 = v70;
      swift_getAtKeyPath();
      swift_release();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v45, v65);
      v38 = v71;
      v40 = v69;
    }
    v46 = v73;
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v73, v67, v40);
    v47 = sub_24A77A5D0();
    v48 = *(void (**)(char *, uint64_t))(v38 + 8);
    v48(v46, v40);
    v48(v39, v40);
    if ((v47 & 1) != 0)
    {
      sub_24A77A3D8();
    }
    else
    {
      sub_24A77A4EC();
      v51 = v50;
      sub_24A77A3D8();
      v49 = v51 - v52;
    }
    v53 = (double)v33;
    v13 = v72;
    if (v49 <= v34 + v34 * ((double)v33 + -1.0) + v37 * a6)
      goto LABEL_31;
    if (v74 + 1 == v30)
      break;
    v33 = v74 + 2;
    if (__OFADD__(v74 + 1, 1))
    {
      __break(1u);
LABEL_31:
      v77 = v53;
      goto LABEL_33;
    }
  }
  v53 = v77;
LABEL_33:
  v54 = v59[0];
  v55 = *(_QWORD *)(v59[0] + 48);
  v56 = *(_QWORD *)(v59[0] + 56);
  v75[0] = *(_QWORD *)(v59[0] + 40);
  v75[1] = v55;
  v75[2] = v56;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
  v58 = MEMORY[0x24BD18B74](&v76, v57);
  if (v53 != v76)
  {
    MEMORY[0x24BDAC7A8](v58);
    v59[-2] = v54;
    v59[-1] = &v77;
    sub_24A77B68C();
    sub_24A77A54C();
    swift_release();
  }
}

uint64_t sub_24A6EC508()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
  sub_24A77B56C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDB0);
  return sub_24A77B56C();
}

uint64_t sub_24A6EC5A0@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2544D6160 != -1)
LABEL_11:
    swift_once();
  swift_beginAccess();
  v8 = (id)qword_2544D6158;
  v9 = sub_24A77856C();
  v11 = v10;

  v25 = v9;
  v26 = v11;
  v12 = a1[6];
  v13 = *((_QWORD *)a1 + 7);
  v22 = *((_QWORD *)a1 + 5);
  v23 = v12;
  v24 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
  sub_24A77B578();
  v14 = *((_QWORD *)a1 + 4);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = 0;
    v17 = (uint64_t *)(v14 + 32);
    do
    {
      v18 = *v17++;
      v19 = __OFADD__(v16, v18);
      v16 += v18;
      if (v19)
      {
        __break(1u);
        goto LABEL_11;
      }
      --v15;
    }
    while (v15);
    if ((v16 & 0x8000000000000000) == 0)
      goto LABEL_9;
    __break(1u);
  }
  v16 = 0;
LABEL_9:
  v23 = (double)v16;
  v21 = 0x3FF0000000000000;
  v22 = 0;
  sub_24A645928();
  sub_24A77B620();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_24A6EC7B4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_24A65FAD0(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for EffortZoneView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_24A6EC938((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_24A6EC97C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_24A6EC860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for EffortZoneView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_24A77A5DC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24A6EC938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EffortZoneView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6EC97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EffortZoneView() - 8) + 80);
  return sub_24A6EA908(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

uint64_t sub_24A6EC9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for EffortZoneView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_24A77A4F8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = v0 + v3 + *(int *)(v1 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_24A77A5DC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 24) & ~v7), v5);
  return swift_deallocObject();
}

void sub_24A6ECAFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for EffortZoneView() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A77A4F8() - 8) + 80);
  sub_24A6EBF88(a1, v1 + v4, v1 + ((v5 + v6 + 24) & ~v6), *(double *)(v1 + v5), *(double *)(v1 + v5 + 8), *(double *)(v1 + v5 + 16));
}

unint64_t sub_24A6ECB7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BD58;
  if (!qword_25794BD58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BD20);
    v2[0] = sub_24A63CFF0(&qword_25794BD60, &qword_25794BD18, MEMORY[0x24BDF4750]);
    v2[1] = sub_24A63CFF0(&qword_25794BD68, &qword_25794BD70, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BD58);
  }
  return result;
}

uint64_t sub_24A6ECC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6EC5A0(*(double **)(v1 + 16), a1);
}

_QWORD *sub_24A6ECC24@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EffortZoneView() - 8) + 80);
  return sub_24A6EBBDC((double *)((char *)v1 + ((v3 + 40) & ~v3)), a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24A6ECC78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A77B5A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A6ECCB4()
{
  return sub_24A6EC508();
}

uint64_t sub_24A6ECCCC()
{
  return swift_deallocObject();
}

void sub_24A6ECCDC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;

  sub_24A6EB4EC(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_24A6ECCE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794BDE8;
  if (!qword_25794BDE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948280);
    v2 = MEMORY[0x24BEE1778];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE08E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794BDE8);
  }
  return result;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for EffortZoneView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 40) & ~v2) + *(int *)(v1 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_24A77A5DC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t *sub_24A6ECE20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EffortZoneView() - 8) + 80);
  return sub_24A6EB614(a1, (uint64_t)v2 + ((v5 + 40) & ~v5), a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_24A6ECE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for EffortZoneView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_24A77A5DC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

double sub_24A6ECF58@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for EffortZoneView();
  return sub_24A6EBAA0(a1);
}

unint64_t sub_24A6ECFC0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_25794BE40;
  if (!qword_25794BE40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948280);
    v2 = sub_24A646C58();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE0908], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794BE40);
  }
  return result;
}

unint64_t sub_24A6ED02C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BE48;
  if (!qword_25794BE48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BE38);
    v2[0] = sub_24A63CFF0(&qword_25794BE50, &qword_25794BE58, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BE48);
  }
  return result;
}

uint64_t sub_24A6ED0B0()
{
  return sub_24A63CFF0(&qword_25794BE68, qword_25794BE70, MEMORY[0x24BDEC6F8]);
}

_QWORD *sub_24A6ED0DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *View;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24A778818();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    v14 = View[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = sub_24A77B80C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = View[6];
    v19 = &v9[v18];
    v20 = &v10[v18];
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = v20[8];
    *(_QWORD *)&v9[View[7]] = *(_QWORD *)&v10[View[7]];
    v21 = View[8];
    v22 = &v9[v21];
    v23 = &v10[v21];
    v22[8] = v23[8];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v24 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)v7 + v24) = *(_QWORD *)((char *)a2 + v24);
    v25 = a3[9];
    *(_QWORD *)((char *)v7 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)v7 + v25) = *(_QWORD *)((char *)a2 + v25);
    v26 = a3[11];
    *(_QWORD *)((char *)v7 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v7 + v26) = *(_QWORD *)((char *)a2 + v26);
    v27 = a3[13];
    *(_QWORD *)((char *)v7 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
    *((_BYTE *)v7 + v27) = *((_BYTE *)a2 + v27);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_24A6ED254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 20);
  v7 = sub_24A77B80C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  return swift_release();
}

_QWORD *sub_24A6ED2F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *View;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778818();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v12 = View[5];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = sub_24A77B80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = View[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)&v7[View[7]] = *(_QWORD *)&v8[View[7]];
  v19 = View[8];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v20[8] = v21[8];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  v23 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  v24 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  v25 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_24A6ED44C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *View;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778818();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v11 = View[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_24A77B80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = View[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  *(_QWORD *)&v7[View[7]] = *(_QWORD *)&v8[View[7]];
  swift_retain();
  swift_release();
  v19 = View[8];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_QWORD *sub_24A6ED5CC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *View;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778818();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v11 = View[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_24A77B80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = View[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)&v7[View[7]] = *(_QWORD *)&v8[View[7]];
  v18 = View[8];
  v19 = &v7[v18];
  v20 = &v8[v18];
  v19[8] = v20[8];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v21 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  v22 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  v23 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  v24 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  return a1;
}

_QWORD *sub_24A6ED70C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *View;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778818();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  View = (int *)type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v11 = View[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_24A77B80C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = View[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)&v7[View[7]] = *(_QWORD *)&v8[View[7]];
  swift_release();
  v18 = View[8];
  v19 = &v7[v18];
  v20 = &v8[v18];
  v19[8] = v20[8];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v21 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  v22 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  swift_release();
  v23 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  v24 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  return a1;
}

uint64_t sub_24A6ED864()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6ED870(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t View;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, View);
  }
}

uint64_t sub_24A6ED8EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24A6ED8F8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t View;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(View - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, View);
  }
  return result;
}

uint64_t type metadata accessor for TrainingLoadSmoothedLineTrace()
{
  uint64_t result;

  result = qword_25794BED0;
  if (!qword_25794BED0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A6ED9A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TrainingLoadViewModel.ChartPoint(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A6EDA4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6EDA5C()
{
  uint64_t v0;
  uint64_t result;

  sub_24A77B368();
  v0 = sub_24A77B374();
  result = swift_release();
  qword_257959950 = v0;
  return result;
}

uint64_t sub_24A6EDA9C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainingLoadSmoothedLineTrace() + 36)))
  {
    swift_retain_n();
    sub_24A77A39C();
    v1 = sub_24A77A4BC();
    swift_release();
  }
  else
  {
    if (qword_2579469B8 != -1)
      swift_once();
    swift_retain();
    return sub_24A77A4BC();
  }
  return v1;
}

uint64_t sub_24A6EDB78@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[3];
  char *v35;
  uint64_t SmoothedLineTrace;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v46 = a1;
  SmoothedLineTrace = type metadata accessor for TrainingLoadSmoothedLineTrace();
  v2 = *(_QWORD *)(SmoothedLineTrace - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](SmoothedLineTrace);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF28);
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF30);
  v8 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  v41 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF38);
  v11 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  v43 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF40);
  v14 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  v45 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v39 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *v1;
  sub_24A65FAD0((uint64_t)v1, (uint64_t)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadSmoothedLineTrace);
  v16 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = swift_allocObject();
  sub_24A6EEE58((uint64_t)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  swift_bridgeObjectRetain();
  v34[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF48);
  v34[1] = sub_24A778818();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF50);
  sub_24A63CFF0(&qword_25794BF58, &qword_25794BF48, MEMORY[0x24BEE12D8]);
  v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF60);
  v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF68);
  v52 = sub_24A77A2D0();
  v53 = MEMORY[0x24BDB8230];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = sub_24A63CFF0(&qword_25794BF70, &qword_25794BF68, MEMORY[0x24BDF4750]);
  v52 = v18;
  v53 = v19;
  v54 = OpaqueTypeConformance2;
  v55 = v21;
  swift_getOpaqueTypeConformance2();
  sub_24A63C880(&qword_25794BF78, type metadata accessor for TrainingLoadViewModel.ChartPoint, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModel.ChartPoint);
  sub_24A77B5CC();
  sub_24A77A408();
  v22 = sub_24A6EEEE8();
  v23 = v35;
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)&v52);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
  v51 = sub_24A6EDA9C();
  v47 = v4;
  v48 = v22;
  v24 = swift_getOpaqueTypeConformance2();
  v25 = MEMORY[0x24BDEBF80];
  v26 = MEMORY[0x24BDEBF68];
  v27 = v37;
  v28 = v40;
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v28);
  v47 = v28;
  v48 = v25;
  v49 = v24;
  v50 = v26;
  v29 = swift_getOpaqueTypeConformance2();
  v30 = v39;
  v31 = v42;
  sub_24A77A0A8();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v31);
  v47 = v31;
  v48 = v29;
  swift_getOpaqueTypeConformance2();
  v32 = v44;
  sub_24A77A0B4();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v30, v32);
}

uint64_t sub_24A6EE018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;

  v26 = a2;
  v28 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A578);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_24A77A2D0();
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF60);
  v27 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v20 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF50);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v22 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A9C0();
  sub_24A778818();
  v19 = a1;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v11 = a1 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 24);
  v12 = *(double *)v11;
  if (*(_BYTE *)(v11 + 8))
    v12 = 0.0;
  v31 = v12;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A2C4();
  type metadata accessor for TrainingLoadSmoothedLineTrace();
  v13 = v26;
  v14 = MEMORY[0x24BDB8230];
  v15 = v20;
  sub_24A77A0E4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  v29 = v19;
  v30 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF68);
  v31 = *(double *)&v6;
  v32 = v14;
  swift_getOpaqueTypeConformance2();
  sub_24A63CFF0(&qword_25794BF70, &qword_25794BF68, MEMORY[0x24BDF4750]);
  v16 = v22;
  v17 = v24;
  sub_24A77A0CC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v17);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v28, v16, v25);
}

uint64_t sub_24A6EE3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  *a3 = sub_24A77B668();
  a3[1] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF88);
  return sub_24A6EE41C(a1, a2, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_24A6EE41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *SmoothedLineTrace;
  uint64_t v21;
  uint64_t View;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  double *v45;
  char v46;
  double *v47;
  int v48;
  uint64_t v49;
  double *v50;
  char v51;
  double *v52;
  int v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  char v90;
  char v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;

  v87 = a3;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF90);
  MEMORY[0x24BDAC7A8](v85);
  v81 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BF98);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A77A69C();
  MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_24A77B698();
  v10 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFA0);
  MEMORY[0x24BDAC7A8](v77);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFA8);
  MEMORY[0x24BDAC7A8](v80);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v86 = (uint64_t)&v73 - v18;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFB0);
  MEMORY[0x24BDAC7A8](v83);
  v84 = (uint64_t *)((char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  SmoothedLineTrace = (int *)type metadata accessor for TrainingLoadSmoothedLineTrace();
  v21 = a2 + SmoothedLineTrace[5];
  if ((sub_24A7787DC() & 1) == 0)
    goto LABEL_3;
  View = type metadata accessor for TrainingLoadViewModel.ChartPoint(0);
  v76 = a2;
  sub_24A77B80C();
  v75 = SmoothedLineTrace;
  sub_24A63C880(&qword_25794BB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  a2 = v76;
  SmoothedLineTrace = v75;
  sub_24A77BE24();
  if (v95)
    goto LABEL_3;
  v44 = *(int *)(View + 24);
  v45 = (double *)(a1 + v44);
  v46 = *(_BYTE *)(a1 + v44 + 8);
  v47 = (double *)(v21 + v44);
  v48 = *(unsigned __int8 *)(v21 + v44 + 8);
  if ((v46 & 1) != 0)
  {
    if (!v48)
      goto LABEL_3;
  }
  else
  {
    if (*v45 != *v47)
      LOBYTE(v48) = 1;
    if ((v48 & 1) != 0)
      goto LABEL_3;
  }
  if ((sub_24A77B32C() & 1) == 0)
    goto LABEL_3;
  v49 = *(int *)(View + 32);
  v50 = (double *)(a1 + v49);
  v51 = *(_BYTE *)(a1 + v49 + 8);
  v52 = (double *)(v21 + v49);
  v53 = *(unsigned __int8 *)(v21 + v49 + 8);
  if ((v51 & 1) != 0)
  {
    if (v53)
      goto LABEL_22;
LABEL_3:
    if (*(_BYTE *)(a2 + SmoothedLineTrace[6]) == 1)
    {
      v23 = sub_24A77B350();
      v24 = v78;
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDF50A0], v78);
      v25 = (uint64_t)v79;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v79, v12, v24);
      sub_24A65FAD0(v25, (uint64_t)&v14[*(int *)(v77 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
      *(_QWORD *)v14 = v23;
      *((_WORD *)v14 + 4) = 256;
      swift_retain();
      sub_24A6EEFE4(v25);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
      swift_release();
      sub_24A77B668();
      sub_24A77A4B0();
      sub_24A63CCC0((uint64_t)v14, (uint64_t)v16, &qword_25794BFA0);
      v26 = &v16[*(int *)(v80 + 36)];
      v27 = v93;
      *(_OWORD *)v26 = v92;
      *((_OWORD *)v26 + 1) = v27;
      *((_OWORD *)v26 + 2) = v94;
      sub_24A63CD04((uint64_t)v14, &qword_25794BFA0);
      v28 = v86;
      sub_24A63F6C4((uint64_t)v16, v86, &qword_25794BFA8);
      v29 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 28));
      swift_retain();
      sub_24A77B668();
      sub_24A77A4B0();
      v30 = v95;
      v31 = v96;
      v32 = v97;
      v33 = v98;
      v34 = *(unsigned __int8 *)(a2 + SmoothedLineTrace[13]);
      v35 = v99;
      v36 = v100;
      if (v34)
        v37 = 0.6;
      else
        v37 = 1.0;
      sub_24A63CCC0(v28, (uint64_t)v16, &qword_25794BFA8);
      v38 = v81;
      sub_24A63CCC0((uint64_t)v16, v81, &qword_25794BFA8);
      v39 = v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794BFC0) + 48);
      *(_QWORD *)v39 = v29;
      *(_WORD *)(v39 + 8) = 256;
      *(_QWORD *)(v39 + 16) = v30;
      *(_BYTE *)(v39 + 24) = v31;
      *(_QWORD *)(v39 + 32) = v32;
      *(_BYTE *)(v39 + 40) = v33;
      *(_QWORD *)(v39 + 48) = v35;
      *(_QWORD *)(v39 + 56) = v36;
      *(double *)(v39 + 64) = v37;
      swift_retain();
      sub_24A63CD04((uint64_t)v16, &qword_25794BFA8);
      sub_24A63CCC0(v38, (uint64_t)v84, &qword_25794BF90);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFC8);
      sub_24A6EF020();
      sub_24A63CFF0(&qword_25794BFF8, &qword_25794BF90, MEMORY[0x24BDF5428]);
      v40 = (uint64_t)v82;
      sub_24A77AB28();
      sub_24A63CD04(v38, &qword_25794BF90);
      swift_release();
      sub_24A63CD04(v86, &qword_25794BFA8);
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFB8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
      return sub_24A63F6C4(v40, v87, &qword_25794BF98);
    }
    else
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFB8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v87, 1, 1, v43);
    }
  }
  if (*v50 != *v52)
    LOBYTE(v53) = 1;
  if ((v53 & 1) != 0)
    goto LABEL_3;
LABEL_22:
  sub_24A77B338();
  v54 = sub_24A77B32C();
  swift_release();
  if ((v54 & 1) != 0)
    v55 = sub_24A77B368();
  else
    v55 = swift_retain();
  v86 = v55;
  sub_24A77B668();
  sub_24A77A4B0();
  v80 = v92;
  v56 = BYTE8(v92);
  v79 = (char *)v93;
  v57 = BYTE8(v93);
  v77 = *((_QWORD *)&v94 + 1);
  v78 = v94;
  v82 = (char *)sub_24A77B668();
  v81 = v58;
  v74 = sub_24A77B350();
  sub_24A77B668();
  sub_24A77A4B0();
  v59 = v95;
  v60 = v96;
  v61 = v97;
  v62 = v98;
  v63 = v99;
  v73 = v100;
  sub_24A77B338();
  v64 = sub_24A77B32C();
  swift_release();
  if ((v64 & 1) != 0)
  {
    sub_24A77B368();
    v65 = sub_24A77B374();
    swift_release();
  }
  else
  {
    v65 = sub_24A77B374();
  }
  v91 = v56;
  v90 = v57;
  v89 = v60;
  v66 = *(_QWORD *)(v76 + v75[12]);
  v88 = v62;
  v67 = v84;
  *v84 = v86;
  *((_WORD *)v67 + 4) = 256;
  v67[2] = v80;
  *((_BYTE *)v67 + 24) = v56;
  v67[4] = v79;
  *((_BYTE *)v67 + 40) = v57;
  v68 = v77;
  v67[6] = v78;
  v67[7] = v68;
  v67[8] = v74;
  *((_WORD *)v67 + 36) = 256;
  v67[10] = v59;
  *((_BYTE *)v67 + 88) = v60;
  v67[12] = v61;
  *((_BYTE *)v67 + 104) = v62;
  v69 = v73;
  v67[14] = v63;
  v67[15] = v69;
  v70 = v81;
  v67[16] = v82;
  v67[17] = v70;
  v67[18] = v65;
  v67[19] = v66;
  v67[20] = 0;
  v67[21] = 0;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFC8);
  sub_24A6EF020();
  sub_24A63CFF0(&qword_25794BFF8, &qword_25794BF90, MEMORY[0x24BDF5428]);
  v71 = v87;
  sub_24A77AB28();
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BFB8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 0, 1, v72);
}

uint64_t sub_24A6EED7C()
{
  uint64_t v0;
  uint64_t SmoothedLineTrace;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  SmoothedLineTrace = type metadata accessor for TrainingLoadSmoothedLineTrace();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(SmoothedLineTrace - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(SmoothedLineTrace + 20);
  v5 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(type metadata accessor for TrainingLoadViewModel.ChartPoint(0) + 20);
  v7 = sub_24A77B80C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6EEE58(uint64_t a1, uint64_t a2)
{
  uint64_t SmoothedLineTrace;

  SmoothedLineTrace = type metadata accessor for TrainingLoadSmoothedLineTrace();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(SmoothedLineTrace - 8) + 32))(a2, a1, SmoothedLineTrace);
  return a2;
}

uint64_t sub_24A6EEE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrainingLoadSmoothedLineTrace() - 8) + 80);
  return sub_24A6EE018(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_24A6EEEE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[5];

  result = qword_25794BF80;
  if (!qword_25794BF80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF28);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF60);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF68);
    sub_24A77A2D0();
    v4[1] = v2;
    v4[2] = v3;
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[4] = sub_24A63CFF0(&qword_25794BF70, &qword_25794BF68, MEMORY[0x24BDF4750]);
    v4[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8490], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25794BF80);
  }
  return result;
}

uint64_t sub_24A6EEFDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_24A6EE3C8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_24A6EEFE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A77A69C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A6EF020()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BFD0;
  if (!qword_25794BFD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BFC8);
    v2[0] = sub_24A6EF08C();
    v2[1] = MEMORY[0x24BDEC468];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BFD0);
  }
  return result;
}

unint64_t sub_24A6EF08C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794BFD8;
  if (!qword_25794BFD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BFE0);
    v2[0] = sub_24A674768();
    v2[1] = sub_24A63CFF0(&qword_25794BFE8, &qword_25794BFF0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794BFD8);
  }
  return result;
}

uint64_t sub_24A6EF110()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF38);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF30);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794BF28);
  sub_24A6EEEE8();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t StepType.symbolName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t result;
  uint64_t v9;

  v1 = 0x2E6E6F7276656863;
  v2 = sub_24A779A6C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v0, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BEC6070] || v7 == *MEMORY[0x24BEC6068])
    return v1;
  if (v7 == *MEMORY[0x24BEC6078])
    return 0xD00000000000001BLL;
  if (v7 == *MEMORY[0x24BEC6080])
    return 0xD00000000000001DLL;
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

uint64_t StepDetailView.init(step:formattingManager:compressed:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[2] = 0;
  return result;
}

uint64_t sub_24A6EF390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[16];

  v1 = sub_24A77A9B4();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_24A779A6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v15[-v7];
  v9 = *(void **)(v0 + 8);
  sub_24A779304();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
  v10 = (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 88))(v5, v2);
  if (v10 == *MEMORY[0x24BEC6070]
    || v10 == *MEMORY[0x24BEC6068]
    || v10 == *MEMORY[0x24BEC6078]
    || v10 == *MEMORY[0x24BEC6080])
  {
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    sub_24A77B3EC();
    v11 = (void *)sub_24A7792F8();
    NLSessionActivityGoal.intervalDisplayString(formattingManager:)(v9);

    if ((sub_24A7792B0() & 1) != 0 && (WorkoutStep.alertDisplayString(formattingManager:)((uint64_t)v9), v12))
    {
      WorkoutStep.targetIconName.getter();
      sub_24A77B3EC();
      sub_24A77A9A8();
      sub_24A77A99C();
      sub_24A77A984();
      sub_24A77A99C();
      sub_24A77A990();
      swift_bridgeObjectRelease();
      sub_24A77A99C();
      sub_24A77A984();
      sub_24A77A99C();
      sub_24A77A990();
      swift_bridgeObjectRelease();
      sub_24A77A99C();
      sub_24A77A9CC();
      v13 = sub_24A77AFC0();
      swift_release();
    }
    else
    {
      sub_24A77A9A8();
      sub_24A77A99C();
      sub_24A77A984();
      sub_24A77A99C();
      sub_24A77A990();
      swift_bridgeObjectRelease();
      sub_24A77A99C();
      sub_24A77A9CC();
      v13 = sub_24A77AFC0();
    }
    swift_release();
    return v13;
  }
  else
  {
    result = sub_24A77C01C();
    __break(1u);
  }
  return result;
}

uint64_t WorkoutStep.alertDisplayString(formattingManager:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t);
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v1 = sub_24A779898();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - v6;
  v8 = sub_24A779730();
  v31 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - v12;
  if (sub_24A7792A4())
  {
    v14 = (void *)sub_24A779298();
    v15 = sub_24A779394();
LABEL_9:
    swift_release();

    return v15;
  }
  v16 = v7;
  v30 = v4;
  v17 = v32;
  sub_24A7792BC();
  sub_24A7797D8();
  swift_release();
  v18 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v10, *MEMORY[0x24BEC5D08], v8);
  sub_24A63C880(&qword_25794C000, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5D18], MEMORY[0x24BEC5D20]);
  v19 = sub_24A77B974();
  v20 = *(void (**)(char *, uint64_t))(v18 + 8);
  v20(v10, v8);
  v20(v13, v8);
  if ((v19 & 1) == 0)
  {
    sub_24A7792BC();
    v14 = (void *)sub_24A779298();
    v27 = MEMORY[0x24BD16DC8](v17, v14);
LABEL_8:
    v15 = v27;
    goto LABEL_9;
  }
  sub_24A7792E0();
  v21 = v16;
  sub_24A7799D0();
  swift_release();
  v22 = v2;
  v23 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v24 = v30;
  v23(v30, *MEMORY[0x24BEC5ED0], v1);
  sub_24A63C880(&qword_25794C008, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5ED8], MEMORY[0x24BEC5EE0]);
  v25 = sub_24A77B974();
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v24, v1);
  v26(v21, v1);
  if ((v25 & 1) == 0)
  {
    sub_24A7792E0();
    v14 = (void *)sub_24A779298();
    v27 = sub_24A7799B8();
    goto LABEL_8;
  }
  return 0;
}

uint64_t StepDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  double v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a1;
  v2 = sub_24A77AD50();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C010);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C018);
  MEMORY[0x24BDAC7A8](v44);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C020);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C028);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (double *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *v1;
  if (*v1)
  {
    v20 = *((double *)v1 + 2);
    v21 = (char *)v1[1];
    swift_retain();
    *(_QWORD *)v18 = sub_24A77AA08();
    v18[1] = v20;
    *((_BYTE *)v18 + 16) = 0;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C050);
    sub_24A6EFE4C(v19, v21, (uint64_t *)((char *)v18 + *(int *)(v22 + 44)), v20);
    sub_24A63CCC0((uint64_t)v18, (uint64_t)v15, &qword_25794C028);
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_25794C038, &qword_25794C028, MEMORY[0x24BDF4700]);
    sub_24A6F08E4();
    sub_24A77AB28();
    swift_release();
    v23 = (uint64_t)v18;
    v24 = &qword_25794C028;
  }
  else
  {
    v38 = v9;
    v39 = v12;
    v25 = v4;
    v26 = v42;
    v27 = v43;
    v40 = v13;
    v41 = v16;
    v28 = v44;
    *(_QWORD *)v7 = sub_24A77A930();
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 1;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C030);
    sub_24A6F03C0((uint64_t)&v7[*(int *)(v29 + 44)]);
    if (qword_257946810 != -1)
      swift_once();
    sub_24A77ADEC();
    v30 = v25;
    sub_24A77AD38();
    v31 = sub_24A77AE10();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v27);
    KeyPath = swift_getKeyPath();
    v33 = (uint64_t)v38;
    sub_24A63CCC0((uint64_t)v7, (uint64_t)v38, &qword_25794C010);
    v34 = (uint64_t *)(v33 + *(int *)(v28 + 36));
    *v34 = KeyPath;
    v34[1] = v31;
    sub_24A63CD04((uint64_t)v7, &qword_25794C010);
    v35 = v33;
    v36 = (uint64_t)v39;
    sub_24A63F6C4(v35, (uint64_t)v39, &qword_25794C018);
    sub_24A63CCC0(v36, (uint64_t)v15, &qword_25794C018);
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_25794C038, &qword_25794C028, MEMORY[0x24BDF4700]);
    sub_24A6F08E4();
    sub_24A77AB28();
    v23 = v36;
    v24 = &qword_25794C018;
  }
  return sub_24A63CD04(v23, v24);
}

uint64_t sub_24A6EFE4C@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  int v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;

  v58 = a2;
  v62 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v6);
  v60 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_24A77B410();
  v8 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C068);
  MEMORY[0x24BDAC7A8](v57);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C070);
  MEMORY[0x24BDAC7A8](v64);
  v70 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v69 = (uint64_t)&v53 - v15;
  v16 = sub_24A77AD50();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = WorkoutStep.displayString.getter();
  v72 = v20;
  sub_24A645928();
  v21 = sub_24A77AFD8();
  v65 = v22;
  v66 = v21;
  v56 = v23;
  v68 = v24;
  KeyPath = swift_getKeyPath();
  if (qword_257946810 != -1)
    swift_once();
  sub_24A77ADEC();
  sub_24A77AD38();
  v63 = sub_24A77AE10();
  v55 = *(void (**)(char *, uint64_t))(v17 + 8);
  v55(v19, v16);
  v61 = swift_getKeyPath();
  v71 = a1;
  v72 = v58;
  v73 = a4;
  v25 = sub_24A6EF390();
  v27 = v26;
  v53 = v28;
  v58 = v19;
  v30 = v29 & 1;
  v31 = swift_getKeyPath();
  v54 = v16;
  v32 = v31;
  v33 = v10;
  v34 = v10;
  v35 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v34, *MEMORY[0x24BDF40B0], v59);
  v36 = swift_getKeyPath();
  v37 = *(int *)(v6 + 28);
  v38 = v60;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v60 + v37, v33, v35);
  *v38 = v36;
  sub_24A63CCC0((uint64_t)v38, (uint64_t)&v12[*(int *)(v57 + 36)], &qword_2579492E8);
  *(_QWORD *)v12 = v25;
  *((_QWORD *)v12 + 1) = v27;
  v12[16] = v30;
  *((_QWORD *)v12 + 3) = v53;
  *((_QWORD *)v12 + 4) = v32;
  *((_QWORD *)v12 + 5) = 1;
  v12[48] = 0;
  sub_24A6436C4(v25, v27, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A63CD04((uint64_t)v38, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v33, v35);
  sub_24A64596C(v25, v27, v30);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_257946818 != -1)
    swift_once();
  v39 = v56 & 1;
  sub_24A77AE04();
  v40 = v58;
  sub_24A77AD38();
  v41 = sub_24A77AE10();
  v55(v40, v54);
  v42 = swift_getKeyPath();
  v43 = v70;
  sub_24A63CCC0((uint64_t)v12, v70, &qword_25794C068);
  v44 = (uint64_t *)(v43 + *(int *)(v64 + 36));
  *v44 = v42;
  v44[1] = v41;
  sub_24A63CD04((uint64_t)v12, &qword_25794C068);
  v45 = v69;
  sub_24A63F6C4(v43, v69, &qword_25794C070);
  sub_24A63CCC0(v45, v43, &qword_25794C070);
  v47 = v65;
  v46 = v66;
  v48 = v62;
  v49 = v63;
  *v62 = v66;
  v48[1] = v47;
  *((_BYTE *)v48 + 16) = v39;
  v50 = KeyPath;
  v48[3] = v68;
  v48[4] = v50;
  v48[5] = 1;
  *((_BYTE *)v48 + 48) = 0;
  v48[7] = v61;
  v48[8] = v49;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C078);
  sub_24A63CCC0(v43, (uint64_t)v48 + *(int *)(v51 + 48), &qword_25794C070);
  sub_24A6436C4(v46, v47, v39);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24A63CD04(v45, &qword_25794C070);
  sub_24A63CD04(v43, &qword_25794C070);
  sub_24A64596C(v46, v47, v39);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6F03C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26[2];

  v26[0] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t *)((char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_24A77B410();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - v12;
  v14 = sub_24A77B3C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDF40B0], v4);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v3 + *(int *)(v1 + 28), v7, v4);
  *v3 = KeyPath;
  sub_24A63CCC0((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 36), &qword_2579492E8);
  *v10 = v14;
  swift_retain();
  sub_24A63CD04((uint64_t)v3, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  sub_24A63F6C4((uint64_t)v10, (uint64_t)v13, &qword_2579492F0);
  sub_24A77A9C0();
  v16 = sub_24A77AFC0();
  v18 = v17;
  v20 = v19;
  LOBYTE(v7) = v21 & 1;
  v22 = swift_getKeyPath();
  sub_24A63CCC0((uint64_t)v13, (uint64_t)v10, &qword_2579492F0);
  v23 = v26[0];
  sub_24A63CCC0((uint64_t)v10, v26[0], &qword_2579492F0);
  v24 = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794C080) + 48);
  *(_QWORD *)v24 = v16;
  *(_QWORD *)(v24 + 8) = v18;
  *(_BYTE *)(v24 + 16) = (_BYTE)v7;
  *(_QWORD *)(v24 + 24) = v20;
  *(_QWORD *)(v24 + 32) = v22;
  *(_QWORD *)(v24 + 40) = 1;
  *(_BYTE *)(v24 + 48) = 0;
  sub_24A6436C4(v16, v18, (char)v7);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A63CD04((uint64_t)v13, &qword_2579492F0);
  sub_24A64596C(v16, v18, (char)v7);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_24A63CD04((uint64_t)v10, &qword_2579492F0);
}

uint64_t StepType.scaleableImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_24A779A6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0, v1, v3);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x24BEC6070]
    || v6 == *MEMORY[0x24BEC6068]
    || v6 == *MEMORY[0x24BEC6078]
    || v6 == *MEMORY[0x24BEC6080])
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v7 = (id)qword_2544D6158;
    v8 = (void *)sub_24A77B980();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v8, v7);

    if (v9)
      return (uint64_t)v9;
    __break(1u);
  }
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

unint64_t sub_24A6F08E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C040;
  if (!qword_25794C040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C018);
    v2[0] = sub_24A63CFF0(&qword_25794C048, &qword_25794C010, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C040);
  }
  return result;
}

uint64_t sub_24A6F0980()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for StepDetailView(uint64_t a1)
{
  swift_release();

}

_QWORD *_s9WorkoutUI14StepDetailViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for StepDetailView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for StepDetailView(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for StepDetailView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StepDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StepDetailView()
{
  return &type metadata for StepDetailView;
}

unint64_t sub_24A6F0B34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C058;
  if (!qword_25794C058)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C060);
    v2[0] = sub_24A63CFF0(&qword_25794C038, &qword_25794C028, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A6F08E4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C058);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RightTrapezoid(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RightTrapezoid(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RightTrapezoid()
{
  return &type metadata for RightTrapezoid;
}

unint64_t sub_24A6F0C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794C088;
  if (!qword_25794C088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C090);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEB358], v1);
    atomic_store(result, (unint64_t *)&qword_25794C088);
  }
  return result;
}

double sub_24A6F0C74@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>)
{
  double MaxY;
  double v16;
  double v17;
  double v18;
  double v19;
  double result;
  CGFloat v21;
  CGFloat v22;
  __int128 v24;
  __int128 v25;
  char v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  sub_24A77AF0C();
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  MaxY = CGRectGetMaxY(v27);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  v16 = (1.0 - a6) * (MaxY - CGRectGetMinY(v28));
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  v17 = CGRectGetMaxY(v29);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  v18 = (1.0 - a7) * (v17 - CGRectGetMinY(v30));
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  v21 = CGRectGetMinX(v31) + a8;
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  v22 = CGRectGetMaxX(v32) - a8;
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  CGRectGetMaxX(v33);
  v34.origin.x = a2;
  v34.origin.y = a3;
  v34.size.width = a4;
  v34.size.height = a5;
  CGRectGetMaxY(v34);
  v35.origin.x = a2;
  v35.origin.y = a3;
  v35.size.width = a4;
  v35.size.height = a5;
  CGRectGetMinX(v35);
  v36.origin.x = a2;
  v36.origin.y = a3;
  v36.size.width = a4;
  v36.size.height = a5;
  CGRectGetMaxY(v36);
  sub_24A77AEE8();
  sub_24A77AEE8();
  sub_24A77AEE8();
  sub_24A77AEE8();
  v19 = atan2(v18 + a8 - (v16 + a8), v22 - v21);
  __sincos_stret(v19);
  sub_24A77AEF4();
  sub_24A77AF00();
  sub_24A77AF00();
  sub_24A77AF00();
  sub_24A77AF00();
  sub_24A77AF00();
  sub_24A77AF00();
  sub_24A77AF00();
  result = *(double *)&v24;
  *(_OWORD *)a1 = v24;
  *(_OWORD *)(a1 + 16) = v25;
  *(_BYTE *)(a1 + 32) = v26;
  return result;
}

double sub_24A6F0F6C@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double *v5;
  double result;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  sub_24A6F0C74((uint64_t)v9, a2, a3, a4, a5, *v5, v5[1], v5[2]);
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_24A6F0FB4()
{
  sub_24A6F10D8();
  return sub_24A77B470();
}

uint64_t sub_24A6F1004()
{
  sub_24A6F10D8();
  return sub_24A77B440();
}

uint64_t sub_24A6F1054()
{
  sub_24A6F10D8();
  return sub_24A77B458();
}

unint64_t sub_24A6F1090()
{
  unint64_t result;

  result = qword_25794C098;
  if (!qword_25794C098)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A784EE4, &type metadata for RightTrapezoid);
    atomic_store(result, (unint64_t *)&qword_25794C098);
  }
  return result;
}

unint64_t sub_24A6F10D8()
{
  unint64_t result;

  result = qword_25794C0A0;
  if (!qword_25794C0A0)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A784F34, &type metadata for RightTrapezoid);
    atomic_store(result, (unint64_t *)&qword_25794C0A0);
  }
  return result;
}

uint64_t EffortEntryView.init(estimate:isShowingEffortOnboarding:doneTapped:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  char v17;
  char v18;
  uint64_t result;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;

  v34 = a3;
  v35 = a2;
  v6 = sub_24A779478();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24A7797A8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = 0;
  v37 = 0;
  sub_24A77B47C();
  v16 = v38;
  v30 = v39;
  LOBYTE(v37) = 0;
  sub_24A77B47C();
  v17 = LOBYTE(v38);
  v31 = v39;
  v41 = LOBYTE(v38);
  LOBYTE(v37) = 0;
  sub_24A77B47C();
  v18 = LOBYTE(v38);
  v32 = v39;
  v33 = a1;
  v40 = LOBYTE(v38);
  LOBYTE(v37) = 0;
  sub_24A63CCC0(a1, (uint64_t)v11, &qword_257947500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_24A63CD04(v33, &qword_257947500);
    result = sub_24A63CD04((uint64_t)v11, &qword_257947500);
    v20 = 0;
    v21 = 0;
    v22 = v34;
    v24 = v30;
    v23 = v31;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v22 = v34;
    swift_retain();
    sub_24A779760();
    v25 = sub_24A77946C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
    v16 = (double)v25;
    swift_release();
    LOBYTE(v38) = v41;
    v26 = v31;
    v39 = v31;
    v36 = v25 == 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
    sub_24A77B494();
    swift_release();
    sub_24A63CD04(v33, &qword_257947500);
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v24 = 0;
    v21 = v42;
    v20 = v37;
    v17 = v41;
    v18 = v40;
    v23 = v26;
  }
  *(_QWORD *)a4 = v35;
  *(_QWORD *)(a4 + 8) = v22;
  *(_QWORD *)(a4 + 16) = nullsub_1;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = v21;
  *(_BYTE *)(a4 + 33) = v20;
  *(double *)(a4 + 40) = v16;
  *(_QWORD *)(a4 + 48) = v24;
  *(_BYTE *)(a4 + 56) = v17;
  *(_QWORD *)(a4 + 64) = v23;
  *(_QWORD *)(a4 + 72) = 0x3FDB6DB6DB6DB6DBLL;
  *(_BYTE *)(a4 + 80) = v18;
  *(_QWORD *)(a4 + 88) = v32;
  return result;
}

uint64_t EffortEntryView.init(estimate:isShowingEffortOnboarding:cancelTapped:doneTapped:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  char v19;
  char v20;
  uint64_t result;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;

  v39 = a5;
  v40 = a4;
  v38 = a3;
  v41 = a2;
  v8 = sub_24A779478();
  v34 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24A7797A8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = 0;
  v43 = 0;
  sub_24A77B47C();
  v18 = v44;
  v35 = v45;
  LOBYTE(v43) = 0;
  sub_24A77B47C();
  v19 = LOBYTE(v44);
  v36 = v45;
  v47 = LOBYTE(v44);
  LOBYTE(v43) = 0;
  sub_24A77B47C();
  v20 = LOBYTE(v44);
  v37 = v45;
  v46 = LOBYTE(v44);
  LOBYTE(v43) = 0;
  sub_24A63CCC0(a1, (uint64_t)v13, &qword_257947500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_24A63CD04(a1, &qword_257947500);
    result = sub_24A63CD04((uint64_t)v13, &qword_257947500);
    v22 = 0;
    v23 = 0;
    v25 = v38;
    v24 = v39;
    v27 = v35;
    v26 = v36;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v28 = v8;
    v24 = v39;
    swift_retain();
    v29 = a1;
    v25 = v38;
    swift_retain();
    sub_24A779760();
    v30 = sub_24A77946C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v28);
    v18 = (double)v30;
    swift_release();
    LOBYTE(v44) = v47;
    v31 = v36;
    v45 = v36;
    v42 = v30 == 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
    sub_24A77B494();
    swift_release();
    swift_release();
    sub_24A63CD04(v29, &qword_257947500);
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v27 = 0;
    v23 = v48;
    v22 = v43;
    v19 = v47;
    v20 = v46;
    v26 = v31;
  }
  v32 = v41;
  *(_QWORD *)a6 = v40;
  *(_QWORD *)(a6 + 8) = v24;
  *(_QWORD *)(a6 + 16) = v32;
  *(_QWORD *)(a6 + 24) = v25;
  *(_BYTE *)(a6 + 32) = v23;
  *(_BYTE *)(a6 + 33) = v22;
  *(double *)(a6 + 40) = v18;
  *(_QWORD *)(a6 + 48) = v27;
  *(_BYTE *)(a6 + 56) = v19;
  *(_QWORD *)(a6 + 64) = v26;
  *(_QWORD *)(a6 + 72) = 0x3FDB6DB6DB6DB6DBLL;
  *(_BYTE *)(a6 + 80) = v20;
  *(_QWORD *)(a6 + 88) = v37;
  return result;
}

CGFloat sub_24A6F1720()
{
  id v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGFloat result;
  CGRect v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_bounds);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  v10.origin.x = v2;
  v10.origin.y = v4;
  v10.size.width = v6;
  v10.size.height = v8;
  result = CGRectGetHeight(v10) * 0.09;
  qword_25794C0A8 = *(_QWORD *)&result;
  return result;
}

uint64_t sub_24A6F17B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v13 = v4;
  v14 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  result = sub_24A77B488();
  v7 = round(v15);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)v7 <= 0)
  {
    v10 = sub_24A7797A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
    goto LABEL_11;
  }
  v13 = v4;
  v14 = v5;
  result = sub_24A77B488();
  v8 = round(v15);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
    goto LABEL_15;
  if (v8 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (uint64_t)v8 - 1;
  if (!__OFSUB__((uint64_t)v8, 1))
  {
    sub_24A77976C();
    v9 = sub_24A7797A8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 0, 1, v9);
LABEL_11:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v11 = _s9WorkoutUI12EffortColorsV8gradient8exertion05SwiftB08GradientV0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v3);
    sub_24A63CD04((uint64_t)v3, &qword_257947500);
    return v11;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24A6F19E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v13 = v4;
  v14 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  result = sub_24A77B488();
  v7 = round(v15);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)v7 <= 0)
  {
    v10 = sub_24A7797A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
    goto LABEL_11;
  }
  v13 = v4;
  v14 = v5;
  result = sub_24A77B488();
  v8 = round(v15);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
    goto LABEL_15;
  if (v8 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (uint64_t)v8 - 1;
  if (!__OFSUB__((uint64_t)v8, 1))
  {
    sub_24A77976C();
    v9 = sub_24A7797A8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 0, 1, v9);
LABEL_11:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_24A725738((uint64_t)v3);
    v11 = sub_24A77B374();
    swift_release();
    sub_24A63CD04((uint64_t)v3, &qword_257947500);
    return v11;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24A6F1C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;

  v1 = sub_24A779478();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  LOBYTE(v20) = *(_BYTE *)(v0 + 56);
  v21 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
  sub_24A77B488();
  if (LOBYTE(v22) == 1)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v11 = (id)qword_2544D6158;
    v12 = sub_24A77856C();

    return v12;
  }
  v19 = v1;
  v20 = v8;
  v21 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  result = sub_24A77B488();
  v14 = round(v22);
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((uint64_t)v14 <= 0)
  {
    v16 = sub_24A7797A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
LABEL_15:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_24A7797A8();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v16) == 1)
    {
      sub_24A63CD04((uint64_t)v7, &qword_257947500);
      return 0;
    }
    else
    {
      sub_24A779760();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
      v12 = sub_24A779460();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
    }
    return v12;
  }
  v20 = v8;
  v21 = v9;
  result = sub_24A77B488();
  v15 = round(v22);
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
    goto LABEL_22;
  if (v15 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  result = (uint64_t)v15 - 1;
  if (!__OFSUB__((uint64_t)v15, 1))
  {
    sub_24A77976C();
    v16 = sub_24A7797A8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 0, 1, v16);
    goto LABEL_15;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t EffortEntryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t OpaqueTypeConformance2;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  _OWORD v55[14];
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[2];
  __int128 v60;
  __int128 v61;
  _OWORD v62[15];
  uint64_t v63;

  v52 = a1;
  v2 = sub_24A77AC00();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B8);
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0C0);
  v45 = *(uint64_t **)(v8 - 8);
  v46 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0C8);
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D0);
  v48 = *(_QWORD *)(v13 - 8);
  v49 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v47 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1[3];
  v59[0] = v1[2];
  v59[1] = v15;
  v16 = v1[5];
  v60 = v1[4];
  v61 = v16;
  v17 = v1[1];
  v57 = *v1;
  v58 = v17;
  v18 = sub_24A77B668();
  v20 = v19;
  sub_24A6F2564(&v57, (uint64_t)v55);
  *(_QWORD *)&v54 = v18;
  *((_QWORD *)&v54 + 1) = v20;
  v62[0] = *(_OWORD *)((char *)v59 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  sub_24A77B488();
  v21 = (_OWORD *)swift_allocObject();
  v22 = v59[1];
  v21[3] = v59[0];
  v21[4] = v22;
  v23 = v61;
  v21[5] = v60;
  v21[6] = v23;
  v24 = v58;
  v21[1] = v57;
  v21[2] = v24;
  sub_24A6F345C((uint64_t)&v57);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0E0);
  v26 = sub_24A63CFF0(&qword_25794C0E8, &qword_25794C0E0, MEMORY[0x24BDF4750]);
  sub_24A77B2D8();
  swift_release();
  v62[12] = v55[11];
  v62[13] = v55[12];
  v62[14] = v55[13];
  v62[8] = v55[7];
  v62[9] = v55[8];
  v63 = v56;
  v62[10] = v55[9];
  v62[11] = v55[10];
  v62[4] = v55[3];
  v62[5] = v55[4];
  v62[6] = v55[5];
  v62[7] = v55[6];
  v62[0] = v54;
  v62[1] = v55[0];
  v62[2] = v55[1];
  v62[3] = v55[2];
  sub_24A6F34C4((uint64_t)v62);
  sub_24A77ABF4();
  v27 = sub_24A77AC9C();
  v28 = sub_24A77AC84();
  sub_24A77AC90();
  sub_24A77AC90();
  if (sub_24A77AC90() != v27)
    sub_24A77AC90();
  sub_24A77AC90();
  if (sub_24A77AC90() != v28)
    sub_24A77AC90();
  *(_QWORD *)&v54 = v25;
  *((_QWORD *)&v54 + 1) = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v55[0] = v26;
  *((_QWORD *)&v55[0] + 1) = MEMORY[0x24BEE13F8];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v30 = v10;
  sub_24A77B188();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v43);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v7, v5);
  MEMORY[0x24BDAC7A8](v31);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0F0);
  *(_QWORD *)&v54 = v5;
  *((_QWORD *)&v54 + 1) = OpaqueTypeConformance2;
  v33 = swift_getOpaqueTypeConformance2();
  v34 = sub_24A63CFF0(&qword_25794C0F8, &qword_25794C0F0, MEMORY[0x24BDEF170]);
  v35 = v44;
  v36 = v46;
  sub_24A77B2B4();
  ((void (*)(char *, uint64_t))v45[1])(v30, v36);
  v53 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
  v37 = sub_24A77B4A0();
  v45 = &v41;
  MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)&v54 = v36;
  *((_QWORD *)&v54 + 1) = v32;
  *(_QWORD *)&v55[0] = v33;
  *((_QWORD *)&v55[0] + 1) = v34;
  swift_getOpaqueTypeConformance2();
  sub_24A6F4204();
  v38 = v47;
  v39 = v51;
  sub_24A77B224();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v39);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v52, v38, v49);
}

uint64_t sub_24A6F2564@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  _OWORD *v49;
  char v50;
  __int128 v51;
  __int128 v52;
  char v53;
  _OWORD v54[11];
  _OWORD v55[12];
  _OWORD v56[12];

  v4 = a1[3];
  v55[2] = a1[2];
  v55[3] = v4;
  v5 = a1[5];
  v55[4] = a1[4];
  v55[5] = v5;
  v6 = a1[1];
  v55[0] = *a1;
  v55[1] = v6;
  sub_24A6F345C((uint64_t)a1);
  sub_24A6F17B4();
  sub_24A77B6BC();
  sub_24A77B6C8();
  sub_24A77A570();
  v7 = v44;
  v32 = v45;
  v8 = v46;
  v9 = v47;
  sub_24A6F46B4((uint64_t)a1);
  v10 = sub_24A77A60C();
  v11 = sub_24A77ACB4();
  v12 = (_OWORD *)swift_allocObject();
  v13 = a1[3];
  v12[3] = a1[2];
  v12[4] = v13;
  v14 = a1[5];
  v12[5] = a1[4];
  v12[6] = v14;
  v15 = a1[1];
  v12[1] = *a1;
  v12[2] = v15;
  sub_24A6F345C((uint64_t)a1);
  v48 = sub_24A6F4AC8;
  v49 = v12;
  v50 = sub_24A77ACA8();
  v51 = 0u;
  v52 = 0u;
  v53 = 1;
  sub_24A77B668();
  sub_24A642CD4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v33, 0.0, 1, INFINITY, 0);
  swift_release();
  v16 = v39;
  v54[7] = v40;
  v54[8] = v41;
  v17 = v41;
  v54[9] = v42;
  v54[10] = v43;
  v18 = v37;
  v54[4] = v37;
  v54[5] = v38;
  v54[6] = v39;
  v19 = v33;
  v54[0] = v33;
  v54[1] = v34;
  v20 = v35;
  v54[2] = v35;
  v54[3] = v36;
  *(_OWORD *)((char *)&v55[4] + 7) = v37;
  v21 = v36;
  *(_OWORD *)((char *)&v55[3] + 7) = v36;
  v22 = v40;
  *(_OWORD *)((char *)&v55[7] + 7) = v40;
  *(_OWORD *)((char *)&v55[8] + 7) = v41;
  v23 = v42;
  *(_OWORD *)((char *)&v55[9] + 7) = v42;
  *(_OWORD *)((char *)&v55[10] + 7) = v43;
  v24 = v38;
  *(_OWORD *)((char *)&v55[5] + 7) = v38;
  *(_OWORD *)((char *)&v55[6] + 7) = v39;
  *(_OWORD *)((char *)v55 + 7) = v33;
  v25 = v34;
  *(_OWORD *)((char *)&v55[1] + 7) = v34;
  *(_OWORD *)((char *)&v55[2] + 7) = v35;
  *(_OWORD *)(a2 + 8) = v32;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  v26 = v55[9];
  *(_OWORD *)(a2 + 177) = v55[8];
  *(_OWORD *)(a2 + 193) = v26;
  *(_OWORD *)(a2 + 209) = v55[10];
  v27 = v55[5];
  *(_OWORD *)(a2 + 113) = v55[4];
  *(_OWORD *)(a2 + 129) = v27;
  v28 = v55[7];
  *(_OWORD *)(a2 + 145) = v55[6];
  *(_OWORD *)(a2 + 161) = v28;
  v29 = v55[1];
  *(_OWORD *)(a2 + 49) = v55[0];
  *(_OWORD *)(a2 + 65) = v29;
  v30 = v55[3];
  *(_OWORD *)(a2 + 81) = v55[2];
  *(_OWORD *)(a2 + 97) = v30;
  v56[8] = v17;
  v56[9] = v23;
  v56[10] = v43;
  v56[4] = v18;
  v56[5] = v24;
  v56[6] = v16;
  v56[7] = v22;
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 224) = *(_QWORD *)((char *)&v55[10] + 15);
  v56[0] = v19;
  v56[1] = v25;
  v56[2] = v20;
  v56[3] = v21;
  swift_bridgeObjectRetain();
  sub_24A6442F0((uint64_t)v54);
  sub_24A644318((uint64_t)v56);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6F2854@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  *(_QWORD *)a3 = sub_24A77A9FC();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1E0);
  return sub_24A6F28AC(a2, a1, (_QWORD *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_24A6F28AC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t result;
  double v58;
  char *v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  int v111;
  __int128 v112;
  _QWORD *v113;
  __int128 *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  unsigned __int8 v137;
  uint64_t v138;
  unsigned __int8 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  unsigned __int8 v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  unsigned __int8 v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;

  v113 = a3;
  v5 = sub_24A77A630();
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for EffortZoneView();
  MEMORY[0x24BDAC7A8](v100);
  v101 = (_OWORD *)((char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1E8);
  MEMORY[0x24BDAC7A8](v9);
  v102 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1F0);
  v96 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1F8);
  v117 = *(_QWORD *)(v14 - 8);
  v118 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v95 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C200);
  MEMORY[0x24BDAC7A8](v16);
  v123 = (uint64_t)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v128 = (uint64_t)&v92 - v19;
  if (qword_2579469C0 != -1)
    swift_once();
  v103 = v9;
  v104 = v13;
  v105 = (uint64_t)v7;
  v114 = a1;
  v115 = a2;
  sub_24A77B668();
  sub_24A77A4B0();
  *(_QWORD *)&v112 = v136;
  v111 = v137;
  v110 = v138;
  v109 = v139;
  v107 = v141;
  v108 = v140;
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v20 = (id)qword_2544D6158;
  v21 = sub_24A77856C();
  v23 = v22;

  *(_QWORD *)&v130 = v21;
  *((_QWORD *)&v130 + 1) = v23;
  sub_24A645928();
  v24 = sub_24A77AFD8();
  v26 = v25;
  v28 = v27 & 1;
  sub_24A77ADBC();
  sub_24A77ADD4();
  sub_24A77AE58();
  swift_release();
  v29 = sub_24A77AF84();
  v31 = v30;
  LOBYTE(v23) = v32;
  v34 = v33;
  swift_release();
  v35 = v23 & 1;
  sub_24A64596C(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_24A77B668();
  v36 = 1;
  sub_24A77A4B0();
  v37 = v142;
  v125 = v143;
  v124 = v144;
  v120 = v145;
  v106 = v146;
  v119 = v147;
  sub_24A6436C4(v29, v31, v35);
  swift_bridgeObjectRetain();
  v122 = v29;
  v126 = v35;
  v127 = v31;
  sub_24A64596C(v29, v31, v35);
  v121 = v34;
  swift_bridgeObjectRelease();
  v38 = v114;
  v39 = *((_BYTE *)v114 + 33);
  v116 = v37;
  if ((v39 & 1) != 0)
  {
LABEL_10:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v128, v36, 1, v118);
    sub_24A77B668();
    sub_24A77A4B0();
    v61 = (_OWORD *)v151;
    v62 = BYTE8(v151);
    v63 = v152;
    v117 = v153;
    v64 = v154;
    v118 = v155;
    v130 = *(__int128 *)((char *)v38 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
    result = sub_24A77B488();
    v65 = round(*(double *)&v129);
    if ((~*(_QWORD *)&v65 & 0x7FF0000000000000) != 0)
    {
      if (v65 > -9.22337204e18)
      {
        if (v65 < 9.22337204e18)
        {
          v105 = (uint64_t)v65;
          v66 = v38[3];
          v132 = v38[2];
          v133 = v66;
          v67 = v38[5];
          v134 = v38[4];
          v135 = v67;
          v68 = v38[1];
          v130 = *v38;
          v131 = v68;
          v69 = sub_24A6F1C28();
          v103 = v70;
          v104 = (char *)v69;
          v130 = *(__int128 *)((char *)v38 + 56);
          sub_24A6F345C((uint64_t)v38);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
          v101 = v61;
          sub_24A77B488();
          LODWORD(v102) = v129;
          v129 = v38[5];
          sub_24A77B4A0();
          sub_24A6F46B4((uint64_t)v38);
          v98 = *((_QWORD *)&v130 + 1);
          v99 = v130;
          LODWORD(v100) = v131;
          sub_24A77A4EC();
          sub_24A77B668();
          sub_24A77A4B0();
          v115 = v130;
          LODWORD(v97) = BYTE8(v130);
          v96 = v131;
          LODWORD(v95) = BYTE8(v131);
          v93 = *((_QWORD *)&v132 + 1);
          v94 = v132;
          LODWORD(v114) = (v38[2] & 1) == 0;
          v71 = v123;
          sub_24A63CCC0(v128, v123, &qword_25794C200);
          v92 = v64;
          v72 = v62;
          v73 = v113;
          *v113 = 0;
          *((_BYTE *)v73 + 8) = 1;
          v73[2] = v112;
          *((_BYTE *)v73 + 24) = v111;
          v73[4] = v110;
          *((_BYTE *)v73 + 40) = v109;
          v74 = v107;
          v73[6] = v108;
          v73[7] = v74;
          v75 = v127;
          v73[8] = v122;
          v73[9] = v75;
          v77 = v120;
          v76 = v121;
          v73[10] = v126;
          v73[11] = v76;
          v112 = xmmword_24A780020;
          *((_OWORD *)v73 + 6) = xmmword_24A780020;
          v78 = v125;
          v73[14] = v37;
          v73[15] = v78;
          v73[16] = v124;
          v73[17] = v77;
          v79 = v119;
          v73[18] = v106;
          v73[19] = v79;
          v80 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25794C218);
          sub_24A63CCC0(v71, (uint64_t)v73 + v80[16], &qword_25794C200);
          v81 = (char *)v73 + v80[20];
          *(_OWORD *)v81 = v112;
          *((_QWORD *)v81 + 2) = v101;
          *((_QWORD *)v81 + 3) = v72;
          v82 = v117;
          *((_QWORD *)v81 + 4) = v63;
          *((_QWORD *)v81 + 5) = v82;
          v83 = v118;
          *((_QWORD *)v81 + 6) = v92;
          *((_QWORD *)v81 + 7) = v83;
          v81[64] = 0;
          v84 = (char *)v73 + v80[24];
          v86 = v103;
          v85 = v104;
          *(_QWORD *)v84 = v105;
          *((_QWORD *)v84 + 1) = v85;
          *((_QWORD *)v84 + 2) = v86;
          v84[24] = v102;
          v87 = v98;
          *((_QWORD *)v84 + 4) = v99;
          *((_QWORD *)v84 + 5) = v87;
          v84[48] = v100;
          v88 = (char *)v73 + v80[28];
          *(_QWORD *)v88 = 0;
          v88[8] = 1;
          *((_QWORD *)v88 + 2) = v115;
          v88[24] = v97;
          *((_QWORD *)v88 + 4) = v96;
          v88[40] = (char)v95;
          v89 = v93;
          *((_QWORD *)v88 + 6) = v94;
          *((_QWORD *)v88 + 7) = v89;
          *((_BYTE *)v73 + v80[32]) = (_BYTE)v114;
          v91 = v121;
          v90 = v122;
          sub_24A6B8208(v122, v127, v126, v121);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_24A63CD04(v128, &qword_25794C200);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          sub_24A63CD04(v123, &qword_25794C200);
          return sub_24A6B8238(v90, v127, v126, v91);
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v40 = v114[3];
  v132 = v114[2];
  v133 = v40;
  v41 = v114[5];
  v134 = v114[4];
  v135 = v41;
  v42 = v114[1];
  v130 = *v114;
  v131 = v42;
  v43 = sub_24A6F19E4();
  v156 = *(__int128 *)((char *)v38 + 40);
  v151 = *(__int128 *)((char *)v38 + 40);
  sub_24A6F345C((uint64_t)v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  sub_24A77B4A0();
  v44 = v130;
  v45 = v131;
  v151 = *(__int128 *)((char *)v38 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
  sub_24A77B4A0();
  sub_24A6F46B4((uint64_t)v38);
  v46 = v130;
  v47 = v131;
  v48 = (uint64_t)v101;
  *v101 = xmmword_24A784F90;
  *(_QWORD *)(v48 + 16) = v43;
  *(_QWORD *)(v48 + 24) = 0x3FF0000000000000;
  *(_QWORD *)(v48 + 32) = &unk_251BF3918;
  *(_OWORD *)(v48 + 40) = v44;
  *(_QWORD *)(v48 + 56) = v45;
  *(_OWORD *)(v48 + 64) = v46;
  *(_BYTE *)(v48 + 80) = v47;
  v49 = (uint64_t *)(v48 + *(int *)(v100 + 44));
  *v49 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579498A0);
  swift_storeEnumTagMultiPayload();
  sub_24A77A4EC();
  sub_24A77A4EC();
  sub_24A77B668();
  sub_24A77A4B0();
  v50 = v102;
  sub_24A6F4AD8(v48, v102);
  v51 = v103;
  v52 = (_OWORD *)(v50 + *(int *)(v103 + 36));
  v53 = v149;
  *v52 = v148;
  v52[1] = v53;
  v52[2] = v150;
  sub_24A6F4B1C(v48);
  v54 = sub_24A6F4B58();
  v55 = v104;
  sub_24A77B2FC();
  sub_24A63CD04(v50, &qword_25794C1E8);
  v56 = v105;
  sub_24A77A624();
  v130 = v156;
  result = sub_24A77B488();
  v58 = round(*(double *)&v151);
  if ((~*(_QWORD *)&v58 & 0x7FF0000000000000) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v58 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v58 < 9.22337204e18)
  {
    *(_QWORD *)&v151 = (uint64_t)v58;
    *(_QWORD *)&v130 = v51;
    *((_QWORD *)&v130 + 1) = v54;
    swift_getOpaqueTypeConformance2();
    v59 = v95;
    v60 = v97;
    sub_24A77B17C();
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v56, v99);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v55, v60);
    (*(void (**)(uint64_t, char *, uint64_t))(v117 + 32))(v128, v59, v118);
    v36 = 0;
    v37 = v116;
    goto LABEL_10;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24A6F33C8(uint64_t a1)
{
  sub_24A6F345C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  sub_24A77B488();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
  sub_24A77B494();
  return sub_24A6F46B4(a1);
}

uint64_t sub_24A6F3454()
{
  uint64_t v0;

  return sub_24A6F33C8(v0 + 16);
}

uint64_t sub_24A6F345C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24A6F34C4(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A6F34F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a1;
  v32 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C108);
  MEMORY[0x24BDAC7A8](v31);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C110);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A77AB64();
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C118);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C120);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - v17;
  sub_24A77AB4C();
  v34 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C128);
  sub_24A63CFF0(&qword_25794C130, &qword_25794C128, MEMORY[0x24BDF43B0]);
  sub_24A77A414();
  v19 = sub_24A63CFF0(&qword_25794C138, &qword_25794C118, MEMORY[0x24BDEB848]);
  MEMORY[0x24BD18184](v12, v9, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C140);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 0, 1, v20);
  v35 = v9;
  v36 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x24BD18190](v15, v20, OpaqueTypeConformance2);
  sub_24A63CD04((uint64_t)v15, &qword_25794C120);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24A77AB58();
  v33 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C148);
  sub_24A6F472C();
  sub_24A77A414();
  v22 = &v4[*(int *)(v31 + 48)];
  sub_24A63CCC0((uint64_t)v18, (uint64_t)v4, &qword_25794C120);
  v23 = v29;
  v24 = v22;
  v25 = v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v24, v7, v30);
  sub_24A77AA38();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v25);
  return sub_24A63CD04((uint64_t)v18, &qword_25794C120);
}

uint64_t sub_24A6F3830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6F34F8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24A6F3838(_OWORD *a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = (_OWORD *)swift_allocObject();
  v3 = a1[3];
  v2[3] = a1[2];
  v2[4] = v3;
  v4 = a1[5];
  v2[5] = a1[4];
  v2[6] = v4;
  v5 = a1[1];
  v2[1] = *a1;
  v2[2] = v5;
  sub_24A6F345C((uint64_t)a1);
  return sub_24A77B4B8();
}

uint64_t sub_24A6F38C4@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)qword_2544D6158;
  sub_24A77856C();

  sub_24A645928();
  v3 = sub_24A77AFD8();
  v5 = v4;
  v7 = v6 & 1;
  sub_24A77B368();
  v8 = sub_24A77AF54();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  sub_24A64596C(v3, v5, v7);
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v12 & 1;
  *(_QWORD *)(a1 + 24) = v14;
  return result;
}

uint64_t sub_24A6F3A5C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t result;
  double v23;
  char v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  double v33;

  v31 = a2;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1D8);
  MEMORY[0x24BDAC7A8](v30);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C128);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1C0);
  MEMORY[0x24BDAC7A8](v29);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v28 - v15;
  v17 = (_OWORD *)swift_allocObject();
  v18 = a1[3];
  v17[3] = a1[2];
  v17[4] = v18;
  v19 = a1[5];
  v17[5] = a1[4];
  v17[6] = v19;
  v20 = a1[1];
  v17[1] = *a1;
  v17[2] = v20;
  sub_24A6F345C((uint64_t)a1);
  sub_24A77B4B8();
  v21 = sub_24A77B368();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  *(_QWORD *)&v11[*(int *)(v9 + 36)] = v21;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v32 = *(_OWORD *)((char *)a1 + 40);
  sub_24A6F345C((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  result = sub_24A77B488();
  v23 = round(v33);
  if ((~*(_QWORD *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if ((uint64_t)v23)
  {
    sub_24A6F46B4((uint64_t)a1);
    v24 = 0;
  }
  else
  {
    v32 = *(_OWORD *)((char *)a1 + 56);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
    sub_24A77B488();
    sub_24A6F46B4((uint64_t)a1);
    v24 = LOBYTE(v33) ^ 1;
  }
  KeyPath = swift_getKeyPath();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = v24 & 1;
  sub_24A63CCC0((uint64_t)v11, (uint64_t)v13, &qword_25794C1D0);
  v27 = (uint64_t *)&v13[*(int *)(v29 + 36)];
  *v27 = KeyPath;
  v27[1] = (uint64_t)sub_24A6F4A2C;
  v27[2] = v26;
  sub_24A63CD04((uint64_t)v11, &qword_25794C1D0);
  sub_24A6F4A34((uint64_t)v13, (uint64_t)v16);
  sub_24A63CCC0((uint64_t)v16, (uint64_t)v4, &qword_25794C1C0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C160);
  sub_24A6F47C8(&qword_25794C158, &qword_25794C160, (uint64_t (*)(void))sub_24A6F484C);
  sub_24A6F47C8(&qword_25794C1B8, &qword_25794C1C0, (uint64_t (*)(void))sub_24A6F496C);
  sub_24A77AB28();
  return sub_24A63CD04((uint64_t)v16, &qword_25794C1C0);
}

uint64_t sub_24A6F3E14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  double v11;
  __int128 v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a1 + 40);
  sub_24A6F345C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  result = sub_24A77B488();
  v6 = round(v11);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)v6 <= 0)
  {
    v9 = sub_24A7797A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    goto LABEL_11;
  }
  v10 = v12;
  result = sub_24A77B488();
  v7 = round(v11);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
    goto LABEL_15;
  if (v7 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (uint64_t)v7 - 1;
  if (!__OFSUB__((uint64_t)v7, 1))
  {
    sub_24A77976C();
    v8 = sub_24A7797A8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
LABEL_11:
    sub_24A6F46B4(a1);
    (*(void (**)(char *))a1)(v4);
    return sub_24A63CD04((uint64_t)v4, &qword_257947500);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24A6F3FDC@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)qword_2544D6158;
  sub_24A77856C();

  sub_24A645928();
  result = sub_24A77AFD8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

double sub_24A6F40E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_24A6F345C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0D8);
  sub_24A77B4A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C0B0);
  sub_24A77B4A0();
  sub_24A6F46B4(a1);
  v4 = sub_24A77AD98();
  sub_24A77AE40();
  sub_24A77ADD4();
  v5 = sub_24A77AE58();
  swift_release();
  v6 = sub_24A77AD2C();
  v7 = sub_24A77B368();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v10;
  *(_BYTE *)(a2 + 40) = v11;
  result = 30.0;
  *(_OWORD *)(a2 + 48) = xmmword_24A784FA0;
  *(_OWORD *)(a2 + 64) = xmmword_24A784FB0;
  *(_QWORD *)(a2 + 80) = 0x4034000000000000;
  *(_QWORD *)(a2 + 88) = v4;
  *(_QWORD *)(a2 + 96) = v5;
  *(_QWORD *)(a2 + 104) = v6;
  *(_QWORD *)(a2 + 112) = v7;
  return result;
}

double sub_24A6F41FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6F40E8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_24A6F4204()
{
  unint64_t result;

  result = qword_25794C100;
  if (!qword_25794C100)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A78509C, &type metadata for EffortListView);
    atomic_store(result, (unint64_t *)&qword_25794C100);
  }
  return result;
}

uint64_t sub_24A6F4248()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for EffortEntryView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EffortEntryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EffortEntryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for EffortEntryView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortEntryView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EffortEntryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortEntryView()
{
  return &type metadata for EffortEntryView;
}

uint64_t sub_24A6F4564()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C0C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C0C0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C0F0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C0B8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C0E0);
  sub_24A63CFF0(&qword_25794C0E8, &qword_25794C0E0, MEMORY[0x24BDF4750]);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  sub_24A63CFF0(&qword_25794C0F8, &qword_25794C0F0, MEMORY[0x24BDEF170]);
  swift_getOpaqueTypeConformance2();
  sub_24A6F4204();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6F46B4(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_24A6F471C()
{
  uint64_t v0;

  return sub_24A6F3838(*(_OWORD **)(v0 + 16));
}

uint64_t sub_24A6F4724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6F3A5C(*(_OWORD **)(v1 + 16), a1);
}

unint64_t sub_24A6F472C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C150;
  if (!qword_25794C150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C148);
    v2[0] = sub_24A6F47C8(&qword_25794C158, &qword_25794C160, (uint64_t (*)(void))sub_24A6F484C);
    v2[1] = sub_24A6F47C8(&qword_25794C1B8, &qword_25794C1C0, (uint64_t (*)(void))sub_24A6F496C);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C150);
  }
  return result;
}

uint64_t sub_24A6F47C8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_24A63CFF0(&qword_25794C1A8, &qword_25794C1B0, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A6F484C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C168;
  if (!qword_25794C168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C170);
    v2[0] = sub_24A6F48D0();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C168);
  }
  return result;
}

unint64_t sub_24A6F48D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C178;
  if (!qword_25794C178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C180);
    v2[0] = sub_24A63CFF0(&qword_25794C188, &qword_25794C190, MEMORY[0x24BDF43B0]);
    v2[1] = sub_24A63CFF0(&qword_25794C198, &qword_25794C1A0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C178);
  }
  return result;
}

unint64_t sub_24A6F496C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C1C8;
  if (!qword_25794C1C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C1D0);
    v2[0] = sub_24A63CFF0(&qword_25794C130, &qword_25794C128, MEMORY[0x24BDF43B0]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C1C8);
  }
  return result;
}

uint64_t sub_24A6F4A0C()
{
  uint64_t v0;

  return sub_24A6F3E14(v0 + 16);
}

uint64_t sub_24A6F4A1C()
{
  return swift_deallocObject();
}

_BYTE *sub_24A6F4A2C(_BYTE *a1)
{
  uint64_t v1;

  return sub_24A66FE3C(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_24A6F4A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_3()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6F4AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A6F2854(a1, (__int128 *)(v2 + 16), a2);
}

uint64_t sub_24A6F4AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EffortZoneView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6F4B1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EffortZoneView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A6F4B58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C208;
  if (!qword_25794C208)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C1E8);
    v2[0] = sub_24A6F4BC4();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C208);
  }
  return result;
}

unint64_t sub_24A6F4BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794C210;
  if (!qword_25794C210)
  {
    v1 = type metadata accessor for EffortZoneView();
    result = MEMORY[0x24BD1A1F4](&unk_24A784C18, v1);
    atomic_store(result, (unint64_t *)&qword_25794C210);
  }
  return result;
}

uint64_t destroy for EffortListView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EffortListView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EffortListView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for EffortListView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortListView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EffortListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortListView()
{
  return &type metadata for EffortListView;
}

uint64_t sub_24A6F4FC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6F4FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = **(_QWORD **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_BYTE *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(_BYTE *)(*(_QWORD *)a1 + 32);
  v9 = *(_BYTE *)(*(_QWORD *)a1 + 72);
  v10 = *(_OWORD *)(*(_QWORD *)a1 + 40);
  v11 = *(_OWORD *)(*(_QWORD *)a1 + 56);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v11;
  *(_BYTE *)(a2 + 72) = v9;
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_25794C280);
  sub_24A65FAD0(*(_QWORD *)(a1 + 8), a2 + v12[12], type metadata accessor for EffortSectionTitle);
  sub_24A63CCC0(*(_QWORD *)(a1 + 16), a2 + v12[16], &qword_25794C268);
  sub_24A63CCC0(*(_QWORD *)(a1 + 24), a2 + v12[20], &qword_25794C268);
  sub_24A63CCC0(*(_QWORD *)(a1 + 32), a2 + v12[24], &qword_25794C268);
  sub_24A65FAD0(*(_QWORD *)(a1 + 40), a2 + v12[28], type metadata accessor for EffortSectionTitle);
  sub_24A63CCC0(*(_QWORD *)(a1 + 48), a2 + v12[32], &qword_25794C268);
  sub_24A63CCC0(*(_QWORD *)(a1 + 56), a2 + v12[36], &qword_25794C268);
  sub_24A63CCC0(*(_QWORD *)(a1 + 64), a2 + v12[40], &qword_25794C268);
  sub_24A65FAD0(*(_QWORD *)(a1 + 72), a2 + v12[44], type metadata accessor for EffortSectionTitle);
  sub_24A63CCC0(*(_QWORD *)(a1 + 80), a2 + v12[48], &qword_25794C268);
  sub_24A63CCC0(*(_QWORD *)(a1 + 88), a2 + v12[52], &qword_25794C268);
  sub_24A65FAD0(*(_QWORD *)(a1 + 96), a2 + v12[56], type metadata accessor for EffortSectionTitle);
  sub_24A63CCC0(*(_QWORD *)(a1 + 104), a2 + v12[60], &qword_25794C268);
  sub_24A63CCC0(*(_QWORD *)(a1 + 112), a2 + v12[64], &qword_25794C268);
  sub_24A63CCC0(*(_QWORD *)(a1 + 120), a2 + v12[68], &qword_25794C260);
  sub_24A63CCC0(*(_QWORD *)(a1 + 128), a2 + v12[72], &qword_25794C268);
  v13 = a2 + v12[76];
  v14 = *(_QWORD *)(a1 + 136);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  sub_24A6436C4(v4, v5, v6);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A6F51F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  double v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C220);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v1;
  sub_24A77AC9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C228);
  sub_24A6F75F0();
  sub_24A77A3A8();
  v10 = sub_24A77B668();
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_appleEffortScoreUnit);
  *(_OWORD *)v26 = *(_OWORD *)v1;
  *(_QWORD *)&v26[16] = *(_QWORD *)(v1 + 16);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
  MEMORY[0x24BD18B74](&v25, v14);
  v15 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v13, v25);

  sub_24A779790();
  _s9WorkoutUI12EffortColorsV8gradient8exertion05SwiftB08GradientV0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v5);
  sub_24A63CD04((uint64_t)v5, &qword_257947500);
  sub_24A77B6BC();
  sub_24A77B6C8();
  sub_24A77A570();
  v16 = *(_QWORD *)v26;
  v23 = *(_OWORD *)&v26[8];
  v17 = v27;
  v18 = v28;
  v19 = sub_24A77A60C();
  v20 = sub_24A77ACB4();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a1, v9, v6);
  v21 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794C248) + 36);
  *(_QWORD *)v21 = v16;
  *(_OWORD *)(v21 + 8) = v23;
  *(_QWORD *)(v21 + 24) = v17;
  *(_QWORD *)(v21 + 32) = v18;
  *(_QWORD *)(v21 + 40) = v19;
  *(_BYTE *)(v21 + 48) = v20;
  *(_QWORD *)(v21 + 56) = v10;
  *(_QWORD *)(v21 + 64) = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24A6F544C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C240);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_24A77AA08();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C250);
  sub_24A6F554C(a1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  LOBYTE(a1) = sub_24A77ACA8();
  sub_24A77A390();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  sub_24A63CCC0((uint64_t)v6, a2, &qword_25794C240);
  v16 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794C228) + 36);
  *(_BYTE *)v16 = (_BYTE)a1;
  *(_QWORD *)(v16 + 8) = v9;
  *(_QWORD *)(v16 + 16) = v11;
  *(_QWORD *)(v16 + 24) = v13;
  *(_QWORD *)(v16 + 32) = v15;
  *(_BYTE *)(v16 + 40) = 0;
  return sub_24A63CD04((uint64_t)v6, &qword_25794C240);
}

uint64_t sub_24A6F554C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  id v72;
  uint64_t v73;
  _BYTE *v74;
  __int128 *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(_QWORD, _QWORD);
  void (*v101)(_QWORD, _QWORD, _QWORD);
  __int128 *v102;
  __int128 *v103;
  __int128 *v104;
  char v105;
  uint64_t v106;
  __int128 *v107;
  __int128 *v108;
  int *v109;
  char v110;
  __int128 **v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  void (*v127)(_QWORD, _QWORD);
  void (*v128)(_QWORD, _QWORD, _QWORD, _QWORD);
  __int128 *v129;
  __int128 *v130;
  __int128 *v131;
  __int128 *v132;
  __int128 *v133;
  char v134;
  __int128 **v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  _BYTE *v151;
  void (*v152)(_QWORD, _QWORD);
  __int128 *v153;
  __int128 *v154;
  __int128 *v155;
  __int128 *v156;
  __int128 *v157;
  char v158;
  __int128 **v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  _BYTE *v174;
  _BYTE *v175;
  void (*v176)(_QWORD, _QWORD);
  void (*v177)(_QWORD, _QWORD, _QWORD);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(_QWORD, _QWORD, _QWORD, _QWORD);
  __int128 *v185;
  __int128 *v186;
  __int128 *v187;
  __int128 *v188;
  __int128 *v189;
  char v190;
  __int128 **v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE *v205;
  uint64_t v206;
  _BYTE *v207;
  void (*v208)(_QWORD, _QWORD);
  __int128 *v209;
  __int128 *v210;
  __int128 *v211;
  __int128 *v212;
  __int128 *v213;
  char v214;
  __int128 **v215;
  _BYTE *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  _BYTE *v230;
  void (*v231)(_QWORD, _QWORD);
  __int128 *v232;
  __int128 *v233;
  __int128 *v234;
  __int128 *v235;
  __int128 *v236;
  char v237;
  __int128 **v238;
  _BYTE *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _BYTE *v252;
  _BYTE *v253;
  uint64_t v254;
  _BYTE *v255;
  void (*v256)(_QWORD, _QWORD, _QWORD);
  int *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  void (*v262)(_QWORD, _QWORD);
  void (*v263)(_QWORD, _QWORD, _QWORD, _QWORD);
  __int128 *v264;
  __int128 *v265;
  __int128 *v266;
  __int128 *v267;
  __int128 *v268;
  char v269;
  __int128 **v270;
  _BYTE *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _BYTE *v284;
  _BYTE *v285;
  uint64_t v286;
  __int128 *v287;
  __int128 *v288;
  __int128 *v289;
  __int128 *v290;
  __int128 *v291;
  char v292;
  __int128 **v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  _BYTE *v307;
  _BYTE *v308;
  _BYTE *v309;
  void (*v310)(_QWORD, _QWORD);
  void (*v311)(_QWORD, _QWORD, _QWORD);
  int *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  void (*v317)(_QWORD, _QWORD, _QWORD, _QWORD);
  __int128 *v318;
  __int128 *v319;
  __int128 *v320;
  __int128 *v321;
  __int128 *v322;
  char v323;
  __int128 **v324;
  _BYTE *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _BYTE *v338;
  uint64_t v339;
  _BYTE *v340;
  void (*v341)(_QWORD, _QWORD);
  __int128 *v342;
  __int128 *v343;
  __int128 *v344;
  __int128 *v345;
  __int128 *v346;
  char v347;
  __int128 **v348;
  _BYTE *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  _BYTE *v362;
  _BYTE *v363;
  uint64_t v364;
  _BYTE *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  _BYTE *v376;
  _BYTE *v377;
  __int128 *v378;
  __int128 *v379;
  __int128 *v380;
  __int128 *v381;
  __int128 *v382;
  char v383;
  __int128 **v384;
  _BYTE *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  _BYTE *v398;
  _BYTE *v399;
  id v400;
  uint64_t v401;
  _BYTE *v402;
  __int128 *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  char v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  char v411;
  _BYTE *v412;
  _BYTE *v413;
  _BYTE *v414;
  _BYTE *v415;
  _BYTE *v416;
  _BYTE *v417;
  __int128 *v418;
  __int128 *v419;
  _BYTE *v420;
  _BYTE *v421;
  _BYTE *v422;
  _BYTE *v423;
  _BYTE *v424;
  _BYTE *v425;
  _BYTE *v426;
  _BYTE *v427;
  _BYTE *v428;
  _BYTE *v429;
  _BYTE *v430;
  _BYTE *v431;
  _BYTE *v432;
  _BYTE *v433;
  _BYTE *v434;
  _BYTE *v435;
  _BYTE *v436;
  _BYTE *v437;
  uint64_t v438;
  _BYTE *v439;
  _BYTE *v440;
  uint64_t v441;
  void (*v442)(_QWORD, _QWORD);
  _BYTE v444[12];
  unsigned int v445;
  uint64_t v446;
  unint64_t v447;
  uint64_t v448;
  uint64_t v449;
  int v450;
  uint64_t v451;
  _BYTE *v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  _BYTE *v457;
  uint64_t v458;
  __int128 *v459;
  _BYTE *v460;
  _BYTE *v461;
  _BYTE *v462;
  _BYTE *v463;
  _BYTE *v464;
  _BYTE *v465;
  _BYTE *v466;
  _BYTE *v467;
  _BYTE *v468;
  _BYTE *v469;
  _BYTE *v470;
  _BYTE *v471;
  _BYTE *v472;
  _BYTE *v473;
  _BYTE *v474;
  _BYTE *v475;
  _BYTE *v476;
  _BYTE *v477;
  int v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  _BYTE *v482;
  _BYTE *v483;
  _BYTE *v484;
  _BYTE *v485;
  _BYTE *v486;
  _BYTE *v487;
  _BYTE *v488;
  _BYTE *v489;
  _BYTE *v490;
  _BYTE *v491;
  _BYTE *v492;
  _BYTE *v493;
  uint64_t v494;
  _BYTE *v495;
  _BYTE *v496;
  _BYTE *v497;
  void (*v498)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  void (*v502)(_QWORD, _QWORD, _QWORD);
  void (*v503)(_QWORD, _QWORD);
  __int128 v504;
  uint64_t v505;
  uint64_t v506;
  char v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  char v512;
  __int128 *v513;
  __int128 *v514;
  __int128 *v515;
  _BYTE *v516;
  _BYTE *v517;
  _BYTE *v518;
  _BYTE *v519;
  _BYTE *v520;
  _BYTE *v521;
  _BYTE *v522;
  _BYTE *v523;
  _BYTE *v524;
  _BYTE *v525;
  _BYTE *v526;
  _BYTE *v527;
  _BYTE *v528;
  _BYTE *v529;
  _BYTE *v530;
  __int128 v531;
  char v532;
  __int128 v533;
  uint64_t v534;

  v455 = a2;
  v458 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C258);
  v456 = *(_QWORD *)(v458 - 8);
  MEMORY[0x24BDAC7A8](v458);
  v457 = &v444[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v467 = &v444[-v5];
  v6 = sub_24A77B5C0();
  v453 = *(_QWORD *)(v6 - 8);
  v454 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v452 = &v444[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v451 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C260);
  MEMORY[0x24BDAC7A8](v451);
  v493 = &v444[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v466 = &v444[-v10];
  v446 = type metadata accessor for EffortButton(0);
  MEMORY[0x24BDAC7A8](v446);
  v12 = &v444[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v501 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C268);
  MEMORY[0x24BDAC7A8](v501);
  v475 = &v444[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v477 = &v444[-v15];
  MEMORY[0x24BDAC7A8](v16);
  v473 = &v444[-v17];
  MEMORY[0x24BDAC7A8](v18);
  v476 = &v444[-v19];
  MEMORY[0x24BDAC7A8](v20);
  v472 = &v444[-v21];
  MEMORY[0x24BDAC7A8](v22);
  v474 = &v444[-v23];
  MEMORY[0x24BDAC7A8](v24);
  v471 = &v444[-v25];
  MEMORY[0x24BDAC7A8](v26);
  v469 = &v444[-v27];
  MEMORY[0x24BDAC7A8](v28);
  v470 = &v444[-v29];
  MEMORY[0x24BDAC7A8](v30);
  v468 = &v444[-v31];
  MEMORY[0x24BDAC7A8](v32);
  v492 = &v444[-v33];
  MEMORY[0x24BDAC7A8](v34);
  v461 = &v444[-v35];
  MEMORY[0x24BDAC7A8](v36);
  v491 = &v444[-v37];
  MEMORY[0x24BDAC7A8](v38);
  v488 = &v444[-v39];
  MEMORY[0x24BDAC7A8](v40);
  v490 = &v444[-v41];
  MEMORY[0x24BDAC7A8](v42);
  v497 = &v444[-v43];
  MEMORY[0x24BDAC7A8](v44);
  v489 = &v444[-v45];
  MEMORY[0x24BDAC7A8](v46);
  v487 = &v444[-v47];
  MEMORY[0x24BDAC7A8](v48);
  v496 = &v444[-v49];
  MEMORY[0x24BDAC7A8](v50);
  v486 = &v444[-v51];
  MEMORY[0x24BDAC7A8](v52);
  v495 = &v444[-v53];
  MEMORY[0x24BDAC7A8](v54);
  v485 = &v444[-v55];
  v494 = type metadata accessor for EffortSectionTitle(0);
  MEMORY[0x24BDAC7A8](v494);
  v462 = &v444[-((v56 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v57);
  v463 = &v444[-v58];
  MEMORY[0x24BDAC7A8](v59);
  v464 = &v444[-v60];
  MEMORY[0x24BDAC7A8](v61);
  v465 = &v444[-v62];
  MEMORY[0x24BDAC7A8](v63);
  v482 = &v444[-v64];
  MEMORY[0x24BDAC7A8](v65);
  v483 = &v444[-v66];
  MEMORY[0x24BDAC7A8](v67);
  v484 = &v444[-v68];
  MEMORY[0x24BDAC7A8](v69);
  v71 = &v444[-v70];
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v72 = (id)qword_2544D6158;
  v73 = sub_24A77856C();
  v75 = v74;

  v513 = (__int128 *)v73;
  v514 = (__int128 *)v75;
  v447 = sub_24A645928();
  v76 = sub_24A77AFD8();
  v78 = v77;
  v80 = v79 & 1;
  v81 = sub_24A77AF84();
  v479 = v82;
  v480 = v81;
  v481 = v83;
  v478 = v84 & 1;
  sub_24A64596C(v76, v78, v80);
  swift_bridgeObjectRelease();
  v450 = sub_24A77ACC0();
  sub_24A77A390();
  v448 = v86;
  v449 = v85;
  v88 = v87;
  v90 = v89;
  v91 = *MEMORY[0x24BEC5DA0];
  v92 = sub_24A7797A8();
  v93 = *(_QWORD *)(v92 - 8);
  v502 = *(void (**)(_QWORD, _QWORD, _QWORD))(v93 + 104);
  v503 = (void (*)(_QWORD, _QWORD))v92;
  v502(v71, v91, v92);
  v94 = (int *)v494;
  *(_QWORD *)&v71[*(int *)(v494 + 20)] = 0x403E000000000000;
  *(_QWORD *)&v71[v94[6]] = 0x4010000000000000;
  v460 = v71;
  v95 = v94[7];
  sub_24A77AE40();
  sub_24A77ADD4();
  v96 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v71[v95] = v96;
  v97 = v94[8];
  *(_QWORD *)&v71[v97] = sub_24A77AD2C();
  v98 = v94[9];
  *(_QWORD *)&v71[v98] = sub_24A77B368();
  v99 = v91;
  v101 = v502;
  v100 = v503;
  v502(v12, v99, v503);
  v498 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v93 + 56);
  v498(v12, 0, 1, v100);
  v533 = *a1;
  v534 = *((_QWORD *)a1 + 2);
  v504 = *a1;
  v505 = *((_QWORD *)a1 + 2);
  v500 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
  sub_24A77B578();
  v102 = v513;
  v103 = v514;
  v104 = v515;
  v531 = *(__int128 *)((char *)a1 + 24);
  v532 = *((_BYTE *)a1 + 40);
  v504 = *(__int128 *)((char *)a1 + 24);
  v105 = *((_BYTE *)a1 + 40);
  v459 = a1;
  LOBYTE(v505) = v105;
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDB0);
  sub_24A77B578();
  v107 = v513;
  v108 = v514;
  v109 = (int *)v446;
  *(_QWORD *)&v12[*(int *)(v446 + 20)] = 3;
  v110 = (char)v515;
  v111 = (__int128 **)&v12[v109[6]];
  *v111 = v102;
  v111[1] = v103;
  v111[2] = v104;
  v112 = &v12[v109[7]];
  *(_QWORD *)v112 = v107;
  *((_QWORD *)v112 + 1) = v108;
  v112[16] = v110;
  v113 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v114 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v113] = v114;
  v115 = v109[9];
  sub_24A77AD98();
  v116 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v115] = v116;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v100) = sub_24A77ACC0();
  sub_24A77A390();
  v118 = v117;
  v120 = v119;
  v122 = v121;
  v124 = v123;
  v125 = v495;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v495, type metadata accessor for EffortButton);
  v126 = &v125[*(int *)(v501 + 36)];
  *v126 = (_BYTE)v100;
  *((_QWORD *)v126 + 1) = v118;
  *((_QWORD *)v126 + 2) = v120;
  *((_QWORD *)v126 + 3) = v122;
  *((_QWORD *)v126 + 4) = v124;
  v126[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v125, (uint64_t)v485, &qword_25794C268);
  v127 = v503;
  v101(v12, *MEMORY[0x24BEC5DA8], v503);
  v128 = v498;
  v498(v12, 0, 1, v127);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v129 = v513;
  v130 = v514;
  v131 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  v499 = v106;
  sub_24A77B578();
  v132 = v513;
  v133 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v134 = (char)v515;
  v135 = (__int128 **)&v12[v109[6]];
  *v135 = v129;
  v135[1] = v130;
  v135[2] = v131;
  v136 = &v12[v109[7]];
  *(_QWORD *)v136 = v132;
  *((_QWORD *)v136 + 1) = v133;
  v136[16] = v134;
  v137 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v138 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v137] = v138;
  v139 = v109[9];
  sub_24A77AD98();
  v140 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v139] = v140;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v127) = sub_24A77ACC0();
  sub_24A77A390();
  v142 = v141;
  v144 = v143;
  v146 = v145;
  v148 = v147;
  v149 = v486;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v486, type metadata accessor for EffortButton);
  v150 = v501;
  v151 = &v149[*(int *)(v501 + 36)];
  *v151 = (_BYTE)v127;
  *((_QWORD *)v151 + 1) = v142;
  *((_QWORD *)v151 + 2) = v144;
  *((_QWORD *)v151 + 3) = v146;
  *((_QWORD *)v151 + 4) = v148;
  v151[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v149, (uint64_t)v495, &qword_25794C268);
  v152 = v503;
  v502(v12, *MEMORY[0x24BEC5DB0], v503);
  v128(v12, 0, 1, v152);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v153 = v513;
  v154 = v514;
  v155 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v156 = v513;
  v157 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v158 = (char)v515;
  v159 = (__int128 **)&v12[v109[6]];
  *v159 = v153;
  v159[1] = v154;
  v159[2] = v155;
  v160 = &v12[v109[7]];
  *(_QWORD *)v160 = v156;
  *((_QWORD *)v160 + 1) = v157;
  v160[16] = v158;
  v161 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v162 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v161] = v162;
  v163 = v109[9];
  sub_24A77AD98();
  v164 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v163] = v164;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v152) = sub_24A77ACC0();
  sub_24A77A390();
  v166 = v165;
  v168 = v167;
  v170 = v169;
  v172 = v171;
  v173 = v496;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v496, type metadata accessor for EffortButton);
  v174 = &v173[*(int *)(v150 + 36)];
  *v174 = (_BYTE)v152;
  *((_QWORD *)v174 + 1) = v166;
  *((_QWORD *)v174 + 2) = v168;
  *((_QWORD *)v174 + 3) = v170;
  *((_QWORD *)v174 + 4) = v172;
  v174[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v173, (uint64_t)v149, &qword_25794C268);
  v445 = *MEMORY[0x24BEC5DB8];
  v175 = v484;
  v177 = v502;
  v176 = v503;
  ((void (*)(_BYTE *))v502)(v484);
  v178 = v494;
  *(_QWORD *)&v175[*(int *)(v494 + 20)] = 0x403E000000000000;
  *(_QWORD *)&v175[*(int *)(v178 + 24)] = 0x4010000000000000;
  v179 = *(int *)(v178 + 28);
  v180 = v178;
  sub_24A77AE40();
  sub_24A77ADD4();
  v181 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v175[v179] = v181;
  v182 = *(int *)(v180 + 32);
  *(_QWORD *)&v175[v182] = sub_24A77AD2C();
  v183 = *(int *)(v180 + 36);
  *(_QWORD *)&v175[v183] = sub_24A77B368();
  v177(v12, v445, v176);
  v184 = v498;
  v498(v12, 0, 1, v176);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v185 = v513;
  v186 = v514;
  v187 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v188 = v513;
  v189 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v190 = (char)v515;
  v191 = (__int128 **)&v12[v109[6]];
  *v191 = v185;
  v191[1] = v186;
  v191[2] = v187;
  v192 = &v12[v109[7]];
  *(_QWORD *)v192 = v188;
  *((_QWORD *)v192 + 1) = v189;
  v192[16] = v190;
  v193 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v194 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v193] = v194;
  v195 = v109[9];
  sub_24A77AD98();
  v196 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v195] = v196;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v176) = sub_24A77ACC0();
  sub_24A77A390();
  v198 = v197;
  v200 = v199;
  v202 = v201;
  v204 = v203;
  v205 = v487;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v487, type metadata accessor for EffortButton);
  v206 = v501;
  v207 = &v205[*(int *)(v501 + 36)];
  *v207 = (_BYTE)v176;
  *((_QWORD *)v207 + 1) = v198;
  *((_QWORD *)v207 + 2) = v200;
  *((_QWORD *)v207 + 3) = v202;
  *((_QWORD *)v207 + 4) = v204;
  v207[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v205, (uint64_t)v496, &qword_25794C268);
  v208 = v503;
  v502(v12, *MEMORY[0x24BEC5DC0], v503);
  v184(v12, 0, 1, v208);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v209 = v513;
  v210 = v514;
  v211 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v212 = v513;
  v213 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v214 = (char)v515;
  v215 = (__int128 **)&v12[v109[6]];
  *v215 = v209;
  v215[1] = v210;
  v215[2] = v211;
  v216 = &v12[v109[7]];
  *(_QWORD *)v216 = v212;
  *((_QWORD *)v216 + 1) = v213;
  v216[16] = v214;
  v217 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v218 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v217] = v218;
  v219 = v109[9];
  sub_24A77AD98();
  v220 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v219] = v220;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v208) = sub_24A77ACC0();
  sub_24A77A390();
  v222 = v221;
  v224 = v223;
  v226 = v225;
  v228 = v227;
  v229 = v489;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v489, type metadata accessor for EffortButton);
  v230 = &v229[*(int *)(v206 + 36)];
  *v230 = (_BYTE)v208;
  *((_QWORD *)v230 + 1) = v222;
  *((_QWORD *)v230 + 2) = v224;
  *((_QWORD *)v230 + 3) = v226;
  *((_QWORD *)v230 + 4) = v228;
  v230[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v229, (uint64_t)v205, &qword_25794C268);
  v231 = v503;
  v502(v12, *MEMORY[0x24BEC5DC8], v503);
  v498(v12, 0, 1, v231);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v232 = v513;
  v233 = v514;
  v234 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v235 = v513;
  v236 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v237 = (char)v515;
  v238 = (__int128 **)&v12[v109[6]];
  *v238 = v232;
  v238[1] = v233;
  v238[2] = v234;
  v239 = &v12[v109[7]];
  *(_QWORD *)v239 = v235;
  *((_QWORD *)v239 + 1) = v236;
  v239[16] = v237;
  v240 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v241 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v240] = v241;
  v242 = v109[9];
  sub_24A77AD98();
  v243 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v242] = v243;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v208) = sub_24A77ACC0();
  sub_24A77A390();
  v245 = v244;
  v247 = v246;
  v249 = v248;
  v251 = v250;
  v252 = v497;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v497, type metadata accessor for EffortButton);
  v253 = &v252[*(int *)(v501 + 36)];
  *v253 = (_BYTE)v208;
  *((_QWORD *)v253 + 1) = v245;
  *((_QWORD *)v253 + 2) = v247;
  *((_QWORD *)v253 + 3) = v249;
  *((_QWORD *)v253 + 4) = v251;
  v253[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v252, (uint64_t)v229, &qword_25794C268);
  v254 = *MEMORY[0x24BEC5DD0];
  v255 = v483;
  v256 = v502;
  v502(v483, v254, v231);
  v257 = (int *)v494;
  *(_QWORD *)&v255[*(int *)(v494 + 20)] = 0x403E000000000000;
  *(_QWORD *)&v255[v257[6]] = 0x4010000000000000;
  v258 = v257[7];
  sub_24A77AE40();
  sub_24A77ADD4();
  v259 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v255[v258] = v259;
  v260 = v257[8];
  *(_QWORD *)&v255[v260] = sub_24A77AD2C();
  v261 = v257[9];
  *(_QWORD *)&v255[v261] = sub_24A77B368();
  v262 = v503;
  v256(v12, v254, v503);
  v263 = v498;
  v498(v12, 0, 1, v262);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v264 = v513;
  v265 = v514;
  v266 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v267 = v513;
  v268 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v269 = (char)v515;
  v270 = (__int128 **)&v12[v109[6]];
  *v270 = v264;
  v270[1] = v265;
  v270[2] = v266;
  v271 = &v12[v109[7]];
  *(_QWORD *)v271 = v267;
  *((_QWORD *)v271 + 1) = v268;
  v271[16] = v269;
  v272 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v273 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v272] = v273;
  v274 = v109[9];
  sub_24A77AD98();
  v275 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v274] = v275;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v254) = sub_24A77ACC0();
  sub_24A77A390();
  v277 = v276;
  v279 = v278;
  v281 = v280;
  v283 = v282;
  v284 = v490;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v490, type metadata accessor for EffortButton);
  v285 = &v284[*(int *)(v501 + 36)];
  *v285 = v254;
  *((_QWORD *)v285 + 1) = v277;
  *((_QWORD *)v285 + 2) = v279;
  *((_QWORD *)v285 + 3) = v281;
  *((_QWORD *)v285 + 4) = v283;
  v285[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  v286 = (uint64_t)v284;
  sub_24A63F6C4((uint64_t)v284, (uint64_t)v497, &qword_25794C268);
  v502(v12, *MEMORY[0x24BEC5DD8], v262);
  v263(v12, 0, 1, v262);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v287 = v513;
  v288 = v514;
  v289 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v290 = v513;
  v291 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v292 = (char)v515;
  v293 = (__int128 **)&v12[v109[6]];
  *v293 = v287;
  v293[1] = v288;
  v293[2] = v289;
  v294 = &v12[v109[7]];
  *(_QWORD *)v294 = v290;
  *((_QWORD *)v294 + 1) = v291;
  v294[16] = v292;
  v295 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v296 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v295] = v296;
  v297 = v109[9];
  sub_24A77AD98();
  v298 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v297] = v298;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v254) = sub_24A77ACC0();
  sub_24A77A390();
  v300 = v299;
  v302 = v301;
  v304 = v303;
  v306 = v305;
  v307 = v488;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v488, type metadata accessor for EffortButton);
  v308 = &v307[*(int *)(v501 + 36)];
  *v308 = v254;
  *((_QWORD *)v308 + 1) = v300;
  *((_QWORD *)v308 + 2) = v302;
  *((_QWORD *)v308 + 3) = v304;
  *((_QWORD *)v308 + 4) = v306;
  v308[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v307, v286, &qword_25794C268);
  v445 = *MEMORY[0x24BEC5DE0];
  v309 = v482;
  v311 = v502;
  v310 = v503;
  ((void (*)(_BYTE *))v502)(v482);
  v312 = (int *)v494;
  *(_QWORD *)&v309[*(int *)(v494 + 20)] = 0x403E000000000000;
  *(_QWORD *)&v309[v312[6]] = 0x4010000000000000;
  v313 = v312[7];
  sub_24A77AE40();
  sub_24A77ADD4();
  v314 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v309[v313] = v314;
  v315 = v312[8];
  *(_QWORD *)&v309[v315] = sub_24A77AD2C();
  v316 = v312[9];
  *(_QWORD *)&v309[v316] = sub_24A77B368();
  v311(v12, v445, v310);
  v317 = v498;
  v498(v12, 0, 1, v310);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v318 = v513;
  v319 = v514;
  v320 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v321 = v513;
  v322 = v514;
  *(_QWORD *)&v12[v109[5]] = 0;
  v323 = (char)v515;
  v324 = (__int128 **)&v12[v109[6]];
  *v324 = v318;
  v324[1] = v319;
  v324[2] = v320;
  v325 = &v12[v109[7]];
  *(_QWORD *)v325 = v321;
  *((_QWORD *)v325 + 1) = v322;
  v325[16] = v323;
  v326 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v327 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v326] = v327;
  v328 = v109[9];
  sub_24A77AD98();
  v329 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v328] = v329;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v310) = sub_24A77ACC0();
  sub_24A77A390();
  v331 = v330;
  v333 = v332;
  v335 = v334;
  v337 = v336;
  v338 = v491;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v491, type metadata accessor for EffortButton);
  v339 = v501;
  v340 = &v338[*(int *)(v501 + 36)];
  *v340 = (_BYTE)v310;
  *((_QWORD *)v340 + 1) = v331;
  *((_QWORD *)v340 + 2) = v333;
  *((_QWORD *)v340 + 3) = v335;
  *((_QWORD *)v340 + 4) = v337;
  v340[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v338, (uint64_t)v488, &qword_25794C268);
  v341 = v503;
  v502(v12, *MEMORY[0x24BEC5DE8], v503);
  v317(v12, 0, 1, v341);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v342 = v513;
  v343 = v514;
  v344 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v345 = v513;
  v346 = v514;
  *(_QWORD *)&v12[v109[5]] = 12;
  v347 = (char)v515;
  v348 = (__int128 **)&v12[v109[6]];
  *v348 = v342;
  v348[1] = v343;
  v348[2] = v344;
  v349 = &v12[v109[7]];
  *(_QWORD *)v349 = v345;
  *((_QWORD *)v349 + 1) = v346;
  v349[16] = v347;
  v350 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v351 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v350] = v351;
  v352 = v109[9];
  sub_24A77AD98();
  v353 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v352] = v353;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v341) = sub_24A77ACC0();
  sub_24A77A390();
  v355 = v354;
  v357 = v356;
  v359 = v358;
  v361 = v360;
  v362 = v461;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v461, type metadata accessor for EffortButton);
  v363 = &v362[*(int *)(v339 + 36)];
  v364 = (uint64_t)v362;
  *v363 = (_BYTE)v341;
  *((_QWORD *)v363 + 1) = v355;
  *((_QWORD *)v363 + 2) = v357;
  *((_QWORD *)v363 + 3) = v359;
  *((_QWORD *)v363 + 4) = v361;
  v363[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v362, (uint64_t)v491, &qword_25794C268);
  v365 = v452;
  sub_24A77B5B4();
  LOBYTE(v341) = sub_24A77ACC0();
  sub_24A77A390();
  v367 = v366;
  v369 = v368;
  v371 = v370;
  v373 = v372;
  v375 = v453;
  v374 = v454;
  v376 = v493;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v453 + 16))(v493, v365, v454);
  v377 = &v376[*(int *)(v451 + 36)];
  *v377 = (_BYTE)v341;
  *((_QWORD *)v377 + 1) = v367;
  *((_QWORD *)v377 + 2) = v369;
  *((_QWORD *)v377 + 3) = v371;
  *((_QWORD *)v377 + 4) = v373;
  v377[40] = 0;
  (*(void (**)(_BYTE *, uint64_t))(v375 + 8))(v365, v374);
  sub_24A63F6C4((uint64_t)v376, (uint64_t)v466, &qword_25794C260);
  v317(v12, 1, 1, v503);
  v504 = v533;
  v505 = v534;
  sub_24A77B578();
  v378 = v513;
  v379 = v514;
  v380 = v515;
  v504 = v531;
  LOBYTE(v505) = v532;
  sub_24A77B578();
  v381 = v513;
  v382 = v514;
  *(_QWORD *)&v12[v109[5]] = 15;
  v383 = (char)v515;
  v384 = (__int128 **)&v12[v109[6]];
  *v384 = v378;
  v384[1] = v379;
  v384[2] = v380;
  v385 = &v12[v109[7]];
  *(_QWORD *)v385 = v381;
  *((_QWORD *)v385 + 1) = v382;
  v385[16] = v383;
  v386 = v109[8];
  sub_24A77AE40();
  sub_24A77ADEC();
  v387 = sub_24A77AE58();
  swift_release();
  *(_QWORD *)&v12[v386] = v387;
  v388 = v109[9];
  sub_24A77AD98();
  v389 = sub_24A77ADA4();
  swift_release();
  *(_QWORD *)&v12[v388] = v389;
  *(_QWORD *)&v12[v109[10]] = 0x4049000000000000;
  *(_QWORD *)&v12[v109[11]] = 0x402C000000000000;
  LOBYTE(v341) = sub_24A77ACC0();
  sub_24A77A390();
  v391 = v390;
  v393 = v392;
  v395 = v394;
  v397 = v396;
  v398 = v492;
  sub_24A65FAD0((uint64_t)v12, (uint64_t)v492, type metadata accessor for EffortButton);
  v399 = &v398[*(int *)(v501 + 36)];
  *v399 = (_BYTE)v341;
  *((_QWORD *)v399 + 1) = v391;
  *((_QWORD *)v399 + 2) = v393;
  *((_QWORD *)v399 + 3) = v395;
  *((_QWORD *)v399 + 4) = v397;
  v399[40] = 0;
  sub_24A65FB14((uint64_t)v12, type metadata accessor for EffortButton);
  sub_24A63F6C4((uint64_t)v398, v364, &qword_25794C268);
  v400 = (id)qword_2544D6158;
  v401 = sub_24A77856C();
  v403 = v402;

  v513 = (__int128 *)v401;
  v514 = (__int128 *)v403;
  v404 = sub_24A77AFD8();
  v406 = v405;
  LOBYTE(v398) = v407 & 1;
  sub_24A77AEA0();
  sub_24A77ADEC();
  sub_24A77AE58();
  swift_release();
  v408 = sub_24A77AF84();
  v410 = v409;
  LOBYTE(v364) = v411;
  v413 = v412;
  swift_release();
  sub_24A64596C(v404, v406, (char)v398);
  swift_bridgeObjectRelease();
  LOBYTE(v404) = sub_24A77ACC0();
  sub_24A77A390();
  v513 = (__int128 *)v408;
  v514 = (__int128 *)v410;
  LOBYTE(v515) = v364 & 1;
  v516 = v413;
  LOBYTE(v517) = v404;
  v518 = v414;
  v519 = v415;
  v520 = v416;
  v521 = v417;
  LOBYTE(v522) = 0;
  sub_24A77ACA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C270);
  sub_24A6F93BC();
  sub_24A77B0F8();
  sub_24A64596C(v408, v410, v364 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v504 = v480;
  *((_QWORD *)&v504 + 1) = v479;
  LOBYTE(v505) = v478;
  v506 = v481;
  v507 = v450;
  v508 = v449;
  v509 = v448;
  v510 = v88;
  v511 = v90;
  v512 = 0;
  v513 = &v504;
  v418 = v465;
  sub_24A65FAD0((uint64_t)v460, (uint64_t)v465, type metadata accessor for EffortSectionTitle);
  v514 = (__int128 *)v418;
  v419 = v492;
  sub_24A63CCC0((uint64_t)v485, (uint64_t)v492, &qword_25794C268);
  v515 = (__int128 *)v419;
  v420 = v468;
  sub_24A63CCC0((uint64_t)v495, (uint64_t)v468, &qword_25794C268);
  v516 = v420;
  v421 = v470;
  sub_24A63CCC0((uint64_t)v486, (uint64_t)v470, &qword_25794C268);
  v517 = v421;
  v422 = v464;
  sub_24A65FAD0((uint64_t)v484, (uint64_t)v464, type metadata accessor for EffortSectionTitle);
  v518 = v422;
  v423 = v469;
  sub_24A63CCC0((uint64_t)v496, (uint64_t)v469, &qword_25794C268);
  v519 = v423;
  v424 = v471;
  sub_24A63CCC0((uint64_t)v487, (uint64_t)v471, &qword_25794C268);
  v520 = v424;
  v425 = v474;
  sub_24A63CCC0((uint64_t)v489, (uint64_t)v474, &qword_25794C268);
  v521 = v425;
  v426 = v463;
  sub_24A65FAD0((uint64_t)v483, (uint64_t)v463, type metadata accessor for EffortSectionTitle);
  v522 = v426;
  v427 = v472;
  sub_24A63CCC0((uint64_t)v497, (uint64_t)v472, &qword_25794C268);
  v523 = v427;
  v428 = v476;
  sub_24A63CCC0((uint64_t)v490, (uint64_t)v476, &qword_25794C268);
  v524 = v428;
  v429 = v462;
  sub_24A65FAD0((uint64_t)v482, (uint64_t)v462, type metadata accessor for EffortSectionTitle);
  v525 = v429;
  v430 = v488;
  v431 = v473;
  sub_24A63CCC0((uint64_t)v488, (uint64_t)v473, &qword_25794C268);
  v526 = v431;
  v432 = v491;
  v433 = v477;
  sub_24A63CCC0((uint64_t)v491, (uint64_t)v477, &qword_25794C268);
  v527 = v433;
  v434 = v466;
  v435 = v493;
  sub_24A63CCC0((uint64_t)v466, (uint64_t)v493, &qword_25794C260);
  v528 = v435;
  v436 = v461;
  v437 = v475;
  sub_24A63CCC0((uint64_t)v461, (uint64_t)v475, &qword_25794C268);
  v529 = v437;
  v438 = v456;
  v439 = v457;
  v440 = v467;
  v441 = v458;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v456 + 16))(v457, v467, v458);
  v530 = v439;
  sub_24A6F4FD0((uint64_t)&v513, v455);
  sub_24A6436C4(v480, v479, v478);
  v442 = *(void (**)(_QWORD, _QWORD))(v438 + 8);
  v503 = v442;
  swift_bridgeObjectRetain();
  v442(v440, v441);
  sub_24A63CD04((uint64_t)v436, &qword_25794C268);
  sub_24A63CD04((uint64_t)v434, &qword_25794C260);
  sub_24A63CD04((uint64_t)v432, &qword_25794C268);
  sub_24A63CD04((uint64_t)v430, &qword_25794C268);
  sub_24A65FB14((uint64_t)v482, type metadata accessor for EffortSectionTitle);
  sub_24A63CD04((uint64_t)v490, &qword_25794C268);
  sub_24A63CD04((uint64_t)v497, &qword_25794C268);
  sub_24A65FB14((uint64_t)v483, type metadata accessor for EffortSectionTitle);
  sub_24A63CD04((uint64_t)v489, &qword_25794C268);
  sub_24A63CD04((uint64_t)v487, &qword_25794C268);
  sub_24A63CD04((uint64_t)v496, &qword_25794C268);
  sub_24A65FB14((uint64_t)v484, type metadata accessor for EffortSectionTitle);
  sub_24A63CD04((uint64_t)v486, &qword_25794C268);
  sub_24A63CD04((uint64_t)v495, &qword_25794C268);
  sub_24A63CD04((uint64_t)v485, &qword_25794C268);
  sub_24A65FB14((uint64_t)v460, type metadata accessor for EffortSectionTitle);
  sub_24A64596C(v480, v479, v478);
  swift_bridgeObjectRelease();
  v503(v439, v441);
  sub_24A63CD04((uint64_t)v475, &qword_25794C268);
  sub_24A63CD04((uint64_t)v493, &qword_25794C260);
  sub_24A63CD04((uint64_t)v477, &qword_25794C268);
  sub_24A63CD04((uint64_t)v473, &qword_25794C268);
  sub_24A65FB14((uint64_t)v462, type metadata accessor for EffortSectionTitle);
  sub_24A63CD04((uint64_t)v476, &qword_25794C268);
  sub_24A63CD04((uint64_t)v472, &qword_25794C268);
  sub_24A65FB14((uint64_t)v463, type metadata accessor for EffortSectionTitle);
  sub_24A63CD04((uint64_t)v474, &qword_25794C268);
  sub_24A63CD04((uint64_t)v471, &qword_25794C268);
  sub_24A63CD04((uint64_t)v469, &qword_25794C268);
  sub_24A65FB14((uint64_t)v464, type metadata accessor for EffortSectionTitle);
  sub_24A63CD04((uint64_t)v470, &qword_25794C268);
  sub_24A63CD04((uint64_t)v468, &qword_25794C268);
  sub_24A63CD04((uint64_t)v492, &qword_25794C268);
  sub_24A65FB14((uint64_t)v465, type metadata accessor for EffortSectionTitle);
  sub_24A64596C(v504, *((uint64_t *)&v504 + 1), v505);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A6F7598@<X0>(uint64_t a1@<X8>)
{
  return sub_24A6F51F4(a1);
}

uint64_t sub_24A6F75E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6F544C(*(__int128 **)(v1 + 16), a1);
}

unint64_t sub_24A6F75F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C230;
  if (!qword_25794C230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C228);
    v2[0] = sub_24A63CFF0(&qword_25794C238, &qword_25794C240, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C230);
  }
  return result;
}

uint64_t sub_24A6F7674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char v40;
  uint64_t v41;
  char v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[7];
  char v66;
  _BYTE v67[7];
  _BYTE v68[7];
  char v69;
  _BYTE v70[7];
  char v71;
  _BYTE v72[7];
  char v73;

  v4 = sub_24A779478();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779760();
  v8 = sub_24A779460();
  v10 = v9;
  v56 = *(void (**)(char *, uint64_t))(v5 + 8);
  v56(v7, v4);
  v63 = v8;
  v64 = v10;
  sub_24A645928();
  v11 = sub_24A77AFD8();
  v13 = v12;
  v15 = v14 & 1;
  v16 = type metadata accessor for EffortSectionTitle(0);
  v17 = sub_24A77AF84();
  v59 = v18;
  v60 = v17;
  v61 = v19;
  v57 = v20 & 1;
  sub_24A64596C(v11, v13, v15);
  swift_bridgeObjectRelease();
  v58 = sub_24A77ACC0();
  sub_24A77A390();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  sub_24A779760();
  v29 = sub_24A779454();
  v31 = v30;
  v56(v7, v4);
  v63 = v29;
  v64 = v31;
  v32 = sub_24A77AFD8();
  v34 = v33;
  LOBYTE(v29) = v35 & 1;
  v36 = sub_24A77AF84();
  v38 = v37;
  v56 = v39;
  LOBYTE(v4) = v40 & 1;
  sub_24A64596C(v32, v34, v29);
  swift_bridgeObjectRelease();
  LOBYTE(v32) = sub_24A77ACC0();
  sub_24A77A390();
  v41 = *(_QWORD *)(a1 + *(int *)(v16 + 36));
  v42 = v57;
  v62 = v57;
  v73 = v57;
  v71 = 0;
  v69 = v4;
  v66 = 0;
  *(_DWORD *)(a2 + 17) = v63;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v63 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v72;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v72[3];
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v70;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v70[3];
  v43 = *(_DWORD *)v68;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v68[3];
  *(_DWORD *)(a2 + 97) = v43;
  v44 = *(_DWORD *)v67;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v67[3];
  *(_DWORD *)(a2 + 113) = v44;
  LOBYTE(v44) = v66;
  v45 = *(_DWORD *)v65;
  *(_DWORD *)(a2 + 156) = *(_DWORD *)&v65[3];
  *(_DWORD *)(a2 + 153) = v45;
  v47 = v59;
  v46 = v60;
  *(_QWORD *)a2 = v60;
  *(_QWORD *)(a2 + 8) = v47;
  *(_BYTE *)(a2 + 16) = v42;
  *(_QWORD *)(a2 + 24) = v61;
  *(_BYTE *)(a2 + 32) = v58;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = v24;
  *(_QWORD *)(a2 + 56) = v26;
  *(_QWORD *)(a2 + 64) = v28;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v36;
  *(_QWORD *)(a2 + 88) = v38;
  *(_BYTE *)(a2 + 96) = v4;
  *(_QWORD *)(a2 + 104) = v56;
  *(_BYTE *)(a2 + 112) = v32;
  *(_QWORD *)(a2 + 120) = v48;
  *(_QWORD *)(a2 + 128) = v49;
  *(_QWORD *)(a2 + 136) = v50;
  *(_QWORD *)(a2 + 144) = v51;
  *(_BYTE *)(a2 + 152) = v44;
  *(_QWORD *)(a2 + 160) = v41;
  v52 = v46;
  v53 = v47;
  sub_24A6436C4(v46, v47, v42);
  swift_bridgeObjectRetain();
  sub_24A6436C4(v36, v38, v4);
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_24A64596C(v36, v38, v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24A64596C(v52, v53, v62);
  return swift_bridgeObjectRelease();
}

__n128 sub_24A6F79C8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  _OWORD v8[10];
  uint64_t v9;

  sub_24A6F7674(v1, (uint64_t)v8);
  v3 = v8[9];
  *(_OWORD *)(a1 + 128) = v8[8];
  *(_OWORD *)(a1 + 144) = v3;
  *(_QWORD *)(a1 + 160) = v9;
  v4 = v8[5];
  *(_OWORD *)(a1 + 64) = v8[4];
  *(_OWORD *)(a1 + 80) = v4;
  v5 = v8[7];
  *(_OWORD *)(a1 + 96) = v8[6];
  *(_OWORD *)(a1 + 112) = v5;
  v6 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v6;
  result = (__n128)v8[3];
  *(_OWORD *)(a1 + 32) = v8[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_24A6F7A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;

  v1 = v0;
  v2 = type metadata accessor for EffortButton(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_24A779478();
  v5 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v38 - v15;
  v17 = v0 + *(int *)(v2 + 28);
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  LOBYTE(v17) = *(_BYTE *)(v17 + 16);
  v42 = v18;
  v43 = v19;
  LOBYTE(v44) = v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDB0);
  MEMORY[0x24BD18B74](&v45, v20);
  if (LOBYTE(v45) != 1)
  {
    sub_24A63CCC0(v0, (uint64_t)v13, &qword_257947500);
    v24 = sub_24A7797A8();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    if (v26(v13, 1, v24) == 1)
    {
      sub_24A63CD04((uint64_t)v13, &qword_257947500);
      sub_24A65FAD0(v1, (uint64_t)v4, type metadata accessor for EffortButton);
    }
    else
    {
      v40 = v26;
      sub_24A779760();
      v39 = *(void (**)(char *, uint64_t))(v25 + 8);
      v39(v13, v24);
      v28 = sub_24A77946C();
      v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30 = v41;
      v29(v7, v41);
      sub_24A65FAD0(v1, (uint64_t)v4, type metadata accessor for EffortButton);
      if (v28 > 0)
      {
        v31 = &v4[*(int *)(v2 + 24)];
        v32 = *((_QWORD *)v31 + 1);
        v33 = *((_QWORD *)v31 + 2);
        v42 = *(_QWORD *)v31;
        v43 = v32;
        v44 = v33;
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
        MEMORY[0x24BD18B74](&v45, v34);
        v35 = v45;
        sub_24A63CCC0((uint64_t)v4, (uint64_t)v10, &qword_257947500);
        if (v40(v10, 1, v24) == 1)
        {
          sub_24A63CD04((uint64_t)v10, &qword_257947500);
          v36 = 0.0;
        }
        else
        {
          sub_24A779760();
          v39(v10, v24);
          v37 = sub_24A77946C();
          v29(v7, v30);
          v36 = (double)v37;
        }
        sub_24A65FB14((uint64_t)v4, type metadata accessor for EffortButton);
        return v35 == v36;
      }
    }
    sub_24A65FB14((uint64_t)v4, type metadata accessor for EffortButton);
    return 0;
  }
  sub_24A63CCC0(v0, (uint64_t)v16, &qword_257947500);
  v21 = sub_24A7797A8();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21) == 1)
  {
    sub_24A63CD04((uint64_t)v16, &qword_257947500);
    return 1;
  }
  else
  {
    sub_24A779760();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
    v27 = sub_24A77946C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v41);
    return v27 == 0;
  }
}

uint64_t sub_24A6F7DE8()
{
  sub_24A77B68C();
  sub_24A77A54C();
  return swift_release();
}

uint64_t sub_24A6F7E44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = sub_24A779478();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A7797A8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A63CCC0(a1, (uint64_t)v8, &qword_257947500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24A63CD04((uint64_t)v8, &qword_257947500);
    v13 = type metadata accessor for EffortButton(0);
    v14 = (uint64_t *)(a1 + *(int *)(v13 + 24));
    v15 = v14[1];
    v16 = v14[2];
    v31 = *v14;
    v32 = v15;
    v33 = v16;
    v30 = 0.0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
    sub_24A77B56C();
    v17 = a1 + *(int *)(v13 + 28);
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    LOBYTE(v17) = *(_BYTE *)(v17 + 16);
    v31 = v18;
    v32 = v19;
    LOBYTE(v33) = v17;
    LOBYTE(v30) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDB0);
    return sub_24A77B56C();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_24A779760();
    v21 = sub_24A77946C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v22 = type metadata accessor for EffortButton(0);
    v23 = (uint64_t *)(a1 + *(int *)(v22 + 24));
    v24 = v23[1];
    v25 = v23[2];
    v31 = *v23;
    v32 = v24;
    v33 = v25;
    v30 = (double)v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794BD40);
    sub_24A77B56C();
    v26 = a1 + *(int *)(v22 + 28);
    v27 = *(_QWORD *)v26;
    v28 = *(_QWORD *)(v26 + 8);
    LOBYTE(v26) = *(_BYTE *)(v26 + 16);
    v31 = v27;
    v32 = v28;
    LOBYTE(v33) = v26;
    LOBYTE(v30) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDB0);
    sub_24A77B56C();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_24A6F80C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C450);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C440);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FA0);
  MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FA8);
  MEMORY[0x24BDAC7A8](v11);
  v39 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C420);
  MEMORY[0x24BDAC7A8](v41);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C410);
  MEMORY[0x24BDAC7A8](v42);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C3F8);
  MEMORY[0x24BDAC7A8](v43);
  v44 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_24A77A930();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C468);
  sub_24A6F85C0(a1, (uint64_t)&v5[*(int *)(v18 + 44)]);
  v19 = sub_24A77ACA8();
  sub_24A63CCC0((uint64_t)v5, (uint64_t)v8, &qword_25794C450);
  v20 = &v8[*(int *)(v6 + 36)];
  *v20 = v19;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  v20[40] = 1;
  sub_24A63CD04((uint64_t)v5, &qword_25794C450);
  v21 = (int *)type metadata accessor for EffortButton(0);
  v22 = *(_QWORD *)(a1 + v21[8]);
  KeyPath = swift_getKeyPath();
  sub_24A63CCC0((uint64_t)v8, (uint64_t)v10, &qword_25794C440);
  v24 = (uint64_t *)&v10[*(int *)(v40 + 36)];
  *v24 = KeyPath;
  v24[1] = v22;
  swift_retain();
  v25 = (uint64_t)v39;
  sub_24A63CD04((uint64_t)v8, &qword_25794C440);
  v26 = sub_24A77B668();
  sub_24A642E80(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v25, 0.0, 1, 0.0, 1, v26, v27);
  sub_24A63CD04((uint64_t)v10, &qword_257946FA0);
  sub_24A77B668();
  sub_24A77A6A8();
  sub_24A63CCC0(v25, (uint64_t)v14, &qword_257946FA8);
  v28 = &v14[*(int *)(v41 + 36)];
  v29 = v51;
  *((_OWORD *)v28 + 4) = v50;
  *((_OWORD *)v28 + 5) = v29;
  *((_OWORD *)v28 + 6) = v52;
  v30 = v47;
  *(_OWORD *)v28 = v46;
  *((_OWORD *)v28 + 1) = v30;
  v31 = v49;
  *((_OWORD *)v28 + 2) = v48;
  *((_OWORD *)v28 + 3) = v31;
  sub_24A63CD04(v25, &qword_257946FA8);
  sub_24A77B368();
  v32 = sub_24A77B374();
  swift_release();
  LOBYTE(v10) = sub_24A77ACB4();
  sub_24A63CCC0((uint64_t)v14, (uint64_t)v16, &qword_25794C420);
  v33 = &v16[*(int *)(v42 + 36)];
  *(_QWORD *)v33 = v32;
  v33[8] = (char)v10;
  sub_24A63CD04((uint64_t)v14, &qword_25794C420);
  v34 = *(_QWORD *)(a1 + v21[11]);
  v35 = *(_QWORD *)(a1 + v21[5]);
  v36 = v44;
  sub_24A63CCC0((uint64_t)v16, v44, &qword_25794C410);
  v37 = v36 + *(int *)(v43 + 36);
  *(_QWORD *)v37 = v34;
  *(_QWORD *)(v37 + 8) = v35;
  *(_WORD *)(v37 + 16) = 256;
  sub_24A63CD04((uint64_t)v16, &qword_25794C410);
  return sub_24A63F6C4(v36, v45, &qword_25794C3F8);
}

uint64_t sub_24A6F85C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  v66 = a2;
  v3 = sub_24A779478();
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v59 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v5);
  v64 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948068);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A77B410();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C470);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C478);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C480);
  MEMORY[0x24BDAC7A8](v62);
  v65 = (uint64_t)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v59 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v63 = (uint64_t)&v59 - v25;
  sub_24A6F8C94(a1, (uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BDF40A8], v10);
  KeyPath = swift_getKeyPath();
  v27 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v27 + *(int *)(v28 + 28), v13, v10);
  *v27 = KeyPath;
  sub_24A63CCC0((uint64_t)v16, (uint64_t)v19, &qword_25794C470);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_24A63CD04((uint64_t)v16, &qword_25794C470);
  sub_24A77AA20();
  v29 = sub_24A77AA2C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 0, 1, v29);
  v30 = swift_getKeyPath();
  v31 = (uint64_t *)&v23[*(int *)(v62 + 36)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C488);
  sub_24A63CCC0((uint64_t)v9, (uint64_t)v31 + *(int *)(v32 + 28), &qword_257948068);
  *v31 = v30;
  sub_24A63CCC0((uint64_t)v19, (uint64_t)v23, &qword_25794C478);
  sub_24A63CD04((uint64_t)v9, &qword_257948068);
  sub_24A63CD04((uint64_t)v19, &qword_25794C478);
  v33 = v63;
  sub_24A63F6C4((uint64_t)v23, v63, &qword_25794C480);
  v34 = v64;
  sub_24A63CCC0(a1, v64, &qword_257947500);
  v35 = sub_24A7797A8();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
  {
    sub_24A63CD04(v34, &qword_257947500);
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v37 = (id)qword_2544D6158;
    v38 = sub_24A77856C();
    v40 = v39;

  }
  else
  {
    v41 = v59;
    sub_24A779760();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    v38 = sub_24A779460();
    v40 = v42;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v61);
  }
  v64 = swift_getKeyPath();
  v43 = sub_24A6F7A3C();
  v44 = sub_24A77B3C8();
  v45 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for EffortButton(0) + 36));
  v46 = swift_getKeyPath();
  v67 = v44;
  v68 = v46;
  v69 = v45;
  v70 = (v43 & 1) == 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B2E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C490);
  sub_24A6FA90C((unint64_t *)&qword_25794B2F0, &qword_25794B2E8, (unint64_t *)&qword_257946BF8, &qword_257946C00);
  sub_24A6FA83C();
  sub_24A77AB28();
  v47 = v71;
  v48 = v72;
  v49 = v73;
  v50 = v74;
  v51 = v65;
  sub_24A63CCC0(v33, v65, &qword_25794C480);
  v52 = v66;
  sub_24A63CCC0(v51, v66, &qword_25794C480);
  v53 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25794C4A8);
  v54 = v52 + v53[12];
  *(_QWORD *)v54 = v38;
  *(_QWORD *)(v54 + 8) = v40;
  *(_BYTE *)(v54 + 16) = 0;
  v55 = v64;
  *(_QWORD *)(v54 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v54 + 32) = v55;
  *(_QWORD *)(v54 + 40) = 1;
  *(_BYTE *)(v54 + 48) = 0;
  v56 = v52 + v53[16];
  *(_QWORD *)v56 = 0;
  *(_BYTE *)(v56 + 8) = 1;
  v57 = v52 + v53[20];
  *(_QWORD *)v57 = v47;
  *(_QWORD *)(v57 + 8) = v48;
  *(_QWORD *)(v57 + 16) = v49;
  *(_BYTE *)(v57 + 24) = v50;
  sub_24A6436C4(v38, v40, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A6C4294();
  sub_24A63CD04(v33, &qword_25794C480);
  sub_24A6C42C8();
  sub_24A64596C(v38, v40, 0);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_24A63CD04(v51, &qword_25794C480);
}

uint64_t sub_24A6F8C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v46 = a2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C4B0);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (uint64_t *)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v42);
  v5 = (uint64_t *)((char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_24A77B410();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  MEMORY[0x24BDAC7A8](v47);
  v40 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v45 = (uint64_t)&v37 - v10;
  v11 = sub_24A779478();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v37 - v19;
  v21 = a1;
  sub_24A63CCC0(a1, (uint64_t)&v37 - v19, &qword_257947500);
  v22 = sub_24A7797A8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v24(v20, 1, v22) == 1)
  {
    sub_24A63CD04((uint64_t)v20, &qword_257947500);
LABEL_6:
    v29 = sub_24A77B3EC();
    v31 = v43;
    v30 = v44;
    v32 = v41;
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v41, *MEMORY[0x24BDF40B8], v44);
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)v5 + *(int *)(v42 + 28), v32, v30);
    *v5 = KeyPath;
    v34 = v40;
    sub_24A63CCC0((uint64_t)v5, (uint64_t)v40 + *(int *)(v47 + 36), &qword_2579492E8);
    *v34 = v29;
    swift_retain();
    sub_24A63CD04((uint64_t)v5, &qword_2579492E8);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    swift_release();
    v35 = v45;
    sub_24A63F6C4((uint64_t)v34, v45, &qword_2579492F0);
    sub_24A63CCC0(v35, (uint64_t)v49, &qword_2579492F0);
    swift_storeEnumTagMultiPayload();
    sub_24A6FA90C((unint64_t *)&qword_25794C4B8, &qword_2579492F0, &qword_25794C4C0, &qword_2579492E8);
    sub_24A77AB28();
    return sub_24A63CD04(v35, &qword_2579492F0);
  }
  v39 = v21;
  sub_24A779760();
  v38 = *(void (**)(char *, uint64_t))(v23 + 8);
  v38(v20, v22);
  v25 = sub_24A77946C();
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v14, v11);
  if (!v25)
    goto LABEL_6;
  v27 = v11;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_24A63CCC0(v39, (uint64_t)v17, &qword_257947500);
  if (v24(v17, 1, v22) == 1)
  {
    sub_24A63CD04((uint64_t)v17, &qword_257947500);
    v28 = 0;
  }
  else
  {
    sub_24A779760();
    v38(v17, v22);
    v28 = sub_24A77946C();
    v26(v14, v27);
  }
  v50 = v28;
  sub_24A77C160();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  *v49 = sub_24A77B3C8();
  swift_storeEnumTagMultiPayload();
  sub_24A6FA90C((unint64_t *)&qword_25794C4B8, &qword_2579492F0, &qword_25794C4C0, &qword_2579492E8);
  return sub_24A77AB28();
}

uint64_t sub_24A6F91B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v2;
  v18 = a2;
  v5 = sub_24A77A654();
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C3F0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A65FAD0(v4, (uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EffortButton);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  sub_24A6FA4AC((uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  v20 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C3F8);
  sub_24A6FA524();
  sub_24A77B4B8();
  sub_24A77A648();
  sub_24A63CFF0(&qword_25794C458, &qword_25794C3F0, MEMORY[0x24BDF43B0]);
  sub_24A6FA7D4();
  sub_24A77B0C8();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for EffortButton(uint64_t a1)
{
  return sub_24A6AF174(a1, qword_25794C2E0);
}

uint64_t type metadata accessor for EffortSectionTitle(uint64_t a1)
{
  return sub_24A6AF174(a1, qword_25794C388);
}

unint64_t sub_24A6F93BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C278;
  if (!qword_25794C278)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C270);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C278);
  }
  return result;
}

char *sub_24A6F9420(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_24A7797A8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = a3[6];
    *(_QWORD *)&v4[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    v12 = &v4[v11];
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *(_QWORD *)v12 = *v13;
    *((_QWORD *)v12 + 1) = v14;
    *((_QWORD *)v12 + 2) = v13[2];
    v15 = a3[7];
    v16 = a3[8];
    v17 = &v4[v15];
    v18 = (char *)a2 + v15;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v17[16] = v18[16];
    *(_QWORD *)&v4[v16] = *(uint64_t *)((char *)a2 + v16);
    v20 = a3[10];
    *(_QWORD *)&v4[a3[9]] = *(uint64_t *)((char *)a2 + a3[9]);
    *(_QWORD *)&v4[v20] = *(uint64_t *)((char *)a2 + v20);
    *(_QWORD *)&v4[a3[11]] = *(uint64_t *)((char *)a2 + a3[11]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24A6F9594(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_24A7797A8();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

char *sub_24A6F9638(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  v13 = a3[7];
  v14 = a3[8];
  v15 = &a1[v13];
  v16 = &a2[v13];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v15[16] = v16[16];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v18 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_24A6F9784(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_retain();
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  swift_retain();
  swift_release();
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_retain();
  swift_release();
  v16[16] = v17[16];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  return a1;
}

char *sub_24A6F9964(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  v12 = a3[7];
  v13 = a3[8];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v16 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  return a1;
}

char *sub_24A6F9A7C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release();
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  swift_release();
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_release();
  v16[16] = v17[16];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_release();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_release();
  v18 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  return a1;
}

uint64_t sub_24A6F9C24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6F9C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24A6F9CB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6F9CC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_24A6F9D40()
{
  unint64_t v0;

  sub_24A653FEC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_24A6F9DDC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_24A7797A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24A6F9E9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24A7797A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24A6F9EF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_24A7797A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24A6F9F90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_24A7797A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24A6FA04C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_24A7797A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_24A6FA0D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_24A7797A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_24A6FA170()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6FA17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_24A7797A8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24A6FA1F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A6FA204(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24A7797A8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_24A6FA27C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A7797A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24A6FA308()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C3D0;
  if (!qword_25794C3D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C248);
    v2[0] = sub_24A63CFF0(&qword_25794C3D8, &qword_25794C220, MEMORY[0x24BDEB238]);
    v2[1] = sub_24A63CFF0(&qword_25794C3E0, &qword_25794C3E8, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C3D0);
  }
  return result;
}

uint64_t sub_24A6FA3A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6FA3B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6FA3C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for EffortButton(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = sub_24A7797A8();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6FA4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EffortButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A6FA4F0()
{
  type metadata accessor for EffortButton(0);
  return sub_24A6F7DE8();
}

uint64_t sub_24A6FA51C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A6F80C8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_24A6FA524()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C400;
  if (!qword_25794C400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C3F8);
    v2[0] = sub_24A6FA5A8();
    v2[1] = sub_24A63CFF0(&qword_257948450, &qword_257948458, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C400);
  }
  return result;
}

unint64_t sub_24A6FA5A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C408;
  if (!qword_25794C408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C410);
    v2[0] = sub_24A6FA644(&qword_25794C418, &qword_25794C420, sub_24A6FA6B0);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257948440, &qword_257948448, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C408);
  }
  return result;
}

uint64_t sub_24A6FA644(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A6FA6B0()
{
  return sub_24A6FA644(&qword_25794C428, &qword_257946FA8, (uint64_t (*)(void))sub_24A6FA6CC);
}

unint64_t sub_24A6FA6CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C430;
  if (!qword_25794C430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946FA0);
    v2[0] = sub_24A6FA750();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C430);
  }
  return result;
}

unint64_t sub_24A6FA750()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C438;
  if (!qword_25794C438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C440);
    v2[0] = sub_24A63CFF0(&qword_25794C448, &qword_25794C450, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C438);
  }
  return result;
}

unint64_t sub_24A6FA7D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794C460;
  if (!qword_25794C460)
  {
    v1 = sub_24A77A654();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED858], v1);
    atomic_store(result, (unint64_t *)&qword_25794C460);
  }
  return result;
}

unint64_t sub_24A6FA83C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794C498;
  if (!qword_25794C498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C490);
    v2[0] = sub_24A6FA90C((unint64_t *)&qword_25794B2F0, &qword_25794B2E8, (unint64_t *)&qword_257946BF8, &qword_257946C00);
    v2[1] = sub_24A6FA8C8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794C498);
  }
  return result;
}

unint64_t sub_24A6FA8C8()
{
  unint64_t result;

  result = qword_25794C4A0;
  if (!qword_25794C4A0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED590], MEMORY[0x24BDED5B8]);
    atomic_store(result, (unint64_t *)&qword_25794C4A0);
  }
  return result;
}

uint64_t sub_24A6FA90C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_24A63CFF0(a3, a4, MEMORY[0x24BDF1028]);
    v10[0] = MEMORY[0x24BDF40E8];
    v10[1] = v9;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A6FA98C()
{
  uint64_t v0;

  return sub_24A6F7E44(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24A6FA9A4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C3F0);
  sub_24A77A654();
  sub_24A63CFF0(&qword_25794C458, &qword_25794C3F0, MEMORY[0x24BDF43B0]);
  sub_24A6FA7D4();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24A6FAA2C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794C4C8;
  if (!qword_25794C4C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C4D0);
    v2 = sub_24A63CFF0(&qword_25794C4D8, qword_25794C4E0, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794C4C8);
  }
  return result;
}

uint64_t TimelineSchedule.paused(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v7;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v7 = a1;
  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, v4, a2, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v12, a2);
  result = type metadata accessor for PausableTimelineSchedule(0, a2, a3, v13);
  *(_BYTE *)(a4 + *(int *)(result + 36)) = v7;
  return result;
}

uint64_t sub_24A6FAB58@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_24A77BDE8();
  v7.n128_f64[0] = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  if ((*(_BYTE *)(v2 + *(int *)(a1 + 36)) & 1) != 0)
  {
    v10 = 1;
  }
  else
  {
    sub_24A77A690();
    v10 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v9, v10, 1, AssociatedTypeWitness, v7);
  return sub_24A6FAC5C((uint64_t)v9, a2);
}

uint64_t sub_24A6FAC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_24A77BDE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_24A6FACC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = sub_24A77BDE8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - v5;
  swift_getAssociatedConformanceWitness();
  v7 = swift_getAssociatedTypeWitness();
  v8 = sub_24A77BDE8();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v6, v1, v3, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v6, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v12 = 1;
  }
  else
  {
    sub_24A77BAD0();
    v12 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v11, v12, 1, v7);
  return sub_24A6FAE70((uint64_t)v11, v15);
}

uint64_t sub_24A6FAE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v4 = sub_24A77BDE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_24A6FAF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_24A6FACC0(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_24A6FAF5C()
{
  return 2;
}

uint64_t sub_24A6FAF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_24A6FB690(v2, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  return v4;
}

uint64_t sub_24A6FAFB8()
{
  return sub_24A77BAE8();
}

uint64_t sub_24A6FAFD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v1, 1, AssociatedTypeWitness))
  {
    v4 = sub_24A778818();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    return sub_24A77BDF4();
  }
}

void sub_24A6FB0F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for PausableTimelineSchedule(255, *a1, a1[1], a4);
  JUMPOUT(0x24BD1A1F4);
}

uint64_t type metadata accessor for PausableTimelineSchedule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PausableTimelineSchedule);
}

uint64_t sub_24A6FB124()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24A6FB12C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_24A6FB1A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_24A6FB22C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24A6FB23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_24A6FB284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_24A6FB2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_24A6FB314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_24A6FB35C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_21;
  v9 = v7 + 1;
  v10 = 8 * (v7 + 1);
  if ((v7 + 1) > 3)
    goto LABEL_7;
  v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    v11 = *(_DWORD *)(a1 + v9);
    if (v11)
      goto LABEL_14;
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2)
        goto LABEL_21;
LABEL_7:
      v11 = *(unsigned __int8 *)(a1 + v9);
      if (!*(_BYTE *)(a1 + v9))
        goto LABEL_21;
LABEL_14:
      v13 = (v11 - 1) << v10;
      if (v9 > 3)
        v13 = 0;
      if ((_DWORD)v7 == -1)
        return v6 + v13 + 1;
      if (v9 > 3)
        LODWORD(v9) = 4;
      return ((uint64_t (*)(void))((char *)&loc_24A6FB41C + 4 * byte_24A7852B0[(v9 - 1)]))();
    }
    v11 = *(unsigned __int16 *)(a1 + v9);
    if (*(_WORD *)(a1 + v9))
      goto LABEL_14;
  }
LABEL_21:
  if (v5 >= 0xFE)
    return (*(uint64_t (**)(void))(v4 + 48))();
  v15 = *(unsigned __int8 *)(v7 + a1);
  if (v15 < 2)
    return 0;
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_24A6FB490(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_24A6FB668()
{
  JUMPOUT(0x24BD1A1F4);
}

void sub_24A6FB680()
{
  JUMPOUT(0x24BD1A1F4);
}

uint64_t sub_24A6FB694()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  result = sub_24A77BDE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24A6FB778(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  uint64_t v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64) + 1;
  if (*(_DWORD *)(v5 + 80) > 7u || (v6 & 0x100000) != 0 || v7 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_24A6FB8B8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

void *sub_24A6FB98C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24A6FBA94(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_24A6FBBE0(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24A6FBCE8(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_24A6FBE34(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v13;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  if (a2 > v6)
  {
    v8 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (v9)
        goto LABEL_15;
    }
    else
    {
      if (v10 <= 0xFF)
      {
        if (v10 < 2)
          goto LABEL_22;
LABEL_8:
        v9 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_22;
LABEL_15:
        v11 = (v9 - 1) << v8;
        if (v7 > 3)
          v11 = 0;
        if ((_DWORD)v7)
        {
          if (v7 > 3)
            LODWORD(v7) = 4;
          __asm { BR              X12 }
        }
        return v6 + v11 + 1;
      }
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v13 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

void sub_24A6FBFEC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = 0;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  if (a3 > v9)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 >= a2)
LABEL_20:
        __asm { BR              X11 }
LABEL_13:
      v12 = ~v9 + a2;
      if (v10 < 4)
      {
        if ((_DWORD)v10)
        {
          v13 = v12 & ~(-1 << (8 * v10));
          bzero(a1, v10);
          if ((_DWORD)v10 == 3)
          {
            *(_WORD *)a1 = v13;
            a1[2] = BYTE2(v13);
          }
          else if ((_DWORD)v10 == 2)
          {
            *(_WORD *)a1 = v13;
          }
          else
          {
            *a1 = v13;
          }
        }
      }
      else
      {
        bzero(a1, v10);
        *(_DWORD *)a1 = v12;
      }
      __asm { BR              X10 }
    }
    v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      v6 = 4u;
      if (v9 >= a2)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v11 >= 0x100)
      v6 = 2;
    else
      v6 = v11 > 1;
  }
  if (v9 >= a2)
    goto LABEL_20;
  goto LABEL_13;
}

void sub_24A6FC208()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_24A6FC210()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for PausableTimelineSchedule.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PausableTimelineSchedule.Iterator);
}

uint64_t sub_24A6FC244()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_24A77BDE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24A6FC2CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64) + 1;
  if (*(_DWORD *)(v5 + 80) > 7u || (v6 & 0x100000) != 0 || v7 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_24A6FC3C0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

void *sub_24A6FC440(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24A6FC4F4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_24A6FC5F4(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24A6FC6A8(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_24A6FC7A8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  if (a2 > v6)
  {
    v8 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (v9)
        goto LABEL_15;
    }
    else
    {
      if (v10 <= 0xFF)
      {
        if (v10 < 2)
          goto LABEL_22;
LABEL_8:
        v9 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_22;
LABEL_15:
        v11 = (v9 - 1) << v8;
        if (v7 > 3)
          v11 = 0;
        if ((_DWORD)v7)
        {
          if (v7 > 3)
            LODWORD(v7) = 4;
          __asm { BR              X12 }
        }
        return v6 + v11 + 1;
      }
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v13 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

void sub_24A6FC904(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = 0;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  if (a3 > v9)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 >= a2)
LABEL_20:
        __asm { BR              X11 }
LABEL_13:
      v12 = ~v9 + a2;
      if (v10 < 4)
      {
        if ((_DWORD)v10)
        {
          v13 = v12 & ~(-1 << (8 * v10));
          bzero(a1, v10);
          if ((_DWORD)v10 == 3)
          {
            *(_WORD *)a1 = v13;
            a1[2] = BYTE2(v13);
          }
          else if ((_DWORD)v10 == 2)
          {
            *(_WORD *)a1 = v13;
          }
          else
          {
            *a1 = v13;
          }
        }
      }
      else
      {
        bzero(a1, v10);
        *(_DWORD *)a1 = v12;
      }
      __asm { BR              X10 }
    }
    v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      v6 = 4u;
      if (v9 >= a2)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v11 >= 0x100)
      v6 = 2;
    else
      v6 = v11 > 1;
  }
  if (v9 >= a2)
    goto LABEL_20;
  goto LABEL_13;
}

void sub_24A6FCACC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_24A6FCAD4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for PausableTimelineSchedule.Entries(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PausableTimelineSchedule.Entries);
}

BOOL static WorkoutViewStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t View.workoutViewStyle(_:)()
{
  swift_getKeyPath();
  sub_24A77B0D4();
  return swift_release();
}

uint64_t WorkoutViewStyle.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t WorkoutViewStyle.hashValue.getter()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t sub_24A6FCBF4()
{
  sub_24A6FCD4C();
  return sub_24A77A558();
}

uint64_t EnvironmentValues.workoutViewStyle.getter()
{
  sub_24A63F8F4();
  return sub_24A77A8E8();
}

uint64_t EnvironmentValues.workoutViewStyle.setter()
{
  sub_24A63F8F4();
  return sub_24A77A8F4();
}

uint64_t (*EnvironmentValues.workoutViewStyle.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_24A63F8F4();
  sub_24A77A8E8();
  return sub_24A6FCD14;
}

uint64_t sub_24A6FCD14(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_24A77A8F4();
}

unint64_t sub_24A6FCD4C()
{
  unint64_t result;

  result = qword_25794C668;
  if (!qword_25794C668)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for WorkoutViewStyle, &type metadata for WorkoutViewStyle);
    atomic_store(result, (unint64_t *)&qword_25794C668);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutViewStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutViewStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_24A6FCE74 + 4 * byte_24A785435[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_24A6FCEA8 + 4 * byte_24A785430[v4]))();
}

uint64_t sub_24A6FCEA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6FCEB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A6FCEB8);
  return result;
}

uint64_t sub_24A6FCEC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A6FCECCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_24A6FCED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A6FCED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutViewStyle()
{
  return &type metadata for WorkoutViewStyle;
}

uint64_t sub_24A6FCEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579470B0);
  v2 = sub_24A77A5F4();
  v4[0] = v1;
  v4[1] = sub_24A645A2C();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

ValueMetadata *type metadata accessor for WorkoutViewStyleKey()
{
  return &type metadata for WorkoutViewStyleKey;
}

ValueMetadata *type metadata accessor for AddToWatchButton()
{
  return &type metadata for AddToWatchButton;
}

uint64_t sub_24A6FCF74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A6FCF84()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  __int128 v5;

  v1 = *((_QWORD *)v0 + 2);
  v2 = swift_allocObject();
  v5 = *v0;
  *(_OWORD *)(v2 + 16) = *v0;
  *(_QWORD *)(v2 + 32) = v1;
  sub_24A670DCC();
  v3 = (id)v5;
  swift_retain();
  return sub_24A77B4B8();
}

uint64_t sub_24A6FD020()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A6FD04C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 24))(*(_QWORD *)(v0 + 16));
}

ValueMetadata *type metadata accessor for AddToWatchLabel()
{
  return &type metadata for AddToWatchLabel;
}

uint64_t sub_24A6FD080()
{
  return sub_24A63CFF0(&qword_257948870, &qword_257948850, MEMORY[0x24BDF43B0]);
}

uint64_t sub_24A6FD0AC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_24A6FD0BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t KeyPath;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  double result;
  __int128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[10];
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;

  v2 = sub_24A77AE70();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v42 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A77AEB8();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v8 = (id)qword_2544D6158;
  v9 = sub_24A77856C();
  v11 = v10;

  *(_QWORD *)&v52 = v9;
  *((_QWORD *)&v52 + 1) = v11;
  sub_24A645928();
  v12 = sub_24A77AFD8();
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  KeyPath = swift_getKeyPath();
  v46 = v12;
  v47 = v14;
  v48 = v18;
  v49 = v16;
  v50 = KeyPath;
  v51 = 1;
  sub_24A77B668();
  sub_24A6421A8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v45, 0.0, 1, 0.0, 1);
  sub_24A64596C(v12, v14, v18);
  swift_release();
  swift_bridgeObjectRelease();
  v58 = v45[6];
  v59 = v45[7];
  v60 = v45[8];
  v61 = v45[9];
  v54 = v45[2];
  v55 = v45[3];
  v56 = v45[4];
  v57 = v45[5];
  v52 = v45[0];
  v53 = v45[1];
  v21 = v38;
  v20 = v39;
  v22 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v38, *MEMORY[0x24BDF1878], v40);
  v23 = *MEMORY[0x24BDF1660];
  v24 = sub_24A77ADC8();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v41, v23, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
  sub_24A77ADF8();
  sub_24A77AE34();
  sub_24A64439C(v26);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  v28 = v42;
  v27 = v43;
  v29 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v42, *MEMORY[0x24BDF17C8], v44);
  v30 = sub_24A77AE88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  v31 = swift_getKeyPath();
  v32 = v59;
  *(_OWORD *)(a1 + 96) = v58;
  *(_OWORD *)(a1 + 112) = v32;
  v33 = v61;
  *(_OWORD *)(a1 + 128) = v60;
  *(_OWORD *)(a1 + 144) = v33;
  v34 = v55;
  *(_OWORD *)(a1 + 32) = v54;
  *(_OWORD *)(a1 + 48) = v34;
  v35 = v57;
  *(_OWORD *)(a1 + 64) = v56;
  *(_OWORD *)(a1 + 80) = v35;
  result = *(double *)&v52;
  v37 = v53;
  *(_OWORD *)a1 = v52;
  *(_OWORD *)(a1 + 16) = v37;
  *(_QWORD *)(a1 + 160) = v31;
  *(_QWORD *)(a1 + 168) = v30;
  return result;
}

unint64_t FIUIWorkoutActivityType.supportsElevationAscendedInSummary.getter()
{
  void *v0;
  char *v1;

  v1 = (char *)objc_msgSend(v0, sel_effectiveTypeIdentifier);
  return ((unint64_t)(v1 - 31) > 0x24) | (0xFBFFF7FEEuLL >> (v1 - 31)) & 1;
}

id FIUIWorkoutActivityType.supportsDownhillRunsCountInSummary.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isDownhillSnowSport);
}

BOOL sub_24A6FD4F8(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_effectiveTypeIdentifier);

  return v2 == (id)61 || v2 == (id)67;
}

BOOL FIUIWorkoutActivityType.isDownhillSnowSport.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_effectiveTypeIdentifier);
  return v1 == (id)61 || v1 == (id)67;
}

id ExternalProvider.sourceImage.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;

  v0 = sub_24A7794FC();
  v2 = v1;
  v3 = objc_allocWithZone(MEMORY[0x24BEBD640]);
  v4 = (void *)sub_24A7786BC();
  v5 = objc_msgSend(v3, sel_initWithData_, v4);
  sub_24A6706DC(v0, v2);

  return v5;
}

void ExternalProvider.formattedSyncDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v0 = sub_24A778818();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  sub_24A7794F0();
  v5 = (void *)sub_24A7787AC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = objc_msgSend(v4, sel_stringWithDayNameAndShortMonthFromDate_, v5);

  if (v6)
  {
    sub_24A77B9B0();

  }
  else
  {
    __break(1u);
  }
}

id static UIFont.systemFont(ofSize:weight:design:symbolicTraits:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_systemFontOfSize_weight_, a3, a4);
  v10 = objc_msgSend(v9, sel_fontDescriptor);
  v11 = objc_msgSend(v10, sel_fontDescriptorWithSymbolicTraits_, a2);
  if (v11)
  {
    v12 = v11;

    v10 = v12;
  }
  v13 = objc_msgSend(v10, sel_fontDescriptorWithDesign_, a1);
  if (v13)
  {
    v14 = v13;

    v10 = v14;
  }
  v15 = objc_msgSend(v8, sel_fontWithDescriptor_size_, v10, 0.0);

  return v15;
}

ValueMetadata *type metadata accessor for TrainingLoadWidgetTimelineProvider()
{
  return &type metadata for TrainingLoadWidgetTimelineProvider;
}

int *sub_24A6FD7E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;

  v2 = sub_24A77A018();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A18();
  v6 = sub_24A77A00C();
  v7 = sub_24A77BC74();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_24A635000, v6, v7, "Requesting a new placeholder for Training Load Widget", v8, 2u);
    MEMORY[0x24BD1A2B4](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24A7787F4();
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v9 = (id)qword_2544D6158;
  v10 = sub_24A77856C();
  v12 = v11;

  v13 = (id)qword_2544D6158;
  v14 = sub_24A77856C();
  v16 = v15;

  v17 = sub_24A77B338();
  result = (int *)type metadata accessor for TrainingLoadDayEntry();
  v19 = a1 + result[5];
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = (uint64_t *)(a1 + result[6]);
  *v20 = v10;
  v20[1] = v12;
  v21 = (uint64_t *)(a1 + result[7]);
  *v21 = v14;
  v21[1] = v16;
  *(_QWORD *)(a1 + result[8]) = v17;
  return result;
}

uint64_t sub_24A6FDA3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a1;
  v7 = sub_24A778818();
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A77A018();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A18();
  v14 = sub_24A77A00C();
  v15 = sub_24A77BC74();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v24 = a2;
    v17 = v7;
    v18 = a3;
    v19 = a4;
    v20 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_24A635000, v14, v15, "Requesting a new snapshot for Training Load Widget", v16, 2u);
    v21 = v20;
    a4 = v19;
    a3 = v18;
    v7 = v17;
    a2 = v24;
    MEMORY[0x24BD1A2B4](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_24A7787F4();
  sub_24A6FDBD8((uint64_t)v9, v26, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v7);
}

uint64_t sub_24A6FDBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v56 = a5;
  v57 = a4;
  v55 = a3;
  v7 = sub_24A77B8CC();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  v8 = *(_QWORD *)(v53 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6E0);
  MEMORY[0x24BDAC7A8](v9);
  v59 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A778818();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v50 = v13;
  v51 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v44 - v15;
  v17 = sub_24A77A018();
  v48 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A18();
  v58 = v12;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v49(v16, a1, v11);
  v20 = sub_24A77A00C();
  v21 = sub_24A77BC74();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v47 = a2;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v46 = v8;
    v25 = v24;
    v61 = v24;
    v45 = v17;
    *(_DWORD *)v23 = 136315138;
    v44 = v23 + 4;
    sub_24A63C880((unint64_t *)&qword_25794B628, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v26 = sub_24A77C160();
    v60 = sub_24A76BC40(v26, v27, &v61);
    sub_24A77BE00();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v11);
    _os_log_impl(&dword_24A635000, v20, v21, "Generating entry at date: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v25, -1, -1);
    v28 = v23;
    a2 = v47;
    MEMORY[0x24BD1A2B4](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v45);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v11);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v17);
  }
  v29 = sub_24A77BB90();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v59, 1, 1, v29);
  v30 = v51;
  v49(v51, a1, v11);
  v31 = v52;
  v32 = v53;
  v33 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, a2, v54);
  v49 = (void (*)(char *, uint64_t, uint64_t))v11;
  v34 = v58;
  v35 = (*(unsigned __int8 *)(v58 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v36 = (v50 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (*(unsigned __int8 *)(v32 + 80) + v36 + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v38 = (char *)swift_allocObject();
  *((_QWORD *)v38 + 2) = 0;
  *((_QWORD *)v38 + 3) = 0;
  v39 = v56;
  *((_QWORD *)v38 + 4) = v56;
  (*(void (**)(char *, char *, _QWORD))(v34 + 32))(&v38[v35], v30, v49);
  v40 = &v38[v36];
  v41 = v57;
  *(_QWORD *)v40 = v55;
  *((_QWORD *)v40 + 1) = v41;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v38[v37], v31, v33);
  v42 = v39;
  swift_retain();
  sub_24A7011C8(v59, (uint64_t)&unk_25794C6F0, (uint64_t)v38);
  return swift_release();
}

uint64_t sub_24A6FDFF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v27 = a3;
  v6 = sub_24A778818();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A77A018();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A18();
  v14 = sub_24A77A00C();
  v15 = sub_24A77BC74();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v25 = a1;
    v17 = v7;
    v18 = v6;
    v19 = a4;
    v20 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_24A635000, v14, v15, "Requesting a new timeline for Training Load Widget", v16, 2u);
    v21 = v20;
    a4 = v19;
    v6 = v18;
    v7 = v17;
    a1 = v25;
    MEMORY[0x24BD1A2B4](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_24A7787F4();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v26;
  *(_QWORD *)(v22 + 24) = v27;
  swift_retain();
  sub_24A6FDBD8((uint64_t)v9, a1, (uint64_t)sub_24A7015E4, v22, a4);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24A6FE1C0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);

  v21 = a3;
  v22 = a2;
  v19 = a1;
  v3 = sub_24A778818();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - v8;
  v10 = sub_24A77B8C0();
  MEMORY[0x24BDAC7A8](v10);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C708);
  v11 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C710);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrainingLoadDayEntry() - 8) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24A780030;
  sub_24A701818(v19, v16 + v15);
  sub_24A7787F4();
  sub_24A7787A0();
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  sub_24A77B8B4();
  v17(v9, v3);
  sub_24A63C880(qword_25794C678, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayEntry, (uint64_t)&unk_24A783798);
  sub_24A77B8D8();
  v22(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

uint64_t sub_24A6FE3BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6140);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6120);
  v2[7] = swift_task_alloc();
  v4 = sub_24A7782D8();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v5 = sub_24A778818();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6278);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v6 = sub_24A7782FC();
  v2[16] = v6;
  v2[17] = *(_QWORD *)(v6 - 8);
  v2[18] = swift_task_alloc();
  v7 = sub_24A778320();
  v2[19] = v7;
  v2[20] = *(_QWORD *)(v7 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v8 = sub_24A77A018();
  v2[26] = v8;
  v2[27] = *(_QWORD *)(v8 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A6FE5C8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_24A779A18();
  v1 = sub_24A77A00C();
  v2 = sub_24A77BC74();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24A635000, v1, v2, "Requesting new relevances for Training Load Widget", v3, 2u);
    MEMORY[0x24BD1A2B4](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 128);

  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v0 + 256) = v10;
  v10(v4, v5);
  sub_24A7782F0();
  sub_24A778308();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (FIShouldTrackTrainingLoad())
  {
    sub_24A7787F4();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v11;
    *v11 = v0;
    v11[1] = sub_24A6FE974;
    return sub_24A6FF700(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 24));
  }
  else
  {
    sub_24A779A18();
    v13 = sub_24A77A00C();
    v14 = sub_24A77BC74();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_24A635000, v13, v14, "Tracking Training Load is Disabled. Widget is not relevant", v15, 2u);
      MEMORY[0x24BD1A2B4](v15, -1, -1);
    }
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 160);

    v10(v16, v18);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544D6280);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A780030;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v17, v20);
    sub_24A77B854();
    sub_24A77B818();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v17, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24A6FE974()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[12];
  v3 = v2[13];
  v5 = v2[11];
  if (v0)

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch();
}

uint64_t sub_24A6FEA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ViewModel;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(unint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 120);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v3 = *(_QWORD *)(ViewModel - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, ViewModel);
  v4 = *(_QWORD *)(v0 + 112);
  sub_24A7014B8(*(_QWORD *)(v0 + 120), v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, ViewModel);
  v6 = *(_QWORD *)(v0 + 112);
  if (v5 == 1)
  {
    sub_24A63CD04(v6, &qword_2544D6278);
  }
  else
  {
    v7 = *(_BYTE *)(v6 + *(int *)(ViewModel + 36) + 8);
    sub_24A65FB14(v6, type metadata accessor for TrainingLoadViewModel);
    if ((v7 & 1) == 0)
    {
      v19 = *(_QWORD *)(v0 + 200);
      v20 = *(_QWORD *)(v0 + 152);
      v21 = *(_QWORD *)(v0 + 160);
      v23 = *(_QWORD *)(v0 + 72);
      v22 = *(_QWORD *)(v0 + 80);
      v24 = *(_QWORD *)(v0 + 64);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947408);
      *(_QWORD *)(v0 + 272) = *(_QWORD *)(v21 + 72);
      v25 = *(_DWORD *)(v21 + 80);
      *(_DWORD *)(v0 + 304) = v25;
      v26 = (v25 + 32) & ~(unint64_t)v25;
      v27 = swift_allocObject();
      *(_QWORD *)(v0 + 280) = v27;
      *(_OWORD *)(v27 + 16) = xmmword_24A780450;
      v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16);
      *(_QWORD *)(v0 + 288) = v28;
      v28(v27 + v26, v19, v20);
      sub_24A7782CC();
      sub_24A778314();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v29;
      *v29 = v0;
      v29[1] = sub_24A6FEE44;
      return sub_24A6FFCD4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24));
    }
  }
  sub_24A779A18();
  v8 = sub_24A77A00C();
  v9 = sub_24A77BC74();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_24A635000, v8, v9, "Insufficient data to display training load. Widget is not relevant", v10, 2u);
    MEMORY[0x24BD1A2B4](v10, -1, -1);
  }
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v12 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 120);

  v11(v12, v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544D6280);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A780030;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v13, v16);
  sub_24A77B854();
  sub_24A77B818();
  sub_24A63CD04(v30, &qword_2544D6278);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A6FEE44()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A6FEEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, unint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(unint64_t, uint64_t, uint64_t);
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v44 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
    v44(*(_QWORD *)(v0 + 192), v3, v1);
    sub_24A779A18();
    v18 = sub_24A77A00C();
    v19 = sub_24A77BC74();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_24A635000, v18, v19, "Relevances for Training Load Widget detected a recent workout", v20, 2u);
      MEMORY[0x24BD1A2B4](v20, -1, -1);
    }
    v22 = *(_QWORD *)(v0 + 280);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 288);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v24 = *(_QWORD *)(v0 + 240);
    v25 = *(_QWORD *)(v0 + 208);
    v27 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 152);

    v23(v24, v25);
    v21(v27, v26, v28);
    v30 = *(_QWORD *)(v22 + 16);
    v29 = *(_QWORD *)(v22 + 24);
    v4 = *(_QWORD *)(v0 + 280);
    if (v30 >= v29 >> 1)
      v4 = sub_24A64D9F0(v29 > 1, v30 + 1, 1, *(_QWORD *)(v0 + 280));
    v31 = *(unsigned __int8 *)(v0 + 304);
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 184);
    v34 = *(_QWORD *)(v0 + 192);
    v35 = *(_QWORD *)(v0 + 152);
    v36 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v4 + 16) = v30 + 1;
    v44(v4 + ((v31 + 32) & ~v31) + v32 * v30, v33, v35);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_24A63CD04(v3, &qword_2544D6120);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
    goto LABEL_15;
LABEL_3:
  v43 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = (*(unsigned __int8 *)(v0 + 304) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 304);
  v45 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_24A671D1C(0, v5, 0);
  v8 = 0;
  v42 = v4 + v7;
  v9 = v45;
  do
  {
    v10 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 288);
    v12 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 152);
    v10(v11, v42 + *(_QWORD *)(v0 + 272) * v8, v13);
    v10(v12, v11, v13);
    sub_24A77B854();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v11, v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24A671D1C(0, *(_QWORD *)(v9 + 16) + 1, 1);
      v9 = v45;
    }
    v15 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v9 + 24);
    if (v15 >= v14 >> 1)
    {
      sub_24A671D1C(v14 > 1, v15 + 1, 1);
      v9 = v45;
    }
    v16 = *(_QWORD *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 32);
    ++v8;
    *(_QWORD *)(v9 + 16) = v15 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, v16, v17);
  }
  while (v5 != v8);
  swift_bridgeObjectRelease_n();
LABEL_16:
  v37 = *(_QWORD *)(v0 + 200);
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 160);
  v40 = *(_QWORD *)(v0 + 120);
  sub_24A77B818();
  sub_24A63CD04(v40, &qword_2544D6278);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A6FF314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ViewModel;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(unint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 120);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v3 = *(_QWORD *)(ViewModel - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, ViewModel);
  v4 = *(_QWORD *)(v0 + 112);
  sub_24A7014B8(*(_QWORD *)(v0 + 120), v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, ViewModel);
  v6 = *(_QWORD *)(v0 + 112);
  if (v5 == 1)
  {
    sub_24A63CD04(v6, &qword_2544D6278);
  }
  else
  {
    v7 = *(_BYTE *)(v6 + *(int *)(ViewModel + 36) + 8);
    sub_24A65FB14(v6, type metadata accessor for TrainingLoadViewModel);
    if ((v7 & 1) == 0)
    {
      v19 = *(_QWORD *)(v0 + 200);
      v20 = *(_QWORD *)(v0 + 152);
      v21 = *(_QWORD *)(v0 + 160);
      v23 = *(_QWORD *)(v0 + 72);
      v22 = *(_QWORD *)(v0 + 80);
      v24 = *(_QWORD *)(v0 + 64);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947408);
      *(_QWORD *)(v0 + 272) = *(_QWORD *)(v21 + 72);
      v25 = *(_DWORD *)(v21 + 80);
      *(_DWORD *)(v0 + 304) = v25;
      v26 = (v25 + 32) & ~(unint64_t)v25;
      v27 = swift_allocObject();
      *(_QWORD *)(v0 + 280) = v27;
      *(_OWORD *)(v27 + 16) = xmmword_24A780450;
      v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16);
      *(_QWORD *)(v0 + 288) = v28;
      v28(v27 + v26, v19, v20);
      sub_24A7782CC();
      sub_24A778314();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v29;
      *v29 = v0;
      v29[1] = sub_24A6FEE44;
      return sub_24A6FFCD4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24));
    }
  }
  sub_24A779A18();
  v8 = sub_24A77A00C();
  v9 = sub_24A77BC74();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_24A635000, v8, v9, "Insufficient data to display training load. Widget is not relevant", v10, 2u);
    MEMORY[0x24BD1A2B4](v10, -1, -1);
  }
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v12 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 120);

  v11(v12, v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2544D6280);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A780030;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v13, v16);
  sub_24A77B854();
  sub_24A77B818();
  sub_24A63CD04(v30, &qword_2544D6278);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A6FF700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_24A779E2C();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_24A779D0C();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  v3[11] = swift_task_alloc();
  v6 = sub_24A779DFC();
  v3[12] = v6;
  v3[13] = *(_QWORD *)(v6 - 8);
  v3[14] = swift_task_alloc();
  v7 = sub_24A7788E4();
  v3[15] = v7;
  v3[16] = *(_QWORD *)(v7 - 8);
  v3[17] = swift_task_alloc();
  v8 = sub_24A778968();
  v3[18] = v8;
  v3[19] = *(_QWORD *)(v8 - 8);
  v3[20] = swift_task_alloc();
  v9 = sub_24A779CF4();
  v3[21] = v9;
  v3[22] = *(_QWORD *)(v9 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A6FF860()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[15];
  v0[25] = type metadata accessor for TrainingLoadViewModelProvider();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BDCEF70], v3);
  sub_24A7788F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_24A77BB78();
  v0[26] = sub_24A77BB6C();
  sub_24A77BB54();
  return swift_task_switch();
}

uint64_t sub_24A6FF920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[24];
  v3 = v0[19];
  v2 = v0[20];
  v4 = v0[18];
  v5 = v0[3];
  swift_release();
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)(v5, (void (*)(char *, uint64_t, uint64_t))0x1C, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_24A6FF9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);
  sub_24A779CC4();
  sub_24A779CDC();
  *(_DWORD *)(v0 + 240) = *MEMORY[0x24BE3FD40];
  v3 = *(void (**)(uint64_t))(v2 + 104);
  *(_QWORD *)(v0 + 216) = v3;
  v3(v1);
  sub_24A779DF0();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v4;
  *v4 = v0;
  v4[1] = sub_24A6FFA6C;
  return sub_24A779DD8();
}

uint64_t sub_24A6FFA6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A6FFAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 216))(v5, *(unsigned int *)(v0 + 240), *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  v10 = sub_24A779E08();
  TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v5, v1, v10, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A6FFC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A6FFCD4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2[3] = a1;
  v4 = sub_24A77A018();
  v2[4] = v4;
  v2[5] = *(_QWORD *)(v4 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v5 = sub_24A778818();
  v2[8] = v5;
  v2[9] = *(_QWORD *)(v5 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v2[13] = v6;
  *v6 = v2;
  v6[1] = sub_24A6FFDA0;
  return sub_24A70032C(a2);
}

uint64_t sub_24A6FFDA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

unint64_t sub_24A6FFE0C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t result;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 112);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    sub_24A779A18();
    v24 = sub_24A77A00C();
    v25 = sub_24A77BC74();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_24A635000, v24, v25, "No last workout found", v26, 2u);
      MEMORY[0x24BD1A2B4](v26, -1, -1);
    }
    v27 = *(_QWORD *)(v0 + 56);
    v28 = *(_QWORD *)(v0 + 32);
    v29 = *(_QWORD *)(v0 + 40);
    v30 = *(_QWORD *)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v21 = sub_24A778320();
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = v30;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v2 = sub_24A77C028();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v4 = (id)MEMORY[0x24BD19588](result, *(_QWORD *)(v0 + 112));
LABEL_8:
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v4, sel_endDate);
    sub_24A7787E8();

    sub_24A7787C4();
    v10 = v9;
    v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v5, v6);
    if (v10 < 0.0 && v10 >= -1800.0)
    {
      v13 = *(_QWORD *)(v0 + 88);
      v12 = *(_QWORD *)(v0 + 96);
      v14 = *(_QWORD *)(v0 + 80);
      v15 = *(_QWORD *)(v0 + 64);
      v16 = *(_QWORD *)(v0 + 24);
      v17 = objc_msgSend(v4, sel_endDate);
      sub_24A7787E8();

      v18 = objc_msgSend(v4, sel_endDate);
      sub_24A7787E8();

      sub_24A7787A0();
      v11(v14, v15);
      sub_24A7782E4();

      v11(v13, v15);
      v11(v12, v15);
      v19 = sub_24A778320();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 0, 1, v19);
LABEL_17:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v20 = *(_QWORD *)(v0 + 24);

    v21 = sub_24A778320();
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = v20;
LABEL_16:
    v22(v23, 1, 1, v21);
    goto LABEL_17;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(*(_QWORD *)(v0 + 112) + 8 * result + 32);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A700138()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 120);
  sub_24A779A18();
  v2 = v1;
  v3 = v1;
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 120);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_24A77BE00();
    *v8 = v10;

    _os_log_impl(&dword_24A635000, v4, v5, "Getting recent workout relevance for widget failed with %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v8, -1, -1);
    MEMORY[0x24BD1A2B4](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 120);

  }
  v12 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  v13 = sub_24A778320();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A70032C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6B0);
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6B8);
  v1[6] = v3;
  v1[7] = *(_QWORD *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v4 = sub_24A77895C();
  v1[9] = v4;
  v1[10] = *(_QWORD *)(v4 - 8);
  v1[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  v1[12] = swift_task_alloc();
  v5 = sub_24A778818();
  v1[13] = v5;
  v1[14] = *(_QWORD *)(v5 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v6 = sub_24A7788E4();
  v1[19] = v6;
  v1[20] = *(_QWORD *)(v6 - 8);
  v1[21] = swift_task_alloc();
  v7 = sub_24A778968();
  v1[22] = v7;
  v1[23] = *(_QWORD *)(v7 - 8);
  v1[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A7004A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[18];
  v4 = v0[19];
  v28 = v0[13];
  v29 = v0[15];
  v5 = v0[11];
  v26 = v0[12];
  v27 = v0[14];
  v7 = v0[9];
  v6 = v0[10];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v2, *MEMORY[0x24BDCEF70], v4);
  sub_24A7788F0();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  sub_24A77880C();
  sub_24A7788FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BDCF220], v7);
  sub_24A778938();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v3, v28);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v26, 1, v28);
  v9 = v0[16];
  v10 = v0[13];
  v11 = v0[14];
  v12 = v0[12];
  if (v8 == 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v11 + 32))(v0[16], v0[15], v0[13]);
    sub_24A63CD04(v12, &qword_2579478E8);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(v0[15], v0[13]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v12, v10);
  }
  v14 = v0[7];
  v13 = v0[8];
  v15 = v0[6];
  v16 = (void *)objc_opt_self();
  v17 = (void *)sub_24A7787AC();
  v18 = (void *)sub_24A7787AC();
  v19 = objc_msgSend(v16, sel_predicateForSamplesWithStartDate_endDate_options_, v17, v18, 0);
  v0[25] = v19;

  sub_24A64F254(0, &qword_25794BC20);
  v20 = v19;
  sub_24A77B764();

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6C0);
  v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24A780030;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v22 + v21, v13, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6D0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A780030;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BD15B38](KeyPath, 0);
  sub_24A64F254(0, &qword_25794C6D8);
  sub_24A77B770();
  v24 = (_QWORD *)swift_task_alloc();
  v0[26] = v24;
  *v24 = v0;
  v24[1] = sub_24A7007EC;
  return sub_24A77B77C();
}

uint64_t sub_24A7007EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_24A700860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 32);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v1, v3);
  v10(v12, v3);
  v10(v13, v3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 224));
}

uint64_t sub_24A7009AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 32);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v1, v3);
  v10(v12, v3);
  v10(v13, v3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_24A700AF4(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_endDate);
  sub_24A7787E8();

}

uint64_t sub_24A700B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[6] = a4;
  v11 = sub_24A77A018();
  v8[11] = v11;
  v8[12] = *(_QWORD *)(v11 - 8);
  v8[13] = swift_task_alloc();
  v12 = sub_24A77B80C();
  v8[14] = v12;
  v8[15] = *(_QWORD *)(v12 - 8);
  v8[16] = swift_task_alloc();
  v8[17] = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  v8[18] = swift_task_alloc();
  v13 = sub_24A778818();
  v8[19] = v13;
  v8[20] = *(_QWORD *)(v13 - 8);
  v8[21] = swift_task_alloc();
  v8[22] = type metadata accessor for TrainingLoadDayEntry();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = type metadata accessor for TrainingLoadViewModel(0);
  v14 = swift_task_alloc();
  v8[26] = v14;
  v15 = (_QWORD *)swift_task_alloc();
  v8[27] = v15;
  *v15 = v8;
  v15[1] = sub_24A700CAC;
  return sub_24A6FF700(v14, a5, a4);
}

uint64_t sub_24A700CAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A700D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 152));
  v3 = *(int *)(v1 + 40);
  v4 = (uint64_t *)(v2 + *(int *)(v1 + 36));
  v31 = *v4;
  v32 = *((_BYTE *)v4 + 8);
  if (*(_QWORD *)(v2 + v3 + 8))
  {
    v29 = *(_QWORD *)(v2 + v3 + 8);
    v30 = *(_QWORD *)(v2 + v3);
  }
  else
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v5 = (id)qword_2544D6158;
    v6 = sub_24A77856C();
    v29 = v7;
    v30 = v6;

  }
  v8 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 192);
  v10 = *(int **)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 120);
  v28 = *(void (**)(uint64_t))(v0 + 64);
  swift_bridgeObjectRetain();
  sub_24A779CC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v12, v11 + *(int *)(v13 + 36), v14);
  sub_24A63CD04(v11, &qword_257947EE0);
  v16 = TrainingLoadViewModel.localizedDescription(onDay:)(v12);
  v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  v19 = *(_QWORD *)(v8 + *(int *)(v24 + 56));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v9, v27, v26);
  v20 = v9 + v10[5];
  *(_QWORD *)v20 = v31;
  *(_BYTE *)(v20 + 8) = v32;
  v21 = (uint64_t *)(v9 + v10[6]);
  *v21 = v30;
  v21[1] = v29;
  v22 = (uint64_t *)(v9 + v10[7]);
  *v22 = v16;
  v22[1] = v18;
  *(_QWORD *)(v9 + v10[8]) = v19;
  swift_retain();
  v28(v9);
  sub_24A65FB14(v9, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayEntry);
  sub_24A65FB14(v8, type metadata accessor for TrainingLoadViewModel);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A700FBC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  v1 = *(void **)(v0 + 224);
  sub_24A779A18();
  v2 = v1;
  v3 = v1;
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 224);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v10;
    sub_24A77BE00();
    *v8 = v10;

    _os_log_impl(&dword_24A635000, v4, v5, "Failed to get day summary collection with %@. Returning placeholder.", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B680);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v8, -1, -1);
    MEMORY[0x24BD1A2B4](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 224);

  }
  v12 = *(void **)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 184);
  v14 = *(void (**)(uint64_t))(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  sub_24A6FD7E4(v13);
  v14(v13);

  sub_24A65FB14(v13, (uint64_t (*)(_QWORD))type metadata accessor for TrainingLoadDayEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A7011C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_24A77BB90();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24A77BB84();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_24A63CD04(a1, &qword_25794C6E0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24A77BB54();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24A701318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_24A6FDA3C(a1, a2, a3, *v3);
}

uint64_t sub_24A701320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_24A6FDFF8(a1, a2, a3, *v3);
}

uint64_t sub_24A701328(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24A70185C;
  return sub_24A6FE3BC(a1, v4);
}

uint64_t sub_24A701380()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24A70185C;
  return sub_24A77B89C();
}

uint64_t sub_24A7013EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24A701444;
  return sub_24A6FE3BC(a1, v4);
}

uint64_t sub_24A701444()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_24A70148C()
{
  return sub_24A63C880(qword_25794C678, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadDayEntry, (uint64_t)&unk_24A783798);
}

uint64_t sub_24A7014B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A701500(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24A701564;
  return v6(a1);
}

uint64_t sub_24A701564()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

char *keypath_get_selector_endDate()
{
  return sel_endDate;
}

uint64_t sub_24A7015C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A7015E4(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6FE1C0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24A7015EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_24A778818();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_24A77B8CC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_24A7016C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(sub_24A778818() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A77B8CC() - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (char *)v1 + v6;
  v14 = *(_QWORD *)((char *)v1 + v6);
  v15 = *((_QWORD *)v13 + 1);
  v16 = (uint64_t)v1 + v8;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_24A70185C;
  return sub_24A700B40(a1, v9, v10, v11, v12, v14, v15, v16);
}

uint64_t sub_24A7017A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24A701444;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25794C6F8 + dword_25794C6F8))(a1, v4);
}

uint64_t sub_24A701818(uint64_t a1, uint64_t a2)
{
  uint64_t DayEntry;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DayEntry - 8) + 16))(a2, a1, DayEntry);
  return a2;
}

void sub_24A701864()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;

  v1 = sub_24A779238();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6.n128_f64[0] = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - v7;
  v9 = *v0;
  if (*((_BYTE *)v0 + 16))
    v10 = 2;
  else
    v10 = 0;
  if ((v9 & 0xC000000000000001) != 0)
  {
    MEMORY[0x24BD19588](v10, *v0, v6);
  }
  else
  {
    if (v10 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_16;
    }
    swift_retain();
  }
  sub_24A779268();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEC57F8], v1);
  sub_24A704A54(&qword_25794C768, MEMORY[0x24BEC5820]);
  v11 = sub_24A77B974();
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v8, v1);
  if ((v11 & 1) == 0)
  {
    swift_release();
    return;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    MEMORY[0x24BD19588](v10, v9);
LABEL_13:
    sub_24A77925C();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  if (v10 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
}

uint64_t WorkoutNotificationIntervalView.body.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C718);
  v3 = (char *)a1 + *(int *)(v2 + 56);
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)v3 = v4;
  *(_OWORD *)(v3 + 8) = xmmword_24A781A30;
  *(_OWORD *)(v3 + 24) = xmmword_24A781A40;
  *(_OWORD *)(v3 + 40) = xmmword_24A781A50;
  sub_24A701B78((uint64_t *)v8);
  v5 = v8[1];
  v6 = v8[2];
  *a1 = v8[0];
  a1[1] = v5;
  a1[2] = v6;
  return sub_24A701CF0((_OWORD *)((char *)a1 + *(int *)(v2 + 52)));
}

void sub_24A701B78(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  if (*((_BYTE *)v1 + 16) != 1)
    goto LABEL_13;
  v3 = *v1;
  v4 = (void *)v1[1];
  if (!((unint64_t)*v1 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
      goto LABEL_4;
LABEL_13:
    v5 = 0;
    v7 = 0;
    v8 = 0;
    v11 = 0;
    v10 = 0;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v12 = sub_24A77C028();
  swift_bridgeObjectRelease();
  if (v12 < 2)
    goto LABEL_13;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = MEMORY[0x24BD19588](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    v5 = *(_QWORD *)(v3 + 32);
    swift_retain();
  }
  v6 = v4;
  sub_24A77B368();
  v7 = sub_24A77B374();
  swift_release();
  if ((v3 & 0xC000000000000001) != 0)
  {
    v8 = MEMORY[0x24BD19588](1, v3);
LABEL_11:
    v9 = v6;
    v10 = sub_24A77B368();
    swift_retain();
    v11 = v9;

    swift_release();
LABEL_14:
    *a1 = v5;
    a1[1] = (uint64_t)v11;
    a1[2] = v7;
    a1[3] = v8;
    a1[4] = (uint64_t)v11;
    a1[5] = v10;
    return;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v8 = *(_QWORD *)(v3 + 40);
    swift_retain();
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_24A701CF0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[168];
  _BYTE v34[168];
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C728);
  MEMORY[0x24BDAC7A8](v3);
  v31 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v28 - v6;
  v7 = *(void **)(v1 + 8);
  v9 = *(_BYTE *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(void **)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v13 = *(_QWORD *)(v1 + 48);
  v14 = *(_QWORD *)(v1 + 56);
  v15 = *(_QWORD *)(v1 + 64);
  v16 = *(_QWORD *)(v1 + 72);
  v35 = *(void **)v1;
  v8 = (uint64_t)v35;
  v36 = v7;
  LOBYTE(v37) = v9;
  v38 = v10;
  v39 = v11;
  v40 = v12;
  v41 = v13;
  v42 = v14;
  v43 = v15;
  v44 = v16;
  sub_24A701F88((uint64_t)&v45);
  sub_24A63F6C4((uint64_t)&v45, (uint64_t)v34, &qword_25794C730);
  v45 = v8;
  v46 = v7;
  v47 = v9;
  v48 = v10;
  v49 = v11;
  v50 = v12;
  v51 = v13;
  v52 = v14;
  v53 = v15;
  v54 = v16;
  sub_24A702120((uint64_t *)&v35);
  v17 = v35;
  v18 = v36;
  v19 = v38;
  v20 = v39;
  v29 = v37;
  v30 = v40;
  v45 = v8;
  v46 = v7;
  v47 = v9;
  v48 = v10;
  v49 = v11;
  v50 = v12;
  v51 = v13;
  v52 = v14;
  v53 = v15;
  v54 = v16;
  v21 = v32;
  sub_24A7024B4(v32);
  sub_24A63F6C4((uint64_t)v34, (uint64_t)v33, &qword_25794C730);
  v22 = v21;
  v23 = v31;
  sub_24A63CCC0(v22, v31, &qword_25794C728);
  sub_24A63F6C4((uint64_t)v33, (uint64_t)&v35, &qword_25794C730);
  sub_24A63F6C4((uint64_t)&v35, (uint64_t)a1, &qword_25794C730);
  a1[21] = v17;
  a1[22] = v18;
  v25 = v29;
  v24 = v30;
  a1[23] = v29;
  a1[24] = v19;
  a1[25] = v20;
  a1[26] = v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C738);
  sub_24A63CCC0(v23, (uint64_t)a1 + *(int *)(v26 + 64), &qword_25794C728);
  sub_24A7048FC((uint64_t)&v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_24A704748);
  sub_24A70482C(v17, v18, v25, v19, v20);
  sub_24A63CD04(v32, &qword_25794C728);
  sub_24A63CD04(v23, &qword_25794C728);
  sub_24A704898((uint64_t)v17, v18, v25, v19, v20);
  sub_24A63F6C4((uint64_t)v33, (uint64_t)&v45, &qword_25794C730);
  return sub_24A7048FC((uint64_t)&v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_24A704968);
}

uint64_t sub_24A701F88@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[10];
  int v9;
  _OWORD v10[6];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v3 = v1[1];
  v15 = *v1;
  v16 = v3;
  v4 = v1[3];
  v17 = v1[2];
  v18 = v4;
  v19 = v1[4];
  v20 = v15;
  if (!((unint64_t)v15 >> 62))
  {
    v5 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((v16 & 1) == 0)
      goto LABEL_3;
LABEL_6:
    if (v5 >= 3)
      goto LABEL_4;
LABEL_7:
    sub_24A704A94((uint64_t)v8);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v5 = sub_24A77C028();
  sub_24A646AE8((uint64_t)&v20);
  if ((v16 & 1) != 0)
    goto LABEL_6;
LABEL_3:
  if (v5 <= 0)
    goto LABEL_7;
LABEL_4:
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *((_QWORD *)&v11 + 1) = v6;
  v12 = xmmword_24A781A30;
  v13 = xmmword_24A781A40;
  v14 = xmmword_24A781A50;
  sub_24A702788((uint64_t)&v15, (uint64_t)v10);
  v8[6] = v11;
  v8[7] = v12;
  v8[8] = v13;
  v8[9] = v14;
  v8[2] = v10[2];
  v8[3] = v10[3];
  v8[4] = v10[4];
  v8[5] = v10[5];
  v8[0] = v10[0];
  v8[1] = v10[1];
  v9 = sub_24A77ABA0();
  nullsub_1(v8);
LABEL_8:
  sub_24A63F6C4((uint64_t)v8, (uint64_t)v10, &qword_25794C730);
  return sub_24A63F6C4((uint64_t)v10, a1, &qword_25794C730);
}

void sub_24A702120(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char v34;
  void (*v35)(char *, uint64_t);
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = sub_24A779238();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - v8;
  v10 = *v1;
  v11 = (void *)v1[1];
  v12 = *((_BYTE *)v1 + 16);
  v13 = v1[3];
  v14 = v1[4];
  v15 = v1[5];
  v16 = v1[6];
  v17 = v1[7];
  v18 = v1[8];
  v19 = v1[9];
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_24A77C028();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v44 = v10;
  v45 = v11;
  v46 = v12;
  v47 = v13;
  v48 = v14;
  v49 = v15;
  v50 = v16;
  v51 = v17;
  v52 = v18;
  v53 = v19;
  sub_24A701864();
  if (v21 + 1 >= v20)
  {
    v26 = 0;
    v27 = 0;
    v24 = 0;
    v28 = 0;
    v29 = 0;
LABEL_21:
    *a1 = v26;
    a1[1] = (uint64_t)v28;
    a1[2] = v27;
    a1[3] = v24;
    a1[4] = (uint64_t)v28;
    a1[5] = v29;
    return;
  }
  v41 = v4;
  v44 = v10;
  v45 = v11;
  v46 = v12;
  v47 = v13;
  v48 = v14;
  v49 = v15;
  v50 = v16;
  v51 = v17;
  v52 = v18;
  v53 = v19;
  sub_24A701864();
  v23 = v22 + 1;
  if ((v10 & 0xC000000000000001) != 0)
  {
    v24 = MEMORY[0x24BD19588](v23, v10);
  }
  else
  {
    if (v23 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    v24 = *(_QWORD *)(v10 + 8 * v23 + 32);
    swift_retain();
  }
  v44 = v10;
  v45 = v11;
  v46 = v12;
  v47 = v13;
  v48 = v14;
  v49 = v15;
  v50 = v16;
  v51 = v17;
  v52 = v18;
  v53 = v19;
  sub_24A701864();
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (v25 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v40 = *(_QWORD *)(v10 + 8 * v25 + 32);
      swift_retain();
      goto LABEL_12;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v40 = MEMORY[0x24BD19588]();
LABEL_12:
  v30 = v41;
  v31 = v11;
  sub_24A70343C();
  v41 = v32;
  v28 = v31;
  sub_24A779268();
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v6, *MEMORY[0x24BEC57F8], v3);
  sub_24A704A54(&qword_25794C760, MEMORY[0x24BEC5828]);
  sub_24A77BAF4();
  sub_24A77BAF4();
  if (v44 == v42 && v45 == v43)
  {
    swift_bridgeObjectRelease_n();
    v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    v33(v6, v3);
    v33(v9, v3);
  }
  else
  {
    v34 = sub_24A77C184();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = *(void (**)(char *, uint64_t))(v30 + 8);
    v35(v6, v3);
    v35(v9, v3);
    if ((v34 & 1) == 0)
    {
      v29 = 0;
      goto LABEL_20;
    }
  }
  v36 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
  if (!v36)
    goto LABEL_26;
  v37 = v36;
  v38 = objc_msgSend(v36, sel_nonGradientTextColor);

  if (v38)
  {
    v29 = MEMORY[0x24BD189B8](v38);
LABEL_20:
    v26 = v40;
    v27 = v41;
    goto LABEL_21;
  }
LABEL_27:
  __break(1u);
}

void sub_24A7024B4(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  char v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[5];
  uint64_t v28;

  v26 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C740);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C748);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[1];
  v27[0] = *v1;
  v27[1] = v9;
  v10 = v1[3];
  v27[2] = v1[2];
  v27[3] = v10;
  v27[4] = v1[4];
  v11 = *(_QWORD *)&v27[0];
  v28 = *(_QWORD *)&v27[0];
  if (*(_QWORD *)&v27[0] >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_24A77C028();
    sub_24A646AE8((uint64_t)&v28);
  }
  else
  {
    v12 = *(_QWORD *)((*(_QWORD *)&v27[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_24A701864();
  if (v13 + 2 >= v12)
    goto LABEL_14;
  sub_24A701864();
  v15 = v14 + 2;
  if ((v11 & 0xC000000000000001) != 0)
  {
    MEMORY[0x24BD19588](v15, v11);
  }
  else
  {
    if (v15 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    swift_retain();
  }
  v16 = COERCE_DOUBLE(sub_24A779274());
  v18 = v17;
  swift_release();
  if ((v18 & 1) != 0)
    goto LABEL_14;
  sub_24A701864();
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
    goto LABEL_19;
  if (v16 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!__OFADD__(v19 + 2, (uint64_t)v16))
  {
    if (v19 + 2 + (uint64_t)v16 < v12)
    {
      v20 = &v4[*(int *)(v2 + 36)];
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      *(_QWORD *)v20 = v21;
      *(_OWORD *)(v20 + 8) = xmmword_24A781A30;
      *(_OWORD *)(v20 + 24) = xmmword_24A781A40;
      *(_OWORD *)(v20 + 40) = xmmword_24A781A50;
      sub_24A703600((uint64_t *)v27, (uint64_t)v4, v16);
      v22 = sub_24A77B368();
      sub_24A63CCC0((uint64_t)v4, (uint64_t)v8, &qword_25794C740);
      *(_QWORD *)&v8[*(int *)(v5 + 36)] = v22;
      sub_24A63CD04((uint64_t)v4, &qword_25794C740);
      v23 = v26;
      sub_24A63F6C4((uint64_t)v8, v26, &qword_25794C748);
      v24 = 0;
LABEL_15:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, v24, 1, v5);
      return;
    }
LABEL_14:
    v24 = 1;
    v23 = v26;
    goto LABEL_15;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_24A702788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  char v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;

  v4 = sub_24A779238();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v60 - v10;
  v12 = 2 * (*(_BYTE *)(a1 + 16) & 1);
  v84 = *(_QWORD *)a1;
  v13 = v84;
  v65 = (uint64_t *)a1;
  if ((v84 & 0xC000000000000001) != 0)
  {
    v14 = MEMORY[0x24BD19588](v12, v84, v9);
  }
  else
  {
    if (*(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
    {
      __break(1u);
      goto LABEL_21;
    }
    v14 = swift_retain();
  }
  v66 = v14;
  sub_24A779268();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEC57F8], v4);
  sub_24A704A54(&qword_25794C760, MEMORY[0x24BEC5828]);
  sub_24A77BAF4();
  sub_24A77BAF4();
  if (v75 == v67 && (_QWORD)v76 == (_QWORD)v68)
  {
    swift_bridgeObjectRelease_n();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v11, v4);
  }
  else
  {
    v16 = sub_24A77C184();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    v17(v11, v4);
    if ((v16 & 1) == 0)
      goto LABEL_12;
  }
  sub_24A77925C();
  if (v18)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v19 = (id)qword_2544D6158;
    v20 = sub_24A77856C();
    v22 = v21;
    swift_bridgeObjectRelease();

    v75 = v20;
    *(_QWORD *)&v76 = v22;
    sub_24A645928();
    v23 = sub_24A77AFD8();
    v25 = v24;
    v67 = v23;
    *(_QWORD *)&v68 = v24;
    LOBYTE(v22) = v26 & 1;
    *((_QWORD *)&v68 + 1) = v26 & 1;
    v69 = v27;
    v70 = 0u;
    v71 = 0u;
    v72 = 0u;
    v73 = 0u;
    v74 = 0;
    sub_24A6436C4(v23, v24, v26 & 1);
    swift_bridgeObjectRetain();
    sub_24A6436C4(v23, v25, v22);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794C770);
    sub_24A63CFF0(&qword_25794C778, &qword_25794C770, MEMORY[0x24BDF4498]);
    sub_24A77AB28();
    swift_release();
    sub_24A64596C(v23, v25, v22);
    swift_bridgeObjectRelease();
    sub_24A64596C(v23, v25, v22);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_12:
  if (v13 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v28 = sub_24A77C028();
    sub_24A646AE8((uint64_t)&v84);
    goto LABEL_14;
  }
  v28 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  if ((uint64_t)(v12 | 4) >= v28)
  {
    swift_release();
    v47 = 0;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v52 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
    v56 = 0;
    result = 0;
    v58 = 0;
    v59 = -1;
    goto LABEL_18;
  }
  v29 = sub_24A77A930();
  sub_24A702E08(v65, &v75);
  v30 = v75;
  v31 = v76;
  v32 = BYTE8(v76);
  v33 = v77;
  v34 = v79;
  v65 = (uint64_t *)*((_QWORD *)&v78 + 1);
  v35 = *((_QWORD *)&v79 + 1);
  v67 = v29;
  v68 = xmmword_24A780020;
  v69 = v75;
  v70 = v76;
  v71 = v77;
  v72 = v78;
  v36 = v78;
  v73 = v79;
  v74 = 1;
  v61 = *((_QWORD *)&v76 + 1);
  v62 = v77;
  sub_24A6B8208(v75, v76, SBYTE8(v76), v77);
  v63 = *((_QWORD *)&v33 + 1);
  swift_retain();
  v37 = v36;
  v38 = v36;
  v64 = v36;
  v39 = v65;
  sub_24A6B8208(v37, (uint64_t)v65, v34, v35);
  sub_24A6B8208(v30, v31, v32, v33);
  swift_retain();
  sub_24A6B8208(v38, (uint64_t)v39, v34, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C770);
  sub_24A63CFF0(&qword_25794C778, &qword_25794C770, MEMORY[0x24BDF4498]);
  sub_24A77AB28();
  swift_release();
  v40 = v30;
  v41 = v30;
  v42 = v31;
  v43 = v31;
  LOBYTE(v31) = v61;
  v44 = v62;
  sub_24A6B8238(v41, v43, v61, v62);
  swift_release();
  v45 = v64;
  v46 = v65;
  sub_24A6B8238(v64, (uint64_t)v65, v34, v35);
  sub_24A6B8238(v40, v42, v31, v44);
  swift_release();
  sub_24A6B8238(v45, (uint64_t)v46, v34, v35);
LABEL_16:
  v47 = v75;
  v49 = *((_QWORD *)&v76 + 1);
  v48 = v76;
  v51 = *((_QWORD *)&v77 + 1);
  v50 = v77;
  v53 = *((_QWORD *)&v78 + 1);
  v52 = v78;
  v55 = *((_QWORD *)&v79 + 1);
  v54 = v79;
  v56 = v80;
  result = v81;
  v58 = v82;
  v59 = v83;
LABEL_18:
  *(_QWORD *)a2 = v47;
  *(_QWORD *)(a2 + 8) = v48;
  *(_QWORD *)(a2 + 16) = v49;
  *(_QWORD *)(a2 + 24) = v50;
  *(_QWORD *)(a2 + 32) = v51;
  *(_QWORD *)(a2 + 40) = v52;
  *(_QWORD *)(a2 + 48) = v53;
  *(_QWORD *)(a2 + 56) = v54;
  *(_QWORD *)(a2 + 64) = v55;
  *(_QWORD *)(a2 + 72) = v56;
  *(_QWORD *)(a2 + 80) = result;
  *(_QWORD *)(a2 + 88) = v58;
  *(_BYTE *)(a2 + 96) = v59;
  return result;
}

unint64_t sub_24A702E08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  unint64_t result;
  uint64_t v30;
  char v31;
  char v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  double v46;

  v4 = *((_BYTE *)a1 + 16);
  v5 = *a1;
  if ((v4 & 1) != 0)
    v6 = 3;
  else
    v6 = 1;
  *(_QWORD *)&v46 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    MEMORY[0x24BD19588](v6, v5);
  }
  else
  {
    if (v6 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_58;
    }
    swift_retain();
  }
  sub_24A77925C();
  v8 = v7;
  swift_release();
  if (v8)
  {
    if (qword_2544D6160 == -1)
    {
LABEL_9:
      swift_beginAccess();
      v9 = (id)qword_2544D6158;
      sub_24A77856C();
      swift_bridgeObjectRelease();

      sub_24A645928();
      v10 = sub_24A77AFD8();
      v12 = v11;
      v14 = v13;
      v16 = v15 & 1;
      goto LABEL_11;
    }
LABEL_58:
    swift_once();
    goto LABEL_9;
  }
  v10 = 0;
  v12 = 0;
  v16 = 0;
  v14 = 0;
LABEL_11:
  if ((v4 & 1) != 0)
    v17 = 4;
  else
    v17 = 2;
  if (v46 == 0.0)
  {
    if (v17 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_60;
    }
    swift_retain();
  }
  else
  {
    MEMORY[0x24BD19588](v17, v5);
  }
  sub_24A77925C();
  v19 = v18;
  swift_release();
  if (v19)
    v2 = sub_24A77B3C8();
  else
    v2 = 0;
  if ((v4 & 1) != 0)
    v20 = 5;
  else
    v20 = 3;
  if (v46 != 0.0)
  {
    MEMORY[0x24BD19588](v20, v5);
    goto LABEL_28;
  }
  if (v20 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  swift_retain();
LABEL_28:
  sub_24A77925C();
  v22 = v21;
  swift_release();
  v45 = v10;
  if (!v22)
  {
    v24 = 0;
    v25 = 0;
    v26 = 0;
LABEL_55:
    *a2 = v45;
    a2[1] = v12;
    a2[2] = v16;
    a2[3] = v14;
    a2[4] = v2;
    a2[5] = v24;
    a2[6] = v25;
    a2[7] = v26;
    a2[8] = v22;
    sub_24A6B8208(v45, v12, v16, v14);
    swift_retain();
    sub_24A6B8208(v24, v25, v26, v22);
    sub_24A6B8238(v24, v25, v26, v22);
    swift_release();
    return sub_24A6B8238(v45, v12, v16, v14);
  }
  if ((v4 & 1) != 0)
    v23 = 6;
  else
    v23 = 4;
  if (v46 != 0.0)
  {
    MEMORY[0x24BD19588](v23, v5);
    goto LABEL_37;
  }
  if (v23 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_61:
    __break(1u);
LABEL_62:
    swift_once();
LABEL_47:
    swift_beginAccess();
    v33 = (id)qword_2544D6158;
    sub_24A77856C();
    swift_bridgeObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_24A780450;
    if ((~*(_QWORD *)&v44 & 0x7FF0000000000000) != 0)
    {
      if (v44 > -9.22337204e18)
      {
        if (v44 < 9.22337204e18)
        {
          v34 = (_QWORD *)result;
          sub_24A666F3C();
          v35 = sub_24A77BE78();
          v37 = v36;
          v34[7] = MEMORY[0x24BEE0D00];
          result = sub_24A66952C();
          v34[8] = result;
          v34[4] = v35;
          v34[5] = v37;
          if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) != 0)
          {
            if (v46 > -9.22337204e18)
            {
              if (v46 < 9.22337204e18)
              {
                v38 = result;
                v39 = sub_24A77BE78();
                v34[12] = MEMORY[0x24BEE0D00];
                v34[13] = v38;
                v34[9] = v39;
                v34[10] = v40;
                sub_24A77B9C8();
                swift_bridgeObjectRelease();
                sub_24A645928();
                sub_24A77BE54();
                swift_bridgeObjectRelease();
                v24 = sub_24A77AFD8();
                v25 = v41;
                v22 = v42;
                v26 = v43 & 1;
                goto LABEL_55;
              }
              goto LABEL_68;
            }
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_65;
  }
  swift_retain();
LABEL_37:
  v44 = COERCE_DOUBLE(sub_24A779274());
  v28 = v27;
  swift_release();
  if ((v28 & 1) != 0)
    goto LABEL_54;
  if ((v4 & 1) != 0)
    result = 7;
  else
    result = 5;
  if (v46 != 0.0)
  {
    MEMORY[0x24BD19588](result, v5);
    goto LABEL_45;
  }
  if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_45:
    v30 = sub_24A779274();
    v32 = v31;
    swift_release();
    if ((v32 & 1) == 0)
    {
      v46 = *(double *)&v30;
      if (qword_2544D6160 == -1)
        goto LABEL_47;
      goto LABEL_62;
    }
LABEL_54:
    swift_bridgeObjectRelease();
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v22 = 0;
    goto LABEL_55;
  }
LABEL_69:
  __break(1u);
  return result;
}

void sub_24A70343C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  _QWORD *v5;
  id v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;

  v0 = (_QWORD *)sub_24A779238();
  v1 = *(v0 - 1);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779268();
  v4 = (*(uint64_t (**)(char *, _QWORD *))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x24BEC5800])
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_distanceColors);
    if (!v5)
    {
      __break(1u);
      goto LABEL_16;
    }
    v0 = v5;
    v6 = objc_msgSend(v5, sel_nonGradientTextColor);

    if (v6)
      goto LABEL_12;
    __break(1u);
  }
  if (v4 != *MEMORY[0x24BEC57E8])
    goto LABEL_9;
  v7 = objc_msgSend((id)objc_opt_self(), sel_keyColors);
  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v0 = v7;
  v6 = objc_msgSend(v7, sel_nonGradientTextColor);

  if (!v6)
  {
    __break(1u);
LABEL_9:
    if (v4 != *MEMORY[0x24BEC57C0])
    {
      (*(void (**)(char *, _QWORD *))(v1 + 8))(v3, v0);
      return;
    }
    v8 = objc_msgSend((id)objc_opt_self(), sel_elapsedTimeColors);
    if (v8)
    {
      v9 = v8;
      v6 = objc_msgSend(v8, sel_nonGradientTextColor);

      if (v6)
        goto LABEL_12;
LABEL_18:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_12:
  MEMORY[0x24BD189B8](v6);
}

unint64_t sub_24A703600@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;

  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v75);
  v7 = (uint64_t *)((char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_24A77B410();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  v79 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C750);
  MEMORY[0x24BDAC7A8](v15);
  v76 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v81 = (uint64_t)&v74 - v18;
  v19 = *a1;
  sub_24A701864();
  result = v20 + 3;
  v77 = a2;
  v78 = v19 & 0xC000000000000001;
  v80 = v19;
  if ((v19 & 0xC000000000000001) != 0)
  {
    v73 = v19;
    v22 = v12;
    MEMORY[0x24BD19588](result, v73);
  }
  else
  {
    if (result >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_31;
    }
    v22 = v12;
    swift_retain();
  }
  sub_24A77925C();
  v24 = v23;
  swift_release();
  if (v24)
  {
    v25 = sub_24A77B3C8();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDF40B0], v8);
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v75 + 28), v11, v8);
    *v7 = KeyPath;
    sub_24A63CCC0((uint64_t)v7, (uint64_t)v14 + *(int *)(v22 + 36), &qword_2579492E8);
    *v14 = v25;
    swift_retain();
    sub_24A63CD04((uint64_t)v7, &qword_2579492E8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
    v27 = v81;
    sub_24A63F6C4((uint64_t)v14, v81, &qword_2579492F0);
    v28 = 0;
  }
  else
  {
    v28 = 1;
    v27 = v81;
  }
  v29 = v78;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v27, v28, 1, v22);
  v30 = v80;
  if (a3 != 2.0)
    goto LABEL_14;
  v31 = *((_OWORD *)a1 + 3);
  v84 = *((_OWORD *)a1 + 2);
  v85 = v31;
  v86 = *((_OWORD *)a1 + 4);
  v32 = *((_OWORD *)a1 + 1);
  v82 = *(_OWORD *)a1;
  v83 = v32;
  sub_24A701864();
  result = v33 + 4;
  if (v29)
  {
    MEMORY[0x24BD19588](result, v30);
    goto LABEL_12;
  }
  if (result >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_retain();
LABEL_12:
  v34 = sub_24A703BD4();
  v36 = v35;
  swift_release();
  if (v36)
  {
    *(_QWORD *)&v82 = v34;
    *((_QWORD *)&v82 + 1) = v36;
    sub_24A645928();
    v37 = sub_24A77BE54();
    v39 = v38;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v82 = v37;
    *((_QWORD *)&v82 + 1) = v39;
    v27 = v81;
    v40 = sub_24A77AFD8();
    v42 = v41;
    v44 = v43;
    v46 = v45 & 1;
    goto LABEL_15;
  }
LABEL_14:
  v40 = 0;
  v42 = 0;
  v46 = 0;
  v44 = 0;
LABEL_15:
  v79 = v44;
  if (a3 != 3.0)
  {
    v51 = v46;
    v52 = v42;
    v53 = v40;
    goto LABEL_27;
  }
  v47 = *((_OWORD *)a1 + 3);
  v84 = *((_OWORD *)a1 + 2);
  v85 = v47;
  v86 = *((_OWORD *)a1 + 4);
  v48 = *((_OWORD *)a1 + 1);
  v82 = *(_OWORD *)a1;
  v83 = v48;
  sub_24A701864();
  result = v49 + 4;
  if (!v29)
  {
    if (result < *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v50 = *(_QWORD *)(v30 + 8 * result + 32);
      swift_retain();
      goto LABEL_21;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v50 = MEMORY[0x24BD19588](result, v30);
LABEL_21:
  sub_24A701864();
  result = v54 + 5;
  if (v29)
  {
    v51 = v46;
    v52 = v42;
    v53 = v40;
    v55 = MEMORY[0x24BD19588](result, v30);
    goto LABEL_25;
  }
  if (result < *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v51 = v46;
    v52 = v42;
    v53 = v40;
    v55 = *(_QWORD *)(v30 + 8 * result + 32);
    swift_retain();
LABEL_25:
    v56 = sub_24A7040CC(v50, v55);
    v58 = v57;
    swift_release();
    swift_release();
    if (v58)
    {
      *(_QWORD *)&v82 = v56;
      *((_QWORD *)&v82 + 1) = v58;
      sub_24A645928();
      v59 = sub_24A77AFD8();
      v61 = v60;
      v63 = v62;
      v65 = v64 & 1;
LABEL_28:
      v66 = v27;
      v67 = v76;
      sub_24A63CCC0(v66, v76, &qword_25794C750);
      v68 = v77;
      sub_24A63CCC0(v67, v77, &qword_25794C750);
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C758);
      v70 = (uint64_t *)(v68 + *(int *)(v69 + 48));
      *v70 = v53;
      v70[1] = v52;
      v71 = v79;
      v70[2] = v51;
      v70[3] = v71;
      v72 = (uint64_t *)(v68 + *(int *)(v69 + 64));
      *v72 = v59;
      v72[1] = v61;
      v72[2] = v65;
      v72[3] = v63;
      sub_24A6B8208(v53, v52, v51, v71);
      sub_24A6B8208(v59, v61, v65, v63);
      sub_24A63CD04(v81, &qword_25794C750);
      sub_24A6B8238(v59, v61, v65, v63);
      sub_24A6B8238(v53, v52, v51, v71);
      return sub_24A63CD04(v67, &qword_25794C750);
    }
LABEL_27:
    v59 = 0;
    v61 = 0;
    v65 = 0;
    v63 = 0;
    goto LABEL_28;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_24A703BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  int v27;
  unsigned int *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = sub_24A779388();
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A779238();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - v12;
  v33 = *(_QWORD *)(v0 + 8);
  sub_24A779268();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v10, *MEMORY[0x24BEC57E8], v4);
  sub_24A704A54(&qword_25794C760, MEMORY[0x24BEC5828]);
  sub_24A77BAF4();
  sub_24A77BAF4();
  if (v36 == v38 && v37 == v39)
    v14 = 1;
  else
    v14 = sub_24A77C184();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v10, v4);
  v15(v13, v4);
  if ((v14 & 1) == 0 || (sub_24A77925C(), !v16))
  {
    v24 = sub_24A779244();
    if (v24)
    {
      v25 = (void *)v24;
      sub_24A779274();
      if ((v26 & 1) != 0)
      {

      }
      else
      {
        sub_24A779268();
        v27 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
        if (v27 == *MEMORY[0x24BEC57F0])
        {
          v28 = (unsigned int *)MEMORY[0x24BEC5988];
LABEL_26:
          v31 = v34;
          v30 = v35;
          (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v3, *v28, v35);
          v23 = sub_24A77937C();

          (*(void (**)(char *, uint64_t))(v31 + 8))(v3, v30);
          return v23;
        }
        if (v27 == *MEMORY[0x24BEC57B8])
        {
          v28 = (unsigned int *)MEMORY[0x24BEC5970];
          goto LABEL_26;
        }
        if (v27 == *MEMORY[0x24BEC57D0])
        {
          v28 = (unsigned int *)MEMORY[0x24BEC5980];
          goto LABEL_26;
        }

        v15(v7, v4);
      }
    }
    return 0;
  }
  v17 = sub_24A779274();
  if ((v18 & 1) != 0)
  {
    if (qword_2544D6160 == -1)
    {
LABEL_21:
      swift_beginAccess();
      v29 = (id)qword_2544D6158;
      v23 = sub_24A77856C();
      swift_bridgeObjectRelease();

      return v23;
    }
LABEL_32:
    swift_once();
    goto LABEL_21;
  }
  v19 = *(double *)&v17;
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v20 = (id)qword_2544D6158;
  sub_24A77856C();
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24A780030;
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v22 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v21 + 64) = v22;
  *(_QWORD *)(v21 + 32) = (uint64_t)v19;
  v23 = sub_24A77B9C8();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_24A7040CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  double v19;
  double v20;
  int v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;

  v32 = a2;
  v3 = sub_24A779730();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A779388();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A779238();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(v2 + 8);
  v14 = (void *)sub_24A779244();
  if (!v14)
    return 0;
  v31 = v14;
  v15 = sub_24A779274();
  if ((v16 & 1) != 0 || (v28 = *(double *)&v15, *(double *)&v17 = COERCE_DOUBLE(sub_24A779274()), (v18 & 1) != 0))
  {

    return 0;
  }
  v19 = v28;
  v32 = v17;
  v20 = *(double *)&v17;
  sub_24A779268();
  v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v21 == *MEMORY[0x24BEC57F0])
  {
    v22 = (unsigned int *)MEMORY[0x24BEC5988];
LABEL_16:
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v22, v6);
    sub_24A7793E8();
    swift_allocObject();
    sub_24A7793C4();
    v25 = v31;
    v26 = sub_24A779394();
    goto LABEL_17;
  }
  if (v21 != *MEMORY[0x24BEC5810])
  {
    if (v21 == *MEMORY[0x24BEC57B8])
    {
      v22 = (unsigned int *)MEMORY[0x24BEC5970];
      goto LABEL_16;
    }
    if (v21 == *MEMORY[0x24BEC57D0])
    {
      v22 = (unsigned int *)MEMORY[0x24BEC5980];
      goto LABEL_16;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v4 + 104))(v29, *MEMORY[0x24BEC5D10], v3);
  if (v19 <= v20)
  {
    sub_24A7797E4();
    swift_allocObject();
    sub_24A7797CC();
    v25 = v31;
    v26 = MEMORY[0x24BD16DC8](v30, v31);
LABEL_17:
    v23 = v26;
    swift_release();

    return v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A7043B0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C718);
  v3 = (char *)a1 + *(int *)(v2 + 56);
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)v3 = v4;
  *(_OWORD *)(v3 + 8) = xmmword_24A781A30;
  *(_OWORD *)(v3 + 24) = xmmword_24A781A40;
  *(_OWORD *)(v3 + 40) = xmmword_24A781A50;
  sub_24A701B78((uint64_t *)v8);
  v5 = v8[1];
  v6 = v8[2];
  *a1 = v8[0];
  a1[1] = v5;
  a1[2] = v6;
  return sub_24A701CF0((_OWORD *)((char *)a1 + *(int *)(v2 + 52)));
}

uint64_t sub_24A7044F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for WorkoutNotificationIntervalView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for WorkoutNotificationIntervalView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for WorkoutNotificationIntervalView(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutNotificationIntervalView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutNotificationIntervalView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutNotificationIntervalView()
{
  return &type metadata for WorkoutNotificationIntervalView;
}

uint64_t sub_24A70471C()
{
  return sub_24A63CFF0(&qword_25794C720, &qword_25794C718, (uint64_t)&unk_24A782F48);
}

uint64_t sub_24A704748(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 254)
    return sub_24A704774(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return result;
}

uint64_t sub_24A704774(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255)
    return sub_24A7047A0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  return result;
}

uint64_t sub_24A7047A0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  if ((a13 & 1) != 0)
  {
    sub_24A6B8208(a4, a5, a6, a7);
    swift_retain();
    return sub_24A6B8208(a9, a10, a11, a12);
  }
  else
  {
    sub_24A6436C4(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
}

id sub_24A70482C(id result, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;

  if (result)
  {
    swift_retain();
    swift_retain();
    v6 = a2;
    swift_retain();
    swift_retain();
    return a5;
  }
  return result;
}

uint64_t sub_24A704898(uint64_t result, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (result)
  {
    swift_release();

    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A7048FC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_DWORD *)(a1 + 160));
  return a1;
}

uint64_t sub_24A704968(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 254)
    return sub_24A704994(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return result;
}

uint64_t sub_24A704994(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255)
    return sub_24A7049C0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  return result;
}

uint64_t sub_24A7049C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  if ((a13 & 1) != 0)
  {
    sub_24A6B8238(a4, a5, a6, a7);
    swift_release();
    return sub_24A6B8238(a9, a10, a11, a12);
  }
  else
  {
    sub_24A64596C(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24A704A54(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24A779238();
    result = MEMORY[0x24BD1A1F4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

double sub_24A704A94(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 96) = 254;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  return result;
}

void WKUIBreadcrumbMapView.__allocating_init(locationPositionPublisher:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  WKUIBreadcrumbMapView.init(locationPositionPublisher:)();
}

void WKUIBreadcrumbMapView.init(locationPositionPublisher:)()
{
  _BYTE *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  void *v22;
  objc_super v23;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_cancellable] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline] = 0;
  v0[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_didReceiveInitialUpdate] = 0;
  v1 = objc_allocWithZone((Class)type metadata accessor for WKUIBreadcrumbMapView.EmptyCLDelegate());
  v2 = v0;
  v3 = objc_msgSend(v1, sel_init);
  v4 = WKUILocationBundlePath();
  sub_24A77B9B0();

  sub_24A64F254(0, (unint64_t *)&qword_2579491B8);
  v5 = v3;
  v6 = (void *)sub_24A77BCE0();
  v7 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
  v8 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithEffectiveBundlePath_delegate_onQueue_, v8, v5, v6);

  if (v9)
    objc_msgSend(v9, sel_setActivityType_, 3);
  v10 = (void *)objc_opt_self();
  v11 = WKUILocationBundle();
  v12 = (void *)sub_24A77B980();
  v13 = objc_msgSend(v10, sel_newAssertionForBundle_withReason_level_, v11, v12, 1);

  if (v13)
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_inUseAssertion] = v13;

    v23.receiver = v2;
    v23.super_class = (Class)type metadata accessor for WKUIBreadcrumbMapView();
    v14 = objc_msgSendSuper2(&v23, sel_initWithFrame_locationManager_, v9, 0.0, 0.0, 0.0, 0.0);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v15, sel_setDelegate_, v15);
      objc_msgSend(v15, sel_setZoomEnabled_, 1);
      objc_msgSend(v15, sel_setScrollEnabled_, 0);
      objc_msgSend(v15, sel_setPitchEnabled_, 0);
      objc_msgSend(v15, sel_setRotateEnabled_, 0);
      objc_msgSend(v15, sel_setShowsAttribution_, 0);
      objc_msgSend(v15, sel_setShowsUserLocation_, 1);
      objc_msgSend(v15, sel_setUserTrackingMode_, 1);
      objc_msgSend(v15, sel_setMapType_, 5);
      v16 = (void *)objc_opt_self();
      v17 = v15;
      v18 = objc_msgSend(v16, sel_filterExcludingAllCategories);
      objc_msgSend(v17, sel_setPointOfInterestFilter_, v18);

      v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WKUIBreadcrumbPath()), sel_init);
      v20 = (char *)v17;
      v21 = v19;
      objc_msgSend(v20, sel_addOverlay_level_, v21, 0);

      swift_release();
      v22 = *(void **)&v20[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath];
      *(_QWORD *)&v20[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath] = v21;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for WKUIBreadcrumbMapView.EmptyCLDelegate()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WKUIBreadcrumbMapView()
{
  return objc_opt_self();
}

void sub_24A704F78(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;

  v3 = sub_24A7789A4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v31 = v1;
    v33 = MEMORY[0x24BEE4AF8];
    sub_24A671D48(0, v8, 0);
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v32 = *(id *)(v4 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v11 = v4;
    do
    {
      v10(v7, v9, v3);
      sub_24A778998();
      v13 = v12;
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      v16 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24A671D48(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v33;
      }
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        sub_24A671D48(v17 > 1, v18 + 1, 1);
        v16 = v33;
      }
      *(_QWORD *)(v16 + 16) = v19;
      v20 = (_QWORD *)(v16 + 32 + 16 * v18);
      *v20 = v13;
      v20[1] = v15;
      v9 += (uint64_t)v32;
      --v8;
      v4 = v11;
    }
    while (v8);
    v21 = objc_msgSend((id)objc_opt_self(), sel_polylineWithCoordinates_count_, v16 + 32, v19);
    swift_release();
    v22 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline;
    v23 = v31;
    v24 = *(void **)&v31[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline];
    *(_QWORD *)&v31[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline] = v21;
    v25 = v21;
    if (v24)
      objc_msgSend(v23, sel_removeOverlay_, v24);
    v26 = *(_QWORD *)&v23[v22];
    if (v26)
      objc_msgSend(v23, sel_addOverlay_level_, v26, 1);

  }
  else
  {
    v27 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline;
    v28 = *(id *)&v1[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline];
    *(_QWORD *)&v1[OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_routePolyline] = 0;
    v32 = v28;
    if (v28)
    {
      objc_msgSend(v1, sel_removeOverlay_, v28, v5);
      v28 = v32;
    }
    v29 = *(_QWORD *)&v1[v27];
    if (v29)
    {
      objc_msgSend(v1, sel_addOverlay_level_, v29, 1, v5);

    }
    else
    {

    }
  }
}

void sub_24A705220(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;

  v2 = v1;
  v3 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_24A77C028();
    swift_bridgeObjectRelease();
    if (!v4)
      return;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return;
  }
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else if ((v3 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(v3 + 8 * v6 + 32);
      goto LABEL_8;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v16 = (id)MEMORY[0x24BD19588](v6, v3);
  swift_bridgeObjectRelease();
  v7 = v16;
LABEL_8:
  v8 = *(void **)(v2 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPath);
  if (v8)
  {
    v15 = v7;
    v9 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_didReceiveInitialUpdate;
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_didReceiveInitialUpdate) & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_24A780050;
      *(_QWORD *)(v10 + 32) = v15;
      v17 = v10;
      sub_24A77BB24();
      v3 = v17;
      v11 = v15;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v12 = *(void **)(v2 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer);
    v13 = v12;
    v14 = v8;
    sub_24A674AF8(v3, v2, (uint64_t *)v12);

    swift_bridgeObjectRelease();
    *(_BYTE *)(v2 + v9) = 1;
  }
  else
  {

  }
}

id WKUIBreadcrumbMapView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void WKUIBreadcrumbMapView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WKUIBreadcrumbMapView.__allocating_init(frame:locationManager:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_locationManager_, a1, a2, a3, a4, a5);

  return v7;
}

void WKUIBreadcrumbMapView.init(frame:locationManager:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WKUIBreadcrumbMapView.__deallocating_deinit(uint64_t a1)
{
  return sub_24A705678(a1, type metadata accessor for WKUIBreadcrumbMapView);
}

id WKUIBreadcrumbMapView.mapView(_:rendererFor:)()
{
  return sub_24A7056A8();
}

id sub_24A705668()
{
  return sub_24A705678(0, type metadata accessor for WKUIBreadcrumbMapView.EmptyCLDelegate);
}

id sub_24A705678(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_24A7056A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  objc_class *v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  objc_super v24;
  uint64_t v25;

  type metadata accessor for WKUIBreadcrumbPath();
  v1 = swift_dynamicCastClass();
  if (v1)
  {
    v2 = v1;
    v3 = OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC9WorkoutUI21WKUIBreadcrumbMapView_breadcrumbPathRenderer);
    if (v4)
    {
      return v4;
    }
    else
    {
      v19 = (objc_class *)type metadata accessor for WKUIBreadcrumbPathRenderer();
      v20 = (char *)objc_allocWithZone(v19);
      *(_QWORD *)&v20[OBJC_IVAR____TtC9WorkoutUI26WKUIBreadcrumbPathRenderer_crumbs] = v2;
      v24.receiver = v20;
      v24.super_class = v19;
      swift_unknownObjectRetain_n();
      v21 = objc_msgSendSuper2(&v24, sel_initWithOverlay_, v2);
      v22 = *(void **)(v0 + v3);
      *(_QWORD *)(v0 + v3) = v21;
      v23 = v21;
      swift_unknownObjectRelease();

      return v23;
    }
  }
  else
  {
    objc_opt_self();
    v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      v7 = v6;
      v8 = objc_allocWithZone(MEMORY[0x24BDDB190]);
      swift_unknownObjectRetain();
      v9 = objc_msgSend(v8, sel_initWithPolyline_, v7);
      v10 = (void *)objc_opt_self();
      v11 = v9;
      v12 = objc_msgSend(v10, sel_systemWhiteColor);
      objc_msgSend(v11, sel_setStrokeColor_, v12);

      v13 = v11;
      v14 = objc_msgSend(v10, sel_systemWhiteColor);
      v15 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.9);

      objc_msgSend(v13, sel_setFillColor_, v15);
      objc_msgSend(v13, sel_setLineWidth_, 4.0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_24A7840F0;
      sub_24A64F254(0, (unint64_t *)&qword_25794C8D0);
      v17 = v13;
      *(_QWORD *)(v16 + 32) = sub_24A77BDAC();
      *(_QWORD *)(v16 + 40) = sub_24A77BDAC();
      v25 = v16;
      sub_24A77BB24();
      v18 = (void *)sub_24A77BB0C();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setLineDashPattern_, v18);

      swift_unknownObjectRelease();
      return v17;
    }
    else
    {
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB148]), sel_init);
    }
  }
}

uint64_t method lookup function for WKUIBreadcrumbMapView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WKUIBreadcrumbMapView.__allocating_init(locationPositionPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of WKUIBreadcrumbMapView.set(routePoints:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of WKUIBreadcrumbMapView.update(locations:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t VerticalOscillationMetricView.init(metricType:verticalOscillation:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_24A7059DC()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;

  if (*v0 == 28)
  {
    if (qword_2544D6160 == -1)
      goto LABEL_6;
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 29)
    return 0xD000000000000012;
  if (qword_2544D6160 != -1)
    goto LABEL_9;
LABEL_6:
  swift_beginAccess();
  v1 = (id)qword_2544D6158;
  v2 = sub_24A77856C();

  return v2;
}

uint64_t sub_24A705B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  double v17[2];

  v1 = sub_24A778674();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v17 - v11;
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v13 = (id)qword_2544D6158;
    v14 = sub_24A77856C();

  }
  else
  {
    v17[0] = *(double *)(v0 + 8) * 100.0;
    sub_24A77886C();
    sub_24A6971B4();
    sub_24A7785E4();
    sub_24A778668();
    MEMORY[0x24BD15C34](v4, v6);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    sub_24A6971F8();
    sub_24A77B8E4();
    v15(v12, v6);
    return *(_QWORD *)&v17[1];
  }
  return v14;
}

void VerticalOscillationMetricView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v5 = sub_24A705B50();
  v7 = v6;
  if ((v3 & 1) != 0)
  {
    v8 = v4;
    v9 = 0;
    v10 = 0;
  }
  else
  {
    v11 = qword_2544D6160;
    v12 = v4;
    if (v11 != -1)
      swift_once();
    swift_beginAccess();
    v13 = (id)qword_2544D6158;
    v9 = sub_24A77856C();
    v10 = v14;

  }
  v15 = sub_24A7059DC();
  v17 = v16;

  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v17;
  *(_WORD *)(a1 + 48) = 0;
}

uint64_t sub_24A705F34()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for VerticalOscillationMetricView()
{
  return &type metadata for VerticalOscillationMetricView;
}

uint64_t HeartRateAggregateMetricView.init(label:heartRate:isStale:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t result;

  v9 = *a1;
  result = swift_getKeyPath();
  *(_BYTE *)a5 = v9;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_BYTE *)(a5 + 17) = a4;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  return result;
}

BOOL static HeartRateAggregateMetricView.Label.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HeartRateAggregateMetricView.Label.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t HeartRateAggregateMetricView.Label.hashValue.getter()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t HeartRateAggregateMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_24A7061AC();
  v10 = v3;
  v11 = v2;
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v4 = (id)qword_2544D6158;
  v5 = sub_24A77856C();
  v7 = v6;

  result = sub_24A7064CC();
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_24A7061AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = sub_24A778674();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_24A77C16C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - v16;
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v18 = (id)qword_2544D6158;
    v19 = sub_24A77856C();

  }
  else
  {
    v27 = *(_QWORD *)(v0 + 8);
    sub_24A77886C();
    v23 = sub_24A6971B4();
    sub_24A7785E4();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38E8], v3);
    MEMORY[0x24BD15C28](v6, 0, 1, v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v11, v8);
    v21 = v24;
    sub_24A778668();
    MEMORY[0x24BD15C34](v21, v8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    v20(v14, v8);
    sub_24A6971F8();
    sub_24A77B8E4();
    v20(v17, v8);
    return v28;
  }
  return v19;
}

uint64_t sub_24A7064CC()
{
  char *v0;
  char v1;
  uint64_t v2;
  char v3;
  id v4;
  uint64_t v5;
  char v7;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 3);
  v3 = v0[32];
  if ((v1 & 1) != 0)
  {
    sub_24A63BEC0(v2, v3);
    sub_24A63E608(v2, v3, &v7);
    sub_24A63BEDC(v2, v3);
    switch(v7)
    {
      case 2:
      case 6:
        if (qword_2544D6160 != -1)
          goto LABEL_20;
        break;
      case 3:
      case 4:
        if (qword_2544D6160 != -1)
          goto LABEL_20;
        break;
      case 5:
        if (qword_2544D6160 != -1)
          goto LABEL_20;
        break;
      default:
        if (qword_2544D6160 != -1)
          goto LABEL_20;
        break;
    }
  }
  else
  {
    sub_24A63BEC0(v2, v3);
    sub_24A63E608(v2, v3, &v7);
    sub_24A63BEDC(v2, v3);
    switch(v7)
    {
      case 2:
      case 6:
        if (qword_2544D6160 != -1)
          goto LABEL_20;
        break;
      case 3:
      case 4:
        if (qword_2544D6160 != -1)
          goto LABEL_20;
        break;
      case 5:
        if (qword_2544D6160 != -1)
          goto LABEL_20;
        break;
      default:
        if (qword_2544D6160 != -1)
LABEL_20:
          swift_once();
        break;
    }
  }
  swift_beginAccess();
  v4 = (id)qword_2544D6158;
  v5 = sub_24A77856C();

  return v5;
}

unint64_t sub_24A706938()
{
  unint64_t result;

  result = qword_25794C8E0;
  if (!qword_25794C8E0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for HeartRateAggregateMetricView.Label, &type metadata for HeartRateAggregateMetricView.Label);
    atomic_store(result, (unint64_t *)&qword_25794C8E0);
  }
  return result;
}

uint64_t sub_24A70697C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for HeartRateAggregateMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 32);
  sub_24A63BEC0(v3, v4);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithCopy for HeartRateAggregateMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  sub_24A63BEC0(v4, v5);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  sub_24A63BEDC(v6, v7);
  return a1;
}

uint64_t assignWithTake for HeartRateAggregateMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  sub_24A63BEDC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateAggregateMetricView(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[33])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartRateAggregateMetricView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartRateAggregateMetricView()
{
  return &type metadata for HeartRateAggregateMetricView;
}

uint64_t storeEnumTagSinglePayload for HeartRateAggregateMetricView.Label(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A706BA0 + 4 * byte_24A78591F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A706BD4 + 4 * byte_24A78591A[v4]))();
}

uint64_t sub_24A706BD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A706BDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A706BE4);
  return result;
}

uint64_t sub_24A706BF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A706BF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A706BFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A706C04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeartRateAggregateMetricView.Label()
{
  return &type metadata for HeartRateAggregateMetricView.Label;
}

uint64_t sub_24A706C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_24A778854();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PowerZonesBarChart.init(livePowerZones:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;

  if (result)
  {
    swift_retain();
    v3 = sub_24A779A90();
    v4 = sub_24A706D08(v3);
    swift_bridgeObjectRelease();
    v5 = sub_24A779A78();
    v7 = v6 & 1;
    v8 = sub_24A779A9C();
    result = swift_release_n();
  }
  else
  {
    v5 = 0;
    v7 = 1;
    v4 = MEMORY[0x24BEE4AF8];
    v8 = 1;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 17) = v8 & 1;
  return result;
}

uint64_t sub_24A706D08(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for PowerZonesBarChartElement();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BEE4AF8];
  sub_24A671D6C(0, 0, 0);
  v5 = v24;
  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
      v20 = a1 & 0xC000000000000001;
      v18 = a1;
      while (v20)
      {
        MEMORY[0x24BD19588](v7, a1);
        v8 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_15;
LABEL_7:
        v23 = v8;
        v9 = sub_24A77C160();
        v11 = v10;
        sub_24A779A48();
        v13 = v12;
        sub_24A778848();
        swift_release();
        *v4 = v9;
        v4[1] = v11;
        v4[2] = v13;
        v24 = v5;
        v15 = *(_QWORD *)(v5 + 16);
        v14 = *(_QWORD *)(v5 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_24A671D6C(v14 > 1, v15 + 1, 1);
          v5 = v24;
        }
        *(_QWORD *)(v5 + 16) = v15 + 1;
        sub_24A709818((uint64_t)v4, v5+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v15);
        ++v7;
        a1 = v18;
        if (v8 == v6)
          goto LABEL_17;
      }
      if (v7 < *(_QWORD *)(v19 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v6 = sub_24A77C028();
      if (!v6)
        goto LABEL_17;
    }
    swift_retain();
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_15;
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t PowerZonesBarChart.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v30 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C8E8);
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C8F0);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C8F8);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C900);
  MEMORY[0x24BDAC7A8](v25);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v13 = *((_BYTE *)v1 + 16);
  v14 = *((unsigned __int8 *)v1 + 17);
  v35 = *v1;
  v11 = v35;
  v36 = v12;
  v37 = v13;
  v38 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C908);
  sub_24A707428();
  sub_24A77A21C();
  v31 = v11;
  v32 = v12;
  v33 = v13;
  v34 = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C928);
  v16 = sub_24A63CFF0(&qword_25794C930, &qword_25794C8E8, MEMORY[0x24BDB8148]);
  v17 = sub_24A63CFF0(&qword_25794C938, &qword_25794C928, MEMORY[0x24BDB82F0]);
  sub_24A77AFE4();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C940);
  v39 = v2;
  v40 = v15;
  v41 = v16;
  v42 = v17;
  swift_getOpaqueTypeConformance2();
  sub_24A63CFF0(&qword_25794C948, &qword_25794C940, MEMORY[0x24BDB82F0]);
  v18 = v27;
  sub_24A77AFFC();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v18);
  if (v14)
    v19 = 0.5;
  else
    v19 = 1.0;
  v20 = v26;
  v21 = v28;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v10, v8, v28);
  *(double *)&v10[*(int *)(v25 + 36)] = v19;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
  return sub_24A63F6C4((uint64_t)v10, v30, &qword_25794C900);
}

uint64_t sub_24A707254(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_bridgeObjectRetain();
  sub_24A709284(v6);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_BYTE *)(v7 + 32) = a3 & 1;
  *(_BYTE *)(v7 + 33) = HIBYTE(a3) & 1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_24A709774;
  *(_QWORD *)(v8 + 24) = v7;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA60);
  sub_24A63CFF0(&qword_25794CA68, &qword_25794CA58, MEMORY[0x24BEE12D8]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C918);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C920);
  sub_24A77A240();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return sub_24A77B5D8();
}

uint64_t sub_24A70741C()
{
  return sub_24A707B80((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_24A707254);
}

unint64_t sub_24A707428()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];

  result = qword_25794C910;
  if (!qword_25794C910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C908);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C918);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C920);
    sub_24A77A240();
    v3[3] = MEMORY[0x24BDB8168];
    v3[4] = MEMORY[0x24BDF3E18];
    swift_getOpaqueTypeConformance2();
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8490], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794C910);
  }
  return result;
}

uint64_t sub_24A70751C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v43 = a4;
  v42 = a3;
  v39 = a1;
  v47 = a5;
  v6 = sub_24A77A9D8();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A568);
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_24A77A240();
  v34 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C920);
  v36 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C918);
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v32 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA60);
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v35 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A9C0();
  v18 = a2[1];
  v48 = *a2;
  v49 = v18;
  swift_bridgeObjectRetain();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v48 = a2[2];
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A234();
  v48 = sub_24A70958C(v39);
  v19 = MEMORY[0x24BDF3E48];
  v20 = MEMORY[0x24BDB8168];
  v21 = MEMORY[0x24BDF3E18];
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
  v48 = v11;
  v49 = v19;
  v50 = v20;
  v51 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v23 = v32;
  v24 = v33;
  sub_24A77A0E4();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v24);
  v25 = v44;
  v26 = v45;
  v27 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, *MEMORY[0x24BDEEB68], v46);
  v48 = v24;
  v49 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v28 = v35;
  v29 = v38;
  sub_24A77A084();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v29);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v47, v28, v40);
}

uint64_t sub_24A7079F4(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_24A77A144();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_24A77A198();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_24A77A12C();
  MEMORY[0x24BDAC7A8](v8);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_BYTE *)(v9 + 32) = a3 & 1;
  *(_BYTE *)(v9 + 33) = HIBYTE(a3) & 1;
  swift_bridgeObjectRetain();
  sub_24A77A120();
  sub_24A77A18C();
  sub_24A77A138();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA00);
  sub_24A63CFF0(&qword_25794CA08, &qword_25794CA00, MEMORY[0x24BDB7E40]);
  return sub_24A77A300();
}

uint64_t sub_24A707B74()
{
  return sub_24A707B80((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_24A7079F4);
}

uint64_t sub_24A707B80(uint64_t (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  int v2;

  if (*(_BYTE *)(v1 + 33))
    v2 = 256;
  else
    v2 = 0;
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_24A707BAC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_24A77A1EC();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_24A77A204();
  MEMORY[0x24BDAC7A8](v1);
  sub_24A77A1F8();
  sub_24A77A1E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA10);
  sub_24A708FF8();
  return sub_24A77A15C();
}

unint64_t sub_24A707CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  int64x2_t *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  char v30;
  int64x2_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64x2_t *v43;
  __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  _BYTE v58[4];
  int v59;
  int64x2_t *v60;
  uint64_t KeyPath;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v69 = a4;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA50);
  MEMORY[0x24BDAC7A8](v68);
  v8 = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948130);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v58[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (int64x2_t *)&v58[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA28);
  MEMORY[0x24BDAC7A8](v70);
  v16 = &v58[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v67 = &v58[-v18];
  if ((a3 & 1) != 0 || sub_24A77A33C() != a2)
  {
    result = sub_24A77A33C();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v51 = result;
      if (result < *(_QWORD *)(a1 + 16))
      {
        v52 = type metadata accessor for PowerZonesBarChartElement();
        v53 = (uint64_t *)(a1
                        + ((*(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80))
                        + *(_QWORD *)(*(_QWORD *)(v52 - 8) + 72) * v51);
        v54 = v53[1];
        v71 = *v53;
        v72 = v54;
        sub_24A645928();
        swift_bridgeObjectRetain();
        *(_QWORD *)v8 = sub_24A77AFD8();
        *((_QWORD *)v8 + 1) = v55;
        v8[16] = v56 & 1;
        *((_QWORD *)v8 + 3) = v57;
        swift_storeEnumTagMultiPayload();
        sub_24A709064();
        return sub_24A77AB28();
      }
    }
    __break(1u);
    goto LABEL_15;
  }
  result = sub_24A77A33C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v20 = result;
  if (result >= *(_QWORD *)(a1 + 16))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v21 = type metadata accessor for PowerZonesBarChartElement();
  v22 = (uint64_t *)(a1
                  + ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))
                  + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v20);
  v23 = v22[1];
  v71 = *v22;
  v72 = v23;
  sub_24A645928();
  swift_bridgeObjectRetain();
  v24 = sub_24A77AFD8();
  v64 = v25;
  v65 = v24;
  v63 = v26;
  v66 = v27;
  v28 = sub_24A77ACD8();
  v29 = sub_24A77ACF0();
  v30 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v28)
    v30 = sub_24A77ACE4();
  v31 = v14;
  sub_24A77ACE4();
  v32 = (uint64_t)v11;
  if (sub_24A77ACE4() != v29)
    v30 = sub_24A77ACE4();
  sub_24A77A390();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v62 = sub_24A77B350();
  KeyPath = swift_getKeyPath();
  v41 = sub_24A77A33C();
  v42 = sub_24A70958C(v41);
  v59 = sub_24A77ACB4();
  v43 = v31;
  v44 = &v31->i8[*(int *)(v12 + 20)];
  v45 = *MEMORY[0x24BDEEB68];
  v46 = sub_24A77A9D8();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v44, v45, v46);
  v60 = v43;
  *v43 = vdupq_n_s64(0x7FF0000000000000uLL);
  sub_24A65FAD0((uint64_t)v43, v32, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v32 + *(int *)(v9 + 36)) = 256;
  sub_24A63CCC0(v32, (uint64_t)&v16[*(int *)(v70 + 36)], &qword_257948130);
  v47 = v64;
  v48 = v65;
  *(_QWORD *)v16 = v65;
  *((_QWORD *)v16 + 1) = v47;
  LOBYTE(v45) = v63 & 1;
  v16[16] = v63 & 1;
  *((_QWORD *)v16 + 3) = v66;
  v16[32] = v30;
  *((_QWORD *)v16 + 5) = v34;
  *((_QWORD *)v16 + 6) = v36;
  *((_QWORD *)v16 + 7) = v38;
  *((_QWORD *)v16 + 8) = v40;
  v16[72] = 0;
  v49 = v62;
  *((_QWORD *)v16 + 10) = KeyPath;
  *((_QWORD *)v16 + 11) = v49;
  *((_QWORD *)v16 + 12) = v42;
  v16[104] = v59;
  sub_24A6436C4(v48, v47, v45);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24A63CD04(v32, &qword_257948130);
  sub_24A655698((uint64_t)v60);
  sub_24A64596C(v48, v47, v45);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v50 = v67;
  sub_24A63F6C4((uint64_t)v16, (uint64_t)v67, &qword_25794CA28);
  sub_24A63CCC0((uint64_t)v50, (uint64_t)v8, &qword_25794CA28);
  swift_storeEnumTagMultiPayload();
  sub_24A709064();
  sub_24A77AB28();
  return sub_24A63CD04((uint64_t)v50, &qword_25794CA28);
}

uint64_t sub_24A70820C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_24A77A144();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_24A77A198();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_24A77A12C();
  MEMORY[0x24BDAC7A8](v2);
  sub_24A77A120();
  sub_24A77A18C();
  sub_24A77A138();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794C9F0);
  sub_24A63CFF0(&qword_25794C9F8, &qword_25794C9F0, MEMORY[0x24BDB7E40]);
  return sub_24A77A300();
}

uint64_t sub_24A708344()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A708354()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_24A77A1EC();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_24A77A204();
  MEMORY[0x24BDAC7A8](v1);
  sub_24A77A1F8();
  sub_24A77A1E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947710);
  sub_24A709218((unint64_t *)&qword_257947718, &qword_257947710, MEMORY[0x24BDF1F80], MEMORY[0x24BDEF3E0]);
  return sub_24A77A15C();
}

double sub_24A70849C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  double result;
  __int128 v22;
  char v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  char v35;

  v27 = a1;
  v1 = sub_24A77C16C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77C2A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A77C2B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A324();
  if ((BYTE8(v33) & 1) != 0)
  {
    sub_24A77C2C8();
    v26 = v13;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE38C8], v1);
    sub_24A77C28C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_24A778338();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_24A63C880((unint64_t *)&qword_257947708, (uint64_t (*)(uint64_t))MEMORY[0x24BDD08D0], MEMORY[0x24BDD08C8]);
    sub_24A77C2BC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_24A645928();
    v28 = sub_24A77AFD8();
    v29 = v15;
    v30 = v14 & 1;
    v31 = v16;
    v32 = 1;
  }
  else
  {
    sub_24A77C2C8();
    v26 = v17;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE38C8], v1);
    sub_24A77C28C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_24A778338();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_24A63C880((unint64_t *)&qword_257947708, (uint64_t (*)(uint64_t))MEMORY[0x24BDD08D0], MEMORY[0x24BDD08C8]);
    sub_24A77C2BC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_24A645928();
    v28 = sub_24A77AFD8();
    v29 = v18;
    v30 = v19 & 1;
    v31 = v20;
    v32 = 0;
  }
  sub_24A77AB28();
  result = *(double *)&v33;
  v22 = v34;
  v23 = v35;
  v24 = v27;
  *v27 = v33;
  v24[1] = v22;
  *((_BYTE *)v24 + 32) = v23;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for PowerZonesBarChart()
{
  return &type metadata for PowerZonesBarChart;
}

unint64_t sub_24A7087F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[6];

  result = qword_25794C950;
  if (!qword_25794C950)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C900);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C8F0);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C940);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C8E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794C928);
    sub_24A63CFF0(&qword_25794C930, &qword_25794C8E8, MEMORY[0x24BDB8148]);
    v4 = MEMORY[0x24BDB82F0];
    sub_24A63CFF0(&qword_25794C938, &qword_25794C928, MEMORY[0x24BDB82F0]);
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = swift_getOpaqueTypeConformance2();
    v5[5] = sub_24A63CFF0(&qword_25794C948, &qword_25794C940, v4);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25794C950);
  }
  return result;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t _s9WorkoutUI23PowerZonesBarChartModelVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24A708A78(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerZonesBarChartModel()
{
  return &type metadata for PowerZonesBarChartModel;
}

uint64_t *sub_24A708AC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_24A778854();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_24A708B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_24A778854();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_24A708BB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_24A778854();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_24A708C2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24A778854();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_24A708CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_24A778854();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_24A708D14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_24A778854();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_24A708D88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A708D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_24A778854();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_24A708E10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A708E1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_24A778854();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PowerZonesBarChartElement()
{
  uint64_t result;

  result = qword_25794C9B0;
  if (!qword_25794C9B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A708ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778854();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A708F4C()
{
  return sub_24A63C880(&qword_257947490, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

double sub_24A708F78@<D0>(_OWORD *a1@<X8>)
{
  return sub_24A70849C(a1);
}

uint64_t sub_24A708F80()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24A708FA4()
{
  return sub_24A707BAC();
}

unint64_t sub_24A708FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A707CFC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

unint64_t sub_24A708FF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CA18;
  if (!qword_25794CA18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CA10);
    v2[0] = sub_24A709064();
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CA18);
  }
  return result;
}

unint64_t sub_24A709064()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CA20;
  if (!qword_25794CA20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CA28);
    v2[0] = sub_24A7090E8();
    v2[1] = sub_24A63CFF0(&qword_257948160, &qword_257948130, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CA20);
  }
  return result;
}

unint64_t sub_24A7090E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CA30;
  if (!qword_25794CA30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CA38);
    v2[0] = sub_24A70916C();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257948440, &qword_257948448, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CA30);
  }
  return result;
}

unint64_t sub_24A70916C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794CA40;
  if (!qword_25794CA40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CA48);
    v2 = MEMORY[0x24BDED308];
    v3[0] = sub_24A709218((unint64_t *)&qword_25794C278, &qword_25794C270, MEMORY[0x24BDECC60], MEMORY[0x24BDED308]);
    v3[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](v2, v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794CA40);
  }
  return result;
}

uint64_t sub_24A709218(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = MEMORY[0x24BDF1F80];
    v9[1] = a3;
    result = MEMORY[0x24BD1A1F4](a4, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

size_t sub_24A709284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t result;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA70);
  MEMORY[0x24BDAC7A8](v48);
  v42 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v46 = (_QWORD *)((char *)v41 - v4);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v41 - v6;
  v47 = v8;
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v45 = v10;
  v41[1] = a1;
  if (v10)
  {
    v43 = (v9 + 32) & ~v9;
    v12 = MEMORY[0x24BEE4AF8] + v43;
    v13 = 0;
    v14 = 0;
    v15 = *(_QWORD *)(type metadata accessor for PowerZonesBarChartElement() - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v44 = *(_QWORD *)(v15 + 72);
    v41[2] = v9 | 7;
    v17 = v11;
    v18 = v42;
    while (1)
    {
      v20 = v48;
      v21 = (uint64_t)&v18[*(int *)(v48 + 48)];
      sub_24A65FAD0(v16, v21, (uint64_t (*)(_QWORD))type metadata accessor for PowerZonesBarChartElement);
      v22 = (uint64_t)v46;
      v23 = (uint64_t)v46 + *(int *)(v20 + 48);
      *v46 = v13;
      sub_24A709818(v21, v23);
      result = sub_24A63F6C4(v22, (uint64_t)v7, &qword_25794CA70);
      if (v14)
      {
        v11 = v17;
        v19 = __OFSUB__(v14--, 1);
        if (v19)
          goto LABEL_27;
      }
      else
      {
        v25 = v17[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1)
          v27 = 1;
        else
          v27 = v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA78);
        v28 = *(_QWORD *)(v47 + 72);
        v29 = v43;
        v11 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v11);
        if (!v28)
          goto LABEL_34;
        v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1)
          goto LABEL_35;
        v32 = v30 / v28;
        v11[2] = v27;
        v11[3] = 2 * (v30 / v28);
        v33 = (char *)v11 + v29;
        v34 = v17[3] >> 1;
        v35 = v34 * v28;
        if (v17[2])
        {
          if (v11 < v17 || v33 >= (char *)v17 + v43 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v17)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v17[2] = 0;
        }
        v12 = (uint64_t)&v33[v35];
        v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        v18 = v42;
        v19 = __OFSUB__(v37, 1);
        v14 = v37 - 1;
        if (v19)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      sub_24A63F6C4((uint64_t)v7, v12, &qword_25794CA70);
      v12 += *(_QWORD *)(v47 + 72);
      v16 += v44;
      v17 = v11;
      if (v45 == v13)
        goto LABEL_29;
    }
  }
  v14 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v38 = v11[3];
  if (v38 >= 2)
  {
    v39 = v38 >> 1;
    v19 = __OFSUB__(v39, v14);
    v40 = v39 - v14;
    if (v19)
      goto LABEL_36;
    v11[2] = v40;
  }
  return (size_t)v11;
}

uint64_t sub_24A70958C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = sub_24A77B320();
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 0:
      (*(void (**)(char *, _QWORD, double))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v4);
      v8.n128_u64[0] = 0x3FCE1E1E1E1E1E1ELL;
      v9.n128_u64[0] = 0x3FE4747474747474;
      v10 = 0x3FEF3F3F3F3F3F3FLL;
      goto LABEL_5;
    case 1:
      (*(void (**)(char *, _QWORD, double))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v4);
      v8.n128_u64[0] = 0x3FD0D0D0D0D0D0D1;
      v9.n128_u64[0] = 0x3FEE3E3E3E3E3E3ELL;
      v10 = 0x3FEC3C3C3C3C3C3CLL;
LABEL_5:
      v7.n128_u64[0] = v10;
      goto LABEL_11;
    case 2:
      (*(void (**)(char *, _QWORD, double))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v4);
      v8.n128_u64[0] = 0x3FE7B7B7B7B7B7B8;
      v9.n128_u64[0] = 1.0;
      v7.n128_u64[0] = 0;
      goto LABEL_11;
    case 3:
      (*(void (**)(char *, _QWORD, double))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v4);
      v9.n128_u64[0] = 0x3FE0505050505050;
      v7.n128_u64[0] = 0x3FA4141414141414;
      v8.n128_u64[0] = 1.0;
      goto LABEL_11;
    case 4:
      (*(void (**)(char *, _QWORD, double))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v4);
      v9.n128_u64[0] = 0x3FAA1A1A1A1A1A1ALL;
      v7.n128_u64[0] = 0x3FDB9B9B9B9B9B9CLL;
      v8.n128_u64[0] = 1.0;
      goto LABEL_11;
    case 5:
      (*(void (**)(char *, _QWORD, double))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v4);
      v9.n128_u64[0] = 0x3F94141414141414;
      v7.n128_u64[0] = 0x3FD9191919191919;
      v8.n128_u64[0] = 1.0;
      goto LABEL_11;
    case 6:
      (*(void (**)(char *, _QWORD, double))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v4);
      v8.n128_u64[0] = 1.0;
      v9.n128_u64[0] = 0;
      v7.n128_u64[0] = 1.0;
LABEL_11:
      result = MEMORY[0x24BD189AC](v6, v8, v9, v7, 1.0);
      break;
    default:
      result = sub_24A77B338();
      break;
  }
  return result;
}

uint64_t sub_24A709774@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;

  if (*(_BYTE *)(v3 + 33))
    v4 = 256;
  else
    v4 = 0;
  return sub_24A70751C(a1, a2, *(_QWORD *)(v3 + 24), v4 | *(unsigned __int8 *)(v3 + 32), a3);
}

uint64_t sub_24A70979C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A7097C0(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA70);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_24A709818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PowerZonesBarChartElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static WorkoutChartProperties.ChartType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void static WorkoutChartProperties.power(unit:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;

  v4 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v5 = objc_msgSend((id)objc_opt_self(), sel_powerColors);
  v6 = objc_msgSend(v5, sel_nonGradientTextColor);

  if (v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_wattUnit);
    v8 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v7, 100.0);

    objc_msgSend(v8, sel_doubleValueForUnit_, a1);
    v10 = v9;

    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.250980392, 0.250980392, 0.250980392, 1.0);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.682352941, 0.705882353, 0.749019608, 1.0);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.490196078, 0.596078431, 0.0, 0.1);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 0.53);
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.301960784, 0.474509804, 0.0, 1.0);
    sub_24A779700();
    v16 = sub_24A7796F4();
    *(_QWORD *)a2 = v16;
    *(_QWORD *)(a2 + 8) = 0x409C200000000000;
    *(double *)(a2 + 16) = 1800.0 / (double)v16;
    *(_QWORD *)(a2 + 24) = 4;
    *(_BYTE *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0x4028000000000000;
    *(_QWORD *)(a2 + 48) = v6;
    *(_QWORD *)(a2 + 56) = 0x7265776F50;
    *(_QWORD *)(a2 + 64) = 0xE500000000000000;
    *(_BYTE *)(a2 + 72) = 0;
    *(_QWORD *)(a2 + 80) = v10;
    *(_BYTE *)(a2 + 88) = 1;
    *(_QWORD *)(a2 + 96) = v4;
    *(_QWORD *)(a2 + 104) = v11;
    *(_QWORD *)(a2 + 112) = v12;
    *(_QWORD *)(a2 + 120) = v13;
    *(_QWORD *)(a2 + 128) = v14;
    *(_QWORD *)(a2 + 136) = v15;
  }
  else
  {
    __break(1u);
  }
}

void static WorkoutChartProperties.elevation(unit:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_elevationColors);
  v6 = objc_msgSend(v5, sel_valueDisplayColor);

  v7 = objc_msgSend(v4, sel_elevationColors);
  v8 = objc_msgSend(v7, sel_nonGradientTextColor);

  if (v8)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_meterUnit);
    v10 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v9, 10.0);

    objc_msgSend(v10, sel_doubleValueForUnit_, a1);
    v12 = v11;

    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.250980392, 0.250980392, 0.250980392, 1.0);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.682352941, 0.705882353, 0.749019608, 1.0);
    sub_24A779700();
    v15 = sub_24A7796F4();
    *(_QWORD *)a2 = v15;
    *(_QWORD *)(a2 + 8) = 0x409C200000000000;
    *(double *)(a2 + 16) = 1800.0 / (double)v15;
    *(_QWORD *)(a2 + 24) = 4;
    *(_BYTE *)(a2 + 32) = 1;
    *(_QWORD *)(a2 + 40) = 0x4014000000000000;
    *(_QWORD *)(a2 + 48) = v8;
    *(_QWORD *)(a2 + 56) = 0x6F69746176656C45;
    *(_QWORD *)(a2 + 64) = 0xE90000000000006ELL;
    *(_BYTE *)(a2 + 72) = 1;
    *(_QWORD *)(a2 + 80) = v12;
    *(_BYTE *)(a2 + 88) = 1;
    *(_QWORD *)(a2 + 96) = v6;
    *(_QWORD *)(a2 + 104) = v13;
    *(_QWORD *)(a2 + 112) = v14;
    *(_QWORD *)(a2 + 120) = 0;
    *(_QWORD *)(a2 + 128) = 0;
    *(_QWORD *)(a2 + 136) = 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t WorkoutChartProperties.ChartType.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t WorkoutChartProperties.ChartType.hashValue.getter()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

uint64_t WorkoutChartProperties.maxOnScreenBuckets.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double WorkoutChartProperties.timeWindow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

id WorkoutChartProperties.tintColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t WorkoutChartProperties.init(timeWindow:maxOnScreenBuckets:horizontalSections:chartType:markWidth:highlightLatestSample:highlightColor:tintColor:valuesName:hasNegativeValues:minimumValueRange:gridColor:textColor:gradientStartColor:gradientEndColor:lineMarkColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, char a13, __int128 a14, __int128 a15, uint64_t a16)
{
  char v16;

  v16 = *a3;
  *(_QWORD *)a9 = result;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a10 / (double)result;
  *(_QWORD *)(a9 + 24) = a2;
  *(_BYTE *)(a9 + 32) = v16;
  *(double *)(a9 + 40) = a11;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  *(_BYTE *)(a9 + 72) = a13;
  *(double *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 88) = a4;
  *(_QWORD *)(a9 + 96) = a5;
  *(_OWORD *)(a9 + 104) = a14;
  *(_OWORD *)(a9 + 120) = a15;
  *(_QWORD *)(a9 + 136) = a16;
  return result;
}

unint64_t sub_24A709DE0()
{
  unint64_t result;

  result = qword_25794CA80;
  if (!qword_25794CA80)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for WorkoutChartProperties.ChartType, &type metadata for WorkoutChartProperties.ChartType);
    atomic_store(result, (unint64_t *)&qword_25794CA80);
  }
  return result;
}

void destroy for WorkoutChartProperties(id *a1)
{

  swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkoutChartProperties(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = *(void **)(a2 + 96);
  v7 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(void **)(a2 + 112);
  v9 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(void **)(a2 + 128);
  v11 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v10;
  *(_QWORD *)(a1 + 136) = v11;
  v12 = v4;
  swift_bridgeObjectRetain();
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  return a1;
}

uint64_t assignWithCopy for WorkoutChartProperties(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(void **)(a1 + 96);
  v8 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = v8;

  v10 = *(void **)(a2 + 104);
  v11 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 112);
  v14 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v13;
  v15 = v13;

  v16 = *(void **)(a1 + 120);
  v17 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v17;
  v18 = v17;

  v19 = *(void **)(a1 + 128);
  v20 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v20;
  v21 = v20;

  v22 = *(void **)(a1 + 136);
  v23 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v23;
  v24 = v23;

  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for WorkoutChartProperties(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);

  v6 = *(void **)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);

  v7 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  v8 = *(void **)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);

  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutChartProperties(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutChartProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutChartProperties()
{
  return &type metadata for WorkoutChartProperties;
}

uint64_t storeEnumTagSinglePayload for WorkoutChartProperties.ChartType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A70A248 + 4 * byte_24A785C05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A70A27C + 4 * byte_24A785C00[v4]))();
}

uint64_t sub_24A70A27C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A70A284(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A70A28CLL);
  return result;
}

uint64_t sub_24A70A298(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A70A2A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A70A2A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A70A2AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutChartProperties.ChartType()
{
  return &type metadata for WorkoutChartProperties.ChartType;
}

uint64_t WorkoutTimeProvidedView.provider.getter()
{
  sub_24A70B008();
  return swift_unknownObjectRetain();
}

uint64_t sub_24A70A2DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  type metadata accessor for WorkoutTimeProvidedView(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  *a4 = sub_24A70B008();
  return swift_unknownObjectRetain();
}

uint64_t sub_24A70A32C()
{
  uint64_t v0;

  v0 = swift_unknownObjectRetain();
  return WorkoutTimeProvidedView.provider.setter(v0);
}

uint64_t WorkoutTimeProvidedView.provider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_unknownObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WorkoutTimeProvidedView.provider.modify())()
{
  return nullsub_1;
}

uint64_t WorkoutTimeProvidedView.$provider.getter()
{
  return sub_24A77A588();
}

uint64_t WorkoutTimeProvidedView.paused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t WorkoutTimeProvidedView.paused.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*WorkoutTimeProvidedView.paused.modify())()
{
  return nullsub_1;
}

uint64_t WorkoutTimeProvidedView.init(provider:paused:)@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_24A77A57C();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = a1;
  return result;
}

uint64_t WorkoutTimeProvidedView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _OWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v105 = a2;
  v106 = sub_24A77A9F0();
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v103 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77AC24();
  v101 = *(_QWORD *)(v5 - 8);
  v102 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v100 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v99);
  v98 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_24A77A5DC();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v91 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_24A778818();
  v87 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v74 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v71 - v11;
  v76 = sub_24A77ABC4();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949348);
  MEMORY[0x24BDAC7A8](v73);
  v78 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v71 - v17;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA88);
  v83 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v79 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA90);
  MEMORY[0x24BDAC7A8](v81);
  v77 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CA98);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CAA0);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CAA8);
  v97 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v90 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CAB0);
  MEMORY[0x24BDAC7A8](v96);
  v94 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v2[1];
  v72 = *v2;
  v26 = *((_BYTE *)v2 + 16);
  v28 = *(_QWORD *)(a1 + 16);
  v27 = *(_QWORD *)(a1 + 24);
  swift_unknownObjectRetain();
  v86 = v12;
  sub_24A77949C();
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  v29 = v27;
  v80 = v27;
  sub_24A779490();
  swift_unknownObjectRelease();
  v30 = v87;
  v31 = v107;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v74, v12, v107);
  sub_24A77ABB8();
  v87 = *(_QWORD *)(v30 + 8);
  ((void (*)(char *, uint64_t))v87)(v12, v31);
  v32 = v75;
  v33 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v18, v14, v76);
  v18[*(int *)(v73 + 36)] = v26;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v33);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v28;
  *(_QWORD *)(v34 + 24) = v29;
  *(_QWORD *)(v34 + 32) = v72;
  *(_QWORD *)(v34 + 40) = v25;
  *(_BYTE *)(v34 + 48) = v26;
  sub_24A63CCC0((uint64_t)v18, v78, &qword_257949348);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_24A70B034;
  *(_QWORD *)(v35 + 24) = v34;
  sub_24A63CFF0(&qword_257949370, &qword_257949348, (uint64_t)&unk_24A785328);
  swift_unknownObjectRetain();
  v36 = v79;
  sub_24A77A468();
  sub_24A63CD04((uint64_t)v18, &qword_257949348);
  KeyPath = swift_getKeyPath();
  v38 = v83;
  v39 = (uint64_t)v77;
  v40 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v77, v36, v85);
  v41 = v39 + *(int *)(v81 + 36);
  *(_WORD *)v41 = 256;
  *(_QWORD *)(v41 + 8) = KeyPath;
  *(_BYTE *)(v41 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v40);
  v42 = swift_getKeyPath();
  v43 = v92;
  v44 = v91;
  v45 = v93;
  (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v91, *MEMORY[0x24BDED100], v93);
  v46 = (uint64_t)v82;
  v47 = (uint64_t *)&v82[*(int *)(v84 + 36)];
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947688);
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v47 + *(int *)(v48 + 28), v44, v45);
  *v47 = v42;
  sub_24A63CCC0(v39, v46, &qword_25794CA90);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  sub_24A63CD04(v39, &qword_25794CA90);
  v49 = v98;
  v50 = &v98[*(int *)(v99 + 20)];
  v51 = *MEMORY[0x24BDEEB68];
  v52 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
  __asm { FMOV            V0.2D, #5.0 }
  *v49 = _Q0;
  v58 = v89;
  v59 = (uint64_t)v88;
  v60 = (uint64_t)&v88[*(int *)(v89 + 36)];
  sub_24A655654((uint64_t)v49, v60);
  *(_BYTE *)(v60 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2579476B0) + 36)) = 0;
  sub_24A63CCC0(v46, v59, &qword_25794CA98);
  sub_24A655698((uint64_t)v49);
  sub_24A63CD04(v46, &qword_25794CA98);
  v61 = v100;
  sub_24A77AC0C();
  v62 = sub_24A70B080();
  v63 = v90;
  v64 = v58;
  sub_24A77B200();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v61, v102);
  sub_24A63CD04(v59, &qword_25794CAA0);
  sub_24A779808();
  swift_unknownObjectRetain();
  v65 = v86;
  sub_24A77880C();
  sub_24A779484();
  swift_unknownObjectRelease();
  ((void (*)(char *, uint64_t))v87)(v65, v107);
  v110 = sub_24A7797FC();
  v111 = v66;
  v108 = v64;
  v109 = v62;
  swift_getOpaqueTypeConformance2();
  sub_24A645928();
  v68 = (uint64_t)v94;
  v67 = v95;
  sub_24A77B1C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v63, v67);
  v69 = v103;
  sub_24A77A9E4();
  sub_24A77A5E8();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v69, v106);
  return sub_24A63CD04(v68, &qword_25794CAB0);
}

uint64_t sub_24A70AD14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  v2 = sub_24A778818();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  sub_24A77A45C();
  sub_24A779484();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24A779808();
  v11[0] = sub_24A7797F0();
  v11[1] = v6;
  sub_24A645928();
  result = sub_24A77AFD8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_24A70AE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV9WorkoutUI32WorkoutTimeProvidedView_Previews16MockTimeProvider_timelineStartDate;
  v2 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24A70AE88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCV9WorkoutUI32WorkoutTimeProvidedView_Previews16MockTimeProvider_timelineStartDate;
  v4 = sub_24A778818();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double sub_24A70AED0()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtCV9WorkoutUI32WorkoutTimeProvidedView_Previews16MockTimeProvider_elapsedTime);
}

uint64_t sub_24A70AEE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider();
  result = sub_24A77A36C();
  *a1 = result;
  return result;
}

uint64_t sub_24A70AF1C@<X0>(uint64_t a1@<X0>, void (*a2)(__int128 *__return_ptr, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  result = __swift_instantiateConcreteTypeFromMangledName(qword_25794CC60);
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    a2(&v12, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    v10 = v13;
    v11 = v14;
    *(_OWORD *)a3 = v12;
    *(_BYTE *)(a3 + 16) = v10;
    *(_QWORD *)(a3 + 24) = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A70B008()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_24A70B010()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24A70B034@<X0>(uint64_t a1@<X8>)
{
  return sub_24A70AD14(a1);
}

uint64_t sub_24A70B044()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A70B068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A70AF1C(a1, *(void (**)(__int128 *__return_ptr, char *))(v2 + 16), a2);
}

unint64_t sub_24A70B080()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CAB8;
  if (!qword_25794CAB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CAA0);
    v2[0] = sub_24A70B104();
    v2[1] = sub_24A63CFF0(&qword_2579476F0, &qword_2579476B0, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CAB8);
  }
  return result;
}

unint64_t sub_24A70B104()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CAC0;
  if (!qword_25794CAC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CA98);
    v2[0] = sub_24A70B188();
    v2[1] = sub_24A63CFF0(&qword_2579476E8, &qword_257947688, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CAC0);
  }
  return result;
}

unint64_t sub_24A70B188()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CAC8;
  if (!qword_25794CAC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CA90);
    v2[0] = sub_24A70B1F4();
    v2[1] = sub_24A63F8AC();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CAC8);
  }
  return result;
}

unint64_t sub_24A70B1F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794CAD0[0];
  if (!qword_25794CAD0[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CA88);
    v2 = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEBD40], v1, &v2);
    atomic_store(result, qword_25794CAD0);
  }
  return result;
}

uint64_t sub_24A70B250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A70B28C()
{
  return 16;
}

__n128 sub_24A70B298(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24A70B2A8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_24A70B2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_24A70B2E4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t sub_24A70B338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewedTrainingLoadDetailsAnalyticsEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewedTrainingLoadDetailsAnalyticsEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for WorkoutTimeProvidedView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WorkoutTimeProvidedView);
}

uint64_t sub_24A70B408()
{
  return type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider();
}

uint64_t type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider()
{
  uint64_t result;

  result = qword_25794CB80;
  if (!qword_25794CB80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A70B44C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778818();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_24A70B4C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_25794CC50;
  if (!qword_25794CC50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CAB0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CAA0);
    v2[3] = sub_24A70B080();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_24A63C880((unint64_t *)&qword_257947700, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CC50);
  }
  return result;
}

uint64_t sub_24A70B574()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_24A70B580()
{
  return sub_24A63C880(&qword_25794CC58, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutTimeProvidedView_Previews.MockTimeProvider, (uint64_t)&unk_24A785DF4);
}

uint64_t sub_24A70B5B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24A70B5E4()
{
  swift_getObjCClassMetadata();
  sub_24A70B608();
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_24A70B608()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

id sub_24A70B610(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  objc_class *v13;
  objc_super v15;

  v13 = (objc_class *)type metadata accessor for CustomLayerTypeView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x50), a7, a8);
  v15.receiver = v8;
  v15.super_class = v13;
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_24A70B68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  return sub_24A70B610(a5, a6, a7, a8, a1, a2, a3, a4);
}

id sub_24A70B6AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for CustomLayerTypeView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), a3, a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

id sub_24A70B714(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_24A70B6AC(v3, v4, v5, v6);
}

id sub_24A70B738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for CustomLayerTypeView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t type metadata accessor for CustomLayerTypeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CustomLayerTypeView);
}

BOOL static IntervalSecondaryMetric.DisplayType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t IntervalSecondaryMetric.DisplayType.hash(into:)()
{
  return sub_24A77C238();
}

uint64_t IntervalSecondaryMetric.DisplayType.hashValue.getter()
{
  sub_24A77C22C();
  sub_24A77C238();
  return sub_24A77C25C();
}

void static IntervalSecondaryMetric.displayType(for:activityMoveMode:)(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char v9;
  unsigned int v10;
  void *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_24A77A018();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_24A779298();
  v9 = 1;
  v10 = objc_msgSend((id)objc_opt_self(), sel_fiui_activitySupportsMetricType_activityType_activityMoveMode_, 1, v8, a1);

  v11 = (void *)sub_24A7792F8();
  v12 = objc_msgSend(v11, sel_goalTypeIdentifier);

  switch((unint64_t)v12)
  {
    case 0uLL:
    case 2uLL:
      if (v10)
        v9 = 0;
      else
        v9 = 2;
      break;
    case 1uLL:
      break;
    case 3uLL:
      v9 = v10 ^ 1;
      break;
    default:
      sub_24A779A3C();
      swift_retain_n();
      v13 = sub_24A77A00C();
      v14 = sub_24A77BC74();
      v15 = v14;
      if (os_log_type_enabled(v13, v14))
      {
        v25 = v15;
        v16 = (uint8_t *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        v27 = v24;
        v23 = v16;
        *(_DWORD *)v16 = 136315138;
        v22 = v16 + 4;
        v17 = (void *)sub_24A7792F8();
        objc_msgSend(v17, sel_goalTypeIdentifier);

        v18 = _sSo18_HKWorkoutGoalTypeV9WorkoutUIE23accessibilityIdentifierSSvg_0();
        v26 = sub_24A76BC40(v18, v19, &v27);
        sub_24A77BE00();
        v9 = 2;
        swift_release_n();
        swift_bridgeObjectRelease();
        v20 = v23;
        v21 = v24;
        swift_arrayDestroy();
        MEMORY[0x24BD1A2B4](v21, -1, -1);
        MEMORY[0x24BD1A2B4](v20, -1, -1);

      }
      else
      {

        v9 = 2;
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      break;
  }
  *a2 = v9;
}

uint64_t IntervalSecondaryMetric.init(intervalsMetricsPublisher:workoutStatePublisher:step:formattingManager:activityType:activityMoveMode:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  sub_24A77997C();
  sub_24A63C880(&qword_257946FB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5FA0], MEMORY[0x24BEC5F98]);
  swift_retain();
  v10 = sub_24A77A57C();
  v12 = v11;
  sub_24A779208();
  sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
  v13 = sub_24A77A57C();
  v15 = v14;
  result = swift_release();
  *a5 = v10;
  a5[1] = v12;
  a5[2] = v13;
  a5[3] = v15;
  a5[4] = a1;
  a5[5] = a2;
  a5[6] = a3;
  a5[7] = a4;
  return result;
}

void IntervalSecondaryMetric.body.getter(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  char v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  __int128 v73;

  v67 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579478E8);
  MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for WorkoutTimeView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v56 - v8;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CCE8);
  MEMORY[0x24BDAC7A8](v56);
  v59 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CCF0);
  MEMORY[0x24BDAC7A8](v62);
  v58 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v60 = (uint64_t)&v56 - v13;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CCF8);
  MEMORY[0x24BDAC7A8](v64);
  v66 = (uint64_t *)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CD00);
  MEMORY[0x24BDAC7A8](v61);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CD08);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void *)v1[5];
  v18 = (void *)v1[6];
  static IntervalSecondaryMetric.displayType(for:activityMoveMode:)(v1[7], &v68);
  if (v68)
  {
    if (v68 == 1)
    {
      swift_retain();
      v20 = (uint64_t)v57;
      sub_24A779958();
      swift_release();
      *(_QWORD *)v6 = swift_getKeyPath();
      v6[8] = 0;
      *((_QWORD *)v6 + 2) = swift_getKeyPath();
      v6[24] = 0;
      v21 = (uint64_t)&v6[v4[6]];
      v22 = sub_24A778818();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      v23 = v4[7];
      v6[v23] = 0;
      swift_retain();
      sub_24A65FA3C(v20, v21);
      v6[v23] = 0;
      v24 = (uint64_t *)&v6[v4[8]];
      sub_24A779208();
      sub_24A63C880(&qword_257946FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5750], MEMORY[0x24BEC5748]);
      v25 = sub_24A77A57C();
      v27 = v26;
      sub_24A63CD04(v20, &qword_2579478E8);
      *v24 = v25;
      v24[1] = v27;
      sub_24A685270((uint64_t)v6, (uint64_t)v9);
      v28 = sub_24A77B368();
      v29 = v59;
      sub_24A697D9C((uint64_t)v9, v59);
      *(_QWORD *)(v29 + *(int *)(v56 + 36)) = v28;
      sub_24A697DE0((uint64_t)v9);
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v30 = (id)qword_2544D6158;
      v31 = sub_24A77856C();
      v33 = v32;

      v34 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      v35 = MEMORY[0x24BD18928](v34);
      v36 = v58;
      sub_24A63CCC0(v29, v58, &qword_25794CCE8);
      v37 = (uint64_t *)(v36 + *(int *)(v62 + 36));
      *v37 = v31;
      v37[1] = v33;
      v37[2] = v35;
      v37[3] = 0x4008000000000000;
      sub_24A63CD04(v29, &qword_25794CCE8);
      v38 = v36;
      v39 = v60;
      sub_24A70C498(v38, v60);
      sub_24A63CCC0(v39, (uint64_t)v16, &qword_25794CCF0);
      swift_storeEnumTagMultiPayload();
      sub_24A65EB78();
      sub_24A70C354();
      v40 = (uint64_t)v63;
      sub_24A77AB28();
      sub_24A63CCC0(v40, (uint64_t)v66, &qword_25794CD08);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794CD10);
      sub_24A70C330();
      sub_24A70C3FC();
      sub_24A77AB28();
      sub_24A63CD04(v40, &qword_25794CD08);
      sub_24A63CD04(v39, &qword_25794CCF0);
    }
    else
    {
      sub_24A77B668();
      sub_24A77A4B0();
      v52 = v70;
      v53 = v71;
      v54 = v72;
      v55 = v66;
      *v66 = v69;
      *((_BYTE *)v55 + 8) = v52;
      v55[2] = v53;
      *((_BYTE *)v55 + 24) = v54;
      *((_OWORD *)v55 + 2) = v73;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794CD10);
      sub_24A70C330();
      sub_24A70C3FC();
      sub_24A77AB28();
    }
  }
  else
  {
    swift_retain();
    sub_24A779940();
    v42 = v41;
    swift_release();
    v43 = v19;
    v44 = FIUIDistanceTypeForActivityType();
    swift_retain();
    swift_retain();
    swift_retain();
    v45 = v43;
    v46 = v18;
    v47 = (void *)sub_24A7792F8();
    v48 = sub_24A77BD58();

    swift_release();
    swift_release();
    swift_release();

    *(_QWORD *)v16 = v42;
    v49 = 42;
    if ((v48 & 1) != 0)
      v49 = 0;
    *((_QWORD *)v16 + 1) = v45;
    *((_QWORD *)v16 + 2) = v44;
    *((_QWORD *)v16 + 3) = 0;
    v16[32] = 1;
    *((_QWORD *)v16 + 5) = v49;
    swift_storeEnumTagMultiPayload();
    sub_24A65EB78();
    sub_24A70C354();
    v50 = v45;
    v51 = (uint64_t)v63;
    sub_24A77AB28();
    sub_24A63CCC0(v51, (uint64_t)v66, &qword_25794CD08);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794CD10);
    sub_24A70C330();
    sub_24A70C3FC();
    sub_24A77AB28();
    sub_24A63CD04(v51, &qword_25794CD08);

  }
}

uint64_t sub_24A70C330()
{
  return sub_24A63F3CC(&qword_25794CD18, &qword_25794CD08, (uint64_t (*)(void))sub_24A65EB78, sub_24A70C354);
}

uint64_t sub_24A70C354()
{
  return sub_24A669438(&qword_25794CD20, &qword_25794CCF0, (uint64_t (*)(void))sub_24A70C378, (uint64_t (*)(void))sub_24A65F848);
}

unint64_t sub_24A70C378()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CD28;
  if (!qword_25794CD28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CCE8);
    v2[0] = sub_24A63C880(&qword_257947CC8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutTimeView, (uint64_t)&protocol conformance descriptor for WorkoutTimeView);
    v2[1] = sub_24A68CA6C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CD28);
  }
  return result;
}

unint64_t sub_24A70C3FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794CD30;
  if (!qword_25794CD30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794CD10);
    v2[0] = sub_24A669438(&qword_25794CD38, &qword_25794CD40, (uint64_t (*)(void))sub_24A6650A4, (uint64_t (*)(void))sub_24A6FA8C8);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794CD30);
  }
  return result;
}

uint64_t sub_24A70C498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24A70C4E4()
{
  unint64_t result;

  result = qword_25794CD48;
  if (!qword_25794CD48)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for IntervalSecondaryMetric.DisplayType, &type metadata for IntervalSecondaryMetric.DisplayType);
    atomic_store(result, (unint64_t *)&qword_25794CD48);
  }
  return result;
}

uint64_t sub_24A70C528()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeWithCopy for IntervalSecondaryMetric(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v7 = (void *)a2[6];
  v6 = a2[7];
  a1[6] = v7;
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  v8 = v5;
  v9 = v7;
  return a1;
}

_QWORD *assignWithCopy for IntervalSecondaryMetric(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = v4;
  v6 = v4;

  v7 = (void *)a2[6];
  v8 = (void *)a1[6];
  a1[6] = v7;
  v9 = v7;

  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IntervalSecondaryMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();

  v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntervalSecondaryMetric(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntervalSecondaryMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntervalSecondaryMetric()
{
  return &type metadata for IntervalSecondaryMetric;
}

uint64_t getEnumTagSinglePayload for IntervalSecondaryMetric.DisplayType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IntervalSecondaryMetric.DisplayType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24A70C864 + 4 * byte_24A785EB9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24A70C898 + 4 * byte_24A785EB4[v4]))();
}

uint64_t sub_24A70C898(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A70C8A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A70C8A8);
  return result;
}

uint64_t sub_24A70C8B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A70C8BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24A70C8C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A70C8C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntervalSecondaryMetric.DisplayType()
{
  return &type metadata for IntervalSecondaryMetric.DisplayType;
}

uint64_t sub_24A70C8E4()
{
  return sub_24A63F3CC(&qword_25794CD50, &qword_25794CD58, sub_24A70C330, (uint64_t (*)(void))sub_24A70C3FC);
}

double MetricPlatterConstants.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)a1 = v2;
  *(_OWORD *)(a1 + 8) = xmmword_24A781A30;
  *(_OWORD *)(a1 + 24) = xmmword_24A781A40;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = xmmword_24A781A50;
  return result;
}

double MetricPlatterConstants.metricMaxHeight.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double MetricPlatterConstants.standardMetricPlatterSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double MetricPlatterConstants.metricHorizontalInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double MetricPlatterConstants.metricsViewBottomPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double MetricPlatterConstants.metricGraphHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double MetricPlatterConstants.metricGraphTopInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double MetricPlatterConstants.heightOfChartLabels.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t getEnumTagSinglePayload for MetricPlatterConstants(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MetricPlatterConstants(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MetricPlatterConstants()
{
  return &type metadata for MetricPlatterConstants;
}

UIImage *sub_24A70CA2C(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void *v5;
  double v11;
  UIImage *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double Width;
  double v22;
  id v23;
  double v24;
  double v25;
  double Height;
  double v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  id v53;
  double v54;
  double v55;
  CGFloat v56;
  double v57;
  double v58;
  id v59;
  double v60;
  double v61;
  double v62;
  id v63;
  double v64;
  double v65;
  id v66;
  UIImage *v67;
  double v69;
  double v70;
  double v71;
  CGSize v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;

  v11 = 0.0;
  v80.origin.x = 0.0;
  v80.origin.y = 0.0;
  v80.size.width = 0.0;
  v80.size.height = 0.0;
  v73.origin.x = a2;
  v73.origin.y = a3;
  v73.size.width = a4;
  v73.size.height = a5;
  if (CGRectEqualToRect(v73, v80))
    return 0;
  v69 = a1;
  if (a2 != 0.0)
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v13, sel_scale);
    v15 = v14;

    v11 = CGRound(v15 * a2) / v15;
  }
  v16 = 0.0;
  v17 = 0.0;
  if (a3 != 0.0)
  {
    v18 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v18, sel_scale);
    v20 = v19;

    v17 = CGRound(v20 * a3) / v20;
  }
  v74.origin.x = a2;
  v74.origin.y = a3;
  v74.size.width = a4;
  v74.size.height = a5;
  Width = CGRectGetWidth(v74);
  if (Width != 0.0)
  {
    v22 = Width;
    v23 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v23, sel_scale);
    v25 = v24;

    v16 = CGRound(v22 * v25) / v25;
  }
  v75.origin.x = a2;
  v75.origin.y = a3;
  v75.size.width = a4;
  v75.size.height = a5;
  Height = CGRectGetHeight(v75);
  v27 = 0.0;
  v28 = 0.0;
  if (Height != 0.0)
  {
    v29 = Height;
    v30 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v30, sel_scale);
    v32 = v31;

    v28 = CGRound(v29 * v32) / v32;
  }
  objc_msgSend(v5, sel_size);
  if (v33 != 0.0)
  {
    v34 = v33;
    v35 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v35, sel_scale);
    v37 = v36;

    v27 = CGRound(v34 * v37) / v37;
  }
  objc_msgSend(v5, sel_size);
  v71 = 0.0;
  v39 = 0.0;
  if (v38 != 0.0)
  {
    v40 = v38;
    v41 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v41, sel_scale);
    v43 = v42;

    v39 = CGRound(v40 * v43) / v43;
  }
  v76.origin.x = v11;
  v76.origin.y = v17;
  v76.size.width = v16;
  v76.size.height = v28;
  v44 = CGRectGetWidth(v76) / v27;
  v77.origin.x = v11;
  v77.origin.y = v17;
  v77.size.width = v16;
  v77.size.height = v28;
  v45 = CGRectGetHeight(v77) / v39;
  if (v44 > v45)
    v46 = v44;
  else
    v46 = v45;
  v47 = v27 * v46;
  if (v47 != 0.0)
  {
    v48 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v48, sel_scale);
    v50 = v49;

    v71 = CGRound(v47 * v50) / v50;
  }
  v51 = v39 * v46;
  v70 = 0.0;
  v52 = 0.0;
  if (v51 != 0.0)
  {
    v53 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v53, sel_scale);
    v55 = v54;

    v52 = CGRound(v51 * v55) / v55;
  }
  v78.origin.x = v11;
  v78.origin.y = v17;
  v78.size.width = v16;
  v78.size.height = v28;
  v56 = CGRectGetWidth(v78) - v71;
  v79.origin.x = v11;
  v79.origin.y = v17;
  v79.size.width = v16;
  v79.size.height = v28;
  v57 = v11 + v56 * 0.5;
  v58 = v17 + (CGRectGetHeight(v79) - v52) * 0.5;
  if (v57 != 0.0)
  {
    v59 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v59, sel_scale);
    v61 = v60;

    v70 = CGRound(v57 * v61) / v61;
  }
  v62 = 0.0;
  if (v58 != 0.0)
  {
    v63 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v63, sel_scale);
    v65 = v64;

    v62 = CGRound(v58 * v65) / v65;
  }
  v72.width = v16;
  v72.height = v28;
  UIGraphicsBeginImageContextWithOptions(v72, 0, 0.0);
  v66 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, v11, v17, v16, v28, v69);
  objc_msgSend(v66, sel_addClip);
  objc_msgSend(v5, sel_drawInRect_, v70, v62, v71, v52);
  v12 = UIGraphicsGetImageFromCurrentImageContext();
  v67 = UIGraphicsGetImageFromCurrentImageContext();

  return v12;
}

double CGRound(double a1)
{
  return round(a1);
}

void sub_24A70CF70(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = sub_24A7794D8();
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - v11;
  v28 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v13 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v13 < *(_QWORD *)(a3 + 16))
    {
      v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v15 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v12, a3 + v14 + v15 * v13, v27, v10);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24A671CF0(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v28;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_24A671CF0(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        v24((char *)(v17 + v14 + v19 * v15), v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v13)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

void sub_24A70D180(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ViewModel;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v23 = *(_QWORD *)(ViewModel - 8);
  MEMORY[0x24BDAC7A8](ViewModel);
  v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  v24 = MEMORY[0x24BEE4AF8];
  v21 = *(_QWORD *)(a3 + 16);
  if (v21)
  {
    v12 = 0;
    v13 = MEMORY[0x24BEE4AF8];
    v19[1] = a2;
    v20 = a3;
    v19[0] = a1;
    while (v12 < *(_QWORD *)(a3 + 16))
    {
      v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v15 = *(_QWORD *)(v23 + 72);
      sub_24A719CEC(a3 + v14 + v15 * v12, (uint64_t)v11);
      v16 = a1(v11);
      if (v3)
      {
        sub_24A719D30((uint64_t)v11);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if ((v16 & 1) != 0)
      {
        sub_24A719D6C((uint64_t)v11, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_24A671DB4(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v24;
        v18 = *(_QWORD *)(v24 + 16);
        v17 = *(_QWORD *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_24A671DB4(v17 > 1, v18 + 1, 1);
          v13 = v24;
        }
        *(_QWORD *)(v13 + 16) = v18 + 1;
        sub_24A719D6C(v22, v13 + v14 + v18 * v15);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_24A719D30((uint64_t)v11);
      }
      if (v21 == ++v12)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24A70D370@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_24A70D3C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A778854();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_24A63CD04(a1, &qword_257948898);
    v14 = sub_24A64E99C(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v3;
      v23 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_24A6DBA94();
        v18 = v23;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, v9);
      sub_24A7280C0(v16, v18);
      *v3 = v18;
      swift_bridgeObjectRelease();
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_24A63CD04((uint64_t)v8, &qword_257948898);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    sub_24A6510B8((uint64_t)v13, a2, v20);
    *v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24A70D59C(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_24A77C028();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_24A77C028();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x24BD19594](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_24A719074(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_24A77C028();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_24A77BB24();
  }
  __break(1u);
  return result;
}

uint64_t sub_24A70D754(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_24A64DA04(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_24A779D90();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  char *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;

  v53 = a2;
  v54 = a3;
  v51 = a4;
  v52 = a1;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CD68);
  MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v41 - v6;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v41 - v9;
  v10 = sub_24A778968();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24A778818();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_24A77B80C();
  v19 = *(_QWORD **)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v41 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v17, v52, v14, v23);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v52 = v10;
  v26(v13, v54, v10);
  v46 = v13;
  sub_24A77B7F4();
  sub_24A77B7E8();
  sub_24A63C880(&qword_25794BB20, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  v27 = v21;
  v28 = v25;
  result = sub_24A77B95C();
  if ((result & 1) != 0)
  {
    v30 = v50;
    v31 = *(int *)(v50 + 48);
    v32 = v45;
    v53 = v26;
    v33 = &v45[v31];
    v34 = (void (*)(char *, char *, uint64_t))v19[2];
    v43 = v27;
    v34(v45, v27, v18);
    v42 = v28;
    v34(v33, v28, v18);
    v35 = v48;
    v36 = &v48[*(int *)(v30 + 48)];
    v34(v48, v32, v18);
    v34(v36, v33, v18);
    v37 = (void (*)(char *, char *, uint64_t))v19[4];
    v38 = (uint64_t)v47;
    v37(v47, v35, v18);
    v39 = (void (*)(char *, uint64_t))v19[1];
    v39(v36, v18);
    v40 = &v35[*(int *)(v30 + 48)];
    v37(v35, v32, v18);
    v37(v40, v33, v18);
    v37((char *)(v38 + *(int *)(v49 + 36)), v40, v18);
    v39(v35, v18);
    sub_24A70DC44(v38, v44);
    v53(v46, v54, v52);
    sub_24A779CB8();
    v39(v43, v18);
    return ((uint64_t (*)(char *, uint64_t))v39)(v42, v18);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A70DC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TrainingLoadViewModelProviderOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

WorkoutUI::TrainingLoadViewModelProviderOptions __swiftcall TrainingLoadViewModelProviderOptions.init(rawValue:)(WorkoutUI::TrainingLoadViewModelProviderOptions rawValue)
{
  WorkoutUI::TrainingLoadViewModelProviderOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static TrainingLoadViewModelProviderOptions.workoutLoad.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static TrainingLoadViewModelProviderOptions.workoutLoadByActivity.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static TrainingLoadViewModelProviderOptions.allDayLoad.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void sub_24A70DCC0()
{
  qword_25794CD60 = 7;
}

uint64_t static TrainingLoadViewModelProviderOptions.defaultOptions.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_2579469C8 != -1)
    result = swift_once();
  *a1 = qword_25794CD60;
  return result;
}

uint64_t sub_24A70DD48(char a1)
{
  return sub_24A70DE00(a1, (uint64_t)&unk_251BFB9F8, (uint64_t)sub_24A71A2F4, (uint64_t)&block_descriptor_46_0);
}

uint64_t sub_24A70DD64(uint64_t a1, char a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 24) = a2 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_24A70DDB8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_24A70DDE4(char a1)
{
  return sub_24A70DE00(a1, (uint64_t)&unk_251BFB9A8, (uint64_t)sub_24A71A2E8, (uint64_t)&block_descriptor_39);
}

uint64_t sub_24A70DE00(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v8 = sub_24A77B710();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_24A77B728();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v4 + 16);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = a4;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_24A77B71C();
  v21 = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A63CFF0((unint64_t *)&qword_2579491D0, &qword_2579491C8, MEMORY[0x24BEE12C8]);
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_24A70E018(uint64_t a1, char a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 25) = a2 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_24A70E06C(char a1)
{
  return sub_24A70DE00(a1, (uint64_t)&unk_251BFB958, (uint64_t)sub_24A71A2DC, (uint64_t)&block_descriptor_32);
}

uint64_t sub_24A70E088(uint64_t a1, char a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 26) = a2 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_24A70E0DC(uint64_t result)
{
  _QWORD *v1;

  v1 = (_QWORD *)result;
  if (*(_QWORD *)(result + 32))
  {
    swift_retain();
    sub_24A77BB9C();
    result = swift_release();
  }
  if (v1[5])
  {
    swift_retain();
    sub_24A77BB9C();
    result = swift_release();
  }
  if (v1[6])
  {
    swift_retain();
    sub_24A77BB9C();
    result = swift_release();
  }
  if (v1[8])
  {
    swift_retain();
    sub_24A77BB9C();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A70E1D4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24A70E1F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_24A70E214(uint64_t a1, char a2, uint64_t (*a3)(uint64_t (*)(), uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t (*v23)(uint64_t (*)(), uint64_t);

  v22[1] = a4;
  v23 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A778854();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v22 - v14;
  sub_24A778848();
  v16 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v16(v8, v15, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  swift_beginAccess();
  sub_24A70D3C4((uint64_t)v8, a2);
  swift_endAccess();
  if (a2)
  {
    if (a2 == 1)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        swift_retain();
        sub_24A77BB9C();
        swift_release();
      }
      *(_BYTE *)(a1 + 26) = 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 40))
      {
        swift_retain();
        sub_24A77BB9C();
        swift_release();
      }
      *(_BYTE *)(a1 + 25) = 0;
    }
  }
  else
  {
    if (*(_QWORD *)(a1 + 32))
    {
      swift_retain();
      sub_24A77BB9C();
      swift_release();
    }
    *(_BYTE *)(a1 + 24) = 0;
  }
  v17 = swift_allocObject();
  swift_weakInit();
  v16(v12, v15, v9);
  v18 = (*(unsigned __int8 *)(v10 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  *(_BYTE *)(v19 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v18, v12, v9);
  swift_retain();
  v20 = v23(sub_24A71A444, v19);
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  swift_release();
  if (a2)
  {
    if (a2 == 1)
      *(_QWORD *)(a1 + 48) = v20;
    else
      *(_QWORD *)(a1 + 40) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v20;
  }
  return swift_release();
}

uint64_t sub_24A70E504(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v22 = a3;
  v23 = a2;
  v3 = sub_24A77B710();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A77B728();
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A778854();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v21 = *(id *)(result + 16);
    swift_release();
    v15 = swift_allocObject();
    v20 = v4;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v10);
    v16 = (*(unsigned __int8 *)(v11 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v15;
    *(_BYTE *)(v17 + 24) = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, v13, v10);
    aBlock[4] = sub_24A71A4C8;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24A70DDB8;
    aBlock[3] = &block_descriptor_96;
    v18 = _Block_copy(aBlock);
    swift_retain();
    sub_24A77B71C();
    v26 = MEMORY[0x24BEE4AF8];
    sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
    sub_24A63CFF0((unint64_t *)&qword_2579491D0, &qword_2579491C8, MEMORY[0x24BEE12C8]);
    sub_24A77BEB4();
    v19 = v21;
    MEMORY[0x24BD1930C](0, v9, v6, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A70E804(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a2;
  v4 = sub_24A77A018();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A778854();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BC18);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v39 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v44 = (uint64_t)&v39 - v19;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v21 = result;
  swift_beginAccess();
  v22 = *(_QWORD *)(v21 + 56);
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_24A64E99C(v43), (v24 & 1) != 0))
  {
    v25 = v44;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v44, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v7 + 72) * v23, v6);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v26(v25, 0, 1, v6);
  }
  else
  {
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v25 = v44;
    v26(v44, 1, 1, v6);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v17, a3, v6);
  v26((uint64_t)v17, 0, 1, v6);
  v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_24A63CCC0((uint64_t)v17, (uint64_t)v11, &qword_257948898);
  sub_24A63CCC0(v25, v27, &qword_257948898);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v28((uint64_t)v11, 1, v6) == 1)
  {
    sub_24A63CD04((uint64_t)v17, &qword_257948898);
    if (v28(v27, 1, v6) == 1)
    {
      sub_24A63CD04((uint64_t)v11, &qword_257948898);
LABEL_13:
      sub_24A63CD04(v25, &qword_257948898);
      if ((_BYTE)v43)
      {
        if (v43 == 1)
          *(_BYTE *)(v21 + 26) = 1;
        else
          *(_BYTE *)(v21 + 25) = 1;
      }
      else
      {
        *(_BYTE *)(v21 + 24) = 1;
      }
      return swift_release();
    }
    goto LABEL_11;
  }
  sub_24A63CCC0((uint64_t)v11, (uint64_t)v14, &qword_257948898);
  if (v28(v27, 1, v6) == 1)
  {
    sub_24A63CD04((uint64_t)v17, &qword_257948898);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_11:
    sub_24A63CD04((uint64_t)v11, &qword_25794BC18);
    goto LABEL_16;
  }
  v29 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v39, v27, v6);
  sub_24A63C880(&qword_257947498, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v30 = sub_24A77B974();
  v31 = *(void (**)(char *, uint64_t))(v7 + 8);
  v31(v29, v6);
  sub_24A63CD04((uint64_t)v17, &qword_257948898);
  v31(v14, v6);
  v25 = v44;
  sub_24A63CD04((uint64_t)v11, &qword_257948898);
  if ((v30 & 1) != 0)
    goto LABEL_13;
LABEL_16:
  v32 = v40;
  sub_24A779A18();
  v33 = sub_24A77A00C();
  v34 = sub_24A77BC74();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v46 = v36;
    *(_DWORD *)v35 = 136315138;
    LOBYTE(v45) = v43;
    v37 = sub_24A77B9E0();
    v45 = sub_24A76BC40(v37, v38, &v46);
    sub_24A77BE00();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A635000, v33, v34, "Stale task %s requested finish, but a newer task is running. Ignoring.", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v36, -1, -1);
    MEMORY[0x24BD1A2B4](v35, -1, -1);
  }

  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
  return sub_24A63CD04(v44, &qword_257948898);
}

uint64_t sub_24A70ED44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_24A77A018();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A18();
  v6 = sub_24A77A00C();
  v7 = sub_24A77BC74();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_24A635000, v6, v7, "Canceling our model queries in deinit of the TaskHolder.", v8, 2u);
    MEMORY[0x24BD1A2B4](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = *(NSObject **)(v1 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_24A719DC8;
  *(_QWORD *)(v10 + 24) = v1;
  aBlock[4] = sub_24A71AA10;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70E1F4;
  aBlock[3] = &block_descriptor_54;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v11);
  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  result = swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return v1;
  }
  return result;
}

uint64_t sub_24A70EF44()
{
  sub_24A70ED44();
  return swift_deallocClassInstance();
}

uint64_t sub_24A70EF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_24A77BCD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77BCBC();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_24A77B728();
  MEMORY[0x24BDAC7A8](v7);
  v10[0] = sub_24A64F254(0, (unint64_t *)&qword_2579491B8);
  sub_24A77B71C();
  v10[1] = MEMORY[0x24BEE4AF8];
  sub_24A63C880(&qword_25794D2D8, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2E0);
  sub_24A63CFF0(&qword_25794D2E8, &qword_25794D2E0, MEMORY[0x24BEE12C8]);
  sub_24A77BEB4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5750], v1);
  *(_QWORD *)(v0 + 16) = sub_24A77BD04();
  *(_WORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 26) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  v8 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 64) = 0;
  return v0;
}

uint64_t sub_24A70F15C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_24A70F1E0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 24);
  return result;
}

uint64_t sub_24A70F26C()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  return swift_release();
}

uint64_t sub_24A70F314(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t KeyPath;
  _QWORD v18[2];
  char *v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_24A779CF4();
  v5 = *(_QWORD **)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - v9;
  v11 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  v12 = (void (*)(char *, uint64_t, uint64_t))v5[2];
  v12(v10, v11, v4);
  swift_beginAccess();
  v13 = (void (*)(uint64_t, char *, uint64_t))v5[3];
  v19 = a1;
  v13(v11, a1, v4);
  swift_endAccess();
  swift_getKeyPath();
  v14 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  v20 = v2;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  v18[1] = v14;
  sub_24A7789BC();
  swift_release();
  v12(v7, v11, v4);
  sub_24A63C880(&qword_25794D278, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FCF0], MEMORY[0x24BE3FD10]);
  LOBYTE(v14) = sub_24A77B974();
  v15 = (void (*)(char *, uint64_t))v5[1];
  v15(v7, v4);
  if ((v14 & 1) == 0)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v18[-2] = v2;
    LOBYTE(v18[-1]) = 1;
    v20 = v2;
    sub_24A7789B0();
    swift_release();
    sub_24A714B94(0);
  }
  v15(v19, v4);
  return ((uint64_t (*)(char *, uint64_t))v15)(v10, v4);
}

void (*sub_24A70F56C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_24A779CF4();
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[6] = malloc(v6);
  v7 = malloc(v6);
  v3[7] = v7;
  v8 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  v9 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 16);
  v3[8] = v9;
  v9(v7, v8, v4);
  return sub_24A70F628;
}

void sub_24A70F628(uint64_t *a1, char a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(char **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(char **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(char *, char *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_24A70F314(v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v6);
  }
  else
  {
    v4 = *(char **)(v2 + 48);
    v3 = *(char **)(v2 + 56);
    sub_24A70F314(v3);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t sub_24A70F6B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  v5 = sub_24A779CF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_24A70F778(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_24A779CF4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  swift_getKeyPath();
  v12 = v9;
  v13 = v8;
  v14 = v9;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_24A70F884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  v4 = sub_24A779CF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TrainingLoadViewModelProvider()
{
  uint64_t result;

  result = qword_25794CE18;
  if (!qword_25794CE18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A70F98C(uint64_t a1)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  swift_release();
  v2 = sub_24A779CF4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_24A70FA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_24A779CF4();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v7 + 16))(v6, a2, v4);
  return sub_24A70F314(v6);
}

uint64_t sub_24A70FAD4()
{
  uint64_t v0;

  return sub_24A70FA4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*sub_24A70FAEC(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_24A7789D4();
  swift_release();
  v4[7] = sub_24A70F56C(v4);
  return sub_24A70FBD4;
}

void sub_24A70FBD4(_QWORD *a1)
{
  sub_24A710930(a1);
}

uint64_t sub_24A70FBE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  v2 = v1;
  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  *v4 = a1;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v5 = *(void (**)(uint64_t))(v2
                                      + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  swift_getKeyPath();
  swift_retain();
  sub_24A7789BC();
  swift_release();
  v6 = swift_bridgeObjectRetain();
  v5(v6);
  swift_bridgeObjectRelease();
  return swift_release();
}

void (*sub_24A70FD0C(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_24A70FD64;
}

void sub_24A70FD64(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    swift_getKeyPath();
    *v3 = v4;
    sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
    sub_24A7789BC();
    swift_release();
    v5 = *(void (**)(uint64_t))(v4
                                        + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
    swift_getKeyPath();
    *v3 = v4;
    swift_retain();
    sub_24A7789BC();
    swift_release();
    v6 = swift_bridgeObjectRetain();
    v5(v6);
    swift_release();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

uint64_t sub_24A70FE70@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A70FF20()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  swift_bridgeObjectRetain();
  sub_24A7789B0();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24A70FFD8()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A710088()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24A710134()
{
  return sub_24A71A9E0();
}

void (*sub_24A710148(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_24A7789D4();
  swift_release();
  v4[7] = sub_24A70FD0C(v4);
  return sub_24A710230;
}

void sub_24A710230(_QWORD *a1)
{
  sub_24A710930(a1);
}

uint64_t (*sub_24A71023C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_24A710280@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24A710568(a1, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange, a2);
}

uint64_t sub_24A710294()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  return swift_release();
}

uint64_t sub_24A71033C()
{
  return sub_24A7106D4((uint64_t)&unk_24A7860B0, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange);
}

uint64_t sub_24A710358()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  return swift_release();
}

uint64_t sub_24A710400()
{
  return sub_24A71A988(&OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange);
}

void (*sub_24A71041C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_24A7789D4();
  swift_release();
  v4[7] = sub_24A71023C();
  return sub_24A710504;
}

void sub_24A710504(_QWORD *a1)
{
  sub_24A710930(a1);
}

uint64_t (*sub_24A710510())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24A710554@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24A710568(a1, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime, a2);
}

uint64_t sub_24A710568@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v6 = (_BYTE *)(v5 + *a2);
  result = swift_beginAccess();
  *a3 = *v6;
  return result;
}

uint64_t sub_24A710618()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  return swift_release();
}

uint64_t sub_24A7106C0()
{
  return sub_24A7106D4((uint64_t)&unk_24A7860D8, &OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime);
}

uint64_t sub_24A7106D4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned __int8 *v4;

  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v4 = (unsigned __int8 *)(v2 + *a2);
  swift_beginAccess();
  return *v4;
}

uint64_t sub_24A710778()
{
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  return swift_release();
}

uint64_t sub_24A710820()
{
  return sub_24A71A988(&OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime);
}

void (*sub_24A71083C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_24A7789D4();
  swift_release();
  v4[7] = sub_24A710510();
  return sub_24A710924;
}

void sub_24A710924(_QWORD *a1)
{
  sub_24A710930(a1);
}

void sub_24A710930(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_24A7789C8();
  swift_release();
  free(v1);
}

uint64_t TrainingLoadViewModelProvider.__allocating_init(dayRange:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_24A779CF4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  if (qword_2579469C8 != -1)
    swift_once();
  v12 = qword_25794CD60;
  v9 = _s9WorkoutUI29TrainingLoadViewModelProviderC8dayRange11healthStore7optionsAC13HealthBalance012GregorianDayI0V_So08HKHealthK0CAA0cdefG7OptionsVtcfC_0((uint64_t)v8, a2, &v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v9;
}

uint64_t sub_24A710A84@<X0>(uint64_t a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[2];

  v15[0] = a3;
  v15[1] = a1;
  v4 = sub_24A779D0C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A778968();
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_24A779DFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779CC4();
  sub_24A779CDC();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *a2, v4);
  sub_24A779DF0();
  sub_24A779DE4();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_24A710C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v13[1] = a2;
  v2 = sub_24A779D0C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_24A778968();
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_24A779DFC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779CC4();
  sub_24A779CDC();
  *v5 = 13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE3FD28], v2);
  sub_24A779DF0();
  sub_24A779DE4();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24A710D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v37 = sub_24A779CF4();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v7 = *(_QWORD *)(ViewModel - 8);
  MEMORY[0x24BDAC7A8](ViewModel);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A779D0C();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)&v32 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6278);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A71110C();
  swift_getKeyPath();
  v43 = v2;
  v32 = sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v33 = v2;
  v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  v18 = *v17;
  v19 = *(_QWORD *)(*v17 + 16);
  v41 = a2;
  if (v19)
  {
    v20 = v18 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v21 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24A719CEC(v20, (uint64_t)v9);
      if ((sub_24A779D00() & 1) != 0)
        break;
      sub_24A719D30((uint64_t)v9);
      v20 += v21;
      if (!--v19)
        goto LABEL_7;
    }
    sub_24A719D6C((uint64_t)v9, (uint64_t)v16);
    v22 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    v22 = 1;
  }
  v24 = v39;
  v23 = v40;
  v25 = v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v16, v22, 1, ViewModel);
  swift_bridgeObjectRelease();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v26(v25, a1, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, ViewModel) == 1)
  {
    v27 = (uint64_t)v34;
    v26(v34, (uint64_t)v25, v23);
    swift_getKeyPath();
    v28 = v33;
    v42 = v33;
    sub_24A7789BC();
    swift_release();
    v29 = v28 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    v30 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v36, v29, v37);
    TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v27, v30, MEMORY[0x24BEE4AF8], v41);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
    return sub_24A63CD04((uint64_t)v16, &qword_2544D6278);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
    return sub_24A719D6C((uint64_t)v16, v41);
  }
}

uint64_t sub_24A71110C()
{
  uint64_t result;
  char v1;
  char v2;
  char v3;

  sub_24A77BCEC();
  if (v3 == 1)
    sub_24A7111E0();
  sub_24A77BCEC();
  if (v2 == 1)
    sub_24A7124D4();
  result = sub_24A77BCEC();
  if (v1 == 1)
    return sub_24A713820(0);
  return result;
}

uint64_t sub_24A7111E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, char *, int64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  char *SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0;
  void (*v46)(uint64_t *, uint64_t);
  void (*v47)(unint64_t, char *, int64_t);
  uint64_t v48;
  uint64_t result;
  void (*v50)(uint64_t *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *);
  void (*v54)(uint64_t *, uint64_t);
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _BYTE v68[12];
  unsigned int v69;
  void (*v70)(uint64_t, _QWORD, uint64_t);
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(unint64_t, char *, int64_t);
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t aBlock[10];

  v1 = (uint64_t)v0;
  v2 = *v0;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  v3 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v72 = &v68[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v68[-v6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v8);
  v79 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_24A779E2C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (void (*)(unint64_t, char *, int64_t))&v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = sub_24A779D0C();
  v83 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v84 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = sub_24A779CF4();
  v82 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v85 = (uint64_t *)&v68[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_24A77A018();
  v80 = *(_QWORD *)(v16 - 8);
  v81 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v68[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A779A18();
  v19 = sub_24A77A00C();
  v20 = sub_24A77BC74();
  v21 = os_log_type_enabled(v19, v20);
  v76 = v3;
  v74 = v7;
  v77 = v13;
  v78 = v11;
  v73 = v2;
  if (v21)
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = sub_24A77C2EC();
    aBlock[6] = sub_24A76BC40(v24, v25, aBlock);
    sub_24A77BE00();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A635000, v19, v20, "[%{public}s] Spinning up startWorkoutsQuery", v22, 0xCu);
    swift_arrayDestroy();
    v26 = v23;
    v13 = v77;
    MEMORY[0x24BD1A2B4](v26, -1, -1);
    v27 = v22;
    v11 = v78;
    MEMORY[0x24BD1A2B4](v27, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v18, v81);
  swift_getKeyPath();
  aBlock[0] = v1;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v28 = *(_BYTE *)(v1 + 24);
  swift_getKeyPath();
  v29 = v86;
  if ((v28 & 1) != 0)
  {
    aBlock[0] = v1;
    sub_24A7789BC();
    swift_release();
    v30 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    v31 = v82;
    v32 = v85;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v82 + 16))(v85, v30, v29);
    v33 = (uint64_t)v79;
    sub_24A779CC4();
    (*(void (**)(uint64_t *, uint64_t))(v31 + 8))(v32, v29);
    sub_24A779E20();
    sub_24A63CD04(v33, &qword_257947EE0);
    v35 = v83;
    v34 = (uint64_t)v84;
    v36 = v87;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v83 + 104))(v84, *MEMORY[0x24BE3FD40], v87);
    sub_24A7158A8(v13, v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    (*(void (**)(void (*)(unint64_t, char *, int64_t), uint64_t))(v11 + 8))(v13, v10);
    sub_24A70DD48(0);
    return 1;
  }
  v71 = v10;
  aBlock[0] = v1;
  sub_24A7789BC();
  swift_release();
  v37 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  v38 = v82;
  v39 = v85;
  v80 = *(_QWORD *)(v82 + 16);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v80)(v85, v37, v29);
  v40 = *MEMORY[0x24BE3FD40];
  v81 = v1;
  v41 = v83;
  v42 = (uint64_t)v84;
  v43 = *(void (**)(_QWORD))(v83 + 104);
  v69 = v40;
  v44 = v87;
  v70 = (void (*)(uint64_t, _QWORD, uint64_t))v43;
  v43(v84);
  SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0 = _s9WorkoutUI13DemoUtilitiesV33fetchTrainingLoadSampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0(v39, v42);
  v83 = *(_QWORD *)(v41 + 8);
  ((void (*)(uint64_t, uint64_t))v83)(v42, v44);
  v46 = *(void (**)(uint64_t *, uint64_t))(v38 + 8);
  v46(v39, v29);
  if (SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0)
  {
    swift_getKeyPath();
    aBlock[0] = v81;
    sub_24A7789BC();
    swift_release();
    ((void (*)(uint64_t *, uint64_t, uint64_t))v80)(v39, v37, v29);
    sub_24A779CC4();
    v46(v39, v29);
    v47 = v77;
    sub_24A779E14();
    v48 = v87;
    v70(v42, v69, v87);
    sub_24A7158A8(v47, v42);
    ((void (*)(uint64_t, uint64_t))v83)(v42, v48);
    sub_24A70DD48(0);
    (*(void (**)(void (*)(unint64_t, char *, int64_t), uint64_t))(v78 + 8))(v47, v71);
    return 1;
  }
  v50 = (void (*)(uint64_t *, uint64_t, uint64_t))v80;
  v51 = v81;
  v52 = v37;
  v53 = *(void (**)(uint64_t *))(v81
                                         + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadSummaryCollectionSequence);
  if (v53)
  {
    swift_getKeyPath();
    v54 = v46;
    aBlock[0] = v51;
    sub_24A7789BC();
    swift_release();
    v55 = v85;
    v56 = v52;
    v57 = v86;
    v50(v85, v56, v86);
    v58 = v72;
    v53(v55);
    v54(v55, v57);
    v59 = v74;
    v60 = v75;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 32))(v74, v58, v75);
    v61 = *(_QWORD *)(v51 + 16);
    v62 = swift_allocObject();
    v63 = swift_weakInit();
    MEMORY[0x24BDAC7A8](v63);
    *(_QWORD *)&v68[-32] = v62;
    *(_QWORD *)&v68[-24] = v59;
    *(_QWORD *)&v68[-16] = v73;
    v64 = *(NSObject **)(v61 + 16);
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v61;
    *(_BYTE *)(v65 + 24) = 0;
    *(_QWORD *)(v65 + 32) = sub_24A71A730;
    *(_QWORD *)(v65 + 40) = &v68[-48];
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = sub_24A71AA14;
    *(_QWORD *)(v66 + 24) = v65;
    aBlock[4] = (uint64_t)sub_24A71AA10;
    aBlock[5] = v66;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24A70E1F4;
    aBlock[3] = (uint64_t)&block_descriptor_132;
    v67 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v64, v67);
    _Block_release(v67);
    LOBYTE(v61) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v61 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v59, v60);
      swift_release();
      return 0;
    }
  }
  else
  {
    sub_24A70DD48(1);
    return 2;
  }
  return result;
}

uint64_t sub_24A711A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = sub_24A779D0C();
  v8[14] = v9;
  v8[15] = *(_QWORD *)(v9 - 8);
  v8[16] = swift_task_alloc();
  v10 = sub_24A77A018();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v11 = sub_24A779E2C();
  v8[21] = v11;
  v8[22] = *(_QWORD *)(v11 - 8);
  v8[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2A8);
  v8[24] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2B0);
  v8[25] = v12;
  v8[26] = *(_QWORD *)(v12 - 8);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A711B7C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  sub_24A77BBA8();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  *v1 = v0;
  v1[1] = sub_24A711C28;
  return sub_24A77BBB4();
}

uint64_t sub_24A711C28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_DWORD *)(v2 + 256) = *MEMORY[0x24BE3FD40];
  return swift_task_switch();
}

uint64_t sub_24A711C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t Strong;
  _QWORD *v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    (*(void (**)(uint64_t))(v0 + 88))(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 184), v1, v2);
    sub_24A779A18();
    v6 = sub_24A77A00C();
    v7 = sub_24A77BC74();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    if (v8)
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = sub_24A77C2EC();
      *(_QWORD *)(v12 + 4) = sub_24A76BC40(v14, v15, &v18);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A635000, v6, v7, "[%{public}s] Received Workout load day summaries", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v13, -1, -1);
      MEMORY[0x24BD1A2B4](v12, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 232) = Strong;
    if (Strong)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 104))(*(_QWORD *)(v0 + 128), *(unsigned int *)(v0 + 256), *(_QWORD *)(v0 + 112));
      sub_24A77BB78();
      *(_QWORD *)(v0 + 240) = sub_24A77BB6C();
      sub_24A77BB54();
      return swift_task_switch();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 248) = v17;
      *v17 = v0;
      v17[1] = sub_24A71205C;
      return sub_24A77BBB4();
    }
  }
}

uint64_t sub_24A711F6C()
{
  _QWORD *v0;
  void (*v1)(unint64_t, char *, int64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void (*)(unint64_t, char *, int64_t))v0[23];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  swift_release();
  sub_24A7158A8(v1, v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_24A711FE8()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[23], v0[21]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[31] = v1;
  *v1 = v0;
  v1[1] = sub_24A71205C;
  return sub_24A77BBB4();
}

uint64_t sub_24A71205C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A7120C0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(void **)(v0 + 40);
  sub_24A779A18();
  v2 = v1;
  v3 = v1;
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 152);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_24A77C2EC();
    *(_QWORD *)(v0 + 48) = sub_24A76BC40(v9, v10, &v21);
    sub_24A77BE00();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 56) = v1;
    v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
    v12 = sub_24A77B9E0();
    *(_QWORD *)(v0 + 64) = sub_24A76BC40(v12, v13, &v21);
    sub_24A77BE00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A635000, v4, v5, "[%{public}s] Received error for Workout load summary query: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v8, -1, -1);
    MEMORY[0x24BD1A2B4](v7, -1, -1);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v20, v19);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 136);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  (*(void (**)(uint64_t))(v0 + 88))(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A71233C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A63CCC0(a1, (uint64_t)v8, &qword_25794C6E0);
  v9 = sub_24A77BB90();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24A63CD04((uint64_t)v8, &qword_25794C6E0);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_24A77BB54();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24A77BB84();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_24A7124D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, char *, int64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  char *SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0;
  void (*v46)(uint64_t *, uint64_t);
  void (*v47)(unint64_t, char *, int64_t);
  uint64_t v48;
  uint64_t result;
  void (*v50)(uint64_t *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *);
  void (*v54)(uint64_t *, uint64_t);
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _BYTE v68[12];
  unsigned int v69;
  void (*v70)(uint64_t, _QWORD, uint64_t);
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(unint64_t, char *, int64_t);
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t aBlock[10];

  v1 = (uint64_t)v0;
  v2 = *v0;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  v3 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v72 = &v68[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v68[-v6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v8);
  v79 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_24A779E2C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (void (*)(unint64_t, char *, int64_t))&v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = sub_24A779D0C();
  v83 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v84 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = sub_24A779CF4();
  v82 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v85 = (uint64_t *)&v68[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_24A77A018();
  v80 = *(_QWORD *)(v16 - 8);
  v81 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v68[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A779A18();
  v19 = sub_24A77A00C();
  v20 = sub_24A77BC74();
  v21 = os_log_type_enabled(v19, v20);
  v76 = v3;
  v74 = v7;
  v77 = v13;
  v78 = v11;
  v73 = v2;
  if (v21)
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = sub_24A77C2EC();
    aBlock[6] = sub_24A76BC40(v24, v25, aBlock);
    sub_24A77BE00();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A635000, v19, v20, "[%{public}s] Spinning up allDayQuery", v22, 0xCu);
    swift_arrayDestroy();
    v26 = v23;
    v13 = v77;
    MEMORY[0x24BD1A2B4](v26, -1, -1);
    v27 = v22;
    v11 = v78;
    MEMORY[0x24BD1A2B4](v27, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v18, v81);
  swift_getKeyPath();
  aBlock[0] = v1;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v28 = *(_BYTE *)(v1 + 24);
  swift_getKeyPath();
  v29 = v86;
  if ((v28 & 1) != 0)
  {
    aBlock[0] = v1;
    sub_24A7789BC();
    swift_release();
    v30 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    v31 = v82;
    v32 = v85;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v82 + 16))(v85, v30, v29);
    v33 = (uint64_t)v79;
    sub_24A779CC4();
    (*(void (**)(uint64_t *, uint64_t))(v31 + 8))(v32, v29);
    sub_24A779E20();
    sub_24A63CD04(v33, &qword_257947EE0);
    v35 = v83;
    v34 = (uint64_t)v84;
    v36 = v87;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v83 + 104))(v84, *MEMORY[0x24BE3FD38], v87);
    sub_24A7158A8(v13, v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    (*(void (**)(void (*)(unint64_t, char *, int64_t), uint64_t))(v11 + 8))(v13, v10);
    sub_24A70E06C(0);
    return 1;
  }
  v71 = v10;
  aBlock[0] = v1;
  sub_24A7789BC();
  swift_release();
  v37 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  v38 = v82;
  v39 = v85;
  v80 = *(_QWORD *)(v82 + 16);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v80)(v85, v37, v29);
  v40 = *MEMORY[0x24BE3FD38];
  v81 = v1;
  v41 = v83;
  v42 = (uint64_t)v84;
  v43 = *(void (**)(_QWORD))(v83 + 104);
  v69 = v40;
  v44 = v87;
  v70 = (void (*)(uint64_t, _QWORD, uint64_t))v43;
  v43(v84);
  SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0 = _s9WorkoutUI13DemoUtilitiesV33fetchTrainingLoadSampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0(v39, v42);
  v83 = *(_QWORD *)(v41 + 8);
  ((void (*)(uint64_t, uint64_t))v83)(v42, v44);
  v46 = *(void (**)(uint64_t *, uint64_t))(v38 + 8);
  v46(v39, v29);
  if (SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0)
  {
    swift_getKeyPath();
    aBlock[0] = v81;
    sub_24A7789BC();
    swift_release();
    ((void (*)(uint64_t *, uint64_t, uint64_t))v80)(v39, v37, v29);
    sub_24A779CC4();
    v46(v39, v29);
    v47 = v77;
    sub_24A779E14();
    v48 = v87;
    v70(v42, v69, v87);
    sub_24A7158A8(v47, v42);
    ((void (*)(uint64_t, uint64_t))v83)(v42, v48);
    sub_24A70E06C(0);
    (*(void (**)(void (*)(unint64_t, char *, int64_t), uint64_t))(v78 + 8))(v47, v71);
    return 1;
  }
  v50 = (void (*)(uint64_t *, uint64_t, uint64_t))v80;
  v51 = v81;
  v52 = v37;
  v53 = *(void (**)(uint64_t *))(v81
                                         + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeAllDayLoadSummaryCollectionSequence);
  if (v53)
  {
    swift_getKeyPath();
    v54 = v46;
    aBlock[0] = v51;
    sub_24A7789BC();
    swift_release();
    v55 = v85;
    v56 = v52;
    v57 = v86;
    v50(v85, v56, v86);
    v58 = v72;
    v53(v55);
    v54(v55, v57);
    v59 = v74;
    v60 = v75;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 32))(v74, v58, v75);
    v61 = *(_QWORD *)(v51 + 16);
    v62 = swift_allocObject();
    v63 = swift_weakInit();
    MEMORY[0x24BDAC7A8](v63);
    *(_QWORD *)&v68[-32] = v62;
    *(_QWORD *)&v68[-24] = v59;
    *(_QWORD *)&v68[-16] = v73;
    v64 = *(NSObject **)(v61 + 16);
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v61;
    *(_BYTE *)(v65 + 24) = 1;
    *(_QWORD *)(v65 + 32) = sub_24A71A5F4;
    *(_QWORD *)(v65 + 40) = &v68[-48];
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = sub_24A71AA14;
    *(_QWORD *)(v66 + 24) = v65;
    aBlock[4] = (uint64_t)sub_24A71AA10;
    aBlock[5] = v66;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24A70E1F4;
    aBlock[3] = (uint64_t)&block_descriptor_114;
    v67 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v64, v67);
    _Block_release(v67);
    LOBYTE(v61) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v61 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v59, v60);
      swift_release();
      return 0;
    }
  }
  else
  {
    sub_24A70E06C(1);
    return 2;
  }
  return result;
}

uint64_t sub_24A712D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a5;
  v29 = a7;
  v25 = a6;
  v26 = a1;
  v27 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_24A77BB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v17, v11, v8);
  *(_QWORD *)(v20 + v18) = v16;
  v21 = (_QWORD *)(v20 + v19);
  v22 = v27;
  *v21 = v26;
  v21[1] = v22;
  *(_QWORD *)(v20 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8)) = v28;
  swift_retain();
  v23 = sub_24A71233C((uint64_t)v14, v29, v20);
  sub_24A63CD04((uint64_t)v14, &qword_25794C6E0);
  return v23;
}

uint64_t sub_24A712F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = sub_24A779D0C();
  v8[14] = v9;
  v8[15] = *(_QWORD *)(v9 - 8);
  v8[16] = swift_task_alloc();
  v10 = sub_24A77A018();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v11 = sub_24A779E2C();
  v8[21] = v11;
  v8[22] = *(_QWORD *)(v11 - 8);
  v8[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2A8);
  v8[24] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2B0);
  v8[25] = v12;
  v8[26] = *(_QWORD *)(v12 - 8);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A713060()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  sub_24A77BBA8();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  *v1 = v0;
  v1[1] = sub_24A71310C;
  return sub_24A77BBB4();
}

uint64_t sub_24A71310C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_DWORD *)(v2 + 256) = *MEMORY[0x24BE3FD38];
  return swift_task_switch();
}

uint64_t sub_24A71317C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t Strong;
  _QWORD *v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    (*(void (**)(uint64_t))(v0 + 88))(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 184), v1, v2);
    sub_24A779A18();
    v6 = sub_24A77A00C();
    v7 = sub_24A77BC74();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    if (v8)
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = sub_24A77C2EC();
      *(_QWORD *)(v12 + 4) = sub_24A76BC40(v14, v15, &v18);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A635000, v6, v7, "[%{public}s] Received All day load day summaries", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v13, -1, -1);
      MEMORY[0x24BD1A2B4](v12, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 232) = Strong;
    if (Strong)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 104))(*(_QWORD *)(v0 + 128), *(unsigned int *)(v0 + 256), *(_QWORD *)(v0 + 112));
      sub_24A77BB78();
      *(_QWORD *)(v0 + 240) = sub_24A77BB6C();
      sub_24A77BB54();
      return swift_task_switch();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 248) = v17;
      *v17 = v0;
      v17[1] = sub_24A713540;
      return sub_24A77BBB4();
    }
  }
}

uint64_t sub_24A713450()
{
  _QWORD *v0;
  void (*v1)(unint64_t, char *, int64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void (*)(unint64_t, char *, int64_t))v0[23];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  swift_release();
  sub_24A7158A8(v1, v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_24A7134CC()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[23], v0[21]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[31] = v1;
  *v1 = v0;
  v1[1] = sub_24A713540;
  return sub_24A77BBB4();
}

uint64_t sub_24A713540()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A7135A4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(void **)(v0 + 40);
  sub_24A779A18();
  v2 = v1;
  v3 = v1;
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 152);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_24A77C2EC();
    *(_QWORD *)(v0 + 48) = sub_24A76BC40(v9, v10, &v21);
    sub_24A77BE00();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 56) = v1;
    v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
    v12 = sub_24A77B9E0();
    *(_QWORD *)(v0 + 64) = sub_24A76BC40(v12, v13, &v21);
    sub_24A77BE00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A635000, v4, v5, "[%{public}s] Received error for all day summary query: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v8, -1, -1);
    MEMORY[0x24BD1A2B4](v7, -1, -1);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v20, v19);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 136);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  (*(void (**)(uint64_t))(v0 + 88))(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A713820(int a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, char *, int64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0;
  void (*v58)(char *);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(unint64_t, char *, int64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(unint64_t, char *, int64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(unint64_t, char *, int64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t aBlock[6];
  uint64_t v102;

  v2 = (uint64_t)v1;
  LODWORD(v91) = a1;
  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v83 = (void (*)(unint64_t, char *, int64_t))((char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v83 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v9);
  v86 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A779E2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (void (*)(unint64_t, char *, int64_t))((char *)&v83
                                                                      - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_24A779D0C();
  v95 = *(_QWORD *)(v15 - 8);
  v96 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v94 = (void (**)(unint64_t, char *, int64_t))((char *)&v83
                                                                       - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_24A779CF4();
  v98 = *(_QWORD *)(v17 - 8);
  v99 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v97 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_24A77A018();
  v92 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A18();
  v22 = sub_24A77A00C();
  v23 = sub_24A77BC74();
  v24 = os_log_type_enabled(v22, v23);
  v88 = (unint64_t)v8;
  v87 = v3;
  if (v24)
  {
    v85 = v11;
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v93 = v2;
    v27 = v26;
    aBlock[0] = v26;
    v84 = v12;
    *(_DWORD *)v25 = 136446210;
    v28 = sub_24A77C2EC();
    v102 = sub_24A76BC40(v28, v29, aBlock);
    v12 = v84;
    sub_24A77BE00();
    v11 = v85;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A635000, v22, v23, "[%{public}s] Spinning up workoutsByActivityTypeQuery", v25, 0xCu);
    swift_arrayDestroy();
    v30 = v27;
    v2 = v93;
    MEMORY[0x24BD1A2B4](v30, -1, -1);
    MEMORY[0x24BD1A2B4](v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v92 + 8))(v21, v19);
  swift_getKeyPath();
  v31 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  aBlock[0] = v2;
  v32 = sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    swift_getKeyPath();
    aBlock[0] = v2;
    sub_24A7789BC();
    swift_release();
    v33 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    v34 = v97;
    v35 = v98;
    v36 = v33;
    v37 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, v36, v99);
    v38 = (uint64_t)v86;
    sub_24A779CC4();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
    v39 = 1;
    sub_24A779E20();
    sub_24A63CD04(v38, &qword_257947EE0);
    v40 = (uint64_t)v94;
    v41 = v95;
    *v94 = 13;
    v42 = v96;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x24BE3FD28], v96);
    sub_24A7158A8(v14, v40);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    (*(void (**)(void (*)(unint64_t, char *, int64_t), uint64_t))(v12 + 8))(v14, v11);
    sub_24A70DDE4(0);
    return v39;
  }
  if ((v91 & 1) == 0)
  {
    v58 = *(void (**)(char *))(v2
                                        + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadByActivityTypeSummaryCollectionSequence);
    if (!v58)
    {
      sub_24A70DDE4(1);
      return 2;
    }
    swift_getKeyPath();
    aBlock[0] = v2;
    sub_24A7789BC();
    swift_release();
    v59 = v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    v61 = v97;
    v60 = v98;
    v62 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, v59, v99);
    v63 = v83;
    v58(v61);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    v64 = v89;
    v65 = (char *)v88;
    (*(void (**)(unint64_t, _QWORD, unint64_t))(v89 + 32))(v88, v63, v90);
    v66 = *(_QWORD *)(v2 + 16);
    sub_24A70DDE4(0);
    v67 = swift_allocObject();
    v68 = swift_weakInit();
    MEMORY[0x24BDAC7A8](v68);
    *(&v83 - 4) = (void (*)(unint64_t, char *, int64_t))v67;
    *(&v83 - 3) = (void (*)(unint64_t, char *, int64_t))v65;
    *(&v83 - 2) = (void (*)(unint64_t, char *, int64_t))v87;
    v69 = *(NSObject **)(v66 + 16);
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 16) = v66;
    *(_BYTE *)(v70 + 24) = 2;
    *(_QWORD *)(v70 + 32) = sub_24A71A3F4;
    *(_QWORD *)(v70 + 40) = &v83 - 6;
    v71 = swift_allocObject();
    *(_QWORD *)(v71 + 16) = sub_24A71A420;
    *(_QWORD *)(v71 + 24) = v70;
    aBlock[4] = (uint64_t)sub_24A71AA10;
    aBlock[5] = v71;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24A70E1F4;
    aBlock[3] = (uint64_t)&block_descriptor_85;
    v72 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v69, v72);
    _Block_release(v72);
    LOBYTE(v66) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v66 & 1) == 0)
    {
      (*(void (**)(char *, unint64_t))(v64 + 8))(v65, v90);
      swift_release();
      return 0;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v100 = MEMORY[0x24BEE4AF8];
  result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel__allWorkoutActivityTypes);
  if (result)
  {
    v44 = (void *)result;
    v91 = v32;
    v92 = v31;
    v83 = v14;
    v84 = v12;
    sub_24A64F254(0, (unint64_t *)&qword_25794C8D0);
    v45 = sub_24A77BB18();

    v93 = v2;
    v85 = v11;
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_24A77C028();
      v46 = result;
      if (result)
        goto LABEL_9;
    }
    else
    {
      v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v46)
      {
LABEL_9:
        if (v46 >= 1)
        {
          v88 = v45 & 0xC000000000000001;
          v89 = v93 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
          swift_beginAccess();
          v47 = 0;
          LODWORD(v87) = *MEMORY[0x24BE3FD28];
          v90 = v45;
          v48 = (uint64_t *)v97;
          v49 = v98;
          v50 = v99;
          v51 = v94;
          do
          {
            if (v88)
              v52 = (id)MEMORY[0x24BD19588](v47, v45);
            else
              v52 = *(id *)(v45 + 8 * v47 + 32);
            v53 = v52;
            v54 = objc_msgSend(v52, sel_unsignedIntegerValue);
            swift_getKeyPath();
            v102 = v93;
            sub_24A7789BC();
            swift_release();
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16))(v48, v89, v50);
            *v51 = v54;
            v56 = v95;
            v55 = v96;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v95 + 104))(v51, v87, v96);
            SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0 = _s9WorkoutUI13DemoUtilitiesV33fetchTrainingLoadSampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0(v48, (uint64_t)v51);
            (*(void (**)(_QWORD *, uint64_t))(v56 + 8))(v51, v55);
            (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v48, v50);
            if (SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0)
              sub_24A70D754((uint64_t)SampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0);

            ++v47;
            v45 = v90;
          }
          while (v46 != v47);
          goto LABEL_22;
        }
        __break(1u);
        goto LABEL_27;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    if (*(_QWORD *)(v100 + 16))
    {
      swift_getKeyPath();
      v73 = v93;
      v102 = v93;
      sub_24A7789BC();
      swift_release();
      v74 = v73 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
      swift_beginAccess();
      v75 = v97;
      v76 = v98;
      v77 = v74;
      v78 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, v77, v99);
      sub_24A779CC4();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v78);
      swift_bridgeObjectRetain();
      v79 = v83;
      sub_24A779E14();
      v81 = (uint64_t)v94;
      v80 = v95;
      *v94 = 13;
      v82 = v96;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v80 + 104))(v81, *MEMORY[0x24BE3FD28], v96);
      sub_24A7158A8(v79, v81);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v82);
      (*(void (**)(void (*)(unint64_t, char *, int64_t), uint64_t))(v84 + 8))(v79, v85);
    }
    sub_24A70DDE4(0);
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A7142B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = sub_24A779D0C();
  v8[14] = v9;
  v8[15] = *(_QWORD *)(v9 - 8);
  v8[16] = swift_task_alloc();
  v10 = sub_24A77A018();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v11 = sub_24A779E2C();
  v8[21] = v11;
  v8[22] = *(_QWORD *)(v11 - 8);
  v8[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2A8);
  v8[24] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2B0);
  v8[25] = v12;
  v8[26] = *(_QWORD *)(v12 - 8);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A7143CC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  sub_24A77BBA8();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  *v1 = v0;
  v1[1] = sub_24A714478;
  return sub_24A77BBB4();
}

uint64_t sub_24A714478()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_DWORD *)(v2 + 256) = *MEMORY[0x24BE3FD28];
  return swift_task_switch();
}

uint64_t sub_24A7144E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    (*(void (**)(uint64_t))(v0 + 88))(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 184), v1, v2);
    sub_24A779A18();
    v6 = sub_24A77A00C();
    v7 = sub_24A77BC74();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    if (v8)
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v19 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = sub_24A77C2EC();
      *(_QWORD *)(v12 + 4) = sub_24A76BC40(v14, v15, &v19);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A635000, v6, v7, "[%{public}s] Received Workout load by activity type day summaries", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v13, -1, -1);
      MEMORY[0x24BD1A2B4](v12, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 232) = Strong;
    if (Strong)
    {
      v17 = *(_QWORD *)(v0 + 120);
      **(_QWORD **)(v0 + 128) = 13;
      (*(void (**)(void))(v17 + 104))();
      sub_24A77BB78();
      *(_QWORD *)(v0 + 240) = sub_24A77BB6C();
      sub_24A77BB54();
      return swift_task_switch();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 248) = v18;
      *v18 = v0;
      v18[1] = sub_24A7148B4;
      return sub_24A77BBB4();
    }
  }
}

uint64_t sub_24A7147C4()
{
  _QWORD *v0;
  void (*v1)(unint64_t, char *, int64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void (*)(unint64_t, char *, int64_t))v0[23];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  swift_release();
  sub_24A7158A8(v1, v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_24A714840()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[23], v0[21]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[31] = v1;
  *v1 = v0;
  v1[1] = sub_24A7148B4;
  return sub_24A77BBB4();
}

uint64_t sub_24A7148B4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24A714918()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(void **)(v0 + 40);
  sub_24A779A18();
  v2 = v1;
  v3 = v1;
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 152);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_24A77C2EC();
    *(_QWORD *)(v0 + 48) = sub_24A76BC40(v9, v10, &v21);
    sub_24A77BE00();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 56) = v1;
    v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
    v12 = sub_24A77B9E0();
    *(_QWORD *)(v0 + 64) = sub_24A76BC40(v12, v13, &v21);
    sub_24A77BE00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A635000, v4, v5, "    [%{public}s] Received error for Workout load by activity type summary query: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v8, -1, -1);
    MEMORY[0x24BD1A2B4](v7, -1, -1);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v20, v19);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 136);

    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  (*(void (**)(uint64_t))(v0 + 88))(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A714B94(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  int v13;
  int v14;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  _QWORD *v23;
  char v24;
  _QWORD aBlock[7];

  v2 = v1;
  v4 = *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C6E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  v23 = v2;
  v24 = a1;
  aBlock[0] = v2;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  swift_release();
  v8 = v2[2];
  v9 = *(NSObject **)(v8 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_24A719DC8;
  *(_QWORD *)(v10 + 24) = v8;
  aBlock[4] = sub_24A6433A4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70E1F4;
  aBlock[3] = &block_descriptor_3;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v11);
  _Block_release(v11);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = sub_24A7111E0();
    v14 = sub_24A7124D4();
    v16 = v13 == 1 || v14 == 1;
    sub_24A713820(v16);
    v17 = sub_24A77BB90();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
    v18 = swift_allocObject();
    swift_weakInit();
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = v18;
    v19[5] = v4;
    v20 = sub_24A71233C((uint64_t)v7, (uint64_t)&unk_25794CDA8, (uint64_t)v19);
    sub_24A63CD04((uint64_t)v7, &qword_25794C6E0);
    v21 = *(_QWORD *)(v8 + 64);
    *(_QWORD *)(v8 + 64) = v20;
    swift_retain();
    if (v21)
    {
      swift_retain();
      sub_24A77BB9C();
      swift_release_n();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24A714E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  v6 = sub_24A77A018();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D280);
  v5[11] = swift_task_alloc();
  v7 = sub_24A77BD28();
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24A714F10()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_24A77BD34();

  sub_24A77BD1C();
  swift_beginAccess();
  *(_QWORD *)(v0 + 120) = sub_24A63C880(&qword_25794D288, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0028], MEMORY[0x24BDD0038]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  *v2 = v0;
  v2[1] = sub_24A71500C;
  return sub_24A77BB60();
}

uint64_t sub_24A71500C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_24A715070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  _QWORD *v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = sub_24A778428();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_24A779A18();
    v4 = sub_24A77A00C();
    v5 = sub_24A77BC74();
    v6 = os_log_type_enabled(v4, v5);
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 64);
    if (v6)
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v16 = v11;
      *(_DWORD *)v10 = 136446210;
      v12 = sub_24A77C2EC();
      *(_QWORD *)(v10 + 4) = sub_24A76BC40(v12, v13, &v16);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A635000, v4, v5, "[%{public}s] did receive significantTimeChangeNotification notification", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v11, -1, -1);
      MEMORY[0x24BD1A2B4](v10, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 144) = Strong;
    if (Strong)
    {
      sub_24A77BB78();
      *(_QWORD *)(v0 + 152) = sub_24A77BB6C();
      sub_24A77BB54();
      return swift_task_switch();
    }
    else
    {
      sub_24A63CD04(*(_QWORD *)(v0 + 88), &qword_25794D280);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v15;
      *v15 = v0;
      v15[1] = sub_24A7153F4;
      return sub_24A77BB60();
    }
  }
}

uint64_t sub_24A7152E8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_24A715348()
{
  swift_release();
  sub_24A715458();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24A715390()
{
  uint64_t v0;
  _QWORD *v1;

  sub_24A63CD04(*(_QWORD *)(v0 + 88), &qword_25794D280);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_24A7153F4;
  return sub_24A77BB60();
}

uint64_t sub_24A7153F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_24A715458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t result;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = v0;
  v49 = sub_24A7788E4();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v45 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_24A778968();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v44 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A778818();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_24A779CF4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v39 = (uint64_t)&v38 - v20;
  type metadata accessor for TrainingLoadViewModelProvider();
  swift_getKeyPath();
  v21 = v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  v52 = v1;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  v40 = v21;
  sub_24A7789BC();
  swift_release();
  v50 = v1;
  v22 = v1 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v22, v15);
  sub_24A779CC4();
  v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v18, v15);
  v24 = sub_24A77B80C();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v11, v14, v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  v26(v11, 0, 1, v24);
  v26(v8, 1, 1, v24);
  v27 = sub_24A719350((uint64_t)v11, (uint64_t)v8);
  sub_24A63CD04((uint64_t)v8, &qword_257947ED8);
  sub_24A63CD04((uint64_t)v11, &qword_257947ED8);
  result = sub_24A63CD04((uint64_t)v14, &qword_257947EE0);
  v29 = (void (*)(char *, uint64_t, uint64_t))(v27 - 1);
  if (__OFSUB__(v27, 1))
  {
    __break(1u);
  }
  else
  {
    v30 = (uint64_t)v41;
    sub_24A7787F4();
    v31 = v47;
    v32 = v45;
    v33 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v45, *MEMORY[0x24BDCEF70], v49);
    v34 = (uint64_t)v44;
    sub_24A7788F0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    v35 = v39;
    static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)(v30, v29, v34, v39);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v34, v48);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v30, v43);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v37 = v50;
    *(&v38 - 2) = v50;
    *(&v38 - 1) = v35;
    v51 = v37;
    sub_24A7789B0();
    swift_release();
    return ((uint64_t (*)(uint64_t, uint64_t))v23)(v35, v15);
  }
  return result;
}

uint64_t sub_24A7158A8(void (*a1)(unint64_t, char *, int64_t), uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ViewModel;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unsigned int v33;
  int v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(_QWORD *, _QWORD, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  char v45;
  void (*v46)(_QWORD *, uint64_t);
  uint64_t v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  void (*v80)(char *, char *, int64_t);
  unint64_t v81;
  char v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  int64_t v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t i;
  int64_t v98;
  unint64_t v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  uint64_t KeyPath;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t result;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(unint64_t, char *, int64_t);
  void (*v124)(char *, uint64_t, int64_t);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  int64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;

  v3 = (unint64_t)v2;
  v123 = a1;
  v5 = sub_24A779CF4();
  v131 = *(_QWORD *)(v5 - 8);
  v132 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_24A779D90();
  v122 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v120 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v126 = (char *)&v115 - v10;
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v134 = *(_QWORD *)(ViewModel - 8);
  MEMORY[0x24BDAC7A8](ViewModel);
  v129 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v139 = (uint64_t)&v115 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v138 = (uint64_t)&v115 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v124 = (void (*)(char *, uint64_t, int64_t))((char *)&v115 - v18);
  MEMORY[0x24BDAC7A8](v19);
  v121 = (uint64_t)&v115 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v115 - v22;
  v24 = sub_24A779D0C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v115 - v30;
  v32 = *(_QWORD *)(v25 + 16);
  ((void (*)(char *, uint64_t, uint64_t, double))v32)((char *)&v115 - v30, a2, v24, v29);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v31, v24);
  v34 = *MEMORY[0x24BE3FD28];
  v130 = v33;
  v136 = v24;
  v137 = v2;
  v125 = v25;
  v135 = v27;
  v115 = a2;
  if (v33 != v34)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v24);
    swift_getKeyPath();
    v142 = (unint64_t)v2;
    sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
    sub_24A7789BC();
    swift_release();
    v52 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
    v53 = swift_beginAccess();
    v54 = *v52;
    MEMORY[0x24BDAC7A8](v53);
    *(&v115 - 2) = a2;
    swift_bridgeObjectRetain();
    v3 = 0;
    sub_24A70D180((uint64_t (*)(char *))sub_24A71A3D8, (uint64_t)(&v115 - 4), v54);
    v56 = v55;
    v57 = v137;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v27, a2, v24);
    swift_getKeyPath();
    v141 = (unint64_t)v57;
    sub_24A7789BC();
    swift_release();
    v58 = (char *)v57 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v7, v58, v132);
    v59 = sub_24A779E08();
    v32 = (unint64_t)v129;
    TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)((uint64_t)v27, (uint64_t)v7, v59, (uint64_t)v129);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_77;
    goto LABEL_17;
  }
  v129 = v7;
  swift_getKeyPath();
  v35 = (char *)v2 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  v142 = v3;
  v127 = sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  v128 = v35;
  sub_24A7789BC();
  swift_release();
  v36 = (uint64_t *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  v37 = *v36;
  v56 = MEMORY[0x24BEE4AF8];
  v141 = MEMORY[0x24BEE4AF8];
  v38 = *(_QWORD *)(v37 + 16);
  v39 = swift_bridgeObjectRetain();
  v119 = v38;
  if (v38)
  {
    v56 = 0;
    LODWORD(v117) = *MEMORY[0x24BE3FD40];
    LODWORD(v116) = *MEMORY[0x24BE3FD38];
    v118 = v39;
    while (1)
    {
      if (v56 >= *(_QWORD *)(v39 + 16))
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      v3 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
      v41 = *(_QWORD *)(v134 + 72);
      sub_24A719CEC(v39 + v3 + v41 * v56, (uint64_t)v23);
      v42 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v25 + 104);
      v43 = v24;
      v44 = v135;
      v42(v135, v117, v43);
      v45 = sub_24A779D00();
      v46 = *(void (**)(_QWORD *, uint64_t))(v25 + 8);
      v46(v44, v43);
      v47 = v121;
      sub_24A719CEC((uint64_t)v23, v121);
      if ((v45 & 1) != 0)
        break;
      v42(v44, v116, v43);
      v48 = sub_24A779D00();
      v46(v44, v43);
      sub_24A719D30(v47);
      if ((v48 & 1) != 0)
        goto LABEL_11;
      sub_24A719D30((uint64_t)v23);
      v24 = v136;
      v40 = v137;
      v25 = v125;
      v32 = (unint64_t)v123;
LABEL_6:
      ++v56;
      v39 = v118;
      if (v119 == v56)
      {
        v56 = v141;
        goto LABEL_22;
      }
    }
    sub_24A719D30(v47);
LABEL_11:
    sub_24A719D6C((uint64_t)v23, (uint64_t)v124);
    v49 = v141;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24A671DB4(0, *(_QWORD *)(v49 + 16) + 1, 1);
      v49 = v141;
    }
    v24 = v136;
    v32 = (unint64_t)v123;
    v51 = *(_QWORD *)(v49 + 16);
    v50 = *(_QWORD *)(v49 + 24);
    if (v51 >= v50 >> 1)
    {
      sub_24A671DB4(v50 > 1, v51 + 1, 1);
      v49 = v141;
    }
    *(_QWORD *)(v49 + 16) = v51 + 1;
    sub_24A719D6C((uint64_t)v124, v49 + v3 + v51 * v41);
    v40 = v137;
    v25 = v125;
    goto LABEL_6;
  }
  v40 = (_QWORD *)v3;
  v32 = (unint64_t)v123;
LABEL_22:
  swift_bridgeObjectRelease();
  v63 = sub_24A779E08();
  v141 = MEMORY[0x24BEE4B00];
  v3 = *(_QWORD *)(v63 + 16);
  if (v3)
  {
    v64 = *(unsigned __int8 *)(v122 + 80);
    v65 = (v64 + 32) & ~v64;
    v116 = v63;
    v66 = v63 + v65;
    v67 = *(_QWORD *)(v122 + 72);
    v119 = v65 + v67;
    v118 = v64 | 7;
    v124 = *(void (**)(char *, uint64_t, int64_t))(v122 + 16);
    v68 = MEMORY[0x24BEE4B00];
    v117 = xmmword_24A780030;
    v121 = v65;
    v124(v126, v63 + v65, v133);
    while (1)
    {
      v69 = sub_24A779D60();
      if ((v70 & 1) != 0)
        v32 = 3000;
      else
        v32 = v69;
      v72 = sub_24A64E9F4(v32);
      v73 = *(_QWORD *)(v68 + 16);
      v74 = (v71 & 1) == 0;
      v75 = v73 + v74;
      if (__OFADD__(v73, v74))
        goto LABEL_73;
      v76 = v71;
      if (*(_QWORD *)(v68 + 24) < v75)
      {
        sub_24A6DDDD8(v75, 1);
        v68 = v141;
        v77 = sub_24A64E9F4(v32);
        if ((v76 & 1) != (v78 & 1))
        {
          type metadata accessor for HKWorkoutActivityType(0);
          sub_24A77C1B4();
          __break(1u);
LABEL_79:
          result = swift_release();
          __break(1u);
          return result;
        }
        v72 = v77;
      }
      if ((v76 & 1) != 0)
      {
        v79 = *(_QWORD *)(v68 + 56);
        v80 = *(void (**)(char *, char *, int64_t))(v122 + 32);
        v80(v120, v126, v133);
        v81 = *(_QWORD *)(v79 + 8 * v72);
        v82 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v79 + 8 * v72) = v81;
        v123 = (void (*)(unint64_t, char *, int64_t))v80;
        if ((v82 & 1) == 0)
        {
          v81 = sub_24A64DA04(0, *(_QWORD *)(v81 + 16) + 1, 1, v81);
          *(_QWORD *)(v79 + 8 * v72) = v81;
        }
        v84 = *(_QWORD *)(v81 + 16);
        v83 = *(_QWORD *)(v81 + 24);
        v32 = v84 + 1;
        if (v84 >= v83 >> 1)
        {
          v81 = sub_24A64DA04(v83 > 1, v84 + 1, 1, v81);
          *(_QWORD *)(v79 + 8 * v72) = v81;
        }
        *(_QWORD *)(v81 + 16) = v32;
        v65 = v121;
        v123(v81 + v121 + v84 * v67, v120, v133);
        v25 = v125;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257947448);
        v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = v117;
        (*(void (**)(uint64_t, char *, int64_t))(v122 + 32))(v85 + v65, v126, v133);
        *(_QWORD *)(v68 + 8 * (v72 >> 6) + 64) |= 1 << v72;
        v86 = 8 * v72;
        *(_QWORD *)(*(_QWORD *)(v68 + 48) + v86) = v32;
        *(_QWORD *)(*(_QWORD *)(v68 + 56) + v86) = v85;
        v87 = *(_QWORD *)(v68 + 16);
        v88 = __OFADD__(v87, 1);
        v89 = v87 + 1;
        if (v88)
          goto LABEL_75;
        *(_QWORD *)(v68 + 16) = v89;
      }
      v66 += v67;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        v40 = v137;
        goto LABEL_43;
      }
      v124(v126, v66, v133);
    }
  }
  swift_bridgeObjectRelease();
  v68 = MEMORY[0x24BEE4B00];
LABEL_43:
  v90 = *(_QWORD *)(v68 + 64);
  v126 = (char *)(v68 + 64);
  v91 = 1 << *(_BYTE *)(v68 + 32);
  v92 = -1;
  if (v91 < 64)
    v92 = ~(-1 << v91);
  v3 = v92 & v90;
  v93 = (char *)v40 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  swift_beginAccess();
  v94 = 0;
  v133 = (unint64_t)(v91 + 63) >> 6;
  v95 = v135;
  if (!v3)
    goto LABEL_47;
LABEL_46:
  v96 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  for (i = v96 | (v94 << 6); ; i = __clz(__rbit64(v99)) + (v94 << 6))
  {
    v101 = 8 * i;
    v102 = *(_QWORD *)(*(_QWORD *)(v68 + 56) + v101);
    *v95 = *(_QWORD *)(*(_QWORD *)(v68 + 48) + v101);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v25 + 104))(v95, v130, v136);
    swift_getKeyPath();
    v140 = v137;
    swift_bridgeObjectRetain();
    sub_24A7789BC();
    swift_release();
    v103 = (uint64_t)v129;
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v129, v93, v132);
    v104 = v138;
    TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)((uint64_t)v95, v103, v102, v138);
    sub_24A719CEC(v104, v139);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v56 = sub_24A64DA18(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
    v32 = *(_QWORD *)(v56 + 16);
    v105 = *(_QWORD *)(v56 + 24);
    if (v32 >= v105 >> 1)
      v56 = sub_24A64DA18(v105 > 1, v32 + 1, 1, v56);
    *(_QWORD *)(v56 + 16) = v32 + 1;
    sub_24A719D6C(v139, v56+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(_QWORD *)(v134 + 72) * v32);
    sub_24A719D30(v138);
    if (v3)
      goto LABEL_46;
LABEL_47:
    v98 = v94 + 1;
    if (__OFADD__(v94, 1))
      goto LABEL_74;
    if (v98 >= v133)
    {
LABEL_67:
      swift_release();
      v3 = 0;
      goto LABEL_68;
    }
    v99 = *(_QWORD *)&v126[8 * v98];
    ++v94;
    if (!v99)
    {
      v94 = v98 + 1;
      if (v98 + 1 >= v133)
        goto LABEL_67;
      v99 = *(_QWORD *)&v126[8 * v94];
      if (!v99)
      {
        v94 = v98 + 2;
        if (v98 + 2 >= v133)
          goto LABEL_67;
        v99 = *(_QWORD *)&v126[8 * v94];
        if (!v99)
          break;
      }
    }
LABEL_60:
    v3 = (v99 - 1) & v99;
  }
  v100 = v98 + 3;
  if (v100 >= v133)
    goto LABEL_67;
  v99 = *(_QWORD *)&v126[8 * v100];
  if (v99)
  {
    v94 = v100;
    goto LABEL_60;
  }
  while (1)
  {
    v94 = v100 + 1;
    if (__OFADD__(v100, 1))
      break;
    if (v94 >= v133)
      goto LABEL_67;
    v99 = *(_QWORD *)&v126[8 * v94];
    ++v100;
    if (v99)
      goto LABEL_60;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  v56 = sub_24A64DA18(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
LABEL_17:
  v62 = *(_QWORD *)(v56 + 16);
  v61 = *(_QWORD *)(v56 + 24);
  if (v62 >= v61 >> 1)
    v56 = sub_24A64DA18(v61 > 1, v62 + 1, 1, v56);
  *(_QWORD *)(v56 + 16) = v62 + 1;
  sub_24A719D6C(v32, v56+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(_QWORD *)(v134 + 72) * v62);
LABEL_68:
  v140 = (_QWORD *)v56;
  swift_bridgeObjectRetain_n();
  sub_24A716B40(&v140);
  if (v3)
    goto LABEL_79;
  swift_bridgeObjectRelease_n();
  v106 = v140;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v108 = v137;
  *(&v115 - 2) = (uint64_t)v137;
  *(&v115 - 1) = (uint64_t)v106;
  v140 = v108;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789B0();
  swift_release();
  swift_release();
  v109 = v125;
  v111 = v135;
  v110 = v136;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v125 + 104))(v135, *MEMORY[0x24BE3FD40], v136);
  LOBYTE(v106) = sub_24A779D00();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v109 + 8))(v111, v110);
  if ((v106 & 1) != 0)
  {
    v113 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v113);
    *(&v115 - 2) = (uint64_t)v108;
    *((_BYTE *)&v115 - 8) = 0;
    v140 = v108;
    sub_24A7789B0();
    swift_release();
    v114 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v114);
    *(&v115 - 2) = (uint64_t)v108;
    *((_BYTE *)&v115 - 8) = 0;
    v140 = v108;
    sub_24A7789B0();
    return swift_release();
  }
  return result;
}

BOOL sub_24A716718(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;

  v2 = sub_24A779D0C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FD48];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v2, v5);
  sub_24A63C880(&qword_25794D268, v3, MEMORY[0x24BE3FD60]);
  v8 = sub_24A77B974();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  return (v8 & 1) == 0;
}

uint64_t sub_24A7167FC()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  swift_retain();
  return v1;
}

uint64_t sub_24A71689C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels + 8);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_24A71A3B4;
  a2[1] = v6;
  return swift_retain();
}

uint64_t sub_24A71695C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_getKeyPath();
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  swift_retain();
  sub_24A7789B0();
  swift_release();
  return swift_release();
}

uint64_t TrainingLoadViewModelProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange;
  v2 = sub_24A779CF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_24A719EC0(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeAllDayLoadSummaryCollectionSequence));
  sub_24A719EC0(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadSummaryCollectionSequence));
  sub_24A719EC0(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadByActivityTypeSummaryCollectionSequence));
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider___observationRegistrar;
  v4 = sub_24A7789EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t TrainingLoadViewModelProvider.__deallocating_deinit()
{
  TrainingLoadViewModelProvider.deinit();
  return swift_deallocClassInstance();
}

void sub_24A716B40(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for TrainingLoadViewModel(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_24A71960C(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_24A716BC0(v5);
  *a1 = v3;
}

void sub_24A716BC0(uint64_t *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t);
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, _QWORD, uint64_t);
  uint64_t v70;
  char v71;
  int v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  _QWORD *v81;
  void (*v82)(unint64_t *, uint64_t, uint64_t);
  unint64_t *v83;
  uint64_t (*v84)(unint64_t *, uint64_t);
  int v85;
  int v86;
  void (*v87)(unint64_t *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  void (*v104)(char *, uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  char *v111;
  char v112;
  uint64_t v113;
  char v114;
  char v115;
  uint64_t v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  void (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t (*v123)(char *, uint64_t);
  int v124;
  int v125;
  _QWORD *v126;
  void (*v127)(char *, uint64_t);
  unint64_t *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v133;
  unint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  BOOL v149;
  unint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  BOOL v159;
  uint64_t v160;
  char v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  BOOL v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  double v188;
  uint64_t v189;
  _QWORD *v190;
  void (*v191)(unint64_t *, uint64_t, uint64_t);
  unint64_t *v192;
  uint64_t (*v193)(unint64_t *, uint64_t);
  int v194;
  int v195;
  void (*v196)(unint64_t *, uint64_t);
  unint64_t v197;
  unint64_t *v198;
  _BOOL4 v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  unint64_t v208;
  unint64_t *v209;
  unint64_t *v210;
  unint64_t *v211;
  unint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  void (*v220)(char *, _QWORD, uint64_t);
  char *v221;
  int v222;
  uint64_t v223;
  unint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  unsigned int v230;
  uint64_t ViewModel;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  unsigned int v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t v245;

  v2 = sub_24A779D0C();
  v3 = *(_QWORD **)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v221 = (char *)&v209 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v228 = (char *)&v209 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v209 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v209 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v209 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v209 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v239 = (char *)&v209 - v20;
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v227 = *(_QWORD *)(ViewModel - 8);
  MEMORY[0x24BDAC7A8](ViewModel);
  v219 = (uint64_t)&v209 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v241 = (uint64_t)&v209 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v232 = (uint64_t)&v209 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v245 = (uint64_t)&v209 - v27;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v209 - v29;
  MEMORY[0x24BDAC7A8](v31);
  v226 = (uint64_t)&v209 - v32;
  MEMORY[0x24BDAC7A8](v33);
  v216 = (uint64_t)&v209 - v34;
  MEMORY[0x24BDAC7A8](v35);
  v217 = (uint64_t)&v209 - v36;
  v244 = a1;
  v37 = a1[1];
  v38 = sub_24A77C154();
  if (v38 >= v37)
  {
    if (v37 < 0)
      goto LABEL_207;
    if (v37)
      sub_24A717F10(0, v37, 1, v244);
    return;
  }
  if (v37 >= 0)
    v39 = v37;
  else
    v39 = v37 + 1;
  if (v37 < -1)
    goto LABEL_215;
  v225 = v30;
  v214 = v38;
  if (v37 < 2)
  {
    v44 = MEMORY[0x24BEE4AF8];
    v224 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80));
    if (v37 != 1)
    {
      v49 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v46 = (char *)MEMORY[0x24BEE4AF8];
LABEL_173:
      v213 = v44;
      v200 = v229;
      if (v49 >= 2)
      {
        v201 = *v244;
        do
        {
          v202 = v49 - 2;
          if (v49 < 2)
            goto LABEL_202;
          if (!v201)
            goto LABEL_214;
          v203 = v46;
          v204 = v46 + 32;
          v205 = *(_QWORD *)&v46[16 * v202 + 32];
          v206 = *(_QWORD *)&v46[16 * v49 + 24];
          sub_24A7183D8(v201 + *(_QWORD *)(v227 + 72) * v205, v201 + *(_QWORD *)(v227 + 72) * *(_QWORD *)&v204[16 * v49 - 16], v201 + *(_QWORD *)(v227 + 72) * v206, v224);
          if (v200)
            break;
          if (v206 < v205)
            goto LABEL_203;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v203 = sub_24A719060((uint64_t)v203);
          if (v202 >= *((_QWORD *)v203 + 2))
            goto LABEL_204;
          v207 = &v203[16 * v202 + 32];
          *(_QWORD *)v207 = v205;
          *((_QWORD *)v207 + 1) = v206;
          v208 = *((_QWORD *)v203 + 2);
          if (v49 > v208)
            goto LABEL_205;
          v46 = v203;
          memmove(&v203[16 * v49 + 16], &v203[16 * v49 + 32], 16 * (v208 - v49));
          *((_QWORD *)v203 + 2) = v208 - 1;
          v49 = v208 - 1;
        }
        while (v208 > 2);
      }
LABEL_184:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v213 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v40 = 1;
    v210 = (unint64_t *)v18;
    v209 = (unint64_t *)v15;
    v212 = (unint64_t *)v12;
    v211 = (unint64_t *)v9;
    v213 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v40 = v37;
    v210 = (unint64_t *)v18;
    v209 = (unint64_t *)v15;
    v212 = (unint64_t *)v12;
    v211 = (unint64_t *)v9;
    v41 = v39 >> 1;
    v42 = sub_24A77BB3C();
    *(_QWORD *)(v42 + 16) = v41;
    v43 = *(unsigned __int8 *)(v227 + 80);
    v213 = v42;
    v224 = v42 + ((v43 + 32) & ~v43);
  }
  v45 = 0;
  v238 = *MEMORY[0x24BE3FD40];
  v230 = *MEMORY[0x24BE3FD38];
  v222 = *MEMORY[0x24BE3FD28];
  v46 = (char *)MEMORY[0x24BEE4AF8];
  v240 = v2;
  v237 = v3;
  v47 = v239;
  v48 = v40;
  while (2)
  {
    v50 = v45 + 1;
    v223 = v45;
    if (v45 + 1 >= v48)
    {
      v63 = v232;
      v61 = v238;
      goto LABEL_67;
    }
    v242 = v48;
    v51 = v45;
    v52 = *v244;
    v53 = *(_QWORD *)(v227 + 72);
    v235 = v45 + 1;
    sub_24A719CEC(v52 + v53 * v50, v217);
    v233 = v52;
    v243 = v53;
    v54 = v52 + v53 * v51;
    v55 = v216;
    sub_24A719CEC(v54, v216);
    v56 = (void (*)(char *, _QWORD, uint64_t))v3[13];
    v57 = v238;
    v56(v47, v238, v2);
    v58 = sub_24A779D00();
    v59 = (void (*)(char *, uint64_t))v3[1];
    v59(v47, v2);
    if ((v58 & 1) == 0)
    {
      v56(v47, v57, v2);
      v64 = sub_24A779D00();
      v59(v47, v2);
      v62 = v56;
      if ((v64 & 1) != 0 || (v65 = v230, v56(v47, v230, v2), v66 = sub_24A779D00(), v59(v47, v2), (v66 & 1) != 0))
      {
        LODWORD(v236) = 0;
        v60 = v216;
LABEL_23:
        v61 = v238;
        v48 = v242;
        goto LABEL_24;
      }
      v56(v47, v65, v2);
      v185 = v216;
      v186 = sub_24A779D00();
      v59(v47, v2);
      if ((v186 & 1) != 0)
      {
        LODWORD(v236) = 1;
        v60 = v185;
        goto LABEL_23;
      }
      v187 = *(int *)(ViewModel + 36);
      v188 = *(double *)(v217 + v187);
      if (*(_BYTE *)(v217 + v187 + 8))
        v188 = 0.0;
      v189 = v185 + v187;
      v60 = v185;
      if ((*(_BYTE *)(v189 + 8) & 1) != 0)
      {
        v48 = v242;
        if (v188 <= 0.0)
        {
          if (v188 >= 0.0)
          {
LABEL_159:
            v220 = v56;
            v215 = v46;
            v190 = v3;
            v191 = (void (*)(unint64_t *, uint64_t, uint64_t))v3[2];
            v192 = v210;
            v191(v210, v217, v2);
            v193 = (uint64_t (*)(unint64_t *, uint64_t))v190[11];
            v194 = v193(v192, v2);
            v195 = v222;
            if (v194 == v222)
            {
              v196 = (void (*)(unint64_t *, uint64_t))v190[12];
              v196(v192, v2);
              v197 = *v192;
              v198 = v209;
              v191(v209, v216, v2);
              if (v193(v198, v2) == v195)
              {
                v196(v198, v2);
                v199 = v197 < *v198;
              }
              else
              {
                v59((char *)v198, v2);
                v199 = 1;
              }
              LODWORD(v236) = v199;
              v47 = v239;
              v46 = v215;
              v60 = v216;
              v61 = v238;
              v48 = v242;
            }
            else
            {
              v59((char *)v192, v2);
              LODWORD(v236) = 1;
              v47 = v239;
              v46 = v215;
              v60 = v216;
              v61 = v238;
            }
            v62 = v220;
            goto LABEL_24;
          }
LABEL_165:
          LODWORD(v236) = 0;
          v61 = v238;
          goto LABEL_24;
        }
      }
      else
      {
        v48 = v242;
        if (*(double *)v189 >= v188)
        {
          if (v188 >= *(double *)v189)
            goto LABEL_159;
          goto LABEL_165;
        }
      }
      LODWORD(v236) = 1;
      v61 = v238;
      goto LABEL_24;
    }
    LODWORD(v236) = 1;
    v60 = v55;
    v61 = v57;
    v48 = v242;
    v62 = v56;
LABEL_24:
    sub_24A719D30(v60);
    sub_24A719D30(v217);
    v45 = v223;
    v50 = v223 + 2;
    if (v223 + 2 >= v48)
      goto LABEL_53;
    v215 = v46;
    v67 = v233;
    v68 = v223 + 2;
    v234 = v243 * v50;
    v235 *= v243;
    while (1)
    {
      sub_24A719CEC(v67 + v234, v226);
      sub_24A719CEC(v67 + v235, (uint64_t)v225);
      v69 = v62;
      v70 = v238;
      v69(v47, v238, v2);
      v71 = sub_24A779D00();
      v59(v47, v2);
      if ((v71 & 1) != 0)
      {
        v72 = 1;
        v48 = v242;
        v62 = v69;
        goto LABEL_32;
      }
      v69(v47, v70, v2);
      v73 = sub_24A779D00();
      v59(v47, v2);
      v62 = v69;
      if ((v73 & 1) != 0 || (v74 = v230, v69(v47, v230, v2), v75 = sub_24A779D00(), v59(v47, v2), (v75 & 1) != 0))
      {
        v72 = 0;
LABEL_31:
        v48 = v242;
        goto LABEL_32;
      }
      v69(v47, v74, v2);
      v76 = (uint64_t)v225;
      v77 = sub_24A779D00();
      v59(v47, v2);
      if ((v77 & 1) != 0)
      {
        v72 = 1;
        goto LABEL_31;
      }
      v78 = *(int *)(ViewModel + 36);
      v79 = *(double *)(v226 + v78);
      if (*(_BYTE *)(v226 + v78 + 8))
        v79 = 0.0;
      v80 = v76 + v78;
      if ((*(_BYTE *)(v80 + 8) & 1) != 0)
      {
        v48 = v242;
        if (v79 > 0.0)
          goto LABEL_46;
        if (v79 < 0.0)
          goto LABEL_48;
      }
      else
      {
        v48 = v242;
        if (*(double *)v80 < v79)
        {
LABEL_46:
          v72 = 1;
          goto LABEL_32;
        }
        if (v79 < *(double *)v80)
        {
LABEL_48:
          v72 = 0;
          goto LABEL_32;
        }
      }
      v220 = v69;
      v81 = v237;
      v82 = (void (*)(unint64_t *, uint64_t, uint64_t))v237[2];
      v83 = v212;
      v82(v212, v226, v2);
      v84 = (uint64_t (*)(unint64_t *, uint64_t))v81[11];
      v85 = v84(v83, v2);
      v86 = v222;
      if (v85 != v222)
        goto LABEL_49;
      v87 = (void (*)(unint64_t *, uint64_t))v81[12];
      v87(v83, v2);
      v218 = *v83;
      v83 = v211;
      v82(v211, (uint64_t)v225, v2);
      if (v84(v83, v2) == v86)
      {
        v87(v83, v2);
        v72 = v218 < *v83;
      }
      else
      {
LABEL_49:
        v59((char *)v83, v2);
        v72 = 1;
      }
      v47 = v239;
      v48 = v242;
      v62 = v220;
LABEL_32:
      sub_24A719D30((uint64_t)v225);
      sub_24A719D30(v226);
      if ((_DWORD)v236 != v72)
        break;
      v67 += v243;
      if (v48 == ++v68)
      {
        v50 = v48;
        v46 = v215;
        v61 = v238;
        goto LABEL_52;
      }
    }
    v46 = v215;
    v61 = v238;
    v50 = v68;
LABEL_52:
    v45 = v223;
LABEL_53:
    v63 = v232;
    if ((_DWORD)v236)
    {
      if (v50 < v45)
        goto LABEL_208;
      if (v45 < v50)
      {
        v215 = v46;
        v88 = 0;
        v89 = v243 * (v50 - 1);
        v90 = v50 * v243;
        v91 = v45;
        v92 = v45 * v243;
        do
        {
          if (v91 != v50 + v88 - 1)
          {
            v93 = v233;
            if (!v233)
              goto LABEL_213;
            v94 = v233 + v92;
            sub_24A719D6C(v233 + v92, v219);
            if (v92 < v89 || v94 >= v93 + v90)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v92 != v89)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_24A719D6C(v219, v93 + v89);
          }
          ++v91;
          --v88;
          v89 -= v243;
          v90 -= v243;
          v92 += v243;
        }
        while (v91 < v50 + v88);
        v47 = v239;
        v2 = v240;
        v46 = v215;
        v63 = v232;
        v61 = v238;
        v45 = v223;
        v48 = v242;
      }
    }
LABEL_67:
    if (v50 >= v48)
      goto LABEL_105;
    if (__OFSUB__(v50, v45))
      goto LABEL_206;
    if (v50 - v45 >= v214)
    {
LABEL_104:
      v45 = v223;
LABEL_105:
      if (v50 < v45)
        goto LABEL_201;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v236 = v50;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v46 = sub_24A718E50(0, *((_QWORD *)v46 + 2) + 1, 1, v46);
      v134 = *((_QWORD *)v46 + 2);
      v133 = *((_QWORD *)v46 + 3);
      v49 = v134 + 1;
      if (v134 >= v133 >> 1)
        v46 = sub_24A718E50((char *)(v133 > 1), v134 + 1, 1, v46);
      *((_QWORD *)v46 + 2) = v49;
      v135 = v46 + 32;
      v136 = &v46[16 * v134 + 32];
      v137 = v236;
      *(_QWORD *)v136 = v223;
      *((_QWORD *)v136 + 1) = v137;
      if (v134)
      {
        while (1)
        {
          v138 = v49 - 1;
          if (v49 >= 4)
          {
            v143 = &v135[16 * v49];
            v144 = *((_QWORD *)v143 - 8);
            v145 = *((_QWORD *)v143 - 7);
            v149 = __OFSUB__(v145, v144);
            v146 = v145 - v144;
            if (v149)
              goto LABEL_190;
            v148 = *((_QWORD *)v143 - 6);
            v147 = *((_QWORD *)v143 - 5);
            v149 = __OFSUB__(v147, v148);
            v141 = v147 - v148;
            v142 = v149;
            if (v149)
              goto LABEL_191;
            v150 = v49 - 2;
            v151 = &v135[16 * v49 - 32];
            v153 = *(_QWORD *)v151;
            v152 = *((_QWORD *)v151 + 1);
            v149 = __OFSUB__(v152, v153);
            v154 = v152 - v153;
            if (v149)
              goto LABEL_193;
            v149 = __OFADD__(v141, v154);
            v155 = v141 + v154;
            if (v149)
              goto LABEL_196;
            if (v155 >= v146)
            {
              v173 = &v135[16 * v138];
              v175 = *(_QWORD *)v173;
              v174 = *((_QWORD *)v173 + 1);
              v149 = __OFSUB__(v174, v175);
              v176 = v174 - v175;
              if (v149)
                goto LABEL_200;
              v166 = v141 < v176;
              goto LABEL_142;
            }
          }
          else
          {
            if (v49 != 3)
            {
              v167 = *((_QWORD *)v46 + 4);
              v168 = *((_QWORD *)v46 + 5);
              v149 = __OFSUB__(v168, v167);
              v160 = v168 - v167;
              v161 = v149;
              goto LABEL_136;
            }
            v140 = *((_QWORD *)v46 + 4);
            v139 = *((_QWORD *)v46 + 5);
            v149 = __OFSUB__(v139, v140);
            v141 = v139 - v140;
            v142 = v149;
          }
          if ((v142 & 1) != 0)
            goto LABEL_192;
          v150 = v49 - 2;
          v156 = &v135[16 * v49 - 32];
          v158 = *(_QWORD *)v156;
          v157 = *((_QWORD *)v156 + 1);
          v159 = __OFSUB__(v157, v158);
          v160 = v157 - v158;
          v161 = v159;
          if (v159)
            goto LABEL_195;
          v162 = &v135[16 * v138];
          v164 = *(_QWORD *)v162;
          v163 = *((_QWORD *)v162 + 1);
          v149 = __OFSUB__(v163, v164);
          v165 = v163 - v164;
          if (v149)
            goto LABEL_198;
          if (__OFADD__(v160, v165))
            goto LABEL_199;
          if (v160 + v165 >= v141)
          {
            v166 = v141 < v165;
LABEL_142:
            if (v166)
              v138 = v150;
            goto LABEL_144;
          }
LABEL_136:
          if ((v161 & 1) != 0)
            goto LABEL_194;
          v169 = &v135[16 * v138];
          v171 = *(_QWORD *)v169;
          v170 = *((_QWORD *)v169 + 1);
          v149 = __OFSUB__(v170, v171);
          v172 = v170 - v171;
          if (v149)
            goto LABEL_197;
          if (v172 < v160)
            goto LABEL_15;
LABEL_144:
          v177 = v138 - 1;
          if (v138 - 1 >= v49)
          {
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
            goto LABEL_210;
          }
          if (!*v244)
            goto LABEL_212;
          v178 = v46;
          v179 = &v135[16 * v177];
          v180 = *(_QWORD *)v179;
          v181 = &v135[16 * v138];
          v182 = *((_QWORD *)v181 + 1);
          v183 = v229;
          sub_24A7183D8(*v244 + *(_QWORD *)(v227 + 72) * *(_QWORD *)v179, *v244 + *(_QWORD *)(v227 + 72) * *(_QWORD *)v181, *v244 + *(_QWORD *)(v227 + 72) * v182, v224);
          v229 = v183;
          if (v183)
            goto LABEL_184;
          if (v182 < v180)
            goto LABEL_187;
          if (v138 > *((_QWORD *)v178 + 2))
            goto LABEL_188;
          *(_QWORD *)v179 = v180;
          *(_QWORD *)&v135[16 * v177 + 8] = v182;
          v184 = *((_QWORD *)v178 + 2);
          if (v138 >= v184)
            goto LABEL_189;
          v46 = v178;
          v49 = v184 - 1;
          memmove(&v135[16 * v138], v181 + 16, 16 * (v184 - 1 - v138));
          *((_QWORD *)v178 + 2) = v184 - 1;
          v166 = v184 > 2;
          v47 = v239;
          v2 = v240;
          if (!v166)
            goto LABEL_15;
        }
      }
      v49 = 1;
LABEL_15:
      v48 = v244[1];
      v45 = v236;
      v3 = v237;
      if (v236 >= v48)
      {
        v44 = v213;
        goto LABEL_173;
      }
      continue;
    }
    break;
  }
  if (__OFADD__(v223, v214))
    goto LABEL_209;
  if (v223 + v214 >= v48)
    v95 = v48;
  else
    v95 = v223 + v214;
  if (v95 >= v223)
  {
    if (v50 == v95)
    {
      v45 = v223;
      goto LABEL_105;
    }
    v215 = v46;
    v96 = *(_QWORD *)(v227 + 72);
    v97 = v96 * (v50 - 1);
    v233 = v96;
    v98 = v50 * v96;
    v218 = v95;
    while (2)
    {
      v100 = 0;
      v101 = v223;
      v235 = v98;
      v236 = v50;
      v234 = v97;
LABEL_83:
      v102 = *v244;
      v243 = v98 + v100;
      sub_24A719CEC(v98 + v100 + v102, v245);
      v242 = v97 + v100;
      sub_24A719CEC(v97 + v100 + v102, v63);
      v103 = v237;
      v104 = (void (*)(char *, uint64_t, uint64_t))v237[13];
      v105 = v239;
      v106 = v61;
      v107 = v63;
      v108 = v240;
      v104(v239, v106, v240);
      LOBYTE(v102) = sub_24A779D00();
      v109 = (void (*)(char *, uint64_t))v103[1];
      v109(v105, v108);
      if ((v102 & 1) != 0)
        goto LABEL_100;
      v111 = v239;
      v110 = v240;
      v104(v239, v238, v240);
      v112 = sub_24A779D00();
      v109(v111, v110);
      v113 = v230;
      if ((v112 & 1) != 0 || (v104(v111, v230, v110), v114 = sub_24A779D00(), v109(v111, v110), (v114 & 1) != 0))
      {
LABEL_78:
        v63 = v232;
        sub_24A719D30(v232);
        sub_24A719D30(v245);
        v61 = v238;
        v98 = v235;
        v99 = v236;
        goto LABEL_79;
      }
      v104(v111, v113, v110);
      v107 = v232;
      v115 = sub_24A779D00();
      v109(v111, v110);
      if ((v115 & 1) != 0)
        goto LABEL_100;
      v116 = *(int *)(ViewModel + 36);
      v117 = *(double *)(v245 + v116);
      if (*(_BYTE *)(v245 + v116 + 8))
        v117 = 0.0;
      v118 = v107 + v116;
      if ((*(_BYTE *)(v118 + 8) & 1) != 0)
      {
        v107 = v232;
        if (v117 <= 0.0)
        {
          v119 = v240;
          if (v117 < 0.0)
            goto LABEL_78;
          goto LABEL_95;
        }
LABEL_100:
        sub_24A719D30(v107);
        sub_24A719D30(v245);
        v63 = v107;
        v98 = v235;
      }
      else
      {
        v107 = v232;
        if (*(double *)v118 < v117)
          goto LABEL_100;
        v119 = v240;
        if (v117 < *(double *)v118)
          goto LABEL_78;
LABEL_95:
        v120 = v237;
        v121 = (void (*)(char *, uint64_t, uint64_t))v237[2];
        v122 = v228;
        v121(v228, v245, v119);
        v123 = (uint64_t (*)(char *, uint64_t))v120[11];
        v124 = v123(v122, v119);
        v125 = v222;
        if (v124 != v222
          || (v126 = v228,
              v127 = (void (*)(char *, uint64_t))v237[12],
              v127(v228, v119),
              v220 = (void (*)(char *, _QWORD, uint64_t))*v126,
              v122 = v221,
              v121(v221, v232, v119),
              v123(v122, v119) != v125))
        {
          v109(v122, v119);
          v107 = v232;
          goto LABEL_100;
        }
        v128 = (unint64_t *)v221;
        v127(v221, v119);
        v129 = *v128;
        v63 = v232;
        sub_24A719D30(v232);
        sub_24A719D30(v245);
        v98 = v235;
        if ((unint64_t)v220 >= v129)
        {
          v61 = v238;
          v99 = v236;
LABEL_79:
          v97 = v234;
LABEL_80:
          v50 = v99 + 1;
          v97 += v233;
          v98 += v233;
          if (v50 == v218)
          {
            v50 = v218;
            v47 = v239;
            v2 = v240;
            v46 = v215;
            goto LABEL_104;
          }
          continue;
        }
      }
      break;
    }
    v130 = *v244;
    v61 = v238;
    v97 = v234;
    if (!*v244)
      goto LABEL_211;
    v131 = v130 + v234 + v100;
    sub_24A719D6C(v130 + v98 + v100, v241);
    swift_arrayInitWithTakeFrontToBack();
    sub_24A719D6C(v241, v131);
    v100 -= v233;
    ++v101;
    v99 = v236;
    if (v236 == v101)
      goto LABEL_80;
    goto LABEL_83;
  }
LABEL_210:
  __break(1u);
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  sub_24A77C010();
  __break(1u);
}

void sub_24A717F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, _QWORD, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  double v34;
  char *v35;
  _QWORD *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t (*v39)(char *, uint64_t);
  int v40;
  unint64_t *v41;
  void (*v42)(char *, uint64_t, uint64_t);
  unint64_t v43;
  int v44;
  unint64_t *v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  int v55;
  char *v56;
  uint64_t ViewModel;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;

  v68 = a4;
  v52 = a1;
  v6 = sub_24A779D0C();
  v63 = *(_QWORD **)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v50 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - v11;
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x24BDAC7A8](ViewModel);
  v65 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v50 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v69 = (uint64_t)&v50 - v19;
  v62 = a3;
  v51 = a2;
  if (a3 != a2)
  {
    v20 = *(_QWORD *)(v18 + 72);
    v64 = *MEMORY[0x24BE3FD40];
    v58 = *MEMORY[0x24BE3FD38];
    v55 = *MEMORY[0x24BE3FD28];
    v21 = v20 * (v62 - 1);
    v59 = v20;
    v22 = v20 * v62;
LABEL_6:
    v23 = 0;
    v24 = v52;
    v60 = v22;
    v61 = v21;
    while (1)
    {
      v25 = *v68;
      v67 = v22 + v23;
      sub_24A719CEC(v22 + v23 + v25, v69);
      v66 = v21 + v23;
      sub_24A719CEC(v21 + v23 + v25, (uint64_t)v16);
      v26 = v63;
      v27 = (void (*)(char *, _QWORD, uint64_t))v63[13];
      v27(v12, v64, v6);
      LOBYTE(v25) = sub_24A779D00();
      v28 = (void (*)(char *, uint64_t))v26[1];
      v28(v12, v6);
      if ((v25 & 1) != 0)
        goto LABEL_26;
      v27(v12, v64, v6);
      v29 = (uint64_t)v16;
      v30 = sub_24A779D00();
      v28(v12, v6);
      if ((v30 & 1) != 0 || (v27(v12, v58, v6), v31 = sub_24A779D00(), v28(v12, v6), (v31 & 1) != 0))
      {
LABEL_4:
        sub_24A719D30((uint64_t)v16);
        sub_24A719D30(v69);
        v22 = v60;
        v21 = v61;
LABEL_5:
        v21 += v59;
        v22 += v59;
        if (++v62 == v51)
          return;
        goto LABEL_6;
      }
      v27(v12, v58, v6);
      v32 = sub_24A779D00();
      v28(v12, v6);
      if ((v32 & 1) != 0)
        goto LABEL_26;
      v33 = *(int *)(ViewModel + 36);
      v34 = *(double *)(v69 + v33);
      if (*(_BYTE *)(v69 + v33 + 8))
        v34 = 0.0;
      v35 = &v16[v33];
      if ((v35[8] & 1) != 0)
      {
        if (v34 > 0.0)
          goto LABEL_26;
        if (v34 < 0.0)
          goto LABEL_4;
      }
      else
      {
        if (*(double *)v35 < v34)
          goto LABEL_26;
        if (v34 < *(double *)v35)
          goto LABEL_4;
      }
      v36 = v63;
      v37 = (void (*)(char *, uint64_t, uint64_t))v63[2];
      v38 = v56;
      v37(v56, v69, v6);
      v39 = (uint64_t (*)(char *, uint64_t))v36[11];
      v40 = v39(v38, v6);
      if (v40 != v55)
        break;
      v41 = (unint64_t *)v56;
      v53 = (void (*)(char *, uint64_t))v63[12];
      v53(v56, v6);
      v42 = v37;
      v43 = *v41;
      v38 = v54;
      v42(v54, v29, v6);
      v44 = v39(v38, v6);
      if (v44 != v55)
        break;
      v45 = (unint64_t *)v54;
      v53(v54, v6);
      v46 = *v45;
      v16 = (char *)v29;
      sub_24A719D30(v29);
      sub_24A719D30(v69);
      v47 = v43 >= v46;
      v22 = v60;
      v21 = v61;
      if (v47)
        goto LABEL_5;
LABEL_27:
      v48 = *v68;
      if (!*v68)
      {
        __break(1u);
        return;
      }
      v49 = v48 + v21 + v23;
      sub_24A719D6C(v48 + v22 + v23, v65);
      swift_arrayInitWithTakeFrontToBack();
      sub_24A719D6C(v65, v49);
      v23 -= v59;
      if (v62 == ++v24)
        goto LABEL_5;
    }
    v28(v38, v6);
    v16 = (char *)v29;
LABEL_26:
    sub_24A719D30((uint64_t)v16);
    sub_24A719D30(v69);
    v22 = v60;
    v21 = v61;
    goto LABEL_27;
  }
}

uint64_t sub_24A7183D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(char *, _QWORD, uint64_t);
  char v36;
  void (*v37)(char *, uint64_t);
  unint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  double v45;
  char *v46;
  char *v47;
  uint64_t (*v48)(char *, uint64_t);
  int v49;
  char *v50;
  char **v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  int v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t result;
  uint64_t v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char v69;
  void (*v70)(char *, uint64_t);
  BOOL v71;
  _QWORD *v72;
  uint64_t v73;
  char v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  BOOL v79;
  unint64_t v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t *v89;
  char *v90;
  int v91;
  unint64_t v92;
  unint64_t *v93;
  int v94;
  uint64_t v95;
  void (*v96)(unint64_t *, char *);
  uint64_t (*v97)(unint64_t *, char *);
  void (*v98)(char *, uint64_t, char *);
  int v99;
  char *v100;
  char *v101;
  char *v102;
  unsigned int v103;
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  char *v106;
  unint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  uint64_t ViewModel;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;

  v113 = a3;
  v7 = sub_24A779D0C();
  v8 = *(_QWORD **)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v100 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v101 = (char *)&v95 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v105 = (char *)&v95 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v106 = (char *)&v95 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v95 - v17;
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  MEMORY[0x24BDAC7A8](ViewModel);
  MEMORY[0x24BDAC7A8](v19);
  v111 = (uint64_t)&v95 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v95 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v95 - v26;
  v112 = *(_QWORD *)(v28 + 72);
  if (!v112)
  {
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  if (a2 - a1 == 0x8000000000000000 && v112 == -1)
    goto LABEL_107;
  v29 = v113 - a2;
  if (v113 - a2 == 0x8000000000000000 && v112 == -1)
    goto LABEL_108;
  v30 = (uint64_t)(a2 - a1) / v112;
  v115 = a4;
  v116 = a1;
  v31 = v29 / v112;
  v108 = v8;
  if (v30 >= v29 / v112)
  {
    if (v31 < 0)
      goto LABEL_109;
    v33 = v31 * v112;
    v109 = v25;
    if (a4 < a2 || a2 + v33 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v57 = a4 + v33;
    v114 = a4 + v33;
    v116 = a2;
    v107 = a1;
    if (v33 < 1 || a1 >= a2)
    {
LABEL_63:
      sub_24A718F54(&v116, &v115, (uint64_t *)&v114, type metadata accessor for TrainingLoadViewModel);
      return 1;
    }
    v60 = -v112;
    LODWORD(v105) = *MEMORY[0x24BE3FD40];
    v103 = *MEMORY[0x24BE3FD38];
    v61 = *MEMORY[0x24BE3FD28];
    v106 = (char *)v7;
    v102 = v18;
    v104 = (void (*)(char *, char *, uint64_t))a4;
    v99 = v61;
    while (1)
    {
      sub_24A719CEC(v57 + v60, v111);
      v62 = v60;
      v112 = a2;
      v63 = a2 + v60;
      v64 = a2 + v60;
      v65 = v109;
      sub_24A719CEC(v64, v109);
      v66 = v8;
      v67 = (void (*)(char *, uint64_t, uint64_t))v8[13];
      v68 = v105;
      v67(v18, v105, v7);
      v69 = sub_24A779D00();
      v70 = (void (*)(char *, uint64_t))v66[1];
      v70(v18, v7);
      if ((v69 & 1) != 0)
        break;
      v67(v18, v68, v7);
      v74 = sub_24A779D00();
      v70(v18, v7);
      if ((v74 & 1) != 0)
      {
        v71 = 0;
        v72 = v108;
        v73 = v109;
        goto LABEL_68;
      }
      v81 = v103;
      v67(v18, v103, v7);
      v82 = sub_24A779D00();
      v70(v18, v7);
      v60 = v62;
      if ((v82 & 1) != 0)
      {
        v71 = 0;
        v72 = v108;
        v73 = v109;
        goto LABEL_69;
      }
      v67(v18, v81, v7);
      v83 = v109;
      v84 = sub_24A779D00();
      v70(v18, v7);
      v75 = (unint64_t)v104;
      if ((v84 & 1) != 0)
      {
        v71 = 1;
        v72 = v108;
        v73 = v83;
        v18 = v102;
        goto LABEL_70;
      }
      v85 = *(int *)(ViewModel + 36);
      v86 = *(double *)(v111 + v85);
      if (*(_BYTE *)(v111 + v85 + 8))
        v86 = 0.0;
      v87 = v83 + v85;
      v72 = v108;
      v73 = v83;
      v76 = v112;
      if ((*(_BYTE *)(v87 + 8) & 1) != 0)
      {
        v18 = v102;
        if (v86 <= 0.0)
        {
          if (v86 >= 0.0)
            goto LABEL_96;
LABEL_102:
          v71 = 0;
          goto LABEL_71;
        }
      }
      else
      {
        v18 = v102;
        if (*(double *)v87 >= v86)
        {
          if (v86 >= *(double *)v87)
          {
LABEL_96:
            v88 = v108;
            v89 = (unint64_t *)v101;
            v90 = v106;
            v98 = (void (*)(char *, uint64_t, char *))v108[2];
            v98(v101, v111, v106);
            v97 = (uint64_t (*)(unint64_t *, char *))v88[11];
            v91 = v97(v89, v90);
            if (v91 == v99)
            {
              v96 = (void (*)(unint64_t *, char *))v88[12];
              v96(v89, v90);
              v92 = *v89;
              v93 = (unint64_t *)v100;
              v98(v100, v109, v90);
              v94 = v97(v93, v90);
              if (v94 == v99)
              {
                v96(v93, v90);
                v71 = v92 < *v93;
              }
              else
              {
                v70((char *)v93, (uint64_t)v90);
                v71 = 1;
              }
              v72 = v108;
              v73 = v109;
            }
            else
            {
              v70((char *)v89, (uint64_t)v90);
              v71 = 1;
              v72 = v88;
              v73 = v109;
            }
            goto LABEL_71;
          }
          goto LABEL_102;
        }
      }
      v71 = 1;
LABEL_71:
      v77 = v113;
      v78 = v113 + v60;
      sub_24A719D30(v73);
      sub_24A719D30(v111);
      if (v71)
      {
        if (v77 < v76 || v78 >= v76)
        {
          swift_arrayInitWithTakeFrontToBack();
          v8 = v72;
        }
        else
        {
          v79 = v77 == v76;
          v8 = v72;
          if (!v79)
            swift_arrayInitWithTakeBackToFront();
        }
        v116 += v60;
      }
      else
      {
        v80 = v114;
        v114 += v60;
        if (v77 < v80 || v78 >= v80)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v77 != v80)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v63 = v76;
        v8 = v72;
      }
      v7 = (uint64_t)v106;
      v57 = v114;
      if (v114 > v75)
      {
        a2 = v63;
        v113 = v78;
        if (v63 > v107)
          continue;
      }
      goto LABEL_63;
    }
    v71 = 1;
    v72 = v108;
    v73 = v65;
LABEL_68:
    v60 = v62;
LABEL_69:
    v75 = (unint64_t)v104;
LABEL_70:
    v76 = v112;
    goto LABEL_71;
  }
  if ((v30 & 0x8000000000000000) == 0)
  {
    v32 = v30 * v112;
    if (a4 < a1 || a1 + v32 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v109 = a4 + v32;
    v114 = a4 + v32;
    if (v32 >= 1 && a2 < v113)
    {
      LODWORD(v111) = *MEMORY[0x24BE3FD40];
      LODWORD(v107) = *MEMORY[0x24BE3FD38];
      v103 = *MEMORY[0x24BE3FD28];
      while (1)
      {
        sub_24A719CEC(a2, (uint64_t)v27);
        sub_24A719CEC(a4, (uint64_t)v23);
        v35 = (void (*)(char *, _QWORD, uint64_t))v8[13];
        v35(v18, v111, v7);
        v36 = sub_24A779D00();
        v37 = (void (*)(char *, uint64_t))v8[1];
        v37(v18, v7);
        if ((v36 & 1) != 0)
          goto LABEL_24;
        v35(v18, v111, v7);
        v40 = sub_24A779D00();
        v37(v18, v7);
        if ((v40 & 1) != 0 || (v35(v18, v107, v7), v41 = sub_24A779D00(), v37(v18, v7), (v41 & 1) != 0))
        {
LABEL_31:
          sub_24A719D30((uint64_t)v23);
          sub_24A719D30((uint64_t)v27);
LABEL_32:
          v38 = v116;
          v42 = v115 + v112;
          if (v116 < v115 || v116 >= v42)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v116 != v115)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v115 = v42;
          v39 = a2;
          goto LABEL_47;
        }
        v35(v18, v107, v7);
        v43 = sub_24A779D00();
        v37(v18, v7);
        if ((v43 & 1) != 0)
          goto LABEL_24;
        v44 = *(int *)(ViewModel + 36);
        v45 = *(double *)&v27[v44];
        if (v27[v44 + 8])
          v45 = 0.0;
        v46 = &v23[v44];
        if ((v46[8] & 1) != 0)
        {
          if (v45 > 0.0)
            goto LABEL_24;
          if (v45 < 0.0)
            goto LABEL_31;
        }
        else
        {
          if (*(double *)v46 < v45)
            goto LABEL_24;
          if (v45 < *(double *)v46)
            goto LABEL_31;
        }
        v47 = v106;
        v104 = (void (*)(char *, char *, uint64_t))v8[2];
        v104(v106, v27, v7);
        v48 = (uint64_t (*)(char *, uint64_t))v8[11];
        v49 = v48(v47, v7);
        v50 = v47;
        if (v49 != v103)
          break;
        v51 = (char **)v106;
        v52 = (void (*)(char *, uint64_t))v108[12];
        v52(v106, v7);
        v101 = *v51;
        v53 = v105;
        v104(v105, v23, v7);
        v54 = v48(v53, v7);
        v50 = v53;
        if (v54 != v103)
          break;
        v55 = (unint64_t *)v105;
        v52(v105, v7);
        v56 = *v55;
        sub_24A719D30((uint64_t)v23);
        sub_24A719D30((uint64_t)v27);
        v8 = v108;
        if ((unint64_t)v101 >= v56)
          goto LABEL_32;
LABEL_25:
        v38 = v116;
        v39 = a2 + v112;
        if (v116 < a2 || v116 >= v39)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v116 == a2)
        {
          v38 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_47:
        v116 = v38 + v112;
        a4 = v115;
        if (v115 < v109)
        {
          a2 = v39;
          if (v39 < v113)
            continue;
        }
        goto LABEL_63;
      }
      v37(v50, v7);
      v8 = v108;
LABEL_24:
      sub_24A719D30((uint64_t)v23);
      sub_24A719D30((uint64_t)v27);
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_109:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

char *sub_24A718E50(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D260);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24A718F48(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_24A718F54(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEC5B00]);
}

uint64_t sub_24A718F54(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_24A77C058();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_24A719060(uint64_t a1)
{
  return sub_24A718E50(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24A719074(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_24A77C028();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_24A77C028();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24A63CFF0(&qword_25794D300, &qword_25794D2F0, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2F0);
          v12 = sub_24A719290(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24A64F254(0, &qword_25794D2F8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_24A77C058();
  __break(1u);
  return result;
}

void (*sub_24A719290(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24A7192E4(v6, a2, a3);
  return sub_24A672F68;
}

void (*sub_24A7192E4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24BD19588](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for DownhillRunCountMetricView;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A719350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, char *, uint64_t);
  int v18;
  int v19;
  uint64_t result;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v4 = sub_24A77B80C();
  v5 = *(_QWORD **)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D270);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_24A63CCC0(a1, (uint64_t)v13, &qword_257947ED8);
  sub_24A63CCC0(a2, v15, &qword_257947ED8);
  v16 = (uint64_t (*)(char *, uint64_t, uint64_t))v5[6];
  v17 = (void (*)(char *, char *, uint64_t))v16(v13, 1, v4);
  v18 = v16((char *)v15, 1, v4);
  v19 = v18;
  if ((_DWORD)v17 == 1)
  {
    if (v18 == 1)
      return 0;
  }
  else
  {
    v17 = (void (*)(char *, char *, uint64_t))v5[4];
    v17(v10, v13, v4);
    if (v19 != 1)
    {
LABEL_11:
      v17(v7, (char *)v15, v4);
      sub_24A63C880(&qword_25794BB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      sub_24A77BE24();
      v21 = (void (*)(char *, uint64_t))v5[1];
      v21(v7, v4);
      v21(v10, v4);
      return v23;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
    sub_24A63C880(&qword_25794BB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    sub_24A77BE24();
    ((void (*)(char *, uint64_t))v5[1])(v10, v4);
    result = v23 + 1;
    if (!__OFADD__(v23, 1))
      return result;
    __break(1u);
  }
  ((void (*)(char *, uint64_t, uint64_t))v5[4])(v10, v15, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  sub_24A63C880(&qword_25794BB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_24A77BE24();
  ((void (*)(char *, uint64_t))v5[1])(v10, v4);
  result = v23 - 1;
  if (__OFSUB__(v23, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_24A7195F8(_QWORD *a1)
{
  return sub_24A672138(0, a1[2], 0, a1);
}

uint64_t sub_24A71960C(_QWORD *a1)
{
  return sub_24A67240C(0, a1[2], 0, a1);
}

uint64_t sub_24A719620(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_24A719658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ViewModel;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v8 = v7;
  v43 = a6;
  v44 = a7;
  v14 = sub_24A779CF4();
  v15 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v42 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_24A779D0C();
  v41 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v40 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v45 = *(_QWORD *)(ViewModel - 8);
  MEMORY[0x24BDAC7A8](ViewModel);
  v39 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TrainingLoadViewModelProvider.TaskHolder();
  swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_24A70EF60();
  *(_QWORD *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isFetchingDataForNewDateRange) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__isLoadingWorkoutViewModelForTheFirstTime) = 1;
  v20 = (_QWORD *)(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  *v20 = nullsub_1;
  v20[1] = 0;
  sub_24A7789E0();
  v46 = v15;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v38(v7 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__dayRange, a1, v14);
  v21 = (uint64_t *)(v7
                  + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeAllDayLoadSummaryCollectionSequence);
  *v21 = a2;
  v21[1] = a3;
  v22 = (uint64_t *)(v7
                  + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadSummaryCollectionSequence);
  *v22 = a4;
  v22[1] = a5;
  v23 = (uint64_t *)(v7
                  + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider_makeWorkoutLoadByActivityTypeSummaryCollectionSequence);
  v24 = v43;
  v25 = v44;
  *v23 = v43;
  v23[1] = v25;
  *(_BYTE *)(v7 + 24) = 0;
  v26 = (uint64_t)v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x24BE3FD40], v47);
  v27 = (uint64_t)v42;
  v47 = a1;
  v28 = a1;
  v29 = (uint64_t)v39;
  v38((uint64_t)v42, v28, v48);
  sub_24A6E8EE8(a2);
  sub_24A6E8EE8(a4);
  sub_24A6E8EE8(v24);
  TrainingLoadViewModel.init(dataType:dayRange:chronologicalTrainingLoadDaySummaries:)(v26, v27, MEMORY[0x24BEE4AF8], v29);
  swift_getKeyPath();
  v49 = v8;
  sub_24A63C880(&qword_25794CD78, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadViewModelProvider, (uint64_t)&protocol conformance descriptor for TrainingLoadViewModelProvider);
  sub_24A7789BC();
  swift_release();
  v49 = v8;
  swift_getKeyPath();
  sub_24A7789D4();
  swift_release();
  v30 = (unint64_t *)(v8 + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__viewModels);
  swift_beginAccess();
  v31 = *v30;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v30 = v31;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v31 = sub_24A64DA18(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
    *v30 = v31;
  }
  v34 = *(_QWORD *)(v31 + 16);
  v33 = *(_QWORD *)(v31 + 24);
  if (v34 >= v33 >> 1)
  {
    v31 = sub_24A64DA18(v33 > 1, v34 + 1, 1, v31);
    *v30 = v31;
  }
  *(_QWORD *)(v31 + 16) = v34 + 1;
  sub_24A719D6C(v29, v31+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v34);
  swift_endAccess();
  swift_getKeyPath();
  v49 = v8;
  sub_24A7789BC();
  swift_release();
  v35 = *(void (**)(uint64_t))(v8
                                       + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  swift_getKeyPath();
  v49 = v8;
  swift_retain();
  sub_24A7789BC();
  swift_release();
  v36 = swift_bridgeObjectRetain();
  v35(v36);
  swift_release();
  swift_bridgeObjectRelease();
  v49 = v8;
  swift_getKeyPath();
  sub_24A7789C8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v48);
  return v8;
}

uint64_t _s9WorkoutUI29TrainingLoadViewModelProviderC8dayRange11healthStore7optionsAC13HealthBalance012GregorianDayI0V_So08HKHealthK0CAA0cdefG7OptionsVtcfC_0(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)@<X0>(uint64_t@<X8>);
  uint64_t v16;
  uint64_t (*v17)@<X0>(uint64_t@<X8>);
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_24A779CF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a3;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  v27 = v7;
  v28 = v6;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v25 = v9;
  v29 = a1;
  v14(v9, a1, v6);
  v15 = 0;
  v16 = 0;
  if ((v10 & 4) != 0)
  {
    swift_retain();
    v15 = sub_24A71A940;
    v16 = v11;
  }
  v26 = v11;
  if ((v10 & 1) != 0)
  {
    swift_retain();
    v17 = sub_24A71A960;
    v18 = v12;
    if ((v10 & 2) != 0)
      goto LABEL_5;
LABEL_7:
    v19 = 0;
    v20 = 0;
    goto LABEL_8;
  }
  v17 = 0;
  v18 = 0;
  if ((v10 & 2) == 0)
    goto LABEL_7;
LABEL_5:
  swift_retain();
  v19 = sub_24A71A980;
  v20 = v13;
LABEL_8:
  type metadata accessor for TrainingLoadViewModelProvider();
  swift_allocObject();
  v21 = a2;
  v22 = sub_24A719658((uint64_t)v25, (uint64_t)v15, v16, (uint64_t)v17, v18, (uint64_t)v19, v20);
  sub_24A719EC0((uint64_t)v19);
  sub_24A719EC0((uint64_t)v17);
  sub_24A719EC0((uint64_t)v15);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  return v22;
}

uint64_t sub_24A719CEC(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 16))(a2, a1, ViewModel);
  return a2;
}

uint64_t sub_24A719D30(uint64_t a1)
{
  uint64_t ViewModel;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 8))(a1, ViewModel);
  return a1;
}

uint64_t sub_24A719D6C(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 32))(a2, a1, ViewModel);
  return a2;
}

void sub_24A719DB8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 24) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_24A719DC8()
{
  uint64_t v0;

  return sub_24A70E0DC(v0);
}

uint64_t sub_24A719DD0()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_24A719DF8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24A719E1C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A719E48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_24A701444;
  return sub_24A714E64(a1, v4, v5, v7, v6);
}

uint64_t sub_24A719EC0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_24A719ED4()
{
  unint64_t result;

  result = qword_25794CDD0;
  if (!qword_25794CDD0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadViewModelProviderOptions, &type metadata for TrainingLoadViewModelProviderOptions);
    atomic_store(result, (unint64_t *)&qword_25794CDD0);
  }
  return result;
}

unint64_t sub_24A719F1C()
{
  unint64_t result;

  result = qword_25794CDD8;
  if (!qword_25794CDD8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadViewModelProviderOptions, &type metadata for TrainingLoadViewModelProviderOptions);
    atomic_store(result, (unint64_t *)&qword_25794CDD8);
  }
  return result;
}

unint64_t sub_24A719F64()
{
  unint64_t result;

  result = qword_25794CDE0;
  if (!qword_25794CDE0)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadViewModelProviderOptions, &type metadata for TrainingLoadViewModelProviderOptions);
    atomic_store(result, (unint64_t *)&qword_25794CDE0);
  }
  return result;
}

unint64_t sub_24A719FAC()
{
  unint64_t result;

  result = qword_25794CDE8;
  if (!qword_25794CDE8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for TrainingLoadViewModelProviderOptions, &type metadata for TrainingLoadViewModelProviderOptions);
    atomic_store(result, (unint64_t *)&qword_25794CDE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadViewModelProviderOptions()
{
  return &type metadata for TrainingLoadViewModelProviderOptions;
}

uint64_t sub_24A71A000()
{
  return type metadata accessor for TrainingLoadViewModelProvider();
}

uint64_t sub_24A71A008()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_24A779CF4();
  if (v1 <= 0x3F)
  {
    result = sub_24A7789EC();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for TrainingLoadViewModelProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.dayRange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.dayRange.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.dayRange.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModels.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModels.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModels.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of TrainingLoadViewModelProvider.startQuery(isFaking:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t type metadata accessor for TrainingLoadViewModelProvider.TaskHolder()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for TrainingLoadViewModelProvider.TaskType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24A71A1F0 + 4 * byte_24A786055[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24A71A224 + 4 * byte_24A786050[v4]))();
}

uint64_t sub_24A71A224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A71A22C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A71A234);
  return result;
}

uint64_t sub_24A71A240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A71A248);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24A71A24C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A71A254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadViewModelProvider.TaskType()
{
  return &type metadata for TrainingLoadViewModelProvider.TaskType;
}

unint64_t sub_24A71A274()
{
  unint64_t result;

  result = qword_25794D258;
  if (!qword_25794D258)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A78641C, &type metadata for TrainingLoadViewModelProvider.TaskType);
    atomic_store(result, (unint64_t *)&qword_25794D258);
  }
  return result;
}

uint64_t sub_24A71A2B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A71A2DC()
{
  uint64_t v0;

  return sub_24A70E088(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_24A71A2E8()
{
  uint64_t v0;

  return sub_24A70E018(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_24A71A2F4()
{
  uint64_t v0;

  return sub_24A70DD64(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_24A71A300()
{
  return swift_deallocObject();
}

uint64_t sub_24A71A318()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A71A33C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_24A71A36C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  v2 = (_QWORD *)(v0[2] + OBJC_IVAR____TtC9WorkoutUI29TrainingLoadViewModelProvider__unitTest_updatedViewModels);
  *v2 = v0[3];
  v2[1] = v1;
  swift_retain();
  return swift_release();
}

uint64_t sub_24A71A3B4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

BOOL sub_24A71A3D8(uint64_t a1)
{
  return sub_24A716718(a1);
}

uint64_t sub_24A71A3F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_24A712D5C(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_251BFBC00, (uint64_t)&unk_25794D2A0);
}

uint64_t sub_24A71A420()
{
  uint64_t v0;

  return sub_24A70E214(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(uint64_t (**)(uint64_t (*)(), uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_24A71A430()
{
  return swift_deallocObject();
}

uint64_t sub_24A71A444()
{
  return sub_24A71A4D4((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_24A70E504);
}

uint64_t objectdestroy_88Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_24A778854();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24A71A4C8()
{
  return sub_24A71A4D4((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_24A70E804);
}

uint64_t sub_24A71A4D4(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_24A778854() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), v1 + ((v2 + 25) & ~v2));
}

uint64_t sub_24A71A51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794D290) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + v7 + 8);
  v14 = *(_QWORD *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_24A70185C;
  return sub_24A7142B4(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_24A71A5F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_24A712D5C(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_251BFBCA0, (uint64_t)&unk_25794D2C0);
}

uint64_t sub_24A71A620()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A71A644()
{
  return swift_deallocObject();
}

uint64_t sub_24A71A658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794D290) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + v7 + 8);
  v14 = *(_QWORD *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_24A70185C;
  return sub_24A712F48(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_24A71A730(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_24A712D5C(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_251BFBD40, (uint64_t)&unk_25794D2D0);
}

uint64_t sub_24A71A75C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_99Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D290);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A71A820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794D290) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + v7 + 8);
  v14 = *(_QWORD *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_24A70185C;
  return sub_24A711A64(a1, v8, v9, v10, v11, v12, v13, v14);
}

void sub_24A71A8F8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

void sub_24A71A904(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 26);
}

void sub_24A71A910(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

uint64_t sub_24A71A91C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24A71A940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A710A84(*(_QWORD *)(v1 + 16), MEMORY[0x24BE3FD38], a1);
}

uint64_t sub_24A71A960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A710A84(*(_QWORD *)(v1 + 16), MEMORY[0x24BE3FD40], a1);
}

uint64_t sub_24A71A980(uint64_t a1)
{
  uint64_t v1;

  return sub_24A710C00(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_24A71A988(_QWORD *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *(_BYTE *)(v1 + 24);
  v3 = (_BYTE *)(*(_QWORD *)(v1 + 16) + *a1);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_24A71A9E0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_24A70FBE0(v0);
}

uint64_t sub_24A71AA7C()
{
  return sub_24A70FAD4();
}

void sub_24A71AA90()
{
  sub_24A719DB8();
}

double CGFloat.pixelsToPoints()(double a1)
{
  id v2;
  double v3;
  double v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v2, sel_scale);
  v4 = v3;

  return a1 / v4;
}

uint64_t sub_24A71AB04(uint64_t *a1, uint64_t (**a2)())
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *a2 = sub_24A6433A4;
  a2[1] = (uint64_t (*)())v5;
  return result;
}

uint64_t TrainingLoadWorkoutsAddUpView.onNext.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t TrainingLoadWorkoutsAddUpView.onNext.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TrainingLoadWorkoutsAddUpView.onNext.modify())()
{
  return nullsub_1;
}

uint64_t TrainingLoadWorkoutsAddUpView.init(onNext:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_24A71ABE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD);
  void (*v26)(_QWORD, _QWORD);
  id v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD);
  void (*v30)(_QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void (*)(_QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(_QWORD, _QWORD);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_QWORD, _QWORD);
  uint64_t v81;
  void (*v82)(_QWORD, _QWORD);
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  void (*v95)(_QWORD, _QWORD);
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(_QWORD, _QWORD);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(_QWORD, _QWORD);
  void (*v112)(_QWORD, _QWORD);
  uint64_t v113;

  v103 = a1;
  v90 = sub_24A779CAC();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)v84 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_24A77AE70();
  v87 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v92 = (char *)v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v3);
  v91 = (char *)v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_24A77AEB8();
  v86 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v97 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949EF8);
  MEMORY[0x24BDAC7A8](v6);
  v105 = (void (*)(char *))((char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D308);
  MEMORY[0x24BDAC7A8](v8);
  v96 = (char *)v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v108 = (uint64_t)v84 - v11;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D310);
  v102 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v93 = (uint64_t)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v99 = (uint64_t)v84 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v106 = (uint64_t)v84 - v16;
  v17 = sub_24A778584();
  MEMORY[0x24BDAC7A8](v17);
  v104 = sub_24A778548();
  v109 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v19 = (char *)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v110 = (char *)v84 - v21;
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v22 = (id)qword_2544D6158;
  sub_24A77856C();

  v23 = (id)qword_2544D6158;
  v24 = sub_24A77856C();
  v26 = v25;

  v27 = (id)qword_2544D6158;
  v28 = sub_24A77856C();
  v30 = v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_24A780450;
  v32 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE0D00];
  v33 = sub_24A66952C();
  *(_QWORD *)(v31 + 32) = v24;
  *(_QWORD *)(v31 + 40) = v26;
  *(_QWORD *)(v31 + 96) = v32;
  *(_QWORD *)(v31 + 104) = v33;
  *(_QWORD *)(v31 + 64) = v33;
  *(_QWORD *)(v31 + 72) = v28;
  v95 = (void (*)(_QWORD, _QWORD))v28;
  *(_QWORD *)(v31 + 80) = v30;
  swift_bridgeObjectRetain();
  v101 = v30;
  swift_bridgeObjectRetain();
  sub_24A77B98C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A778578();
  v34 = v110;
  sub_24A778554();
  v35 = v109;
  v36 = v104;
  v94 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  v94(v19, v34, v104);
  v111 = (void (*)(_QWORD, _QWORD))v24;
  v112 = v26;
  v37 = sub_24A7788D8();
  v38 = *(void (**)(void (*)(_QWORD), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v39 = (uint64_t)v105;
  v38((void (*)(_QWORD))v105, 1, 1, v37);
  sub_24A63C880(&qword_25794D318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
  sub_24A645928();
  v40 = v108;
  sub_24A7785D8();
  sub_24A63CD04(v39, &qword_257949EF8);
  v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v41(v19, v36);
  swift_bridgeObjectRelease();
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
  v43 = v36;
  if (v42(v40, 1, v107) == 1)
  {
    v44 = v110;
    swift_bridgeObjectRelease();
    v45 = v108;
    v46 = v109;
  }
  else
  {
    sub_24A71BE30(v108, v106);
    v94(v19, v110, v36);
    v111 = v95;
    v112 = v101;
    v47 = (uint64_t)v105;
    v38((void (*)(_QWORD))v105, 1, 1, v37);
    v48 = (uint64_t)v96;
    sub_24A7785D8();
    sub_24A63CD04(v47, &qword_257949EF8);
    v41(v19, v43);
    swift_bridgeObjectRelease();
    if (v42(v48, 1, v107) != 1)
    {
      sub_24A71BE30(v48, v99);
      v50 = v93;
      sub_24A63CCC0(v106, v93, &qword_25794D310);
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      v84[0] = swift_getKeyPath();
      LODWORD(v108) = *MEMORY[0x24BDF1878];
      v52 = v86;
      v105 = *(void (**)(char *))(v86 + 104);
      v53 = v97;
      v54 = v98;
      v105(v97);
      LODWORD(v102) = *MEMORY[0x24BDF1668];
      v55 = v102;
      v56 = sub_24A77ADC8();
      v57 = *(_QWORD *)(v56 - 8);
      v101 = *(void (**)(_QWORD, _QWORD))(v57 + 104);
      v58 = (uint64_t)v91;
      v59 = v55;
      v60 = v56;
      v85 = v56;
      v101(v91, v59);
      v96 = *(char **)(v57 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v96)(v58, 0, 1, v60);
      sub_24A77AE34();
      sub_24A63CD04(v58, &qword_257946FD0);
      v95 = *(void (**)(_QWORD, _QWORD))(v52 + 8);
      v95(v53, v54);
      LODWORD(v94) = *MEMORY[0x24BDF17C8];
      v61 = v87;
      v86 = *(_QWORD *)(v87 + 104);
      v62 = v92;
      v63 = v100;
      ((void (*)(char *))v86)(v92);
      sub_24A77AE88();
      swift_release();
      v87 = *(_QWORD *)(v61 + 8);
      ((void (*)(char *, uint64_t))v87)(v62, v63);
      sub_24A77AE04();
      v64 = sub_24A77AE58();
      swift_release();
      v113 = v64;
      v84[1] = sub_24A63CFF0(&qword_25794D328, &qword_25794D310, MEMORY[0x24BEE1BC0]);
      v65 = (void (*)(_QWORD, _QWORD))sub_24A778560();
      v84[2] = sub_24A71BE94();
      sub_24A7785B4();
      v65(&v111, 0);
      sub_24A63CD04(v50, &qword_25794D310);
      sub_24A63CCC0(v106, v50, &qword_25794D310);
      v66 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v66);
      swift_getKeyPath();
      v67 = v89;
      v68 = v88;
      v69 = v90;
      (*(void (**)(char *, _QWORD, unint64_t))(v89 + 104))(v88, *MEMORY[0x24BE3FC50], v90);
      v70 = TrainingLoadBand.color.getter();
      (*(void (**)(char *, unint64_t))(v67 + 8))(v68, v69);
      v113 = v70;
      v71 = v110;
      v72 = (void (*)(_QWORD, _QWORD))sub_24A778560();
      v90 = sub_24A71BF70();
      sub_24A7785B4();
      v72(&v111, 0);
      sub_24A63CD04(v50, &qword_25794D310);
      v73 = v99;
      sub_24A63CCC0(v99, v50, &qword_25794D310);
      v74 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v74);
      swift_getKeyPath();
      v75 = v97;
      v76 = v98;
      ((void (*)(char *, _QWORD, uint64_t))v105)(v97, v108, v98);
      v77 = v85;
      ((void (*)(uint64_t, _QWORD, uint64_t))v101)(v58, v102, v85);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v96)(v58, 0, 1, v77);
      sub_24A77AE34();
      sub_24A63CD04(v58, &qword_257946FD0);
      v95(v75, v76);
      v78 = v100;
      ((void (*)(char *, _QWORD, uint64_t))v86)(v62, v94, v100);
      sub_24A77AE88();
      swift_release();
      ((void (*)(char *, uint64_t))v87)(v62, v78);
      v43 = v104;
      sub_24A77AE04();
      v79 = sub_24A77AE58();
      swift_release();
      v113 = v79;
      v80 = (void (*)(_QWORD, _QWORD))sub_24A778560();
      sub_24A7785B4();
      v80(&v111, 0);
      sub_24A63CD04(v50, &qword_25794D310);
      sub_24A63CCC0(v73, v50, &qword_25794D310);
      v81 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v81);
      swift_getKeyPath();
      v113 = sub_24A77B380();
      v82 = (void (*)(_QWORD, _QWORD))sub_24A778560();
      sub_24A7785B4();
      v82(&v111, 0);
      sub_24A63CD04(v50, &qword_25794D310);
      sub_24A63CD04(v73, &qword_25794D310);
      sub_24A63CD04(v106, &qword_25794D310);
      v46 = v109;
      v49 = v71;
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v46 + 32))(v103, v49, v43);
    }
    v44 = v110;
    sub_24A63CD04(v106, &qword_25794D310);
    v45 = v48;
    v46 = v109;
  }
  sub_24A63CD04(v45, &qword_25794D308);
  v49 = v44;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v46 + 32))(v103, v49, v43);
}

uint64_t sub_24A71B914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_24A77B974() & 1;
}

uint64_t TrainingLoadWorkoutsAddUpView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E60);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946E68);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v12 = v1[1];
  *(_QWORD *)v11 = sub_24A77A9FC();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v14 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257946E78) + 44)];
  v30 = v13;
  v32 = v13;
  v33 = v12;
  sub_24A77AC9C();
  type metadata accessor for TrainingLoadOnboardingCore();
  sub_24A63C880((unint64_t *)&qword_257946E80, (uint64_t (*)(uint64_t))type metadata accessor for TrainingLoadOnboardingCore, (uint64_t)&protocol conformance descriptor for TrainingLoadOnboardingCore);
  sub_24A77A3A8();
  v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v15(v5, v8, v2);
  v15(v14, v5, v2);
  v16 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257946E88) + 48)];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v8, v2);
  v17(v5, v2);
  v18 = sub_24A77A9FC();
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v19 = (id)qword_2544D6158;
  v20 = sub_24A77856C();
  v22 = v21;

  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v30;
  *(_QWORD *)(v23 + 24) = v12;
  swift_retain();
  v24 = sub_24A77A480();
  v25 = MEMORY[0x24BD1831C]((2 * v24));
  v26 = sub_24A77A618();
  v27 = v31;
  sub_24A63CCC0((uint64_t)v11, v31, &qword_257946E68);
  v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257946E70) + 36);
  *(_QWORD *)v28 = v20;
  *(_QWORD *)(v28 + 8) = v22;
  *(_QWORD *)(v28 + 16) = sub_24A6433A4;
  *(_QWORD *)(v28 + 24) = v23;
  *(_QWORD *)(v28 + 32) = v26;
  *(_QWORD *)(v28 + 40) = 0;
  *(_BYTE *)(v28 + 48) = 1;
  *(_BYTE *)(v28 + 49) = v25;
  *(_QWORD *)(v28 + 56) = v18;
  return sub_24A63CD04((uint64_t)v11, &qword_257946E68);
}

uint64_t sub_24A71BC78@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OnboardingCore;
  uint64_t result;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)qword_2544D6158;
  v3 = sub_24A77856C();
  v5 = v4;

  OnboardingCore = type metadata accessor for TrainingLoadOnboardingCore();
  result = sub_24A71ABE0((uint64_t)a1 + *(int *)(OnboardingCore + 24));
  *a1 = 0xD00000000000002ALL;
  a1[1] = 0x800000024A78D980;
  a1[2] = v3;
  a1[3] = v5;
  return result;
}

uint64_t sub_24A71BD88@<X0>(_QWORD *a1@<X8>)
{
  return sub_24A71BC78(a1);
}

uint64_t sub_24A71BD90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A71BDB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A71BDC8@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_24A67E1CC;
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

ValueMetadata *type metadata accessor for TrainingLoadWorkoutsAddUpView()
{
  return &type metadata for TrainingLoadWorkoutsAddUpView;
}

uint64_t sub_24A71BE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24A71BE78()
{
  sub_24A77853C();
  __break(1u);
}

unint64_t sub_24A71BE94()
{
  unint64_t result;

  result = qword_25794D320;
  if (!qword_25794D320)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEACD0], MEMORY[0x24BDEACE0]);
    atomic_store(result, (unint64_t *)&qword_25794D320);
  }
  return result;
}

void sub_24A71BED8()
{
  sub_24A71BE94();
  sub_24A7785C0();
  __break(1u);
}

uint64_t sub_24A71BEFC()
{
  return 8;
}

uint64_t sub_24A71BF08()
{
  return swift_release();
}

uint64_t sub_24A71BF10(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24A71BF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A71B914(a1, a2, a3, &qword_25794D340) & 1;
}

uint64_t sub_24A71BF3C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_25794D340);
}

_QWORD *sub_24A71BF48(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_24A71BF54()
{
  sub_24A778530();
  __break(1u);
}

unint64_t sub_24A71BF70()
{
  unint64_t result;

  result = qword_25794D330;
  if (!qword_25794D330)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEACB8], MEMORY[0x24BDEACC8]);
    atomic_store(result, (unint64_t *)&qword_25794D330);
  }
  return result;
}

void sub_24A71BFB4()
{
  sub_24A71BF70();
  sub_24A7785C0();
  __break(1u);
}

uint64_t sub_24A71BFD8()
{
  return 8;
}

uint64_t sub_24A71BFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A71B914(a1, a2, a3, &qword_25794D338) & 1;
}

uint64_t sub_24A71C004(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_25794D338);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_24A77B920();
}

ValueMetadata *type metadata accessor for EffortGraphLayout()
{
  return &type metadata for EffortGraphLayout;
}

double sub_24A71C074(uint64_t a1)
{
  double *v1;
  double v2;

  v2 = 3.0;
  if ((unint64_t)(a1 - 1) <= 7)
    v2 = dbl_24A7865E8[a1 - 1];
  return ((double)a1 + -1.0) * ((*v1 + v1[2] * -3.0) / 10.0) + v1[2] * v2;
}

double sub_24A71C0C8(uint64_t a1)
{
  double *v1;
  double v2;

  v2 = 3.0;
  if ((unint64_t)(a1 - 1) <= 7)
    v2 = dbl_24A7865E8[a1 - 1];
  return (((double)a1 + -1.0) * ((*v1 - v1[2] * 3.0) / 10.0) + v1[2] * v2)
       / (v1[2] * 3.0 + (*v1 - v1[2] * 3.0) / 10.0 * 9.0);
}

uint64_t sub_24A71C12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t result;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B020);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A7794D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v46 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - v17;
  sub_24A7798B0();
  v20 = v19;
  v21 = sub_24A7798C8();
  v22 = MEMORY[0x24BEE4AF8];
  v54 = *(_QWORD *)(a1 + 24);
  v55 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(v54 + 16);
  swift_bridgeObjectRetain();
  v53 = v23;
  if (!v23)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v55 = v22;
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = a1;
    *(double *)(v41 + 24) = a3;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D360);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B038);
    sub_24A63CFF0(&qword_25794D368, &qword_25794D360, MEMORY[0x24BEE12D8]);
    sub_24A63CFF0(&qword_25794B030, &qword_25794B038, MEMORY[0x24BDB8118]);
    sub_24A71F2CC();
    v42 = v47;
    v43 = sub_24A77B5CC();
    MEMORY[0x24BDAC7A8](v43);
    *((double *)&v46 - 4) = a3;
    *((double *)&v46 - 3) = a4;
    v45 = a1;
    sub_24A77A108();
    sub_24A6BF324(&qword_25794B028, &qword_25794B020, &qword_25794B030, &qword_25794B038);
    v44 = v50;
    sub_24A77A0C0();
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v42, v44);
  }
  v46 = a1;
  v24 = 0;
  v25 = (v20 + v20) / (double)v21;
  v26 = a3 - v25;
  v27 = v25 + a4;
  v51 = v12;
  result = v54;
  while (v24 < *(_QWORD *)(result + 16))
  {
    v30 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v31 = *(_QWORD *)(v10 + 72);
    v32 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v32(v18, result + v30 + v31 * v24, v9);
    sub_24A7794CC();
    v34 = v33;
    v32(v15, (unint64_t)v18, v9);
    if (v26 > v34)
    {
      v29 = *(void (**)(char *, uint64_t))(v10 + 8);
      v29(v15, v9);
    }
    else
    {
      sub_24A7794CC();
      v36 = v35;
      v29 = *(void (**)(char *, uint64_t))(v10 + 8);
      v29(v15, v9);
      if (v36 <= v27)
      {
        v52 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v52(v12, v18, v9);
        v37 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24A671CF0(0, *(_QWORD *)(v37 + 16) + 1, 1);
          v37 = v55;
        }
        v39 = *(_QWORD *)(v37 + 16);
        v38 = *(_QWORD *)(v37 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_24A671CF0(v38 > 1, v39 + 1, 1);
          v37 = v55;
        }
        *(_QWORD *)(v37 + 16) = v39 + 1;
        v40 = v37 + v30 + v39 * v31;
        v12 = v51;
        v52((char *)v40, v51, v9);
        v55 = v37;
        goto LABEL_5;
      }
    }
    v29(v18, v9);
LABEL_5:
    ++v24;
    result = v54;
    if (v53 == v24)
    {
      v22 = v55;
      a1 = v46;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24A71C55C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[16];
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v29 = a2;
  v34 = a3;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B058);
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B138);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v26 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A7794D8();
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - v15;
  sub_24A6BB758((uint64_t)&v25 - v15, a4);
  sub_24A6BB758((uint64_t)v13, a5);
  v17 = *(_QWORD *)(a1 + 24);
  v36 = v16;
  v37 = v13;
  swift_bridgeObjectRetain();
  sub_24A70CF70((uint64_t (*)(_QWORD))sub_24A71F2A8, (uint64_t)v35, v17);
  v41 = v18;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D360);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B070);
  sub_24A63CFF0(&qword_25794D368, &qword_25794D360, MEMORY[0x24BEE12D8]);
  sub_24A63CFF0(&qword_25794B068, &qword_25794B070, MEMORY[0x24BDB8118]);
  sub_24A71F2CC();
  sub_24A77B5CC();
  v19 = v29[1];
  v38 = *v29;
  v39 = v19;
  v40 = *((_QWORD *)v29 + 4);
  sub_24A6BF324(&qword_25794B060, &qword_25794B058, &qword_25794B068, &qword_25794B070);
  v20 = v26;
  v21 = v31;
  sub_24A77A09C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v34, v20, v32);
  v22 = v28;
  v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v13, v28);
  return ((uint64_t (*)(char *, uint64_t))v23)(v16, v22);
}

uint64_t sub_24A71C830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v48 = a3;
  v52 = a4;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D348);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D350);
  v44 = *(_QWORD *)(v9 - 8);
  v10 = v44;
  MEMORY[0x24BDAC7A8](v9);
  v46 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v44 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v53 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v44 - v19;
  v49 = sub_24A7794D8();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A6BB758((uint64_t)v22, a5);
  sub_24A7794CC();
  v24 = v23;
  v25 = *(double *)(a1 + 48);
  sub_24A7794B4();
  sub_24A71E7FC(*(double *)&a2, (uint64_t)v20, v24, v25, v26);
  v27 = *(void **)(a1 + 16);
  sub_24A7794CC();
  v29 = v28;
  sub_24A7794B4();
  v45 = v14;
  sub_24A71EB3C(v27, a2, v48, (uint64_t)v14, v29, v30);
  v31 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v32 = v53;
  v31(v53, v20, v15);
  v33 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v34 = v46;
  v33(v46, v14, v9);
  sub_24A77A2E8();
  v35 = v50;
  v31(v50, v32, v15);
  sub_24A77A354();
  sub_24A6BF65C();
  sub_24A6BF6E0();
  v36 = v51;
  v37 = &v35[*(int *)(v51 + 48)];
  v33(v37, v34, v9);
  v38 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v52, v35, v15);
  v39 = v38 + *(int *)(v36 + 48);
  v40 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v39, v37, v9);
  v41 = *(void (**)(char *, uint64_t))(v40 + 8);
  v41(v45, v9);
  v42 = *(void (**)(char *, uint64_t))(v16 + 8);
  v42(v20, v15);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v49);
  v41(v34, v9);
  return ((uint64_t (*)(char *, uint64_t))v42)(v53, v15);
}

uint64_t sub_24A71CB30@<X0>(uint64_t a1@<X0>, double a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  double v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v52 = a3;
  v50 = a2;
  v57 = a4;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D390);
  MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B0B0);
  v46 = *(_QWORD *)(v8 - 8);
  v9 = v46;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
  v45 = *(_QWORD *)(v14 - 8);
  v15 = v45;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v44 - v19;
  v55 = sub_24A7794D8();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A6BB758((uint64_t)v22, a5);
  sub_24A7794CC();
  v24 = v23;
  v25 = *(double *)(a1 + 48);
  sub_24A7794B4();
  v49 = v20;
  v26 = *(_QWORD *)&v50;
  sub_24A71E7FC(v50, (uint64_t)v20, v24, v25, v27);
  sub_24A7794CC();
  v29 = v28;
  sub_24A7794B4();
  v47 = v13;
  sub_24A71EF34(v26, v52, (uint64_t)v13, v29, v30);
  v31 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v48 = v17;
  v31(v17, v20, v14);
  v32 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v33 = v51;
  v32(v51, v13, v8);
  sub_24A77A2E8();
  v34 = v54;
  v31(v54, v17, v14);
  sub_24A77A354();
  sub_24A6BF65C();
  v35 = v56;
  v36 = &v34[*(int *)(v56 + 48)];
  v32(v36, v33, v8);
  v37 = v45;
  v38 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v57, v34, v14);
  v39 = v38 + *(int *)(v35 + 48);
  v40 = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v39, v36, v8);
  v41 = *(void (**)(char *, uint64_t))(v40 + 8);
  v41(v47, v8);
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v49, v14);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v55);
  v41(v33, v8);
  return ((uint64_t (*)(char *, uint64_t))v42)(v48, v14);
}

uint64_t sub_24A71CE30()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D398);
  sub_24A71F400();
  return sub_24A77A210();
}

uint64_t sub_24A71CE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t);
  _QWORD v54[4];
  void (*v55)(char *);
  unint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;

  v57 = a2;
  v74 = a3;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D3A8);
  MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_24A77A2D0();
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A560);
  v71 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v64 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D3B0);
  v79 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v66 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v68 = (char *)v54 - v9;
  v78 = sub_24A77B320();
  v62 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A568);
  MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v13);
  v55 = (void (*)(char *))((char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v54[1] = (char *)v54 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v54[2] = (char *)v54 - v18;
  v60 = sub_24A77A264();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D3B8);
  v81 = *(_QWORD **)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v75 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v80 = (char *)v54 - v23;
  v59 = 0x800000024A78DB90;
  sub_24A77A9C0();
  v54[3] = a1;
  sub_24A7794CC();
  v85 = v24;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = 0x800000024A78DBB0;
  sub_24A77A9C0();
  v85 = *(_QWORD *)(v57 + 48);
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  sub_24A7794B4();
  v85 = v25;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v85 = 0;
  v86 = 0xE000000000000000;
  sub_24A77BA4C();
  sub_24A77BBFC();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A24C();
  LODWORD(v57) = *MEMORY[0x24BDF3C28];
  v55 = *(void (**)(char *))(v62 + 104);
  v26 = v76;
  v55(v76);
  v85 = MEMORY[0x24BD189AC](v26, 0.192156863, 0.192156863, 0.192156863, 1.0);
  v27 = v75;
  v28 = v60;
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v20, v28);
  v62 = v81[4];
  ((void (*)(char *, char *, uint64_t))v62)(v80, v27, v77);
  sub_24A77A9C0();
  sub_24A7794CC();
  v85 = v29;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  sub_24A7794B4();
  v85 = v30;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v85 = 0;
  v86 = 0xE000000000000000;
  sub_24A77BA4C();
  sub_24A77BBFC();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v63;
  sub_24A77A2B8();
  sub_24A77A408();
  v32 = MEMORY[0x24BDB8230];
  v33 = v64;
  v34 = v65;
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)&v85);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v34);
  v35 = v76;
  ((void (*)(char *, _QWORD, uint64_t))v55)(v76, v57, v78);
  v36 = MEMORY[0x24BD189AC](v35, 0.31372549, 0.31372549, 0.31372549, 1.0);
  v83 = v32;
  v84 = v36;
  v82 = v34;
  swift_getOpaqueTypeConformance2();
  v37 = v66;
  v38 = v69;
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v33, v38);
  v39 = v79;
  v40 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  v41 = v68;
  v42 = v70;
  v40(v68, v37, v70);
  v43 = (void (*)(char *, char *, uint64_t))v81[2];
  v44 = v75;
  v45 = v77;
  v43(v75, v80, v77);
  v46 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v46(v37, v41, v42);
  v47 = v72;
  v43(v72, v44, v45);
  v48 = v73;
  v49 = &v47[*(int *)(v73 + 48)];
  v46(v49, v37, v42);
  v50 = v74;
  ((void (*)(uint64_t, char *, uint64_t))v62)(v74, v47, v45);
  v40((char *)(v50 + *(int *)(v48 + 48)), v49, v42);
  v51 = *(void (**)(char *, uint64_t))(v79 + 8);
  v51(v41, v42);
  v52 = (void (*)(char *, uint64_t))v81[1];
  v52(v80, v45);
  v51(v37, v42);
  return ((uint64_t (*)(char *, uint64_t))v52)(v44, v45);
}

uint64_t sub_24A71D8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  sub_24A77A9C0();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24A77A0FC();
}

BOOL sub_24A71DB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void (*v16)(char *, uint64_t, uint64_t);
  _BOOL8 v17;
  double v18;
  double v19;
  double v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v5 = sub_24A7794D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - v10;
  sub_24A7794CC();
  v13 = v12;
  sub_24A7794CC();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v11, a1, v5);
  v16(v8, a3, v5);
  if (v13 <= v15)
  {
    sub_24A7794CC();
    v19 = v18;
    sub_24A7794CC();
    v17 = v19 <= v20;
  }
  else
  {
    v17 = 0;
  }
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v8, v5);
  v21(v11, v5);
  return v17;
}

uint64_t sub_24A71DC38()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D378);
  sub_24A71F31C();
  return sub_24A77A210();
}

uint64_t sub_24A71DC90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t);
  _QWORD v43[3];
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;

  v57 = a2;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D388);
  MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_24A77A2D0();
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A560);
  v59 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v58 = (char *)v43 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A568);
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v43[2] = (char *)v43 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v43 - v14;
  v16 = sub_24A77A264();
  v48 = *(_QWORD *)(v16 - 8);
  v49 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v47 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v60 = (char *)v43 - v19;
  v45 = 0x800000024A78DB90;
  sub_24A77A9C0();
  sub_24A7794CC();
  v61 = v20;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v61 = *(_QWORD *)(a1 + 48);
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  sub_24A7794B4();
  v61 = v21;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v44 = 0xD000000000000017;
  v43[0] = 0x800000024A78DBD0;
  v61 = 0xD000000000000017;
  v62 = 0x800000024A78DBD0;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43[1] = v15;
  sub_24A77A24C();
  sub_24A77A9C0();
  sub_24A7794CC();
  v61 = v22;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  sub_24A7794B4();
  v61 = v23;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v61 = v44;
  v62 = v43[0];
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v50;
  sub_24A77A2B8();
  sub_24A77A408();
  v26 = v51;
  v25 = v52;
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)&v61);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v25);
  v28 = v58;
  v27 = v59;
  v29 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  v30 = v53;
  v29(v58, v26, v53);
  v31 = v47;
  v32 = v48;
  v33 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v34 = v49;
  v33(v47, v60, v49);
  v35 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v35(v26, v28, v30);
  v36 = v55;
  v33(v55, v31, v34);
  v37 = v56;
  v38 = &v36[*(int *)(v56 + 48)];
  v35(v38, v26, v30);
  v39 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v57, v36, v34);
  v29((char *)(v39 + *(int *)(v37 + 48)), v38, v30);
  v40 = *(void (**)(char *, uint64_t))(v59 + 8);
  v40(v58, v30);
  v41 = *(void (**)(char *, uint64_t))(v32 + 8);
  v41(v60, v34);
  v40(v26, v30);
  return ((uint64_t (*)(char *, uint64_t))v41)(v31, v34);
}

uint64_t sub_24A71E36C@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[6];

  v31 = a2;
  v41 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_24A77A2E8();
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B040);
  v38 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B098);
  v39 = *(_QWORD *)(v15 - 8);
  v40 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v32 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B168);
  v36 = *(_QWORD *)(v17 - 8);
  v37 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v35 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  sub_24A77A9C0();
  v20 = v19 + 0.0;
  if (v19 + 0.0 < INFINITY)
    *(_QWORD *)&v20 += (*(uint64_t *)&v20 >> 63) | 1;
  *(double *)v46 = v20;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v46[0] = *(_QWORD *)(v31 + 48);
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v46[0] = a4;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A2DC();
  v46[0] = sub_24A77B368();
  v21 = MEMORY[0x24BDF3E48];
  v22 = MEMORY[0x24BDB8280];
  v23 = MEMORY[0x24BDF3E18];
  sub_24A77A09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
  sub_24A77A408();
  v42 = v10;
  v43 = v21;
  v44 = v22;
  v45 = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v26 = v32;
  v25 = v33;
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)v46);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v25);
  v42 = v25;
  v43 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v27 = v35;
  v28 = v40;
  sub_24A77A0E4();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v28);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v41, v27, v37);
}

uint64_t sub_24A71E7FC@<X0>(double a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32[6];

  v25 = a1;
  v27 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v8);
  v22 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_24A77A2E8();
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B040);
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A9C0();
  v32[0] = a3;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v32[0] = a4;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v32[0] = a5;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A2DC();
  v32[0] = v25;
  v17 = MEMORY[0x24BDF3E48];
  v18 = MEMORY[0x24BDB8280];
  v19 = MEMORY[0x24BDF3E18];
  sub_24A77A09C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
  sub_24A77A408();
  v28 = v12;
  v29 = v17;
  v30 = v18;
  v31 = v19;
  swift_getOpaqueTypeConformance2();
  v20 = v24;
  sub_24A77A0F0();
  sub_24A6A9D4C((uint64_t)v32);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v20);
}

uint64_t sub_24A71EB3C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  void *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v31 = a3;
  v11 = sub_24A77A1B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B0B0);
  v32 = *(_QWORD *)(v15 - 8);
  v33 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A71EEF8();
  v18 = (void *)sub_24A77BD70();
  v19 = sub_24A77BDC4();

  v35 = v12;
  v36 = v11;
  v34 = a4;
  if ((v19 & 1) != 0
    || (v20 = (void *)sub_24A77BD7C(), v21 = sub_24A77BDC4(), v20, (v21 & 1) != 0)
    || (v22 = (void *)sub_24A77BD88(), v23 = sub_24A77BDC4(), v22, (v23 & 1) != 0))
  {
    v37 = 0x74756F5265636152;
    v38 = 0xEA00000000005F65;
    swift_bridgeObjectRetain();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    sub_24A77BA4C();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    sub_24A77B428();
    v24 = sub_24A71EF34(a2, v31, (uint64_t)v17, a5, a6);
    MEMORY[0x24BDAC7A8](v24);
    sub_24A77A1A4();
    sub_24A77B668();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794B0B8);
    v25 = sub_24A77A354();
    v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B0C0);
    v27 = sub_24A6BF65C();
    v37 = v25;
    v38 = v26;
    v39 = MEMORY[0x24BDB8320];
    v40 = v27;
    swift_getOpaqueTypeConformance2();
    sub_24A6BF6E0();
    v28 = v33;
    sub_24A77A06C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v28);
    return swift_release();
  }
  else
  {
    v37 = 0;
    v38 = 0xE000000000000000;
    sub_24A77BF5C();
    swift_bridgeObjectRelease();
    v37 = 0xD00000000000002BLL;
    v38 = 0x800000024A78DB60;
    v30 = objc_msgSend(a1, sel_description, v31);
    sub_24A77B9B0();

    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    result = sub_24A77C01C();
    __break(1u);
  }
  return result;
}

unint64_t sub_24A71EEF8()
{
  unint64_t result;

  result = qword_25794D358;
  if (!qword_25794D358)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25794D358);
  }
  return result;
}

uint64_t sub_24A71EF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[7];
  double v16;

  v15[0] = a2;
  v15[1] = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794A570);
  MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_24A77A354();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77A9C0();
  v16 = a4;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A9C0();
  v16 = a5;
  sub_24A77A174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A77A348();
  v15[4] = v15[0];
  v15[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794B0C0);
  sub_24A6BF65C();
  sub_24A77A0CC();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double sub_24A71F140@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  __int128 v22;

  sub_24A77A408();
  swift_retain();
  v6 = sub_24A77B668();
  v8 = v7;
  swift_retain();
  v9 = sub_24A77B668();
  v11 = v10;
  sub_24A77B668();
  sub_24A77A4B0();
  *(_QWORD *)a3 = a2;
  *(_WORD *)(a3 + 8) = 256;
  *(_QWORD *)(a3 + 16) = v13;
  *(_QWORD *)(a3 + 24) = v14;
  *(_QWORD *)(a3 + 32) = v15;
  *(_QWORD *)(a3 + 40) = v16;
  *(_QWORD *)(a3 + 48) = v17;
  *(_QWORD *)(a3 + 56) = a1;
  *(_WORD *)(a3 + 64) = 256;
  *(_QWORD *)(a3 + 72) = v6;
  *(_QWORD *)(a3 + 80) = v8;
  *(_QWORD *)(a3 + 88) = v9;
  *(_QWORD *)(a3 + 96) = v11;
  *(_QWORD *)(a3 + 104) = v18;
  *(_BYTE *)(a3 + 112) = v19;
  *(_QWORD *)(a3 + 120) = v20;
  *(_BYTE *)(a3 + 128) = v21;
  result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  return result;
}

uint64_t sub_24A71F278@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

double sub_24A71F2A0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A71F140(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

BOOL sub_24A71F2A8(uint64_t a1)
{
  uint64_t v1;

  return sub_24A71DB10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24A71F2C4()
{
  return sub_24A71DC38();
}

unint64_t sub_24A71F2CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794D370;
  if (!qword_25794D370)
  {
    v1 = sub_24A7794D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEC5B10], v1);
    atomic_store(result, (unint64_t *)&qword_25794D370);
  }
  return result;
}

uint64_t sub_24A71F314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A71DC90(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_24A71F31C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];
  _QWORD v3[2];

  result = qword_25794D380;
  if (!qword_25794D380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D378);
    v3[0] = MEMORY[0x24BDB8198];
    v2[1] = sub_24A77A2D0();
    v2[2] = MEMORY[0x24BDB8230];
    v3[1] = swift_getOpaqueTypeConformance2();
    v2[0] = v3;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D380);
  }
  return result;
}

uint64_t sub_24A71F3B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A71F3DC()
{
  return sub_24A71CE30();
}

uint64_t sub_24A71F3E8()
{
  return sub_24A71D8EC();
}

uint64_t sub_24A71F3F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A71CE8C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_24A71F400()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];
  _QWORD v6[2];

  result = qword_25794D3A0;
  if (!qword_25794D3A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D398);
    sub_24A77A264();
    v2 = MEMORY[0x24BDF3E48];
    v3 = MEMORY[0x24BDF3E18];
    v6[0] = swift_getOpaqueTypeConformance2();
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794A560);
    sub_24A77A2D0();
    v5[1] = v4;
    v5[2] = v2;
    v5[3] = swift_getOpaqueTypeConformance2();
    v5[4] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v5[0] = v6;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB7B80], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25794D3A0);
  }
  return result;
}

id VignetteView.__allocating_init(cornerRadius:)(double a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return VignetteView.init(cornerRadius:)(a1);
}

id VignetteView.init(cornerRadius:)(double a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  objc_super v22;

  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for VignetteView();
  v3 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, sel_setAlpha_, 0.15);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  objc_msgSend(v3, sel_setClipsToBounds_, 1);
  v6 = objc_msgSend(v3, sel_layer);
  sub_24A77B9B0();
  v7 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v8 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithType_, v8);

  objc_msgSend(v6, sel_setCompositingFilter_, v9);
  v10 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v10, sel_setCornerRadius_, a1);

  v11 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v11, sel_setCornerCurve_, *MEMORY[0x24BDE58E8]);

  v12 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v12, sel_setInvertsShadow_, 1);

  v13 = objc_msgSend(v3, sel_layer);
  v14 = objc_msgSend(v4, sel_whiteColor);
  v15 = objc_msgSend(v14, sel_CGColor);

  objc_msgSend(v13, sel_setShadowColor_, v15);
  v16 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v16, sel_setShadowOffset_, 0.0, 0.0);

  v17 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v17, sel_setShadowRadius_, 10.0);

  v18 = objc_msgSend(v3, sel_layer);
  LODWORD(v19) = 1.0;
  objc_msgSend(v18, sel_setShadowOpacity_, v19);

  v20 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v20, sel_setShadowPathIsBounds_, 1);

  return v3;
}

uint64_t type metadata accessor for VignetteView()
{
  return objc_opt_self();
}

void sub_24A71F908(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;

  if (a1)
  {
    v2 = objc_msgSend(v1, sel_layer);
    v3 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  }
  else
  {
    v2 = objc_msgSend(v1, sel_layer);
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithWhite_alpha_, 0.882352941, 1.0);
  }
  v4 = objc_msgSend(v3, sel_CGColor);

  objc_msgSend(v2, sel_setShadowColor_, v4);
}

id VignetteView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void VignetteView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VignetteView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VignetteView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for VignetteView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VignetteView.__allocating_init(cornerRadius:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of VignetteView.update(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

WorkoutUI::TrainingLoadDayWidget __swiftcall TrainingLoadDayWidget.init(healthStore:)(HKHealthStore healthStore)
{
  HKHealthStore *v1;
  WorkoutUI::TrainingLoadDayWidget result;

  v1->super.isa = (Class)0xD000000000000015;
  v1[1].super.isa = (Class)0x800000024A786640;
  v1[2].super.isa = healthStore.super.isa;
  result.kind._countAndFlagsBits = (uint64_t)healthStore.super.isa;
  return result;
}

WorkoutUI::TrainingLoadDayWidget __swiftcall TrainingLoadDayWidget.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  objc_class *v4;
  WorkoutUI::TrainingLoadDayWidget result;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  *v1 = 0xD000000000000015;
  v1[1] = 0x800000024A786640;
  v1[2] = v2;
  result.healthStore.super.isa = v4;
  result.kind._object = v3;
  result.kind._countAndFlagsBits = (uint64_t)v2;
  return result;
}

uint64_t TrainingLoadDayWidget.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  int v41;
  unsigned int *v42;
  id v43;
  void *v44;
  int v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(unint64_t, _QWORD, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v83 = a1;
  v2 = sub_24A77B860();
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v75 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6150);
  v63 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6138);
  v64 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6130);
  v68 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v66 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6198);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v70 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(qword_2544D61A8);
  *(_QWORD *)&v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v71 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544D61A0);
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v80 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v1 + 8);
  v84 = *(void **)(v1 + 16);
  v15 = v84;
  type metadata accessor for TrainingLoadDayWidgetEntryView();
  sub_24A720514();
  sub_24A72055C();
  swift_bridgeObjectRetain();
  v65 = v15;
  v67 = v14;
  sub_24A77B8A8();
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v16 = (id)qword_2544D6158;
  v17 = sub_24A77856C();
  v19 = v18;

  v84 = (void *)v17;
  v85 = v19;
  v20 = sub_24A7205A0();
  v21 = sub_24A645928();
  v22 = MEMORY[0x24BEE0D00];
  sub_24A77AB04();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v6, v4);
  v23 = (id)qword_2544D6158;
  v24 = sub_24A77856C();
  v26 = v25;

  v88 = v24;
  v89 = v26;
  v84 = (void *)v4;
  v85 = v22;
  v86 = v20;
  v87 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v28 = v66;
  v29 = v69;
  sub_24A77AAE0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v29);
  v30 = objc_msgSend((id)objc_opt_self(), sel_sharedMonitor);
  objc_msgSend(v30, sel_shouldHideForSensitivity_, 28);

  v84 = (void *)v29;
  v85 = v22;
  v86 = OpaqueTypeConformance2;
  v87 = v21;
  v31 = swift_getOpaqueTypeConformance2();
  v32 = v70;
  v33 = v72;
  sub_24A77AAD4();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v28, v33);
  v35 = v75;
  v34 = v76;
  v36 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, *MEMORY[0x24BDFAE50], v77);
  v84 = (void *)v33;
  v85 = v31;
  v37 = swift_getOpaqueTypeConformance2();
  v38 = v71;
  v39 = v74;
  sub_24A77AB10();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v32, v39);
  swift_bridgeObjectRetain();
  v40 = v65;
  v41 = FIIsTinkerVegaOrFitnessJunior();
  v42 = (unsigned int *)MEMORY[0x24BDFAED8];
  if (v41)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v43 = v40;
    v44 = (void *)sub_24A77B980();
    v45 = MGGetSInt32Answer();

    swift_bridgeObjectRelease_n();
    if (v45 != 3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6188);
      v46 = sub_24A77B86C();
      v47 = v38;
      v48 = *(_QWORD *)(v46 - 8);
      v49 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_24A780030;
      v51 = *(void (**)(unint64_t, _QWORD, uint64_t))(v48 + 104);
      v38 = v47;
      v51(v50 + v49, *v42, v46);
    }
  }
  v84 = (void *)v39;
  v85 = v37;
  v52 = swift_getOpaqueTypeConformance2();
  v54 = v79;
  v53 = v80;
  sub_24A77AAEC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v38, v54);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6190);
  sub_24A77B884();
  v55 = swift_allocObject();
  v78 = xmmword_24A780030;
  *(_OWORD *)(v55 + 16) = xmmword_24A780030;
  sub_24A77B878();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544D6188);
  v56 = sub_24A77B86C();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v78;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v57 + 104))(v59 + v58, *v42, v56);
  v84 = (void *)v54;
  v85 = v52;
  swift_getOpaqueTypeConformance2();
  v60 = v82;
  sub_24A77AAF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v53, v60);
}

uint64_t sub_24A72045C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t DayEntry;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v9;

  DayEntry = type metadata accessor for TrainingLoadDayEntry();
  MEMORY[0x24BDAC7A8](DayEntry);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A701818(a1, (uint64_t)v6);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for TrainingLoadDayWidgetEntryView() + 20)) = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D10);
  swift_storeEnumTagMultiPayload();
  return sub_24A6AD988((uint64_t)v6, a2);
}

unint64_t sub_24A720514()
{
  unint64_t result;
  uint64_t DayWidgetEntryView;

  result = qword_2544D6178;
  if (!qword_2544D6178)
  {
    DayWidgetEntryView = type metadata accessor for TrainingLoadDayWidgetEntryView();
    result = MEMORY[0x24BD1A1F4](&unk_24A783010, DayWidgetEntryView);
    atomic_store(result, (unint64_t *)&qword_2544D6178);
  }
  return result;
}

unint64_t sub_24A72055C()
{
  unint64_t result;

  result = qword_2544D6180;
  if (!qword_2544D6180)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A7856F4, &type metadata for TrainingLoadWidgetTimelineProvider);
    atomic_store(result, (unint64_t *)&qword_2544D6180);
  }
  return result;
}

unint64_t sub_24A7205A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544D6148;
  if (!qword_2544D6148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544D6150);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDFB170], v1);
    atomic_store(result, (unint64_t *)&qword_2544D6148);
  }
  return result;
}

uint64_t sub_24A7205EC()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_24A7205FC@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  *a1 = 0xD000000000000015;
  a1[1] = 0x800000024A786640;
  a1[2] = result;
  return result;
}

void destroy for TrainingLoadDayWidget(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s9WorkoutUI21TrainingLoadDayWidgetVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for TrainingLoadDayWidget(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for TrainingLoadDayWidget(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for TrainingLoadDayWidget()
{
  return &type metadata for TrainingLoadDayWidget;
}

uint64_t sub_24A72076C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544D61A0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2544D61A8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544D6198);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544D6130);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544D6138);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2544D6150);
  sub_24A7205A0();
  sub_24A645928();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A7208BC()
{
  return sub_24A77A888();
}

void sub_24A7208DC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id WorkoutConfigurationView.init(workoutConfiguration:formattingManager:showAddButton:showStartWorkoutButton:overrideSaveWorkoutAction:startWorkoutAction:overrideDismissAction:referenceIntervalWorkoutConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id result;
  char v29;
  uint64_t v30;

  sub_24A74B008();
  sub_24A77B47C();
  *(_BYTE *)(a9 + 24) = v29;
  *(_QWORD *)(a9 + 32) = v30;
  v16 = (int *)type metadata accessor for WorkoutConfigurationView();
  v17 = (uint64_t *)(a9 + v16[9]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  swift_storeEnumTagMultiPayload();
  v18 = (_QWORD *)(a9 + v16[10]);
  v19 = (_QWORD *)(a9 + v16[11]);
  v20 = v16[13];
  v21 = (_QWORD *)(a9 + v16[12]);
  v22 = v16[14];
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  *(_QWORD *)(a9 + v22) = result;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 17) = a4;
  *v18 = a5;
  v18[1] = a6;
  *v19 = a7;
  v19[1] = a8;
  *v21 = a10;
  v21[1] = a11;
  *(_QWORD *)(a9 + v20) = a12;
  return result;
}

uint64_t WorkoutConfigurationView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE v5[16];
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D3E8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A720B84(v0, (uint64_t)v3);
  v6 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D3F0);
  sub_24A722C80();
  sub_24A63CFF0(&qword_25794D410, &qword_25794D3F0, MEMORY[0x24BDEF170]);
  sub_24A77B2B4();
  return sub_24A63CD04((uint64_t)v3, &qword_25794D3E8);
}

id sub_24A720B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int16 v35;

  v26 = a2;
  v3 = type metadata accessor for WorkoutConfigurationView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D408);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A720DA0((uint64_t)&v33);
  v24 = v33;
  v23 = v34;
  v22 = v35;
  v9 = *(_QWORD *)(a1 + 32);
  v28 = *(_BYTE *)(a1 + 24);
  v29 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E8);
  sub_24A77B4A0();
  v10 = v31;
  v21 = v30;
  v11 = v32;
  v12 = *(void **)a1;
  v27 = *(id *)(a1 + 8);
  sub_24A723A8C(a1, (uint64_t)v6);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = swift_allocObject();
  sub_24A723AD4((uint64_t)v6, v14 + v13);
  sub_24A723A8C(a1, (uint64_t)v6);
  v15 = swift_allocObject();
  sub_24A723AD4((uint64_t)v6, v15 + v13);
  *(_OWORD *)v8 = v24;
  *((_QWORD *)v8 + 2) = v23;
  *((_WORD *)v8 + 12) = v22;
  *((_QWORD *)v8 + 4) = v21;
  *((_QWORD *)v8 + 5) = v10;
  v8[48] = v11;
  v16 = v27;
  *((_QWORD *)v8 + 7) = v12;
  *((_QWORD *)v8 + 8) = v16;
  *((_QWORD *)v8 + 9) = sub_24A723B7C;
  *((_QWORD *)v8 + 10) = v14;
  *((_QWORD *)v8 + 11) = sub_24A723BBC;
  *((_QWORD *)v8 + 12) = v15;
  v17 = (uint64_t *)&v8[*(int *)(v25 + 56)];
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  swift_storeEnumTagMultiPayload();
  sub_24A723BF4((uint64_t)v8, v26);
  v18 = v12;
  return v27;
}

void sub_24A720DA0(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  void *v34;
  void *v35;
  void *v36;
  unsigned __int8 v37;
  char v38;

  v3 = *(void **)v1;
  sub_24A778FC8();
  v4 = swift_dynamicCastClass();
  v29 = a1;
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v1 + 8);
    v34 = (void *)v4;
    v35 = v6;
    v36 = 0;
    v37 = 0;
    sub_24A724170();
    sub_24A7241B4();
    v7 = v3;
    v8 = v6;
    v28 = v5;
    v9 = v8;
    sub_24A77AB28();
    sub_24A72421C(v30, v31, v32, v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D520);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D528);
    sub_24A63F3CC(&qword_25794D530, &qword_25794D520, (uint64_t (*)(void))sub_24A724170, (uint64_t (*)(void))sub_24A7241B4);
    a1 = v29;
    sub_24A63F3CC(&qword_25794D548, &qword_25794D528, (uint64_t (*)(void))sub_24A7240C4, (uint64_t (*)(void))sub_24A724108);
    sub_24A77AB28();

    sub_24A724254(v30, v31, v32, v33);
LABEL_5:

    goto LABEL_6;
  }
  sub_24A7790B8();
  v10 = swift_dynamicCastClass();
  if (v10)
  {
    v34 = (void *)v10;
    v35 = *(void **)(v1 + 8);
    v36 = *(void **)(v1 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 52));
    v37 = 1;
    sub_24A724170();
    sub_24A7241B4();
    v27 = v3;
    v11 = v35;
    v12 = v36;
    v28 = v34;
    v9 = v11;
    v13 = v12;
    sub_24A77AB28();
    sub_24A72421C(v30, v31, v32, v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D520);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D528);
    sub_24A63F3CC(&qword_25794D530, &qword_25794D520, (uint64_t (*)(void))sub_24A724170, (uint64_t (*)(void))sub_24A7241B4);
    sub_24A63F3CC(&qword_25794D548, &qword_25794D528, (uint64_t (*)(void))sub_24A7240C4, (uint64_t (*)(void))sub_24A724108);
    sub_24A77AB28();

    sub_24A724254(v30, v31, v32, v33);
    goto LABEL_5;
  }
  sub_24A779064();
  v19 = swift_dynamicCastClass();
  if (v19)
  {
    v20 = (void *)v19;
    v21 = *(void **)(v1 + 8);
    v34 = (void *)v19;
    v35 = v21;
    LOBYTE(v36) = 0;
  }
  else
  {
    sub_24A778FA4();
    v22 = swift_dynamicCastClass();
    if (!v22)
    {
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v18 = -256;
      goto LABEL_10;
    }
    v20 = (void *)v22;
    v21 = *(void **)(v1 + 8);
    v34 = (void *)v22;
    v35 = v21;
    LOBYTE(v36) = 1;
  }
  sub_24A7240C4();
  sub_24A724108();
  v23 = v3;
  v24 = v21;
  v25 = v20;
  v26 = v24;
  sub_24A77AB28();
  sub_24A72414C(v30, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D520);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D528);
  sub_24A63F3CC(&qword_25794D530, &qword_25794D520, (uint64_t (*)(void))sub_24A724170, (uint64_t (*)(void))sub_24A7241B4);
  sub_24A63F3CC(&qword_25794D548, &qword_25794D528, (uint64_t (*)(void))sub_24A7240C4, (uint64_t (*)(void))sub_24A724108);
  sub_24A77AB28();

  sub_24A7241F8(v30, v31);
LABEL_6:
  v14 = v34;
  v15 = v35;
  v16 = v36;
  if (v38)
    v17 = 256;
  else
    v17 = 0;
  v18 = v17 | v37;
LABEL_10:
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v15;
  *(_QWORD *)(a1 + 16) = v16;
  *(_WORD *)(a1 + 24) = v18;
}

uint64_t sub_24A721290(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(void *);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v14;

  v4 = sub_24A77A4E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WorkoutConfigurationView();
  v9 = *(void (**)(void *))(a2 + *(int *)(v8 + 40));
  if (!v9)
    return sub_24A722120(a1);
  v10 = v8;
  swift_retain();
  v9(a1);
  v11 = *(void (**)(uint64_t))(a2 + *(int *)(v10 + 48));
  if (v11)
  {
    v12 = swift_retain();
    v11(v12);
    sub_24A719EC0((uint64_t)v11);
  }
  else
  {
    sub_24A63EC2C((uint64_t)v7);
    sub_24A77A4D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_24A719EC0((uint64_t)v9);
}

uint64_t sub_24A7213D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _BYTE v15[12];
  unsigned int v16;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_24A7796DC();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for WorkoutConfigurationView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = sub_24A779178();
  v8 = v7;
  v16 = getpid();
  v9 = *(void **)(v0 + *(int *)(v3 + 56));
  v10 = (void *)sub_24A7786BC();
  sub_24A723A8C(v1, (uint64_t)&v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  sub_24A723AD4((uint64_t)&v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11);
  aBlock[4] = sub_24A723D70;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A7208DC;
  aBlock[3] = &block_descriptor_4;
  v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel__startWatchAppWithWorkoutPlanData_processIdentifier_completion_, v10, v16, v13);
  _Block_release(v13);

  return sub_24A6706DC(v6, v8);
}

uint64_t sub_24A7215F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4D0);
  MEMORY[0x24BDAC7A8](v3);
  v46 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77AB64();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4D8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E0);
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v41 - v18;
  v20 = *(_QWORD *)(a1 + 32);
  LOBYTE(v48) = *(_BYTE *)(a1 + 24);
  v49 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E8);
  sub_24A77B488();
  v47 = v19;
  v43 = v7;
  if ((v50 & 0xFB) != 0)
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 1, 1, v21);
    v22 = sub_24A63CFF0(&qword_25794D4F8, &qword_25794D4D8, MEMORY[0x24BDEB848]);
    v48 = v8;
    v49 = v22;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    MEMORY[0x24BD18190](v16, v21, OpaqueTypeConformance2);
    sub_24A63CD04((uint64_t)v16, &qword_25794D4E0);
  }
  else
  {
    v24 = sub_24A77AB4C();
    MEMORY[0x24BDAC7A8](v24);
    *(&v41 - 2) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D500);
    v42 = v9;
    sub_24A7239C0();
    sub_24A77A414();
    v25 = sub_24A63CFF0(&qword_25794D4F8, &qword_25794D4D8, MEMORY[0x24BDEB848]);
    MEMORY[0x24BD18184](v11, v8, v25);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4F0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v16, 0, 1, v26);
    v48 = v8;
    v49 = v25;
    v27 = swift_getOpaqueTypeConformance2();
    v28 = v26;
    v9 = v42;
    MEMORY[0x24BD18190](v16, v28, v27);
    sub_24A63CD04((uint64_t)v16, &qword_25794D4E0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v29 = *(_QWORD *)(a1 + 32);
  LOBYTE(v48) = *(_BYTE *)(a1 + 24);
  v49 = v29;
  sub_24A77B488();
  if ((v50 & 0xFB) != 0)
  {
    v30 = sub_24A77AB58();
    MEMORY[0x24BDAC7A8](v30);
    *(&v41 - 2) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D500);
    sub_24A7239C0();
    sub_24A77A414();
    v31 = sub_24A63CFF0(&qword_25794D4F8, &qword_25794D4D8, MEMORY[0x24BDEB848]);
    MEMORY[0x24BD18184](v11, v8, v31);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4F0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v16, 0, 1, v32);
    v48 = v8;
    v49 = v31;
    v33 = swift_getOpaqueTypeConformance2();
    v34 = (uint64_t)v45;
    MEMORY[0x24BD18190](v16, v32, v33);
    sub_24A63CD04((uint64_t)v16, &qword_25794D4E0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v16, 1, 1, v35);
    v36 = sub_24A63CFF0(&qword_25794D4F8, &qword_25794D4D8, MEMORY[0x24BDEB848]);
    v48 = v8;
    v49 = v36;
    v37 = swift_getOpaqueTypeConformance2();
    v34 = (uint64_t)v45;
    MEMORY[0x24BD18190](v16, v35, v37);
    sub_24A63CD04((uint64_t)v16, &qword_25794D4E0);
  }
  v38 = (uint64_t)v47;
  v39 = v46 + *(int *)(v3 + 48);
  sub_24A723948((uint64_t)v47, v46);
  sub_24A723948(v34, v39);
  sub_24A77AA38();
  sub_24A63CD04(v34, &qword_25794D4E0);
  return sub_24A63CD04(v38, &qword_25794D4E0);
}

uint64_t sub_24A721B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v14;

  v2 = sub_24A77A4E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A7796DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x24BEC5C88], v6, v8);
  sub_24A7796E8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v11 = *(void (**)(uint64_t))(a1 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 48));
  if (v11)
  {
    v12 = swift_retain();
    v11(v12);
    return sub_24A719EC0((uint64_t)v11);
  }
  else
  {
    sub_24A63EC2C((uint64_t)v5);
    sub_24A77A4D4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_24A721CBC@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)qword_2544D6158;
  sub_24A77856C();

  sub_24A645928();
  result = sub_24A77AFD8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_24A721DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t *v16;
  _QWORD v18[2];

  v18[1] = a2;
  v5 = type metadata accessor for WorkoutConfigurationView();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C128);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A723A8C(a1, (uint64_t)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  sub_24A723AD4((uint64_t)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  sub_24A77B4B8();
  v14 = sub_24A77B368();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a3, v11, v8);
  v16 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794D500) + 36));
  *v16 = KeyPath;
  v16[1] = v14;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24A721F40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v9;

  v2 = sub_24A77A4E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(uint64_t))(a1 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 48));
  if (v6)
  {
    v7 = swift_retain();
    v6(v7);
    return sub_24A719EC0((uint64_t)v6);
  }
  else
  {
    sub_24A63EC2C((uint64_t)v5);
    sub_24A77A4D4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_24A722018@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)qword_2544D6158;
  sub_24A77856C();

  sub_24A645928();
  result = sub_24A77AFD8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_24A722120(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16[2];
  _QWORD aBlock[6];

  v2 = sub_24A7796DC();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for WorkoutConfigurationView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = sub_24A779178();
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v10 = (void *)sub_24A7786BC();
  sub_24A723A8C(v16[1], (uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_24A723AD4((uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  aBlock[4] = sub_24A724074;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A7208DC;
  aBlock[3] = &block_descriptor_29;
  v13 = _Block_copy(aBlock);
  v14 = a1;
  swift_release();
  objc_msgSend(v9, sel_saveWorkoutCompositionData_completion_, v10, v13);
  _Block_release(v13);

  return sub_24A6706DC(v6, v8);
}

uint64_t sub_24A72241C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v5 = sub_24A77B710();
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A77B728();
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WorkoutConfigurationView();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  sub_24A680434();
  v14 = (void *)sub_24A77BCE0();
  sub_24A723A8C(a3, (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  sub_24A723AD4((uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  aBlock[4] = sub_24A723F0C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = &block_descriptor_23;
  v17 = _Block_copy(aBlock);
  v18 = a2;
  swift_release();
  sub_24A77B71C();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_24A6805C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A63CFF0((unint64_t *)&qword_2579491D0, &qword_2579491C8, MEMORY[0x24BEE12C8]);
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v10, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v10, v22);
}

uint64_t sub_24A722668(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t inited;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  _BYTE v24[79];
  char v25;
  void *v26;
  uint64_t v27;

  v4 = sub_24A77A4E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_24A7796DC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A780030;
    v26 = a1;
    v14 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474E8);
    v15 = sub_24A77B9D4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 64) = sub_24A66952C();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v17;
    v18 = sub_24A77BC5C();
    sub_24A67B7C8((uint64_t)"WorkoutKitXPCServiceHelper failed to open workout app. Error: %@", 64, 2, v18, inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
    swift_arrayDestroy();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BEC5C78], v8);
    sub_24A7796E8();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    v19 = *(_QWORD *)(a2 + 32);
    LOBYTE(v26) = *(_BYTE *)(a2 + 24);
    v27 = v19;
    v25 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E8);
    return sub_24A77B494();
  }
  else
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x24BEC5C80], v8, v10);
    sub_24A7796E8();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    v21 = *(_QWORD *)(a2 + 32);
    LOBYTE(v26) = *(_BYTE *)(a2 + 24);
    v27 = v21;
    v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E8);
    sub_24A77B494();
    v22 = *(void (**)(uint64_t))(a2 + *(int *)(type metadata accessor for WorkoutConfigurationView() + 48));
    if (v22)
    {
      v23 = swift_retain();
      v22(v23);
      return sub_24A719EC0((uint64_t)v22);
    }
    else
    {
      sub_24A63EC2C((uint64_t)v7);
      sub_24A77A4D4();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

void sub_24A722914(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t inited;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v7 = sub_24A7796DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9.n128_f64[0] = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || (a1 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, *MEMORY[0x24BEC5C70], v7, v9);
    sub_24A7796E8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v19 = *(_QWORD *)(a4 + 32);
    v22 = *(_BYTE *)(a4 + 24);
    v23 = v19;
    v21 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E8);
    sub_24A77B494();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A780030;
    swift_getErrorValue();
    v13 = a2;
    v14 = sub_24A77C1C0();
    v16 = v15;
    *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 64) = sub_24A66952C();
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(inited + 40) = v16;
    v17 = sub_24A77BC5C();
    sub_24A67B7C8((uint64_t)"WorkoutKitXPCServiceHelper failed to save workout plan. Error: %@", 65, 2, v17, inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
    swift_arrayDestroy();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BEC5C78], v7);
    sub_24A7796E8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v18 = *(_QWORD *)(a4 + 32);
    v22 = *(_BYTE *)(a4 + 24);
    v23 = v18;
    v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E8);
    sub_24A77B494();

  }
}

uint64_t sub_24A722B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE v5[16];
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D3E8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A720B84(v0, (uint64_t)v3);
  v6 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D3F0);
  sub_24A722C80();
  sub_24A63CFF0(&qword_25794D410, &qword_25794D3F0, MEMORY[0x24BDEF170]);
  sub_24A77B2B4();
  return sub_24A63CD04((uint64_t)v3, &qword_25794D3E8);
}

uint64_t type metadata accessor for WorkoutConfigurationView()
{
  uint64_t result;

  result = qword_25794D470;
  if (!qword_25794D470)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A722C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A7215F8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_24A722C80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794D3F8;
  if (!qword_25794D3F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D3E8);
    v2 = sub_24A63CFF0(&qword_25794D400, &qword_25794D408, (uint64_t)&unk_24A7806A8);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794D3F8);
  }
  return result;
}

uint64_t sub_24A722CFC()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for WorkoutConfigurationView(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
    a1[24] = *((_BYTE *)a2 + 24);
    *((_QWORD *)a1 + 4) = a2[4];
    v9 = a3[9];
    v10 = &a1[v9];
    v11 = (char **)((char *)a2 + v9);
    v12 = v5;
    v13 = v8;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_24A77A4E0();
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
    }
    else
    {
      *(_QWORD *)v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[10];
    v16 = &a1[v15];
    v17 = (char **)((char *)a2 + v15);
    if (*v17)
    {
      v18 = v17[1];
      *(_QWORD *)v16 = *v17;
      *((_QWORD *)v16 + 1) = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
    v19 = a3[11];
    v20 = &a1[v19];
    v21 = (char **)((char *)a2 + v19);
    if (*v21)
    {
      v22 = v21[1];
      *(_QWORD *)v20 = *v21;
      *((_QWORD *)v20 + 1) = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    v23 = a3[12];
    v24 = &a1[v23];
    v25 = (char **)((char *)a2 + v23);
    if (*v25)
    {
      v26 = v25[1];
      *(_QWORD *)v24 = *v25;
      *((_QWORD *)v24 + 1) = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    v27 = a3[13];
    v28 = a3[14];
    v29 = *(char **)((char *)a2 + v27);
    *(_QWORD *)&a1[v27] = v29;
    v30 = *(char **)((char *)a2 + v28);
    *(_QWORD *)&a1[v28] = v30;
    v31 = v29;
    v32 = v30;
  }
  return a1;
}

void destroy for WorkoutConfigurationView(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;

  swift_release();
  v4 = (char *)a1 + a2[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_24A77A4E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if (*(id *)((char *)a1 + a2[10]))
    swift_release();
  if (*(id *)((char *)a1 + a2[11]))
    swift_release();
  if (*(id *)((char *)a1 + a2[12]))
    swift_release();

}

uint64_t initializeWithCopy for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = a3[9];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v6;
  v12 = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_24A77A4E0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v14 = a3[10];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  if (*v16)
  {
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v18 = a3[11];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  if (*v20)
  {
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  v22 = a3[12];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  if (*v24)
  {
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  v26 = a3[13];
  v27 = a3[14];
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = *(void **)(a2 + v27);
  *(_QWORD *)(a1 + v27) = v29;
  v30 = v28;
  v31 = v29;
  return a1;
}

uint64_t assignWithCopy for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v12 = a3[9];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_24A63CD04(a1 + v12, &qword_257946D20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_24A77A4E0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v16 = a3[10];
  v17 = (_QWORD *)(a1 + v16);
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a1 + v16);
  v20 = *(_QWORD *)(a2 + v16);
  if (v19)
  {
    if (v20)
    {
      v21 = *(_QWORD *)(v18 + 8);
      *v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v20)
  {
    v22 = *(_QWORD *)(v18 + 8);
    *v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_13;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
LABEL_13:
  v23 = a3[11];
  v24 = (_QWORD *)(a1 + v23);
  v25 = a2 + v23;
  v26 = *(_QWORD *)(a1 + v23);
  v27 = *(_QWORD *)(a2 + v23);
  if (v26)
  {
    if (v27)
    {
      v28 = *(_QWORD *)(v25 + 8);
      *v24 = v27;
      v24[1] = v28;
      swift_retain();
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v27)
  {
    v29 = *(_QWORD *)(v25 + 8);
    *v24 = v27;
    v24[1] = v29;
    swift_retain();
    goto LABEL_20;
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
LABEL_20:
  v30 = a3[12];
  v31 = (_QWORD *)(a1 + v30);
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30);
  v34 = *(_QWORD *)(a2 + v30);
  if (!v33)
  {
    if (v34)
    {
      v36 = *(_QWORD *)(v32 + 8);
      *v31 = v34;
      v31[1] = v36;
      swift_retain();
      goto LABEL_27;
    }
LABEL_26:
    *(_OWORD *)v31 = *(_OWORD *)v32;
    goto LABEL_27;
  }
  if (!v34)
  {
    swift_release();
    goto LABEL_26;
  }
  v35 = *(_QWORD *)(v32 + 8);
  *v31 = v34;
  v31[1] = v35;
  swift_retain();
  swift_release();
LABEL_27:
  v37 = a3[13];
  v38 = *(void **)(a1 + v37);
  v39 = *(void **)(a2 + v37);
  *(_QWORD *)(a1 + v37) = v39;
  v40 = v39;

  v41 = a3[14];
  v42 = *(void **)(a2 + v41);
  v43 = *(void **)(a1 + v41);
  *(_QWORD *)(a1 + v41) = v42;
  v44 = v42;

  return a1;
}

uint64_t initializeWithTake for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_24A77A4E0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[10];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  if (*v13)
  {
    v15 = v13[1];
    *v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  v16 = a3[11];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  if (*v18)
  {
    v20 = v18[1];
    *v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  v26 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  return a1;
}

uint64_t assignWithTake for WorkoutConfigurationView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    v8 = a3[9];
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_24A63CD04(a1 + v8, &qword_257946D20);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_24A77A4E0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a1 + v13);
  v17 = *(_QWORD *)(a2 + v13);
  if (v16)
  {
    if (v17)
    {
      v18 = *(_QWORD *)(v15 + 8);
      *v14 = v17;
      v14[1] = v18;
      swift_release();
      goto LABEL_12;
    }
    swift_release();
  }
  else if (v17)
  {
    v19 = *(_QWORD *)(v15 + 8);
    *v14 = v17;
    v14[1] = v19;
    goto LABEL_12;
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
LABEL_12:
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20);
  v24 = *(_QWORD *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      v25 = *(_QWORD *)(v22 + 8);
      *v21 = v24;
      v21[1] = v25;
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *(_QWORD *)(v22 + 8);
    *v21 = v24;
    v21[1] = v26;
    goto LABEL_19;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_19:
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v27);
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a1 + v27);
  v31 = *(_QWORD *)(a2 + v27);
  if (!v30)
  {
    if (v31)
    {
      v33 = *(_QWORD *)(v29 + 8);
      *v28 = v31;
      v28[1] = v33;
      goto LABEL_26;
    }
LABEL_25:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    goto LABEL_26;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_25;
  }
  v32 = *(_QWORD *)(v29 + 8);
  *v28 = v31;
  v28[1] = v32;
  swift_release();
LABEL_26:
  v34 = a3[13];
  v35 = *(void **)(a1 + v34);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);

  v36 = a3[14];
  v37 = *(void **)(a1 + v36);
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);

  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutConfigurationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A723714(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FD8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutConfigurationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24A7237A0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948FD8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

void sub_24A723818()
{
  unint64_t v0;

  sub_24A66AAC8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24A7238C0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D3E8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D3F0);
  sub_24A722C80();
  sub_24A63CFF0(&qword_25794D410, &qword_25794D3F0, MEMORY[0x24BDEF170]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A723948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D4E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A723990@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A721DC8(*(_QWORD *)(v1 + 16), (uint64_t)sub_24A722018, a1);
}

unint64_t sub_24A7239C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D508;
  if (!qword_25794D508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D500);
    v2[0] = sub_24A63CFF0(&qword_25794C130, &qword_25794C128, MEMORY[0x24BDF43B0]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D508);
  }
  return result;
}

uint64_t sub_24A723A5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A721DC8(*(_QWORD *)(v1 + 16), (uint64_t)sub_24A721CBC, a1);
}

uint64_t sub_24A723A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutConfigurationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A723AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutConfigurationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A723B18()
{
  return sub_24A723B3C(sub_24A721B78);
}

uint64_t sub_24A723B30()
{
  return sub_24A723B3C(sub_24A721F40);
}

uint64_t sub_24A723B3C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutConfigurationView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_24A723B7C(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutConfigurationView() - 8) + 80);
  return sub_24A721290(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_24A723BBC()
{
  type metadata accessor for WorkoutConfigurationView();
  return sub_24A7213D8();
}

uint64_t sub_24A723BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = (int *)type metadata accessor for WorkoutConfigurationView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  swift_release();
  v4 = (char *)v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_24A77A4E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if (*(id *)((char *)v3 + v1[10]))
    swift_release();
  if (*(id *)((char *)v3 + v1[11]))
    swift_release();
  if (*(id *)((char *)v3 + v1[12]))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_24A723D70(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutConfigurationView() - 8) + 80);
  return sub_24A72241C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_24A723DD4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = (int *)type metadata accessor for WorkoutConfigurationView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  v3 = (id *)(v0 + ((v2 + 24) & ~v2));
  swift_release();
  v4 = (char *)v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_24A77A4E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if (*(id *)((char *)v3 + v1[10]))
    swift_release();
  if (*(id *)((char *)v3 + v1[11]))
    swift_release();
  if (*(id *)((char *)v3 + v1[12]))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_24A723F0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutConfigurationView() - 8) + 80);
  return sub_24A722668(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_24A723F3C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = (int *)type metadata accessor for WorkoutConfigurationView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  v3 = (id *)(v0 + ((v2 + 24) & ~v2));
  swift_release();
  v4 = (char *)v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_24A77A4E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if (*(id *)((char *)v3 + v1[10]))
    swift_release();
  if (*(id *)((char *)v3 + v1[11]))
    swift_release();
  if (*(id *)((char *)v3 + v1[12]))
    swift_release();

  return swift_deallocObject();
}

void sub_24A724074(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutConfigurationView() - 8) + 80);
  sub_24A722914(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

unint64_t sub_24A7240C4()
{
  unint64_t result;

  result = qword_25794D510;
  if (!qword_25794D510)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for EmbeddedPacerConfigurationView, &type metadata for EmbeddedPacerConfigurationView);
    atomic_store(result, (unint64_t *)&qword_25794D510);
  }
  return result;
}

unint64_t sub_24A724108()
{
  unint64_t result;

  result = qword_25794D518;
  if (!qword_25794D518)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for EmbeddedMultiSportConfigurationView, &type metadata for EmbeddedMultiSportConfigurationView);
    atomic_store(result, (unint64_t *)&qword_25794D518);
  }
  return result;
}

id sub_24A72414C(void *a1, void *a2)
{
  id v2;

  v2 = a1;
  return a2;
}

unint64_t sub_24A724170()
{
  unint64_t result;

  result = qword_25794D538;
  if (!qword_25794D538)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for EmbeddedGoalConfigurationView, &type metadata for EmbeddedGoalConfigurationView);
    atomic_store(result, (unint64_t *)&qword_25794D538);
  }
  return result;
}

unint64_t sub_24A7241B4()
{
  unint64_t result;

  result = qword_25794D540;
  if (!qword_25794D540)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for EmbeddedIntervalConfigurationView, &type metadata for EmbeddedIntervalConfigurationView);
    atomic_store(result, (unint64_t *)&qword_25794D540);
  }
  return result;
}

void sub_24A7241F8(void *a1, void *a2)
{

}

id sub_24A72421C(void *a1, void *a2, void *a3, char a4)
{
  id v5;
  id v6;

  if ((a4 & 1) != 0)
    v5 = a3;
  v6 = a1;
  return a2;
}

void sub_24A724254(void *a1, void *a2, void *a3, char a4)
{

  if ((a4 & 1) != 0)
}

uint64_t BreadcrumbMapView.init(locationPositionPublisher:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_24A7799AC();
  sub_24A63C880((unint64_t *)&qword_257947F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5FD0], MEMORY[0x24BEC5FC0]);
  result = sub_24A77A57C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_24A724318()
{
  byte_25794D550 = 1;
  qword_25794D558 = 0x4034000000000000;
}

void *BreadcrumbMapView.makeUIView(context:)()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v0 = objc_allocWithZone((Class)type metadata accessor for WKUIBreadcrumbMapView());
  swift_retain();
  WKUIBreadcrumbMapView.init(locationPositionPublisher:)();
  v2 = v1;
  v3 = objc_msgSend(v1, sel_layer);
  if (qword_2579469D0 != -1)
    swift_once();
  objc_msgSend(v3, sel_setCornerRadius_, *(double *)&qword_25794D558);

  v4 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v4, sel_setCornerCurve_, *MEMORY[0x24BDE58E8]);

  objc_msgSend(v2, sel_setZoomEnabled_, byte_25794D550);
  return v2;
}

uint64_t BreadcrumbMapView.updateUIView(_:context:)(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v2 = sub_24A77B710();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_24A77B728();
  v6 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A680434();
  v9 = (void *)sub_24A77BCE0();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  aBlock[4] = sub_24A724768;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = &block_descriptor_5;
  v11 = _Block_copy(aBlock);
  a1;
  swift_release();
  sub_24A77B71C();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A724790();
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v8, v5, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  swift_retain();
  v12 = sub_24A7799A0();
  swift_release();
  sub_24A705220(v12);
  swift_bridgeObjectRelease();
  swift_retain();
  v13 = sub_24A779994();
  swift_release();
  sub_24A704F78(v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A724680()
{
  sub_24A724800();
  return sub_24A77AABC();
}

uint64_t sub_24A7246D0()
{
  sub_24A724800();
  return sub_24A77AA68();
}

void sub_24A724720()
{
  sub_24A724800();
  sub_24A77AAB0();
  __break(1u);
}

uint64_t sub_24A724744()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_24A724768()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_becomeFirstResponder);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_24A724790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2579491D0;
  if (!qword_2579491D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579491C8);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2579491D0);
  }
  return result;
}

unint64_t sub_24A7247DC(uint64_t a1)
{
  unint64_t result;

  result = sub_24A724800();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24A724800()
{
  unint64_t result;

  result = qword_25794D560;
  if (!qword_25794D560)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for BreadcrumbMapView, &type metadata for BreadcrumbMapView);
    atomic_store(result, (unint64_t *)&qword_25794D560);
  }
  return result;
}

ValueMetadata *type metadata accessor for BreadcrumbMapView()
{
  return &type metadata for BreadcrumbMapView;
}

uint64_t WorkoutAssetLoadStatus.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x646575657571;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x676E6964616F6CLL;
      break;
    case 2:
      result = 0x6574656C706D6F63;
      break;
    case 3:
      result = 0x64656C696166;
      break;
    case 4:
      result = 0x656C6C65636E6163;
      break;
    case 5:
      result = 0x6564616F4C746F6ELL;
      break;
    case 6:
      result = 0x6E776F6E6B6E75;
      break;
    default:
      result = sub_24A77C19C();
      __break(1u);
      break;
  }
  return result;
}

unint64_t WorkoutAssetLoadStatus.init(rawValue:)(unint64_t a1)
{
  return sub_24A724994(a1);
}

unint64_t sub_24A72495C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_24A724994(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_24A72498C()
{
  uint64_t *v0;

  return WorkoutAssetLoadStatus.description.getter(*v0);
}

unint64_t sub_24A724994(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

unint64_t sub_24A7249A8()
{
  unint64_t result;

  result = qword_25794D568;
  if (!qword_25794D568)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for WorkoutAssetLoadStatus, &type metadata for WorkoutAssetLoadStatus);
    atomic_store(result, (unint64_t *)&qword_25794D568);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutAssetLoadStatus()
{
  return &type metadata for WorkoutAssetLoadStatus;
}

uint64_t storeEnumTagSinglePayload for WorkoutUIFeatures(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24A724A3C + 4 * asc_24A786A60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24A724A5C + 4 * byte_24A786A65[v4]))();
}

_BYTE *sub_24A724A3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24A724A5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24A724A64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24A724A6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24A724A74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24A724A7C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutUIFeatures()
{
  return &type metadata for WorkoutUIFeatures;
}

unint64_t sub_24A724A9C()
{
  unint64_t result;

  result = qword_25794D570;
  if (!qword_25794D570)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A786AD4, &type metadata for WorkoutUIFeatures);
    atomic_store(result, (unint64_t *)&qword_25794D570);
  }
  return result;
}

const char *sub_24A724AE0()
{
  return "WorkoutUI";
}

const char *sub_24A724AF4()
{
  return "OpenWorkoutButtonInViewer";
}

uint64_t sub_24A724B4C()
{
  return sub_24A778B18();
}

uint64_t sub_24A724BB8()
{
  return sub_24A778B0C();
}

id sub_24A724CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  id v6;
  objc_super v8;

  v0 = sub_24A778F38();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A778B00();
  v4 = (objc_class *)type metadata accessor for ArtworkBridge();
  v5 = objc_allocWithZone(v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))((uint64_t)v5 + OBJC_IVAR___SMArtwork_artwork, v3, v0);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

id MediaMomentBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MediaMomentBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MediaMomentBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaMomentBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MediaMomentBridge()
{
  uint64_t result;

  result = qword_25794D5A0;
  if (!qword_25794D5A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A724ECC()
{
  return type metadata accessor for MediaMomentBridge();
}

uint64_t sub_24A724ED4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778B24();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MediaMomentBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaMomentBridge.startTime.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MediaMomentBridge.duration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MediaMomentBridge.artwork.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

double sub_24A724FA8()
{
  double v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD8);
  v0 = COERCE_DOUBLE(swift_allocObject());
  *(_OWORD *)(*(_QWORD *)&v0 + 16) = xmmword_24A780450;
  sub_24A77B368();
  v1 = sub_24A77B374();
  swift_release();
  *(_QWORD *)(*(_QWORD *)&v0 + 32) = v1;
  sub_24A77B368();
  v2 = sub_24A77B374();
  swift_release();
  *(_QWORD *)(*(_QWORD *)&v0 + 40) = v2;
  *(double *)&v4 = v0;
  sub_24A77BB24();
  sub_24A77B6F8();
  sub_24A77B704();
  MEMORY[0x24BD18C58](*(_QWORD *)&v0);
  sub_24A77A570();
  result = v0;
  xmmword_25794D5B0 = v4;
  unk_25794D5C0 = v5;
  qword_25794D5D0 = v6;
  return result;
}

uint64_t static EffortColors.buttonBackground.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2579469D8 != -1)
    swift_once();
  *(_QWORD *)a1 = xmmword_25794D5B0;
  *(_OWORD *)(a1 + 8) = *(__int128 *)((char *)&xmmword_25794D5B0 + 8);
  *(_OWORD *)(a1 + 24) = unk_25794D5C8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A725118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_24A77B320();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794AFD8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24A780450;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDF3C28], v0);
  *(_QWORD *)(v4 + 32) = MEMORY[0x24BD189AC](v3, 0.109803922, 0.109803922, 0.117647059, 1.0);
  *(_QWORD *)(v4 + 40) = sub_24A77B350();
  v7 = v4;
  sub_24A77BB24();
  result = MEMORY[0x24BD18C58](v7);
  qword_25794D5D8 = result;
  return result;
}

uint64_t static EffortColors.defaultGradient.getter()
{
  if (qword_2579469E0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t _s9WorkoutUI12EffortColorsV9textColor8exertion05SwiftB00F0V0A4Core18AppleExertionScaleOSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  int v21;
  int v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;

  v2 = sub_24A77B320();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A7797A8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v25 - v14;
  sub_24A725EEC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24A725F34((uint64_t)v8);
    sub_24A77B368();
    v16 = sub_24A77B374();
    swift_release();
    return v16;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v17 == *MEMORY[0x24BEC5DA0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FC999999999999ALL;
    v19.n128_u64[0] = 0x3FE9D9D9D9D9D9DALL;
    v20.n128_u64[0] = 0x3FE1515151515151;
LABEL_20:
    v16 = MEMORY[0x24BD189AC](v5, v18, v19, v20, 1.0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return v16;
  }
  v21 = v17;
  if (v17 == *MEMORY[0x24BEC5DA8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3F70101010101010;
    v19.n128_u64[0] = 0x3FEA9A9A9A9A9A9BLL;
    v20.n128_u64[0] = 0x3FE7575757575757;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x24BEC5DB0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v19.n128_u64[0] = 0x3FE6969696969697;
    v20.n128_u64[0] = 0x3FEB1B1B1B1B1B1BLL;
    v18.n128_u64[0] = 0;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x24BEC5DB8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FD5555555555555;
    v19.n128_u64[0] = 0x3FE5D5D5D5D5D5D6;
LABEL_19:
    v20.n128_u64[0] = 1.0;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x24BEC5DC0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FD1919191919192;
    v19.n128_u64[0] = 0x3FD9191919191919;
    v20.n128_u64[0] = 0x3FEDDDDDDDDDDDDELL;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x24BEC5DC8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FE0303030303030;
    v19.n128_u64[0] = 0x3FD9191919191919;
    goto LABEL_19;
  }
  if (v17 == *MEMORY[0x24BEC5DD0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FE7373737373737;
    v19.n128_u64[0] = 0x3FDC5C5C5C5C5C5CLL;
    goto LABEL_19;
  }
  if (v17 == *MEMORY[0x24BEC5DD8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FE999999999999ALL;
    v19.n128_u64[0] = 0x3FD7171717171717;
    goto LABEL_19;
  }
  if (v17 == *MEMORY[0x24BEC5DE0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v19.n128_u64[0] = 0x3FDB1B1B1B1B1B1BLL;
    v20.n128_u64[0] = 0x3FECBCBCBCBCBCBDLL;
    v18.n128_u64[0] = 1.0;
    goto LABEL_20;
  }
  if (v17 == *MEMORY[0x24BEC5DE8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v19.n128_u64[0] = 0x3FD5959595959596;
    v20.n128_u64[0] = 0x3FE6D6D6D6D6D6D7;
    v18.n128_u64[0] = 1.0;
    goto LABEL_20;
  }
  v23 = *MEMORY[0x24BEC5DF0];
  sub_24A77B368();
  v16 = sub_24A77B374();
  swift_release();
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, v9);
  if (v21 != v23)
    v24(v13, v9);
  return v16;
}

uint64_t sub_24A725738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  int v21;
  int v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;

  v2 = sub_24A77B320();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A7797A8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - v14;
  sub_24A725EEC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24A725F34((uint64_t)v8);
    return sub_24A77B350();
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v17 == *MEMORY[0x24BEC5DA0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3F88181818181818;
    v19.n128_u64[0] = 0x3FC5959595959596;
    v20.n128_u64[0] = 0x3FC3939393939394;
LABEL_16:
    v16 = MEMORY[0x24BD189AC](v5, v18, v19, v20, 1.0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return v16;
  }
  v21 = v17;
  if (v17 == *MEMORY[0x24BEC5DA8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3F98181818181818;
    v19.n128_u64[0] = 0x3FC4141414141414;
    v20.n128_u64[0] = 0x3FC6161616161616;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x24BEC5DB0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FA4141414141414;
    v19.n128_u64[0] = 0x3FC1919191919192;
    v20.n128_u64[0] = 0x3FC6969696969697;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x24BEC5DB8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FAA1A1A1A1A1A1ALL;
    v19.n128_u64[0] = 0x3FB5151515151515;
LABEL_15:
    v20.n128_u64[0] = 0x3FCF9F9F9F9F9FA0;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x24BEC5DC0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FA2121212121212;
    v19.n128_u64[0] = 0x3F88181818181818;
    v20.n128_u64[0] = 0x3FC7171717171717;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x24BEC5DC8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FC0909090909091;
    v19.n128_u64[0] = 0x3FAA1A1A1A1A1A1ALL;
    goto LABEL_15;
  }
  if (v17 == *MEMORY[0x24BEC5DD0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FD1111111111111;
    v19.n128_u64[0] = 0x3F90101010101010;
    v20.n128_u64[0] = 0x3FD8989898989899;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x24BEC5DD8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FD2525252525252;
    v19.n128_u64[0] = 0x3F80101010101010;
    v20.n128_u64[0] = 0x3FD5959595959596;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x24BEC5DE0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FD7575757575757;
    v20.n128_u64[0] = 0x3FCA1A1A1A1A1A1ALL;
LABEL_26:
    v19.n128_u64[0] = 0;
    goto LABEL_16;
  }
  if (v17 == *MEMORY[0x24BEC5DE8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    v18.n128_u64[0] = 0x3FD7575757575757;
    v20.n128_u64[0] = 0x3FBB1B1B1B1B1B1BLL;
    goto LABEL_26;
  }
  v23 = *MEMORY[0x24BEC5DF0];
  v16 = sub_24A77B350();
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, v9);
  if (v21 != v23)
    v24(v12, v9);
  return v16;
}

uint64_t _s9WorkoutUI12EffortColorsV8gradient8exertion05SwiftB08GradientV0A4Core18AppleExertionScaleOSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  void (*v14)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - v6;
  v8 = sub_24A7797A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A725EEC(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_24A725F34((uint64_t)v7);
    if (qword_2579469E0 != -1)
      swift_once();
    v12 = qword_25794D5D8;
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v13 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v13(v4, v11, v8);
    v14 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
    v14(v4, 0, 1, v8);
    _s9WorkoutUI12EffortColorsV9textColor8exertion05SwiftB00F0V0A4Core18AppleExertionScaleOSg_tFZ_0((uint64_t)v4);
    sub_24A725F34((uint64_t)v4);
    sub_24A77B374();
    swift_release();
    v13(v4, v11, v8);
    v14(v4, 0, 1, v8);
    sub_24A725738((uint64_t)v4);
    sub_24A725F34((uint64_t)v4);
    v13(v4, v11, v8);
    v14(v4, 0, 1, v8);
    sub_24A725738((uint64_t)v4);
    sub_24A77B374();
    swift_release();
    sub_24A725F34((uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579474F8);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_24A7810C0;
    swift_retain();
    *(_QWORD *)(v15 + 32) = sub_24A77B62C();
    *(_QWORD *)(v15 + 40) = v16;
    swift_retain();
    *(_QWORD *)(v15 + 48) = sub_24A77B62C();
    *(_QWORD *)(v15 + 56) = v17;
    swift_retain();
    *(_QWORD *)(v15 + 64) = sub_24A77B62C();
    *(_QWORD *)(v15 + 72) = v18;
    v12 = MEMORY[0x24BD18C4C](v15);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v12;
}

ValueMetadata *type metadata accessor for EffortColors()
{
  return &type metadata for EffortColors;
}

uint64_t sub_24A725EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A725F34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A725F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_24A77C22C();
    sub_24A77BA1C();
    v6 = sub_24A77C25C();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_24A77C184() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_24A77C184() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_24A7260A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_24A77C22C();
    sub_24A778C38();
    sub_24A77BA1C();
    swift_bridgeObjectRelease();
    v3 = sub_24A77C25C();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = sub_24A778C38();
      v9 = v8;
      if (v7 == sub_24A778C38() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v12 = sub_24A77C184();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_18:
        v20 = 1;
        return v20 & 1;
      }
      v13 = ~v4;
      v14 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        while (1)
        {
          v15 = sub_24A778C38();
          v17 = v16;
          if (v15 == sub_24A778C38() && v17 == v18)
            break;
          v20 = sub_24A77C184();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v14 = (v14 + 1) & v13;
            if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
              continue;
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v20 = 0;
  return v20 & 1;
}

id sub_24A726268()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TaskFinalizer()), sel_init);
  qword_25794D5E0 = (uint64_t)result;
  return result;
}

uint64_t (*sub_24A726294())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_24A7262D8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  objc_class *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v12 = sub_24A77BCD4();
  v1 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A77BCBC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_24A77B728();
  MEMORY[0x24BDAC7A8](v6);
  v11 = OBJC_IVAR___WOTaskFinalizer_queue;
  v10[1] = sub_24A680434();
  v7 = v0;
  sub_24A77B71C();
  v14 = MEMORY[0x24BEE4AF8];
  sub_24A63C880(&qword_25794D2D8, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2E0);
  sub_24A729FD0(&qword_25794D2E8, &qword_25794D2E0);
  sub_24A77BEB4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v12);
  *(_QWORD *)(v10[2] + v11) = sub_24A77BD04();
  *(_QWORD *)&v7[OBJC_IVAR___WOTaskFinalizer_tasks] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v7[OBJC_IVAR___WOTaskFinalizer_finalizedIdentifiers] = MEMORY[0x24BEE4B08];

  v8 = (objc_class *)type metadata accessor for TaskFinalizer();
  v13.receiver = v7;
  v13.super_class = v8;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t static TaskFinalizer.appendTask(identifier:task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24A7270EC(a1, a2, a3, a4, sub_24A7265E0);
}

uint64_t sub_24A7265E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v9 = sub_24A77B710();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_24A77B728();
  v12 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v4 + OBJC_IVAR___WOTaskFinalizer_queue);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_24A72A488;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = &block_descriptor_55;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A77B71C();
  v22 = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A729FD0((unint64_t *)&qword_2579491D0, &qword_2579491C8);
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  swift_release();
  return swift_release();
}

void sub_24A726824(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v9 = a1 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x24BD1A368](v9);
  if (v10)
  {
    v11 = (void *)v10;
    sub_24A7268A8(a2, a3, a4, a5);

  }
}

uint64_t sub_24A7268A8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t aBlock[6];
  uint64_t v72;
  uint64_t v73;

  v5 = v4;
  v10 = sub_24A77B710();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_24A77B728();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A77A018();
  v68 = *(_QWORD *)(v13 - 8);
  v69 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v60 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v60 - v20;
  v22 = (uint64_t *)(v4 + OBJC_IVAR___WOTaskFinalizer_tasks);
  swift_beginAccess();
  v23 = *v22;
  v24 = *(_QWORD *)(*v22 + 16);
  v67 = a3;
  v70 = a1;
  if (v24)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_24A64E74C(a1, a2);
    if ((v26 & 1) != 0)
    {
      v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = MEMORY[0x24BEE4AF8];
  }
  v73 = v27;
  v28 = (uint64_t *)(v5 + OBJC_IVAR___WOTaskFinalizer_finalizedIdentifiers);
  swift_beginAccess();
  v29 = *v28;
  swift_bridgeObjectRetain();
  v30 = sub_24A725F74(v70, a2, v29);
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
    goto LABEL_15;
  if (*(_QWORD *)(v27 + 16))
  {
    sub_24A779A3C();
    swift_bridgeObjectRetain_n();
    v31 = sub_24A77A00C();
    v32 = sub_24A77BC74();
    if (os_log_type_enabled(v31, v32))
    {
      v66 = a4;
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain();
      v72 = sub_24A76BC40(v70, a2, aBlock);
      a4 = v66;
      sub_24A77BE00();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A635000, v31, v32, "Finalizer: Identifier %s is currently being finalized, enqueueing new task.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v34, -1, -1);
      MEMORY[0x24BD1A2B4](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v21, v69);
LABEL_15:
    sub_24A779A3C();
    swift_bridgeObjectRetain_n();
    v41 = sub_24A77A00C();
    v42 = sub_24A77BC74();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v66 = a4;
      v45 = v44;
      aBlock[0] = v44;
      *(_DWORD *)v43 = 136315138;
      swift_bridgeObjectRetain();
      v46 = v70;
      v72 = sub_24A76BC40(v70, a2, aBlock);
      sub_24A77BE00();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A635000, v41, v42, "Finalizer: Enqueueing new task for identifier %s", v43, 0xCu);
      swift_arrayDestroy();
      v47 = v45;
      a4 = v66;
      MEMORY[0x24BD1A2B4](v47, -1, -1);
      MEMORY[0x24BD1A2B4](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v69);
      v48 = v67;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v69);
      v48 = v67;
      v46 = v70;
    }
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = v48;
    *(_QWORD *)(v49 + 24) = a4;
    swift_retain();
    sub_24A729E30(0, 0, (uint64_t)sub_24A6433A4, v49);
    v50 = v73;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72 = *v22;
    *v22 = 0x8000000000000000;
    sub_24A6511DC(v50, v46, a2, isUniquelyReferenced_nonNull_native);
    *v22 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  sub_24A779A3C();
  swift_bridgeObjectRetain_n();
  v35 = sub_24A77A00C();
  v36 = sub_24A77BC74();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = a4;
    v39 = swift_slowAlloc();
    aBlock[0] = v39;
    *(_DWORD *)v37 = 136315138;
    swift_bridgeObjectRetain();
    v72 = sub_24A76BC40(v70, a2, aBlock);
    sub_24A77BE00();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A635000, v35, v36, "Finalizer: Identifier %s was already finalized, just running task", v37, 0xCu);
    swift_arrayDestroy();
    v40 = v39;
    a4 = v38;
    MEMORY[0x24BD1A2B4](v40, -1, -1);
    MEMORY[0x24BD1A2B4](v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v68 + 8))(v18, v69);
  v53 = v67;
  sub_24A680434();
  v54 = (void *)sub_24A77BCE0();
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v53;
  *(_QWORD *)(v55 + 24) = a4;
  aBlock[4] = (uint64_t)sub_24A6433A4;
  aBlock[5] = v55;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24A70DDB8;
  aBlock[3] = (uint64_t)&block_descriptor_6;
  v56 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v57 = v61;
  sub_24A77B71C();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A729FD0((unint64_t *)&qword_2579491D0, &qword_2579491C8);
  v58 = v64;
  v59 = v66;
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v57, v58, v56);
  _Block_release(v56);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v58, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v57, v63);
}

uint64_t static TaskFinalizer.replaceTasks(identifier:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24A7270EC(a1, a2, a3, a4, sub_24A727224);
}

uint64_t sub_24A7270EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (qword_2579469E8 != -1)
    swift_once();
  return a5(a1, a2, a3, a4);
}

uint64_t sub_24A727224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  NSObject *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v16[6];

  v9 = *(NSObject **)&v4[OBJC_IVAR___WOTaskFinalizer_queue];
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v4;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = a4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_24A72A414;
  *(_QWORD *)(v11 + 24) = v10;
  v16[4] = sub_24A72A4E8;
  v16[5] = v11;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_24A70E1F4;
  v16[3] = &block_descriptor_46_1;
  v12 = _Block_copy(v16);
  v13 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_24A72737C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  _QWORD *v27;
  void (*v28)(_QWORD *);
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  uint64_t v38[4];

  v10 = sub_24A77A018();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A3C();
  swift_bridgeObjectRetain_n();
  v14 = a1;
  v15 = sub_24A77A00C();
  v16 = sub_24A77BC74();
  if (!os_log_type_enabled(v15, (os_log_type_t)v16))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_9;
  }
  v31 = v16;
  v32 = v11;
  v33 = v10;
  v35 = a4;
  v36 = a5;
  v17 = swift_slowAlloc();
  v18 = swift_slowAlloc();
  v38[0] = v18;
  *(_DWORD *)v17 = 134218242;
  v19 = &v14[OBJC_IVAR___WOTaskFinalizer_tasks];
  swift_beginAccess();
  v20 = *(_QWORD *)v19;
  v21 = *(_QWORD *)(v20 + 16);
  swift_bridgeObjectRetain();
  v34 = a2;
  if (!v21)
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v22 = sub_24A64E74C(a2, a3);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x24BEE4AF8];
    goto LABEL_8;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  v25 = *(_QWORD *)(v24 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v37[0] = v25;
  sub_24A77BE00();
  swift_bridgeObjectRelease();

  *(_WORD *)(v17 + 12) = 2080;
  swift_bridgeObjectRetain();
  a2 = v34;
  v37[0] = sub_24A76BC40(v34, a3, v38);
  sub_24A77BE00();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_24A635000, v15, (os_log_type_t)v31, "Finalizer: Replacing %ld tasks for %s", (uint8_t *)v17, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24BD1A2B4](v18, -1, -1);
  MEMORY[0x24BD1A2B4](v17, -1, -1);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
  a4 = v35;
  a5 = v36;
LABEL_9:
  swift_bridgeObjectRetain();
  v26 = sub_24A726294();
  v28 = sub_24A7276CC(v37, a2, a3);
  if (*v27)
  {
    *v27 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
  }
  ((void (*)(_QWORD *, _QWORD))v28)(v37, 0);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, _QWORD))v26)(v38, 0);
  return sub_24A7268A8(a2, a3, a4, a5);
}

void (*sub_24A7276CC(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_24A72A0BC(v6, a2, a3);
  return sub_24A727738;
}

void sub_24A727738(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t static TaskFinalizer.finalize(identifier:)(uint64_t a1, uint64_t a2)
{
  if (qword_2579469E8 != -1)
    swift_once();
  return sub_24A727844(a1, a2);
}

uint64_t sub_24A727844(uint64_t a1, uint64_t a2)
{
  char *v2;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t (*i)();
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v5 = *(NSObject **)&v2[OBJC_IVAR___WOTaskFinalizer_queue];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_24A72A044;
  *(_QWORD *)(v7 + 24) = v6;
  v29 = sub_24A67E1CC;
  v30 = v7;
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_24A70E1F4;
  v28 = &block_descriptor_19;
  v8 = _Block_copy(&aBlock);
  v9 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    for (i = 0; ; i = sub_24A72A0A0)
    {
      v23 = 0;
      v24 = 0;
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = v9;
      v13[3] = a1;
      v13[4] = a2;
      v13[5] = &v23;
      v14 = v9;
      swift_bridgeObjectRetain();
      sub_24A719EC0((uint64_t)i);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = sub_24A72A0A0;
      *(_QWORD *)(v15 + 24) = v13;
      v29 = sub_24A72A4E8;
      v30 = v15;
      aBlock = MEMORY[0x24BDAC760];
      v26 = 1107296256;
      v27 = sub_24A70E1F4;
      v28 = &block_descriptor_29_0;
      v16 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      dispatch_sync(v5, v16);
      _Block_release(v16);
      v17 = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v17 & 1) != 0)
        break;
      v18 = v23;
      if (!v23 || (v19 = swift_retain(), v18(v19), sub_24A719EC0((uint64_t)v18), v21 = (uint64_t)v23, v20 = v24, !v23))
      {
        sub_24A6E8EE8(0);
        sub_24A719EC0(0);
        sub_24A719EC0((uint64_t)v23);
        swift_release();
        return swift_release();
      }
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v21;
      *(_QWORD *)(v22 + 24) = v20;
      sub_24A6E8EE8(v21);
      sub_24A719EC0((uint64_t)sub_24A71AA10);
      sub_24A719EC0((uint64_t)v23);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24A727B44(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_24A77A018();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24A728748(&v27, a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_24A779A3C();
  swift_bridgeObjectRetain_n();
  v10 = a1;
  v11 = sub_24A77A00C();
  v12 = sub_24A77BC74();
  if (!os_log_type_enabled(v11, v12))
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v23 = v7;
  v24 = v6;
  v13 = swift_slowAlloc();
  v14 = swift_slowAlloc();
  v27 = v14;
  *(_DWORD *)v13 = 136315394;
  swift_bridgeObjectRetain();
  v26 = sub_24A76BC40(a2, a3, &v27);
  sub_24A77BE00();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v13 + 12) = 2048;
  v15 = &v10[OBJC_IVAR___WOTaskFinalizer_tasks];
  swift_beginAccess();
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  if (!v17)
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v18 = sub_24A64E74C(a2, a3);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
    goto LABEL_8;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  v22 = *(_QWORD *)(v20 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v25 = v22;
  sub_24A77BE00();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_24A635000, v11, v12, "Finalizer: Finalized identifier %s, running %ld tasks", (uint8_t *)v13, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24BD1A2B4](v14, -1, -1);
  MEMORY[0x24BD1A2B4](v13, -1, -1);

  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v24);
}

uint64_t sub_24A727E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = (uint64_t *)(a1 + OBJC_IVAR___WOTaskFinalizer_tasks);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_8;
LABEL_5:
    v12 = 0;
    v13 = 0;
LABEL_11:
    v19 = *a4;
    *a4 = (uint64_t)v12;
    a4[1] = v13;
    sub_24A719EC0(v19);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v7;
    *v7 = 0x8000000000000000;
    sub_24A6511DC((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
    *v7 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_24A64E74C(a2, a3);
  if ((v10 & 1) != 0)
  {
    v11 = *(_QWORD **)(*(_QWORD *)(v8 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v11[2])
    goto LABEL_5;
LABEL_8:
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    v15 = v11[2];
    if (v15)
    {
LABEL_10:
      v16 = v15 - 1;
      v17 = &v11[2 * v15 - 2];
      v13 = swift_allocObject();
      v18 = *((_OWORD *)v17 + 2);
      v11[2] = v16;
      *(_OWORD *)(v13 + 16) = v18;
      v12 = sub_24A67E1CC;
      goto LABEL_11;
    }
  }
  else
  {
    result = (uint64_t)sub_24A72A3CC(v11);
    v11 = (_QWORD *)result;
    v15 = *(_QWORD *)(result + 16);
    if (v15)
      goto LABEL_10;
  }
  __break(1u);
  return result;
}

id TaskFinalizer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TaskFinalizer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TaskFinalizer()
{
  return objc_opt_self();
}

uint64_t method lookup function for TaskFinalizer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_24A72809C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_24A7280C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24A77BEC0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_24A77C22C();
        sub_24A77C238();
        result = sub_24A77C25C();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_BYTE *)(v10 + v3);
        v12 = (_BYTE *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_24A778854() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24A7282A0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24A77BEC0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_24A77C22C();
        swift_bridgeObjectRetain();
        sub_24A77BA1C();
        v9 = sub_24A77C25C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24A728474(_QWORD *a1, void *a2)
{
  return sub_24A72849C(a1, a2, (void (*)(_QWORD))type metadata accessor for ArtworkBridge, &qword_25794D638);
}

uint64_t sub_24A728488(_QWORD *a1, void *a2)
{
  return sub_24A72849C(a1, a2, (void (*)(_QWORD))type metadata accessor for MediaMomentBridge, &qword_25794D630);
}

uint64_t sub_24A72849C(_QWORD *a1, void *a2, void (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = v4;
  v10 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v11 = *v4;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = a2;
    v13 = sub_24A77BEF0();

    if (v13)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v35;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_24A77BEE4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v25 = sub_24A7288F4(v11, result + 1, a4, a3);
    v36 = v25;
    v26 = *(_QWORD *)(v25 + 16);
    if (*(_QWORD *)(v25 + 24) <= v26)
    {
      v31 = v26 + 1;
      v32 = v12;
      sub_24A728AE8(v31, a4);
      v27 = v36;
    }
    else
    {
      v27 = v25;
      v28 = v12;
    }
    sub_24A72905C((uint64_t)v12, v27);
    *v7 = v27;
    swift_bridgeObjectRelease();
    *a1 = v12;
  }
  else
  {
    swift_bridgeObjectRetain();
    v15 = sub_24A77BDB8();
    v16 = -1 << *(_BYTE *)(v10 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      a3(0);
      v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
      v19 = sub_24A77BDC4();

      if ((v19 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v23 = *(void **)(*(_QWORD *)(*v4 + 48) + 8 * v17);
        *a1 = v23;
        v24 = v23;
        return 0;
      }
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
        v22 = sub_24A77BDC4();

        if ((v22 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *v4;
    *v4 = 0x8000000000000000;
    v30 = a2;
    sub_24A7290DC((uint64_t)v30, v17, isUniquelyReferenced_nonNull_native, a4, a3);
    *v4 = v37;
    swift_bridgeObjectRelease();
    *a1 = v30;
  }
  return 1;
}

uint64_t sub_24A728748(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_24A77C22C();
  swift_bridgeObjectRetain();
  sub_24A77BA1C();
  v8 = sub_24A77C25C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_24A77C184() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_24A77C184() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24A729260(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24A7288F4(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_24A77BF2C();
    v19 = v6;
    sub_24A77BED8();
    if (sub_24A77BEFC())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_24A728AE8(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_24A77BDB8();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_24A77BEFC());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v6;
}

uint64_t sub_24A728AE8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_24A77BF20();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_24A77BDB8();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_24A728D80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949830);
  v3 = sub_24A77BF20();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_24A77C22C();
      sub_24A77BA1C();
      result = sub_24A77C25C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_24A72905C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_24A77BDB8();
  result = sub_24A77BECC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_24A7290DC(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(_QWORD))
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_24A728AE8(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_24A7293F8(a4);
      goto LABEL_14;
    }
    sub_24A729748(v11, a4);
  }
  v12 = *v5;
  v13 = sub_24A77BDB8();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    a5(0);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_24A77BDC4();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_24A77C1A8();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_24A77BDC4();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_24A729260(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_24A728D80();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_24A729598();
      goto LABEL_22;
    }
    sub_24A7299BC();
  }
  v11 = *v4;
  sub_24A77C22C();
  sub_24A77BA1C();
  result = sub_24A77C25C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_24A77C184(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_24A77C1A8();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_24A77C184();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

id sub_24A7293F8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_24A77BF14();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24A729598()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949830);
  v2 = *v0;
  v3 = sub_24A77BF14();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24A729748(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_24A77BF20();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_24A77BDB8();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24A7299BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949830);
  v3 = sub_24A77BF20();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_24A77C22C();
    swift_bridgeObjectRetain();
    sub_24A77BA1C();
    result = sub_24A77C25C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24A729C68(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_24A64DA04(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = sub_24A779D90();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    result = sub_24A77C058();
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  return sub_24A72A4A8(a3);
}

char *sub_24A729E30(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_24A64DA2C(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257947440);
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_24A77C058();
  __break(1u);
  return result;
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_24A729FD0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A72A010()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_24A72A034()
{
  uint64_t v0;

  return sub_24A747230(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24A72A03C()
{
  return objectdestroy_12Tm();
}

uint64_t sub_24A72A044()
{
  uint64_t v0;

  return sub_24A727B44(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_24A72A050()
{
  return swift_deallocObject();
}

uint64_t sub_24A72A060()
{
  return objectdestroy_12Tm();
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24A72A0A0()
{
  uint64_t v0;

  return sub_24A727E3C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

uint64_t sub_24A72A0AC()
{
  return swift_deallocObject();
}

void (*sub_24A72A0BC(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_24A72A304(v6);
  v6[10] = sub_24A72A19C(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_24A72A14C;
}

void sub_24A72A14C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_24A72A19C(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_24A64E74C(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_24A72A2C8;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_24A6DBCB0();
      goto LABEL_7;
    }
    sub_24A6DE0B0(v16, a4 & 1);
    v20 = sub_24A64E74C(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_24A77C1B4();
  __break(1u);
  return result;
}

void sub_24A72A2C8(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_24A72A330(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_24A72A304(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_24A72A324;
}

uint64_t sub_24A72A324(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_24A72A330(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_24A651528(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_24A7282A0(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

_QWORD *sub_24A72A3CC(_QWORD *a1)
{
  return sub_24A64DA2C(0, a1[2], 0, a1);
}

uint64_t sub_24A72A3E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A72A414()
{
  return sub_24A72A494((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A72737C);
}

uint64_t sub_24A72A420()
{
  return swift_deallocObject();
}

uint64_t sub_24A72A430()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24A72A454()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A72A488()
{
  return sub_24A72A494((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A726824);
}

uint64_t sub_24A72A494(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_24A72A4A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D628);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CadenceMetricView.init(activityType:cadence:metricType:formattingManager:visualAlertDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 16) = a3 & 1;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  *(_QWORD *)(a8 + 56) = result;
  *(_BYTE *)(a8 + 64) = 0;
  return result;
}

uint64_t sub_24A72A5A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  id v12;
  uint64_t v13;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_BYTE *)(v0 + 64);
  switch(v2)
  {
    case 15:
      swift_bridgeObjectRetain();
      v6 = v1;
      v7 = v3;
      sub_24A63BEC0(v4, v5);
      sub_24A63BEC0(v4, v5);
      sub_24A63E608(v4, v5, &v13);
      sub_24A63BEDC(v4, v5);
      swift_bridgeObjectRelease();

      sub_24A63BEDC(v4, v5);
      if (v13 <= 8u && ((1 << v13) & 0x181) != 0)
      {
        if (qword_2544D6160 == -1)
        {
LABEL_8:
          swift_beginAccess();
          v8 = (id)qword_2544D6158;
LABEL_12:
          v9 = sub_24A77856C();

          return v9;
        }
      }
      else if (qword_2544D6160 == -1)
      {
        goto LABEL_8;
      }
      swift_once();
      goto LABEL_8;
    case 50:
      if (qword_2544D6160 == -1)
        goto LABEL_11;
      goto LABEL_15;
    case 16:
      if (qword_2544D6160 == -1)
      {
LABEL_11:
        swift_beginAccess();
        v8 = (id)qword_2544D6158;
        goto LABEL_12;
      }
LABEL_15:
      swift_once();
      goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v11 = v1;
  v12 = v3;
  sub_24A63BEC0(v4, v5);
  sub_24A77BF5C();
  sub_24A77BA4C();
  type metadata accessor for HKWorkoutMetricType(0);
  sub_24A77C004();
  sub_24A77BA4C();
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

uint64_t sub_24A72A964()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  id v12;
  uint64_t v13;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_BYTE *)(v0 + 64);
  switch(v2)
  {
    case 15:
      swift_bridgeObjectRetain();
      v6 = v1;
      v7 = v3;
      sub_24A63BEC0(v4, v5);
      sub_24A63BEC0(v4, v5);
      sub_24A63E608(v4, v5, &v13);
      sub_24A63BEDC(v4, v5);
      swift_bridgeObjectRelease();

      sub_24A63BEDC(v4, v5);
      if (v13 <= 8u && ((1 << v13) & 0x181) != 0)
      {
        if (qword_2544D6160 == -1)
        {
LABEL_8:
          swift_beginAccess();
          v8 = (id)qword_2544D6158;
LABEL_12:
          v9 = sub_24A77856C();

          return v9;
        }
      }
      else if (qword_2544D6160 == -1)
      {
        goto LABEL_8;
      }
      swift_once();
      goto LABEL_8;
    case 50:
      if (qword_2544D6160 == -1)
        goto LABEL_11;
      goto LABEL_15;
    case 16:
      if (qword_2544D6160 == -1)
      {
LABEL_11:
        swift_beginAccess();
        v8 = (id)qword_2544D6158;
        goto LABEL_12;
      }
LABEL_15:
      swift_once();
      goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v11 = v1;
  v12 = v3;
  sub_24A63BEC0(v4, v5);
  sub_24A77BF5C();
  sub_24A77BA4C();
  type metadata accessor for HKWorkoutMetricType(0);
  sub_24A77C004();
  sub_24A77BA4C();
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

uint64_t sub_24A72AD28()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  id v7;
  char v10;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_BYTE *)(v0 + 64);
  swift_bridgeObjectRetain();
  v6 = v1;
  v7 = v2;
  sub_24A63BEC0(v4, v5);
  sub_24A63BEC0(v4, v5);
  sub_24A63E608(v4, v5, &v10);
  sub_24A63BEDC(v4, v5);
  swift_bridgeObjectRelease();

  sub_24A63BEDC(v4, v5);
  if (v10 == 8)
  {
    swift_bridgeObjectRetain();
  }
  else if (objc_msgSend(v6, sel_effectiveTypeIdentifier) == (id)13)
  {
    return sub_24A72A964();
  }
  else
  {
    return sub_24A72A5A0();
  }
  return v3;
}

uint64_t sub_24A72AE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = sub_24A778674();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_24A77C16C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - v16;
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v18 = (id)qword_2544D6158;
    v19 = sub_24A77856C();

  }
  else
  {
    v27 = *(_QWORD *)(v0 + 8);
    sub_24A77886C();
    v23 = sub_24A6971B4();
    sub_24A7785E4();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE38E8], v3);
    MEMORY[0x24BD15C28](v6, 0, 1, v8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v11, v8);
    v21 = v24;
    sub_24A778668();
    MEMORY[0x24BD15C34](v21, v8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    v20(v14, v8);
    sub_24A6971F8();
    sub_24A77B8E4();
    v20(v17, v8);
    return v28;
  }
  return v19;
}

uint64_t CadenceMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *v1;
  v4 = sub_24A72AE78();
  v13 = v5;
  v14 = v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_localizedShortCadenceUnitStringForActivityType_, objc_msgSend(v3, sel_identifier));
  if (v6)
  {
    v7 = v6;
    v8 = sub_24A77B9B0();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  result = sub_24A72AD28();
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v13;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v12;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_24A72B2D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for CadenceMetricView(uint64_t a1)
{

  swift_bridgeObjectRelease();
  return sub_24A63BEDC(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for CadenceMetricView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_BYTE *)(a2 + 64);
  v9 = v3;
  v10 = v5;
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v7, v8);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for CadenceMetricView(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v2 = a2;
  v4 = *a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v6 = v4;

  v7 = v2[1];
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 24) = v2[3];
  v8 = v2[4];
  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 40) = v2[5];
  *(_QWORD *)(a1 + 48) = v2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (uint64_t)v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_24A63BEC0(v11, (char)v2);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_24A63BEDC(v12, v13);
  return a1;
}

uint64_t assignWithTake for CadenceMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;

  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v8;
  sub_24A63BEDC(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for CadenceMetricView()
{
  return &type metadata for CadenceMetricView;
}

uint64_t _HKWorkoutGoalType.displayName(formattingManager:)(void *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  void *v6;
  id v7;

  switch(a2)
  {
    case 0:
      if (qword_2544D6160 != -1)
        goto LABEL_15;
      goto LABEL_9;
    case 1:
      if (qword_2544D6160 == -1)
        goto LABEL_9;
      goto LABEL_15;
    case 2:
      if (qword_2544D6160 == -1)
        goto LABEL_9;
      goto LABEL_15;
    case 3:
      v6 = (void *)sub_24A77B980();
      v7 = objc_msgSend(a1, sel_localizationKeyForEnergyBaseKey_, v6);

      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x24A72B834);
      }
      sub_24A77B9B0();

      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v2 = (id)qword_2544D6158;
      v3 = sub_24A77856C();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      if (qword_2544D6160 == -1)
        goto LABEL_9;
LABEL_15:
      swift_once();
LABEL_9:
      swift_beginAccess();
      v2 = (id)qword_2544D6158;
      v3 = sub_24A77856C();
LABEL_10:

      return v3;
  }
}

uint64_t _HKWorkoutGoalType.displayNameShort(formattingManager:)(void *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  void *v6;
  id v7;

  switch(a2)
  {
    case 0:
      if (qword_2544D6160 != -1)
        goto LABEL_15;
      goto LABEL_9;
    case 1:
      if (qword_2544D6160 == -1)
        goto LABEL_9;
      goto LABEL_15;
    case 2:
      if (qword_2544D6160 == -1)
        goto LABEL_9;
      goto LABEL_15;
    case 3:
      v6 = (void *)sub_24A77B980();
      v7 = objc_msgSend(a1, sel_localizationKeyForEnergyBaseKey_, v6);

      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x24A72BB98);
      }
      sub_24A77B9B0();

      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v2 = (id)qword_2544D6158;
      v3 = sub_24A77856C();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      if (qword_2544D6160 == -1)
        goto LABEL_9;
LABEL_15:
      swift_once();
LABEL_9:
      swift_beginAccess();
      v2 = (id)qword_2544D6158;
      v3 = sub_24A77856C();
LABEL_10:

      return v3;
  }
}

uint64_t _HKWorkoutGoalType.accessibilityLabel(formattingManager:)(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;

  switch(a2)
  {
    case 1:
      if (qword_2544D6160 != -1)
        goto LABEL_10;
      break;
    case 2:
      if (qword_2544D6160 != -1)
        goto LABEL_10;
      break;
    case 3:
      if (qword_2544D6160 != -1)
        goto LABEL_10;
      break;
    default:
      if (qword_2544D6160 != -1)
LABEL_10:
        swift_once();
      break;
  }
  swift_beginAccess();
  v2 = (id)qword_2544D6158;
  v3 = sub_24A77856C();

  return v3;
}

uint64_t NLSessionActivityGoal.displayNameShort(formattingManager:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;

  if ((sub_24A77BD58() & 1) == 0)
    return _HKWorkoutGoalType.displayNameShort(formattingManager:)(a1, (uint64_t)objc_msgSend(v1, sel_goalTypeIdentifier));
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v3 = (id)qword_2544D6158;
  v4 = sub_24A77856C();

  return v4;
}

uint64_t NLSessionActivityGoal.accessibilityIdentifier.getter()
{
  void *v0;

  if ((sub_24A77BD58() & 1) != 0)
    return 0xD000000000000011;
  objc_msgSend(v0, sel_goalTypeIdentifier);
  return _sSo18_HKWorkoutGoalTypeV9WorkoutUIE23accessibilityIdentifierSSvg_0();
}

unint64_t AssetBundleReasonBridge.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

unint64_t sub_24A72BF64()
{
  unint64_t result;

  result = qword_25794D640;
  if (!qword_25794D640)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for AssetBundleReasonBridge, &type metadata for AssetBundleReasonBridge);
    atomic_store(result, (unint64_t *)&qword_25794D640);
  }
  return result;
}

uint64_t *sub_24A72BFA8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetBundleReasonBridge()
{
  return &type metadata for AssetBundleReasonBridge;
}

uint64_t sub_24A72BFD4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v20 = a3;
  v5 = sub_24A779CAC();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v19 = sub_24A77B320();
  MEMORY[0x24BDAC7A8](v19);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A77B848();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - v14;
  if ((a1 & 1) == 0)
  {
    sub_24A72C570(a2, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_24A72C5B8((uint64_t)v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      sub_24A77B83C();
      sub_24A72C644();
      sub_24A77B974();
      v17 = *(void (**)(char *, uint64_t))(v10 + 8);
      v17(v13, v9);
      v17(v15, v9);
    }
    __asm { BR              X10 }
  }
  sub_24A77B368();
  v16 = sub_24A77B374();
  swift_release();
  v23 = v16;
  return sub_24A77A4BC();
}

uint64_t sub_24A72C570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A72C5B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948F30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A72C5F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794D650;
  if (!qword_25794D650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D648);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEECA0], v1);
    atomic_store(result, (unint64_t *)&qword_25794D650);
  }
  return result;
}

unint64_t sub_24A72C644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794D658;
  if (!qword_25794D658)
  {
    v1 = sub_24A77B848();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDFADF0], v1);
    atomic_store(result, (unint64_t *)&qword_25794D658);
  }
  return result;
}

_QWORD *MetricNavigationTracker.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  swift_allocObject();
  v4 = sub_24A72CF44(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t MetricNavigationTracker.eventHub.getter()
{
  return swift_unknownObjectRetain();
}

_QWORD *MetricNavigationTracker.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2 = sub_24A72CF44(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_24A72C738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_24A778A04();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_24A779C04();
    sub_24A72C854((uint64_t)v3);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_24A72C7FC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) = 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_24A72C854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unsigned int *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v68 = a1;
  v2 = sub_24A779C28();
  v3 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  v67 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v65 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A778D4C();
  MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E0);
  MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E8);
  MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F0);
  MEMORY[0x24BDAC7A8](v11);
  v59 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F8);
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (void (*)(char *, uint64_t, uint64_t))sub_24A778E6C();
  v50 = *((_QWORD *)v51 - 1);
  MEMORY[0x24BDAC7A8](v51);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_24A778D88();
  v60 = *(_QWORD *)(v62 - 8);
  v17 = MEMORY[0x24BDAC7A8](v62);
  v56 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v58 = (char *)&v50 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v50 - v24;
  v26 = sub_24A778EC0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v1 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed;
  swift_beginAccess();
  v55 = v30;
  sub_24A72D264(v30, (uint64_t)v25);
  v31 = sub_24A778A04();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v25, 1, v31);
  sub_24A72D138((uint64_t)v25);
  if (v33 == 1)
  {
    v34 = (unsigned int *)MEMORY[0x24BE8C408];
  }
  else if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) = 0;
    v34 = (unsigned int *)MEMORY[0x24BE8C418];
  }
  else
  {
    v34 = (unsigned int *)MEMORY[0x24BE8C410];
  }
  v35 = *v34;
  v54 = v27;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 104);
  v53 = v29;
  v52 = v26;
  v36(v29, v35, v26);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v16, v29, v26);
  (*(void (**)(char *, _QWORD, _QWORD *))(v50 + 104))(v16, *MEMORY[0x24BE8B530], v51);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v51(v23, v68, v31);
  v50 = *(_QWORD *)(v32 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v50)(v23, 0, 1, v31);
  v37 = sub_24A778E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v57, 1, 1, v37);
  v38 = sub_24A778E0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v59, 1, 1, v38);
  v39 = v61;
  sub_24A778DA0();
  v40 = sub_24A778DAC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949700);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v63, 1, 1, v41);
  v42 = sub_24A778E84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v64, 1, 1, v42);
  v43 = v58;
  sub_24A778D7C();
  v44 = v60;
  v45 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v56, v43, v62);
  v46 = v65;
  sub_24A779C34();
  swift_getObjectType();
  sub_24A63C880(&qword_257949708, (uint64_t (*)(uint64_t))MEMORY[0x24BE8E8A8], MEMORY[0x24BE8E8A0]);
  v47 = v66;
  sub_24A779EEC();
  v51(v23, v68, v31);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v50)(v23, 0, 1, v31);
  v48 = v55;
  swift_beginAccess();
  sub_24A72D2AC((uint64_t)v23, v48);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v53, v52);
}

uint64_t MetricNavigationTracker.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_24A72D138(v0 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed);
  return v0;
}

uint64_t MetricNavigationTracker.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_24A72D138(v0 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed);
  return swift_deallocClassInstance();
}

uint64_t sub_24A72CF1C()
{
  return swift_unknownObjectRetain();
}

_QWORD *sub_24A72CF44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t);
  _BYTE v11[40];

  v3 = v2;
  v6 = (char *)v2 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_lastPageViewed;
  v7 = sub_24A778A04();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v3[2] = a1;
  v3[3] = a2;
  sub_24A779F40();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  v3[4] = sub_24A779F34();
  *((_BYTE *)v3 + OBJC_IVAR____TtC9WorkoutUI23MetricNavigationTracker_isBackNavigation) = 0;
  swift_getObjectType();
  sub_24A779C10();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE8E7D0];
  swift_allocObject();
  swift_weakInit();
  sub_24A63C880(&qword_2579494F0, v8, MEMORY[0x24BE8E7B8]);
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  sub_24A779C4C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BE8EAC0];
  swift_allocObject();
  swift_weakInit();
  sub_24A63C880(&qword_25794D770, v9, MEMORY[0x24BE8EAA8]);
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v3;
}

uint64_t sub_24A72D138(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of MetricNavigationTracking.eventHub.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24A72D180()
{
  return type metadata accessor for MetricNavigationTracker();
}

uint64_t type metadata accessor for MetricNavigationTracker()
{
  uint64_t result;

  result = qword_25794D688;
  if (!qword_25794D688)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24A72D1C4()
{
  unint64_t v0;

  sub_24A688080();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MetricNavigationTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MetricNavigationTracker.__allocating_init(eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_24A72D264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A72D2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A72D2F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24A72D318()
{
  return sub_24A72C738();
}

uint64_t sub_24A72D320()
{
  return sub_24A72C7FC();
}

_QWORD *sub_24A72D32C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for PreviewStepMetricView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for PreviewStepMetricView(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PreviewStepMetricView()
{
  return &type metadata for PreviewStepMetricView;
}

uint64_t sub_24A72D408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A72D418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_1;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[6];

  v68 = a1;
  v71 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D828);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D818);
  MEMORY[0x24BDAC7A8](v62);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D808);
  MEMORY[0x24BDAC7A8](v63);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7F8);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7E8);
  MEMORY[0x24BDAC7A8](v70);
  v66 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v61 - v12;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D850);
  MEMORY[0x24BDAC7A8](v69);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_24A779A6C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v61 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v61 - v23;
  v25 = sub_24A779340();
  v72[3] = v25;
  v72[4] = sub_24A63C880((unint64_t *)&qword_257946FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5928], MEMORY[0x24BEC5918]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v72);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEC5920], v25);
  LOBYTE(v25) = sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  if ((v25 & 1) != 0)
  {
    sub_24A779304();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v24, v15);
    v27 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v21, v15);
    if (v27 == *MEMORY[0x24BEC6070]
      || v27 == *MEMORY[0x24BEC6068]
      || v27 == *MEMORY[0x24BEC6078]
      || v27 == *MEMORY[0x24BEC6080])
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
      v53 = sub_24A77B3EC();
      v54 = sub_24A77ACD8();
      v55 = sub_24A77ACF0();
      v56 = sub_24A77ACE4();
      sub_24A77ACE4();
      if (sub_24A77ACE4() != v54)
        v56 = sub_24A77ACE4();
      sub_24A77ACE4();
      if (sub_24A77ACE4() != v55)
        v56 = sub_24A77ACE4();
      sub_24A77A390();
      *(_QWORD *)v14 = v53;
      v14[8] = v56;
      *((_QWORD *)v14 + 2) = v57;
      *((_QWORD *)v14 + 3) = v58;
      *((_QWORD *)v14 + 4) = v59;
      *((_QWORD *)v14 + 5) = v60;
      v14[48] = 0;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7D8);
      sub_24A72EF80();
      sub_24A72EFE4();
      return sub_24A77AB28();
    }
    else
    {
      result = sub_24A77C01C();
      __break(1u);
    }
  }
  else
  {
    sub_24A779304();
    v28 = sub_24A779A60();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v31 = sub_24A72DB70(0x7FFFFFFFFFFFFFFFLL, 1, v28, v30);
    sub_24A72E040(v31, (uint64_t)v4);
    swift_bridgeObjectRelease();
    sub_24A63CCC0((uint64_t)v4, (uint64_t)v6, &qword_25794D828);
    v32 = &v6[*(int *)(v62 + 36)];
    *(_QWORD *)v32 = 0;
    *((_WORD *)v32 + 4) = 1;
    sub_24A63CD04((uint64_t)v4, &qword_25794D828);
    KeyPath = swift_getKeyPath();
    sub_24A63CCC0((uint64_t)v6, (uint64_t)v8, &qword_25794D818);
    v34 = (uint64_t *)&v8[*(int *)(v63 + 36)];
    *v34 = KeyPath;
    v34[1] = 0x3FE0000000000000;
    sub_24A63CD04((uint64_t)v6, &qword_25794D818);
    v35 = swift_getKeyPath();
    v36 = v65;
    sub_24A63CCC0((uint64_t)v8, v65, &qword_25794D808);
    v37 = v36 + *(int *)(v64 + 36);
    *(_QWORD *)v37 = v35;
    *(_QWORD *)(v37 + 8) = 1;
    *(_BYTE *)(v37 + 16) = 0;
    sub_24A63CD04((uint64_t)v8, &qword_25794D808);
    v38 = sub_24A77ACD8();
    v39 = sub_24A77ACF0();
    v40 = sub_24A77ACE4();
    sub_24A77ACE4();
    if (sub_24A77ACE4() != v38)
      v40 = sub_24A77ACE4();
    sub_24A77ACE4();
    if (sub_24A77ACE4() != v39)
      v40 = sub_24A77ACE4();
    sub_24A77A390();
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v49 = v66;
    sub_24A63CCC0(v36, v66, &qword_25794D7F8);
    v50 = v49 + *(int *)(v70 + 36);
    *(_BYTE *)v50 = v40;
    *(_QWORD *)(v50 + 8) = v42;
    *(_QWORD *)(v50 + 16) = v44;
    *(_QWORD *)(v50 + 24) = v46;
    *(_QWORD *)(v50 + 32) = v48;
    *(_BYTE *)(v50 + 40) = 0;
    sub_24A63CD04(v36, &qword_25794D7F8);
    v51 = v67;
    sub_24A63F6C4(v49, v67, &qword_25794D7E8);
    sub_24A63CCC0(v51, (uint64_t)v14, &qword_25794D7E8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7D8);
    sub_24A72EF80();
    sub_24A72EFE4();
    sub_24A77AB28();
    return sub_24A63CD04(v51, &qword_25794D7E8);
  }
  return result;
}

uint64_t sub_24A72DB70(uint64_t a1, char a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t result;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v45;

  if (a1 < 0)
  {
LABEL_50:
    result = sub_24A77C010();
    __break(1u);
  }
  else
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = MEMORY[0x24BEE4AF8];
    v9 = swift_allocObject();
    v10 = v9;
    *(_QWORD *)(v9 + 16) = 15;
    v11 = HIBYTE(a4) & 0xF;
    if (a1)
    {
      v12 = (a4 & 0x2000000000000000) != 0 ? HIBYTE(a4) & 0xF : a3 & 0xFFFFFFFFFFFFLL;
      if (v12)
      {
        v41 = a1;
        v45 = 4 * v12;
        v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v14 = 15;
        v15 = 15;
        v42 = (_QWORD *)a3;
        v43 = v9;
        while (1)
        {
          v16 = sub_24A77BAAC();
          v18 = v17;
          if (!((v17 & 0x2000000000000000) != 0 ? HIBYTE(v17) & 0xF : v16 & 0xFFFFFFFFFFFFLL))
            break;
          if ((v17 & 0x1000000000000000) != 0)
          {
            v20 = sub_24A77BF50();
          }
          else
          {
            if ((v17 & 0x2000000000000000) == 0 && (v16 & 0x1000000000000000) == 0)
              sub_24A77BFA4();
            v20 = sub_24A77BFB0();
          }
          v4 = v20;
          swift_bridgeObjectRelease();
          if ((v4 - 14) > 0xFFFFFFFB || (v4 - 8232) < 2 || (_DWORD)v4 == 133)
          {
            if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
            {
              v14 = sub_24A77BA34();
              *(_QWORD *)(v10 + 16) = v14;
              v15 = v14;
            }
            else
            {
              if (v14 >> 14 < v15 >> 14)
                goto LABEL_49;
              v21 = a4;
              v22 = sub_24A77BAC4();
              v24 = v23;
              v26 = v25;
              v4 = v27;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v13 = sub_24A64DB38(0, v13[2] + 1, 1, v13);
              v28 = v13;
              v29 = v13[2];
              v30 = v28;
              v31 = v28[3];
              if (v29 >= v31 >> 1)
                v30 = sub_24A64DB38((_QWORD *)(v31 > 1), v29 + 1, 1, v30);
              v30[2] = v29 + 1;
              v32 = &v30[4 * v29];
              v13 = v30;
              v32[4] = v22;
              v32[5] = v24;
              v32[6] = v26;
              v32[7] = v4;
              *(_QWORD *)(v8 + 16) = v30;
              a4 = v21;
              a3 = (unint64_t)v42;
              v15 = sub_24A77BA34();
              v10 = v43;
              *(_QWORD *)(v43 + 16) = v15;
              v14 = v15;
              if (v13[2] == v41)
              {
LABEL_38:
                if (v45 == v15 >> 14 && (a2 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_46;
                }
                if (v45 < v15 >> 14)
                {
LABEL_49:
                  sub_24A77C010();
                  __break(1u);
                  goto LABEL_50;
                }
                a3 = (unint64_t)v13;
                v15 = sub_24A77BAC4();
                v18 = v34;
                v13 = v35;
                v4 = v36;
                swift_bridgeObjectRelease();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                {
LABEL_43:
                  v38 = *(_QWORD *)(a3 + 16);
                  v37 = *(_QWORD *)(a3 + 24);
                  if (v38 >= v37 >> 1)
                    a3 = (unint64_t)sub_24A64DB38((_QWORD *)(v37 > 1), v38 + 1, 1, (_QWORD *)a3);
                  *(_QWORD *)(a3 + 16) = v38 + 1;
                  v39 = (_QWORD *)(a3 + 32 * v38);
                  v39[4] = v15;
                  v39[5] = v18;
                  v39[6] = v13;
                  v39[7] = v4;
                  v13 = (_QWORD *)a3;
                  *(_QWORD *)(v8 + 16) = a3;
                  goto LABEL_46;
                }
LABEL_48:
                a3 = (unint64_t)sub_24A64DB38(0, *(_QWORD *)(a3 + 16) + 1, 1, (_QWORD *)a3);
                goto LABEL_43;
              }
            }
          }
          else
          {
            v14 = sub_24A77BA34();
          }
          if (v45 == v14 >> 14)
            goto LABEL_38;
        }
        __break(1u);
        goto LABEL_48;
      }
    }
    if ((a4 & 0x2000000000000000) == 0)
      v11 = a3 & 0xFFFFFFFFFFFFLL;
    v33 = 7;
    if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0)
      v33 = 11;
    sub_24A72EDA8(v33 | (v11 << 16), v9, a2 & 1, v8);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v8 + 16);
LABEL_46:
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_24A72E040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v21[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D848);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D858);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A779A6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 == 1)
  {
    sub_24A779304();
    v14 = sub_24A779A60();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v22 = v14;
    v23 = v16;
    sub_24A645928();
    *(_QWORD *)v8 = sub_24A77AFD8();
    *((_QWORD *)v8 + 1) = v17;
    v8[16] = v18 & 1;
    *((_QWORD *)v8 + 3) = v19;
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_25794D840, &qword_25794D848, MEMORY[0x24BDF4700]);
    return sub_24A77AB28();
  }
  else
  {
    _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
    *(_QWORD *)v5 = sub_24A77A9FC();
    *((_QWORD *)v5 + 1) = 0xC000000000000000;
    v5[16] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794D860);
    v22 = 0;
    v23 = v13;
    swift_getKeyPath();
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947120);
    sub_24A646BEC();
    sub_24A77B5E4();
    sub_24A63CCC0((uint64_t)v5, (uint64_t)v8, &qword_25794D848);
    swift_storeEnumTagMultiPayload();
    sub_24A63CFF0(&qword_25794D840, &qword_25794D848, MEMORY[0x24BDF4700]);
    sub_24A77AB28();
    return sub_24A63CD04((uint64_t)v5, &qword_25794D848);
  }
}

_QWORD *sub_24A72E344@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*result < *(_QWORD *)(a2 + 16))
  {
    sub_24A72F254();
    swift_bridgeObjectRetain();
    result = (_QWORD *)sub_24A77AFD8();
    *(_QWORD *)a3 = result;
    *(_QWORD *)(a3 + 8) = v4;
    *(_BYTE *)(a3 + 16) = v5 & 1;
    *(_QWORD *)(a3 + 24) = v6;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A72E3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  void (*v35)(uint64_t *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  SEL *v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char v47;
  void *v48;
  id v49;
  SEL *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[3];
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  v73 = a3;
  v71 = sub_24A77A684();
  MEMORY[0x24BDAC7A8](v71);
  v72 = (uint64_t *)((char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_24A77B410();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D778);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D780);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D788);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D790);
  MEMORY[0x24BDAC7A8](v63);
  v74 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D798);
  MEMORY[0x24BDAC7A8](v64);
  v66 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7A0);
  MEMORY[0x24BDAC7A8](v65);
  v69 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7A8);
  MEMORY[0x24BDAC7A8](v67);
  v68 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a1;
  sub_24A72EB84(a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF40B8], v6);
  KeyPath = swift_getKeyPath();
  v24 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v24 + *(int *)(v25 + 28), v9, v6);
  *v24 = KeyPath;
  sub_24A63CCC0((uint64_t)v12, (uint64_t)v15, &qword_25794D778);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_24A63CD04((uint64_t)v12, &qword_25794D778);
  v26 = swift_getKeyPath();
  sub_24A63CCC0((uint64_t)v15, (uint64_t)v18, &qword_25794D780);
  v27 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  *v27 = v26;
  v27[1] = a2;
  swift_retain();
  sub_24A63CD04((uint64_t)v15, &qword_25794D780);
  if (qword_2579467E8 != -1)
    swift_once();
  if (qword_2579467F8 != -1)
    swift_once();
  sub_24A77B668();
  sub_24A77A4B0();
  v28 = v74;
  sub_24A63CCC0((uint64_t)v18, v74, &qword_25794D788);
  v29 = (_OWORD *)(v28 + *(int *)(v63 + 36));
  v30 = v79;
  *v29 = v78;
  v29[1] = v30;
  v29[2] = v80;
  sub_24A63CD04((uint64_t)v18, &qword_25794D788);
  v31 = sub_24A779340();
  v76 = v31;
  v32 = sub_24A63C880((unint64_t *)&qword_257946FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5928], MEMORY[0x24BEC5918]);
  v77 = v32;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v75);
  v34 = *MEMORY[0x24BEC5920];
  v35 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
  v35(boxed_opaque_existential_1, v34, v31);
  LOBYTE(v28) = sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  v36 = v70;
  v37 = (uint64_t)v66;
  if ((v28 & 1) != 0 || !v70)
  {
    v75[0] = sub_24A77B338();
    sub_24A72EF10();
    sub_24A77B3B0();
  }
  else
  {
    swift_retain();
    v38 = (void *)sub_24A7792F8();
    v39 = objc_msgSend(v38, sel_goalTypeIdentifier);

    v40 = _HKWorkoutGoalType.color.getter((uint64_t)v39);
    MEMORY[0x24BD189B8](v40);
    swift_release();
  }
  v76 = v31;
  v77 = v32;
  v41 = __swift_allocate_boxed_opaque_existential_1(v75);
  v35(v41, v34, v31);
  sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  v42 = sub_24A77B374();
  swift_release();
  v43 = sub_24A77ACB4();
  v44 = v74;
  sub_24A63CCC0(v74, v37, &qword_25794D790);
  v45 = v37 + *(int *)(v64 + 36);
  *(_QWORD *)v45 = v42;
  *(_BYTE *)(v45 + 8) = v43;
  sub_24A63CD04(v44, &qword_25794D790);
  v76 = v31;
  v77 = v32;
  v46 = __swift_allocate_boxed_opaque_existential_1(v75);
  v35(v46, v34, v31);
  v47 = sub_24A779AB4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  if ((v47 & 1) != 0 || !v36)
  {
    v75[0] = sub_24A77B338();
    sub_24A72EF10();
    v51 = sub_24A77B3B0();
  }
  else
  {
    swift_retain();
    v48 = (void *)sub_24A7792F8();
    v49 = objc_msgSend(v48, sel_goalTypeIdentifier);

    v50 = _HKWorkoutGoalType.color.getter((uint64_t)v49);
    v51 = MEMORY[0x24BD189B8](v50);
    swift_release();
  }
  v52 = (uint64_t)v69;
  v53 = swift_getKeyPath();
  sub_24A63CCC0(v37, v52, &qword_25794D798);
  v54 = (uint64_t *)(v52 + *(int *)(v65 + 36));
  *v54 = v53;
  v54[1] = v51;
  sub_24A63CD04(v37, &qword_25794D798);
  if (qword_2579467D8 != -1)
    swift_once();
  v55 = qword_257948950;
  v56 = v72;
  v57 = (char *)v72 + *(int *)(v71 + 20);
  v58 = *MEMORY[0x24BDEEB68];
  v59 = sub_24A77A9D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v57, v58, v59);
  *v56 = v55;
  v56[1] = v55;
  v60 = (uint64_t)v68;
  v61 = (uint64_t)&v68[*(int *)(v67 + 36)];
  sub_24A655654((uint64_t)v56, v61);
  *(_WORD *)(v61 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257948130) + 36)) = 256;
  sub_24A63CCC0(v52, v60, &qword_25794D7A0);
  sub_24A655698((uint64_t)v56);
  sub_24A63CD04(v52, &qword_25794D7A0);
  return sub_24A63F6C4(v60, v73, &qword_25794D7A8);
}

uint64_t sub_24A72EB84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD v15[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D7C0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B9A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = swift_retain();
    sub_24A72D418(v11, (uint64_t)v4);
    sub_24A63CCC0((uint64_t)v4, (uint64_t)v7, &qword_25794D7B8);
    swift_storeEnumTagMultiPayload();
    sub_24A72EF5C();
    sub_24A6DE90C();
    sub_24A77AB28();
    swift_release();
    v12 = (uint64_t)v4;
    v13 = &qword_25794D7B8;
  }
  else
  {
    v15[1] = sub_24A77B3C8();
    sub_24A77B11C();
    swift_release();
    sub_24A63CCC0((uint64_t)v10, (uint64_t)v7, &qword_25794B9A0);
    swift_storeEnumTagMultiPayload();
    sub_24A72EF5C();
    sub_24A6DE90C();
    sub_24A77AB28();
    v12 = (uint64_t)v10;
    v13 = &qword_25794B9A0;
  }
  return sub_24A63CD04(v12, v13);
}

uint64_t sub_24A72EDA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24A72E3D4(*v1, v1[1], a1);
}

uint64_t sub_24A72EDA8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_24A77BAC4();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_24A64DB38(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_24A64DB38((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_24A77C010();
  __break(1u);
  return result;
}

unint64_t sub_24A72EF10()
{
  unint64_t result;

  result = qword_25794D7B0;
  if (!qword_25794D7B0)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3E58], MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_25794D7B0);
  }
  return result;
}

uint64_t sub_24A72EF5C()
{
  return sub_24A63F3CC(&qword_25794D7C8, &qword_25794D7B8, (uint64_t (*)(void))sub_24A72EF80, sub_24A72EFE4);
}

unint64_t sub_24A72EF80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D7D0;
  if (!qword_25794D7D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D7D8);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D7D0);
  }
  return result;
}

uint64_t sub_24A72EFE4()
{
  return sub_24A665CEC(&qword_25794D7E0, &qword_25794D7E8, (uint64_t (*)(void))sub_24A72F008, MEMORY[0x24BDECC60]);
}

unint64_t sub_24A72F008()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D7F0;
  if (!qword_25794D7F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D7F8);
    v2[0] = sub_24A72F08C();
    v2[1] = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D7F0);
  }
  return result;
}

unint64_t sub_24A72F08C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D800;
  if (!qword_25794D800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D808);
    v2[0] = sub_24A665CEC(&qword_25794D810, &qword_25794D818, (uint64_t (*)(void))sub_24A72F130, MEMORY[0x24BDEEC40]);
    v2[1] = sub_24A63CFF0(&qword_257946B70, &qword_257946B78, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D800);
  }
  return result;
}

unint64_t sub_24A72F130()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794D820;
  if (!qword_25794D820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D828);
    v2 = sub_24A72F194();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794D820);
  }
  return result;
}

unint64_t sub_24A72F194()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794D830;
  if (!qword_25794D830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D838);
    v2 = sub_24A63CFF0(&qword_25794D840, &qword_25794D848, MEMORY[0x24BDF4700]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794D830);
  }
  return result;
}

uint64_t sub_24A72F228()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_24A72F24C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A72E344(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_24A72F254()
{
  unint64_t result;

  result = qword_25794D868;
  if (!qword_25794D868)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25794D868);
  }
  return result;
}

uint64_t sub_24A72F298()
{
  return swift_deallocObject();
}

unint64_t sub_24A72F2AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D870;
  if (!qword_25794D870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D7A8);
    v2[0] = sub_24A72F330();
    v2[1] = sub_24A63CFF0(&qword_257948160, &qword_257948130, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D870);
  }
  return result;
}

unint64_t sub_24A72F330()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D878;
  if (!qword_25794D878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D7A0);
    v2[0] = sub_24A72F3B4();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D878);
  }
  return result;
}

unint64_t sub_24A72F3B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D880;
  if (!qword_25794D880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D798);
    v2[0] = sub_24A665CEC(&qword_25794D888, &qword_25794D790, (uint64_t (*)(void))sub_24A72F458, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257948440, &qword_257948448, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D880);
  }
  return result;
}

unint64_t sub_24A72F458()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D890;
  if (!qword_25794D890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D788);
    v2[0] = sub_24A72F4DC();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D890);
  }
  return result;
}

unint64_t sub_24A72F4DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D898;
  if (!qword_25794D898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D780);
    v2[0] = sub_24A72F560();
    v2[1] = sub_24A63CFF0(&qword_25794C4C0, &qword_2579492E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D898);
  }
  return result;
}

unint64_t sub_24A72F560()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794D8A0;
  if (!qword_25794D8A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D778);
    v2 = sub_24A63F3CC(&qword_25794D8A8, &qword_25794D8B0, sub_24A72EF5C, (uint64_t (*)(void))sub_24A6DE90C);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794D8A0);
  }
  return result;
}

id AssetBundleBridge.__allocating_init(assetBundle:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___SMAssetBundle_assetBundle];
  v5 = sub_24A778AB8();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

unint64_t static AssetBundleBridge.bundleReasonBridge(for:)(uint64_t a1, char a2)
{
  unint64_t result;

  if (a2 == -1 || (a2 & 1) == 0)
    return 2;
  result = sub_24A778AA0();
  if (result >= 2)
    return 2;
  return result;
}

uint64_t sub_24A72F6D4()
{
  return sub_24A778A64();
}

uint64_t sub_24A72F708()
{
  return sub_24A778A88();
}

id sub_24A72F73C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A72F7A0()
{
  return sub_24A778A94();
}

uint64_t sub_24A72F828()
{
  char v0;
  char v1;

  v0 = sub_24A778A70();
  if ((v1 & 1) != 0)
    return qword_24A787060[v0];
  else
    return 6;
}

unint64_t sub_24A72F89C()
{
  char v0;
  unint64_t result;

  sub_24A778AAC();
  if ((v0 & 1) == 0)
    return 2;
  result = sub_24A778AA0();
  if (result >= 2)
    return 2;
  return result;
}

id AssetBundleBridge.init(assetBundle:)(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR___SMAssetBundle_assetBundle];
  v4 = sub_24A778AB8();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for AssetBundleBridge();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for AssetBundleBridge()
{
  uint64_t result;

  result = qword_25794D8E8;
  if (!qword_25794D8E8)
    return swift_getSingletonMetadata();
  return result;
}

id AssetBundleBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AssetBundleBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AssetBundleBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetBundleBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A72FAA0()
{
  return type metadata accessor for AssetBundleBridge();
}

uint64_t sub_24A72FAA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778AB8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AssetBundleBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetBundleBridge.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of AssetBundleBridge.workoutIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AssetBundleBridge.downloadingDeviceIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AssetBundleBridge.loadStatus.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AssetBundleBridge.reason.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AssetBundleBridge.__allocating_init(assetBundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_24A72FBB4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_24A77C028();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_24A671DE0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x24BD19588](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24A671DE0(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_24A671DE0(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_24A64E7EC(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24A671DE0(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_24A671DE0(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_24A64E7EC(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A72FDE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_24A778C2C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948918);
  v6 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_24A671E28(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v12(v5, v11, v2);
      swift_dynamicCast();
      v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24A671E28(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v19;
      }
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_24A671E28(v13 > 1, v14 + 1, 1);
        v10 = v19;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_24A731088((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14);
      v11 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

char *GuidedWorkoutBackgroundView.__allocating_init(cornerRadius:)(double a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return GuidedWorkoutBackgroundView.init(cornerRadius:)(a1);
}

char *GuidedWorkoutBackgroundView.init(cornerRadius:)(double a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  objc_super v27;

  v3 = OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView;
  v4 = objc_allocWithZone(MEMORY[0x24BEBD668]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = &v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(_QWORD *)&v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView] = 0;
  *(double *)&v5[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius] = a1;

  v27.receiver = v5;
  v27.super_class = (Class)type metadata accessor for GuidedWorkoutBackgroundView();
  v7 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView;
  v9 = *(void **)&v7[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
  v10 = v7;
  objc_msgSend(v9, sel_setContentMode_, 2);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v10, sel_addSubview_, v9);
  v11 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A7805F0;
  v13 = objc_msgSend(v9, sel_leadingAnchor);
  v14 = objc_msgSend(v10, sel_leadingAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(*(id *)&v7[v8], sel_trailingAnchor);
  v17 = objc_msgSend(v10, sel_trailingAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(*(id *)&v7[v8], sel_topAnchor);
  v20 = objc_msgSend(v10, sel_topAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v7[v8], sel_bottomAnchor);
  v23 = objc_msgSend(v10, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v12 + 56) = v24;
  sub_24A77BB24();
  sub_24A64F254(0, qword_257948500);
  v25 = (void *)sub_24A77BB0C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_activateConstraints_, v25);

  return v10;
}

uint64_t type metadata accessor for GuidedWorkoutBackgroundView()
{
  return objc_opt_self();
}

id sub_24A73037C()
{
  char *v0;
  id result;
  char *v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  double v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  UIImage *v25;
  UIImage *v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  objc_msgSend(v0, sel_bounds);
  v29.origin.x = 0.0;
  v29.origin.y = 0.0;
  v29.size.width = 0.0;
  v29.size.height = 0.0;
  result = (id)CGRectEqualToRect(v27, v29);
  if ((result & 1) == 0)
  {
    v2 = &v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
    v3 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
    v4 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds + 8];
    v5 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds + 16];
    v6 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds + 24];
    objc_msgSend(v0, sel_bounds);
    v30.origin.x = v7;
    v30.origin.y = v8;
    v30.size.width = v9;
    v30.size.height = v10;
    v28.origin.x = v3;
    v28.origin.y = v4;
    v28.size.width = v5;
    v28.size.height = v6;
    result = (id)CGRectEqualToRect(v28, v30);
    if ((result & 1) == 0)
    {
      objc_msgSend(v0, sel_bounds);
      *(_QWORD *)v2 = v11;
      *((_QWORD *)v2 + 1) = v12;
      *((_QWORD *)v2 + 2) = v13;
      *((_QWORD *)v2 + 3) = v14;
      v15 = (void *)objc_opt_self();
      objc_msgSend(v15, sel_begin);
      objc_msgSend(v15, sel_setDisableActions_, 1);
      v16 = *(void **)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer];
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v17, sel_setFrame_);

      }
      v18 = *(void **)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
      v19 = objc_msgSend(v18, sel_image);
      if (!v19
        || (v20 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius],
            objc_msgSend(v0, sel_bounds),
            (v25 = sub_24A70CA2C(v20, v21, v22, v23, v24)) == 0))
      {
        v25 = (UIImage *)v19;
      }
      v26 = v25;
      objc_msgSend(v18, sel_setImage_, v25);

      return objc_msgSend(v15, sel_commit);
    }
  }
  return result;
}

char *sub_24A730594(void *a1, void *a2)
{
  char *v2;
  char *v3;
  void *v6;
  double v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  UIImage *v12;
  UIImage *v13;
  char *result;
  char v15;
  void *v16;

  v3 = v2;
  v6 = *(void **)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
  if (!a1
    || (v7 = *(double *)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius],
        objc_msgSend(v3, sel_bounds),
        (v12 = sub_24A70CA2C(v7, v8, v9, v10, v11)) == 0))
  {
    v12 = a1;
  }
  v13 = v12;
  objc_msgSend(v6, sel_setImage_, v12);

  if (!a2 || (result = (char *)sub_24A69FF14((uint64_t)objc_msgSend(a2, sel_integerValue)), (v15 & 1) != 0))
  {
    if (a1)
      return (char *)sub_24A73088C();
    goto LABEL_12;
  }
  if (!a1)
  {
LABEL_12:
    v16 = *(void **)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer];
    if (v16)
      objc_msgSend(v16, sel_setHidden_, 1);
    result = *(char **)&v3[OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView];
    if (result)
      return (char *)objc_msgSend(result, sel_setHidden_, 1);
    return result;
  }
  if ((unint64_t)(result - 3) >= 2)
  {
    if (result == (char *)2)
      return (char *)sub_24A7308A8();
    if (result != (char *)1)
    {
      result = (char *)sub_24A77C19C();
      __break(1u);
      return result;
    }
    return (char *)sub_24A73088C();
  }
  return result;
}

void sub_24A7307B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v4;

  v2 = *(void **)(v1 + OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView);
  if (v2)
  {
    v4 = v2;
    sub_24A71F908(a1);

  }
}

id sub_24A73088C()
{
  return sub_24A7308C4(&OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer, (uint64_t (*)(_QWORD))sub_24A730958, &OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView);
}

id sub_24A7308A8()
{
  return sub_24A7308C4(&OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView, (uint64_t (*)(_QWORD))sub_24A730BC0, &OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer);
}

id sub_24A7308C4(uint64_t *a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id result;

  v5 = *a1;
  v6 = *(void **)(v3 + *a1);
  v7 = v6;
  v8 = (uint64_t)v6;
  if (!v6)
  {
    v8 = a2(0);
    v7 = *(void **)(v3 + v5);
  }
  *(_QWORD *)(v3 + v5) = v8;
  v9 = v6;

  v10 = *(void **)(v3 + v5);
  if (v10)
    objc_msgSend(v10, sel_setHidden_, 0);
  result = *(id *)(v3 + *a3);
  if (result)
    return objc_msgSend(result, sel_setHidden_, 1);
  return result;
}

id sub_24A730958()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
  v3 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v3, sel_activeAppearance);

  v4 = sub_24A6AC2F8();
  sub_24A72FBB4(v4);
  swift_bridgeObjectRelease();
  v5 = (void *)sub_24A77BB0C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setColors_, v5);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A782FA0;
  sub_24A64F254(0, (unint64_t *)&qword_25794C8D0);
  *(_QWORD *)(v6 + 32) = sub_24A77BDAC();
  *(_QWORD *)(v6 + 40) = sub_24A77BDA0();
  *(_QWORD *)(v6 + 48) = sub_24A77BDA0();
  sub_24A77BB24();
  v7 = (void *)sub_24A77BB0C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setLocations_, v7);

  objc_msgSend(v2, sel_setStartPoint_, 0.5, 0.0);
  objc_msgSend(v2, sel_setEndPoint_, 0.5, 1.0);
  sub_24A77B9B0();
  v8 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v9 = v2;
  v10 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithType_, v10);

  objc_msgSend(v9, sel_setCompositingFilter_, v11);
  v12 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v12, sel_addSublayer_, v9);

  return v9;
}

id sub_24A730BC0()
{
  char *v0;
  char *v1;
  double v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;

  v1 = v0;
  v2 = *(double *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_cornerRadius];
  v3 = objc_allocWithZone((Class)type metadata accessor for VignetteView());
  v4 = VignetteView.init(cornerRadius:)(v2);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v4);
  v5 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579484F8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A7805F0;
  v7 = objc_msgSend(v4, sel_leadingAnchor);
  v8 = *(void **)&v1[OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView];
  v9 = objc_msgSend(v8, sel_leadingAnchor);
  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v6 + 32) = v10;
  v11 = objc_msgSend(v4, sel_trailingAnchor);
  v12 = objc_msgSend(v8, sel_trailingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v6 + 40) = v13;
  v14 = objc_msgSend(v4, sel_topAnchor);
  v15 = objc_msgSend(v8, sel_topAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v6 + 48) = v16;
  v17 = objc_msgSend(v4, sel_bottomAnchor);
  v18 = objc_msgSend(v8, sel_bottomAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v6 + 56) = v19;
  sub_24A77BB24();
  sub_24A64F254(0, qword_257948500);
  v20 = (void *)sub_24A77BB0C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_activateConstraints_, v20);

  return v4;
}

id GuidedWorkoutBackgroundView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void GuidedWorkoutBackgroundView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GuidedWorkoutBackgroundView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GuidedWorkoutBackgroundView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for GuidedWorkoutBackgroundView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GuidedWorkoutBackgroundView.__allocating_init(cornerRadius:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of GuidedWorkoutBackgroundView.update(image:with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of GuidedWorkoutBackgroundView.update(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

void sub_24A730FD8()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR___SMGuidedWorkoutBackgroundView_imageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  v2 = &v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_currentBounds];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_gradientLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___SMGuidedWorkoutBackgroundView_vignetteView] = 0;

  sub_24A77C01C();
  __break(1u);
}

uint64_t sub_24A731088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A731114()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
  swift_beginAccess();
  return *v1;
}

id sub_24A7311E8()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  return *v1;
}

void sub_24A731288(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id ExternalSeymourSessionStatusProvider.__allocating_init(dependenciesWrapper:appBundleIdentifier:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;
  id v8;
  uint64_t v9;
  id v10;

  v7 = objc_allocWithZone(v3);
  v8 = objc_allocWithZone((Class)type metadata accessor for ExternalSeymourSessionStatusProvider());
  v9 = swift_retain();
  v10 = ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(v9, a2, a3);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

id ExternalSeymourSessionStatusProvider.init(dependenciesWrapper:appBundleIdentifier:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  id v8;

  v6 = objc_allocWithZone((Class)type metadata accessor for ExternalSeymourSessionStatusProvider());
  v7 = swift_retain();
  v8 = ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(v7, a2, a3);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v8;
}

id ExternalSeymourSessionStatusProvider.__allocating_init(dependencies:appBundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(a1, a2, a3);
}

uint64_t type metadata accessor for ExternalSeymourSessionStatusProvider()
{
  uint64_t result;

  result = qword_25794D9A8;
  if (!qword_25794D9A8)
    return swift_getSingletonMetadata();
  return result;
}

id ExternalSeymourSessionStatusProvider.init(dependencies:appBundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _BYTE *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  objc_super v14;
  __int128 v15[2];

  v6 = v3;
  sub_24A778770();
  v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive] = 0;
  v7 = &v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_appBundleIdentifier];
  *v7 = a2;
  v7[1] = a3;
  v8 = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)&v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D958);
  sub_24A778B84();
  sub_24A6865F8(v15, (uint64_t)&v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_sessionClient]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949738);
  sub_24A778B84();
  v9 = *((_QWORD *)&v15[0] + 1);
  v10 = &v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_eventHub];
  *v10 = *(_QWORD *)&v15[0];
  v10[1] = v9;
  sub_24A779F40();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  *(_QWORD *)&v6[OBJC_IVAR___NLExternalSeymourSessionStatusProvider_subscriptionToken] = sub_24A779F34();

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for ExternalSeymourSessionStatusProvider();
  v11 = objc_msgSendSuper2(&v14, sel_init);
  swift_getObjectType();
  sub_24A779F28();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = v11;
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_24A779F64();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_24A779EF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  objc_msgSend(v12, sel_updateStatus);
  swift_unknownObjectRelease();

  swift_release();
  return v12;
}

uint64_t sub_24A731828()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_24A73184C(uint64_t a1)
{
  uint64_t v1;

  sub_24A731864(a1, v1);
}

void sub_24A731864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x24BD1A368](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_updateStatus);

  }
}

id ExternalSeymourSessionStatusProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ExternalSeymourSessionStatusProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ExternalSeymourSessionStatusProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExternalSeymourSessionStatusProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ExternalSeymourSessionStatusProvider.updateStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t (**v34)(uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (**v50)(void *);
  char *v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(uint64_t, char *, uint64_t);
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;

  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579497F8);
  v64 = *(_QWORD *)(v66 - 8);
  v62 = *(_QWORD *)(v64 + 64);
  MEMORY[0x24BDAC7A8](v66);
  v63 = (char *)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v55 = (char *)&v55 - v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949500);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v69 = *(_QWORD *)(v70 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v68 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v65 = (char *)&v55 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v55 - v9;
  v10 = sub_24A778818();
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v73 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  sub_24A77880C();
  v16 = v0;
  v17 = v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_lastUpdateTimestamp;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v17, v15, v10);
  swift_endAccess();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v74 = v15;
  v18(v15, v17, v10);
  v60 = v16;
  v61 = (void (*)(char *, char *, uint64_t))v18;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v16 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_sessionClient), *(_QWORD *)(v16 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_sessionClient + 24));
  sub_24A779EA4();
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = v73;
  v56 = v10;
  v18(v73, (uint64_t)v15, v10);
  v21 = v12;
  v67 = v12;
  v22 = *(unsigned __int8 *)(v12 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = v24 + 8;
  v59 = v22 | 7;
  v25 = swift_allocObject();
  v57 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v57(v25 + v23, v20, v10);
  *(_QWORD *)(v25 + v24) = v19;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_24A732168;
  *(_QWORD *)(v26 + 24) = v25;
  v28 = v63;
  v27 = v64;
  v29 = v55;
  v30 = v66;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v55, v66);
  v31 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v32 = (v62 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v33 + v31, v28, v30);
  v34 = (uint64_t (**)(uint64_t))(v33 + v32);
  *v34 = sub_24A732784;
  v34[1] = (uint64_t (*)(uint64_t))v26;
  v63 = (char *)(MEMORY[0x24BEE4AE0] + 8);
  v35 = v65;
  sub_24A778F44();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
  v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v37 = v73;
  v38 = v56;
  v61(v73, v74, v56);
  v39 = swift_allocObject();
  v57(v39 + v23, v37, v38);
  *(_QWORD *)(v39 + v24) = v36;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = sub_24A732824;
  *(_QWORD *)(v40 + 24) = v39;
  v41 = v70;
  v42 = v71;
  v43 = v68;
  v44 = v35;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v68, v35, v71);
  v45 = v41;
  v46 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v47 = (v69 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_allocObject();
  v49 = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v48 + v46, v43, v42);
  v50 = (uint64_t (**)(void *))(v48 + v47);
  *v50 = sub_24A6B2E9C;
  v50[1] = (uint64_t (*)(void *))v40;
  v51 = v72;
  sub_24A778F44();
  v52 = *(void (**)(char *, uint64_t))(v45 + 8);
  v52(v44, v49);
  v53 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24A778F50();
  v54 = swift_allocObject();
  *(_QWORD *)(v54 + 16) = 0;
  *(_QWORD *)(v54 + 24) = 0;
  v53(sub_24A68ABB4, v54);
  swift_release();
  swift_release();
  v52(v51, v49);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v74, v38);
}

void sub_24A731F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  void *v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;

  v4 = sub_24A778818();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77880C();
  sub_24A63C880(qword_25794B4F0, v5, MEMORY[0x24BDCE948]);
  v9 = sub_24A77B944();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    v10 = a3 + 16;
    swift_beginAccess();
    v11 = MEMORY[0x24BD1A368](v10);
    if (v11)
    {
      v12 = (void *)v11;
      v14 = *(_QWORD *)(v11 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_appBundleIdentifier);
      v13 = *(_QWORD *)(v11 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_appBundleIdentifier + 8);
      swift_bridgeObjectRetain();

      if (sub_24A778F5C() == v14 && v15 == v13)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v17 = sub_24A77C184();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
          goto LABEL_8;
      }
      swift_beginAccess();
      v21 = MEMORY[0x24BD1A368](v10);
      if (!v21)
        return;
      v19 = (void *)v21;
      v22 = (_BYTE *)(v21 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
      swift_beginAccess();
      if (*v22 != 1)
        goto LABEL_16;
      *v22 = 0;
      goto LABEL_15;
    }
LABEL_8:
    swift_beginAccess();
    v18 = MEMORY[0x24BD1A368](v10);
    if (!v18)
      return;
    v19 = (void *)v18;
    v20 = (_BYTE *)(v18 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
    swift_beginAccess();
    if ((*v20 & 1) != 0)
      goto LABEL_16;
    *v20 = 1;
LABEL_15:
    objc_msgSend(v19, sel_notifyObservers);
LABEL_16:

  }
}

void sub_24A732168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_24A778818() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_24A731F38(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_24A7321D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _BYTE *v25;
  _QWORD v26[12];

  v26[1] = a1;
  v4 = sub_24A778BA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24A778818();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A77880C();
  sub_24A63C880(qword_25794B4F0, v9, MEMORY[0x24BDCE948]);
  v13 = sub_24A77B944();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    v14 = a3 + 16;
    swift_getErrorValue();
    v15 = sub_24A77C1D8();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE88E58], v4);
    sub_24A63C880(&qword_25794D9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE88E88], MEMORY[0x24BE88E90]);
    v16 = sub_24A77C1D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v15 == v16)
    {
      v17 = sub_24A77BC74();
      sub_24A67B7C8((uint64_t)"[ExternalSeymourSessionStatusObserver] No active session found.", 63, 2, v17, MEMORY[0x24BEE4AF8]);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24A780030;
      swift_getErrorValue();
      v19 = MEMORY[0x24BD19804](v26[10], v26[11]);
      v21 = v20;
      *(_QWORD *)(inited + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 64) = sub_24A66952C();
      *(_QWORD *)(inited + 32) = v19;
      *(_QWORD *)(inited + 40) = v21;
      v22 = sub_24A77BC74();
      sub_24A67B7C8((uint64_t)"[ExternalSeymourSessionStatusObserver] Error querying active session: %@", 72, 2, v22, inited);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257949798);
      swift_arrayDestroy();
    }
    swift_beginAccess();
    v23 = MEMORY[0x24BD1A368](v14);
    if (v23)
    {
      v24 = (void *)v23;
      v25 = (_BYTE *)(v23 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
      swift_beginAccess();
      if (*v25 == 1)
      {
        *v25 = 0;
        objc_msgSend(v24, sel_notifyObservers);
      }

    }
  }
}

id ExternalSeymourSessionStatusProvider.addObserver(_:)(uint64_t a1)
{
  return sub_24A732520(a1, (SEL *)&selRef_addObject_);
}

id ExternalSeymourSessionStatusProvider.removeObserver(_:)(uint64_t a1)
{
  return sub_24A732520(a1, (SEL *)&selRef_removeObject_);
}

id sub_24A732520(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  id *v5;

  v5 = (id *)(v2 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v5, *a2, a1);
}

id sub_24A73258C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id *v6;

  v6 = (id *)(a1 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  return objc_msgSend(*v6, *a4, a3);
}

Swift::Void __swiftcall ExternalSeymourSessionStatusProvider.notifyObservers()()
{
  uint64_t v0;
  id *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t i;
  void *v7;

  v1 = (id *)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  v2 = objc_msgSend(*v1, sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D978);
  v3 = sub_24A77BB18();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v4 = sub_24A77C028();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = (unsigned __int8 *)(v0 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
    swift_beginAccess();
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = (void *)MEMORY[0x24BD19588](i, v3);
      }
      else
      {
        v7 = *(void **)(v3 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v7, sel_statusDidChangeWith_, *v5);
      swift_unknownObjectRelease();
    }
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_24A732784(uint64_t a1)
{
  uint64_t v1;

  return sub_24A6B29CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24A73278C()
{
  return objectdestroy_7Tm(&qword_2579497F8);
}

uint64_t sub_24A732798(uint64_t a1, uint64_t a2)
{
  return sub_24A6B36AC(a1, a2, &qword_2579497F8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_24A689D34);
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_24A778818();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_24A732824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_24A778818() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_24A7321D4(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_24A732890()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A7328B4()
{
  return objectdestroy_7Tm(&qword_257949500);
}

uint64_t sub_24A7328C0(uint64_t a1, uint64_t a2)
{
  return sub_24A6B36AC(a1, a2, &qword_257949500, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_24A6B2EA4);
}

uint64_t sub_24A7328D4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A732900@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_24A732950(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_isExternalSessionActive);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

id sub_24A73299C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___NLExternalSeymourSessionStatusProvider_observers);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_24A7329F0()
{
  return type metadata accessor for ExternalSeymourSessionStatusProvider();
}

uint64_t sub_24A7329F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778818();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ExternalSeymourSessionStatusProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExternalSeymourSessionStatusProvider.isExternalSessionActive.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ExternalSeymourSessionStatusProvider.observers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ExternalSeymourSessionStatusProvider.__allocating_init(dependencies:appBundleIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t destroy for EffortValueButton()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EffortValueButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EffortValueButton(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for EffortValueButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for EffortValueButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EffortValueButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EffortValueButton()
{
  return &type metadata for EffortValueButton;
}

uint64_t sub_24A732D24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A732D34()
{
  uint64_t result;

  result = sub_24A77AE40();
  qword_25794D9C0 = result;
  return result;
}

uint64_t sub_24A732D50()
{
  uint64_t result;

  result = sub_24A77AE40();
  qword_25794D9C8 = result;
  return result;
}

uint64_t sub_24A732D6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t KeyPath;
  uint64_t v14;
  _QWORD v16[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (_QWORD *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_24A77B410();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v11 = sub_24A77B3EC();
    v12 = (unsigned int *)MEMORY[0x24BDF40B8];
  }
  else
  {
    v16[1] = *(_QWORD *)v1;
    v16[2] = sub_24A77C160();
    v16[3] = v10;
    sub_24A77BA4C();
    v11 = sub_24A77B3C8();
    v12 = (unsigned int *)MEMORY[0x24BDF40A8];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v12, v6);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 28), v9, v6);
  *v5 = KeyPath;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  sub_24A63CCC0((uint64_t)v5, (uint64_t)a1 + *(int *)(v14 + 36), &qword_2579492E8);
  *a1 = v11;
  swift_retain();
  sub_24A63CD04((uint64_t)v5, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_24A732F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v28 = a2;
  v3 = sub_24A77A954();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA10);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA00);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D9F0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = sub_24A77A930();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA30);
  sub_24A733218(a1, (uint64_t)&v12[*(int *)(v19 + 44)]);
  sub_24A77A948();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_24A63C880(&qword_25794DA38, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE9A8], MEMORY[0x24BDEE998]);
  v20 = sub_24A77A4C8();
  sub_24A63CCC0((uint64_t)v12, (uint64_t)v15, &qword_25794DA10);
  *(_QWORD *)&v15[*(int *)(v13 + 36)] = v20;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  sub_24A63CD04((uint64_t)v12, &qword_25794DA10);
  sub_24A77B668();
  sub_24A77A6A8();
  sub_24A63CCC0((uint64_t)v15, (uint64_t)v18, &qword_25794DA00);
  v21 = &v18[*(int *)(v16 + 36)];
  v22 = v34;
  *((_OWORD *)v21 + 4) = v33;
  *((_OWORD *)v21 + 5) = v22;
  *((_OWORD *)v21 + 6) = v35;
  v23 = v30;
  *(_OWORD *)v21 = v29;
  *((_OWORD *)v21 + 1) = v23;
  v24 = v32;
  *((_OWORD *)v21 + 2) = v31;
  *((_OWORD *)v21 + 3) = v24;
  sub_24A63CD04((uint64_t)v15, &qword_25794DA00);
  v25 = v28;
  sub_24A63CCC0((uint64_t)v18, v28, &qword_25794D9F0);
  *(_QWORD *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794D9D8) + 36)) = 0x402C000000000000;
  return sub_24A63CD04((uint64_t)v18, &qword_25794D9F0);
}

uint64_t sub_24A733218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  unsigned __int8 v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  void (*v108)(char *, _QWORD, uint64_t);
  uint64_t v109;
  uint64_t KeyPath;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD *v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  _OWORD v239[2];
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  char v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  char v257;
  _OWORD v258[8];
  char v259;

  v228 = a2;
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA40);
  MEMORY[0x24BDAC7A8](v227);
  v200 = (uint64_t)&v195 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v223);
  v195 = (uint64_t *)((char *)&v195 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA48);
  MEMORY[0x24BDAC7A8](v196);
  v198 = (uint64_t)&v195 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946EE0);
  MEMORY[0x24BDAC7A8](v197);
  v199 = (char *)&v195 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946EE8);
  MEMORY[0x24BDAC7A8](v7);
  v201 = (uint64_t)&v195 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v231 = (uint64_t)&v195 - v10;
  v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA50);
  MEMORY[0x24BDAC7A8](v224);
  v226 = (uint64_t)&v195 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA58);
  MEMORY[0x24BDAC7A8](v225);
  v221 = (uint64_t)&v195 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948AA0);
  MEMORY[0x24BDAC7A8](v215);
  v219 = (uint64_t *)((char *)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_24A77A6D8();
  v217 = *(_QWORD *)(v14 - 8);
  v218 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v216 = (char *)&v195 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA60);
  MEMORY[0x24BDAC7A8](v214);
  v220 = (char *)&v195 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v229 = (uint64_t)&v195 - v18;
  v19 = sub_24A77A9B4();
  MEMORY[0x24BDAC7A8](v19);
  v213 = (char *)&v195 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_24A77AC24();
  v211 = *(_QWORD *)(v21 - 8);
  v212 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v210 = (char *)&v195 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948068);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v195 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_24A77B410();
  v26 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222);
  v28 = (char *)&v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492F0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (uint64_t *)((char *)&v195 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA68);
  MEMORY[0x24BDAC7A8](v202);
  v33 = (char *)&v195 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA70);
  MEMORY[0x24BDAC7A8](v203);
  v35 = (char *)&v195 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA78);
  MEMORY[0x24BDAC7A8](v204);
  v37 = (char *)&v195 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA80);
  MEMORY[0x24BDAC7A8](v206);
  v205 = (uint64_t)&v195 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA88);
  v208 = *(_QWORD *)(v39 - 8);
  v209 = v39;
  MEMORY[0x24BDAC7A8](v39);
  v207 = (char *)&v195 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DA90);
  MEMORY[0x24BDAC7A8](v41);
  MEMORY[0x24BDAC7A8](v42);
  v45 = *(_QWORD *)a1;
  if (*(uint64_t *)a1 > 0 || (*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v199 = v37;
    v200 = v45;
    v230 = v44;
    v231 = (uint64_t)&v195 - v43;
    v201 = a1;
    sub_24A732D6C(v31);
    v107 = v26;
    v108 = *(void (**)(char *, _QWORD, uint64_t))(v26 + 104);
    v109 = v222;
    v108(v28, *MEMORY[0x24BDF40A8], v222);
    KeyPath = swift_getKeyPath();
    v111 = (uint64_t *)&v33[*(int *)(v202 + 36)];
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))((char *)v111 + *(int *)(v223 + 28), v28, v109);
    *v111 = KeyPath;
    sub_24A63CCC0((uint64_t)v31, (uint64_t)v33, &qword_2579492F0);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v28, v109);
    sub_24A63CD04((uint64_t)v31, &qword_2579492F0);
    sub_24A77AA20();
    v112 = sub_24A77AA2C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v25, 0, 1, v112);
    v113 = swift_getKeyPath();
    v114 = (uint64_t *)&v35[*(int *)(v203 + 36)];
    v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C488);
    sub_24A63CCC0((uint64_t)v25, (uint64_t)v114 + *(int *)(v115 + 28), &qword_257948068);
    *v114 = v113;
    sub_24A63CCC0((uint64_t)v33, (uint64_t)v35, &qword_25794DA68);
    sub_24A63CD04((uint64_t)v25, &qword_257948068);
    sub_24A63CD04((uint64_t)v33, &qword_25794DA68);
    if (qword_2579469F0 != -1)
      swift_once();
    v116 = qword_25794D9C0;
    v117 = swift_getKeyPath();
    v118 = (uint64_t)v199;
    sub_24A63CCC0((uint64_t)v35, (uint64_t)v199, &qword_25794DA70);
    v119 = (uint64_t *)(v118 + *(int *)(v204 + 36));
    *v119 = v117;
    v119[1] = v116;
    swift_retain();
    sub_24A63CD04((uint64_t)v35, &qword_25794DA70);
    LOBYTE(v116) = sub_24A77ACD8();
    sub_24A77A390();
    v121 = v120;
    v123 = v122;
    v125 = v124;
    v127 = v126;
    v128 = v205;
    sub_24A63CCC0(v118, v205, &qword_25794DA78);
    v129 = v206;
    v130 = v128 + *(int *)(v206 + 36);
    *(_BYTE *)v130 = v116;
    *(_QWORD *)(v130 + 8) = v121;
    *(_QWORD *)(v130 + 16) = v123;
    *(_QWORD *)(v130 + 24) = v125;
    *(_QWORD *)(v130 + 32) = v127;
    *(_BYTE *)(v130 + 40) = 0;
    sub_24A63CD04(v118, &qword_25794DA78);
    v131 = v210;
    sub_24A77AC0C();
    v132 = sub_24A665CEC(&qword_25794DAB0, &qword_25794DA80, (uint64_t (*)(void))sub_24A734C98, MEMORY[0x24BDECC60]);
    v133 = v207;
    sub_24A77B200();
    (*(void (**)(char *, uint64_t))(v211 + 8))(v131, v212);
    sub_24A63CD04(v128, &qword_25794DA80);
    sub_24A77A9A8();
    sub_24A77A99C();
    *(_QWORD *)&v232 = v200;
    sub_24A77A978();
    sub_24A77A99C();
    sub_24A77A9CC();
    *(_QWORD *)&v232 = v129;
    *((_QWORD *)&v232 + 1) = v132;
    swift_getOpaqueTypeConformance2();
    v134 = v230;
    v135 = v209;
    sub_24A77B1B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v208 + 8))(v133, v135);
    sub_24A63F6C4(v134, v231, &qword_25794DA90);
    v136 = *(_QWORD *)(v201 + 16);
    *(_QWORD *)&v232 = *(_QWORD *)(v201 + 8);
    *((_QWORD *)&v232 + 1) = v136;
    sub_24A645928();
    swift_bridgeObjectRetain();
    v137 = sub_24A77AFD8();
    v139 = v138;
    v141 = v140;
    if (qword_2579469F8 != -1)
      swift_once();
    v142 = v141 & 1;
    v143 = sub_24A77AF84();
    v222 = v143;
    v223 = v144;
    v146 = v145;
    v147 = v144;
    v149 = v148 & 1;
    sub_24A64596C(v137, v139, v142);
    swift_bridgeObjectRelease();
    v150 = swift_getKeyPath();
    v151 = sub_24A77ACD8();
    sub_24A77A390();
    v153 = v152;
    v155 = v154;
    v157 = v156;
    v159 = v158;
    v160 = sub_24A77ACF0();
    sub_24A77A390();
    *(_QWORD *)&v232 = v143;
    *((_QWORD *)&v232 + 1) = v146;
    LOBYTE(v233) = v149;
    *((_QWORD *)&v233 + 1) = v147;
    *(_QWORD *)&v234 = v150;
    *((_QWORD *)&v234 + 1) = 0x3FE0000000000000;
    LOBYTE(v235) = v151;
    *((_QWORD *)&v235 + 1) = v153;
    *(_QWORD *)&v236 = v155;
    *((_QWORD *)&v236 + 1) = v157;
    *(_QWORD *)&v237 = v159;
    BYTE8(v237) = 0;
    LOBYTE(v238) = v160;
    *((_QWORD *)&v238 + 1) = v161;
    *(_QWORD *)&v239[0] = v162;
    *((_QWORD *)&v239[0] + 1) = v163;
    *(_QWORD *)&v239[1] = v164;
    BYTE8(v239[1]) = 0;
    v165 = v216;
    sub_24A77A6CC();
    v166 = swift_getKeyPath();
    v168 = v218;
    v167 = v219;
    v169 = v217;
    (*(void (**)(char *, char *, uint64_t))(v217 + 16))((char *)v219 + *(int *)(v215 + 28), v165, v218);
    *v167 = v166;
    v170 = v220;
    sub_24A63CCC0((uint64_t)v167, (uint64_t)&v220[*(int *)(v214 + 36)], &qword_257948AA0);
    v171 = v239[0];
    v170[6] = v238;
    v170[7] = v171;
    *(_OWORD *)((char *)v170 + 121) = *(_OWORD *)((char *)v239 + 9);
    v172 = v235;
    v170[2] = v234;
    v170[3] = v172;
    v173 = v237;
    v170[4] = v236;
    v170[5] = v173;
    v174 = v233;
    *v170 = v232;
    v170[1] = v174;
    sub_24A67E22C((uint64_t)&v232);
    sub_24A63CD04((uint64_t)v167, &qword_257948AA0);
    (*(void (**)(char *, uint64_t))(v169 + 8))(v165, v168);
    sub_24A64596C(v222, v146, v149);
    swift_release();
    swift_bridgeObjectRelease();
    v175 = v229;
    sub_24A63F6C4((uint64_t)v170, v229, &qword_25794DA60);
    v223 = sub_24A77B3C8();
    sub_24A77AD98();
    sub_24A77ADEC();
    v176 = sub_24A77AE58();
    swift_release();
    v177 = swift_getKeyPath();
    LODWORD(v169) = sub_24A77ABA0();
    LOBYTE(v150) = sub_24A77ACF0();
    sub_24A77A390();
    v179 = v178;
    v181 = v180;
    v183 = v182;
    v185 = v184;
    v222 = v178;
    v218 = v182;
    v219 = (uint64_t *)v180;
    v186 = v150;
    v187 = v230;
    sub_24A63CCC0(v231, v230, &qword_25794DA90);
    sub_24A63CCC0(v175, (uint64_t)v170, &qword_25794DA60);
    v188 = v221;
    sub_24A63CCC0(v187, v221, &qword_25794DA90);
    v189 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25794DAD8);
    sub_24A63CCC0((uint64_t)v170, v188 + v189[12], &qword_25794DA60);
    v190 = v188 + v189[16];
    *(_QWORD *)v190 = 0;
    *(_BYTE *)(v190 + 8) = 1;
    v191 = v188 + v189[20];
    v192 = v223;
    *(_QWORD *)v191 = v223;
    *(_QWORD *)(v191 + 8) = v177;
    *(_QWORD *)(v191 + 16) = v176;
    *(_QWORD *)(v191 + 24) = v169;
    v215 = v169;
    v216 = (char *)v186;
    *(_QWORD *)(v191 + 32) = v186;
    *(_QWORD *)(v191 + 40) = v179;
    *(_QWORD *)(v191 + 48) = v181;
    *(_QWORD *)(v191 + 56) = v183;
    *(_QWORD *)(v191 + 64) = v185;
    *(_BYTE *)(v191 + 72) = 0;
    sub_24A734ECC(v192);
    swift_retain();
    v217 = v177;
    swift_retain();
    swift_retain();
    sub_24A734F08(v192);
    sub_24A63CD04((uint64_t)v170, &qword_25794DA60);
    sub_24A63CD04(v230, &qword_25794DA90);
    sub_24A63CCC0(v188, v226, &qword_25794DA58);
    swift_storeEnumTagMultiPayload();
    v193 = MEMORY[0x24BDF5428];
    sub_24A63CFF0(&qword_25794DAA0, &qword_25794DA58, MEMORY[0x24BDF5428]);
    sub_24A63CFF0(&qword_25794DAA8, &qword_25794DA40, v193);
    sub_24A77AB28();
    swift_release();
    swift_release();
    swift_release();
    sub_24A63CD04(v188, &qword_25794DA58);
    sub_24A63CD04(v229, &qword_25794DA60);
    v105 = v231;
    v106 = &qword_25794DA90;
  }
  else
  {
    v46 = sub_24A77B3C8();
    v47 = v222;
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, *MEMORY[0x24BDF40A8], v222);
    v48 = swift_getKeyPath();
    v49 = v195;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v195 + *(int *)(v223 + 28), v28, v47);
    *v49 = v48;
    sub_24A63CCC0((uint64_t)v49, (uint64_t)v31 + *(int *)(v29 + 36), &qword_2579492E8);
    *v31 = v46;
    swift_retain();
    sub_24A63CD04((uint64_t)v49, &qword_2579492E8);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v47);
    swift_release();
    if (qword_2579469F0 != -1)
      swift_once();
    v50 = qword_25794D9C0;
    v51 = swift_getKeyPath();
    v52 = v198;
    sub_24A63CCC0((uint64_t)v31, v198, &qword_2579492F0);
    v53 = (uint64_t *)(v52 + *(int *)(v196 + 36));
    *v53 = v51;
    v53[1] = v50;
    swift_retain();
    sub_24A63CD04((uint64_t)v31, &qword_2579492F0);
    v54 = (uint64_t)v199;
    sub_24A63CCC0(v52, (uint64_t)v199, &qword_25794DA48);
    *(_QWORD *)(v54 + *(int *)(v197 + 36)) = 0;
    sub_24A63CD04(v52, &qword_25794DA48);
    v55 = sub_24A77B668();
    v56 = v201;
    sub_24A642ED8(0.0, 1, 0.0, 1, 0.0, 0, 0.0, 1, v201, 0.0, 1, 0.0, 1, v55, v57);
    sub_24A63CD04(v54, &qword_257946EE0);
    sub_24A63F6C4(v56, v231, &qword_257946EE8);
    if (qword_2544D6160 != -1)
      swift_once();
    swift_beginAccess();
    v58 = (id)qword_2544D6158;
    v59 = sub_24A77856C();
    v61 = v60;

    *(_QWORD *)&v232 = v59;
    *((_QWORD *)&v232 + 1) = v61;
    sub_24A645928();
    v62 = sub_24A77AFD8();
    v64 = v63;
    v66 = v65;
    if (qword_2579469F8 != -1)
      swift_once();
    v67 = v66 & 1;
    v68 = sub_24A77AF84();
    v70 = v69;
    v72 = v71;
    v74 = v73;
    sub_24A64596C(v62, v64, v67);
    swift_bridgeObjectRelease();
    v75 = sub_24A77ACD8();
    v76 = sub_24A77ACF0();
    v77 = sub_24A77ACE4();
    sub_24A77ACE4();
    if (sub_24A77ACE4() != v75)
      v77 = sub_24A77ACE4();
    sub_24A77ACE4();
    if (sub_24A77ACE4() != v76)
      v77 = sub_24A77ACE4();
    sub_24A77A390();
    v79 = v78;
    v81 = v80;
    v83 = v82;
    v85 = v84;
    v86 = swift_getKeyPath();
    v87 = swift_getKeyPath();
    v88 = swift_getKeyPath();
    *(_QWORD *)&v249 = v68;
    *((_QWORD *)&v249 + 1) = v70;
    LOBYTE(v250) = v72 & 1;
    *((_QWORD *)&v250 + 1) = v74;
    LOBYTE(v251) = v77;
    *((_QWORD *)&v251 + 1) = v79;
    *(_QWORD *)&v252 = v81;
    *((_QWORD *)&v252 + 1) = v83;
    *(_QWORD *)&v253 = v85;
    BYTE8(v253) = 0;
    *(_QWORD *)&v254 = v86;
    *((_QWORD *)&v254 + 1) = 0x3FE3333333333333;
    *(_QWORD *)&v255 = v87;
    *((_QWORD *)&v255 + 1) = 2;
    LOBYTE(v256) = 0;
    *((_QWORD *)&v256 + 1) = v88;
    v257 = 1;
    v89 = v231;
    v90 = v201;
    sub_24A63CCC0(v231, v201, &qword_257946EE8);
    v246 = v255;
    v247 = v256;
    v248 = v257;
    v242 = v251;
    v243 = v252;
    v244 = v253;
    v245 = v254;
    v240 = v249;
    v241 = v250;
    v91 = v200;
    sub_24A63CCC0(v90, v200, &qword_257946EE8);
    v92 = v91 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794DA98) + 48);
    v93 = v245;
    v94 = v246;
    v258[6] = v246;
    v258[7] = v247;
    v95 = v243;
    v96 = v244;
    v258[4] = v244;
    v258[5] = v245;
    v97 = v241;
    v98 = v242;
    v258[2] = v242;
    v258[3] = v243;
    v258[0] = v240;
    v258[1] = v241;
    v99 = v245;
    v100 = v247;
    *(_OWORD *)(v92 + 96) = v246;
    *(_OWORD *)(v92 + 112) = v100;
    v102 = v240;
    v101 = v241;
    v103 = v243;
    *(_OWORD *)(v92 + 32) = v242;
    *(_OWORD *)(v92 + 48) = v103;
    *(_OWORD *)(v92 + 64) = v244;
    *(_OWORD *)(v92 + 80) = v99;
    *(_OWORD *)v92 = v240;
    *(_OWORD *)(v92 + 16) = v101;
    v238 = v94;
    v239[0] = v247;
    v234 = v98;
    v235 = v95;
    v236 = v96;
    v237 = v93;
    v259 = v248;
    *(_BYTE *)(v92 + 128) = v248;
    LOBYTE(v239[1]) = v248;
    v232 = v102;
    v233 = v97;
    sub_24A734AF4((uint64_t)v258);
    sub_24A734AF4((uint64_t)&v249);
    sub_24A734B64((uint64_t)&v232);
    sub_24A63CD04(v90, &qword_257946EE8);
    sub_24A63CCC0(v91, v226, &qword_25794DA40);
    swift_storeEnumTagMultiPayload();
    v104 = MEMORY[0x24BDF5428];
    sub_24A63CFF0(&qword_25794DAA0, &qword_25794DA58, MEMORY[0x24BDF5428]);
    sub_24A63CFF0(&qword_25794DAA8, &qword_25794DA40, v104);
    sub_24A77AB28();
    sub_24A63CD04(v91, &qword_25794DA40);
    sub_24A734B64((uint64_t)&v249);
    v105 = v89;
    v106 = &qword_257946EE8;
  }
  return sub_24A63CD04(v105, v106);
}

uint64_t sub_24A734660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  _BYTE v13[16];
  _OWORD *v14;
  _OWORD v15[3];
  char v16;

  v1 = sub_24A77A654();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D9D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_OWORD *)(v0 + 16);
  v15[0] = *(_OWORD *)v0;
  v15[1] = v9;
  v15[2] = *(_OWORD *)(v0 + 32);
  v16 = *(_BYTE *)(v0 + 48);
  v10 = swift_allocObject();
  v11 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(v0 + 32);
  *(_BYTE *)(v10 + 64) = *(_BYTE *)(v0 + 48);
  v14 = v15;
  sub_24A7348C0((uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D9D8);
  sub_24A734908();
  sub_24A77B4B8();
  sub_24A77A648();
  sub_24A63CFF0(&qword_25794DA28, &qword_25794D9D0, MEMORY[0x24BDF43B0]);
  sub_24A63C880((unint64_t *)&qword_25794C460, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  sub_24A77B0C8();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24A734830()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A734864()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794BDB0);
  return sub_24A77B56C();
}

uint64_t sub_24A7348B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A732F44(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24A7348C0(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_24A734908()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D9E0;
  if (!qword_25794D9E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D9D8);
    v2[0] = sub_24A665CEC(&qword_25794D9E8, &qword_25794D9F0, (uint64_t (*)(void))sub_24A734994, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_24A6D3DE4();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D9E0);
  }
  return result;
}

unint64_t sub_24A734994()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794D9F8;
  if (!qword_25794D9F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DA00);
    v2[0] = sub_24A63CFF0(&qword_25794DA08, &qword_25794DA10, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A63CFF0(&qword_25794DA18, &qword_25794DA20, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794D9F8);
  }
  return result;
}

uint64_t sub_24A734A30()
{
  return sub_24A77A798();
}

uint64_t sub_24A734A50(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_24A77A6D8();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_24A77A7A4();
}

uint64_t sub_24A734AF4(uint64_t a1)
{
  sub_24A6436C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24A734B64(uint64_t a1)
{
  sub_24A64596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24A734BD4()
{
  return sub_24A77A7F8();
}

uint64_t sub_24A734BF4()
{
  return sub_24A77A7F8();
}

uint64_t sub_24A734C14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948068);
  MEMORY[0x24BDAC7A8](v2);
  sub_24A63CCC0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_257948068);
  return sub_24A77A804();
}

unint64_t sub_24A734C98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DAB8;
  if (!qword_25794DAB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DA78);
    v2[0] = sub_24A734D1C();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DAB8);
  }
  return result;
}

unint64_t sub_24A734D1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DAC0;
  if (!qword_25794DAC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DA70);
    v2[0] = sub_24A734DA0();
    v2[1] = sub_24A63CFF0(&qword_25794DAD0, &qword_25794C488, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DAC0);
  }
  return result;
}

unint64_t sub_24A734DA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DAC8;
  if (!qword_25794DAC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DA68);
    v2[0] = sub_24A734E24();
    v2[1] = sub_24A63CFF0(&qword_25794C4C0, &qword_2579492E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DAC8);
  }
  return result;
}

unint64_t sub_24A734E24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794C4B8;
  if (!qword_25794C4B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579492F0);
    v2 = sub_24A63CFF0(&qword_25794C4C0, &qword_2579492E8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794C4B8);
  }
  return result;
}

uint64_t sub_24A734EA8()
{
  return sub_24A77A798();
}

uint64_t sub_24A734ECC(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24A734F08(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A734F40()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794D9D0);
  sub_24A77A654();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  sub_24A63CFF0(&qword_25794DA28, &qword_25794D9D0, MEMORY[0x24BDF43B0]);
  sub_24A63C880((unint64_t *)&qword_25794C460, v0, MEMORY[0x24BDED858]);
  return swift_getOpaqueTypeConformance2();
}

void AnimatedWorkoutGlyph.init(activityType:iconSize:animated:)(void *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double *v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DAE0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AnimatedWorkoutGlyph();
  *(_QWORD *)(a3 + v9[8]) = 0x3FA1111111111111;
  sub_24A77880C();
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = a2;
  v10 = a1;
  FIUIIconSize();
  *(_QWORD *)(a3 + 16) = v11;
  *(_QWORD *)(a3 + 24) = v12;
  v13 = (id)FIUISpriteSheetWorkoutIconImage();
  if (v13)
  {
    v14 = v13;
    v34 = 0;
    v15 = FIUISpriteSheetNumberOfFrames();
    *(_QWORD *)(a3 + v9[10]) = v15;
    v16 = v34;
    *(_QWORD *)(a3 + v9[9]) = v34;
    v17 = v14;
    sub_24A77B3BC();
    v18 = *MEMORY[0x24BDF4068];
    v19 = sub_24A77B404();
    v33 = v10;
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v8, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
    v21 = sub_24A77B3E0();
    swift_release();
    sub_24A73533C((uint64_t)v8);
    *(_QWORD *)(a3 + v9[11]) = v21;
    objc_msgSend(v17, sel_size);
    v23 = v22 / (double)v16;
    objc_msgSend(v17, sel_size);
    v25 = v24 / ceil((double)(unint64_t)v15 / (double)v16);
    v26 = (double *)(a3 + v9[12]);
    *v26 = v23;
    v26[1] = v25;
    objc_msgSend(v17, sel_size);
    v28 = v27 * 0.5 - v23 * 0.5;
    objc_msgSend(v17, sel_size);
    v30 = v29;

    v31 = (double *)(a3 + v9[13]);
    *v31 = v28;
    v31[1] = v30 * 0.5 - v25 * 0.5;
  }
  else
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_24A77BF5C();
    swift_bridgeObjectRelease();
    v34 = 0xD000000000000028;
    v35 = 0x800000024A78E7D0;
    v32 = objc_msgSend(v10, sel_description);
    sub_24A77B9B0();

    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    sub_24A77C01C();
    __break(1u);
  }
}

uint64_t type metadata accessor for AnimatedWorkoutGlyph()
{
  uint64_t result;

  result = qword_25794DBC0;
  if (!qword_25794DBC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A73533C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DAE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A73537C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  double v3;
  double v4;
  unint64_t v5;

  v1 = type metadata accessor for AnimatedWorkoutGlyph();
  result = sub_24A778794();
  if (v3 < 0.0)
    v3 = 0.0;
  v4 = floor(v3 / *(double *)(v0 + *(int *)(v1 + 32)));
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = *(_QWORD *)(v0 + *(int *)(v1 + 40));
  if (v5)
    return (unint64_t)v4 % v5;
LABEL_11:
  __break(1u);
  return result;
}

void AnimatedWorkoutGlyph.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double *v27;
  double *v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  __int128 v46;

  v41 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DAE8);
  MEMORY[0x24BDAC7A8](v40);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for AnimatedWorkoutGlyph();
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = sub_24A77ABE8();
  v39 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DAF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  if (*(_BYTE *)(v1 + 8) == 1)
  {
    v37 = v18;
    v38 = (char *)&v36 - v17;
    v36 = v19;
    sub_24A77ABDC();
    sub_24A735BEC(v1, (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    v20 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v21 = swift_allocObject();
    sub_24A735CC8((uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
    v22 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v9, v12, v7);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = sub_24A735D0C;
    *(_QWORD *)(v23 + 24) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794DB10);
    sub_24A735D88();
    sub_24A7359D8(&qword_25794DB08, &qword_25794DB10, sub_24A7358E0);
    sub_24A77A468();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v7);
    v24 = v36;
    v25 = v37;
    v26 = v38;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v15, v37);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v3, v26, v25);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794DAF8);
    sub_24A735864();
    sub_24A7359D8(&qword_25794DB48, &qword_25794DAF8, sub_24A735A44);
    sub_24A77AB28();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v25);
  }
  else if (*(_QWORD *)(v1 + v4[9]))
  {
    v27 = (double *)(v1 + v4[13]);
    v28 = (double *)(v1 + v4[12]);
    v29 = *v27 - *v28 * 0.0;
    v30 = *(_QWORD *)(v1 + v4[11]);
    v31 = v27[1] - v28[1] * 0.0;
    swift_retain();
    sub_24A77B668();
    sub_24A77A4B0();
    v32 = v42;
    v33 = v43;
    v34 = v44;
    v35 = v45;
    *(_QWORD *)v3 = v30;
    *((double *)v3 + 1) = v29;
    *((double *)v3 + 2) = v31;
    *((_QWORD *)v3 + 3) = v32;
    v3[32] = v33;
    *((_QWORD *)v3 + 5) = v34;
    v3[48] = v35;
    *(_OWORD *)(v3 + 56) = v46;
    *((_WORD *)v3 + 36) = 0;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794DAF8);
    sub_24A735864();
    sub_24A7359D8(&qword_25794DB48, &qword_25794DAF8, sub_24A735A44);
    sub_24A77AB28();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_24A735864()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794DB00;
  if (!qword_25794DB00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DAF0);
    v2 = sub_24A7359D8(&qword_25794DB08, &qword_25794DB10, sub_24A7358E0);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEBD40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794DB00);
  }
  return result;
}

uint64_t sub_24A7358E0()
{
  return sub_24A665CEC(&qword_25794DB18, &qword_25794DB20, sub_24A735904, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_24A735904()
{
  return sub_24A665CEC(&qword_25794DB28, &qword_25794DB30, (uint64_t (*)(void))sub_24A735928, MEMORY[0x24BDEF830]);
}

unint64_t sub_24A735928()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DB38;
  if (!qword_25794DB38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DB40);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DB38);
  }
  return result;
}

unint64_t sub_24A73598C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257948268;
  if (!qword_257948268)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257948270);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEB950], v1);
    atomic_store(result, (unint64_t *)&qword_257948268);
  }
  return result;
}

uint64_t sub_24A7359D8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_24A73598C();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A735A44()
{
  return sub_24A665CEC(&qword_25794DB50, &qword_25794DB58, (uint64_t (*)(void))sub_24A735928, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_24A735A68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  double v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  v4 = sub_24A778818();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for AnimatedWorkoutGlyph();
  v9 = *(_QWORD *)(a1 + v8[11]);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257949450);
  sub_24A77A45C();
  v10 = sub_24A73537C();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = *(_QWORD *)(a1 + v8[9]);
  if (v12)
  {
    v13 = v8[12];
    v14 = (double *)(a1 + v8[13]);
    v15 = *v14 - *(double *)(a1 + v13) * (double)(v10 % v12);
    v16 = v14[1] - *(double *)(a1 + v13 + 8) * (double)(v10 / v12);
    sub_24A77B668();
    result = sub_24A77A4B0();
    v17 = v21;
    v18 = v22;
    v19 = v23;
    v20 = v24;
    *(_QWORD *)a2 = v9;
    *(double *)(a2 + 8) = v15;
    *(double *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = sub_24A666B3C;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = v17;
    *(_BYTE *)(a2 + 48) = v18;
    *(_QWORD *)(a2 + 56) = v19;
    *(_BYTE *)(a2 + 64) = v20;
    *(_OWORD *)(a2 + 72) = v25;
    *(_WORD *)(a2 + 88) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A735BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnimatedWorkoutGlyph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A735C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for AnimatedWorkoutGlyph();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 28);
  v5 = sub_24A778818();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A735CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnimatedWorkoutGlyph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A735D0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnimatedWorkoutGlyph() - 8) + 80);
  return sub_24A735A68(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_24A735D5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24A735D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24A686018(a1, *(void (**)(uint64_t *__return_ptr, char *))(v2 + 16), a2);
}

unint64_t sub_24A735D88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794DB60;
  if (!qword_25794DB60)
  {
    v1 = sub_24A77ABE8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF0760], v1);
    atomic_store(result, (unint64_t *)&qword_25794DB60);
  }
  return result;
}

uint64_t sub_24A735DD0()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for AnimatedWorkoutGlyph(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    a1[8] = *((_BYTE *)a2 + 8);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    v8 = a3[7];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = sub_24A778818();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[9];
    *(_QWORD *)&v7[a3[8]] = *(char **)((char *)a2 + a3[8]);
    *(_QWORD *)&v7[v14] = *(char **)((char *)a2 + v14);
    v15 = a3[11];
    *(_QWORD *)&v7[a3[10]] = *(char **)((char *)a2 + a3[10]);
    *(_QWORD *)&v7[v15] = *(char **)((char *)a2 + v15);
    v16 = a3[13];
    *(_OWORD *)&v7[a3[12]] = *(_OWORD *)((char *)a2 + a3[12]);
    *(_OWORD *)&v7[v16] = *(_OWORD *)((char *)a2 + v16);
  }
  swift_retain();
  return v7;
}

uint64_t destroy for AnimatedWorkoutGlyph(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_24A778818();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

uint64_t initializeWithCopy for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A778818();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  v13 = a3[12];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = a3[13];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  return a1;
}

uint64_t initializeWithTake for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for AnimatedWorkoutGlyph(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24A778818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_release();
  v13 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimatedWorkoutGlyph()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A73628C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_24A778818();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AnimatedWorkoutGlyph()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24A736314(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_24A778818();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_24A736388()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778818();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24A73643C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DC18;
  if (!qword_25794DC18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC20);
    v2[0] = sub_24A735864();
    v2[1] = sub_24A7359D8(&qword_25794DB48, &qword_25794DAF8, sub_24A735A44);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DC18);
  }
  return result;
}

uint64_t sub_24A7364C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v49;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v49 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC38);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (FIUICurrentLanguageRequiresTallScript())
  {
    v14 = sub_24A77ACB4();
    sub_24A77A390();
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC48);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v13, a1, v23);
    v24 = &v13[*(int *)(v11 + 36)];
    *v24 = v14;
    *((_QWORD *)v24 + 1) = v16;
    *((_QWORD *)v24 + 2) = v18;
    *((_QWORD *)v24 + 3) = v20;
    *((_QWORD *)v24 + 4) = v22;
    v24[40] = 0;
    sub_24A63CCC0((uint64_t)v13, (uint64_t)v10, &qword_25794DC40);
    swift_storeEnumTagMultiPayload();
    sub_24A736908();
    sub_24A646D28(&qword_25794DC60, &qword_25794DC30, sub_24A736908);
    sub_24A77AB28();
    v25 = (uint64_t)v13;
    v26 = &qword_25794DC40;
  }
  else
  {
    v27 = sub_24A77ACD8();
    sub_24A77A390();
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC48);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v13, a1, v36);
    v37 = &v13[*(int *)(v11 + 36)];
    *v37 = v27;
    *((_QWORD *)v37 + 1) = v29;
    *((_QWORD *)v37 + 2) = v31;
    *((_QWORD *)v37 + 3) = v33;
    *((_QWORD *)v37 + 4) = v35;
    v37[40] = 0;
    v38 = sub_24A77ACF0();
    sub_24A77A390();
    v40 = v39;
    v42 = v41;
    v44 = v43;
    v46 = v45;
    sub_24A63CCC0((uint64_t)v13, (uint64_t)v4, &qword_25794DC40);
    v47 = &v4[*(int *)(v2 + 36)];
    *v47 = v38;
    *((_QWORD *)v47 + 1) = v40;
    *((_QWORD *)v47 + 2) = v42;
    *((_QWORD *)v47 + 3) = v44;
    *((_QWORD *)v47 + 4) = v46;
    v47[40] = 0;
    sub_24A63CD04((uint64_t)v13, &qword_25794DC40);
    sub_24A7368C0((uint64_t)v4, (uint64_t)v7);
    sub_24A63CCC0((uint64_t)v7, (uint64_t)v10, &qword_25794DC30);
    swift_storeEnumTagMultiPayload();
    sub_24A736908();
    sub_24A646D28(&qword_25794DC60, &qword_25794DC30, sub_24A736908);
    sub_24A77AB28();
    v25 = (uint64_t)v7;
    v26 = &qword_25794DC30;
  }
  return sub_24A63CD04(v25, v26);
}

void View.pickerTextPadding()()
{
  JUMPOUT(0x24BD188D4);
}

uint64_t sub_24A736808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_24A77A5F4();
  v4[0] = v1;
  v4[1] = sub_24A73685C();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_24A73685C()
{
  unint64_t result;

  result = qword_25794DC28;
  if (!qword_25794DC28)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A787404, &type metadata for PickerTextPadding);
    atomic_store(result, (unint64_t *)&qword_25794DC28);
  }
  return result;
}

ValueMetadata *type metadata accessor for PickerTextPadding()
{
  return &type metadata for PickerTextPadding;
}

uint64_t sub_24A7368B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A7368C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A736908()
{
  return sub_24A646D28(&qword_25794DC50, &qword_25794DC40, (uint64_t (*)(void))sub_24A736924);
}

unint64_t sub_24A736924()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794DC58;
  if (!qword_25794DC58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC48);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_25794DC58);
  }
  return result;
}

unint64_t sub_24A736974()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DC68;
  if (!qword_25794DC68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC70);
    v2[0] = sub_24A736908();
    v2[1] = sub_24A646D28(&qword_25794DC60, &qword_25794DC30, sub_24A736908);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DC68);
  }
  return result;
}

uint64_t FlightsClimbedMetricView.init(flightsClimbed:formattingManager:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

void FlightsClimbedMetricView.body.getter(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;

  v24 = sub_24A77C16C();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - v12;
  v25 = *v1;
  v14 = v25;
  sub_24A77886C();
  sub_24A6971B4();
  sub_24A7785E4();
  v15 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE38E8], v24);
  MEMORY[0x24BD15C28](v5, 0, 1, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  sub_24A6971F8();
  sub_24A77B8E4();
  v16(v13, v7);
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v14 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v14 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v17 = v26;
  v18 = v27;
  v19 = (id)MEMORY[0x24BD19A80]((unint64_t)v14);
  if (v19)
  {
    v20 = v19;
    v21 = sub_24A77B9B0();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  *(_QWORD *)a1 = v17;
  *(_QWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v21;
  *(_QWORD *)(a1 + 40) = v23;
  *(_WORD *)(a1 + 48) = 0;
}

uint64_t sub_24A736C54()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for FlightsClimbedMetricView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for FlightsClimbedMetricView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for FlightsClimbedMetricView(_QWORD *a1, _QWORD *a2)
{
  void *v3;

  *a1 = *a2;
  v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for FlightsClimbedMetricView()
{
  return &type metadata for FlightsClimbedMetricView;
}

uint64_t RaceElevationMetricView.init(racePosition:positionOnRoute:ghostPositionOnRoute:chartProperties:formattingManager:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v12 = (int *)type metadata accessor for RaceElevationMetricView();
  v13 = a4 + v12[9];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 8) = 0;
  v14 = v12[10];
  if (qword_257946A08 != -1)
    swift_once();
  *(double *)(a4 + v14) = *(double *)&qword_2579599A0 * 0.5;
  *(_QWORD *)(a4 + v12[11]) = 0x4014000000000000;
  v15 = sub_24A779400();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a4, a1, v15);
  *(double *)(a4 + v12[5]) = a5;
  *(double *)(a4 + v12[7]) = a6;
  *(_QWORD *)(a4 + v12[8]) = a2;
  *(_QWORD *)(a4 + v12[6]) = a3;
  return result;
}

uint64_t type metadata accessor for RaceElevationMetricView()
{
  uint64_t result;

  result = qword_25794DD30;
  if (!qword_25794DD30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RaceElevationMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(char *);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t OpaqueTypeConformance2;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  double v63;
  double v64;
  char *v65;
  uint64_t v66;
  __n128 v67;
  double v68;
  double v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unsigned __int8 v85;
  char v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _OWORD *v105;
  __int128 v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned __int8 v127;
  unsigned __int8 v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v141;
  void (*v142)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  int *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  double v176;
  double v177;
  double v178;
  double v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;

  v2 = v1;
  v161 = a1;
  v175 = sub_24A779400();
  v171 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v169 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v170 = (char *)&v141 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B310);
  MEMORY[0x24BDAC7A8](v6);
  v174 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC78);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC80);
  v166 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168);
  v13 = (char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC88);
  v167 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v165 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC90);
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v173 = (char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DC98);
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (void (*)(char *))((char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DCA0);
  MEMORY[0x24BDAC7A8](v148);
  v163 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DCA8);
  MEMORY[0x24BDAC7A8](v152);
  v154 = (char *)&v141 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DCB0);
  MEMORY[0x24BDAC7A8](v153);
  v156 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DCB8);
  MEMORY[0x24BDAC7A8](v155);
  v160 = (char *)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DCC0);
  MEMORY[0x24BDAC7A8](v157);
  v22 = (char *)&v141 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DCC8);
  MEMORY[0x24BDAC7A8](v158);
  v159 = (uint64_t)&v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)type metadata accessor for RaceElevationMetricView();
  v25 = v24[7];
  v26 = v24[8];
  v27 = *(_QWORD **)(v2 + v26);
  v162 = v24;
  v28 = v24[5];
  sub_24A6BD0F0(v2, v27, *(double *)(v2 + v28), *(double *)(v2 + v25));
  v29 = (void (*)(char *))sub_24A737AF0();
  sub_24A77B008();
  v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31 = v8;
  v30(v11, v8);
  v164 = v2;
  v32 = *(_QWORD *)(v2 + v26);
  v33 = *(double *)(v32 + 48);
  v34 = *(double *)(v32 + 56);
  if (v33 > v34)
  {
    __break(1u);
  }
  else
  {
    v145 = v22;
    v178 = v33;
    v179 = v34;
    v35 = sub_24A77A360();
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v35 - 8) + 56);
    v37 = (uint64_t)v174;
    v143 = v35;
    v142 = v36;
    ((void (*)(char *, uint64_t, uint64_t))v36)(v174, 1, 1);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B388);
    v39 = v13;
    v40 = v172;
    v41 = v38;
    *(_QWORD *)&v180 = v31;
    *((_QWORD *)&v180 + 1) = v29;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v43 = sub_24A737B3C();
    v144 = v25;
    v44 = v26;
    v45 = v43;
    v46 = v165;
    v47 = v168;
    sub_24A77B038();
    sub_24A63CD04(v37, &qword_25794B310);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v39, v47);
    *(_QWORD *)&v180 = v47;
    *((_QWORD *)&v180 + 1) = v41;
    v166 = v41;
    *(_QWORD *)&v181 = OpaqueTypeConformance2;
    *((_QWORD *)&v181 + 1) = v45;
    v141 = v45;
    v48 = v44;
    v25 = swift_getOpaqueTypeConformance2();
    sub_24A77AFF0();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v46, v40);
    v49 = *(_QWORD *)(v164 + v48);
    v168 = v28;
    v50 = *(double *)(v164 + v28);
    v51 = v144;
    v52 = *(double *)(v164 + v144);
    v54 = v170;
    v53 = v171;
    v29 = *(void (**)(char *))(v171 + 16);
    v55 = v164;
    v56 = v175;
    v29(v170);
    v57 = *(uint64_t (**)(char *, uint64_t))(v53 + 88);
    v58 = v57(v54, v56);
    v59 = *MEMORY[0x24BEC5A28];
    if (v58 == *MEMORY[0x24BEC5A28])
    {
      v60 = v171;
      v61 = sub_24A6BB6C0(v50, v52);
    }
    else
    {
      v61 = *(double *)(v49 + 32);
      v60 = v171;
      (*(void (**)(char *, uint64_t))(v171 + 8))(v170, v175);
    }
    v62 = *(_QWORD *)(v55 + v48);
    v63 = *(double *)(v55 + v168);
    v64 = *(double *)(v55 + v51);
    v2 = v55;
    v65 = v169;
    v66 = v175;
    ((void (*)(char *, uint64_t, uint64_t))v29)(v169, v55, v175);
    if (v57(v65, v66) == v59)
    {
      v67.n128_f64[0] = sub_24A6BB6C0(v63, v64);
      v69 = v68;
    }
    else
    {
      v69 = *(double *)(v62 + 40);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v65, v66);
    }
    v26 = (uint64_t)v145;
    v22 = v163;
    v70 = v173;
    v71 = (uint64_t)v174;
    v31 = (uint64_t)v162;
    v72 = v172;
    if (v61 <= v69)
    {
      v176 = v61;
      v177 = v69;
      v142(v174, 1, 1, v143, v67);
      *(_QWORD *)&v180 = v72;
      *((_QWORD *)&v180 + 1) = v25;
      swift_getOpaqueTypeConformance2();
      v29 = v149;
      v73 = v147;
      sub_24A77B020();
      sub_24A63CD04(v71, &qword_25794B310);
      (*(void (**)(char *, uint64_t))(v146 + 8))(v70, v73);
      LOBYTE(v25) = sub_24A77ACC0();
      if (qword_257946A00 == -1)
        goto LABEL_10;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_30:
  swift_once();
LABEL_10:
  sub_24A77A390();
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v82 = v150;
  v83 = v151;
  (*(void (**)(char *, void (*)(char *), uint64_t))(v150 + 16))(v22, v29, v151);
  v84 = &v22[*(int *)(v148 + 36)];
  *v84 = v25;
  *((_QWORD *)v84 + 1) = v75;
  *((_QWORD *)v84 + 2) = v77;
  *((_QWORD *)v84 + 3) = v79;
  *((_QWORD *)v84 + 4) = v81;
  v84[40] = 0;
  (*(void (**)(void (*)(char *), uint64_t))(v82 + 8))(v29, v83);
  LOBYTE(v82) = sub_24A77ACD8();
  v85 = sub_24A77ACF0();
  v86 = sub_24A77ACE4();
  sub_24A77ACE4();
  v87 = sub_24A77ACE4();
  v88 = (uint64_t)v156;
  v89 = (uint64_t)v154;
  if (v87 != v82)
    v86 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v85)
    v86 = sub_24A77ACE4();
  v90 = v2 + *(int *)(v31 + 36);
  v91 = *(_QWORD *)v90;
  v92 = *(_BYTE *)(v90 + 8);
  sub_24A63BEC0(*(_QWORD *)v90, v92);
  sub_24A63E608(v91, v92, &v180);
  sub_24A63BEDC(v91, v92);
  v93 = (uint64_t)v160;
  sub_24A77A390();
  v95 = v94;
  v97 = v96;
  v99 = v98;
  v101 = v100;
  sub_24A63CCC0((uint64_t)v22, v89, &qword_25794DCA0);
  v102 = v89 + *(int *)(v152 + 36);
  *(_BYTE *)v102 = v86;
  *(_QWORD *)(v102 + 8) = v95;
  *(_QWORD *)(v102 + 16) = v97;
  *(_QWORD *)(v102 + 24) = v99;
  *(_QWORD *)(v102 + 32) = v101;
  *(_BYTE *)(v102 + 40) = 0;
  sub_24A63CD04((uint64_t)v22, &qword_25794DCA0);
  v103 = *(_QWORD *)v90;
  LOBYTE(v91) = *(_BYTE *)(v90 + 8);
  sub_24A63BEC0(*(_QWORD *)v90, v91);
  sub_24A63E608(v103, v91, &v180);
  sub_24A63BEDC(v103, v91);
  if (v180 <= 8u && ((1 << v180) & 0x181) != 0)
  {
    v104 = v161;
    if (qword_257946A10 != -1)
      swift_once();
  }
  else
  {
    v104 = v161;
  }
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A63CCC0(v89, v88, &qword_25794DCA8);
  v105 = (_OWORD *)(v88 + *(int *)(v153 + 36));
  v106 = v181;
  *v105 = v180;
  v105[1] = v106;
  v105[2] = v182;
  sub_24A63CD04(v89, &qword_25794DCA8);
  v107 = sub_24A77ACC0();
  if (qword_257946A18 != -1)
    swift_once();
  sub_24A77A390();
  v109 = v108;
  v111 = v110;
  v113 = v112;
  v115 = v114;
  sub_24A63CCC0(v88, v93, &qword_25794DCB0);
  v116 = v93 + *(int *)(v155 + 36);
  *(_BYTE *)v116 = v107;
  *(_QWORD *)(v116 + 8) = v109;
  *(_QWORD *)(v116 + 16) = v111;
  *(_QWORD *)(v116 + 24) = v113;
  *(_QWORD *)(v116 + 32) = v115;
  *(_BYTE *)(v116 + 40) = 0;
  sub_24A63CD04(v88, &qword_25794DCB0);
  v117 = sub_24A77ACCC();
  if (qword_257946A20 != -1)
    swift_once();
  sub_24A77A390();
  v119 = v118;
  v121 = v120;
  v123 = v122;
  v125 = v124;
  sub_24A63CCC0(v93, v26, &qword_25794DCB8);
  v126 = v26 + *(int *)(v157 + 36);
  *(_BYTE *)v126 = v117;
  *(_QWORD *)(v126 + 8) = v119;
  *(_QWORD *)(v126 + 16) = v121;
  *(_QWORD *)(v126 + 24) = v123;
  *(_QWORD *)(v126 + 32) = v125;
  *(_BYTE *)(v126 + 40) = 0;
  sub_24A63CD04(v93, &qword_25794DCB8);
  v127 = sub_24A77ACD8();
  v128 = sub_24A77ACF0();
  v129 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v127)
    v129 = sub_24A77ACE4();
  sub_24A77ACE4();
  if (sub_24A77ACE4() != v128)
    v129 = sub_24A77ACE4();
  sub_24A77A390();
  v131 = v130;
  v133 = v132;
  v135 = v134;
  v137 = v136;
  v138 = v159;
  sub_24A63CCC0(v26, v159, &qword_25794DCC0);
  v139 = v138 + *(int *)(v158 + 36);
  *(_BYTE *)v139 = v129;
  *(_QWORD *)(v139 + 8) = v131;
  *(_QWORD *)(v139 + 16) = v133;
  *(_QWORD *)(v139 + 24) = v135;
  *(_QWORD *)(v139 + 32) = v137;
  *(_BYTE *)(v139 + 40) = 0;
  sub_24A63CD04(v26, &qword_25794DCC0);
  return sub_24A737B98(v138, v104);
}

unint64_t sub_24A737AF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794DCD0;
  if (!qword_25794DCD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC78);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8148], v1);
    atomic_store(result, (unint64_t *)&qword_25794DCD0);
  }
  return result;
}

unint64_t sub_24A737B3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794B390;
  if (!qword_25794B390)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B388);
    v2 = MEMORY[0x24BDB84C8];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDB8498], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794B390);
  }
  return result;
}

uint64_t sub_24A737B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DCC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A737BE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for RaceElevationMetricView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24A779400();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    v11 = a3[9];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)v13;
    v15 = v13[8];
    v16 = v9;
    swift_retain();
    sub_24A63BEC0(v14, v15);
    *(_QWORD *)v12 = v14;
    v12[8] = v15;
    v17 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  }
  return a1;
}

uint64_t destroy for RaceElevationMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  swift_release();
  return sub_24A63BEDC(*(_QWORD *)(a1 + *(int *)(a2 + 36)), *(_BYTE *)(a1 + *(int *)(a2 + 36) + 8));
}

uint64_t initializeWithCopy for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;

  v6 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)v12;
  v14 = *(_BYTE *)(v12 + 8);
  v15 = v8;
  swift_retain();
  sub_24A63BEC0(v13, v14);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v14;
  v16 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  return a1;
}

uint64_t assignWithCopy for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v6 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_24A63BEC0(*(_QWORD *)v13, v15);
  v16 = *(_QWORD *)v12;
  v17 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v15;
  sub_24A63BEDC(v16, v17);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = a3[10];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for RaceElevationMetricView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v6 = sub_24A779400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release();
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  LOBYTE(v12) = *((_BYTE *)v12 + 8);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = (_BYTE)v12;
  sub_24A63BEDC(v14, v15);
  v16 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for RaceElevationMetricView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A738088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_24A779400();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RaceElevationMetricView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24A738110(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24A779400();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_24A738188()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A779400();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A738228()
{
  return sub_24A665CEC(&qword_25794DD80, &qword_25794DCC8, sub_24A73825C, MEMORY[0x24BDECC60]);
}

uint64_t sub_24A73825C()
{
  return sub_24A665CEC(&qword_25794DD88, &qword_25794DCC0, sub_24A738280, MEMORY[0x24BDECC60]);
}

uint64_t sub_24A738280()
{
  return sub_24A665CEC(&qword_25794DD90, &qword_25794DCB8, sub_24A7382A4, MEMORY[0x24BDECC60]);
}

uint64_t sub_24A7382A4()
{
  return sub_24A665CEC(&qword_25794DD98, &qword_25794DCB0, sub_24A7382C8, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_24A7382C8()
{
  return sub_24A665CEC(&qword_25794DDA0, &qword_25794DCA8, (uint64_t (*)(void))sub_24A7382EC, MEMORY[0x24BDECC60]);
}

unint64_t sub_24A7382EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = qword_25794DDA8;
  if (!qword_25794DDA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DCA0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC90);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794B388);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC88);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC80);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DC78);
    sub_24A737AF0();
    swift_getOpaqueTypeConformance2();
    v4 = sub_24A737B3C();
    swift_getOpaqueTypeConformance2();
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = swift_getOpaqueTypeConformance2();
    v5[5] = v4;
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25794DDA8);
  }
  return result;
}

id ContributorBridge.__allocating_init(contributor:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___SMContributor_contributor];
  v5 = sub_24A778AF4();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id ContributorBridge.init(contributor:)(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR___SMContributor_contributor];
  v4 = sub_24A778AF4();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ContributorBridge();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for ContributorBridge()
{
  uint64_t result;

  result = qword_25794DDD8;
  if (!qword_25794DDD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24A7385B0()
{
  return sub_24A778AD0();
}

id sub_24A7385E4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A738648()
{
  return sub_24A778ADC();
}

uint64_t sub_24A738670()
{
  uint64_t result;
  uint64_t v1;
  char v2;

  result = sub_24A778AE8();
  if ((v2 & 1) == 0)
  {
    sub_24A683100(result, v1, 0);
    return 6;
  }
  return result;
}

id ContributorBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ContributorBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ContributorBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContributorBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24A738790()
{
  return type metadata accessor for ContributorBridge();
}

uint64_t sub_24A738798()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24A778AF4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ContributorBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContributorBridge.__allocating_init(contributor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ContributorBridge.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ContributorBridge.name.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ContributorBridge.role.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t destroy for WorkoutConfigurationThumbnailView(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WorkoutConfigurationThumbnailView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutConfigurationThumbnailView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WorkoutConfigurationThumbnailView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutConfigurationThumbnailView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutConfigurationThumbnailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutConfigurationThumbnailView()
{
  return &type metadata for WorkoutConfigurationThumbnailView;
}

uint64_t sub_24A738A3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A738A4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v66 = a3;
  v67 = a4;
  v5 = a2;
  v70 = a2;
  v65 = a1;
  v72 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DDE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DDF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DDF8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE00);
  MEMORY[0x24BDAC7A8](v68);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE08);
  MEMORY[0x24BDAC7A8](v69);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE10);
  MEMORY[0x24BDAC7A8](v71);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_24A77A930();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE18);
  sub_24A738E80(v65, v5, v66, v67, (uint64_t)&v8[*(int *)(v21 + 44)]);
  LOBYTE(v5) = sub_24A77ACC0();
  sub_24A77A390();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_24A63CCC0((uint64_t)v8, (uint64_t)v11, &qword_25794DDE8);
  v30 = &v11[*(int *)(v9 + 36)];
  *v30 = v5;
  *((_QWORD *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_24A63CD04((uint64_t)v8, &qword_25794DDE8);
  LOBYTE(v5) = sub_24A77ACD8();
  sub_24A77A390();
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_24A63CCC0((uint64_t)v11, (uint64_t)v14, &qword_25794DDF0);
  v39 = &v14[*(int *)(v12 + 36)];
  *v39 = v5;
  *((_QWORD *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  sub_24A63CD04((uint64_t)v11, &qword_25794DDF0);
  LOBYTE(v5) = sub_24A77ACCC();
  sub_24A77A390();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_24A63CCC0((uint64_t)v14, (uint64_t)v16, &qword_25794DDF8);
  v48 = &v16[*(int *)(v68 + 36)];
  *v48 = v5;
  *((_QWORD *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  sub_24A63CD04((uint64_t)v14, &qword_25794DDF8);
  LOBYTE(v5) = sub_24A77ACF0();
  sub_24A77A390();
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v56 = v55;
  sub_24A63CCC0((uint64_t)v16, (uint64_t)v18, &qword_25794DE00);
  v57 = &v18[*(int *)(v69 + 36)];
  *v57 = v5;
  *((_QWORD *)v57 + 1) = v50;
  *((_QWORD *)v57 + 2) = v52;
  *((_QWORD *)v57 + 3) = v54;
  *((_QWORD *)v57 + 4) = v56;
  v57[40] = 0;
  sub_24A63CD04((uint64_t)v16, &qword_25794DE00);
  sub_24A77B668();
  sub_24A77A4B0();
  sub_24A63CCC0((uint64_t)v18, (uint64_t)v20, &qword_25794DE08);
  v58 = &v20[*(int *)(v71 + 36)];
  v59 = v74;
  *(_OWORD *)v58 = v73;
  *((_OWORD *)v58 + 1) = v59;
  *((_OWORD *)v58 + 2) = v75;
  sub_24A63CD04((uint64_t)v18, &qword_25794DE08);
  v60 = WorkoutConfiguration.displayThumbnailColor.getter();
  v61 = MEMORY[0x24BD189B8](v60);
  LOBYTE(v12) = sub_24A77ACB4();
  v62 = v72;
  sub_24A63CCC0((uint64_t)v20, v72, &qword_25794DE10);
  v63 = v62 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25794DE20) + 36);
  *(_QWORD *)v63 = v61;
  *(_BYTE *)(v63 + 8) = v12;
  return sub_24A63CD04((uint64_t)v20, &qword_25794DE10);
}

uint64_t sub_24A738E80@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _BOOL4 v37;
  _BOOL4 v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a3;
  v42 = a4;
  v39 = a1;
  v40 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE28);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v43 = (uint64_t)&v36 - v12;
  v13 = sub_24A7788C0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_24A7788D8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A7788A8();
  sub_24A7788CC();
  v21 = *(void (**)(char *, uint64_t))(v18 + 8);
  v21(v20, v17);
  v22 = sub_24A7788B4();
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v16, v13);
  sub_24A7788A8();
  sub_24A7788CC();
  v21(v20, v17);
  v24 = sub_24A7788B4();
  v23(v16, v13);
  if (v24 == 2)
    v25 = sub_24A77AA14();
  else
    v25 = sub_24A77AA08();
  v37 = v22 == 2;
  v38 = v22 != 2;
  *(_QWORD *)v10 = v25;
  *((_QWORD *)v10 + 1) = 0x4010000000000000;
  v10[16] = 0;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE30);
  sub_24A739154(v39, v40, v41, v42, (uint64_t)&v10[*(int *)(v26 + 44)]);
  v27 = (uint64_t)v10;
  v28 = v43;
  sub_24A63F6C4(v27, v43, &qword_25794DE28);
  sub_24A7788A8();
  sub_24A7788CC();
  v21(v20, v17);
  v29 = sub_24A7788B4();
  v23(v16, v13);
  v30 = v29 == 2;
  v31 = v29 != 2;
  v32 = v44;
  sub_24A63CCC0(v28, v44, &qword_25794DE28);
  *(_QWORD *)a5 = 0;
  *(_BYTE *)(a5 + 8) = v37;
  *(_BYTE *)(a5 + 9) = v38;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE38);
  sub_24A63CCC0(v32, a5 + *(int *)(v33 + 48), &qword_25794DE28);
  v34 = a5 + *(int *)(v33 + 64);
  *(_QWORD *)v34 = 0;
  *(_BYTE *)(v34 + 8) = v31;
  *(_BYTE *)(v34 + 9) = v30;
  sub_24A63CD04(v28, &qword_25794DE28);
  return sub_24A63CD04(v32, &qword_25794DE28);
}

id sub_24A739154@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id result;
  void *v37;
  id v38;
  uint64_t v39;
  SEL *v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  SEL *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v84 = (uint64_t *)((char *)&v82 - v14);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v82 - v16;
  v103 = sub_24A7788C0();
  v99 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v102 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_24A7788D8();
  v98 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE48);
  v93 = *(_QWORD *)(v24 - 8);
  v94 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v92 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE50);
  MEMORY[0x24BDAC7A8](v91);
  v97 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE58);
  MEMORY[0x24BDAC7A8](v96);
  v83 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v95 = (uint64_t)&v82 - v29;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v101 = (uint64_t)&v82 - v32;
  v33 = objc_msgSend(a1, sel_symbolName, v31);
  v90 = v12;
  v89 = a5;
  v88 = v17;
  v87 = a4;
  v86 = a3;
  v85 = a1;
  if (v33)
  {
    v34 = v33;
    sub_24A77B9B0();

    v35 = sub_24A77B3C8();
  }
  else
  {
    result = (id)FIUIStaticWorkoutIconImage();
    if (!result)
    {
      __break(1u);
      return result;
    }
    v37 = result;
    v38 = objc_msgSend(result, sel_imageWithRenderingMode_, 2);

    v35 = sub_24A77B3BC();
  }
  v39 = v35;
  v40 = WorkoutConfiguration.displayColor.getter();
  v41 = MEMORY[0x24BD189B8](v40);
  KeyPath = swift_getKeyPath();
  v82 = a2;
  v43 = KeyPath;
  v44 = sub_24A77ADC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v23, 1, 1, v44);
  v45 = sub_24A77AE1C();
  sub_24A63CD04((uint64_t)v23, &qword_257946FD0);
  v46 = swift_getKeyPath();
  v104 = v39;
  v105 = v43;
  v106 = v41;
  v107 = v46;
  v108 = v45;
  sub_24A77ADF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE60);
  sub_24A73A154();
  v47 = v92;
  sub_24A77B0B0();
  swift_release();
  swift_release();
  swift_release();
  v48 = v82;
  swift_release();
  swift_release();
  v49 = WorkoutConfiguration.displayColor.getter();
  v50 = MEMORY[0x24BD189B8](v49);
  v51 = swift_getKeyPath();
  v53 = v93;
  v52 = v94;
  v54 = (uint64_t)v97;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v97, v47, v94);
  v55 = (uint64_t *)(v54 + *(int *)(v91 + 36));
  *v55 = v51;
  v55[1] = v50;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v47, v52);
  sub_24A7788A8();
  v56 = v102;
  sub_24A7788CC();
  v57 = *(void (**)(char *, uint64_t))(v98 + 8);
  v58 = v100;
  v57(v20, v100);
  v59 = sub_24A7788B4();
  v60 = *(void (**)(char *, uint64_t))(v99 + 8);
  v61 = v103;
  v60(v56, v103);
  if (v59 == 2)
    v62 = -1.0;
  else
    v62 = 1.0;
  sub_24A77B6EC();
  v64 = v63;
  v66 = v65;
  v67 = v95;
  sub_24A63CCC0(v54, v95, &qword_25794DE50);
  v68 = v67 + *(int *)(v96 + 36);
  *(double *)v68 = v62;
  *(_QWORD *)(v68 + 8) = 0x3FF0000000000000;
  *(_QWORD *)(v68 + 16) = v64;
  *(_QWORD *)(v68 + 24) = v66;
  sub_24A63CD04(v54, &qword_25794DE50);
  v69 = v101;
  sub_24A63F6C4(v67, v101, &qword_25794DE58);
  sub_24A7788A8();
  sub_24A7788CC();
  v57(v20, v58);
  v70 = sub_24A7788B4();
  v60(v56, v61);
  if (v70 == 2)
    v71 = sub_24A77AA14();
  else
    v71 = sub_24A77AA08();
  v72 = (uint64_t)v90;
  v73 = v89;
  v74 = (uint64_t)v88;
  v75 = v87;
  v76 = v86;
  v77 = v85;
  v78 = (uint64_t)v84;
  v79 = (uint64_t)v83;
  *v84 = v71;
  *(_QWORD *)(v78 + 8) = 0;
  *(_BYTE *)(v78 + 16) = 0;
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE80);
  sub_24A739834(v77, v48, v76, v75, (uint64_t *)(v78 + *(int *)(v80 + 44)));
  sub_24A63F6C4(v78, v74, &qword_25794DE40);
  sub_24A63CCC0(v69, v79, &qword_25794DE58);
  sub_24A63CCC0(v74, v72, &qword_25794DE40);
  sub_24A63CCC0(v79, v73, &qword_25794DE58);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE88);
  sub_24A63CCC0(v72, v73 + *(int *)(v81 + 48), &qword_25794DE40);
  sub_24A63CD04(v74, &qword_25794DE40);
  sub_24A63CD04(v69, &qword_25794DE58);
  sub_24A63CD04(v72, &qword_25794DE40);
  return (id)sub_24A63CD04(v79, &qword_25794DE58);
}

uint64_t sub_24A739834@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  SEL *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  _QWORD v62[2];
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;

  v70 = a4;
  v67 = a2;
  v68 = a3;
  v62[1] = a1;
  v74 = a5;
  v6 = sub_24A77AD50();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE90);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DE98);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (uint64_t)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DEA0);
  MEMORY[0x24BDAC7A8](v71);
  v66 = (uint64_t)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v69 = (uint64_t)v62 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946FD0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(a1, sel_localizedName, v16);
  v20 = sub_24A77B9B0();
  v22 = v21;

  v75 = v20;
  v76 = v22;
  sub_24A645928();
  v23 = sub_24A77AFD8();
  v25 = v24;
  v27 = v26 & 1;
  v28 = sub_24A77ADC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 1, 1, v28);
  sub_24A77AE1C();
  sub_24A63CD04((uint64_t)v18, &qword_257946FD0);
  v29 = sub_24A77AF84();
  v31 = v30;
  v33 = v32;
  swift_release();
  v34 = v33 & 1;
  sub_24A64596C(v23, v25, v27);
  swift_bridgeObjectRelease();
  sub_24A77ADD4();
  v35 = sub_24A77AF30();
  v37 = v36;
  v39 = v38 & 1;
  sub_24A64596C(v29, v31, v34);
  swift_bridgeObjectRelease();
  sub_24A77B368();
  v40 = sub_24A77AF48();
  v42 = v41;
  LOBYTE(v29) = v43;
  v62[0] = v44;
  swift_release();
  LOBYTE(v29) = v29 & 1;
  sub_24A64596C(v35, v37, v39);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v10 = sub_24A77A930();
  *((_QWORD *)v10 + 1) = 0x4010000000000000;
  v10[16] = 0;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DEA8);
  sub_24A739D50(v68, v70, (uint64_t)&v10[*(int *)(v46 + 44)]);
  sub_24A77ADEC();
  v47 = v64;
  sub_24A77AD44();
  v48 = sub_24A77AE10();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v47, v73);
  v49 = swift_getKeyPath();
  v50 = v63;
  sub_24A63CCC0((uint64_t)v10, v63, &qword_25794DE90);
  v51 = (uint64_t *)(v50 + *(int *)(v65 + 36));
  *v51 = v49;
  v51[1] = v48;
  sub_24A63CD04((uint64_t)v10, &qword_25794DE90);
  v52 = WorkoutConfiguration.displayColor.getter();
  v53 = MEMORY[0x24BD189B8](v52);
  v54 = swift_getKeyPath();
  v55 = v66;
  sub_24A63CCC0(v50, v66, &qword_25794DE98);
  v56 = (uint64_t *)(v55 + *(int *)(v71 + 36));
  *v56 = v54;
  v56[1] = v53;
  sub_24A63CD04(v50, &qword_25794DE98);
  v57 = v69;
  sub_24A63F6C4(v55, v69, &qword_25794DEA0);
  sub_24A63CCC0(v57, v55, &qword_25794DEA0);
  v58 = v74;
  *v74 = v40;
  v58[1] = v42;
  *((_BYTE *)v58 + 16) = v29;
  v58[3] = v62[0];
  v58[4] = KeyPath;
  v58[5] = 0;
  *((_BYTE *)v58 + 48) = 1;
  v59 = v58;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DEB0);
  sub_24A63CCC0(v55, (uint64_t)v59 + *(int *)(v60 + 48), &qword_25794DEA0);
  sub_24A6436C4(v40, v42, v29);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A63CD04(v57, &qword_25794DEA0);
  sub_24A63CD04(v55, &qword_25794DEA0);
  sub_24A64596C(v40, v42, v29);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A739D50@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579492E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_24A77B410();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24A77A9B4();
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794C068);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16);
  if (!a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v19 + 56))(a3, 1, 1, v20);
  v37 = (uint64_t)&v35 - v18;
  v38 = v19;
  v41 = v17;
  v39 = a3;
  sub_24A77A9A8();
  sub_24A77A99C();
  sub_24A779040();
  v21 = swift_dynamicCastClass();
  v36 = v5;
  if (!v21)
  {
    sub_24A778FA4();
    if (!swift_dynamicCastClass())
      WorkoutConfiguration.displaySymbolName.getter();
  }
  sub_24A77B3EC();
  sub_24A77A984();
  swift_release();
  sub_24A77A99C();
  sub_24A77A990();
  sub_24A77A99C();
  sub_24A77A9CC();
  v23 = sub_24A77AFC0();
  v25 = v24;
  v40 = v26;
  v28 = v27 & 1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDF40B0], v8);
  v30 = v8;
  v31 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v36 + 28), v11, v30);
  *v7 = v31;
  sub_24A63CCC0((uint64_t)v7, (uint64_t)&v15[*(int *)(v41 + 36)], &qword_2579492E8);
  *(_QWORD *)v15 = v23;
  *((_QWORD *)v15 + 1) = v25;
  v15[16] = v28;
  *((_QWORD *)v15 + 3) = v40;
  *((_QWORD *)v15 + 4) = KeyPath;
  *((_QWORD *)v15 + 5) = 0;
  v15[48] = 1;
  sub_24A6436C4(v23, v25, v28);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A63CD04((uint64_t)v7, &qword_2579492E8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
  sub_24A64596C(v23, v25, v28);
  swift_release();
  swift_bridgeObjectRelease();
  v32 = v37;
  sub_24A63F6C4((uint64_t)v15, v37, &qword_25794C068);
  v33 = v32;
  v34 = v39;
  sub_24A63F6C4(v33, v39, &qword_25794C068);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v41);
}

uint64_t sub_24A73A138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A738A4C(*(void **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_24A73A154()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DE68;
  if (!qword_25794DE68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DE60);
    v2[0] = sub_24A73A1D8();
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257946BF8, &qword_257946C00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DE68);
  }
  return result;
}

unint64_t sub_24A73A1D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794DE70;
  if (!qword_25794DE70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DE78);
    v2 = sub_24A63CFF0((unint64_t *)&qword_257947768, &qword_257947770, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794DE70);
  }
  return result;
}

unint64_t sub_24A73A270()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DEB8;
  if (!qword_25794DEB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DE20);
    v2[0] = sub_24A665CEC(&qword_25794DEC0, &qword_25794DE10, sub_24A73A314, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_24A63CFF0((unint64_t *)&qword_257948440, &qword_257948448, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DEB8);
  }
  return result;
}

uint64_t sub_24A73A314()
{
  return sub_24A665CEC(&qword_25794DEC8, &qword_25794DE08, sub_24A73A338, MEMORY[0x24BDECC60]);
}

uint64_t sub_24A73A338()
{
  return sub_24A665CEC(&qword_25794DED0, &qword_25794DE00, sub_24A73A35C, MEMORY[0x24BDECC60]);
}

uint64_t sub_24A73A35C()
{
  return sub_24A665CEC(&qword_25794DED8, &qword_25794DDF8, (uint64_t (*)(void))sub_24A73A380, MEMORY[0x24BDECC60]);
}

unint64_t sub_24A73A380()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DEE0;
  if (!qword_25794DEE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DDF0);
    v2[0] = sub_24A63CFF0(&qword_25794DEE8, &qword_25794DDE8, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DEE0);
  }
  return result;
}

double Image.scaledToFit(size:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  double result;
  _OWORD v10[2];
  __int128 v11;

  v2 = sub_24A77B3D4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x24BDF3FD0], v2, v4);
  v7 = sub_24A77B41C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_24A77B668();
  sub_24A77A4B0();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  v8 = v10[1];
  *(_OWORD *)(a1 + 24) = v10[0];
  *(_OWORD *)(a1 + 40) = v8;
  result = *(double *)&v11;
  *(_OWORD *)(a1 + 56) = v11;
  return result;
}

unint64_t sub_24A73A520()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DEF0;
  if (!qword_25794DEF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DEF8);
    v2[0] = sub_24A6B63DC();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DEF0);
  }
  return result;
}

uint64_t sub_24A73A58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v8;

  v4 = sub_24A77AB1C();
  v5 = MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return sub_24A77AB28();
}

uint64_t sub_24A73A650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v9;

  v5 = sub_24A77AB1C();
  v6 = MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return sub_24A77AB28();
}

void __swiftcall MetricText.init(value:unit:description:stale:includesSlashes:)(WorkoutUI::MetricText *__return_ptr retstr, Swift::String value, Swift::String_optional unit, Swift::String_optional description, Swift::Bool stale, Swift::Bool includesSlashes)
{
  retstr->value = value;
  retstr->unit = unit;
  retstr->description = description;
  retstr->stale = stale;
  retstr->includesSlashes = includesSlashes;
}

uint64_t sub_24A73A72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;

  v25 = a7;
  v26 = a8;
  v24 = a6;
  v27 = a9;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E118);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v18 + 47) = 0;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  v20 = &v18[*(int *)(v19 + 60)];
  *(_QWORD *)v20 = swift_getKeyPath();
  v20[8] = 0;
  *(_QWORD *)&v18[*(int *)(v16 + 64)] = 0x3FD6666666666666;
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 2) = a3;
  *((_QWORD *)v18 + 3) = a4;
  swift_bridgeObjectRelease();
  v21 = v24;
  *((_QWORD *)v18 + 4) = a5;
  *((_QWORD *)v18 + 5) = v21;
  v18[48] = v25;
  v18[49] = v26;
  v18[50] = a10;
  sub_24A761C90(a11, (uint64_t)&v18[*(int *)(v16 + 56)]);
  sub_24A74528C((uint64_t)v18, v27);
  return sub_24A7452D4(a11);
}

uint64_t MetricTextWithAccessory.init(value:unit:description:stale:includesSlashes:accessoryAsSuffix:accessoryView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t (*a11)(uint64_t), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = type metadata accessor for MetricTextWithAccessory(0, a13, a14, a4);
  *(_OWORD *)(a9 + 16) = 0u;
  *(_OWORD *)(a9 + 32) = 0u;
  *(_DWORD *)(a9 + 47) = 0;
  v22 = a9 + *(int *)(v21 + 60);
  *(_QWORD *)v22 = swift_getKeyPath();
  *(_BYTE *)(v22 + 8) = 0;
  *(_QWORD *)(a9 + *(int *)(v21 + 64)) = 0x3FD6666666666666;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  v23 = swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 49) = a8;
  *(_BYTE *)(a9 + 50) = a10;
  return a11(v23);
}

uint64_t type metadata accessor for MetricTextWithAccessory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricTextWithAccessory);
}

uint64_t sub_24A73A970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD v35[3];

  v27 = a2;
  v25 = *(_QWORD *)(a1 + 16);
  sub_24A77A5F4();
  sub_24A77A5F4();
  v24 = *(_QWORD *)(a1 + 24);
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v3 = sub_24A77B6A4();
  v4 = MEMORY[0x24BDF5428];
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v3);
  sub_24A77B4D0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C10);
  sub_24A77A5F4();
  v23 = *(_QWORD *)(a1 + 32);
  sub_24A77A5F4();
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  v5 = *(_QWORD *)(a1 + 40);
  swift_getTupleTypeMetadata2();
  sub_24A77B6A4();
  swift_getTupleTypeMetadata2();
  sub_24A77B6A4();
  sub_24A77AB34();
  swift_getTupleTypeMetadata2();
  v6 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v4, v6);
  v7 = sub_24A77B4D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - v9;
  v11 = sub_24A77A5F4();
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - v15;
  sub_24A77A900();
  v28 = v25;
  v29 = v24;
  v30 = v23;
  v31 = v5;
  v17 = *(_OWORD *)(a1 + 64);
  v32 = *(_OWORD *)(a1 + 48);
  v33 = v17;
  v34 = v26;
  sub_24A77B4C4();
  v18 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v7);
  View.metricRow(padding:)(v7, v18, 0.0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v19 = sub_24A69F3D8();
  v35[0] = v18;
  v35[1] = v19;
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v11, v35);
  sub_24A6B90A4((uint64_t)v13, v11, (uint64_t)v16);
  v20 = *(void (**)(char *, uint64_t))(v22 + 8);
  v20(v13, v11);
  sub_24A6B8268((uint64_t)v16, v11, v27);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v11);
}

void sub_24A73AD0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD);
  uint64_t v60;
  _QWORD v61[4];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(_QWORD, _QWORD);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (**v96)(char *, uint64_t);
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD v119[3];

  v65 = a1;
  v66 = a8;
  v93 = a7;
  v94 = a6;
  v92 = a4;
  v90 = a9;
  v91 = a10;
  v71 = sub_24A77A5F4();
  v13 = sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  v14 = sub_24A77A5F4();
  v15 = sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C10);
  v16 = sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v17 = sub_24A77B6A4();
  v61[3] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v61[2] = (char *)v61 - v18;
  v101 = a5;
  swift_getTupleTypeMetadata2();
  v19 = sub_24A77B6A4();
  v61[1] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v61[0] = (char *)v61 - v20;
  v85 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v84 = (char *)v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v99 = (char *)v61 - v24;
  v75 = v13;
  v68 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v67 = (char *)v61 - v26;
  v78 = v14;
  v70 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v69 = (char *)v61 - v28;
  v80 = v15;
  v73 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v72 = (char *)v61 - v30;
  v81 = v16;
  v77 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v79 = (char *)v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v97 = (char *)v61 - v34;
  v100 = v35;
  v89 = v17;
  v88 = sub_24A77AB34();
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v87 = (char *)v61 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v98 = (char *)v61 - v38;
  v39 = a2;
  v62 = a2;
  sub_24A77A5F4();
  sub_24A77A5F4();
  v40 = a3;
  v63 = a3;
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v41 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v41);
  v42 = sub_24A77B4D0();
  v96 = *(void (***)(char *, uint64_t))(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)v61 - v43;
  v45 = sub_24A77A5F4();
  v95 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v82 = (char *)v61 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)v61 - v48;
  MEMORY[0x24BDAC7A8](v50);
  v52 = (void (**)(char *, uint64_t))((char *)v61 - v51);
  sub_24A77A900();
  v102 = v39;
  v103 = v40;
  v104 = v92;
  v105 = v101;
  v106 = v94;
  v107 = v93;
  v53 = v66;
  v108 = v66;
  v109 = v91;
  v110 = v65;
  v54 = v91;
  sub_24A77B4C4();
  v55 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v42);
  sub_24A77B308();
  v96[1](v44, v42);
  v56 = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
  v119[0] = v55;
  v119[1] = v56;
  v57 = v53;
  v64 = v56;
  v58 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v45, v119);
  v96 = v52;
  v74 = v58;
  sub_24A6B90A4((uint64_t)v49, v45, (uint64_t)v52);
  v59 = *(void (**)(_QWORD, _QWORD))(v95 + 8);
  v60 = v92;
  v83 = v45;
  v76 = v59;
  v59(v49, v45);
  v111 = v62;
  v112 = v63;
  v113 = v60;
  v114 = v101;
  v115 = v94;
  v116 = v93;
  v117 = v57;
  v118 = v54;
  type metadata accessor for MetricTextWatchOS();
}

void sub_24A73B2D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (*(_BYTE *)(v4 + *(int *)(a1 + 96)) == 1)
  {
    v6 = v1[9];
    View.metricDescriptionFont(multiline:)(1, v3, v2);
    v7 = sub_24A63BBE0();
    v1[63] = v2;
    v1[64] = v7;
    v8 = MEMORY[0x24BDED308];
    v9 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1[13], v1 + 63);
    v10 = sub_24A63BCB8();
    v1[61] = v9;
    v1[62] = v10;
    v11 = v1[17];
    v12 = MEMORY[0x24BD1A1F4](v8, v11, v1 + 61);
    sub_24A77B140();
    (*(void (**)(uint64_t, uint64_t))(v1[10] + 8))(v6, v11);
    v13 = sub_24A63CFF0(&qword_2579484B0, &qword_2579484B8, MEMORY[0x24BDEFB48]);
    v1[59] = v12;
    v1[60] = v13;
    MEMORY[0x24BD1A1F4](v8, v1[20], v1 + 59);
    View.bodyHyphenation()();
  }
  sub_24A6B90A4(v4 + *(int *)(a1 + 92), v1[43], v1[41]);
  v14 = v1[9];
  View.metricDescriptionFont(multiline:)(1, v3, v2);
  v15 = sub_24A63BBE0();
  *(_QWORD *)(v5 - 184) = v2;
  *(_QWORD *)(v5 - 176) = v15;
  v16 = MEMORY[0x24BDED308];
  v17 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1[13], v5 - 184);
  v18 = sub_24A63BCB8();
  *(_QWORD *)(v5 - 200) = v17;
  *(_QWORD *)(v5 - 192) = v18;
  v19 = v1[17];
  v20 = MEMORY[0x24BD1A1F4](v16, v19, v5 - 200);
  sub_24A77B140();
  (*(void (**)(uint64_t, uint64_t))(v1[10] + 8))(v14, v19);
  v21 = sub_24A63CFF0(&qword_2579484B0, &qword_2579484B8, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v5 - 216) = v20;
  *(_QWORD *)(v5 - 208) = v21;
  MEMORY[0x24BD1A1F4](v16, v1[20], v5 - 216);
  View.bodyHyphenation()();
}

void sub_24A73B6A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  (*(void (**)(uint64_t, uint64_t))(v0[12] + 8))(v4, v2);
  v8 = sub_24A6A8458();
  *(_QWORD *)(v7 - 232) = v1;
  *(_QWORD *)(v7 - 224) = v8;
  v9 = v0[22];
  v10 = MEMORY[0x24BD1A1F4](v5, v9, v7 - 232);
  v11 = v0[21];
  sub_24A77B308();
  (*(void (**)(uint64_t, uint64_t))(v0[15] + 8))(v3, v9);
  v12 = v0[6];
  *(_QWORD *)(v7 - 248) = v10;
  *(_QWORD *)(v7 - 240) = v12;
  v13 = v0[23];
  v14 = MEMORY[0x24BD1A1F4](v5, v13, v7 - 248);
  v15 = v0[39];
  sub_24A6B90A4(v11, v13, v15);
  v16 = v0[19];
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v17(v11, v13);
  v19 = v0[26];
  v18 = v0[27];
  v20 = v6;
  v21 = v0[43];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v20, v21);
  *(_QWORD *)(v7 - 168) = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v11, v15, v13);
  *(_QWORD *)(v7 - 160) = v11;
  v0[69] = v21;
  v22 = v21;
  v0[70] = v13;
  v0[67] = v0[33];
  v0[68] = v14;
  v23 = v0[2];
  sub_24A66AB50((uint64_t *)(v7 - 168), 2uLL, (uint64_t)(v0 + 69));
  v17(v11, v13);
  v24 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v24(v19, v22);
  v25 = MEMORY[0x24BDF5428];
  v26 = v0[42];
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v26);
  v27 = v0[31];
  MEMORY[0x24BD1A1F4](v25, v27);
  sub_24A73A650(v23, v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v0[3] + 8))(v23, v27);
  v17(v0[39], v13);
  v24(v0[41], v22);
  JUMPOUT(0x24A73B850);
}

void sub_24A73B94C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  _QWORD v50[2];

  v37 = a8;
  v36 = a7;
  v40 = a6;
  v34 = a5;
  v33 = a4;
  v31 = a3;
  v28[2] = a1;
  v39 = a9;
  v32 = a10;
  v11 = sub_24A77A5F4();
  v38 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)v28 - v13;
  v28[0] = a2;
  v14 = sub_24A77A5F4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v28 - v16;
  v18 = sub_24A77A5F4();
  v29 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v28 - v22;
  v28[1] = (char *)v28 - v22;
  v24 = a2;
  v25 = v40;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v24, v40);
  v26 = sub_24A63F8AC();
  v50[0] = v25;
  v50[1] = v26;
  v27 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v14, v50);
  sub_24A77B2F0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v49[0] = v27;
  v49[1] = MEMORY[0x24BDEDB80];
  v30 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v18, v49);
  sub_24A6B90A4((uint64_t)v20, v18, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v18);
  v41 = v28[0];
  v42 = v31;
  v43 = v33;
  v44 = v34;
  v45 = v40;
  v46 = v36;
  v47 = v37;
  v48 = v32;
  type metadata accessor for MetricTextWatchOS();
}

uint64_t sub_24A73BBEC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  View.metricUnitFont()(v6, v3);
  v9 = sub_24A7451B4();
  *(_QWORD *)(v8 - 200) = v3;
  *(_QWORD *)(v8 - 192) = v9;
  v10 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v0, v8 - 200);
  v11 = *(_QWORD *)(v8 - 280);
  sub_24A6B90A4(v2, v0, v11);
  v12 = *(_QWORD *)(v8 - 256);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v2, v0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v15 = *(_QWORD *)(v8 - 344);
  v14(v5, v15, v4);
  *(_QWORD *)(v8 - 184) = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v2, v11, v0);
  *(_QWORD *)(v8 - 176) = v2;
  *(_QWORD *)(v8 - 216) = v4;
  *(_QWORD *)(v8 - 208) = v0;
  *(_QWORD *)(v8 - 232) = *(_QWORD *)(v8 - 320);
  *(_QWORD *)(v8 - 224) = v10;
  sub_24A66AB50((uint64_t *)(v8 - 184), 2uLL, v8 - 216);
  v13(v11, v0);
  v1(v15, v4);
  v13(v2, v0);
  return ((uint64_t (*)(uint64_t, uint64_t))v1)(v5, v4);
}

uint64_t sub_24A73BD0C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = v2 + *(int *)(a1 + 100);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_24A63BEC0(*(_QWORD *)v4, v6);
  sub_24A63E608(v5, v6, a2);
  return sub_24A63BEDC(v5, v6);
}

void sub_24A73BD68()
{
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A73BDD8(int *a1)
{
  uint64_t (*v1)(void);
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;

  v7 = v2 + a1[25];
  *(_QWORD *)v7 = swift_getKeyPath();
  *(_BYTE *)(v7 + 8) = 0;
  v8 = a1[26];
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)(v2 + v8) = v9;
  v10 = a1[27];
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)(v2 + v10) = v11;
  v12 = a1[28];
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)(v2 + v12) = v13;
  v14 = v1();
  v15 = v5(v14);
  v3(v15);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v2 + a1[23], v17, v4);
  *(_BYTE *)(v2 + a1[24]) = v18;
  return result;
}

uint64_t sub_24A73BEF0@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  void (*v98)(uint64_t, uint64_t);
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t);
  void (*v159)(uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(uint64_t, uint64_t);
  void (*v191)(uint64_t, uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(uint64_t, uint64_t);
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v244;
  uint64_t v245;
  __int128 v246;
  __int128 v247;
  void (*v248)(_QWORD, _QWORD);
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  void (*v290)(char *, uint64_t);
  void (*v291)(uint64_t, uint64_t);
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  _QWORD v305[2];
  _QWORD v306[2];
  _QWORD v307[2];
  _QWORD v308[2];
  _QWORD v309[2];
  _QWORD v310[2];
  _QWORD v311[2];
  _QWORD v312[2];
  _QWORD v313[2];
  _QWORD v314[2];
  _QWORD v315[2];
  _QWORD v316[2];
  _QWORD v317[2];
  _QWORD v318[2];
  _QWORD v319[2];
  _QWORD v320[2];
  _QWORD v321[2];
  _QWORD v322[2];
  _QWORD v323[2];
  _QWORD v324[2];
  _QWORD v325[2];
  _QWORD v326[2];
  _QWORD v327[2];
  _QWORD v328[2];
  _QWORD v329[2];
  _QWORD v330[2];
  _QWORD v331[2];
  _QWORD v332[2];
  _QWORD v333[2];
  _QWORD v334[2];
  _QWORD v335[2];
  _QWORD v336[2];
  _QWORD v337[2];
  _QWORD v338[2];
  _QWORD v339[2];
  _QWORD v340[2];
  _QWORD v341[2];
  _QWORD v342[2];
  _QWORD v343[2];
  _QWORD v344[2];
  _QWORD v345[2];
  _QWORD v346[2];
  _QWORD v347[2];
  _QWORD v348[2];
  _QWORD v349[2];
  _QWORD v350[2];
  _QWORD v351[2];
  _QWORD v352[2];
  _QWORD v353[2];
  _QWORD v354[2];
  char v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;

  v294 = a2;
  v286 = *((_QWORD *)a1 + 2);
  v356 = sub_24A77A5F4();
  v3 = *((_QWORD *)a1 + 3);
  v4 = sub_24A77A5F4();
  v357 = v4;
  v5 = *((_QWORD *)a1 + 4);
  v290 = a1;
  v284 = v5;
  sub_24A77A5F4();
  v358 = sub_24A77A5F4();
  v359 = MEMORY[0x24BDF4638];
  swift_getTupleTypeMetadata();
  v6 = sub_24A77B6A4();
  v7 = MEMORY[0x24BDF5428];
  v270 = v6;
  v268 = MEMORY[0x24BD1A1F4]();
  v8 = sub_24A77B4D0();
  v303 = sub_24A77AB34();
  v279 = *(_QWORD *)(v303 - 8);
  MEMORY[0x24BDAC7A8](v303);
  v280 = (uint64_t)&v250 - v9;
  v302 = v8;
  v267 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v269 = (char *)&v250 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v278 = (uint64_t)&v250 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B78);
  v356 = sub_24A77A5F4();
  v285 = v3;
  sub_24A77A5F4();
  v357 = sub_24A77A5F4();
  v14 = *((_QWORD *)a1 + 5);
  v15 = sub_24A77A5F4();
  v358 = v15;
  sub_24A77A5F4();
  v359 = sub_24A77A5F4();
  swift_getTupleTypeMetadata();
  v16 = sub_24A77B6A4();
  v17 = v7;
  v261 = MEMORY[0x24BD1A1F4](v7, v16);
  v262 = v16;
  v18 = sub_24A77B548();
  v264 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v263 = (char *)&v250 - v19;
  v301 = v20;
  v21 = sub_24A77A5F4();
  v265 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v266 = (char *)&v250 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v275 = (uint64_t)&v250 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C10);
  v356 = sub_24A77A5F4();
  v357 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v358 = v4;
  v25 = v4;
  v359 = v15;
  swift_getTupleTypeMetadata();
  v26 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v17, v26);
  sub_24A77B4D0();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v27 = sub_24A77B6A4();
  v28 = MEMORY[0x24BD1A1F4](v17, v27);
  v258 = v27;
  v256 = v28;
  v29 = sub_24A77B530();
  v30 = sub_24A77A5F4();
  v304 = v21;
  v31 = sub_24A77AB34();
  v277 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v276 = (char *)&v250 - v32;
  v299 = v29;
  v257 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v255 = (char *)&v250 - v34;
  v300 = v30;
  v259 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v260 = (char *)&v250 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v274 = (uint64_t)&v250 - v38;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579486F8);
  v356 = sub_24A77A5F4();
  v357 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v358 = v25;
  v359 = v14;
  v360 = MEMORY[0x24BDF4638];
  swift_getTupleTypeMetadata();
  v39 = sub_24A77B6A4();
  v40 = MEMORY[0x24BDF5428];
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v39);
  sub_24A77B4D0();
  sub_24A77A5F4();
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947660);
  sub_24A77A5F4();
  swift_getTupleTypeMetadata3();
  v41 = sub_24A77B6A4();
  v250 = MEMORY[0x24BD1A1F4](v40, v41);
  v42 = sub_24A77B530();
  v252 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v251 = (char *)&v250 - v43;
  v298 = v44;
  v45 = sub_24A77A5F4();
  v253 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v254 = (char *)&v250 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47);
  v271 = (uint64_t)&v250 - v48;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  v356 = sub_24A77A5F4();
  v357 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v358 = v25;
  v283 = v14;
  v359 = v14;
  v49 = v290;
  swift_getTupleTypeMetadata();
  v50 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v40, v50);
  sub_24A77B4D0();
  swift_getTupleTypeMetadata3();
  v51 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v40, v51);
  v52 = sub_24A77B4D0();
  v296 = v45;
  v53 = sub_24A77AB34();
  v273 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v272 = (char *)&v250 - v54;
  v297 = v55;
  v289 = v31;
  v56 = sub_24A77AB34();
  v282 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v281 = (char *)&v250 - v57;
  v295 = v52;
  v58 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v61 = (char *)&v250 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v62);
  v64 = (void (*)(uint64_t, uint64_t))((char *)&v250 - v63);
  v288 = v65;
  v66 = sub_24A77AB34();
  v292 = *(_QWORD *)(v66 - 8);
  v293 = v66;
  MEMORY[0x24BDAC7A8](v66);
  v287 = (char *)&v250 - v67;
  v68 = v291;
  v69 = sub_24A73BD0C((uint64_t)v49, &v355);
  switch(v355)
  {
    case 2:
      v70 = sub_24A77A900();
      MEMORY[0x24BDAC7A8](v70);
      v71 = v285;
      *(&v250 - 10) = v286;
      *(&v250 - 9) = v71;
      v244 = v284;
      v245 = v283;
      v72 = *((_OWORD *)v49 + 4);
      v246 = *((_OWORD *)v49 + 3);
      v247 = v72;
      v248 = v68;
      sub_24A77B4C4();
      v73 = v295;
      v74 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v295);
      sub_24A6B90A4((uint64_t)v61, v73, (uint64_t)v64);
      v75 = *(void (**)(char *, uint64_t))(v58 + 8);
      v75(v61, v73);
      v290 = v75;
      sub_24A6B8268((uint64_t)v64, v73, (uint64_t)v61);
      v76 = MEMORY[0x24BDF4700];
      v77 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v298);
      v78 = sub_24A69F3D8();
      v311[0] = v77;
      v311[1] = v78;
      v79 = MEMORY[0x24BDED308];
      v291 = v64;
      v80 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v296, v311);
      v81 = (uint64_t)v272;
      sub_24A73A58C((uint64_t)v61, v73);
      v75(v61, v73);
      v310[0] = v74;
      v310[1] = v80;
      v82 = MEMORY[0x24BDEF3E0];
      v83 = v297;
      v84 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v297, v310);
      v309[0] = MEMORY[0x24BD1A1F4](v76, v299);
      v309[1] = MEMORY[0x24BDEDBB8];
      v85 = MEMORY[0x24BD1A1F4](v79, v300, v309);
      v308[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v301);
      v308[1] = MEMORY[0x24BDECC60];
      v86 = MEMORY[0x24BD1A1F4](v79, v304, v308);
      v307[0] = v85;
      v307[1] = v86;
      v87 = v289;
      v88 = MEMORY[0x24BD1A1F4](v82, v289, v307);
      v89 = (uint64_t)v281;
      sub_24A73A58C(v81, v83);
      (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v81, v83);
      v306[0] = v84;
      v306[1] = v88;
      v90 = v288;
      MEMORY[0x24BD1A1F4](v82, v288, v306);
      v305[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v302);
      v305[1] = MEMORY[0x24BDF1F80];
      v91 = v82;
      v92 = v73;
      v93 = v303;
      MEMORY[0x24BD1A1F4](v91, v303, v305);
      v94 = (uint64_t)v287;
      sub_24A73A58C(v89, v90);
      v95 = v89;
      v96 = v296;
      (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v95, v90);
      v290((char *)v291, v92);
      break;
    case 3:
      MEMORY[0x24BDAC7A8](v69);
      v117 = v285;
      *(&v250 - 10) = v286;
      *(&v250 - 9) = v117;
      v244 = v284;
      v245 = v283;
      v246 = *((_OWORD *)v49 + 3);
      sub_24A77A9FC();
      v118 = v255;
      sub_24A77B524();
      v119 = sub_24A77B668();
      v121 = v120;
      v122 = MEMORY[0x24BDF4700];
      v123 = v299;
      v124 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v299);
      v248 = (void (*)(_QWORD, _QWORD))v123;
      v249 = v124;
      *(_QWORD *)&v247 = v119;
      *((_QWORD *)&v247 + 1) = v121;
      BYTE8(v246) = 1;
      *(_QWORD *)&v246 = 0;
      LOBYTE(v245) = 1;
      v244 = 0;
      v125 = (uint64_t)v260;
      sub_24A77B278();
      (*(void (**)(char *, uint64_t))(v257 + 8))(v118, v123);
      v325[0] = v124;
      v325[1] = MEMORY[0x24BDEDBB8];
      v126 = MEMORY[0x24BDED308];
      v127 = v300;
      v128 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v300, v325);
      v129 = v274;
      sub_24A6B90A4(v125, v127, v274);
      v130 = *(void (**)(uint64_t, uint64_t))(v259 + 8);
      v130(v125, v127);
      v291 = v130;
      sub_24A6B8268(v129, v127, v125);
      v324[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v301);
      v324[1] = MEMORY[0x24BDECC60];
      v131 = MEMORY[0x24BD1A1F4](v126, v304, v324);
      v132 = (uint64_t)v276;
      sub_24A73A58C(v125, v127);
      v130(v125, v127);
      v133 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v295);
      v134 = MEMORY[0x24BD1A1F4](v122, v298);
      v135 = sub_24A69F3D8();
      v323[0] = v134;
      v323[1] = v135;
      v136 = MEMORY[0x24BDF1F80];
      v137 = MEMORY[0x24BD1A1F4](v126, v296, v323);
      v322[0] = v133;
      v322[1] = v137;
      v138 = MEMORY[0x24BDEF3E0];
      v139 = v297;
      v140 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v297, v322);
      v321[0] = v128;
      v321[1] = v131;
      v87 = v289;
      v141 = MEMORY[0x24BD1A1F4](v138, v289, v321);
      v142 = (uint64_t)v281;
      sub_24A73A650(v132, v139, v87);
      (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v132, v87);
      v320[0] = v140;
      v320[1] = v141;
      v90 = v288;
      MEMORY[0x24BD1A1F4](v138, v288, v320);
      v319[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v302);
      v319[1] = v136;
      v143 = v138;
      v92 = v295;
      v93 = v303;
      MEMORY[0x24BD1A1F4](v143, v303, v319);
      v94 = (uint64_t)v287;
      sub_24A73A58C(v142, v90);
      v144 = v142;
      v96 = v296;
      (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v144, v90);
      v145 = v274;
      v146 = v127;
      goto LABEL_7;
    case 4:
      sub_24A77A9FC();
      v147 = sub_24A77A90C();
      MEMORY[0x24BDAC7A8](v147);
      v148 = v285;
      *(&v250 - 10) = v286;
      *(&v250 - 9) = v148;
      v244 = v284;
      v245 = v283;
      v149 = *((_OWORD *)v49 + 4);
      v246 = *((_OWORD *)v49 + 3);
      v247 = v149;
      v248 = v68;
      v150 = v263;
      sub_24A77B53C();
      sub_24A77ACA8();
      v151 = v301;
      v152 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v301);
      v153 = (uint64_t)v266;
      sub_24A77B2A8();
      (*(void (**)(char *, uint64_t))(v264 + 8))(v150, v151);
      v332[0] = v152;
      v332[1] = MEMORY[0x24BDECC60];
      v154 = MEMORY[0x24BDED308];
      v155 = v304;
      v156 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v304, v332);
      v157 = v275;
      sub_24A6B90A4(v153, v155, v275);
      v158 = *(void (**)(uint64_t, uint64_t))(v265 + 8);
      v158(v153, v155);
      v159 = v158;
      v291 = v158;
      v160 = v155;
      sub_24A6B8268(v157, v155, v153);
      v161 = MEMORY[0x24BDF4700];
      v331[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v299);
      v331[1] = MEMORY[0x24BDEDBB8];
      v162 = v300;
      v163 = MEMORY[0x24BD1A1F4](v154, v300, v331);
      v164 = (uint64_t)v276;
      sub_24A73A650(v153, v162, v160);
      v159(v153, v160);
      v165 = v295;
      v166 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v295);
      v167 = MEMORY[0x24BD1A1F4](v161, v298);
      v168 = sub_24A69F3D8();
      v330[0] = v167;
      v330[1] = v168;
      v169 = MEMORY[0x24BDF1F80];
      v170 = MEMORY[0x24BD1A1F4](v154, v296, v330);
      v329[0] = v166;
      v329[1] = v170;
      v171 = MEMORY[0x24BDEF3E0];
      v172 = v297;
      v173 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v297, v329);
      v328[0] = v163;
      v328[1] = v156;
      v87 = v289;
      v174 = MEMORY[0x24BD1A1F4](v171, v289, v328);
      v175 = (uint64_t)v281;
      sub_24A73A650(v164, v172, v87);
      (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v164, v87);
      v327[0] = v173;
      v327[1] = v174;
      v90 = v288;
      MEMORY[0x24BD1A1F4](v171, v288, v327);
      v326[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v302);
      v326[1] = v169;
      v176 = v171;
      v92 = v165;
      v93 = v303;
      MEMORY[0x24BD1A1F4](v176, v303, v326);
      v94 = (uint64_t)v287;
      sub_24A73A58C(v175, v90);
      v177 = v175;
      v96 = v296;
      (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v177, v90);
      v145 = v275;
      v146 = v304;
      goto LABEL_7;
    case 5:
      v178 = sub_24A77AA08();
      MEMORY[0x24BDAC7A8](v178);
      v179 = v285;
      *(&v250 - 10) = v286;
      *(&v250 - 9) = v179;
      v244 = v284;
      v245 = v283;
      v180 = *((_OWORD *)v49 + 4);
      v246 = *((_OWORD *)v49 + 3);
      v247 = v180;
      v248 = v68;
      v181 = v251;
      sub_24A77B524();
      v182 = MEMORY[0x24BDF4700];
      v183 = v298;
      v184 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v298);
      v185 = (uint64_t)v254;
      View.metricRow(padding:)(v183, v184, 0.0);
      (*(void (**)(char *, uint64_t))(v252 + 8))(v181, v183);
      v186 = sub_24A69F3D8();
      v318[0] = v184;
      v318[1] = v186;
      v187 = v296;
      v188 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v296, v318);
      v189 = v271;
      sub_24A6B90A4(v185, v187, v271);
      v190 = *(void (**)(uint64_t, uint64_t))(v253 + 8);
      v190(v185, v187);
      v191 = v190;
      v291 = v190;
      sub_24A6B8268(v189, v187, v185);
      v192 = MEMORY[0x24BDECC60];
      v193 = v295;
      v194 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v295);
      v195 = (uint64_t)v272;
      sub_24A73A650(v185, v193, v187);
      v191(v185, v187);
      v317[0] = v194;
      v317[1] = v188;
      v196 = MEMORY[0x24BDEF3E0];
      v197 = v297;
      v198 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v297, v317);
      v316[0] = MEMORY[0x24BD1A1F4](v182, v299);
      v316[1] = MEMORY[0x24BDEDBB8];
      v199 = MEMORY[0x24BDED308];
      v200 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v300, v316);
      v315[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v301);
      v315[1] = v192;
      v201 = MEMORY[0x24BD1A1F4](v199, v304, v315);
      v314[0] = v200;
      v314[1] = v201;
      v87 = v289;
      v202 = MEMORY[0x24BD1A1F4](v196, v289, v314);
      v203 = (uint64_t)v281;
      sub_24A73A58C(v195, v197);
      (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v195, v197);
      v313[0] = v198;
      v96 = v187;
      v313[1] = v202;
      v90 = v288;
      MEMORY[0x24BD1A1F4](v196, v288, v313);
      v312[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v302);
      v312[1] = MEMORY[0x24BDF1F80];
      v93 = v303;
      MEMORY[0x24BD1A1F4](v196, v303, v312);
      v94 = (uint64_t)v287;
      v92 = v193;
      sub_24A73A58C(v203, v90);
      (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v203, v90);
      v145 = v271;
      v146 = v96;
LABEL_7:
      v291(v145, v146);
      break;
    case 6:
      v204 = sub_24A77A900();
      MEMORY[0x24BDAC7A8](v204);
      v205 = v285;
      *(&v250 - 10) = v286;
      *(&v250 - 9) = v205;
      v244 = v284;
      v245 = v283;
      v206 = *((_OWORD *)v49 + 4);
      v246 = *((_OWORD *)v49 + 3);
      v247 = v206;
      v248 = v68;
      v207 = (uint64_t)v269;
      sub_24A77B4C4();
      v208 = MEMORY[0x24BDF4498];
      v209 = v302;
      v210 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v302);
      v211 = v278;
      sub_24A6B90A4(v207, v209, v278);
      v212 = *(void (**)(uint64_t, uint64_t))(v267 + 8);
      v212(v207, v209);
      v291 = v212;
      sub_24A6B8268(v211, v209, v207);
      sub_24A73A58C(v207, v209);
      v212(v207, v209);
      v213 = MEMORY[0x24BD1A1F4](v208, v295);
      v214 = MEMORY[0x24BDF4700];
      v215 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v298);
      v216 = sub_24A69F3D8();
      v339[0] = v215;
      v339[1] = v216;
      v217 = MEMORY[0x24BDED308];
      v218 = v296;
      v219 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v296, v339);
      v338[0] = v213;
      v338[1] = v219;
      v220 = MEMORY[0x24BDEF3E0];
      v221 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v297, v338);
      v337[0] = MEMORY[0x24BD1A1F4](v214, v299);
      v337[1] = MEMORY[0x24BDEDBB8];
      v222 = MEMORY[0x24BD1A1F4](v217, v300, v337);
      v336[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v301);
      v336[1] = MEMORY[0x24BDECC60];
      v223 = MEMORY[0x24BD1A1F4](v217, v304, v336);
      v335[0] = v222;
      v335[1] = v223;
      v87 = v289;
      v224 = MEMORY[0x24BD1A1F4](v220, v289, v335);
      v334[0] = v221;
      v225 = v218;
      v334[1] = v224;
      v90 = v288;
      MEMORY[0x24BD1A1F4](v220, v288, v334);
      v333[0] = v210;
      v333[1] = MEMORY[0x24BDF1F80];
      v93 = v303;
      MEMORY[0x24BD1A1F4](v220, v303, v333);
      v94 = (uint64_t)v287;
      v226 = v280;
      sub_24A73A650(v280, v90, v93);
      (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v226, v93);
      v227 = v209;
      v96 = v225;
      v291(v278, v227);
      v92 = v295;
      break;
    default:
      sub_24A77A9C0();
      LOWORD(v249) = 256;
      v248 = 0;
      v286 = sub_24A77AFC0();
      v290 = v97;
      v291 = v98;
      v356 = v286;
      v357 = (uint64_t)v97;
      LODWORD(v285) = v99 & 1;
      LOBYTE(v358) = v99 & 1;
      v359 = (uint64_t)v98;
      v100 = MEMORY[0x24BDF4498];
      v101 = v302;
      v102 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v302);
      v103 = v280;
      sub_24A73A650((uint64_t)&v356, v101, MEMORY[0x24BDF1FA8]);
      v104 = v295;
      v105 = MEMORY[0x24BD1A1F4](v100, v295);
      v106 = MEMORY[0x24BDF4700];
      v107 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v298);
      v108 = sub_24A69F3D8();
      v354[0] = v107;
      v354[1] = v108;
      v109 = MEMORY[0x24BDED308];
      v96 = v296;
      v110 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v296, v354);
      v353[0] = v105;
      v353[1] = v110;
      v111 = MEMORY[0x24BDEF3E0];
      v112 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v297, v353);
      v352[0] = MEMORY[0x24BD1A1F4](v106, v299);
      v352[1] = MEMORY[0x24BDEDBB8];
      v113 = MEMORY[0x24BD1A1F4](v109, v300, v352);
      v351[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v301);
      v351[1] = MEMORY[0x24BDECC60];
      v114 = MEMORY[0x24BD1A1F4](v109, v304, v351);
      v350[0] = v113;
      v350[1] = v114;
      v87 = v289;
      v115 = MEMORY[0x24BD1A1F4](v111, v289, v350);
      v349[0] = v112;
      v349[1] = v115;
      v90 = v288;
      MEMORY[0x24BD1A1F4](v111, v288, v349);
      v348[0] = v102;
      v348[1] = MEMORY[0x24BDF1F80];
      v116 = v111;
      v92 = v104;
      v93 = v303;
      MEMORY[0x24BD1A1F4](v116, v303, v348);
      v94 = (uint64_t)v287;
      sub_24A73A650(v103, v90, v93);
      (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v103, v93);
      sub_24A64596C(v286, (uint64_t)v290, v285);
      swift_bridgeObjectRelease();
      break;
  }
  v228 = MEMORY[0x24BDF4498];
  v229 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v92);
  v230 = MEMORY[0x24BDF4700];
  v231 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v298);
  v232 = sub_24A69F3D8();
  v347[0] = v231;
  v347[1] = v232;
  v233 = MEMORY[0x24BDED308];
  v234 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v96, v347);
  v346[0] = v229;
  v346[1] = v234;
  v235 = MEMORY[0x24BDEF3E0];
  v236 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v297, v346);
  v345[0] = MEMORY[0x24BD1A1F4](v230, v299);
  v345[1] = MEMORY[0x24BDEDBB8];
  v237 = MEMORY[0x24BD1A1F4](v233, v300, v345);
  v344[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v301);
  v344[1] = MEMORY[0x24BDECC60];
  v238 = MEMORY[0x24BD1A1F4](v233, v304, v344);
  v343[0] = v237;
  v343[1] = v238;
  v239 = MEMORY[0x24BD1A1F4](v235, v87, v343);
  v342[0] = v236;
  v342[1] = v239;
  v240 = MEMORY[0x24BD1A1F4](v235, v90, v342);
  v341[0] = MEMORY[0x24BD1A1F4](v228, v302);
  v341[1] = MEMORY[0x24BDF1F80];
  v241 = MEMORY[0x24BD1A1F4](v235, v93, v341);
  v340[0] = v240;
  v340[1] = v241;
  v242 = v293;
  MEMORY[0x24BD1A1F4](v235, v293, v340);
  sub_24A6B8268(v94, v242, v294);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v292 + 8))(v94, v242);
}

void sub_24A73DA54(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v40 = a7;
  v41 = a8;
  v35 = a6;
  v39 = a1;
  v52 = a9;
  v38 = a10;
  v48 = sub_24A77A5F4();
  v14 = sub_24A77A5F4();
  v50 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v43 = (char *)&v30 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947660);
  v45 = sub_24A77A5F4();
  v51 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v49 = (char *)&v30 - v18;
  v31 = a2;
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  v63 = sub_24A77A5F4();
  v64 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v32 = a3;
  v65 = sub_24A77A5F4();
  v66 = a5;
  v33 = a5;
  swift_getTupleTypeMetadata();
  v19 = sub_24A77B6A4();
  v44 = (void (*)(char *, uint64_t))MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v19);
  v34 = sub_24A77B4D0();
  v53 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v30 - v23;
  v37 = (char *)&v30 - v23;
  sub_24A77A900();
  v54 = a2;
  v55 = a3;
  v56 = a4;
  v57 = a5;
  v25 = v35;
  v27 = v40;
  v26 = v41;
  v58 = v35;
  v59 = v40;
  v28 = v38;
  v60 = v41;
  v61 = v38;
  v62 = v39;
  v36 = v21;
  sub_24A77B4C4();
  v29 = v34;
  v42 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v34);
  sub_24A6B90A4((uint64_t)v21, v29, (uint64_t)v24);
  v44 = *(void (**)(char *, uint64_t))(v53 + 8);
  v44(v21, v29);
  v63 = v31;
  v64 = v32;
  v65 = a4;
  v66 = v33;
  v67 = v25;
  v68 = v27;
  v69 = v26;
  v70 = v28;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A73DD40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);

  v5 = v0[13];
  View.metricDescriptionFont(multiline:)(1, v1, v2);
  v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  *(_QWORD *)(v4 - 152) = MEMORY[0x24BD18928](v6);
  v7 = sub_24A63BBE0();
  *(_QWORD *)(v4 - 168) = v2;
  *(_QWORD *)(v4 - 160) = v7;
  v8 = MEMORY[0x24BDED308];
  v9 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v0[18], v4 - 168);
  v10 = sub_24A63BCB8();
  *(_QWORD *)(v4 - 184) = v9;
  *(_QWORD *)(v4 - 176) = v10;
  v11 = v0[16];
  v12 = MEMORY[0x24BD1A1F4](v8, v11, v4 - 184);
  v13 = v0[17];
  sub_24A77B170();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0[20] + 8))(v5, v11);
  v14 = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
  *(_QWORD *)(v4 - 200) = v12;
  *(_QWORD *)(v4 - 192) = v14;
  v15 = v0[15];
  v16 = MEMORY[0x24BD1A1F4](v8, v15, v4 - 200);
  v17 = v0[19];
  sub_24A6B90A4(v13, v15, v17);
  v18 = v0[21];
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v19(v13, v15);
  v20 = v0[6];
  v21 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[23] + 16))(v20, v21, v3);
  *(_QWORD *)(v4 - 152) = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v13, v17, v15);
  *(_QWORD *)(v4 - 216) = 0;
  *(_BYTE *)(v4 - 208) = 1;
  *(_QWORD *)(v4 - 144) = v13;
  *(_QWORD *)(v4 - 136) = v4 - 216;
  *(_QWORD *)(v4 - 240) = v3;
  *(_QWORD *)(v4 - 232) = v15;
  *(_QWORD *)(v4 - 224) = MEMORY[0x24BDF4638];
  v0[35] = v0[12];
  v0[36] = v16;
  v0[37] = MEMORY[0x24BDF4610];
  sub_24A66AB50((uint64_t *)(v4 - 152), 3uLL, v4 - 240);
  v19(v17, v15);
  v22 = (void (*)(uint64_t, uint64_t))v0[14];
  v22(v21, v3);
  v19(v13, v15);
  return ((uint64_t (*)(uint64_t, uint64_t))v22)(v20, v3);
}

void sub_24A73DF54(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  _QWORD v67[3];
  unsigned __int8 v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;

  v48 = a8;
  v45 = a4;
  v46 = a7;
  v43 = a5;
  v41 = a3;
  v37 = a1;
  v51 = a9;
  v56 = a10;
  v50 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v49 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)v30 - v14;
  v44 = sub_24A77A5F4();
  v47 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v55 = (char *)v30 - v17;
  v36 = a2;
  v18 = sub_24A77A5F4();
  v40 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v30 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  v21 = sub_24A77A5F4();
  v54 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v30 - v25;
  v53 = (char *)v30 - v25;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, a2, a6);
  v38 = sub_24A63F8AC();
  v67[0] = a6;
  v67[1] = v38;
  v27 = MEMORY[0x24BDED308];
  v28 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v18, v67);
  sub_24A77B140();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v18);
  v29 = sub_24A63CFF0(&qword_2579484B0, &qword_2579484B8, MEMORY[0x24BDEFB48]);
  v66[0] = v28;
  v66[1] = v29;
  v35 = v21;
  v39 = MEMORY[0x24BD1A1F4](v27, v21, v66);
  v52 = v23;
  sub_24A6B90A4((uint64_t)v23, v21, (uint64_t)v26);
  v40 = *(_QWORD *)(v54 + 8);
  ((void (*)(char *, uint64_t))v40)(v23, v21);
  sub_24A77B668();
  sub_24A77A4B0();
  v34 = v67[2];
  v33 = v68;
  v32 = v69;
  v31 = v70;
  v30[0] = v72;
  v30[1] = v71;
  v58 = v36;
  v59 = v41;
  v60 = v45;
  v61 = v43;
  v62 = a6;
  v63 = v46;
  v64 = v48;
  v65 = v56;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A73E278(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);

  v7 = v1[8];
  v8 = v1[13];
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v2, v4);
  v9 = v1[9];
  *(_QWORD *)(v5 - 248) = v4;
  *(_QWORD *)(v5 - 240) = v9;
  v10 = v1[15];
  v1[17] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v10, v5 - 248);
  v11 = v1[26];
  sub_24A6B90A4(v8, v10, v11);
  v12 = v1[18];
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v1[19] = (uint64_t)v13;
  v13(v8, v10);
  v14 = v7 + *(int *)(a1 + 92);
  v15 = v1[28];
  v16 = v3;
  sub_24A6B90A4(v14, v3, v15);
  v17 = v1[23];
  v18 = v1[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[25] + 16))(v17, v1[24], v18);
  *(_QWORD *)(v5 - 232) = 0;
  *(_BYTE *)(v5 - 224) = 1;
  *(_QWORD *)(v5 - 216) = v1[5];
  *(_BYTE *)(v5 - 208) = *((_DWORD *)v1 + 9);
  *(_QWORD *)(v5 - 200) = v1[3];
  *(_BYTE *)(v5 - 192) = *((_DWORD *)v1 + 5);
  v19 = *v1;
  *(_QWORD *)(v5 - 184) = v1[1];
  *(_QWORD *)(v5 - 176) = v19;
  v1[37] = v17;
  v1[38] = v5 - 232;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v8, v11, v10);
  v1[39] = v8;
  v21 = v1[20];
  v20 = v1[21];
  v22 = v15;
  v23 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v21, v22, v16);
  v1[40] = v21;
  v1[33] = v18;
  v24 = v18;
  v1[34] = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E0F8);
  v1[35] = v10;
  v1[36] = v16;
  v1[29] = v1[10];
  v25 = sub_24A74513C(&qword_25794E100, &qword_25794E0F8, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
  v26 = v1[17];
  v1[30] = v25;
  v1[31] = v26;
  v1[32] = v1[27];
  sub_24A66AB50(v1 + 37, 4uLL, (uint64_t)(v1 + 33));
  v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v27(v1[28], v16);
  v28 = (void (*)(uint64_t, uint64_t))v1[19];
  v28(v1[26], v10);
  v29 = (void (*)(uint64_t, uint64_t))v1[11];
  v29(v1[24], v24);
  v27(v21, v23);
  v28(v8, v10);
  return ((uint64_t (*)(uint64_t, uint64_t))v29)(v1[23], v24);
}

void sub_24A73E490(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v55 = a4;
  v56 = a8;
  v52 = a6;
  v53 = a7;
  v51 = a5;
  v48 = a2;
  v49 = a3;
  v54 = a1;
  v47 = a9;
  v50 = a10;
  v39 = sub_24A77A5F4();
  v11 = sub_24A77A5F4();
  v41 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)v34 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947660);
  v42 = v11;
  v46 = sub_24A77A5F4();
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v44 = (char *)v34 - v15;
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579486F8);
  v68 = sub_24A77A5F4();
  v69 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v70 = sub_24A77A5F4();
  v71 = a5;
  v72 = MEMORY[0x24BDF4638];
  swift_getTupleTypeMetadata();
  v16 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v16);
  v17 = sub_24A77B4D0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v34 - v19;
  v21 = sub_24A77A5F4();
  v35 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v34 - v22;
  v24 = sub_24A77A5F4();
  v36 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v38 = (char *)v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v34 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v37 = (uint64_t)v34 - v30;
  sub_24A77A900();
  v57 = v48;
  v58 = v49;
  v59 = v55;
  v60 = v51;
  v61 = v52;
  v62 = v53;
  v63 = v56;
  v64 = v50;
  v65 = v54;
  sub_24A77B4C4();
  if ((FIUICurrentLanguageNeedsExtendedLineSpacing() & 1) == 0)
  {
    v68 = v48;
    v69 = v49;
    v70 = v55;
    v71 = v51;
    v72 = v52;
    v73 = v53;
    v74 = v56;
    v75 = v50;
    type metadata accessor for MetricTextiOSPlatter();
  }
  v31 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v17);
  sub_24A77B290();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_24A77B668();
  v67[0] = v31;
  v67[1] = MEMORY[0x24BDEC438];
  v32 = MEMORY[0x24BDED308];
  v33 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v21, v67);
  sub_24A77B278();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v21);
  v66[0] = v33;
  v66[1] = MEMORY[0x24BDEDBB8];
  v34[1] = MEMORY[0x24BD1A1F4](v32, v24, v66);
  sub_24A6B90A4((uint64_t)v28, v24, v37);
  v35 = *(_QWORD *)(v36 + 8);
  ((void (*)(char *, uint64_t))v35)(v28, v24);
  v68 = v48;
  v69 = v49;
  v70 = v55;
  v71 = v51;
  v72 = v52;
  v73 = v53;
  v74 = v56;
  v75 = v50;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A73E9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  v8 = *(_QWORD *)(v0 + 56);
  View.metricDescriptionFont(multiline:)(0, v1, v2);
  v9 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  *(_QWORD *)(v7 - 168) = MEMORY[0x24BD18928](v9);
  v10 = sub_24A63BBE0();
  *(_QWORD *)(v7 - 216) = v2;
  *(_QWORD *)(v7 - 208) = v10;
  v11 = MEMORY[0x24BD1A1F4](v3, *(_QWORD *)(v0 + 48), v7 - 216);
  v12 = sub_24A63BCB8();
  *(_QWORD *)(v7 - 232) = v11;
  *(_QWORD *)(v7 - 224) = v12;
  v13 = *(_QWORD *)(v0 + 72);
  v14 = MEMORY[0x24BD1A1F4](v3, v13, v7 - 232);
  v15 = *(_QWORD *)(v0 + 96);
  sub_24A77B170();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 8))(v8, v13);
  v16 = sub_24A63CFF0((unint64_t *)&qword_257947658, &qword_257947660, MEMORY[0x24BDF0710]);
  *(_QWORD *)(v7 - 248) = v14;
  *(_QWORD *)(v7 - 240) = v16;
  v17 = *(_QWORD *)(v0 + 104);
  v18 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v17, v7 - 248);
  v19 = *(_QWORD *)(v0 + 88);
  sub_24A6B90A4(v15, v17, v19);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v21(v15, v17);
  *(_QWORD *)(v0 + 328) = 0;
  *(_BYTE *)(v0 + 336) = 1;
  *(_QWORD *)(v7 - 168) = v0 + 328;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v23 = *(_QWORD *)(v0 + 40);
  v22(v23, v5, v6);
  *(_QWORD *)(v7 - 160) = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v15, v19, v17);
  *(_QWORD *)(v7 - 152) = v15;
  *(_QWORD *)(v0 + 304) = MEMORY[0x24BDF4638];
  *(_QWORD *)(v0 + 312) = v6;
  *(_QWORD *)(v0 + 320) = v17;
  v24 = *(_QWORD *)(v0 + 8);
  *(_QWORD *)(v0 + 280) = MEMORY[0x24BDF4610];
  *(_QWORD *)(v0 + 288) = v24;
  *(_QWORD *)(v0 + 296) = v18;
  sub_24A66AB50((uint64_t *)(v7 - 168), 3uLL, v0 + 304);
  v21(v19, v17);
  v25 = *(void (**)(uint64_t, uint64_t))(v0 + 16);
  v25(v5, v6);
  v21(v15, v17);
  return ((uint64_t (*)(uint64_t, uint64_t))v25)(v23, v6);
}

void sub_24A73EBB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[9];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v30 = a8;
  v44 = a7;
  v28 = a4;
  v39 = a1;
  v36 = a9;
  v41 = a10;
  v35 = *(_QWORD *)(a5 - 8);
  v31 = a5;
  MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v45 = (char *)v27 - v16;
  v29 = v17;
  v18 = sub_24A77A5F4();
  v19 = *(_QWORD *)(v18 - 8);
  v32 = v18;
  v33 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v42 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v43 = (char *)v27 - v22;
  v23 = sub_24A77A5F4();
  v27[6] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  v24 = sub_24A77A5F4();
  v27[7] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579486F8);
  v38 = sub_24A77A5F4();
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  MEMORY[0x24BDAC7A8](v25);
  v37 = (char *)v27 - v26;
  v46 = a2;
  v47 = a3;
  v48 = v28;
  v49 = a5;
  v50 = a6;
  v51 = v44;
  v52 = v30;
  v53 = v41;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A73EDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(_QWORD, uint64_t);

  *(_QWORD *)(v1 + 72) = a1;
  View.metricValueFont(includesSlashes:smallCaps:)(*(_BYTE *)(*(_QWORD *)(v1 + 168) + *(int *)(a1 + 96)), 1, v7, v3);
  v10 = sub_24A63F8AC();
  *(_QWORD *)(v1 + 64) = v10;
  *(_QWORD *)(v9 - 216) = v3;
  *(_QWORD *)(v9 - 208) = v10;
  v11 = MEMORY[0x24BDED308];
  v12 = MEMORY[0x24BD1A1F4]();
  sub_24A77B140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 48) + 8))(v8, v2);
  v13 = sub_24A63CFF0(&qword_2579484B0, &qword_2579484B8, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v9 - 232) = v12;
  *(_QWORD *)(v9 - 224) = v13;
  v14 = v11;
  v15 = MEMORY[0x24BD1A1F4](v11, v5, v9 - 232);
  sub_24A77B23C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 56) + 8))(v6, v5);
  v16 = sub_24A63CFF0(&qword_2579486F0, &qword_2579486F8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v9 - 248) = v15;
  *(_QWORD *)(v9 - 240) = v16;
  v17 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BD1A1F4](v11, v17, v9 - 248);
  v18 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v1 + 144) = v4;
  sub_24A6B90A4(v4, v17, v18);
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 176) + 8);
  *(_QWORD *)(v1 + 88) = v19;
  v19(v4, v17);
  sub_24A77B668();
  sub_24A77A4B0();
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v9 - 136);
  *(_DWORD *)(v1 + 44) = *(unsigned __int8 *)(v9 - 128);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v9 - 120);
  *(_DWORD *)(v1 + 28) = *(unsigned __int8 *)(v9 - 112);
  v20 = *(_QWORD *)(v9 - 104);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)(v9 - 96);
  *(_QWORD *)(v1 + 16) = v20;
  v21 = *(_QWORD *)(v1 + 72);
  v22 = *(_QWORD *)(v1 + 192);
  v23 = *(_QWORD *)(v1 + 208);
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, *(_QWORD *)(v1 + 80), v23);
  v24 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 360) = v23;
  *(_QWORD *)(v1 + 368) = v24;
  v25 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 80) = MEMORY[0x24BD1A1F4](v14, v25, v1 + 360);
  v26 = *(_QWORD *)(v1 + 200);
  sub_24A6B90A4(v22, v25, v26);
  v27 = *(_QWORD *)(v1 + 112);
  v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  *(_QWORD *)(v1 + 208) = v28;
  v28(v22, v25);
  v29 = *(_QWORD *)(v1 + 216);
  v30 = *(_QWORD *)(v1 + 96);
  v31 = *(_QWORD *)(v1 + 184);
  sub_24A6B90A4(*(_QWORD *)(v1 + 168) + *(int *)(v21 + 92), v30, v29);
  v32 = *(_QWORD *)(v1 + 144);
  v33 = *(_QWORD *)(v1 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 176) + 16))(v32, v18, v33);
  *(_QWORD *)(v9 - 200) = 0;
  *(_BYTE *)(v9 - 192) = 1;
  *(_QWORD *)(v9 - 184) = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(v9 - 176) = *(_DWORD *)(v1 + 44);
  *(_QWORD *)(v9 - 168) = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(v9 - 160) = *(_DWORD *)(v1 + 28);
  v34 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v9 - 152) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v9 - 144) = v34;
  *(_QWORD *)(v1 + 320) = v32;
  *(_QWORD *)(v1 + 328) = v9 - 200;
  v35 = *(_QWORD *)(v1 + 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v35, v26, v25);
  *(_QWORD *)(v1 + 336) = v35;
  v36 = *(_QWORD *)(v1 + 120);
  v37 = *(_QWORD *)(v1 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v29, v30);
  *(_QWORD *)(v1 + 304) = 0;
  *(_BYTE *)(v1 + 312) = 0;
  *(_QWORD *)(v1 + 344) = v36;
  *(_QWORD *)(v1 + 352) = v1 + 304;
  *(_QWORD *)(v1 + 264) = v33;
  *(_QWORD *)(v1 + 272) = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E0F8);
  *(_QWORD *)(v1 + 280) = v25;
  v38 = MEMORY[0x24BDF4638];
  *(_QWORD *)(v1 + 288) = v30;
  *(_QWORD *)(v1 + 296) = v38;
  *(_QWORD *)(v1 + 224) = *(_QWORD *)(v1 + 56);
  v39 = MEMORY[0x24BDF4610];
  v40 = sub_24A74513C(&qword_25794E100, &qword_25794E0F8, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
  v41 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 232) = v40;
  *(_QWORD *)(v1 + 240) = v41;
  *(_QWORD *)(v1 + 248) = v31;
  *(_QWORD *)(v1 + 256) = v39;
  sub_24A66AB50((uint64_t *)(v1 + 320), 5uLL, v1 + 264);
  v42 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v42(*(_QWORD *)(v1 + 216), v30);
  v43 = *(void (**)(uint64_t, uint64_t))(v1 + 208);
  v43(*(_QWORD *)(v1 + 200), v25);
  v44 = *(void (**)(_QWORD, uint64_t))(v1 + 88);
  v44(*(_QWORD *)(v1 + 152), v33);
  v42(v36, v30);
  v43(v35, v25);
  return ((uint64_t (*)(_QWORD, uint64_t))v44)(*(_QWORD *)(v1 + 144), v33);
}

void sub_24A73F1BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (**v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (**v44)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];

  v58 = a8;
  v59 = a6;
  v60 = a7;
  v56 = a2;
  v57 = a4;
  v42 = a1;
  v55 = a9;
  v61 = a10;
  v48 = sub_24A77A5F4();
  v12 = sub_24A77A5F4();
  v50 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)&v38 - v13;
  v51 = v14;
  v47 = sub_24A77A5F4();
  v52 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v54 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v49 = (char *)&v38 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v53 = (char *)&v38 - v19;
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C10);
  v71 = sub_24A77A5F4();
  v72 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v38 = a3;
  v73 = sub_24A77A5F4();
  v39 = a5;
  v74 = sub_24A77A5F4();
  swift_getTupleTypeMetadata();
  v20 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v20);
  v21 = sub_24A77B4D0();
  v44 = *(void (***)(char *, uint64_t))(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v38 - v22;
  v24 = sub_24A77A5F4();
  v40 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v46 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v38 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (void (**)(char *, uint64_t))((char *)&v38 - v30);
  sub_24A77A900();
  v62 = v56;
  v63 = a3;
  v64 = v57;
  v65 = a5;
  v66 = v59;
  v67 = v60;
  v68 = v58;
  v69 = v61;
  v70 = v42;
  sub_24A77B4C4();
  sub_24A77B668();
  v37 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v21);
  sub_24A77B278();
  v44[1](v23, v21);
  v79[0] = v37;
  v79[1] = MEMORY[0x24BDEDBB8];
  v32 = v58;
  v33 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v24, v79);
  v44 = v31;
  v34 = (uint64_t)v31;
  v35 = v40;
  v41 = v33;
  sub_24A6B90A4((uint64_t)v28, v24, v34);
  v36 = *(void (**)(char *, uint64_t))(v35 + 8);
  v43 = v24;
  v36(v28, v24);
  v71 = v56;
  v72 = v38;
  v73 = v57;
  v74 = v39;
  v75 = v59;
  v76 = v60;
  v77 = v32;
  v78 = v61;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A73F600()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;

  View.metricDescriptionFont(multiline:)(0, v4, v2);
  FIUICurrentLanguageNeedsExtendedLineSpacing();
  v7 = sub_24A63BBE0();
  *(_QWORD *)(v6 - 200) = v2;
  *(_QWORD *)(v6 - 192) = v7;
  v8 = MEMORY[0x24BDED308];
  v9 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v0[10], v6 - 200);
  v10 = sub_24A63BCB8();
  *(_QWORD *)(v6 - 216) = v9;
  *(_QWORD *)(v6 - 208) = v10;
  v11 = v0[13];
  v12 = MEMORY[0x24BD1A1F4](v8, v11, v6 - 216);
  v13 = v0[11];
  sub_24A77B290();
  (*(void (**)(uint64_t, uint64_t))(v0[12] + 8))(v5, v11);
  v14 = MEMORY[0x24BDEC438];
  *(_QWORD *)(v6 - 232) = v12;
  *(_QWORD *)(v6 - 224) = v14;
  v15 = v0[9];
  v16 = MEMORY[0x24BD1A1F4](v8, v15, v6 - 232);
  v17 = v0[15];
  sub_24A6B90A4(v13, v15, v17);
  v18 = v0[14];
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v19(v13, v15);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  v21 = v0[8];
  v23 = v0[5];
  v22 = v0[6];
  v20(v21, v22, v23);
  *(_QWORD *)(v6 - 184) = v21;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v25 = v0[16];
  v24(v25, v17, v15);
  *(_QWORD *)(v6 - 176) = v25;
  *(_QWORD *)(v6 - 248) = v23;
  *(_QWORD *)(v6 - 240) = v15;
  v0[35] = v0[3];
  v0[36] = v16;
  sub_24A66AB50((uint64_t *)(v6 - 184), 2uLL, v6 - 248);
  v19(v17, v15);
  v3(v22, v23);
  v19(v25, v15);
  return ((uint64_t (*)(uint64_t, uint64_t))v3)(v21, v23);
}

void sub_24A73F7B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  _QWORD v78[2];
  _QWORD v79[3];
  unsigned __int8 v80;
  uint64_t v81;
  unsigned __int8 v82;
  uint64_t v83;
  uint64_t v84;

  v53 = a7;
  v54 = a8;
  v61 = a6;
  v64 = a5;
  v52 = a4;
  v49 = a3;
  v66 = a1;
  v59 = a9;
  v51 = a10;
  v11 = sub_24A77A5F4();
  v12 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  v58 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v55 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)v39 - v15;
  v50 = sub_24A77A5F4();
  v65 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v67 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v63 = (char *)v39 - v18;
  v19 = a2;
  v45 = a2;
  v20 = sub_24A77A5F4();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v39 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  v24 = sub_24A77A5F4();
  v48 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v39 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C10);
  v27 = sub_24A77A5F4();
  v62 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v68 = (uint64_t)v39 - v31;
  v32 = v19;
  v33 = v61;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v32, v61);
  v46 = sub_24A63F8AC();
  v79[0] = v33;
  v79[1] = v46;
  v34 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v20, v79);
  sub_24A77B140();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v35 = sub_24A63CFF0(&qword_2579484B0, &qword_2579484B8, MEMORY[0x24BDEFB48]);
  v78[0] = v34;
  v78[1] = v35;
  v36 = MEMORY[0x24BDED308];
  v37 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v24, v78);
  sub_24A77B308();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v24);
  v38 = sub_24A63CFF0(&qword_257946C08, &qword_257946C10, MEMORY[0x24BDF1028]);
  v77[0] = v37;
  v77[1] = v38;
  v44 = v27;
  v47 = MEMORY[0x24BD1A1F4](v36, v27, v77);
  v60 = v29;
  sub_24A6B90A4((uint64_t)v29, v27, v68);
  v48 = *(_QWORD *)(v62 + 8);
  ((void (*)(char *, uint64_t))v48)(v29, v27);
  sub_24A77B668();
  sub_24A77A4B0();
  v43 = v79[2];
  v42 = v80;
  v41 = v81;
  v40 = v82;
  v39[0] = v84;
  v39[1] = v83;
  v69 = v45;
  v70 = v49;
  v71 = v52;
  v72 = v64;
  v73 = v61;
  v74 = v53;
  v75 = v54;
  v76 = v51;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A73FBA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t);

  v6 = v0[29];
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v2, v1);
  v7 = v0[8];
  v0[45] = v1;
  v0[46] = v7;
  v8 = v3;
  v9 = v0[12];
  v0[16] = MEMORY[0x24BD1A1F4](v3, v9, v0 + 45);
  v10 = v0[25];
  sub_24A6B90A4(v6, v9, v10);
  v11 = *(void (**)(uint64_t, uint64_t))(v0[27] + 8);
  v0[23] = (uint64_t)v11;
  v11(v6, v9);
  v12 = v0[17];
  View.metricUnitFont()(v0[26], v4);
  v13 = sub_24A7451B4();
  v0[43] = v4;
  v0[44] = v13;
  v14 = v0[19];
  v0[28] = MEMORY[0x24BD1A1F4](v8, v14, v0 + 43);
  v15 = v0[18];
  sub_24A6B90A4(v12, v14, v15);
  v16 = v0[20];
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v17(v12, v14);
  v18 = v0[22];
  v19 = v0[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[24] + 16))(v18, v0[30], v19);
  *(_QWORD *)(v5 - 248) = 0;
  *(_BYTE *)(v5 - 240) = 1;
  *(_QWORD *)(v5 - 232) = v0[5];
  *(_BYTE *)(v5 - 224) = *((_DWORD *)v0 + 9);
  *(_QWORD *)(v5 - 216) = v0[3];
  *(_BYTE *)(v5 - 208) = *((_DWORD *)v0 + 5);
  v20 = *v0;
  *(_QWORD *)(v5 - 200) = v0[1];
  *(_QWORD *)(v5 - 192) = v20;
  v0[39] = v18;
  v0[40] = v5 - 248;
  v21 = v0[29];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[27] + 16))(v21, v10, v9);
  v0[41] = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v14);
  v0[42] = v12;
  v0[35] = v19;
  v0[36] = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E0F8);
  v0[37] = v9;
  v0[38] = v14;
  v0[31] = v0[9];
  v22 = sub_24A74513C(&qword_25794E100, &qword_25794E0F8, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
  v23 = v0[16];
  v0[32] = v22;
  v0[33] = v23;
  v0[34] = v0[28];
  sub_24A66AB50(v0 + 39, 4uLL, (uint64_t)(v0 + 35));
  v17(v15, v14);
  v24 = (void (*)(uint64_t, uint64_t))v0[23];
  v24(v0[25], v9);
  v25 = (void (*)(uint64_t, uint64_t))v0[10];
  v25(v0[30], v19);
  v17(v12, v14);
  v24(v0[29], v9);
  return ((uint64_t (*)(uint64_t, uint64_t))v25)(v0[22], v19);
}

void sub_24A73FE00(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[7];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v59 = a8;
  v36 = a7;
  v37 = a6;
  v50 = a5;
  v51 = a1;
  v54 = a4;
  v49 = a9;
  v58 = a10;
  v43 = sub_24A77A5F4();
  v12 = sub_24A77A5F4();
  v46 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)v35 - v13;
  v14 = sub_24A77A5F4();
  v15 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  v48 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v39 = (char *)v35 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B78);
  v45 = sub_24A77A5F4();
  v47 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v40 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v44 = (char *)v35 - v19;
  v55 = sub_24A77A5F4();
  v61 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v63 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v60 = (char *)v35 - v22;
  v35[1] = a3;
  v23 = sub_24A77A5F4();
  v24 = *(_QWORD *)(v23 - 8);
  v35[3] = v23;
  v35[4] = v24;
  MEMORY[0x24BDAC7A8](v23);
  v35[2] = (char *)v35 - v25;
  v52 = sub_24A77A5F4();
  v35[6] = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v62 = (char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v64 = (char *)v35 - v28;
  v29 = sub_24A77A5F4();
  MEMORY[0x24BDAC7A8](v29);
  v53 = sub_24A77A5F4();
  v57 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  MEMORY[0x24BDAC7A8](v30);
  v56 = (char *)v35 - v31;
  v32 = a2;
  v33 = a2;
  v34 = v37;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v33, v37);
  v65 = v32;
  v66 = a3;
  v67 = v54;
  v68 = v50;
  v69 = v34;
  v70 = v36;
  v71 = v59;
  v72 = v58;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A740190(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t);
  void (*v63)(uint64_t, uint64_t);

  v1[8] = *(int *)(a1 + 104);
  v10 = sub_24A63F8AC();
  *(_QWORD *)(v9 - 184) = v8;
  *(_QWORD *)(v9 - 176) = v10;
  v11 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v5, v9 - 184);
  sub_24A77B1DC();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v5);
  v12 = sub_24A63CFF0(&qword_257946B70, &qword_257946B78, MEMORY[0x24BDF1028]);
  v1[5] = v12;
  *(_QWORD *)(v9 - 200) = v11;
  *(_QWORD *)(v9 - 192) = v12;
  v13 = MEMORY[0x24BDED308];
  v14 = v1[27];
  v1[9] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v14, v9 - 200);
  v1[26] = v6;
  sub_24A6B90A4(v6, v14, v3);
  v15 = *(void (**)(uint64_t, uint64_t))(v1[31] + 8);
  v1[10] = (uint64_t)v15;
  v15(v6, v14);
  v16 = v1[2];
  View.metricUnitFont()(v1[1], v2);
  v17 = sub_24A77A90C();
  v18 = sub_24A7451B4();
  *(_QWORD *)(v9 - 216) = v2;
  *(_QWORD *)(v9 - 208) = v18;
  v19 = v13;
  v20 = v1[3];
  v21 = MEMORY[0x24BD1A1F4](v13, v20, v9 - 216);
  v22 = v1[36];
  MEMORY[0x24BD18748](v17, sub_24A74062C, 0, v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v1[4] + 8))(v16, v20);
  v23 = sub_24A7451F8();
  *(_QWORD *)(v9 - 232) = v21;
  *(_QWORD *)(v9 - 224) = v23;
  v24 = v19;
  v25 = v1[25];
  v1[4] = MEMORY[0x24BD1A1F4](v19, v25, v9 - 232);
  sub_24A6B90A4(v22, v25, v1[38]);
  v26 = v1[6];
  v27 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v1[7] = (uint64_t)v27;
  v27(v22, v25);
  v28 = v1[37];
  v29 = v1[32];
  View.metricUnitFont()(v1[23], v29);
  *(_QWORD *)(v9 - 248) = v29;
  *(_QWORD *)(v9 - 240) = v18;
  v30 = v1[29];
  v1[23] = MEMORY[0x24BD1A1F4](v24, v30, v9 - 248);
  sub_24A6B90A4(v28, v30, v1[34]);
  v31 = *(void (**)(uint64_t, uint64_t))(v1[35] + 8);
  v1[32] = (uint64_t)v31;
  v31(v28, v30);
  v32 = v1[11];
  v33 = v1[33];
  View.metricDescriptionFont(multiline:)(0, v1[28], v33);
  v34 = sub_24A77A90C();
  v35 = sub_24A63BBE0();
  v1[53] = v33;
  v1[54] = v35;
  v36 = MEMORY[0x24BD1A1F4](v24, v1[16], v1 + 53);
  v37 = sub_24A63BCB8();
  v1[51] = v36;
  v1[52] = v37;
  v38 = v1[14];
  v39 = MEMORY[0x24BD1A1F4](v24, v38, v1 + 51);
  v40 = v1[12];
  MEMORY[0x24BD18748](v34, sub_24A740664, 0, v38, v39);
  (*(void (**)(uint64_t, uint64_t))(v1[19] + 8))(v32, v38);
  v1[49] = v39;
  v1[50] = v23;
  v41 = v1[15];
  v42 = MEMORY[0x24BD1A1F4](v24, v41, v1 + 49);
  v43 = v1[13];
  sub_24A77B1DC();
  (*(void (**)(uint64_t, uint64_t))(v1[21] + 8))(v40, v41);
  v44 = v1[5];
  v1[47] = v42;
  v1[48] = v44;
  v45 = v1[18];
  v1[28] = MEMORY[0x24BD1A1F4](v24, v45, v1 + 47);
  v46 = v1[17];
  sub_24A6B90A4(v43, v45, v46);
  v47 = v1[20];
  v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v1[33] = (uint64_t)v48;
  v48(v43, v45);
  v49 = v1[26];
  v50 = v1[27];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[31] + 16))(v49, v1[30], v50);
  *(_QWORD *)(v9 - 168) = v49;
  v51 = v1[36];
  v52 = v1[25];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v51, v1[38], v52);
  *(_QWORD *)(v9 - 160) = v51;
  v53 = v1[34];
  v54 = v1[37];
  v55 = v1[29];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[35] + 16))(v54, v53, v55);
  *(_QWORD *)(v9 - 152) = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v43, v46, v45);
  *(_QWORD *)(v9 - 144) = v43;
  v1[43] = v50;
  v1[44] = v52;
  v1[45] = v55;
  v1[46] = v45;
  v56 = v1[4];
  v1[39] = v1[9];
  v1[40] = v56;
  v57 = v1[28];
  v1[41] = v1[23];
  v1[42] = v57;
  sub_24A66AB50((uint64_t *)(v9 - 168), 4uLL, (uint64_t)(v1 + 43));
  v58 = v46;
  v59 = (void (*)(uint64_t, uint64_t))v1[33];
  v59(v58, v45);
  v60 = v53;
  v61 = (void (*)(uint64_t, uint64_t))v1[32];
  v61(v60, v55);
  v62 = (void (*)(uint64_t, uint64_t))v1[7];
  v62(v1[38], v52);
  v63 = (void (*)(uint64_t, uint64_t))v1[10];
  v63(v1[30], v50);
  v59(v43, v45);
  v61(v1[37], v55);
  v62(v1[36], v52);
  return ((uint64_t (*)(uint64_t, uint64_t))v63)(v1[26], v50);
}

double sub_24A74062C()
{
  uint64_t v0;
  double v1;
  double v2;

  v0 = sub_24A77A90C();
  v1 = MEMORY[0x24BD17BCC](v0);
  sub_24A77A5AC();
  return v1 - v2;
}

double sub_24A740664()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;

  v0 = sub_24A77A90C();
  v1 = MEMORY[0x24BD17BCC](v0);
  if (FIUICurrentLanguageNeedsExtendedLineSpacing())
    v2 = 1.8;
  else
    v2 = 1.4;
  sub_24A77A5AC();
  return v1 - v2 * v3;
}

void sub_24A7406C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  _QWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];

  v34 = a8;
  v32 = a7;
  v31 = a5;
  v29 = a4;
  v26[1] = a1;
  v41 = a9;
  v30 = a10;
  v38 = sub_24A77A5F4();
  v39 = sub_24A77A5F4();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v35 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v37 = (char *)v26 - v15;
  v28 = sub_24A77A5F4();
  v44 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  MEMORY[0x24BDAC7A8](v16);
  v45 = (char *)v26 - v17;
  v18 = sub_24A77A5F4();
  v27 = *(_QWORD *)(v18 - 8);
  v19 = v27;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v26 - v23;
  v43 = (char *)v26 - v23;
  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, a2, a6);
  v25 = sub_24A63F8AC();
  v54[0] = a6;
  v54[1] = v25;
  v26[3] = v18;
  v33 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v18, v54);
  v42 = v21;
  sub_24A6B90A4((uint64_t)v21, v18, (uint64_t)v24);
  v36 = *(void (**)(char *, uint64_t))(v19 + 8);
  v36(v21, v18);
  v46 = a2;
  v47 = a3;
  v48 = v29;
  v49 = v31;
  v50 = a6;
  v51 = v32;
  v52 = v34;
  v53 = v30;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A740970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(_QWORD, uint64_t);

  View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v4, v2);
  *(_QWORD *)(v6 - 184) = v2;
  *(_QWORD *)(v6 - 176) = v5;
  v7 = MEMORY[0x24BDED308];
  v8 = *(_QWORD *)(v6 - 440);
  *(_QWORD *)(v6 - 416) = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v6 - 184);
  v9 = *(_QWORD *)(v6 - 304);
  *(_QWORD *)(v6 - 464) = v3;
  sub_24A6B90A4(v3, v8, v9);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 312) + 8);
  *(_QWORD *)(v6 - 408) = v10;
  v10(v3, v8);
  v11 = *(_QWORD *)(v6 - 384);
  View.metricDescriptionFont(multiline:)(1, v1, v0);
  v12 = sub_24A63BBE0();
  *(_QWORD *)(v6 - 200) = v0;
  *(_QWORD *)(v6 - 192) = v12;
  v13 = MEMORY[0x24BD1A1F4](v7, *(_QWORD *)(v6 - 360), v6 - 200);
  v14 = sub_24A63BCB8();
  *(_QWORD *)(v6 - 216) = v13;
  *(_QWORD *)(v6 - 208) = v14;
  v15 = v7;
  v16 = *(_QWORD *)(v6 - 352);
  v17 = MEMORY[0x24BD1A1F4](v15, v16, v6 - 216);
  v18 = *(_QWORD *)(v6 - 368);
  sub_24A6B90A4(v11, v16, v18);
  v19 = *(_QWORD *)(v6 - 344);
  v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v20(v11, v16);
  v21 = *(_QWORD *)(v6 - 328);
  v22 = *(_QWORD *)(v6 - 456);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 448) + 16))(v21, *(_QWORD *)(v6 - 320), v22);
  *(_QWORD *)(v6 - 168) = v21;
  v23 = *(_QWORD *)(v6 - 464);
  v24 = *(_QWORD *)(v6 - 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 312) + 16))(v23, v24, v8);
  *(_QWORD *)(v6 - 160) = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v11, v18, v16);
  *(_QWORD *)(v6 - 232) = 0;
  *(_BYTE *)(v6 - 224) = 1;
  *(_QWORD *)(v6 - 152) = v11;
  *(_QWORD *)(v6 - 144) = v6 - 232;
  *(_QWORD *)(v6 - 264) = v22;
  *(_QWORD *)(v6 - 256) = v8;
  v25 = MEMORY[0x24BDF4638];
  *(_QWORD *)(v6 - 248) = v16;
  *(_QWORD *)(v6 - 240) = v25;
  *(_QWORD *)(v6 - 296) = *(_QWORD *)(v6 - 400);
  *(_QWORD *)(v6 - 288) = *(_QWORD *)(v6 - 416);
  v26 = MEMORY[0x24BDF4610];
  *(_QWORD *)(v6 - 280) = v17;
  *(_QWORD *)(v6 - 272) = v26;
  sub_24A66AB50((uint64_t *)(v6 - 168), 4uLL, v6 - 264);
  v20(v18, v16);
  v27 = *(void (**)(uint64_t, uint64_t))(v6 - 408);
  v27(v24, v8);
  v28 = *(void (**)(_QWORD, uint64_t))(v6 - 376);
  v28(*(_QWORD *)(v6 - 320), v22);
  v20(v11, v16);
  v27(v23, v8);
  return ((uint64_t (*)(_QWORD, uint64_t))v28)(*(_QWORD *)(v6 - 328), v22);
}

uint64_t sub_24A740C20()
{
  uint64_t *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25794E120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A7810C0;
  v3 = *v0;
  v2 = v0[1];
  *(_QWORD *)(inited + 32) = *v0;
  *(_QWORD *)(inited + 40) = v2;
  v5 = v0[2];
  v4 = v0[3];
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v4;
  v7 = v0[4];
  v6 = v0[5];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v8 = sub_24A64DC44(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v10 = v8[2];
  v9 = v8[3];
  v11 = v10 + 1;
  if (v10 >= v9 >> 1)
    v8 = sub_24A64DC44((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v11;
  v12 = &v8[2 * v10];
  v12[4] = v3;
  v12[5] = v2;
  if (v4)
  {
    v13 = v8[3];
    swift_bridgeObjectRetain();
    if (v11 >= v13 >> 1)
      v8 = sub_24A64DC44((_QWORD *)(v13 > 1), v10 + 2, 1, v8);
    v8[2] = v10 + 2;
    v14 = &v8[2 * v11];
    v14[4] = v5;
    v14[5] = v4;
  }
  if (v6)
  {
    v15 = v8[2];
    v16 = v8[3];
    swift_bridgeObjectRetain();
    if (v15 >= v16 >> 1)
      v8 = sub_24A64DC44((_QWORD *)(v16 > 1), v15 + 1, 1, v8);
    v8[2] = v15 + 1;
    v17 = &v8[2 * v15];
    v17[4] = v7;
    v17[5] = v6;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579482B8);
  sub_24A63CFF0((unint64_t *)&qword_2579482C0, &qword_2579482B8, MEMORY[0x24BEE12B0]);
  v18 = sub_24A77B92C();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_24A740E08@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = v2 + *(int *)(a1 + 60);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_24A63BEC0(*(_QWORD *)v4, v6);
  sub_24A63E608(v5, v6, a2);
  return sub_24A63BEDC(v5, v6);
}

void MetricTextWithAccessory.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF00);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF08);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF10);
  sub_24A741DD0();
  sub_24A741E74();
  sub_24A741F5C();
  type metadata accessor for MetricTextiOSPlatter();
}

void sub_24A740F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v13 - 544) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 552) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 320) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF60);
  v16 = sub_24A77A5F4();
  *(_QWORD *)(v13 - 512) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 536) = (char *)&a9 - v17;
  swift_getTupleTypeMetadata2();
  v18 = sub_24A77B6A4();
  *(_QWORD *)(v13 - 520) = a1;
  v19 = MEMORY[0x24BD1A1F4](&unk_24A787998, a1);
  v20 = sub_24A63CFF0(&qword_25794DF68, &qword_25794DF60, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v13 - 592) = v19;
  *(_QWORD *)(v13 - 168) = v19;
  *(_QWORD *)(v13 - 160) = v20;
  v21 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v16, v13 - 168);
  v22 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v18);
  *(_QWORD *)(v13 - 352) = v16;
  *(_QWORD *)(v13 - 152) = v16;
  *(_QWORD *)(v13 - 144) = v18;
  *(_QWORD *)(v13 - 312) = v21;
  *(_QWORD *)(v13 - 136) = v21;
  *(_QWORD *)(v13 - 128) = v22;
  v23 = MEMORY[0x24BD1A194](0, v13 - 152, MEMORY[0x24BDF2B30], 0);
  *(_QWORD *)(v13 - 584) = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 568) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 528) = (char *)&a9 - v26;
  *(_QWORD *)(v13 - 152) = *(_QWORD *)(v13 - 328);
  *(_QWORD *)(v13 - 144) = v10;
  *(_QWORD *)(v13 - 464) = v10;
  *(_QWORD *)(v13 - 136) = v10;
  *(_QWORD *)(v13 - 128) = v9;
  *(_QWORD *)(v13 - 472) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  v27 = *(_QWORD *)(v13 - 424);
  *(_QWORD *)(v13 - 112) = v27;
  *(_QWORD *)(v13 - 104) = v27;
  *(_QWORD *)(v13 - 448) = v12;
  *(_QWORD *)(v13 - 96) = v12;
  type metadata accessor for MetricTextWatchOS();
}

uint64_t sub_24A741144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v60[32];

  v11 = sub_24A77A5F4();
  v12 = MEMORY[0x24BD1A1F4](&unk_24A787948, a1);
  *(_QWORD *)(v9 - 600) = v12;
  *(_QWORD *)(v9 - 184) = v12;
  *(_QWORD *)(v9 - 176) = v8;
  v13 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v11, v9 - 184);
  *(_QWORD *)(v9 - 152) = v11;
  *(_QWORD *)(v9 - 144) = v7;
  *(_QWORD *)(v9 - 320) = v7;
  *(_QWORD *)(v9 - 376) = v13;
  *(_QWORD *)(v9 - 136) = v13;
  *(_QWORD *)(v9 - 128) = v1;
  *(_QWORD *)(v9 - 360) = v1;
  v14 = MEMORY[0x24BD1A194](255, v9 - 152, v2, 0);
  *(_QWORD *)(v9 - 432) = v5;
  v15 = sub_24A77AB34();
  *(_QWORD *)(v9 - 440) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = &v60[-v16];
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_25794DF70);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v9 - 488) = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v9 - 480) = &v60[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = swift_checkMetadataState();
  *(_QWORD *)(v9 - 632) = v21;
  *(_QWORD *)(v9 - 640) = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v60[-v22];
  v24 = swift_checkMetadataState();
  *(_QWORD *)(v9 - 616) = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v9 - 624) = &v60[-v25];
  *(_QWORD *)(v9 - 456) = v14;
  *(_QWORD *)(v9 - 608) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v26);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v9 - 504) = &v60[-v28];
  *(_QWORD *)(v9 - 368) = v15;
  v29 = *(_QWORD *)(v9 - 416);
  v30 = sub_24A77AB34();
  *(_QWORD *)(v9 - 384) = v30;
  *(_QWORD *)(v9 - 392) = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v9 - 400) = &v60[-v31];
  v32 = *(_QWORD *)(v9 - 408);
  v33 = sub_24A740E08(v29, (_BYTE *)(v9 - 185));
  v34 = 1 << *(_BYTE *)(v9 - 185);
  *(_QWORD *)(v9 - 336) = v24;
  if ((v34 & 0x7C) != 0)
  {
    MEMORY[0x24BDAC7A8](v33);
    *(_QWORD *)(v9 - 496) = v17;
    MEMORY[0x24BDAC7A8](v35);
    v37 = MEMORY[0x24BDAC7A8](v36);
    (*(void (**)(_QWORD, uint64_t, uint64_t, double))(*(_QWORD *)(v9 - 488) + 16))(*(_QWORD *)(v9 - 480), v32 + *(int *)(v29 + 56), v4, v37);
    sub_24A73BD68();
  }
  if ((v34 & 0x181) != 0)
  {
    *(_QWORD *)(v9 - 512) = v60;
    *(_DWORD *)(v9 - 520) = *(unsigned __int8 *)(v32 + 50);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 488) + 16))(*(_QWORD *)(v9 - 480), v32 + *(int *)(v29 + 56), v4);
    *(_QWORD *)(v9 - 496) = v17;
    v38 = *(_QWORD *)(v9 - 448);
    sub_24A7420F4(v32, v4, v38, (uint64_t)v23);
    v39 = *(_QWORD *)(v9 - 464);
    *(_QWORD *)(v9 - 152) = *(_QWORD *)(v9 - 328);
    *(_QWORD *)(v9 - 144) = v39;
    *(_QWORD *)(v9 - 136) = v39;
    *(_QWORD *)(v9 - 128) = v4;
    *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 472);
    *(_QWORD *)(v9 - 112) = v6;
    *(_QWORD *)(v9 - 104) = v6;
    *(_QWORD *)(v9 - 96) = v38;
    type metadata accessor for MetricTextWatchOS();
  }
  sub_24A77A9C0();
  v40 = sub_24A77AFC0();
  v42 = v41;
  *(_QWORD *)(v9 - 328) = v43;
  *(_QWORD *)(v9 - 152) = v40;
  *(_QWORD *)(v9 - 144) = v41;
  v45 = v44 & 1;
  *(_BYTE *)(v9 - 136) = v44 & 1;
  *(_QWORD *)(v9 - 128) = v43;
  v46 = *(_QWORD *)(v9 - 320);
  *(_QWORD *)(v9 - 224) = v24;
  *(_QWORD *)(v9 - 216) = v46;
  v47 = *(_QWORD *)(v9 - 376);
  v48 = *(_QWORD *)(v9 - 360);
  *(_QWORD *)(v9 - 208) = v47;
  *(_QWORD *)(v9 - 200) = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v50 = *(_QWORD *)(v9 - 352);
  *(_QWORD *)(v9 - 224) = v50;
  *(_QWORD *)(v9 - 216) = v46;
  *(_QWORD *)(v9 - 208) = *(_QWORD *)(v9 - 312);
  *(_QWORD *)(v9 - 200) = v48;
  v51 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v9 - 240) = OpaqueTypeConformance2;
  *(_QWORD *)(v9 - 232) = v51;
  v52 = *(_QWORD *)(v9 - 368);
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v52, v9 - 240);
  v53 = *(_QWORD *)(v9 - 400);
  sub_24A73A650(v9 - 152, v52, MEMORY[0x24BDF1FA8]);
  sub_24A64596C(v40, v42, v45);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 - 152) = *(_QWORD *)(v9 - 336);
  *(_QWORD *)(v9 - 144) = v46;
  *(_QWORD *)(v9 - 136) = v47;
  *(_QWORD *)(v9 - 128) = v48;
  v54 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v9 - 152) = v50;
  *(_QWORD *)(v9 - 144) = v46;
  *(_QWORD *)(v9 - 136) = *(_QWORD *)(v9 - 312);
  *(_QWORD *)(v9 - 128) = v48;
  v55 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v9 - 256) = v54;
  *(_QWORD *)(v9 - 248) = v55;
  v56 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v9 - 272) = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v52, v9 - 256);
  *(_QWORD *)(v9 - 264) = MEMORY[0x24BDF1F80];
  v57 = v56;
  v58 = *(_QWORD *)(v9 - 384);
  MEMORY[0x24BD1A1F4](v57, v58, v9 - 272);
  sub_24A6B8268(v53, v58, *(_QWORD *)(v9 - 344));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 392) + 8))(v53, v58);
}

unint64_t sub_24A741DD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794DF18;
  if (!qword_25794DF18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF00);
    v2[0] = sub_24A74513C(&qword_25794DF20, &qword_25794DF28, MEMORY[0x24BDF1F80], MEMORY[0x24BDECC38]);
    v2[1] = sub_24A63CFF0(&qword_25794DF30, &qword_25794DF38, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794DF18);
  }
  return result;
}

unint64_t sub_24A741E74()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25794DF40;
  if (!qword_25794DF40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF08);
    v2 = sub_24A741ED8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794DF40);
  }
  return result;
}

unint64_t sub_24A741ED8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25794DF48;
  if (!qword_25794DF48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF50);
    v2 = sub_24A63CFF0(&qword_257946B70, &qword_257946B78, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25794DF48);
  }
  return result;
}

unint64_t sub_24A741F5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25794DF58;
  if (!qword_25794DF58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF10);
    v2 = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25794DF58);
  }
  return result;
}

void type metadata accessor for MetricTextiOSPlatter()
{
  JUMPOUT(0x24BD1A14CLL);
}

void type metadata accessor for MetricTextWatchOS()
{
  JUMPOUT(0x24BD1A14CLL);
}

uint64_t sub_24A741FD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    sub_24A645928();
    sub_24A77BE48();
    result = sub_24A77AFD8();
    v3 = v7 & 1;
  }
  else
  {
    result = 0;
    v5 = 0;
    v6 = 0;
  }
  *a2 = result;
  a2[1] = v5;
  a2[2] = v3;
  a2[3] = v6;
  return result;
}

uint64_t sub_24A74205C()
{
  return sub_24A77A774();
}

uint64_t sub_24A74207C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_25794DF70);
  MEMORY[0x24BDAC7A8](v2);
  sub_24A745358(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_24A77A780();
}

uint64_t sub_24A7420F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int v15;
  double v16;
  uint64_t result;

  sub_24A645928();
  swift_bridgeObjectRetain();
  v9 = sub_24A77AFD8();
  v11 = v10;
  v13 = v12;
  v14 = v8;
  v15 = *(unsigned __int8 *)(a1 + 48);
  v16 = 1.0;
  if (v15 == 1)
    v16 = *(double *)(a1 + *(int *)(type metadata accessor for MetricTextWithAccessory(0, a2, a3, v8) + 64));
  result = sub_24A77B68C();
  *(_QWORD *)a4 = v9;
  *(_QWORD *)(a4 + 8) = v11;
  *(_BYTE *)(a4 + 16) = v13 & 1;
  *(_QWORD *)(a4 + 24) = v14;
  *(double *)(a4 + 32) = v16;
  *(_QWORD *)(a4 + 40) = result;
  *(_BYTE *)(a4 + 48) = v15;
  return result;
}

uint64_t sub_24A7421D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24A7420F4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24A7421EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = sub_24A77AFA8();
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 24);
  if (v13)
  {
    v33 = v10;
    v34 = v9;
    v35 = *(_QWORD *)(a1 + 16);
    v36 = v13;
    sub_24A645928();
    v35 = sub_24A77BE54();
    v36 = v14;
    v15 = sub_24A77AFD8();
    v17 = v16;
    v19 = v18;
    v21 = type metadata accessor for MetricTextWithAccessory(0, a2, a3, v20);
    sub_24A740E08(v21, &v35);
    if (v35 == 4)
      sub_24A77AF90();
    else
      sub_24A77AF9C();
    v28 = v19 & 1;
    v22 = sub_24A77AFB4();
    v23 = v29;
    v25 = v30;
    v24 = v31 & 1;
    sub_24A64596C(v15, v17, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
    if (qword_257946A40 != -1)
      swift_once();
    v27 = qword_2579599D0;
    result = swift_getKeyPath();
  }
  else
  {
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    result = 0;
    v27 = 0;
  }
  *a4 = v22;
  a4[1] = v23;
  a4[2] = v24;
  a4[3] = v25;
  a4[4] = result;
  a4[5] = v27;
  return result;
}

uint64_t sub_24A7423C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_24A7421EC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24A7423CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a1 + 40);
  if (v3)
  {
    sub_24A645928();
    sub_24A77BE54();
    result = sub_24A77AFD8();
    v3 = v7 & 1;
  }
  else
  {
    result = 0;
    v5 = 0;
    v6 = 0;
  }
  *a2 = result;
  a2[1] = v5;
  a2[2] = v3;
  a2[3] = v6;
  return result;
}

uint64_t sub_24A742458@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_24A7423CC(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_24A742474()
{
  return sub_24A77A774();
}

uint64_t sub_24A742498(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_25794DF70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A7424D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  _QWORD v27[4];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33[2];

  v27[1] = a5;
  v27[0] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - v11;
  v15 = type metadata accessor for MetricTextWithAccessory(0, v13, v14, v14);
  v29 = sub_24A740C20();
  v30 = v16;
  sub_24A645928();
  v17 = sub_24A77AFD8();
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  sub_24A6B90A4(a2 + *(int *)(v15 + 56), a3, (uint64_t)v12);
  v29 = v17;
  v30 = v19;
  v31 = v23;
  v32 = v21;
  v33[0] = (uint64_t)&v29;
  v24 = v27[0];
  (*(void (**)(char *, char *, uint64_t))(v27[0] + 16))(v9, v12, a3);
  v33[1] = (uint64_t)v9;
  sub_24A6436C4(v17, v19, v23);
  swift_bridgeObjectRetain();
  v28[0] = MEMORY[0x24BDF1FA8];
  v28[1] = a3;
  v27[2] = MEMORY[0x24BDF1F80];
  v27[3] = a4;
  sub_24A66AB50(v33, 2uLL, (uint64_t)v28);
  v25 = *(void (**)(char *, uint64_t))(v24 + 8);
  v25(v12, a3);
  sub_24A64596C(v17, v19, v23);
  swift_bridgeObjectRelease();
  v25(v9, a3);
  sub_24A64596C(v29, v30, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A742694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_24A7424D8(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t MetricText.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t KeyPath;
  uint64_t result;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  v9 = *((_BYTE *)v1 + 48);
  v10 = *((_BYTE *)v1 + 49);
  KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease_n();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 49) = v10;
  *(_BYTE *)(a1 + 50) = 0;
  *(_QWORD *)(a1 + 56) = KeyPath;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0x3FD6666666666666;
  return result;
}

uint64_t sub_24A742764()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A742798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A7427AC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24A7427B4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24A74285C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + ((v6 + 51) & ~v6) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
    *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
    *(_BYTE *)(v14 + 18) = *(_BYTE *)(v15 + 18);
    v16 = (v14 + v6 + 19) & ~v6;
    v17 = (v15 + v6 + 19) & ~v6;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v16, v17, v4);
    v19 = v16 + v7;
    v20 = v17 + v7;
    v21 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    v24 = *(_BYTE *)(v22 + 8);
    sub_24A63BEC0(*(_QWORD *)v22, v24);
    *(_QWORD *)v21 = v23;
    *(_BYTE *)(v21 + 8) = v24;
    *(_QWORD *)((v19 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v20 + 23) & 0xFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_24A7429E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 19) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24A63BEDC(*(_QWORD *)v6, *(_BYTE *)(v6 + 8));
}

_QWORD *sub_24A742A74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v7 + 17) = *(_BYTE *)(v8 + 17);
  *(_BYTE *)(v7 + 18) = *(_BYTE *)(v8 + 18);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 19 + v7) & ~v11;
  v13 = (v11 + 19 + v8) & ~v11;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v12, v13, v9);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = v12 + v15;
  v17 = v13 + v15;
  v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  v21 = *(_BYTE *)(v19 + 8);
  sub_24A63BEC0(*(_QWORD *)v19, v21);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v21;
  *(_QWORD *)((v16 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v17 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_24A742BA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_BYTE *)(v8 + 18) = *(_BYTE *)(v9 + 18);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 19 + v8) & ~v11;
  v13 = (v11 + 19 + v9) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = v12 + v14;
  v16 = v13 + v14;
  v17 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  LOBYTE(v13) = *(_BYTE *)(v18 + 8);
  sub_24A63BEC0(*(_QWORD *)v18, v13);
  v20 = *(_QWORD *)v17;
  v21 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v13;
  sub_24A63BEDC(v20, v21);
  *(_QWORD *)((v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v16 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_24A742D00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = ((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v6 = *(_OWORD *)v7;
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
  *(_BYTE *)(v6 + 17) = *(_BYTE *)(v7 + 17);
  *(_BYTE *)(v6 + 18) = *(_BYTE *)(v7 + 18);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 19 + v6) & ~v9;
  v11 = (v9 + 19 + v7) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = v10 + v12;
  v14 = v11 + v12;
  v15 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v17;
  *(_QWORD *)((v13 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_24A742DE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(v9 + 17) = *(_BYTE *)(v10 + 17);
  *(_BYTE *)(v9 + 18) = *(_BYTE *)(v10 + 18);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 19 + v9) & ~v12;
  v14 = (v12 + 19 + v10) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = *(_BYTE *)(v19 + 8);
  v21 = *(_QWORD *)v18;
  v22 = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v19;
  sub_24A63BEDC(v21, v22);
  *(_QWORD *)((v16 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v17 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A742F14(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 19) & ~v7);
    }
    else
    {
      v12 = *(_QWORD *)(a1 + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 51) & ~v7) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24A742FA0 + 4 * byte_24A78771A[v10]))();
  }
}

void sub_24A743030(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 51) & ~(_DWORD)v7) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 51) & ~(_DWORD)v7) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v7 + 51) & ~v7) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_24A743138()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24A7431B4);
}

void sub_24A743140(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24A743148);
  JUMPOUT(0x24A7431B4);
}

void sub_24A74315C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24A7431B4);
}

void sub_24A743164()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24A7431B4);
}

void sub_24A74316C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if (a3 < 0)
      JUMPOUT(0x24A743178);
    if (a2 < 0)
      JUMPOUT(0x24A7431ACLL);
    *(_QWORD *)(v3 + 8) = (a2 - 1);
  }
  JUMPOUT(0x24A7431B4);
}

uint64_t destroy for MetricText()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricText(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MetricText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricText()
{
  return &type metadata for MetricText;
}

void sub_24A74341C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF00);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF10);
  sub_24A741DD0();
  sub_24A741F5C();
  type metadata accessor for MetricTextWatchOS();
}

void sub_24A743498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF60);
  v30 = sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v31 = sub_24A77B6A4();
  v32 = MEMORY[0x24BD1A1F4](&unk_24A787948, a1);
  v33 = sub_24A63CFF0(&qword_25794DF68, &qword_25794DF60, MEMORY[0x24BDF1028]);
  a20 = v32;
  a21 = v33;
  v34 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v30, &a20);
  v35 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v31);
  a22 = v30;
  a23 = v31;
  a24 = v34;
  a25 = v35;
  MEMORY[0x24BD1A194](255, &a22, MEMORY[0x24BDF2B30], 0);
  v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794DF08);
  v37 = sub_24A741E74();
  a22 = a12;
  a23 = v36;
  a26 = a11;
  a27 = v37;
  a29 = a13;
  type metadata accessor for MetricTextiOSPlatter();
}

uint64_t sub_24A7435B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = sub_24A77A5F4();
  v16 = MEMORY[0x24BD1A1F4](&unk_24A787998, a1);
  v17 = v3;
  v8 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v7, &v16);
  v18 = v7;
  v19 = v2;
  v20 = v8;
  v21 = v4;
  MEMORY[0x24BD1A194](255, &v18, MEMORY[0x24BDF2B30], 0);
  v9 = sub_24A77AB34();
  v10 = sub_24A77AB34();
  v18 = v1;
  v19 = v2;
  v20 = v5;
  v21 = v4;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v18 = v7;
  v19 = v2;
  v20 = v8;
  v21 = v4;
  v15[0] = OpaqueTypeConformance2;
  v15[1] = swift_getOpaqueTypeConformance2();
  v12 = MEMORY[0x24BDEF3E0];
  v14[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v9, v15);
  v14[1] = MEMORY[0x24BDF1F80];
  return MEMORY[0x24BD1A1F4](v12, v10, v14);
}

uint64_t sub_24A7436D0()
{
  return sub_24A63CFF0((unint64_t *)&qword_257949D10, &qword_257949D18, (uint64_t)&protocol conformance descriptor for MetricTextWithAccessory<A>);
}

uint64_t sub_24A7436FC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24A743704()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_24A7437D8(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v5 + 64) + v9;
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = *(_DWORD *)(v4 + 80);
  v16 = (*(_BYTE *)(v5 + 80) | v15 | *(_BYTE *)(v8 + 80) | v12);
  if (v16 <= 7
    && v14 + ((v13 + ((v10 + (v7 & ~v6)) & ~v9)) & ~(unint64_t)v12) + 1 <= 0x18
    && ((*(_DWORD *)(v5 + 80) | v15 | *(_DWORD *)(v8 + 80) | v12) & 0x100000) == 0)
  {
    v21 = ~v6;
    v30 = ~v9;
    v31 = a3[4];
    v32 = ~(unint64_t)v12;
    v33 = a3[5];
    v29 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    v34 = a1;
    v23 = ((unint64_t)a1 + v7) & v21;
    v24 = ((unint64_t)a2 + v7) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v23, v24, v29);
    v20 = v34;
    v25 = (v24 + v10) & v30;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v23 + v10) & v30, v25, v31);
    v26 = (((v23 + v10) & v30) + v13) & v32;
    v27 = (v25 + v13) & v32;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(v26, v27, v33);
    *(_BYTE *)(v26 + v14) = *(_BYTE *)(v27 + v14);
  }
  else
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  return v20;
}

uint64_t sub_24A743978(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[5] - 8) + 8))((v10
                                                                                       + *(_QWORD *)(v9 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[5] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[5] - 8) + 80));
}

uint64_t sub_24A743A20(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  *(_BYTE *)(v22 + *(_QWORD *)(v19 + 64)) = *(_BYTE *)(v23 + *(_QWORD *)(v19 + 64));
  return a1;
}

uint64_t sub_24A743B10(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  *(_BYTE *)(v22 + *(_QWORD *)(v19 + 64)) = *(_BYTE *)(v23 + *(_QWORD *)(v19 + 64));
  return a1;
}

uint64_t sub_24A743C00(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  *(_BYTE *)(v22 + *(_QWORD *)(v19 + 64)) = *(_BYTE *)(v23 + *(_QWORD *)(v19 + 64));
  return a1;
}

uint64_t sub_24A743CF0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  *(_BYTE *)(v22 + *(_QWORD *)(v19 + 64)) = *(_BYTE *)(v23 + *(_QWORD *)(v19 + 64));
  return a1;
}

uint64_t sub_24A743DE0(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v34;
  unsigned int v35;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v10 = a3[4];
  v9 = a3[5];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12 > v8)
    v8 = *(_DWORD *)(v11 + 84);
  v13 = *(_QWORD *)(v9 - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 > v8)
    v8 = *(_DWORD *)(v13 + 84);
  if (v8 <= 0xFE)
    v8 = 254;
  if (a2)
  {
    v15 = *(unsigned __int8 *)(v6 + 80);
    v16 = *(_QWORD *)(v4 + 64) + v15;
    v17 = *(_QWORD *)(v6 + 64);
    v18 = *(unsigned __int8 *)(v11 + 80);
    v19 = *(_QWORD *)(v11 + 64);
    v20 = *(unsigned __int8 *)(v13 + 80);
    v21 = *(_QWORD *)(v13 + 64);
    v22 = a2 - v8;
    if (a2 > v8)
    {
      v23 = v21 + ((v19 + v20 + ((v17 + v18 + (v16 & ~v15)) & ~v18)) & ~v20) + 1;
      v24 = 8 * v23;
      if (v23 > 3)
        goto LABEL_13;
      v26 = ((v22 + ~(-1 << v24)) >> v24) + 1;
      if (HIWORD(v26))
      {
        v25 = *(_DWORD *)(a1 + v23);
        if (v25)
          goto LABEL_20;
      }
      else
      {
        if (v26 <= 0xFF)
        {
          if (v26 < 2)
            goto LABEL_29;
LABEL_13:
          v25 = *(unsigned __int8 *)(a1 + v23);
          if (!*(_BYTE *)(a1 + v23))
            goto LABEL_29;
LABEL_20:
          v27 = (v25 - 1) << v24;
          if (v23 > 3)
            v27 = 0;
          if ((_DWORD)v21
             + (((_DWORD)v19
               + (_DWORD)v20
               + (((_DWORD)v17 + (_DWORD)v18 + (v16 & ~(_DWORD)v15)) & ~(_DWORD)v18)) & ~(_DWORD)v20) != -1)
          {
            if (v23 <= 3)
              v28 = v21 + ((v19 + v20 + ((v17 + v18 + (v16 & ~(_DWORD)v15)) & ~(_DWORD)v18)) & ~(_DWORD)v20) + 1;
            else
              v28 = 4;
            __asm { BR              X11 }
          }
          v34 = v8 + v27;
          return (v34 + 1);
        }
        v25 = *(unsigned __int16 *)(a1 + v23);
        if (*(_WORD *)(a1 + v23))
          goto LABEL_20;
      }
    }
LABEL_29:
    if (v5 == v8)
    {
      v29 = *(uint64_t (**)(void))(v4 + 48);
      return v29();
    }
    v30 = (v16 + a1) & ~v15;
    if (v7 == v8)
    {
      v29 = *(uint64_t (**)(void))(v6 + 48);
      return v29();
    }
    v31 = (v30 + v17 + v18) & ~v18;
    if (v12 == v8)
    {
      v29 = *(uint64_t (**)(void))(v11 + 48);
      return v29();
    }
    v32 = (v31 + v19 + v20) & ~v20;
    if (v14 == v8)
    {
      v29 = *(uint64_t (**)(void))(v13 + 48);
      return v29();
    }
    v35 = *(unsigned __int8 *)(v32 + v21);
    if (v35 < 2)
      return 0;
    v34 = (v35 + 2147483646) & 0x7FFFFFFF;
    return (v34 + 1);
  }
  return 0;
}

void sub_24A74402C(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v9 = a4[4];
  v8 = a4[5];
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v12 + 84) > v11)
    v11 = *(_DWORD *)(v12 + 84);
  if (v11 <= 0xFE)
    v11 = 254;
  v13 = *(_QWORD *)(v12 + 64)
      + ((*(_QWORD *)(v10 + 64)
        + *(unsigned __int8 *)(v12 + 80)
        + ((*(_QWORD *)(v6 + 64)
          + *(unsigned __int8 *)(v10 + 80)
          + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + 1;
  if (a3 > v11)
  {
    if (v13 <= 3)
    {
      v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
      if (HIWORD(v16))
      {
        v14 = 4u;
      }
      else
      {
        v14 = v16 > 1;
        if (v16 >= 0x100)
          v14 = 2;
      }
    }
    else
    {
      v14 = 1u;
    }
  }
  else
  {
    v14 = 0;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if (*(_DWORD *)(v12 + 64)
         + ((*(_DWORD *)(v10 + 64)
           + *(unsigned __int8 *)(v12 + 80)
           + ((*(_DWORD *)(v6 + 64)
             + *(unsigned __int8 *)(v10 + 80)
             + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & ~*(unsigned __int8 *)(v12 + 80)) != -1)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X28 }
}

uint64_t sub_24A744300()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24A744308()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_24A7443F8(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v5 + 64) + v9;
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = v6 | *(_DWORD *)(v4 + 80) & 0xF8 | v9 | v12;
  if (v15 > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || ((((((((v13 + ((v10 + (v7 & ~v6)) & ~v9)) & ~v12) + v14) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    v24 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    v19 = ~v6;
    v36 = a3[4];
    v37 = ~v9;
    v38 = ~v12;
    v39 = a3[5];
    v35 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    v40 = a1;
    v21 = ((unint64_t)a1 + v7) & v19;
    v22 = ((unint64_t)a2 + v7) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v21, v22, v35);
    v23 = v21 + v10;
    v24 = v40;
    v25 = v23 & v37;
    v26 = (v22 + v10) & v37;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v23 & v37, v26, v36);
    v27 = (v25 + v13) & v38;
    v28 = (v26 + v13) & v38;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(v27, v28, v39);
    *(_BYTE *)(v27 + v14) = *(_BYTE *)(v28 + v14);
    v29 = (v27 + v14) & 0xFFFFFFFFFFFFFFF8;
    v30 = (v28 + v14) & 0xFFFFFFFFFFFFFFF8;
    v31 = *(_QWORD *)(v30 + 8);
    LOBYTE(v27) = *(_BYTE *)(v30 + 16);
    sub_24A63BEC0(v31, v27);
    *(_QWORD *)(v29 + 8) = v31;
    *(_BYTE *)(v29 + 16) = v27;
    *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
    v32 = (_QWORD *)((v29 + 39) & 0xFFFFFFFFFFFFF8);
    v33 = (_QWORD *)((v30 + 39) & 0xFFFFFFFFFFFFF8);
    *v32 = *v33;
    *(_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFF8);
  }
  return v24;
}

uint64_t sub_24A744618(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  return sub_24A63BEDC(*(_QWORD *)(((v13 + *(_QWORD *)(v12 + 64)) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v13 + *(_QWORD *)(v12 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_24A7446DC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = v22 + v24;
  v26 = v23 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = v25 & 0xFFFFFFFFFFFFFFF8;
  v28 = v26 & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF8) + 8);
  LOBYTE(v23) = *(_BYTE *)((v26 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24A63BEC0(v29, v23);
  *(_QWORD *)(v27 + 8) = v29;
  *(_BYTE *)(v27 + 16) = v23;
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  v30 = (_QWORD *)((v27 + 39) & 0xFFFFFFFFFFFFF8);
  v31 = (_QWORD *)((v28 + 39) & 0xFFFFFFFFFFFFF8);
  *v30 = *v31;
  *(_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A744828(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  _QWORD *v33;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = v22 + v24;
  v26 = v23 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = v25 & 0xFFFFFFFFFFFFFFF8;
  v28 = v26 & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF8) + 8);
  LOBYTE(v23) = *(_BYTE *)((v26 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24A63BEC0(v29, v23);
  v30 = *(_QWORD *)(v27 + 8);
  v31 = *(_BYTE *)(v27 + 16);
  *(_QWORD *)(v27 + 8) = v29;
  *(_BYTE *)(v27 + 16) = v23;
  sub_24A63BEDC(v30, v31);
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  v32 = (_QWORD *)((v27 + 39) & 0xFFFFFFFFFFFFF8);
  v33 = (_QWORD *)((v28 + 39) & 0xFFFFFFFFFFFFF8);
  *v32 = *v33;
  *(_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A744980(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = v22 + v24;
  v26 = v23 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v25 &= 0xFFFFFFFFFFFFFFF8;
  v26 &= 0xFFFFFFFFFFFFFFF8;
  v27 = *(_BYTE *)(v26 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_BYTE *)(v25 + 16) = v27;
  *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
  v28 = (_QWORD *)((v25 + 39) & 0xFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((v26 + 39) & 0xFFFFFFFFFFFFF8);
  *v28 = *v29;
  *(_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A744AC0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = v22 + v24;
  v26 = v23 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = v25 & 0xFFFFFFFFFFFFFFF8;
  v28 = v26 & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v25) = *(_BYTE *)((v26 & 0xFFFFFFFFFFFFFFF8) + 16);
  v29 = *(_QWORD *)(v27 + 8);
  v30 = *(_BYTE *)(v27 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_BYTE *)(v27 + 16) = v25;
  sub_24A63BEDC(v29, v30);
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  v31 = (_QWORD *)((v27 + 39) & 0xFFFFFFFFFFFFF8);
  v32 = (_QWORD *)((v28 + 39) & 0xFFFFFFFFFFFFF8);
  *v31 = *v32;
  *(_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24A744C0C(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  unsigned int v29;

  v5 = a3[2];
  v4 = a3[3];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  v12 = a3[4];
  v11 = a3[5];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 > v10)
    v10 = *(_DWORD *)(v13 + 84);
  v15 = *(_QWORD *)(v11 - 8);
  v16 = *(unsigned int *)(v15 + 84);
  if (v16 > v10)
    v10 = *(_DWORD *)(v15 + 84);
  if (v10 <= 0xFE)
    v10 = 254;
  if (!a2)
    return 0;
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = *(_QWORD *)(v6 + 64) + v17;
  v19 = *(_QWORD *)(v8 + 64);
  v20 = *(unsigned __int8 *)(v13 + 80);
  v21 = *(_QWORD *)(v13 + 64);
  v22 = *(unsigned __int8 *)(v15 + 80);
  v23 = *(_QWORD *)(v15 + 64);
  if (v10 < a2)
  {
    if (((((((((((v21 + v22 + ((v19 + v20 + (v18 & ~v17)) & ~v20)) & ~v22) + v23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v24 = 2;
    else
      v24 = a2 - v10 + 1;
    if (v24 >= 0x10000)
      v25 = 4;
    else
      v25 = 2;
    if (v24 < 0x100)
      v25 = 1;
    if (v24 >= 2)
      v26 = v25;
    else
      v26 = 0;
    __asm { BR              X26 }
  }
  if (v7 == v10)
  {
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v16 = *(unsigned int *)(v6 + 84);
    v11 = v5;
    return v27(a1, v16, v11);
  }
  a1 = (v18 + a1) & ~v17;
  if (v9 == v10)
  {
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v16 = *(unsigned int *)(v8 + 84);
    v11 = v4;
    return v27(a1, v16, v11);
  }
  a1 = (a1 + v19 + v20) & ~v20;
  if ((_DWORD)v14 == v10)
  {
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v16 = v14;
    v11 = v12;
    return v27(a1, v16, v11);
  }
  a1 = (a1 + v21 + v22) & ~v22;
  if ((_DWORD)v16 == v10)
  {
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    return v27(a1, v16, v11);
  }
  v29 = *(unsigned __int8 *)(a1 + v23);
  if (v29 >= 2)
    return ((v29 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

void sub_24A744E34(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v9 = a4[4];
  v8 = a4[5];
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v12 + 84) > v11)
    v11 = *(_DWORD *)(v12 + 84);
  if (v11 <= 0xFE)
    v11 = 254;
  if (v11 >= a3)
  {
    v14 = 0;
    if (a2 <= v11)
      goto LABEL_23;
  }
  else
  {
    if (((((((((*(_DWORD *)(v10 + 64)
               + *(unsigned __int8 *)(v12 + 80)
               + ((*(_DWORD *)(v6 + 64)
                 + *(unsigned __int8 *)(v10 + 80)
                 + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & ~*(unsigned __int8 *)(v12 + 80))
             + *(_DWORD *)(v12 + 64)) & 0xFFFFFFF8)
           + 39) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v13 = a3 - v11 + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 < 2)
      v14 = 0;
    if (a2 <= v11)
LABEL_23:
      __asm { BR              X28 }
  }
  if (((((((((*(_DWORD *)(v10 + 64)
             + *(unsigned __int8 *)(v12 + 80)
             + ((*(_DWORD *)(v6 + 64)
               + *(unsigned __int8 *)(v10 + 80)
               + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & ~*(unsigned __int8 *)(v12 + 80))
           + *(_DWORD *)(v12 + 64)) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v15 = ~v11 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v10 + 64)+ *(unsigned __int8 *)(v12 + 80)+ ((*(_QWORD *)(v6 + 64)+ *(unsigned __int8 *)(v10 + 80)+ ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 64)) & 0xFFFFFFFFFFFFFFF8)+ 39) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_24A744FB8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24A745084);
}

void sub_24A744FC0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24A744FC8);
  JUMPOUT(0x24A745084);
}

void sub_24A745004()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24A745084);
}

void sub_24A74500C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24A745084);
}

void sub_24A745014(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v3 != v4 && v2 != v4)
      JUMPOUT(0x24A745020);
    JUMPOUT(0x24A74505CLL);
  }
  JUMPOUT(0x24A745084);
}

uint64_t sub_24A7450A4()
{
  return sub_24A7450BC();
}

uint64_t sub_24A7450B0()
{
  return sub_24A7450BC();
}

uint64_t sub_24A7450BC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24A7450F4()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A7406C0);
}

void sub_24A745100()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73FE00);
}

void sub_24A74510C()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73F1BC);
}

void sub_24A745118()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73E490);
}

void sub_24A745124()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73DA54);
}

void sub_24A745130()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73DF54);
}

uint64_t sub_24A74513C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_24A74519C()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73EBB8);
}

void sub_24A7451A8()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73F7B0);
}

unint64_t sub_24A7451B4()
{
  unint64_t result;

  result = qword_25794E108;
  if (!qword_25794E108)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A788BDC, &type metadata for MetricUnitFont);
    atomic_store(result, (unint64_t *)&qword_25794E108);
  }
  return result;
}

unint64_t sub_24A7451F8()
{
  unint64_t result;

  result = qword_25794E110;
  if (!qword_25794E110)
  {
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF08D8], MEMORY[0x24BDF08E8]);
    atomic_store(result, (unint64_t *)&qword_25794E110);
  }
  return result;
}

void sub_24A74523C()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73AD0C);
}

void sub_24A745248()
{
  sub_24A745254((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24A73B94C);
}

void sub_24A745254(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  a1(v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
  JUMPOUT(0x24A745280);
}

uint64_t sub_24A74528C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A7452D4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_BYTE *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 88);

  sub_24A63BEDC(v3, v4);
  sub_24A63BEDC(v5, v6);
  sub_24A63BEDC(v7, v8);
  return a1;
}

uint64_t sub_24A745358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25794DF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A7453A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[8];

  v0 = sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v1 = sub_24A77A5F4();
  swift_getTupleTypeMetadata();
  v2 = sub_24A77B6A4();
  v3 = MEMORY[0x24BDF5428];
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v2);
  sub_24A77B4D0();
  sub_24A77A5F4();
  v4 = sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257947660);
  sub_24A77A5F4();
  v5 = MEMORY[0x24BDF4638];
  swift_getTupleTypeMetadata3();
  v6 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v3, v6);
  v30 = sub_24A77B4D0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579486F8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  v41[6] = v5;
  swift_getTupleTypeMetadata();
  v7 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v3, v7);
  sub_24A77B4D0();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata3();
  v8 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v3, v8);
  v31 = sub_24A77B530();
  v32 = sub_24A77A5F4();
  v29 = sub_24A77AB34();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C10);
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E0F8);
  sub_24A77A5F4();
  swift_getTupleTypeMetadata();
  v9 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v3, v9);
  sub_24A77B4D0();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v10 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v3, v10);
  v28 = sub_24A77B530();
  v27 = sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946B78);
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata();
  v11 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v3, v11);
  v12 = sub_24A77B548();
  v13 = sub_24A77A5F4();
  v14 = sub_24A77AB34();
  v26 = sub_24A77AB34();
  v41[2] = v0;
  v41[3] = v1;
  v41[4] = v4;
  v41[5] = MEMORY[0x24BDF4638];
  swift_getTupleTypeMetadata();
  v15 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v3, v15);
  v16 = sub_24A77B4D0();
  v17 = sub_24A77AB34();
  v33 = sub_24A77AB34();
  v18 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v30);
  v19 = MEMORY[0x24BDF4700];
  v41[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4700], v31);
  v41[1] = sub_24A69F3D8();
  v20 = MEMORY[0x24BDED308];
  v40[0] = v18;
  v40[1] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v32, v41);
  v21 = MEMORY[0x24BDEF3E0];
  v22 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v29, v40);
  v39[0] = MEMORY[0x24BD1A1F4](v19, v28);
  v39[1] = MEMORY[0x24BDEDBB8];
  v23 = MEMORY[0x24BD1A1F4](v20, v27, v39);
  v38[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4750], v12);
  v38[1] = MEMORY[0x24BDECC60];
  v37[0] = v23;
  v37[1] = MEMORY[0x24BD1A1F4](v20, v13, v38);
  v36[0] = v22;
  v36[1] = MEMORY[0x24BD1A1F4](v21, v14, v37);
  v24 = MEMORY[0x24BD1A1F4](v21, v26, v36);
  v35[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v16);
  v35[1] = MEMORY[0x24BDF1F80];
  v34[0] = v24;
  v34[1] = MEMORY[0x24BD1A1F4](v21, v17, v35);
  return MEMORY[0x24BD1A1F4](v21, v33, v34);
}

uint64_t sub_24A745A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v0 = sub_24A77B6A4();
  v1 = MEMORY[0x24BDF5428];
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v0);
  sub_24A77B4D0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C10);
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2579484B8);
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  sub_24A77B6A4();
  swift_getTupleTypeMetadata2();
  sub_24A77B6A4();
  sub_24A77AB34();
  swift_getTupleTypeMetadata2();
  v2 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](v1, v2);
  v3 = sub_24A77B4D0();
  v4 = sub_24A77A5F4();
  v6[0] = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v3);
  v6[1] = sub_24A69F3D8();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v4, v6);
}

uint64_t ElevationChangeMetricView.init(metricType:elevationChange:formattingManager:)@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  double v11;

  result = swift_getKeyPath();
  v11 = a2;
  *(_QWORD *)a5 = a1;
  if ((a3 & 1) != 0)
    v11 = 0.0;
  *(double *)(a5 + 8) = v11;
  *(_QWORD *)(a5 + 16) = a4;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  return result;
}

uint64_t sub_24A745D38()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  id v11;
  _BYTE v12[24];

  v1 = *v0;
  v2 = (void *)v0[2];
  v3 = v0[3];
  v4 = *((_BYTE *)v0 + 32);
  if (v1 == 53)
  {
    v5 = v2;
    sub_24A63BEC0(v3, v4);
    sub_24A63BEC0(v3, v4);
    sub_24A63E608(v3, v4, v12);
    sub_24A63BEDC(v3, v4);

    sub_24A63BEDC(v3, v4);
    if (v12[0] <= 8u && ((1 << v12[0]) & 0x181) != 0)
    {
      if (qword_2544D6160 == -1)
        goto LABEL_10;
    }
    else
    {
      v10 = v5;
      sub_24A63BEC0(v3, v4);
      sub_24A63BEC0(v3, v4);
      sub_24A63E608(v3, v4, v12);
      sub_24A63BEDC(v3, v4);

      sub_24A63BEDC(v3, v4);
      if (v12[0] == 2)
      {
        if (qword_2544D6160 == -1)
          goto LABEL_10;
      }
      else if (qword_2544D6160 == -1)
      {
        goto LABEL_10;
      }
    }
    goto LABEL_21;
  }
  if (v1 == 10)
  {
    v6 = v2;
    sub_24A63BEC0(v3, v4);
    sub_24A63BEC0(v3, v4);
    sub_24A63E608(v3, v4, v12);
    sub_24A63BEDC(v3, v4);

    sub_24A63BEDC(v3, v4);
    if (v12[0] <= 8u && ((1 << v12[0]) & 0x181) != 0)
    {
      if (qword_2544D6160 == -1)
      {
LABEL_10:
        swift_beginAccess();
        v7 = (id)qword_2544D6158;
        v8 = sub_24A77856C();

        return v8;
      }
    }
    else
    {
      v11 = v6;
      sub_24A63BEC0(v3, v4);
      sub_24A63BEC0(v3, v4);
      sub_24A63E608(v3, v4, v12);
      sub_24A63BEDC(v3, v4);

      sub_24A63BEDC(v3, v4);
      if (v12[0] == 2)
      {
        if (qword_2544D6160 == -1)
          goto LABEL_10;
      }
      else if (qword_2544D6160 == -1)
      {
        goto LABEL_10;
      }
    }
LABEL_21:
    swift_once();
    goto LABEL_10;
  }
  result = sub_24A77C01C();
  __break(1u);
  return result;
}

id ElevationChangeMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  char v5;
  id v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(double *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = *(id *)(v1 + 16);
  sub_24A63BEC0(v4, v5);
  result = objc_msgSend(v6, sel_localizedStringWithDistanceInMeters_distanceType_unitStyle_, 5, 0, v3);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = result;
  v9 = sub_24A77B9B0();
  v11 = v10;

  v12 = v6;
  sub_24A63BEC0(v4, v5);
  result = objc_msgSend(v12, sel_unitManager);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = result;
  v14 = objc_msgSend(result, sel_userDistanceUnitForDistanceType_, 5);

  sub_24A63BEDC(v4, v5);
  result = objc_msgSend(v12, sel_localizedShortUnitStringForDistanceUnit_textCase_, v14, 0);
  if (result)
  {
    v15 = result;
    v16 = sub_24A77B9B0();
    v18 = v17;

    sub_24A63BEDC(v4, v5);
    result = (id)sub_24A745D38();
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = result;
    *(_QWORD *)(a1 + 40) = v19;
    *(_WORD *)(a1 + 48) = 0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24A7463C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for ElevationChangeMetricView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  v5 = *(_BYTE *)(a2 + 32);
  v6 = v3;
  sub_24A63BEC0(v4, v5);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for ElevationChangeMetricView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  v4 = (void *)a2[2];
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_24A63BEC0(v7, (char)v2);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_24A63BEDC(v8, v9);
  return a1;
}

uint64_t assignWithTake for ElevationChangeMetricView(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  sub_24A63BEDC(v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for ElevationChangeMetricView()
{
  return &type metadata for ElevationChangeMetricView;
}

void sub_24A746514()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_257959998 = v0;
}

void sub_24A74654C()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_2579599A0 = v0;
}

void sub_24A746594()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_2579599A8 = v0;
}

void sub_24A7465E4()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_2579599B0 = v0;
}

void sub_24A74661C()
{
  uint64_t v0;

  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  qword_2579599B8 = v0;
}

id sub_24A746654(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  FIUIWorkoutActivityType.symbolName.getter();
  v3 = v2;

  if (v3)
  {
    v4 = (void *)sub_24A77B980();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t FIUIWorkoutActivityType.symbolName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t result;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_24A77A018();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - v8;
  v10 = (char *)objc_msgSend(v1, sel_effectiveTypeIdentifier, v7) - 1;
  result = 0;
  switch((unint64_t)v10)
  {
    case 0uLL:
      return 0xD000000000000018;
    case 1uLL:
      return 0x612E657275676966;
    case 2uLL:
      return 0xD00000000000001ALL;
    case 3uLL:
      return 0xD000000000000010;
    case 4uLL:
    case 0x39uLL:
      return 0x622E657275676966;
    case 5uLL:
      return 0xD000000000000011;
    case 6uLL:
      return 0x622E657275676966;
    case 7uLL:
      return 0x622E657275676966;
    case 8uLL:
    case 9uLL:
    case 0x4FuLL:
      return 0x632E657275676966;
    case 0xAuLL:
      return 0xD000000000000015;
    case 0xBuLL:
      return 0x632E657275676966;
    case 0xCuLL:
      v15 = objc_msgSend(v1, sel_isIndoor);
      v16 = 0xD000000000000014;
      v17 = 0xD000000000000013;
      goto LABEL_25;
    case 0xDuLL:
    case 0xEuLL:
    case 0x4CuLL:
      return 0x642E657275676966;
    case 0xFuLL:
      return 0xD000000000000011;
    case 0x10uLL:
      return 0xD000000000000018;
    case 0x11uLL:
    case 0x12uLL:
      return 0x662E657275676966;
    case 0x13uLL:
      return 0xD000000000000022;
    case 0x14uLL:
      return 0x672E657275676966;
    case 0x15uLL:
      return 0xD000000000000011;
    case 0x16uLL:
    case 0x17uLL:
      return 0x682E657275676966;
    case 0x18uLL:
      v15 = objc_msgSend(v1, sel_isIndoor);
      v17 = 0xD000000000000011;
      v16 = 0xD000000000000013;
LABEL_25:
      if (v15)
        return v17;
      else
        return v16;
    case 0x19uLL:
      return 0x682E657275676966;
    case 0x1AuLL:
      return 0x6C2E657275676966;
    case 0x1BuLL:
      return 0xD000000000000013;
    case 0x1CuLL:
    case 0x2BuLL:
    case 0x34uLL:
    case 0x3AuLL:
    case 0x44uLL:
      return 0xD000000000000014;
    case 0x1DuLL:
    case 0x48uLL:
      return 0xD000000000000013;
    case 0x1EuLL:
      return 0x72632E322E72616FLL;
    case 0x1FuLL:
    case 0x41uLL:
      return 0x702E657275676966;
    case 0x20uLL:
      return 0x722E657275676966;
    case 0x21uLL:
      return 0xD000000000000012;
    case 0x22uLL:
    case 0x28uLL:
      if (objc_msgSend(v1, sel_isIndoor))
        return 0xD000000000000014;
      else
        return 0xD000000000000015;
    case 0x23uLL:
    case 0x45uLL:
      return 0x722E657275676966;
    case 0x24uLL:
      if (objc_msgSend(v1, sel_isIndoor))
        return 0xD000000000000014;
      else
        return 0x722E657275676966;
    case 0x25uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2CuLL:
    case 0x43uLL:
      return 0x732E657275676966;
    case 0x26uLL:
      if (objc_msgSend(v1, sel_isIndoor))
        return 0xD000000000000012;
      else
        return 0x732E657275676966;
    case 0x27uLL:
      return 0x6B616C66776F6E73;
    case 0x2DuLL:
      v18 = objc_msgSend(v1, sel_swimmingLocationType);
      if ((unint64_t)v18 < 2)
        return 0xD000000000000010;
      if (v18 == (id)2)
        return 0xD000000000000016;
      sub_24A779A30();
      v19 = sub_24A77A00C();
      v20 = sub_24A77BC5C();
      if (os_log_type_enabled(v19, v20))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_24A635000, v19, v20, "Unknown default swimming location type, no sf symbol", v22, 2u);
        MEMORY[0x24BD1A2B4](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      return 0;
    case 0x2EuLL:
      return 0xD000000000000013;
    case 0x2FuLL:
    case 0x47uLL:
      return 0x742E657275676966;
    case 0x30uLL:
      return 0xD000000000000016;
    case 0x31uLL:
      return 0xD000000000000023;
    case 0x32uLL:
      return 0xD000000000000011;
    case 0x33uLL:
      if (objc_msgSend(v1, sel_isIndoor))
        return 0xD000000000000015;
      else
        return 0x772E657275676966;
    case 0x35uLL:
      return 0xD000000000000010;
    case 0x36uLL:
      return 0x61772E7265746177;
    case 0x37uLL:
      return 0xD000000000000010;
    case 0x38uLL:
      return 0x792E657275676966;
    case 0x3BuLL:
      return 0xD00000000000001ALL;
    case 0x3CuLL:
      return 0xD000000000000016;
    case 0x3DuLL:
      return 0xD000000000000012;
    case 0x3EuLL:
      return 0xD000000000000025;
    case 0x3FuLL:
      return 0x6A2E657275676966;
    case 0x40uLL:
      return 0xD000000000000011;
    case 0x42uLL:
      return 0xD000000000000013;
    case 0x46uLL:
      return 0xD000000000000017;
    case 0x49uLL:
      return 0xD000000000000013;
    case 0x4AuLL:
      return 0xD000000000000012;
    case 0x4BuLL:
      return 0x746E6F63656D6167;
    case 0x4DuLL:
      return 0xD000000000000012;
    case 0x4EuLL:
      return 0xD000000000000011;
    case 0x51uLL:
      return result;
    case 0x52uLL:
      return 0x656C637269632E74;
    case 0x53uLL:
      return 0xD00000000000001ALL;
    default:
      sub_24A779A30();
      v12 = sub_24A77A00C();
      v13 = sub_24A77BC5C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_24A635000, v12, v13, "Unknown HKWorkoutType type for sf symbol", v14, 2u);
        MEMORY[0x24BD1A2B4](v14, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
  }
}

uint64_t sub_24A747230(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_24A74723C(uint64_t a1, void (*a2)(id))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A725EEC(a1, (uint64_t)v6);
  v7 = sub_24A7797A8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24A725F34((uint64_t)v6);
    v9 = objc_msgSend((id)objc_opt_self(), sel_appleEffortScoreUnit);
    v10 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v9, 0.0);

  }
  else
  {
    v10 = (id)sub_24A77979C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  a2(v10);

}

uint64_t static EffortUIController.makeHostingController(shouldEmbedInNavStack:startingEffort:completion:)(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  return _s9WorkoutUI18EffortUIControllerC21makeHostingController21shouldEmbedInNavStack08startingC06cancel10completionSo06UIViewG0CSb_So10HKQuantityCSgyycyALctFZ_0(a1, a2, (uint64_t)nullsub_1, 0, a3, a4);
}

id EffortUIController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EffortUIController.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortUIController();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EffortUIController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffortUIController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s9WorkoutUI18EffortUIControllerC21makeHostingController21shouldEmbedInNavStack08startingC06cancel10completionSo06UIViewG0CSb_So10HKQuantityCSgyycyALctFZ_0(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t *v28;
  void (**v29)(uint64_t);
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  char Prompt;
  char v37;
  uint64_t v38;

  v35 = a3;
  v11 = (int *)type metadata accessor for EffortNavigationView();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v35 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v35 - v21;
  if (a2)
  {
    v23 = a2;
    sub_24A779790();
  }
  else
  {
    v24 = sub_24A7797A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 1, 1, v24);
  }
  sub_24A725EEC((uint64_t)v22, (uint64_t)v19);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a5;
  *(_QWORD *)(v25 + 24) = a6;
  v26 = &v13[v11[8]];
  swift_retain();
  swift_retain();
  Prompt = FIShouldShowTrackTrainingLoadPrompt();
  sub_24A77B47C();
  v27 = v38;
  *v26 = v37;
  *((_QWORD *)v26 + 1) = v27;
  v28 = (uint64_t *)&v13[v11[9]];
  *v28 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257946D20);
  swift_storeEnumTagMultiPayload();
  *v13 = a1 & 1;
  sub_24A74785C((uint64_t)v19, (uint64_t)&v13[v11[5]]);
  v29 = (void (**)(uint64_t))&v13[v11[6]];
  *v29 = sub_24A747850;
  v29[1] = (void (*)(uint64_t))v25;
  v30 = &v13[v11[7]];
  *v30 = v35;
  v30[1] = a4;
  sub_24A7478A4((uint64_t)v13, (uint64_t)v16);
  sub_24A7478E8();
  sub_24A77B554();
  v31 = (void *)sub_24A77ABD0();
  swift_release();
  objc_opt_self();
  v32 = swift_dynamicCastObjCClass();
  if (v32)
  {
    v33 = v32;
    sub_24A725F34((uint64_t)v22);
    return v33;
  }
  else
  {

    result = sub_24A77C01C();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for EffortUIController()
{
  return objc_opt_self();
}

uint64_t sub_24A7477FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_24A747820()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_24A74782C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24A747850(uint64_t a1)
{
  uint64_t v1;

  sub_24A74723C(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_24A74785C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A7478A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EffortNavigationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24A7478E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25794E160;
  if (!qword_25794E160)
  {
    v1 = type metadata accessor for EffortNavigationView();
    result = MEMORY[0x24BD1A1F4]("]hG\a", v1);
    atomic_store(result, (unint64_t *)&qword_25794E160);
  }
  return result;
}

void TimeInZoneMetricView.init(elapsedTime:isStale:)(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t KeyPath;
  uint64_t v9;

  KeyPath = swift_getKeyPath();
  _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
  *(_QWORD *)a4 = a1;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(_BYTE *)(a4 + 9) = a3;
  *(_QWORD *)(a4 + 16) = KeyPath;
  *(_BYTE *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = v9;
}

uint64_t TimeInZoneMetricView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[8];
  __int128 v53;
  _BYTE v54[151];
  char v55;
  __int128 v56;
  _OWORD v57[10];
  char v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v51 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E168);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E170);
  MEMORY[0x24BDAC7A8](v43);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E178);
  MEMORY[0x24BDAC7A8](v50);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v45 = (uint64_t)&v43 - v10;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E180);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794DF60);
  MEMORY[0x24BDAC7A8](v46);
  v13 = (uint64_t *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_25794DF70);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E188);
  MEMORY[0x24BDAC7A8](v47);
  v18 = (_OWORD *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v44 = (uint64_t)&v43 - v20;
  v21 = *v1;
  v60 = v1[1];
  v59 = v21;
  v61 = *((_QWORD *)v1 + 4);
  v22 = v60;
  v23 = BYTE8(v60);
  sub_24A748B6C((uint64_t)&v59);
  sub_24A63E608(v22, v23, &v58);
  sub_24A748B98((uint64_t)&v59);
  if (v58 == 5)
  {
    v24 = sub_24A77AA08();
    sub_24A748080((uint64_t)&v59, (uint64_t)v52);
    *(_OWORD *)&v54[103] = v52[6];
    *(_OWORD *)&v54[87] = v52[5];
    *(_OWORD *)&v54[39] = v52[2];
    *(_OWORD *)&v54[23] = v52[1];
    *(_OWORD *)&v54[119] = v52[7];
    *(_OWORD *)&v54[135] = v53;
    *(_OWORD *)&v54[55] = v52[3];
    *(_OWORD *)&v54[71] = v52[4];
    *(_OWORD *)&v54[7] = v52[0];
    *(_OWORD *)((char *)&v57[6] + 1) = *(_OWORD *)&v54[96];
    *(_OWORD *)((char *)&v57[7] + 1) = *(_OWORD *)&v54[112];
    *(_OWORD *)((char *)&v57[8] + 1) = *(_OWORD *)&v54[128];
    *(_OWORD *)((char *)&v57[2] + 1) = *(_OWORD *)&v54[32];
    *(_OWORD *)((char *)&v57[3] + 1) = *(_OWORD *)&v54[48];
    *(_OWORD *)((char *)&v57[4] + 1) = *(_OWORD *)&v54[64];
    *(_OWORD *)((char *)&v57[5] + 1) = *(_OWORD *)&v54[80];
    *(_OWORD *)((char *)v57 + 1) = *(_OWORD *)v54;
    v55 = 0;
    v56 = (unint64_t)v24;
    LOBYTE(v57[0]) = 0;
    *(_OWORD *)((char *)&v57[1] + 1) = *(_OWORD *)&v54[16];
    v57[9] = *((unint64_t *)&v53 + 1);
    KeyPath = swift_getKeyPath();
    v26 = *MEMORY[0x24BDED788];
    v27 = sub_24A77A63C();
    v28 = *(_QWORD *)(v27 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v16, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v16, 0, 1, v27);
    sub_24A63CCC0((uint64_t)v16, (uint64_t)v13 + *(int *)(v46 + 28), qword_25794DF70);
    *v13 = KeyPath;
    sub_24A63CCC0((uint64_t)v13, (uint64_t)v18 + *(int *)(v47 + 36), &qword_25794DF60);
    v29 = v57[8];
    v18[8] = v57[7];
    v18[9] = v29;
    v18[10] = v57[9];
    v30 = v57[4];
    v18[4] = v57[3];
    v18[5] = v30;
    v31 = v57[6];
    v18[6] = v57[5];
    v18[7] = v31;
    v32 = v57[0];
    *v18 = v56;
    v18[1] = v32;
    v33 = v57[2];
    v18[2] = v57[1];
    v18[3] = v33;
    sub_24A748D58((uint64_t)&v56);
    sub_24A63CD04((uint64_t)v13, &qword_25794DF60);
    sub_24A63CD04((uint64_t)v16, qword_25794DF70);
    sub_24A748DE0((uint64_t)v52);
    v34 = &qword_25794E188;
    v35 = v44;
    sub_24A63F6C4((uint64_t)v18, v44, &qword_25794E188);
    sub_24A63CCC0(v35, v49, &qword_25794E188);
  }
  else
  {
    *(_QWORD *)v4 = sub_24A77A930();
    *((_QWORD *)v4 + 1) = 0;
    v4[16] = 0;
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E190);
    sub_24A74842C((uint64_t)&v59, &v4[*(int *)(v36 + 44)]);
    sub_24A63CCC0((uint64_t)v4, (uint64_t)v6, &qword_25794E168);
    *(_QWORD *)&v6[*(int *)(v43 + 36)] = 0;
    sub_24A63CD04((uint64_t)v4, &qword_25794E168);
    v37 = swift_getKeyPath();
    v38 = *MEMORY[0x24BDED788];
    v39 = sub_24A77A63C();
    v40 = *(_QWORD *)(v39 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v16, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v16, 0, 1, v39);
    v41 = (uint64_t *)&v8[*(int *)(v50 + 36)];
    sub_24A63CCC0((uint64_t)v16, (uint64_t)v41 + *(int *)(v46 + 28), qword_25794DF70);
    *v41 = v37;
    sub_24A63CCC0((uint64_t)v6, (uint64_t)v8, &qword_25794E170);
    sub_24A63CD04((uint64_t)v16, qword_25794DF70);
    sub_24A63CD04((uint64_t)v6, &qword_25794E170);
    v34 = &qword_25794E178;
    v35 = v45;
    sub_24A63F6C4((uint64_t)v8, v45, &qword_25794E178);
    sub_24A63CCC0(v35, v49, &qword_25794E178);
  }
  swift_storeEnumTagMultiPayload();
  sub_24A748C50(&qword_25794E198, &qword_25794E188, (uint64_t (*)(void))sub_24A748BCC);
  sub_24A748C50(&qword_25794E1C0, &qword_25794E178, (uint64_t (*)(void))sub_24A748CD4);
  sub_24A77AB28();
  return sub_24A63CD04(v35, v34);
}

uint64_t sub_24A748080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  _BYTE v33[7];
  _BYTE v34[7];
  _BYTE v35[7];
  _BYTE v36[7];
  _BYTE v37[7];
  _BYTE v38[7];
  _BYTE v39[7];
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v4 = 0;
  if ((FIUICurrentLanguageNeedsExtendedLineSpacing() & 1) == 0)
    v4 = *(_QWORD *)(a1 + 32);
  v32 = *(_QWORD *)a1;
  v31 = *(_BYTE *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  sub_24A748B6C(a1);
  sub_24A63E608(v5, v6, &v40);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v7 = (id)qword_2544D6158;
  v8 = sub_24A77856C();
  v10 = v9;
  swift_bridgeObjectRelease();

  sub_24A748B98(a1);
  v40 = v8;
  v41 = v10;
  sub_24A645928();
  v11 = sub_24A77BE54();
  v13 = v12;
  swift_bridgeObjectRelease();
  v40 = v11;
  v41 = v13;
  v14 = sub_24A77AFD8();
  v16 = v15;
  LOBYTE(v13) = v17 & 1;
  sub_24A69EC80(0, v14, v15, v17 & 1, v18, (uint64_t)&v40);
  sub_24A64596C(v14, v16, v13);
  swift_bridgeObjectRelease();
  v19 = v40;
  v20 = v41;
  v21 = v42;
  v22 = v43;
  v23 = v45;
  LOBYTE(v13) = v46;
  v29 = v47;
  v30 = v44;
  v24 = v48;
  v25 = v49;
  LOBYTE(v16) = v50;
  v26 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor, 0xE000000000000000);
  v27 = MEMORY[0x24BD18928](v26);
  *(_DWORD *)(a2 + 9) = *(_DWORD *)v39;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)&v39[3];
  *(_DWORD *)(a2 + 25) = *(_DWORD *)v38;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)&v38[3];
  *(_DWORD *)(a2 + 68) = *(_DWORD *)&v37[3];
  *(_DWORD *)(a2 + 65) = *(_DWORD *)v37;
  *(_DWORD *)(a2 + 84) = *(_DWORD *)&v36[3];
  *(_DWORD *)(a2 + 81) = *(_DWORD *)v36;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v35[3];
  *(_DWORD *)(a2 + 97) = *(_DWORD *)v35;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v34[3];
  *(_DWORD *)(a2 + 105) = *(_DWORD *)v34;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v33[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v33;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v32;
  *(_BYTE *)(a2 + 24) = v31;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 64) = v21;
  *(_QWORD *)(a2 + 72) = v22;
  *(_BYTE *)(a2 + 80) = v30;
  *(_QWORD *)(a2 + 88) = v23;
  *(_BYTE *)(a2 + 96) = v13;
  *(_BYTE *)(a2 + 104) = v29;
  *(_QWORD *)(a2 + 112) = v24;
  *(_QWORD *)(a2 + 120) = v25;
  *(_BYTE *)(a2 + 128) = v16;
  *(_QWORD *)(a2 + 136) = v27;
  sub_24A6436C4(v19, v20, v21);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v23, v13);
  sub_24A63BEC0(v25, v16);
  swift_retain();
  sub_24A64596C(v19, v20, v21);
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v23, v13);
  sub_24A63BEDC(v25, v16);
  return swift_release();
}

uint64_t sub_24A74842C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  _QWORD *v38;
  uint64_t v39;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t *v50;
  _BYTE *v51;
  _BYTE *v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  char v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;

  v53 = a2;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487E8);
  MEMORY[0x24BDAC7A8](v47);
  v50 = (uint64_t *)&v41[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579487F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E1F0);
  MEMORY[0x24BDAC7A8](v46);
  v52 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v41[-v9];
  MEMORY[0x24BDAC7A8](v11);
  v51 = &v41[-v12];
  v49 = *(_QWORD *)a1;
  v48 = *(unsigned __int8 *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_BYTE *)(a1 + 24);
  sub_24A748B6C(a1);
  sub_24A63E608(v13, v14, &v55);
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v15 = (id)qword_2544D6158;
  v16 = sub_24A77856C();
  v18 = v17;
  swift_bridgeObjectRelease();

  sub_24A748B98(a1);
  v55 = v16;
  v56 = v18;
  sub_24A645928();
  v19 = sub_24A77AFD8();
  v21 = v20;
  LOBYTE(v18) = v22 & 1;
  sub_24A69EC80(1, v19, v20, v22 & 1, v23, (uint64_t)&v55);
  sub_24A64596C(v19, v21, v18);
  swift_bridgeObjectRelease();
  v24 = v55;
  v25 = v56;
  v54 = v57;
  v26 = v58;
  v45 = v59;
  v27 = v60;
  LOBYTE(v19) = v61;
  v44 = v62;
  v28 = v63;
  v43 = v64;
  v42 = v65;
  v29 = *MEMORY[0x24BDF1D90];
  v30 = sub_24A77AF6C();
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v31 + 104))(v6, v29, v30);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v6, 0, 1, v30);
  KeyPath = swift_getKeyPath();
  v33 = v50;
  sub_24A63CCC0((uint64_t)v6, (uint64_t)v50 + *(int *)(v47 + 28), &qword_2579487F0);
  *v33 = KeyPath;
  sub_24A63CCC0((uint64_t)v33, (uint64_t)&v10[*(int *)(v46 + 36)], &qword_2579487E8);
  *(_QWORD *)v10 = v24;
  *((_QWORD *)v10 + 1) = v25;
  v34 = v54;
  v10[16] = v54;
  *((_QWORD *)v10 + 3) = v26;
  v10[32] = v45;
  *((_QWORD *)v10 + 5) = v27;
  v10[48] = v19;
  v10[56] = v44;
  *((_QWORD *)v10 + 8) = v28;
  v35 = v43;
  *((_QWORD *)v10 + 9) = v43;
  LOBYTE(KeyPath) = v42;
  v10[80] = v42;
  sub_24A6436C4(v24, v25, v34);
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v27, v19);
  sub_24A63BEC0(v35, KeyPath);
  sub_24A63CD04((uint64_t)v33, &qword_2579487E8);
  sub_24A63CD04((uint64_t)v6, &qword_2579487F0);
  sub_24A64596C(v24, v25, v54);
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v27, v19);
  sub_24A63BEDC(v35, KeyPath);
  v36 = v51;
  sub_24A63F6C4((uint64_t)v10, (uint64_t)v51, &qword_25794E1F0);
  v37 = v52;
  sub_24A63CCC0((uint64_t)v36, (uint64_t)v52, &qword_25794E1F0);
  v38 = v53;
  *v53 = v49;
  *((_BYTE *)v38 + 8) = v48;
  v38[2] = 0x3FF0000000000000;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E1F8);
  sub_24A63CCC0((uint64_t)v37, (uint64_t)v38 + *(int *)(v39 + 48), &qword_25794E1F0);
  sub_24A63CD04((uint64_t)v36, &qword_25794E1F0);
  return sub_24A63CD04((uint64_t)v37, &qword_25794E1F0);
}

void sub_24A74894C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2544D6158;
  v1 = sub_24A77856C();
  v3 = v2;

  qword_2579599C0 = v1;
  *(_QWORD *)algn_2579599C8 = v3;
}

double sub_24A748A2C@<D0>(char a1@<W1>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;
  char v8;

  if ((a1 & 1) != 0)
  {
    if (qword_257946A28 != -1)
      swift_once();
    v4 = xmmword_2579599C0;
    sub_24A645928();
    swift_bridgeObjectRetain();
    sub_24A77AFD8();
    swift_getKeyPath();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794A990);
  sub_24A749168();
  sub_24A6AE214();
  sub_24A77AB28();
  result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 48) = v7;
  *(_BYTE *)(a2 + 49) = v8;
  return result;
}

double sub_24A748B60@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24A748A2C(*(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_24A748B6C(uint64_t a1)
{
  sub_24A63BEC0(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_24A748B98(uint64_t a1)
{
  sub_24A63BEDC(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

unint64_t sub_24A748BCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794E1A0;
  if (!qword_25794E1A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E1A8);
    v2[0] = sub_24A63CFF0(&qword_25794E1B0, &qword_25794E1B8, MEMORY[0x24BDF4700]);
    v2[1] = sub_24A69F3D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794E1A0);
  }
  return result;
}

uint64_t sub_24A748C50(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_24A63CFF0(&qword_25794DF68, &qword_25794DF60, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A748CD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794E1C8;
  if (!qword_25794E1C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E170);
    v2[0] = sub_24A63CFF0(&qword_25794E1D0, &qword_25794E168, MEMORY[0x24BDF4498]);
    v2[1] = sub_24A69F3D8();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794E1C8);
  }
  return result;
}

uint64_t sub_24A748D58(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_BYTE *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 144);
  v5 = *(_BYTE *)(a1 + 152);
  sub_24A6436C4(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  swift_bridgeObjectRetain();
  sub_24A63BEC0(v2, v3);
  sub_24A63BEC0(v4, v5);
  swift_retain();
  return a1;
}

uint64_t sub_24A748DE0(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_BYTE *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_BYTE *)(a1 + 128);
  sub_24A64596C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_24A63BEDC(v2, v3);
  sub_24A63BEDC(v4, v5);
  swift_release();
  return a1;
}

uint64_t sub_24A748E68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for TimeInZoneMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_24A63BEC0(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for TimeInZoneMetricView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_24A63BEC0(v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_24A63BEDC(v7, v8);
  *(_QWORD *)(a1 + 32) = a2[4];
  return a1;
}

uint64_t assignWithTake for TimeInZoneMetricView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_24A63BEDC(v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeInZoneMetricView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeInZoneMetricView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeInZoneMetricView()
{
  return &type metadata for TimeInZoneMetricView;
}

unint64_t sub_24A749060()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794E1D8;
  if (!qword_25794E1D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E1E0);
    v2[0] = sub_24A748C50(&qword_25794E198, &qword_25794E188, (uint64_t (*)(void))sub_24A748BCC);
    v2[1] = sub_24A748C50(&qword_25794E1C0, &qword_25794E178, (uint64_t (*)(void))sub_24A748CD4);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794E1D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ElapsedTimeOrNoTimeView(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ElapsedTimeOrNoTimeView(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ElapsedTimeOrNoTimeView()
{
  return &type metadata for ElapsedTimeOrNoTimeView;
}

uint64_t sub_24A749158()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24A749168()
{
  unint64_t result;

  result = qword_25794E1E8;
  if (!qword_25794E1E8)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for ElapsedTimeView, &type metadata for ElapsedTimeView);
    atomic_store(result, (unint64_t *)&qword_25794E1E8);
  }
  return result;
}

unint64_t sub_24A7491B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25794E200;
  if (!qword_25794E200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25794E208);
    v2[0] = sub_24A749168();
    v2[1] = sub_24A6AE214();
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25794E200);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrainingLoadDayViewLayout(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && a1[16])
    return (*(_DWORD *)a1 + 250);
  v3 = *a1;
  v4 = v3 >= 7;
  v5 = v3 - 7;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainingLoadDayViewLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 6;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadDayViewLayout()
{
  return &type metadata for TrainingLoadDayViewLayout;
}

double sub_24A7492C8(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

void sub_24A7492E8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v10;

  sub_24A7493D8(a1, a2, a3, a4, a9, a10, *v10);
}

uint64_t sub_24A7492FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24A749354(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_24A749328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24A749354(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_24A749354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

unint64_t sub_24A749394()
{
  unint64_t result;

  result = qword_25794E210;
  if (!qword_25794E210)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A787D8C, &type metadata for TrainingLoadDayViewLayout);
    atomic_store(result, (unint64_t *)&qword_25794E210);
  }
  return result;
}

void sub_24A7493D8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;

  v32 = sub_24A779CAC();
  v31[4] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v9 = sub_24A77A540();
  v10 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  v34 = v10;
  MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v31 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v31 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v31 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v31 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v31 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v31 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v42 = (char *)v31 - v30;
  sub_24A77A564();
  v36 = v28;
  sub_24A77A564();
  v37 = v25;
  sub_24A77A564();
  v38 = v22;
  sub_24A77A564();
  v39 = v19;
  sub_24A77A564();
  v40 = v16;
  sub_24A77A564();
  v41 = v13;
  sub_24A77A564();
  sub_24A77A564();
  v35 = a4 * 0.28;
  __asm { BR              X10 }
}

uint64_t sub_24A74962C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v1 - 272) = v2;
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = 0;
  *(_BYTE *)(v1 - 168) = 0;
  sub_24A77A534();
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = 0;
  *(_BYTE *)(v1 - 168) = 0;
  v3 = *(_QWORD *)(v1 - 224);
  sub_24A77A534();
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = 0;
  *(_BYTE *)(v1 - 168) = 0;
  v4 = *(_QWORD *)(v1 - 216);
  sub_24A77A534();
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = 0;
  *(_BYTE *)(v1 - 168) = 0;
  v5 = *(_QWORD *)(v1 - 208);
  sub_24A77A534();
  sub_24A77A660();
  v7 = v6;
  v9 = v8;
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = v7 & 1;
  *(_BYTE *)(v1 - 168) = v9 & 1;
  v10 = *(_QWORD *)(v1 - 200);
  sub_24A77A534();
  sub_24A77A660();
  v12 = v11;
  v14 = v13;
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = v12 & 1;
  *(_BYTE *)(v1 - 168) = v14 & 1;
  v15 = *(_QWORD *)(v1 - 192);
  sub_24A77A534();
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = 0;
  *(_BYTE *)(v1 - 168) = 0;
  v16 = *(_QWORD *)(v1 - 184);
  sub_24A77A534();
  *(_BYTE *)(v1 - 160) = 0;
  *(_BYTE *)(v1 - 168) = 0;
  sub_24A77A528();
  sub_24A77B6BC();
  *(_BYTE *)(v1 - 160) = 0;
  *(_BYTE *)(v1 - 168) = 0;
  sub_24A77A534();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 240) + 8);
  v18 = v0;
  v19 = *(_QWORD *)(v1 - 248);
  v17(v18, v19);
  v17(v16, v19);
  v17(v15, v19);
  v17(v10, v19);
  v17(v5, v19);
  v17(v4, v19);
  v17(v3, v19);
  return ((uint64_t (*)(_QWORD, uint64_t))v17)(*(_QWORD *)(v1 - 176), v19);
}

void View.headerHyphenation()()
{
  JUMPOUT(0x24BD188D4);
}

void View.bodyHyphenation()()
{
  JUMPOUT(0x24BD188D4);
}

uint64_t sub_24A74A888(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx07WorkoutB017HeaderHyphenationVGAaBHPxAaBHD1__AgA0C8ModifierHPyHCHCTm(a1, (uint64_t)&type metadata for HeaderHyphenation, (uint64_t (*)(void))sub_24A74A89C);
}

unint64_t sub_24A74A89C()
{
  unint64_t result;

  result = qword_25794E218;
  if (!qword_25794E218)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A787ED4, &type metadata for HeaderHyphenation);
    atomic_store(result, (unint64_t *)&qword_25794E218);
  }
  return result;
}

uint64_t sub_24A74A8E0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx07WorkoutB017HeaderHyphenationVGAaBHPxAaBHD1__AgA0C8ModifierHPyHCHCTm(a1, (uint64_t)&type metadata for BodyHyphenation, (uint64_t (*)(void))sub_24A6A8458);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx07WorkoutB017HeaderHyphenationVGAaBHPxAaBHD1__AgA0C8ModifierHPyHCHCTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 8);
  v5 = sub_24A77A5F4();
  v7[0] = v4;
  v7[1] = a3();
  return MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v5, v7);
}

ValueMetadata *type metadata accessor for BodyHyphenation()
{
  return &type metadata for BodyHyphenation;
}

ValueMetadata *type metadata accessor for HeaderHyphenation()
{
  return &type metadata for HeaderHyphenation;
}

uint64_t sub_24A74A970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A74A980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A74A9B4(a1, a2, a3, &qword_25794E220, &qword_25794E228);
}

uint64_t sub_24A74A99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A74A9B4(a1, a2, a3, &qword_25794E230, &qword_25794E238);
}

uint64_t sub_24A74A9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_24A74AA38(a5, a4);
  return sub_24A77B194();
}

uint64_t sub_24A74AA28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A74AA38(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDEFB78], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A74AA78(uint64_t a1)
{
  return get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE17hyphenationFactoryQr12CoreGraphics7CGFloatVFQOyAA01_C16Modifier_ContentVy07WorkoutB017HeaderHyphenationVG_Qo_HOTm(a1, &qword_25794E220, &qword_25794E228);
}

uint64_t sub_24A74AA8C(uint64_t a1)
{
  return get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE17hyphenationFactoryQr12CoreGraphics7CGFloatVFQOyAA01_C16Modifier_ContentVy07WorkoutB017HeaderHyphenationVG_Qo_HOTm(a1, &qword_25794E230, &qword_25794E238);
}

uint64_t get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE17hyphenationFactoryQr12CoreGraphics7CGFloatVFQOyAA01_C16Modifier_ContentVy07WorkoutB017HeaderHyphenationVG_Qo_HOTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  sub_24A74AA38(a3, a2);
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for NaturalDistanceMetricText(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NaturalDistanceMetricText(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for NaturalDistanceMetricText(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NaturalDistanceMetricText(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NaturalDistanceMetricText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NaturalDistanceMetricText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NaturalDistanceMetricText()
{
  return &type metadata for NaturalDistanceMetricText;
}

uint64_t sub_24A74ACD0()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_24A74ACE0@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  double v3;
  void *v4;
  uint64_t v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *v1;
  v4 = (void *)*((_QWORD *)v1 + 1);
  v5 = *((_QWORD *)v1 + 2);
  result = objc_msgSend(v4, sel_localizedCompactNaturalScaleStringWithDistanceInMeters_distanceType_unitStyle_usedUnit_, v5, 0, 0, *v1);
  if (result)
  {
    v7 = result;
    v8 = sub_24A77B9B0();
    v10 = v9;

    v11 = objc_msgSend(v4, sel_localizedShortUnitStringForDistanceUnit_textCase_, objc_msgSend(v4, sel_naturalScaleUnitForDistanceInMeters_distanceType_, v5, v3), 2);
    if (v11)
    {
      v12 = v11;
      v13 = sub_24A77B9B0();
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    v17 = *((_QWORD *)v1 + 3);
    v16 = *((_QWORD *)v1 + 4);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v16;
    *(_WORD *)(a1 + 48) = 0;
    return (id)swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Color.init(rgbHex:)(int a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_24A77B320();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v5 + 104))(v4, *MEMORY[0x24BDF3C28]);
  return MEMORY[0x24BD189AC](v4, (double)BYTE2(a1) / 255.0, (double)BYTE1(a1) / 255.0, (double)a1 / 255.0, 1.0);
}

id sub_24A74AEA4()
{
  id result;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_getActivePairedDevice);
    if (v2)
    {
      v3 = v2;
      if (objc_msgSend(v2, sel_valueForProperty_, *MEMORY[0x24BE6B398]))
      {
        sub_24A77BE90();

        swift_unknownObjectRelease();
      }
      else
      {

        memset(v5, 0, sizeof(v5));
      }
      sub_24A74AFC0((uint64_t)v5, (uint64_t)v6);
      if (v7)
      {
        if ((swift_dynamicCast() & 1) != 0)
          return (id)v4;
      }
      else
      {
        sub_24A63FFE8((uint64_t)v6);
      }
    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t sub_24A74AFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257946D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A74B008()
{
  uint64_t result;
  void *v1;
  id v2;
  void *v3;
  char v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = (void *)result;
    v2 = objc_msgSend((id)result, sel_getActivePairedDevice);
    if (!v2)
    {

      return 0;
    }
    v3 = v2;
    if (objc_msgSend(v2, sel_valueForProperty_, *MEMORY[0x24BE6B340]))
    {
      sub_24A77BE90();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v5, 0, sizeof(v5));
    }
    sub_24A74AFC0((uint64_t)v5, (uint64_t)v6);
    if (v7)
    {
      if (swift_dynamicCast() && (v4 & 1) != 0)
        return 0;
    }
    else
    {
      sub_24A63FFE8((uint64_t)v6);
    }
    return 1;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutConfigurationViewerState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_24A74B178 + 4 * byte_24A787FA5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_24A74B1AC + 4 * byte_24A787FA0[v4]))();
}

uint64_t sub_24A74B1AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A74B1B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A74B1BCLL);
  return result;
}

uint64_t sub_24A74B1C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A74B1D0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_24A74B1D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A74B1DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutConfigurationViewerState()
{
  return &type metadata for WorkoutConfigurationViewerState;
}

unint64_t sub_24A74B1FC()
{
  unint64_t result;

  result = qword_25794E240;
  if (!qword_25794E240)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A788020, &type metadata for WorkoutConfigurationViewerState);
    atomic_store(result, (unint64_t *)&qword_25794E240);
  }
  return result;
}

void sub_24A74B240(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B288);
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

uint64_t sub_24A74B2C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v2 = WorkoutConfiguration.titleForPreview(_:)(v1);
  if (v3)
  {
    v4 = v2;
    v5 = v3;
  }
  else
  {
    v6 = sub_24A7799E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v0, 1, 1, v6);
    v4 = sub_24A77B9F8();
    v5 = v7;
    sub_24A6C235C(v0);
  }
  if (qword_2544D6160 != -1)
    swift_once();
  swift_beginAccess();
  v8 = (id)qword_2544D6158;
  sub_24A77856C();

  __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A780030;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_24A66952C();
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v5;
  v10 = sub_24A77B9C8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24A74B660(char a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  if (a1 == 4)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v9 = objc_msgSend(v8, sel_userInterfaceIdiom);

    if (v9)
    {
      if (qword_2544D6160 != -1)
        swift_once();
    }
    else if (qword_2544D6160 != -1)
    {
      swift_once();
    }
    swift_beginAccess();
    v10 = (id)qword_2544D6158;
    v7 = sub_24A77856C();

  }
  else if (a1 == 1)
  {
    v1 = sub_24A74AEA4();
    v3 = v2;
    if (v2)
    {
      v4 = v1;
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v5 = (id)qword_2544D6158;
      sub_24A77856C();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257947CE0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_24A780030;
      *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v6 + 64) = sub_24A66952C();
      *(_QWORD *)(v6 + 32) = v4;
      *(_QWORD *)(v6 + 40) = v3;
      v7 = sub_24A77B9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    return 0;
  }
  return v7;
}

uint64_t sub_24A74B93C()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37948]), sel_initWithHealthStore_, v0);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37938]), sel_initWithUnitManager_, v1);
  if (v2)
  {
    v3 = v2;
    v4 = WorkoutConfiguration.displayDetail(_:)(v2);
    if (!v5)
      v4 = WorkoutConfiguration.displayName(formattingManager:)(v3);
    v6 = v4;

  }
  else
  {

    return 0;
  }
  return v6;
}

id WorkoutConfigurationImageGenerator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id WorkoutConfigurationImageGenerator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutConfigurationImageGenerator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id WorkoutConfigurationImageGenerator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutConfigurationImageGenerator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id _s9WorkoutUI0A27ConfigurationImageGeneratorC25createBlastDoorDataSource4fromSo09WKUIBlasthiJ0CSg10Foundation0I0V_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v18;

  v0 = sub_24A779724();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A779A0C();
  swift_allocObject();
  sub_24A779A00();
  sub_24A7791B4();
  sub_24A779364();
  v4 = (void *)MEMORY[0x24BD1696C](0);
  v5 = (void *)sub_24A779148();

  v6 = (void *)sub_24A779130();
  v7 = objc_msgSend(v6, sel_effectiveTypeIdentifier);

  v8 = (void *)sub_24A779130();
  v9 = objc_msgSend(v8, sel_isIndoor);

  sub_24A779190();
  v10 = sub_24A779718();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_24A778FC8();
  if (swift_dynamicCastClass())
  {
    v11 = v5;
    v12 = (void *)sub_24A778FBC();
    v13 = objc_msgSend(v12, sel_goalTypeIdentifier);

  }
  else
  {
    v13 = 0;
  }
  sub_24A74B93C();
  v14 = objc_allocWithZone((Class)WKUIBlastDoorDataSource);
  v15 = (void *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithActivityType_isIndoor_configurationType_configurationName_goalTypeIdentifier_, v7, v9, v10, v15, v13);
  swift_release();

  return v16;
}

void *_s9WorkoutUI0A27ConfigurationImageGeneratorC06createD04from10Foundation4DataVSgAH_tFZ_0()
{
  void *v0;
  void *v2;
  id v3;
  id v4;
  UIImage *v5;
  void *v6;
  NSData *v7;
  void *v8;
  id v9;

  sub_24A779A0C();
  swift_allocObject();
  sub_24A779A00();
  sub_24A7791B4();
  sub_24A779364();
  v0 = (void *)MEMORY[0x24BD1696C](0);
  v2 = (void *)sub_24A779148();

  v8 = (void *)sub_24A779130();
  v9 = v2;
  sub_24A74B93C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794E278);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v3 = v9;
  v4 = v8;
  sub_24A77A51C();
  v5 = (UIImage *)sub_24A77A504();
  v6 = v5;
  if (v5)
  {
    v7 = UIImagePNGRepresentation(v5);

    if (v7)
    {
      v6 = (void *)sub_24A7786C8();

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      return 0;
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

  }
  return v6;
}

uint64_t _s9WorkoutUI0A27ConfigurationImageGeneratorC06createD012activityType8isIndoor013configurationH00K4Name04goalH10Identifier5scaleSo7UIImageCSgSu_SbSiSSSu12CoreGraphics7CGFloatVtFZ_0(uint64_t a1, char a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  NSObject *v32;
  int v33;
  char *v34;
  NSObject *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  id v48;
  uint8_t *v49;
  uint8_t *v50;
  id v51;
  id v52;
  NSObject *v53;
  id v54;
  NSObject *v55;
  id v56;
  void (*v58)(char *, uint64_t);
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  NSObject *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a5;
  v61 = a4;
  v10 = sub_24A77A018();
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v59[0] = (char *)v59 - v14;
  v15 = sub_24A778854();
  MEMORY[0x24BDAC7A8](v15);
  v59[1] = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E270);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_24A779724();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v59 - v25;
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37950]), sel_initWithActivityTypeIdentifier_isIndoor_, a1, a2 & 1);
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE37968]), sel_initWithGoalTypeIdentifier_value_, a6, 0);
  sub_24A77970C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_24A74C86C((uint64_t)v19);
    sub_24A779A3C();
    v29 = sub_24A77A00C();
    v30 = sub_24A77BC5C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v31 = 134217984;
      v64 = a3;
      sub_24A77BE00();
      _os_log_impl(&dword_24A635000, v29, v30, "Unable to generate workout configuration from %ld, returning nil", v31, 0xCu);
      MEMORY[0x24BD1A2B4](v31, -1, -1);
      v32 = v27;
    }
    else
    {
      v32 = v29;
      v29 = v27;
    }

    (*(void (**)(char *, NSObject *))(v62 + 8))(v12, v63);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v26, v20);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  v34 = v26;
  if (v33 == *MEMORY[0x24BEC5CB8])
  {
    v35 = v27;
    v36 = v28;
    sub_24A778848();
    sub_24A779364();
    MEMORY[0x24BD1696C](0);
    v37 = objc_allocWithZone((Class)sub_24A778FC8());
    v38 = (void *)sub_24A778FD4();
    v39 = v60;
LABEL_20:
    v64 = v27;
    v65 = v38;
    v66 = v61;
    v67 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E278);
    swift_allocObject();
    v53 = v27;
    swift_bridgeObjectRetain_n();
    v54 = v38;
    v55 = v53;
    v56 = v54;
    sub_24A77A51C();
    sub_24A77A510();
    v40 = sub_24A77A504();
    swift_bridgeObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v34, v20);
    return v40;
  }
  v39 = v60;
  if (v33 == *MEMORY[0x24BEC5CD0])
  {
    swift_bridgeObjectRetain();
    sub_24A778848();
    v41 = objc_allocWithZone((Class)sub_24A779094());
    sub_24A7790A0();
    v42 = v27;
    sub_24A778848();
    sub_24A779364();
    MEMORY[0x24BD1696C](0);
    v43 = objc_allocWithZone((Class)sub_24A7790B8());
    v44 = sub_24A7790C4();
LABEL_19:
    v38 = (void *)v44;
    goto LABEL_20;
  }
  if (v33 == *MEMORY[0x24BEC5CC0])
  {
    v45 = v59[0];
    sub_24A779A3C();
    v46 = sub_24A77A00C();
    v47 = sub_24A77BC5C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = v28;
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_24A635000, v46, v47, "Error: RaceWorkoutConfiguration is not shareable", v49, 2u);
      v50 = v49;
      v28 = v48;
      MEMORY[0x24BD1A2B4](v50, -1, -1);
    }

    (*(void (**)(uint64_t, NSObject *))(v62 + 8))(v45, v63);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v34, v20);
    return 0;
  }
  if (v33 == *MEMORY[0x24BEC5CC8])
  {
    sub_24A74C8AC();
    v63 = v27;
    sub_24A77BD4C();
    sub_24A77BD64();
    sub_24A778848();
    sub_24A779364();
    MEMORY[0x24BD1696C](0);
    v51 = objc_allocWithZone((Class)sub_24A779064());
    v44 = sub_24A779070();
    goto LABEL_19;
  }
  if (v33 == *MEMORY[0x24BEC5CB0])
  {
    sub_24A778848();
    sub_24A779364();
    MEMORY[0x24BD1696C](0);
    v52 = objc_allocWithZone((Class)sub_24A778FA4());
    v44 = sub_24A778FB0();
    goto LABEL_19;
  }
  v58 = *(void (**)(char *, uint64_t))(v21 + 8);
  v58(v34, v20);

  v58(v23, v20);
  return 0;
}

UIImage *_s9WorkoutUI0A27ConfigurationImageGeneratorC06createD04from5scale10Foundation4DataVSgSo013WKUIBlastDoorJ6SourceC_12CoreGraphics7CGFloatVtFZ_0(void *a1)
{
  id v2;
  char v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  UIImage *v9;
  NSData *v10;

  v2 = objc_msgSend(a1, sel_activityType);
  v3 = objc_msgSend(a1, sel_isIndoor);
  v4 = objc_msgSend(a1, sel_configurationType);
  v5 = objc_msgSend(a1, sel_configurationName);
  v6 = sub_24A77B9B0();
  v8 = v7;

  v9 = (UIImage *)_s9WorkoutUI0A27ConfigurationImageGeneratorC06createD012activityType8isIndoor013configurationH00K4Name04goalH10Identifier5scaleSo7UIImageCSgSu_SbSiSSSu12CoreGraphics7CGFloatVtFZ_0((uint64_t)v2, v3, v4, v6, v8, (uint64_t)objc_msgSend(a1, sel_goalTypeIdentifier));
  swift_bridgeObjectRelease();
  if (v9)
  {
    v10 = UIImagePNGRepresentation(v9);

    if (v10)
    {
      v9 = (UIImage *)sub_24A7786C8();

    }
    else
    {
      return 0;
    }
  }
  return v9;
}

uint64_t type metadata accessor for WorkoutConfigurationImageGenerator()
{
  return objc_opt_self();
}

uint64_t sub_24A74C86C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A74C8AC()
{
  unint64_t result;

  result = qword_25794E280[0];
  if (!qword_25794E280[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_25794E280);
  }
  return result;
}

uint64_t sub_24A74C8E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24A74C95C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 56 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_OWORD *)(v11 + 16);
    v12 = *(_OWORD *)(v11 + 32);
    v14 = *(_OWORD *)v11;
    *(_QWORD *)(v10 + 48) = *(_QWORD *)(v11 + 48);
    *(_OWORD *)(v10 + 16) = v13;
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)v10 = v14;
  }
  return v4;
}

uint64_t sub_24A74CA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_OWORD *)(v8 + 16);
  v9 = *(_OWORD *)(v8 + 32);
  v11 = *(_OWORD *)v8;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(v7 + 32) = v9;
  *(_OWORD *)v7 = v11;
  return a1;
}

uint64_t sub_24A74CA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v7[5] = v8[5];
  v7[6] = v8[6];
  return a1;
}

uint64_t sub_24A74CB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_OWORD *)(v8 + 16);
  v9 = *(_OWORD *)(v8 + 32);
  v11 = *(_OWORD *)v8;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(v7 + 32) = v9;
  *(_OWORD *)v7 = v11;
  return a1;
}

uint64_t sub_24A74CB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v7[5] = v8[5];
  v7[6] = v8[6];
  return a1;
}

uint64_t sub_24A74CC0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 56) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_24A74CC7C + 4 * byte_24A788090[v8]))();
}

void sub_24A74CCD4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFC8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFC8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 56);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_24A74CDBC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_24A74CDC4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24A74CDCCLL);
}

void sub_24A74CDE8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_24A74CDF0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_24A74CDF8(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x24A74CE00);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t type metadata accessor for MetricHeadingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricHeadingView);
}

uint64_t sub_24A74CE24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24A74CE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C00);
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v6 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v6);
  v7 = sub_24A77B4D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v17[-v12];
  v14 = *(_QWORD *)(a1 + 24);
  v18 = v5;
  v19 = v14;
  v20 = v2;
  sub_24A77A930();
  sub_24A77B4C4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF4498], v7);
  sub_24A6B90A4((uint64_t)v10, v7, (uint64_t)v13);
  v15 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v15(v10, v7);
  sub_24A6B8268((uint64_t)v13, v7, a2);
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v13, v7);
}

uint64_t sub_24A74D020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  char v66;
  uint64_t v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[3];

  v50 = a3;
  v60 = a4;
  v61 = a1;
  v49 = sub_24A77AD50();
  v5 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C00);
  v12 = sub_24A77A5F4();
  v53 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - v13;
  v15 = sub_24A77A5F4();
  v56 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v48 = (char *)&v47 - v16;
  v17 = sub_24A77A5F4();
  v18 = *(_QWORD *)(v17 - 8);
  v54 = v17;
  v57 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v51 = (char *)&v47 - v19;
  v20 = sub_24A77A5F4();
  v58 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v59 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v52 = (char *)&v47 - v23;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v55 = (uint64_t)&v47 - v26;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v61, a2, v25);
  sub_24A77ADEC();
  sub_24A77AD44();
  sub_24A77AE10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v49);
  v27 = v50;
  sub_24A77B260();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
  sub_24A77ACC0();
  FIUICurrentLanguageRequiresTallScript();
  v28 = sub_24A74D530();
  v71[0] = v27;
  v71[1] = v28;
  v29 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v12, v71);
  v30 = v48;
  sub_24A77B2A8();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v12);
  sub_24A77ACCC();
  type metadata accessor for MetricHeadingView(0, a2, v27, v31);
  v32 = MEMORY[0x24BDECC60];
  v70[0] = v29;
  v70[1] = MEMORY[0x24BDECC60];
  v33 = MEMORY[0x24BDED308];
  v34 = MEMORY[0x24BD1A1F4](MEMORY[0x24BDED308], v15, v70);
  v35 = v51;
  sub_24A77B2A8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v15);
  sub_24A77ACD8();
  v69[0] = v34;
  v69[1] = v32;
  v36 = v33;
  v37 = v54;
  v38 = MEMORY[0x24BD1A1F4](v33, v54, v69);
  v39 = (uint64_t)v52;
  sub_24A77B2A8();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v37);
  v68[0] = v38;
  v68[1] = v32;
  v40 = MEMORY[0x24BD1A1F4](v36, v20, v68);
  v41 = v55;
  sub_24A6B90A4(v39, v20, v55);
  v42 = v58;
  v43 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v43(v39, v20);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v45 = (uint64_t)v59;
  v44(v59, v41, v20);
  v65 = 0;
  v66 = 1;
  v67[0] = v45;
  v67[1] = (uint64_t)&v65;
  v64[0] = v20;
  v64[1] = MEMORY[0x24BDF4638];
  v62 = v40;
  v63 = MEMORY[0x24BDF4610];
  sub_24A66AB50(v67, 2uLL, (uint64_t)v64);
  v43(v41, v20);
  return ((uint64_t (*)(uint64_t, uint64_t))v43)(v45, v20);
}

uint64_t sub_24A74D524@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24A74D020(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24A74D530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257946BF8;
  if (!qword_257946BF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C00);
    result = MEMORY[0x24BD1A1F4](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_257946BF8);
  }
  return result;
}

void sub_24A74D57C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257946C00);
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  sub_24A77A5F4();
  swift_getTupleTypeMetadata2();
  v0 = sub_24A77B6A4();
  MEMORY[0x24BD1A1F4](MEMORY[0x24BDF5428], v0);
  sub_24A77B4D0();
  JUMPOUT(0x24BD1A1F4);
}

uint64_t sub_24A74D64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t result;
  _QWORD v9[2];

  v1 = v0;
  v2 = sub_24A779D0C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BE3FD28])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v9[0] = 0x74756F6B726F77;
    v9[1] = 0xE700000000000000;
    sub_24A77BD40();
    sub_24A77BA4C();
    swift_bridgeObjectRelease();
    return v9[0];
  }
  else if (v7 == *MEMORY[0x24BE3FD38])
  {
    return 0x7961446C6C61;
  }
  else if (v7 == *MEMORY[0x24BE3FD40])
  {
    return 0x6F6B726F576C6C61;
  }
  else
  {
    result = sub_24A77C01C();
    __break(1u);
  }
  return result;
}

uint64_t static DemoUtilities.fetchWorkouts(startingDate:)(uint64_t a1)
{
  __CFString *v2;
  CFPropertyListRef v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;
  unint64_t v11;
  CFPropertyListRef v12;

  v2 = (__CFString *)sub_24A77B980();
  v3 = CFPreferencesCopyAppValue(v2, (CFStringRef)*MEMORY[0x24BE32738]);

  if (!v3)
    return 0;
  v12 = v3;
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v4 = v10;
  v5 = v11;
  sub_24A77835C();
  swift_allocObject();
  sub_24A778350();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579471B8);
  sub_24A64E314(&qword_2579471E8, (uint64_t (*)(void))sub_24A64E37C, MEMORY[0x24BEE12D0]);
  v6 = sub_24A778344();
  MEMORY[0x24BDAC7A8](v6);
  v9[2] = a1;
  v8 = sub_24A6D4380((void (*)(uint64_t *__return_ptr, __int128 *))sub_24A75135C, (uint64_t)v9, v10);
  swift_release();
  sub_24A6706DC(v4, v5);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static DemoUtilities.cacheLoadValues(_:dataType:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __CFString *v13;
  const __CFString *v14;
  __CFString *v15;
  uint64_t j;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __CFString *v23;
  void *v24;
  __CFString *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *a1;
  v1 = a1[1];
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  sub_24A74D64C();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  sub_24A74D64C();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3 != 29 || (v3 = *(_QWORD *)(v1 + 16), v3 != 29))
    {
      sub_24A7513DC();
      swift_allocError();
      *(_QWORD *)v11 = v3;
      *(_QWORD *)(v11 + 8) = 29;
      *(_BYTE *)(v11 + 16) = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v27 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_24A671D98(0, 29, 0);
    for (i = 32; i != 264; i += 8)
    {
      v5 = sub_24A77BBE4();
      v7 = v6;
      v9 = *(_QWORD *)(v27 + 16);
      v8 = *(_QWORD *)(v27 + 24);
      if (v9 >= v8 >> 1)
        sub_24A671D98(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v27 + 16) = v9 + 1;
      v10 = v27 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579482B8);
    sub_24A66770C();
    sub_24A77B92C();
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_24A671D98(0, 29, 0);
    for (j = 32; j != 264; j += 8)
    {
      v17 = sub_24A77BBE4();
      v19 = v18;
      v21 = *(_QWORD *)(v28 + 16);
      v20 = *(_QWORD *)(v28 + 24);
      if (v21 >= v20 >> 1)
        sub_24A671D98(v20 > 1, v21 + 1, 1);
      *(_QWORD *)(v28 + 16) = v21 + 1;
      v22 = v28 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
    }
    swift_bridgeObjectRelease();
    sub_24A77B92C();
    swift_bridgeObjectRelease();
    v23 = (__CFString *)sub_24A77B980();
    swift_bridgeObjectRelease();
    v24 = (void *)sub_24A77B980();
    swift_bridgeObjectRelease();
    v14 = (const __CFString *)*MEMORY[0x24BE32738];
    CFPreferencesSetAppValue(v23, v24, (CFStringRef)*MEMORY[0x24BE32738]);

    v25 = (__CFString *)sub_24A77B980();
    swift_bridgeObjectRelease();
    v15 = (__CFString *)sub_24A77B980();
    swift_bridgeObjectRelease();
    CFPreferencesSetAppValue(v25, v15, v14);

  }
  else
  {
    v13 = (__CFString *)sub_24A77B980();
    swift_bridgeObjectRelease();
    v14 = (const __CFString *)*MEMORY[0x24BE32738];
    CFPreferencesSetAppValue(v13, 0, (CFStringRef)*MEMORY[0x24BE32738]);

    v15 = (__CFString *)sub_24A77B980();
    swift_bridgeObjectRelease();
    CFPreferencesSetAppValue(v15, 0, v14);
  }

  result = CFPreferencesAppSynchronize(v14);
  if (!(_DWORD)result)
  {
    sub_24A7513DC();
    swift_allocError();
    *(_QWORD *)v26 = 0;
    *(_QWORD *)(v26 + 8) = 0;
    *(_BYTE *)(v26 + 16) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t static DemoUtilities.cacheWorkouts(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  __CFString *v5;
  const __CFString *v6;
  uint64_t v7;
  unint64_t v8;
  __CFString *v9;
  void *v10;
  uint64_t v11;

  if (a1)
  {
    sub_24A778380();
    swift_allocObject();
    sub_24A778374();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2579471B8);
    sub_24A64E314(&qword_2579471C0, (uint64_t (*)(void))sub_24A64E218, MEMORY[0x24BEE12A0]);
    v2 = sub_24A778368();
    if (v1)
      return swift_release();
    v7 = v2;
    v8 = v3;
    v9 = (__CFString *)sub_24A77B980();
    v10 = (void *)sub_24A7786BC();
    v6 = (const __CFString *)*MEMORY[0x24BE32738];
    CFPreferencesSetAppValue(v9, v10, (CFStringRef)*MEMORY[0x24BE32738]);

    sub_24A6706DC(v7, v8);
    swift_release();
  }
  else
  {
    v5 = (__CFString *)sub_24A77B980();
    v6 = (const __CFString *)*MEMORY[0x24BE32738];
    CFPreferencesSetAppValue(v5, 0, (CFStringRef)*MEMORY[0x24BE32738]);

  }
  result = CFPreferencesAppSynchronize(v6);
  if (!(_DWORD)result)
  {
    sub_24A7513DC();
    swift_allocError();
    *(_QWORD *)v11 = 0;
    *(_QWORD *)(v11 + 8) = 0;
    *(_BYTE *)(v11 + 16) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A74DF80(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return 0xD00000000000002CLL;
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  sub_24A77C160();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  sub_24A77BA4C();
  sub_24A77C160();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  return 0x6465746365707845;
}

uint64_t sub_24A74E0A8()
{
  uint64_t v0;

  return sub_24A74DF80(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t _s9WorkoutUI13DemoUtilitiesV11effortValue3forSo10HKQuantityCSgSo9HKWorkoutC_tFZ_0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(a1, sel_metadata);
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
    goto LABEL_10;
  }
  v2 = v1;
  v3 = sub_24A77B8FC();

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_24A64E74C(0xD00000000000001FLL, 0x800000024A789AE0), (v5 & 1) == 0))
  {
    v8 = 0u;
    v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_24A64E7B0(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_10:
    sub_24A63CD04((uint64_t)&v8, &qword_257946D48);
    return 0;
  }
  sub_24A751590();
  if (swift_dynamicCast())
    return v7;
  else
    return 0;
}

char *_s9WorkoutUI13DemoUtilitiesV33fetchTrainingLoadSampleDaySummary8dayRange8dataTypeSay13HealthBalance0fghiJ0VGSgAG09GregorianiL0V_AG0fg4DataN0OtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  __CFString *v118;
  const __CFString *v119;
  CFPropertyListRef v120;
  int v121;
  uint64_t v122;
  __CFString *v123;
  CFPropertyListRef v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  unint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  int64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  unint64_t v157;
  NSObject *v158;
  os_log_type_t v159;
  uint8_t *v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, uint64_t);
  uint64_t v175;
  uint64_t v176;
  unsigned int (*v177)(uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  void (*v179)(char *, uint64_t, uint64_t);
  char v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  uint64_t v183;
  void (**v184)(char *, uint64_t);
  char *v185;
  uint64_t v186;
  unsigned int v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  void (*v191)(char *, _QWORD, uint64_t, uint64_t);
  char *v192;
  void (**v193)(char *, uint64_t);
  uint64_t v194;
  char *v195;
  void (*v196)(char *, uint64_t, uint64_t);
  char *v197;
  char *v198;
  void (*v199)(char *, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  void (*v208)(char *, uint64_t);
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char v216;
  id v217;
  id v218;
  char *v219;
  void (*v220)(char *, uint64_t);
  void (*v221)(char *, uint64_t, uint64_t);
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  void (**v233)(char *, uint64_t);
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  char *v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  _BYTE *v252;
  uint64_t v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  unint64_t v259;
  NSObject *v260;
  os_log_type_t v261;
  _BOOL4 v262;
  uint8_t *v263;
  uint64_t v264;
  char *v265;
  unint64_t v266;
  uint64_t v267;
  NSObject *v268;
  os_log_type_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  _QWORD *v276;
  void (*v277)(char *, uint64_t, uint64_t);
  void (*v278)(char *, uint64_t);
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  void (*v288)(_QWORD, _QWORD, _QWORD);
  uint64_t v289;
  unsigned int (*v290)(unint64_t, uint64_t, uint64_t);
  uint64_t v291;
  void (*v292)(char *, uint64_t, uint64_t);
  char *v293;
  char v294;
  void (*v295)(char *, uint64_t);
  uint64_t v296;
  uint64_t v297;
  char v298;
  char v299;
  uint64_t v300;
  void (*v301)(char *, uint64_t, uint64_t);
  char *v302;
  char *v303;
  id v304;
  void *v305;
  id v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  char *v310;
  char *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  _BYTE *v315;
  uint64_t v316;
  _BYTE *v317;
  BOOL v318;
  uint64_t v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  uint64_t v324;
  void (*v325)(char *, uint64_t);
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  char *v347;
  char *v348;
  char *v349;
  uint64_t v350;
  char *v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  uint64_t v360;
  char *v361;
  char *v362;
  char *v363;
  uint64_t v364;
  char *v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  uint64_t *v370;
  char *v371;
  char *v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  void (*i)(char *, uint64_t, uint64_t);
  _QWORD *v378;
  uint64_t v379;
  char *v380;
  char *v381;
  char *v382;
  char *v383;
  char *v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  _QWORD *v402;
  uint64_t v403;
  char *v404;
  char *v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  char *v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t *v416;
  uint64_t v417;
  uint64_t v418;
  void (*v419)(uint64_t, uint64_t);
  void (**v420)(char *, uint64_t);
  char *v421;
  uint64_t v422;
  char v423;
  uint64_t v424;
  uint64_t v425;
  unint64_t v426;
  uint64_t v427;
  uint64_t v428;

  v370 = a1;
  v3 = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D628);
  MEMORY[0x24BDAC7A8](v4);
  v382 = (char *)&v335 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E310);
  MEMORY[0x24BDAC7A8](v6);
  v339 = (char *)&v335 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E318);
  MEMORY[0x24BDAC7A8](v340);
  v338 = (uint64_t)&v335 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v417 = (uint64_t)&v335 - v10;
  v395 = sub_24A779D0C();
  v394 = *(_QWORD *)(v395 - 8);
  MEMORY[0x24BDAC7A8](v395);
  v381 = (char *)&v335 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v337 = (char *)&v335 - v13;
  v14 = sub_24A779DCC();
  MEMORY[0x24BDAC7A8](v14);
  v409 = (char *)&v335 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v347 = (char *)&v335 - v17;
  v393 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794B958);
  MEMORY[0x24BDAC7A8](v393);
  v408 = (uint64_t)&v335 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v392 = (char *)&v335 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v346 = (uint64_t)&v335 - v22;
  v391 = sub_24A779D90();
  v390 = *(_QWORD *)(v391 - 8);
  MEMORY[0x24BDAC7A8](v391);
  v380 = (char *)&v335 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v345 = (char *)&v335 - v25;
  v26 = sub_24A779D48();
  v414 = *(_QWORD *)(v26 - 8);
  v415 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v404 = (char *)&v335 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v389 = (char *)&v335 - v29;
  MEMORY[0x24BDAC7A8](v30);
  v352 = (char *)&v335 - v31;
  v32 = sub_24A779D30();
  v412 = *(_QWORD *)(v32 - 8);
  v413 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v411 = (char *)&v335 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v388 = (char *)&v335 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v351 = (char *)&v335 - v37;
  v401 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794CD68);
  MEMORY[0x24BDAC7A8](v401);
  v400 = (char *)&v335 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v399 = (char *)&v335 - v40;
  v41 = sub_24A77B80C();
  v402 = *(_QWORD **)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v410 = (char *)&v335 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v372 = (char *)&v335 - v44;
  MEMORY[0x24BDAC7A8](v45);
  v421 = (char *)&v335 - v46;
  MEMORY[0x24BDAC7A8](v47);
  v384 = (char *)&v335 - v48;
  MEMORY[0x24BDAC7A8](v49);
  v383 = (char *)&v335 - v50;
  MEMORY[0x24BDAC7A8](v51);
  v396 = (char *)&v335 - v52;
  MEMORY[0x24BDAC7A8](v53);
  v348 = (char *)&v335 - v54;
  MEMORY[0x24BDAC7A8](v55);
  v361 = (char *)&v335 - v56;
  MEMORY[0x24BDAC7A8](v57);
  v367 = (char *)&v335 - v58;
  MEMORY[0x24BDAC7A8](v59);
  v418 = (uint64_t)&v335 - v60;
  MEMORY[0x24BDAC7A8](v61);
  v362 = (char *)&v335 - v62;
  MEMORY[0x24BDAC7A8](v63);
  v365 = (char *)&v335 - v64;
  MEMORY[0x24BDAC7A8](v65);
  v373 = (char *)&v335 - v66;
  MEMORY[0x24BDAC7A8](v67);
  v406 = (char *)&v335 - v68;
  v403 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794D270);
  MEMORY[0x24BDAC7A8](v403);
  v397 = (char *)&v335 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v70);
  i = (void (*)(char *, uint64_t, uint64_t))((char *)&v335 - v71);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794BB28);
  MEMORY[0x24BDAC7A8](v72);
  v371 = (char *)&v335 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v74);
  v376 = (char *)&v335 - v75;
  MEMORY[0x24BDAC7A8](v76);
  v405 = (char *)&v335 - v77;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947ED8);
  MEMORY[0x24BDAC7A8](v78);
  v385 = (uint64_t)&v335 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v80);
  v387 = (uint64_t)&v335 - v81;
  MEMORY[0x24BDAC7A8](v82);
  v386 = (char *)&v335 - v83;
  MEMORY[0x24BDAC7A8](v84);
  v375 = (uint64_t)&v335 - v85;
  MEMORY[0x24BDAC7A8](v86);
  v416 = (uint64_t *)((char *)&v335 - v87);
  MEMORY[0x24BDAC7A8](v88);
  v364 = (uint64_t)&v335 - v89;
  MEMORY[0x24BDAC7A8](v90);
  v363 = (char *)&v335 - v91;
  MEMORY[0x24BDAC7A8](v92);
  v366 = (uint64_t)&v335 - v93;
  MEMORY[0x24BDAC7A8](v94);
  v357 = (uint64_t)&v335 - v95;
  MEMORY[0x24BDAC7A8](v96);
  v407 = (uint64_t)&v335 - v97;
  MEMORY[0x24BDAC7A8](v98);
  v349 = (char *)&v335 - v99;
  v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947EE0);
  MEMORY[0x24BDAC7A8](v374);
  v360 = (uint64_t)&v335 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v101);
  v359 = (char *)&v335 - v102;
  MEMORY[0x24BDAC7A8](v103);
  v358 = (uint64_t)&v335 - v104;
  MEMORY[0x24BDAC7A8](v105);
  v368 = (char *)&v335 - v106;
  v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E320);
  MEMORY[0x24BDAC7A8](v343);
  v342 = (uint64_t)&v335 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v108);
  v378 = (uint64_t *)((char *)&v335 - v109);
  v355 = sub_24A77A018();
  v354 = *(_QWORD *)(v355 - 8);
  MEMORY[0x24BDAC7A8](v355);
  v353 = (char *)&v335 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v111);
  v344 = (char *)&v335 - v112;
  MEMORY[0x24BDAC7A8](v113);
  v341 = (char *)&v335 - v114;
  v422 = sub_24A7783B0();
  v420 = *(void (***)(char *, uint64_t))(v422 - 8);
  MEMORY[0x24BDAC7A8](v422);
  v116 = (char *)&v335 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = sub_24A74D64C();
  v356 = v117;
  v427 = 0;
  v428 = 0xE000000000000000;
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  v427 = 0xD000000000000018;
  v428 = 0x800000024A78F310;
  v398 = a2;
  sub_24A74D64C();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  v118 = (__CFString *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v119 = (const __CFString *)*MEMORY[0x24BE32738];
  v120 = CFPreferencesCopyAppValue(v118, (CFStringRef)*MEMORY[0x24BE32738]);

  v369 = 0;
  if (v120)
  {
    v425 = (uint64_t)v120;
    v121 = swift_dynamicCast();
    if (v121)
      v122 = v427;
    else
      v122 = 0;
    if (v121)
      v3 = v428;
    else
      v3 = 0;
  }
  else
  {
    v122 = 0;
  }
  v427 = 0;
  v428 = 0xE000000000000000;
  sub_24A77BF5C();
  swift_bridgeObjectRelease();
  v427 = 0xD00000000000001ALL;
  v428 = 0x800000024A78F330;
  sub_24A74D64C();
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  v123 = (__CFString *)sub_24A77B980();
  swift_bridgeObjectRelease();
  v124 = CFPreferencesCopyAppValue(v123, v119);

  if (!v124
    || ((v425 = (uint64_t)v124, (v125 = swift_dynamicCast()) == 0) ? (v126 = 0) : (v126 = v427),
        !v125 ? (v127 = 0) : (v127 = v428),
        !v3 || !v127))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v427 = v122;
  v428 = v3;
  v425 = 44;
  v426 = 0xE100000000000000;
  v419 = (void (*)(uint64_t, uint64_t))sub_24A645928();
  v128 = sub_24A77BE30();
  swift_bridgeObjectRelease();
  v129 = *(_QWORD *)(v128 + 16);
  v130 = MEMORY[0x24BEE4AF8];
  if (v129)
  {
    v336 = v126;
    v379 = v127;
    v425 = MEMORY[0x24BEE4AF8];
    sub_24A671D98(0, v129, 0);
    v335 = v128;
    v131 = (uint64_t *)(v128 + 40);
    do
    {
      v132 = *v131;
      v427 = *(v131 - 1);
      v428 = v132;
      swift_bridgeObjectRetain();
      sub_24A7783A4();
      v133 = sub_24A77BE60();
      v135 = v134;
      v420[1](v116, v422);
      swift_bridgeObjectRelease();
      v136 = (_QWORD *)v425;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24A671D98(0, v136[2] + 1, 1);
        v136 = (_QWORD *)v425;
      }
      v138 = v136[2];
      v137 = v136[3];
      if (v138 >= v137 >> 1)
      {
        sub_24A671D98(v137 > 1, v138 + 1, 1);
        v136 = (_QWORD *)v425;
      }
      v131 += 2;
      v136[2] = v138 + 1;
      v139 = &v136[2 * v138];
      v139[4] = v133;
      v139[5] = v135;
      --v129;
    }
    while (v129);
    swift_bridgeObjectRelease();
    v127 = v379;
    v126 = v336;
    v130 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v136 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v427 = v126;
  v428 = v127;
  v425 = 44;
  v426 = 0xE100000000000000;
  v140 = sub_24A77BE30();
  swift_bridgeObjectRelease();
  v141 = *(_QWORD *)(v140 + 16);
  if (v141)
  {
    v425 = v130;
    sub_24A671D98(0, v141, 0);
    v379 = v140;
    v142 = (uint64_t *)(v140 + 40);
    do
    {
      v143 = *v142;
      v427 = *(v142 - 1);
      v428 = v143;
      swift_bridgeObjectRetain();
      sub_24A7783A4();
      v144 = sub_24A77BE60();
      v146 = v145;
      v420[1](v116, v422);
      swift_bridgeObjectRelease();
      v147 = v425;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24A671D98(0, *(_QWORD *)(v147 + 16) + 1, 1);
        v147 = v425;
      }
      v149 = *(_QWORD *)(v147 + 16);
      v148 = *(_QWORD *)(v147 + 24);
      if (v149 >= v148 >> 1)
      {
        sub_24A671D98(v148 > 1, v149 + 1, 1);
        v147 = v425;
      }
      v142 += 2;
      *(_QWORD *)(v147 + 16) = v149 + 1;
      v150 = v147 + 16 * v149;
      *(_QWORD *)(v150 + 32) = v144;
      *(_QWORD *)(v150 + 40) = v146;
      --v141;
    }
    while (v141);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v147 = MEMORY[0x24BEE4AF8];
  }
  v151 = v136[2];
  v152 = MEMORY[0x24BEE4AF8];
  v153 = (unint64_t)v397;
  v379 = v147;
  if (!v151)
  {
    v162 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_100:
    swift_bridgeObjectRelease();
    v257 = v162[2];
    if (v257 == 29 && *(_QWORD *)(v147 + 16) == 29)
    {
      v258 = v344;
      sub_24A779A18();
      v259 = v356;
      swift_bridgeObjectRetain();
      v260 = sub_24A77A00C();
      v261 = sub_24A77BC74();
      v262 = os_log_type_enabled(v260, v261);
      v378 = v162;
      if (v262)
      {
        v263 = (uint8_t *)swift_slowAlloc();
        v264 = swift_slowAlloc();
        v427 = v264;
        *(_DWORD *)v263 = 136315138;
        swift_bridgeObjectRetain();
        v425 = sub_24A76BC40(v350, v259, &v427);
        sub_24A77BE00();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A635000, v260, v261, "Demo Data overriding acute and chronic values for %s on graph.", v263, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BD1A2B4](v264, -1, -1);
        MEMORY[0x24BD1A2B4](v263, -1, -1);

        (*(void (**)(char *, uint64_t))(v354 + 8))(v344, v355);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v354 + 8))(v258, v355);
      }
      v273 = v373;
      v274 = v406;
      v425 = v152;
      v275 = (uint64_t)v368;
      sub_24A779CC4();
      v276 = v402;
      v277 = (void (*)(char *, uint64_t, uint64_t))v402[2];
      v277(v274, v275, v41);
      sub_24A63CD04(v275, &qword_257947EE0);
      sub_24A77B7C4();
      sub_24A77B7DC();
      v278 = (void (*)(char *, uint64_t))v276[1];
      v278(v273, v41);
      v419 = (void (*)(uint64_t, uint64_t))v278;
      v278(v274, v41);
      v279 = (uint64_t)v339;
      sub_24A779CC4();
      v280 = v338;
      sub_24A63CCC0(v279, v338, &qword_257947EE0);
      v281 = (uint64_t)v349;
      v420 = (void (**)(char *, uint64_t))v276[7];
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v420)(v349, 1, 1, v41);
      sub_24A63CD04(v279, &qword_257947EE0);
      v282 = v340;
      sub_24A63F6C4(v281, v280 + *(int *)(v340 + 36), &qword_257947ED8);
      v283 = v280;
      v284 = v417;
      sub_24A63F6C4(v283, v417, &qword_25794E318);
      v285 = v284 + *(int *)(v282 + 36);
      v422 = 464;
      v418 = 32;
      LODWORD(v407) = *MEMORY[0x24BE3FD28];
      v405 = (char *)v285;
      for (i = v277; ; v277 = i)
      {
        v288 = (void (*)(_QWORD, _QWORD, _QWORD))v416;
        v277((char *)v416, v417, v41);
        ((void (*)(void (*)(_QWORD, _QWORD, _QWORD), _QWORD, uint64_t, uint64_t))v420)(v288, 0, 1, v41);
        v289 = v153 + *(int *)(v403 + 48);
        sub_24A63CCC0(v285, v153, &qword_257947ED8);
        sub_24A63CCC0((uint64_t)v288, v289, &qword_257947ED8);
        v290 = (unsigned int (*)(unint64_t, uint64_t, uint64_t))v276[6];
        if (v290(v153, 1, v41) == 1)
          break;
        v291 = v375;
        sub_24A63CCC0(v153, v375, &qword_257947ED8);
        if (v290(v289, 1, v41) == 1)
        {
          v419(v291, v41);
          v285 = (uint64_t)v405;
LABEL_117:
          sub_24A63CD04(v153, &qword_25794D270);
          sub_24A63CD04((uint64_t)v416, &qword_257947ED8);
          goto LABEL_119;
        }
        v292 = (void (*)(char *, uint64_t, uint64_t))v276[4];
        v292(v274, v375, v41);
        v293 = v373;
        v292(v373, v289, v41);
        sub_24A751550(&qword_2579474C0, MEMORY[0x24BDD24B0]);
        v294 = sub_24A77B974();
        v295 = (void (*)(char *, uint64_t))v419;
        v419((uint64_t)v293, v41);
        v295(v274, v41);
        sub_24A63CD04(v153, &qword_257947ED8);
        sub_24A63CD04((uint64_t)v416, &qword_257947ED8);
        v285 = (uint64_t)v405;
        if ((v294 & 1) != 0)
          goto LABEL_157;
LABEL_119:
        v296 = v387;
        sub_24A63CCC0(v285, v387, &qword_257947ED8);
        if (v290(v296, 1, v41) == 1)
        {
          v297 = v417 + *(int *)(v374 + 36);
          sub_24A751550(&qword_25794BB20, MEMORY[0x24BDD24A8]);
          v298 = sub_24A77B950();
          v153 = (unint64_t)v386;
          if ((v298 & 1) == 0)
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
            JUMPOUT(0x24A751254);
          }
          v277(v386, v297, v41);
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t))v276[4])(v274, v296, v41);
          sub_24A751550(&qword_25794BB20, MEMORY[0x24BDD24A8]);
          v299 = sub_24A77B938();
          v153 = (unint64_t)v386;
          if ((v299 & 1) == 0)
            goto LABEL_159;
          v427 = -1;
          sub_24A751550(&qword_25794BB08, MEMORY[0x24BDD24C0]);
          sub_24A77BE18();
          v419((uint64_t)v274, v41);
        }
        ((void (*)(unint64_t, _QWORD, uint64_t, uint64_t))v420)(v153, 0, 1, v41);
        sub_24A63CD04(v285, &qword_257947ED8);
        sub_24A63F6C4(v153, v285, &qword_257947ED8);
        v300 = v385;
        sub_24A63CCC0(v285, v385, &qword_257947ED8);
        if (v290(v300, 1, v41) == 1)
          goto LABEL_162;
        v301 = (void (*)(char *, uint64_t, uint64_t))v276[4];
        v302 = v384;
        v301(v384, v300, v41);
        v303 = v383;
        v301(v383, (uint64_t)v302, v41);
        v301(v421, (uint64_t)v303, v41);
        v304 = objc_msgSend((id)objc_opt_self(), sel_appleEffortScoreUnit);
        if (!v422)
        {
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          sub_24A63CD04(v153, &qword_257947ED8);
          sub_24A63CD04((uint64_t)v416, &qword_257947ED8);
LABEL_157:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24A63CD04(v417, &qword_25794E318);
          v419((uint64_t)v396, v41);
          return (char *)v425;
        }
        v153 = v418 - 4;
        if ((unint64_t)(v418 - 4) >= v378[2])
          goto LABEL_153;
        v305 = v304;
        v306 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v304, *(double *)&v378[v418]);

        sub_24A779D18();
        if (v153 >= *(_QWORD *)(v379 + 16))
          goto LABEL_154;
        v307 = *(_QWORD *)(v379 + v422 + 16);
        v308 = *(_QWORD *)(v379 + v422 + 24);
        if (v307 == 0x617461446F6ELL && v308 == 0xE600000000000000 || (sub_24A77C184() & 1) != 0)
        {
          v309 = v421;
          v277(v274, (uint64_t)v421, v41);
          v310 = v376;
          v277(v376, (uint64_t)v309, v41);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v420)(v310, 0, 1, v41);
          sub_24A779D3C();
          v153 = v395;
          v311 = v396;
          goto LABEL_146;
        }
        v309 = v421;
        v277(v372, (uint64_t)v421, v41);
        v312 = v371;
        v311 = v396;
        v277(v371, (uint64_t)v396, v41);
        v313 = ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v420)(v312, 0, 1, v41);
        v424 = 0;
        MEMORY[0x24BDAC7A8](v313);
        *(&v335 - 2) = (uint64_t)&v424;
        if ((v308 & 0x1000000000000000) != 0 || !(v308 & 0x2000000000000000 | v307 & 0x1000000000000000))
        {
          swift_bridgeObjectRetain();
          v334 = v369;
          sub_24A77BF44();
          v369 = v334;
          swift_bridgeObjectRelease();
          goto LABEL_145;
        }
        v370 = &v335;
        if ((v308 & 0x2000000000000000) != 0)
        {
          v427 = v307;
          v428 = v308 & 0xFFFFFFFFFFFFFFLL;
          swift_bridgeObjectRetain();
          v318 = (v307 >= 0x21u || ((0x100003E01uLL >> v307) & 1) == 0)
              && (v317 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
              && *v317 == 0;
          v423 = v318;
          swift_bridgeObjectRelease();
          goto LABEL_145;
        }
        if ((v307 & 0x1000000000000000) != 0)
        {
          v314 = (v308 & 0xFFFFFFFFFFFFFFFLL) + 32;
          swift_bridgeObjectRetain();
        }
        else
        {
          v314 = sub_24A77BFA4();
          swift_bridgeObjectRetain();
          if (!v314)
          {
            v315 = 0;
            goto LABEL_138;
          }
        }
        v315 = (_BYTE *)v314;
LABEL_138:
        v316 = v369;
        sub_24A7514D0(v315, (BOOL *)&v427);
        v369 = v316;
        v423 = v427;
        swift_bridgeObjectRelease();
LABEL_145:
        sub_24A779D3C();
        v153 = v395;
LABEL_146:
        v277(v410, (uint64_t)v309, v41);
        sub_24A751550(&qword_25794BB20, MEMORY[0x24BDD24A8]);
        if ((sub_24A77B95C() & 1) == 0)
          goto LABEL_155;
        v319 = v401;
        v320 = v399;
        v321 = &v399[*(int *)(v401 + 48)];
        v277(v399, (uint64_t)v311, v41);
        v277(v321, (uint64_t)v309, v41);
        v322 = v400;
        v323 = &v400[*(int *)(v319 + 48)];
        v277(v400, (uint64_t)v320, v41);
        v277(v323, (uint64_t)v321, v41);
        v324 = (uint64_t)v392;
        v301(v392, (uint64_t)v322, v41);
        v325 = (void (*)(char *, uint64_t))v419;
        v419((uint64_t)v323, v41);
        v326 = &v322[*(int *)(v319 + 48)];
        v327 = v320;
        v328 = v404;
        v301(v322, (uint64_t)v327, v41);
        v301(v326, (uint64_t)v321, v41);
        v301((char *)(v324 + *(int *)(v393 + 36)), (uint64_t)v326, v41);
        v329 = v411;
        v330 = v41;
        v325(v322, v41);
        v331 = v329;
        sub_24A63F6C4(v324, v408, &qword_25794B958);
        (*(void (**)(char *, char *, uint64_t))(v412 + 16))(v388, v329, v413);
        (*(void (**)(char *, char *, uint64_t))(v414 + 16))(v389, v328, v415);
        sub_24A779DA8();
        v332 = v394;
        v333 = v381;
        (*(void (**)(char *, uint64_t, unint64_t))(v394 + 16))(v381, v398, v153);
        LODWORD(v321) = (*(uint64_t (**)(char *, unint64_t))(v332 + 88))(v333, v153);
        if ((_DWORD)v321 == (_DWORD)v407)
          (*(void (**)(char *, unint64_t))(v332 + 96))(v333, v153);
        else
          (*(void (**)(char *, unint64_t))(v332 + 8))(v333, v153);
        v276 = v402;
        v274 = v406;
        v285 = (uint64_t)v405;
        v286 = v380;
        sub_24A779D78();
        v287 = (uint64_t)v382;
        (*(void (**)(char *, char *, uint64_t))(v390 + 32))(v382, v286, v391);
        sub_24A729C68(0, 0, v287);
        (*(void (**)(char *, uint64_t))(v414 + 8))(v328, v415);
        (*(void (**)(char *, uint64_t))(v412 + 8))(v331, v413);
        v41 = v330;
        v419((uint64_t)v421, v330);
        v422 -= 16;
        --v418;
        v153 = (unint64_t)v397;
      }
      if (v290(v289, 1, v41) == 1)
        goto LABEL_156;
      goto LABEL_117;
    }
    v265 = v353;
    sub_24A779A18();
    v266 = v356;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v267 = v147;
    v268 = sub_24A77A00C();
    v269 = sub_24A77BC5C();
    if (os_log_type_enabled(v268, v269))
    {
      v270 = swift_slowAlloc();
      v271 = swift_slowAlloc();
      v427 = v271;
      *(_DWORD *)v270 = 136315650;
      swift_bridgeObjectRetain();
      v425 = sub_24A76BC40(v350, v266, &v427);
      sub_24A77BE00();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v270 + 12) = 2048;
      swift_bridgeObjectRelease();
      v425 = v257;
      sub_24A77BE00();
      swift_bridgeObjectRelease();
      *(_WORD *)(v270 + 22) = 2048;
      v272 = *(_QWORD *)(v267 + 16);
      swift_bridgeObjectRelease();
      v425 = v272;
      sub_24A77BE00();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A635000, v268, v269, "Demo Data for %s was invalid - expected 29 comma-separated doubles, ended up with %ld acute and %ld chronic", (uint8_t *)v270, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24BD1A2B4](v271, -1, -1);
      MEMORY[0x24BD1A2B4](v270, -1, -1);

      (*(void (**)(char *, uint64_t))(v354 + 8))(v353, v355);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v354 + 8))(v265, v355);
    }
    return 0;
  }
  if (v151 != 1)
  {
LABEL_79:
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
    v249 = v136 + 5;
    v162 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v251 = *(v249 - 1);
      v250 = *v249;
      v425 = 0;
      MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
      *(&v335 - 2) = (uint64_t)&v425;
      if ((v250 & 0x1000000000000000) == 0)
      {
        if ((v250 & 0x2000000000000000) != 0)
        {
          v427 = v251;
          v428 = v250 & 0xFFFFFFFFFFFFFFLL;
          switch((char)v251)
          {
            case 0:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 32:
LABEL_89:
              swift_bridgeObjectRetain();
              goto LABEL_90;
            default:
              swift_bridgeObjectRetain();
              v252 = (_BYTE *)_swift_stdlib_strtod_clocale();
              if (v252)
LABEL_97:
                LOBYTE(v424) = *v252 == 0;
              else
LABEL_90:
                LOBYTE(v424) = 0;
              break;
          }
          goto LABEL_91;
        }
        if ((v251 & 0x1000000000000000) != 0)
        {
          switch(*(_BYTE *)(v250 + 32))
          {
            case 0:
            case 9:
            case 0xA:
            case 0xB:
            case 0xC:
            case 0xD:
            case 0x20:
              goto LABEL_89;
            default:
              swift_bridgeObjectRetain();
              v252 = (_BYTE *)_swift_stdlib_strtod_clocale();
              if (!v252)
                goto LABEL_90;
              goto LABEL_97;
          }
        }
      }
      swift_bridgeObjectRetain();
      v256 = v369;
      sub_24A77BF44();
      v369 = v256;
LABEL_91:
      isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
      if ((v424 & 1) != 0)
      {
        v253 = v425;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          isUniquelyReferenced_nonNull_native = (uint64_t)sub_24A64D484(0, v162[2] + 1, 1, v162);
          v162 = (_QWORD *)isUniquelyReferenced_nonNull_native;
        }
        v255 = v162[2];
        v254 = v162[3];
        if (v255 >= v254 >> 1)
        {
          isUniquelyReferenced_nonNull_native = (uint64_t)sub_24A64D484((_QWORD *)(v254 > 1), v255 + 1, 1, v162);
          v162 = (_QWORD *)isUniquelyReferenced_nonNull_native;
        }
        v162[2] = v255 + 1;
        v162[v255 + 4] = v253;
      }
      v249 += 2;
      if (!--v151)
      {
        swift_bridgeObjectRelease();
        v153 = (unint64_t)v397;
        v147 = v379;
        v152 = MEMORY[0x24BEE4AF8];
        goto LABEL_100;
      }
    }
  }
  v154 = v136[4];
  v155 = v136[5];
  if ((v154 != 0x676E69646E6570 || v155 != 0xE700000000000000) && (sub_24A77C184() & 1) == 0)
  {
    if (v154 == 0x617461446F6ELL && v155 == 0xE600000000000000 || (sub_24A77C184() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (char *)MEMORY[0x24BEE4AF8];
    }
    goto LABEL_79;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v156 = v341;
  sub_24A779A18();
  v157 = v356;
  swift_bridgeObjectRetain();
  v158 = sub_24A77A00C();
  v159 = sub_24A77BC74();
  if (os_log_type_enabled(v158, v159))
  {
    v160 = (uint8_t *)swift_slowAlloc();
    v161 = swift_slowAlloc();
    v427 = v161;
    *(_DWORD *)v160 = 136315138;
    swift_bridgeObjectRetain();
    v425 = sub_24A76BC40(v350, v157, &v427);
    sub_24A77BE00();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A635000, v158, v159, "Demo Data overriding acute and chronic values for %s on graph to pending.", v160, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BD1A2B4](v161, -1, -1);
    MEMORY[0x24BD1A2B4](v160, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v354 + 8))(v156, v355);
  v163 = v402;
  v164 = v373;
  v165 = v406;
  v166 = v374;
  v167 = (uint64_t)i;
  v168 = (uint64_t)v368;
  sub_24A779CC4();
  v169 = v342;
  sub_24A63CCC0(v168, v342, &qword_257947EE0);
  v170 = (uint64_t)v349;
  v416 = (uint64_t *)v163[2];
  ((void (*)(char *, uint64_t, uint64_t))v416)(v349, v168, v41);
  v421 = (char *)v163[7];
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v421)(v170, 0, 1, v41);
  sub_24A63CD04(v168, &qword_257947EE0);
  v171 = v343;
  sub_24A63F6C4(v170, v169 + *(int *)(v343 + 36), &qword_257947ED8);
  v172 = (uint64_t)v378;
  sub_24A63F6C4(v169, (uint64_t)v378, &qword_25794E320);
  v173 = v172 + *(int *)(v171 + 36);
  LODWORD(v410) = *MEMORY[0x24BE3FD28];
  v411 = (char *)MEMORY[0x24BEE4AF8];
  v417 = v173;
  while (1)
  {
    v175 = v407;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v421)(v407, 1, 1, v41);
    v176 = v167 + *(int *)(v403 + 48);
    sub_24A63CCC0(v173, v167, &qword_257947ED8);
    sub_24A63CCC0(v175, v176, &qword_257947ED8);
    v177 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v163[6];
    if (v177(v167, 1, v41) == 1)
      break;
    v178 = v357;
    sub_24A63CCC0(v167, v357, &qword_257947ED8);
    if (v177(v176, 1, v41) == 1)
    {
      ((void (*)(uint64_t, uint64_t))v163[1])(v178, v41);
      v173 = v417;
      goto LABEL_55;
    }
    v179 = (void (*)(char *, uint64_t, uint64_t))v163[4];
    v179(v165, v357, v41);
    v179(v164, v176, v41);
    sub_24A751550(&qword_2579474C0, MEMORY[0x24BDD24B0]);
    v180 = sub_24A77B974();
    v181 = (void (*)(char *, uint64_t))v163[1];
    v181(v164, v41);
    v181(v165, v41);
    sub_24A63CD04(v167, &qword_257947ED8);
    sub_24A63CD04(v407, &qword_257947ED8);
    v173 = v417;
    if ((v180 & 1) != 0)
      goto LABEL_74;
LABEL_57:
    v182 = v166;
    v183 = v366;
    sub_24A63CCC0(v173, v366, &qword_257947ED8);
    if (v177(v183, 1, v41) == 1)
      goto LABEL_163;
    v184 = (void (**)(char *, uint64_t))v163[4];
    v185 = v365;
    ((void (*)(char *, uint64_t, uint64_t))v184)(v365, v183, v41);
    ((void (*)(char *, char *, uint64_t))v184)(v405, v185, v41);
    v186 = v364;
    sub_24A63CCC0(v173, v364, &qword_257947ED8);
    v187 = v177(v186, 1, v41);
    v188 = (uint64_t)v363;
    if (v187 == 1)
      goto LABEL_164;
    v189 = v362;
    v420 = v184;
    ((void (*)(char *, uint64_t, uint64_t))v184)(v362, v186, v41);
    sub_24A751550(&qword_2579474C0, MEMORY[0x24BDD24B0]);
    if ((sub_24A77B974() & 1) != 0)
    {
      v422 = v163[1];
      ((void (*)(char *, uint64_t))v422)(v189, v41);
      v190 = 1;
    }
    else
    {
      v427 = 1;
      sub_24A751550(&qword_25794BB08, MEMORY[0x24BDD24C0]);
      sub_24A77BE18();
      v422 = v163[1];
      ((void (*)(char *, uint64_t))v422)(v189, v41);
      v190 = 0;
    }
    v191 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v421;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v421)(v188, v190, 1, v41);
    sub_24A63CD04(v173, &qword_257947ED8);
    sub_24A63F6C4(v188, v173, &qword_257947ED8);
    v192 = v405;
    v191(v405, 0, 1, v41);
    v193 = v420;
    ((void (*)(uint64_t, char *, uint64_t))v420)(v418, v192, v41);
    v194 = (uint64_t)v368;
    sub_24A779CC4();
    v195 = v373;
    v196 = (void (*)(char *, uint64_t, uint64_t))v416;
    ((void (*)(char *, uint64_t, uint64_t))v416)(v373, v194 + *(int *)(v182 + 36), v41);
    sub_24A63CD04(v194, &qword_257947EE0);
    v197 = v367;
    sub_24A77B7C4();
    sub_24A77B7DC();
    v198 = v197;
    v199 = (void (*)(char *, uint64_t))v422;
    ((void (*)(char *, uint64_t))v422)(v198, v41);
    v199(v195, v41);
    sub_24A779CC4();
    v196(v195, v194 + *(int *)(v182 + 36), v41);
    sub_24A63CD04(v194, &qword_257947EE0);
    v200 = sub_24A751550(&qword_25794BB20, MEMORY[0x24BDD24A8]);
    if ((sub_24A77B95C() & 1) == 0)
      goto LABEL_160;
    v201 = v401;
    v202 = *(int *)(v401 + 48);
    v419 = (void (*)(uint64_t, uint64_t))v200;
    v203 = v399;
    v204 = &v399[v202];
    ((void (*)(char *, char *, uint64_t))v193)(v399, v406, v41);
    ((void (*)(char *, char *, uint64_t))v193)(v204, v195, v41);
    v205 = v400;
    v206 = &v400[*(int *)(v201 + 48)];
    v196(v400, (uint64_t)v203, v41);
    v196(v206, (uint64_t)v204, v41);
    v207 = v359;
    ((void (*)(char *, char *, uint64_t))v193)(v359, v205, v41);
    v208 = (void (*)(char *, uint64_t))v422;
    ((void (*)(char *, uint64_t))v422)(v206, v41);
    v209 = *(int *)(v201 + 48);
    v166 = v374;
    v210 = &v205[v209];
    ((void (*)(char *, char *, uint64_t))v193)(v205, v203, v41);
    ((void (*)(char *, char *, uint64_t))v193)(v210, v204, v41);
    ((void (*)(char *, char *, uint64_t))v193)(&v207[*(int *)(v166 + 36)], v210, v41);
    v208(v205, v41);
    v211 = (uint64_t)v207;
    v212 = v358;
    sub_24A63F6C4(v211, v358, &qword_257947EE0);
    v213 = v418;
    LOBYTE(v204) = sub_24A77B950();
    v214 = v361;
    v196(v361, v213, v41);
    v215 = v360;
    sub_24A63CCC0(v212, v360, &qword_257947EE0);
    if ((v204 & 1) == 0)
    {
      sub_24A63CD04(v215, &qword_257947EE0);
      v174 = (void (*)(char *, uint64_t))v422;
      ((void (*)(char *, uint64_t))v422)(v214, v41);
      sub_24A63CD04(v212, &qword_257947EE0);
      v167 = (uint64_t)i;
      v173 = v417;
      goto LABEL_49;
    }
    v216 = sub_24A77B95C();
    sub_24A63CD04(v215, &qword_257947EE0);
    v174 = (void (*)(char *, uint64_t))v422;
    ((void (*)(char *, uint64_t))v422)(v214, v41);
    sub_24A63CD04(v212, &qword_257947EE0);
    v167 = (uint64_t)i;
    v173 = v417;
    if ((v216 & 1) != 0)
    {
      v217 = objc_msgSend((id)objc_opt_self(), sel_appleEffortScoreUnit);
      v218 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v217, 5.0);

      sub_24A779D18();
      v219 = v406;
      v220 = v174;
      v221 = (void (*)(char *, uint64_t, uint64_t))v416;
      ((void (*)(char *, uint64_t, uint64_t))v416)(v406, v418, v41);
      v222 = (uint64_t)v368;
      sub_24A779CC4();
      v223 = v373;
      v221(v373, v222 + *(int *)(v166 + 36), v41);
      sub_24A63CD04(v222, &qword_257947EE0);
      v224 = v367;
      sub_24A77B7C4();
      v225 = v376;
      sub_24A77B7DC();
      v220(v224, v41);
      v220(v223, v41);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v421)(v225, 0, 1, v41);
      sub_24A779D3C();
      v226 = v418;
      v221(v348, v418, v41);
      sub_24A779CC4();
      v221(v223, v222, v41);
      v227 = v219;
      v228 = v226;
      sub_24A63CD04(v222, &qword_257947EE0);
      sub_24A77B7C4();
      sub_24A77B7DC();
      v220(v224, v41);
      v220(v223, v41);
      if ((sub_24A77B95C() & 1) == 0)
        goto LABEL_161;
      v229 = v401;
      v230 = v399;
      v231 = &v399[*(int *)(v401 + 48)];
      v232 = v227;
      v233 = v420;
      ((void (*)(char *, char *, uint64_t))v420)(v399, v232, v41);
      v221(v231, v228, v41);
      v234 = v400;
      v235 = &v400[*(int *)(v229 + 48)];
      v221(v400, (uint64_t)v230, v41);
      v221(v235, (uint64_t)v231, v41);
      v236 = (uint64_t)v392;
      ((void (*)(char *, char *, uint64_t))v233)(v392, v234, v41);
      v220(v235, v41);
      v237 = &v234[*(int *)(v229 + 48)];
      ((void (*)(char *, char *, uint64_t))v233)(v234, v230, v41);
      ((void (*)(char *, char *, uint64_t))v233)(v237, v231, v41);
      ((void (*)(uint64_t, char *, uint64_t))v233)(v236 + *(int *)(v393 + 36), v237, v41);
      v220(v234, v41);
      sub_24A63F6C4(v236, v346, &qword_25794B958);
      (*(void (**)(char *, char *, uint64_t))(v412 + 16))(v388, v351, v413);
      (*(void (**)(char *, char *, uint64_t))(v414 + 16))(v389, v352, v415);
      sub_24A779DA8();
      v238 = v394;
      v239 = v337;
      v240 = v395;
      (*(void (**)(char *, uint64_t, uint64_t))(v394 + 16))(v337, v398, v395);
      LODWORD(v231) = (*(uint64_t (**)(char *, uint64_t))(v238 + 88))(v239, v240);
      v241 = (unint64_t)v411;
      if ((_DWORD)v231 == (_DWORD)v410)
        (*(void (**)(char *, uint64_t))(v238 + 96))(v239, v240);
      else
        (*(void (**)(char *, uint64_t))(v238 + 8))(v239, v240);
      v167 = (uint64_t)i;
      v173 = v417;
      sub_24A779D78();
      v242 = swift_isUniquelyReferenced_nonNull_native();
      v164 = v373;
      v165 = v406;
      v166 = v374;
      v243 = v352;
      if ((v242 & 1) == 0)
        v241 = sub_24A64DA04(0, *(_QWORD *)(v241 + 16) + 1, 1, v241);
      v245 = *(_QWORD *)(v241 + 16);
      v244 = *(_QWORD *)(v241 + 24);
      if (v245 >= v244 >> 1)
        v241 = sub_24A64DA04(v244 > 1, v245 + 1, 1, v241);
      *(_QWORD *)(v241 + 16) = v245 + 1;
      v246 = (*(unsigned __int8 *)(v390 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80);
      v411 = (char *)v241;
      (*(void (**)(unint64_t, char *, uint64_t))(v390 + 32))(v241 + v246 + *(_QWORD *)(v390 + 72) * v245, v345, v391);
      (*(void (**)(char *, uint64_t))(v414 + 8))(v243, v415);
      (*(void (**)(char *, uint64_t))(v412 + 8))(v351, v413);
      ((void (*)(uint64_t, uint64_t))v422)(v418, v41);
      v163 = v402;
    }
    else
    {
LABEL_49:
      v174((char *)v418, v41);
      v163 = v402;
      v164 = v373;
      v165 = v406;
    }
  }
  if (v177(v176, 1, v41) != 1)
  {
LABEL_55:
    sub_24A63CD04(v167, &qword_25794D270);
    sub_24A63CD04(v407, &qword_257947ED8);
    goto LABEL_57;
  }
  sub_24A63CD04(v167, &qword_257947ED8);
  sub_24A63CD04(v407, &qword_257947ED8);
LABEL_74:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v421)(v405, 1, 1, v41);
  sub_24A63CD04((uint64_t)v378, &qword_25794E320);
  return v411;
}

void sub_24A75135C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  DemoWorkout.workoutRepresentation(startingDate:)(*(_QWORD *)(v1 + 16));
  *a1 = v3;
}

unint64_t sub_24A7513DC()
{
  unint64_t result;

  result = qword_25794E308;
  if (!qword_25794E308)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A788194, &type metadata for DemoUtilities.DemoError);
    atomic_store(result, (unint64_t *)&qword_25794E308);
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoUtilities()
{
  return &type metadata for DemoUtilities;
}

uint64_t getEnumTagSinglePayload for DemoUtilities.DemoError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DemoUtilities.DemoError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_24A751480(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24A75149C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoUtilities.DemoError()
{
  return &type metadata for DemoUtilities.DemoError;
}

_BYTE *sub_24A7514D0@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_24A7514E4(a1, a2);
}

_BYTE *sub_24A7514E4@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_24A751550(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24A77B80C();
    result = MEMORY[0x24BD1A1F4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A751590()
{
  unint64_t result;

  result = qword_257947308;
  if (!qword_257947308)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257947308);
  }
  return result;
}

uint64_t sub_24A7515CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_24A77BCD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24A77BCBC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_24A77B728();
  MEMORY[0x24BDAC7A8](v6);
  sub_24A64F254(0, (unint64_t *)&qword_2579491B8);
  sub_24A77B71C();
  v8[1] = MEMORY[0x24BEE4AF8];
  sub_24A63C880(&qword_25794D2D8, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794D2E0);
  sub_24A729FD0(&qword_25794D2E8, &qword_25794D2E0);
  sub_24A77BEB4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v0);
  result = sub_24A77BD04();
  qword_25794E328 = result;
  return result;
}

unint64_t EffortUtilities.OvernightVitalsState.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t EffortUtilities.OvernightVitalsState.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_24A7517B4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return EffortUtilities.OvernightVitalsState.init(rawValue:)(*a1, a2);
}

void sub_24A7517BC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t static EffortUtilities.analyticsTaskIdentifier(workoutActivity:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = sub_24A778854();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_UUID, v4);
  sub_24A77883C();

  sub_24A778824();
  v10[0] = 0xD000000000000016;
  v10[1] = 0x800000024A78F3E0;
  sub_24A77BA4C();
  swift_bridgeObjectRelease();
  v8 = v10[0];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t static EffortUtilities.sendPostWorkoutAnalytics(workout:perceivedEffortQuantity:estimatedEffortQuantity:)(void *a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD v12[3];
  char v13;
  void *v14;
  void *v15;
  unint64_t v16;

  v5 = a1;
  v6 = objc_msgSend(a1, sel_workoutActivityType);
  LOBYTE(v5) = _HKWorkoutIsIndoor(v5);
  v7 = a3;
  v8 = a2;
  v12[0] = 0xD000000000000025;
  v12[1] = 0x800000024A78F400;
  v12[2] = v6;
  v13 = (char)v5;
  v14 = a2;
  v15 = a3;
  v16 = sub_24A64C3D4(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v9 = v8;
  v10 = v7;
  swift_bridgeObjectRetain();
  sub_24A75402C((uint64_t)v12);
  swift_bridgeObjectRelease_n();

  return swift_bridgeObjectRelease_n();
}

uint64_t static EffortUtilities.sendUpdatedEffortAnalyticsEvent(workout:workoutActivity:perceivedEffortQuantity:estimatedEffortQuantity:)(void *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _BYTE v13[56];

  v8 = a4;
  v9 = a1;
  v10 = a2;
  v11 = a3;
  sub_24A754D9C(v9, a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)v13);
  sub_24A7542A0((uint64_t)v13);
  return sub_24A754F00((uint64_t)v13);
}

uint64_t static EffortUtilities.sendDidDeeplinktoVitalsAnalyticsEvent(source:vitalsState:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  void *v8;
  int v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_24A77A018();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - (((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  LODWORD(v8) = *a2;
  if (v7 == 4)
  {
    v9 = 1;
    return sub_24A754514(0xD00000000000002CLL, 0x800000024A78F430, v9 | ((_DWORD)v8 << 8));
  }
  else
  {
    sub_24A779A18();
    v11 = sub_24A77A00C();
    v12 = sub_24A77BC5C();
    if (os_log_type_enabled(v11, v12))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20 = v15;
      v8 = &unk_24A77E000;
      *(_DWORD *)v14 = 136315138;
      v16 = 0xE600000000000000;
      v17 = 0x736C61746976;
      switch(v7)
      {
        case 0:
          goto LABEL_11;
        case 1:
          v17 = 0xD000000000000015;
          v18 = "watchSmartStackWidget";
          goto LABEL_10;
        case 2:
          v17 = 0xD00000000000001FLL;
          v18 = "watchAccessoryRectangularWidget";
LABEL_10:
          v16 = (unint64_t)(v18 - 32) | 0x8000000000000000;
LABEL_11:
          v19 = sub_24A76BC40(v17, v16, &v20);
          sub_24A77BE00();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A635000, v11, v12, "Unexpected source for deeplink analytics event: %s", v14, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24BD1A2B4](v15, -1, -1);
          MEMORY[0x24BD1A2B4](v14, -1, -1);
          break;
        default:
          v9 = 0;
          return sub_24A754514(0xD00000000000002CLL, 0x800000024A78F430, v9 | ((_DWORD)v8 << 8));
      }
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v6, v4);
  }
}

void sub_24A7520B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  unsigned int v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t (*v15)();
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[3];
  void *v33;
  uint64_t (*v34)();
  uint64_t v35;
  __int128 v36[2];

  v2 = sub_24A77A018();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v28 - v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_isHealthDataSubmissionAllowed);

    if (v11)
    {
      sub_24A779A18();
      sub_24A67BC90((uint64_t)a1, (uint64_t)aBlock);
      v12 = sub_24A77A00C();
      v13 = sub_24A77BC50();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        *(_QWORD *)&v36[0] = v29;
        v30 = v2;
        *(_DWORD *)v14 = 136315138;
        v28[1] = v14 + 4;
        v16 = v33;
        v15 = v34;
        __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v33);
        v17 = (*((uint64_t (**)(void *, uint64_t (*)()))v15 + 1))(v16, v15);
        v31 = sub_24A76BC40(v17, v18, (uint64_t *)v36);
        sub_24A77BE00();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_24A635000, v12, v13, "Preparing to send analytics for event %s.", v14, 0xCu);
        v19 = v29;
        swift_arrayDestroy();
        MEMORY[0x24BD1A2B4](v19, -1, -1);
        MEMORY[0x24BD1A2B4](v14, -1, -1);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v30);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      v23 = a1[3];
      v24 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v23);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
      v25 = (void *)sub_24A77B980();
      swift_bridgeObjectRelease();
      sub_24A67BC90((uint64_t)a1, (uint64_t)v36);
      v26 = swift_allocObject();
      sub_24A6865F8(v36, v26 + 16);
      v34 = sub_24A755094;
      v35 = v26;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24A752448;
      v33 = &block_descriptor_6;
      v27 = _Block_copy(aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v27);

    }
    else
    {
      sub_24A779A18();
      v20 = sub_24A77A00C();
      v21 = sub_24A77BC50();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_24A635000, v20, v21, "Health data submission not allowed. Not sending analytics.", v22, 2u);
        MEMORY[0x24BD1A2B4](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_24A752448(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_24A64F254(0, (unint64_t *)&qword_2579477A0);
    v4 = (void *)sub_24A77B8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_24A7524CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  char v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v65 = sub_24A7797A8();
  v1 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v60 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E340);
  MEMORY[0x24BDAC7A8](v62);
  v63 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v4);
  v68 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v67 = (uint64_t)&v60 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v61 = (uint64_t)&v60 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v71 = (uint64_t)&v60 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v72 = (uint64_t)&v60 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v60 - v15);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v60 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v60 - v20;
  v22 = *(id *)(v0 + 40);
  sub_24A779790();
  v23 = *(id *)(v0 + 32);
  sub_24A779790();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794E348);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A781090;
  strcpy((char *)(inited + 32), "activityType");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  sub_24A77BD40();
  v25 = sub_24A77B980();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v25;
  *(_QWORD *)(inited + 56) = 0x6E6F697461636F6CLL;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  v69 = v0;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_BYTE *)(v0 + 24) & 1);
  *(_QWORD *)(inited + 80) = 0x6174536E4974706FLL;
  *(_QWORD *)(inited + 88) = 0xEB00000000737574;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, FIShouldTrackTrainingLoad());
  *(_QWORD *)(inited + 104) = 0xD000000000000015;
  *(_QWORD *)(inited + 112) = 0x800000024A78F550;
  v26 = v1;
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48);
  v28 = v65;
  v29 = v27(v21, 1, v65) != 1;
  v30 = (uint64_t)v18;
  v31 = (uint64_t)v64;
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v29);
  *(_QWORD *)(inited + 128) = 0xD000000000000019;
  *(_QWORD *)(inited + 136) = 0x800000024A78F570;
  LODWORD(v29) = v27((char *)v30, 1, v28);
  sub_24A725EEC((uint64_t)v21, v31);
  v70 = v26;
  v66 = v21;
  if ((_DWORD)v29 == 1)
  {
    v32 = v28;
    sub_24A63CD04(v31, &qword_257947500);
    v33 = v72;
    sub_24A725EEC(v30, v72);
    v34 = v71;
    sub_24A725EEC((uint64_t)v21, v71);
    v35 = v34;
LABEL_4:
    sub_24A63CD04(v35, &qword_257947500);
    sub_24A63CD04(v33, &qword_257947500);
    v38 = 0;
    v39 = 0x24BDD1000;
    v40 = v32;
LABEL_12:
    v47 = (uint64_t)v66;
    goto LABEL_13;
  }
  v32 = v28;
  v36 = v27((char *)v31, 1, v28);
  sub_24A63CD04(v31, &qword_257947500);
  v33 = v72;
  sub_24A725EEC(v30, v72);
  v37 = v71;
  sub_24A725EEC((uint64_t)v21, v71);
  v35 = v37;
  if (v36 == 1)
    goto LABEL_4;
  v41 = v37;
  v42 = v63;
  v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
  v44 = v63 + *(int *)(v62 + 48);
  sub_24A725EEC(v33, v63);
  sub_24A725EEC(v41, v44);
  if (v43(v42, 1, v32) == 1)
  {
    sub_24A63CD04(v41, &qword_257947500);
    sub_24A63CD04(v33, &qword_257947500);
    v45 = v43(v44, 1, v32);
    v40 = v32;
    v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v43;
    if (v45 == 1)
    {
      sub_24A63CD04(v42, &qword_257947500);
      v38 = 0;
LABEL_11:
      v39 = 0x24BDD1000uLL;
      goto LABEL_12;
    }
LABEL_10:
    sub_24A63CD04(v42, &qword_25794E340);
    v38 = 1;
    goto LABEL_11;
  }
  v46 = v61;
  sub_24A725EEC(v42, v61);
  v64 = v43;
  if (v43(v44, 1, v32) == 1)
  {
    sub_24A63CD04(v71, &qword_257947500);
    sub_24A63CD04(v72, &qword_257947500);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v46, v32);
    v40 = v32;
    v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v64;
    goto LABEL_10;
  }
  v56 = v70;
  v57 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v60, v44, v32);
  sub_24A63C880(&qword_25794E350, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5E08], MEMORY[0x24BEC5E18]);
  v58 = sub_24A77B974();
  v59 = *(void (**)(char *, uint64_t))(v56 + 8);
  v59(v57, v32);
  sub_24A63CD04(v71, &qword_257947500);
  sub_24A63CD04(v72, &qword_257947500);
  v59((char *)v46, v32);
  sub_24A63CD04(v42, &qword_257947500);
  v38 = v58 ^ 1;
  v39 = 0x24BDD1000;
  v40 = v32;
  v47 = (uint64_t)v66;
  v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v64;
LABEL_13:
  *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone(*(Class *)(v39 + 1760)), sel_initWithBool_, v38 & 1);
  *(_QWORD *)(inited + 152) = 0xD000000000000010;
  *(_QWORD *)(inited + 160) = 0x800000024A78F590;
  v48 = v67;
  sub_24A725EEC(v47, v67);
  if (v27((char *)v48, 1, v40) == 1)
  {
    sub_24A63CD04(v48, &qword_257947500);
    v49 = 0;
  }
  else
  {
    v49 = sub_24A779784();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v48, v40);
  }
  v50 = (uint64_t)v68;
  *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone(*(Class *)(v39 + 1760)), sel_initWithInteger_, v49);
  *(_QWORD *)(inited + 176) = 0xD000000000000010;
  *(_QWORD *)(inited + 184) = 0x800000024A78F5B0;
  sub_24A725EEC(v47, v50);
  if (v27((char *)v50, 1, v40) == 1)
  {
    sub_24A63CD04(v50, &qword_257947500);
    v51 = 0;
  }
  else
  {
    v51 = sub_24A779778();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v50, v40);
  }
  *(_QWORD *)(inited + 192) = objc_msgSend(objc_allocWithZone(*(Class *)(v39 + 1760)), sel_initWithInteger_, v51);
  v52 = sub_24A64C3D4(inited);
  v53 = swift_bridgeObjectRetain();
  v54 = sub_24A75352C(v53, v52);
  sub_24A63CD04(v30, &qword_257947500);
  sub_24A63CD04(v47, &qword_257947500);
  return v54;
}

uint64_t sub_24A752D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  uint64_t inited;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  v1 = sub_24A7797A8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v53 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E340);
  MEMORY[0x24BDAC7A8](v54);
  v56 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257947500);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (uint64_t)&v52 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v52 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v62 = (uint64_t)&v52 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v63 = (uint64_t)&v52 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v57 = (char *)&v52 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v52 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v52 - v21;
  v23 = *(id *)(v0 + 48);
  sub_24A779790();
  v24 = *(id *)(v0 + 40);
  sub_24A779790();
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E348);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A781090;
  strcpy((char *)(inited + 32), "activityType");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  sub_24A77BD40();
  v26 = sub_24A77B980();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v26;
  *(_QWORD *)(inited + 56) = 0x6E6F697461636F6CLL;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  v61 = v0;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_BYTE *)(v0 + 32) & 1);
  *(_QWORD *)(inited + 80) = 0x6174536E4974706FLL;
  *(_QWORD *)(inited + 88) = 0xEB00000000737574;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, FIShouldTrackTrainingLoad());
  *(_QWORD *)(inited + 104) = 0xD000000000000015;
  *(_QWORD *)(inited + 112) = 0x800000024A78F550;
  v64 = v2;
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v28 = v27(v22, 1, v1) != 1;
  v29 = (uint64_t)v57;
  v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v28);
  *(_QWORD *)(inited + 128) = 0xD000000000000019;
  *(_QWORD *)(inited + 136) = 0x800000024A78F570;
  v65 = v19;
  LODWORD(v28) = v27(v19, 1, v1);
  sub_24A725EEC((uint64_t)v22, v29);
  if ((_DWORD)v28 == 1)
  {
    sub_24A63CD04(v29, &qword_257947500);
    v31 = v63;
    sub_24A725EEC((uint64_t)v65, v63);
    v32 = v62;
    sub_24A725EEC((uint64_t)v22, v62);
LABEL_4:
    sub_24A63CD04(v32, &qword_257947500);
    sub_24A63CD04(v31, &qword_257947500);
    v34 = 0;
    v35 = (uint64_t)v60;
LABEL_5:
    v36 = 0x24BDD1000uLL;
    goto LABEL_6;
  }
  v33 = v27((char *)v29, 1, v1);
  sub_24A63CD04(v29, &qword_257947500);
  v31 = v63;
  sub_24A725EEC((uint64_t)v65, v63);
  v32 = v62;
  sub_24A725EEC((uint64_t)v22, v62);
  if (v33 == 1)
    goto LABEL_4;
  v45 = v56;
  v46 = v56 + *(int *)(v54 + 48);
  sub_24A725EEC(v31, v56);
  sub_24A725EEC(v32, v46);
  if (v30(v45, 1, v1) == 1)
  {
    sub_24A63CD04(v32, &qword_257947500);
    sub_24A63CD04(v31, &qword_257947500);
    v47 = v30(v46, 1, v1);
    v35 = (uint64_t)v60;
    v36 = 0x24BDD1000;
    if (v47 == 1)
    {
      sub_24A63CD04(v45, &qword_257947500);
      v34 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    v48 = (uint64_t)v55;
    sub_24A725EEC(v45, (uint64_t)v55);
    v49 = v30(v46, 1, v1);
    v35 = (uint64_t)v60;
    if (v49 != 1)
    {
      v50 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v53, v46, v1);
      sub_24A63C880(&qword_25794E350, (uint64_t (*)(uint64_t))MEMORY[0x24BEC5E08], MEMORY[0x24BEC5E18]);
      LODWORD(v57) = sub_24A77B974();
      v51 = *(void (**)(char *, uint64_t))(v64 + 8);
      v51(v50, v1);
      sub_24A63CD04(v62, &qword_257947500);
      sub_24A63CD04(v63, &qword_257947500);
      v51(v55, v1);
      sub_24A63CD04(v45, &qword_257947500);
      v34 = v57 ^ 1;
      goto LABEL_5;
    }
    sub_24A63CD04(v62, &qword_257947500);
    sub_24A63CD04(v63, &qword_257947500);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v48, v1);
    v36 = 0x24BDD1000;
  }
  sub_24A63CD04(v45, &qword_25794E340);
  v34 = 1;
LABEL_6:
  *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone(*(Class *)(v36 + 1760)), sel_initWithBool_, v34 & 1);
  *(_QWORD *)(inited + 152) = 0xD000000000000010;
  *(_QWORD *)(inited + 160) = 0x800000024A78F590;
  v37 = v58;
  sub_24A725EEC((uint64_t)v22, v58);
  if (v30(v37, 1, v1) == 1)
  {
    sub_24A63CD04(v37, &qword_257947500);
    v38 = 0;
  }
  else
  {
    v38 = sub_24A779784();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v37, v1);
  }
  *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone(*(Class *)(v36 + 1760)), sel_initWithInteger_, v38);
  *(_QWORD *)(inited + 176) = 0xD000000000000010;
  *(_QWORD *)(inited + 184) = 0x800000024A78F5B0;
  sub_24A725EEC((uint64_t)v22, v35);
  if (v30(v35, 1, v1) == 1)
  {
    sub_24A63CD04(v35, &qword_257947500);
    v39 = 0;
  }
  else
  {
    v39 = sub_24A779778();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v35, v1);
  }
  *(_QWORD *)(inited + 192) = objc_msgSend(objc_allocWithZone(*(Class *)(v36 + 1760)), sel_initWithInteger_, v39);
  v40 = sub_24A64C3D4(inited);
  v41 = swift_initStackObject();
  *(_OWORD *)(v41 + 16) = xmmword_24A780030;
  *(_QWORD *)(v41 + 32) = 0xD000000000000013;
  *(_QWORD *)(v41 + 40) = 0x800000024A78F5D0;
  *(_QWORD *)(v41 + 48) = objc_msgSend(objc_allocWithZone(*(Class *)(v36 + 1760)), sel_initWithBool_, *(unsigned __int8 *)(v61 + 16));
  v42 = sub_24A64C3D4(v41);
  v43 = sub_24A75352C(v42, v40);
  sub_24A63CD04((uint64_t)v65, &qword_257947500);
  sub_24A63CD04((uint64_t)v22, &qword_257947500);
  return v43;
}

uint64_t sub_24A75352C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_24A753AF4(a1, (uint64_t)sub_24A754774, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24A7535A8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24A7535D4()
{
  return sub_24A7524CC();
}

uint64_t sub_24A753614()
{
  return sub_24A752D3C();
}

uint64_t sub_24A753654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(char *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794E338);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A780450;
  *(_QWORD *)(inited + 32) = 0x6174536E4974706FLL;
  *(_QWORD *)(inited + 40) = 0xEB00000000737574;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, FIShouldTrackTrainingLoad());
  *(_QWORD *)(inited + 56) = 0x656372756F73;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, qword_24A7884C8[v1]);
  v3 = sub_24A64C3E0(inited);
  sub_24A753748(v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

void sub_24A753748(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257947480);
    v2 = (_QWORD *)sub_24A77C04C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v27)
    goto LABEL_32;
  v12 = *(_QWORD *)(v28 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v27)
          {
            v12 = *(_QWORD *)(v28 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v27)
                break;
              v12 = *(_QWORD *)(v28 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_24A75576C();
          return;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    v19 = v18;
    v20 = sub_24A64E74C(v17, v16);
    v21 = v20;
    if ((v22 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *v7 = v17;
      v7[1] = v16;
      v8 = v2[7];

      *(_QWORD *)(v8 + 8 * v21) = v19;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    v23 = (uint64_t *)(v2[6] + 16 * v20);
    *v23 = v17;
    v23[1] = v16;
    *(_QWORD *)(v2[7] + 8 * v20) = v19;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

_QWORD *sub_24A7539EC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_24A753A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25794E338);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A780450;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x800000024A78F530;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v2);
  *(_QWORD *)(inited + 56) = 0x656372756F73;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v1);
  v4 = sub_24A64C3E0(inited);
  sub_24A753748(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24A753AF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  sub_24A7547AC();
  if (!v8)
    goto LABEL_24;
  v10 = v7;
  v11 = v8;
  v12 = v9;
  v13 = (_QWORD *)*a5;
  v15 = sub_24A64E74C(v7, v8);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v14 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_24A6DBE64();
      v22 = (_QWORD *)*a5;
      if ((v19 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    v25 = (uint64_t *)(v22[6] + 16 * v15);
    *v25 = v10;
    v25[1] = v11;
    *(_QWORD *)(v22[7] + 8 * v15) = v12;
    v26 = v22[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v28;
LABEL_13:
    sub_24A7547AC();
    if (v30)
    {
      v32 = v29;
      v33 = v30;
      v34 = v31;
      do
      {
        v40 = (_QWORD *)*a5;
        v42 = sub_24A64E74C(v32, v33);
        v43 = v40[2];
        v44 = (v41 & 1) == 0;
        v45 = v43 + v44;
        if (__OFADD__(v43, v44))
          goto LABEL_25;
        v46 = v41;
        if (v40[3] < v45)
        {
          sub_24A6DE3C4(v45, 1);
          v47 = sub_24A64E74C(v32, v33);
          if ((v46 & 1) != (v48 & 1))
            goto LABEL_27;
          v42 = v47;
        }
        v49 = (_QWORD *)*a5;
        if ((v46 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v35 = v49[7];
          v36 = 8 * v42;

          *(_QWORD *)(v35 + v36) = v34;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          v50 = (uint64_t *)(v49[6] + 16 * v42);
          *v50 = v32;
          v50[1] = v33;
          *(_QWORD *)(v49[7] + 8 * v42) = v34;
          v51 = v49[2];
          v27 = __OFADD__(v51, 1);
          v52 = v51 + 1;
          if (v27)
            goto LABEL_26;
          v49[2] = v52;
        }
        sub_24A7547AC();
        v32 = v37;
        v33 = v38;
        v34 = v39;
      }
      while (v38);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_24A75576C();
    return swift_release();
  }
  sub_24A6DE3C4(v18, a4 & 1);
  v20 = sub_24A64E74C(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    v22 = (_QWORD *)*a5;
    if ((v19 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v23 = v22[7];
    v24 = 8 * v15;

    *(_QWORD *)(v23 + v24) = v12;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_24A77C1B4();
  __break(1u);
  return result;
}

uint64_t sub_24A753DD8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];
  __int128 v19[2];
  _QWORD v20[2];
  char v21;
  ValueMetadata *v22;
  _UNKNOWN **v23;

  v6 = sub_24A77B710();
  v17[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A77B728();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &type metadata for ViewedTrainingLoadDetailsAnalyticsEvent;
  v23 = &off_251BFE040;
  v20[0] = a1;
  v20[1] = a2;
  v21 = a3;
  v13 = qword_257946A30;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  sub_24A67BC90((uint64_t)v20, (uint64_t)v19);
  v14 = swift_allocObject();
  sub_24A6865F8(v19, v14 + 16);
  aBlock[4] = sub_24A7558C0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = &block_descriptor_33;
  v15 = _Block_copy(aBlock);
  sub_24A77B71C();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A729FD0((unint64_t *)&qword_2579491D0, &qword_2579491C8);
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t sub_24A75402C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];
  __int128 v16[2];
  _QWORD v17[5];

  v2 = sub_24A77B710();
  v14[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77B728();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[3] = &type metadata for EndOfWorkoutAnalyticsEvent;
  v17[4] = &off_251BFE058;
  v9 = swift_allocObject();
  v17[0] = v9;
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a1 + 48);
  sub_24A755188(a1);
  if (qword_257946A30 != -1)
    swift_once();
  sub_24A67BC90((uint64_t)v17, (uint64_t)v16);
  v11 = swift_allocObject();
  sub_24A6865F8(v16, v11 + 16);
  aBlock[4] = sub_24A7558C0;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = &block_descriptor_26_0;
  v12 = _Block_copy(aBlock);
  sub_24A77B71C();
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A729FD0((unint64_t *)&qword_2579491D0, &qword_2579491C8);
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v8, v4, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_24A7542A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];
  __int128 v16[2];
  _QWORD v17[5];

  v2 = sub_24A77B710();
  v14[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24A77B728();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[3] = &type metadata for UpdatedEffortAnalyticsEvent;
  v17[4] = &off_251BFE070;
  v9 = swift_allocObject();
  v17[0] = v9;
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a1 + 48);
  sub_24A75510C(a1);
  if (qword_257946A30 != -1)
    swift_once();
  sub_24A67BC90((uint64_t)v17, (uint64_t)v16);
  v11 = swift_allocObject();
  sub_24A6865F8(v16, v11 + 16);
  aBlock[4] = sub_24A7558C0;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = &block_descriptor_16;
  v12 = _Block_copy(aBlock);
  sub_24A77B71C();
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A729FD0((unint64_t *)&qword_2579491D0, &qword_2579491C8);
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v8, v4, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_24A754514(uint64_t a1, uint64_t a2, unsigned int a3)
{
  char v3;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];
  __int128 v20[2];
  _QWORD v21[2];
  char v22;
  char v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;

  v3 = a3;
  v6 = a3 >> 8;
  v7 = sub_24A77B710();
  v18[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A77B728();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &type metadata for DeepLinkedToVitalsAnalyticsEvent;
  v25 = &off_251BFE088;
  v21[0] = a1;
  v21[1] = a2;
  v22 = v3 & 1;
  v23 = v6;
  v14 = qword_257946A30;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  sub_24A67BC90((uint64_t)v21, (uint64_t)v20);
  v15 = swift_allocObject();
  sub_24A6865F8(v20, v15 + 16);
  aBlock[4] = sub_24A755074;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A70DDB8;
  aBlock[3] = &block_descriptor_7;
  v16 = _Block_copy(aBlock);
  sub_24A77B71C();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_24A63C880((unint64_t *)&qword_2579491C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2579491C8);
  sub_24A729FD0((unint64_t *)&qword_2579491D0, &qword_2579491C8);
  sub_24A77BEB4();
  MEMORY[0x24BD1930C](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v18[0] + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

id sub_24A754774@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v2 = a1[1];
  v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

void sub_24A7547AC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t _s9WorkoutUI15EffortUtilitiesC23analyticsTaskIdentifier7workoutSSSo9HKWorkoutC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v14[2];

  v2 = sub_24A778854();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257948898);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_fiui_finalWorkoutUUID, v7);
  if (v10)
  {
    v11 = v10;
    sub_24A77883C();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2);
    if ((_DWORD)result != 1)
    {
      sub_24A778824();
      v14[0] = 0xD000000000000016;
      v14[1] = 0x800000024A78F3E0;
      sub_24A77BA4C();
      swift_bridgeObjectRelease();
      v13 = v14[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      return v13;
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
  }
  __break(1u);
  return result;
}

uint64_t _s9WorkoutUI15EffortUtilitiesC32sendDidViewTrainingLoadAnalytics4fromy10Foundation3URLV_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  char v9;

  v0 = sub_24A77A018();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainingLoadURLBuilder.getTrainingLoadSource(from:)(&v9);
  if (v9 != 6)
    return sub_24A753DD8(0xD000000000000023, 0x800000024A78F500, v9);
  sub_24A779A18();
  v4 = sub_24A77A00C();
  v5 = sub_24A77BC5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_24A635000, v4, v5, "Unable to determine source from url", v6, 2u);
    MEMORY[0x24BD1A2B4](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t _HKWorkoutIsIndoor(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "metadata");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", *MEMORY[0x24BDD31C0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "BOOLValue");

  return v4;
}

uint64_t _s9WorkoutUI15EffortUtilitiesC08sendPostA9Analytics15workoutActivity09perceivedC8Quantity09estimatedcK0ySo09HKWorkoutI0C_So10HKQuantityCSgALtFZ_0(void *a1, void *a2, void *a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  BOOL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD v16[3];
  BOOL v17;
  void *v18;
  void *v19;
  unint64_t v20;

  v6 = objc_msgSend(a1, sel_workoutConfiguration);
  v7 = objc_msgSend(v6, sel_activityType);

  v8 = objc_msgSend(a1, sel_workoutConfiguration);
  v9 = objc_msgSend(v8, sel_locationType);

  v10 = v9 == (id)2;
  v11 = a3;
  v12 = a2;
  v16[0] = 0xD000000000000025;
  v16[1] = 0x800000024A78F400;
  v16[2] = v7;
  v17 = v10;
  v18 = a2;
  v19 = a3;
  v20 = sub_24A64C3D4(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v13 = v12;
  v14 = v11;
  swift_bridgeObjectRetain();
  sub_24A75402C((uint64_t)v16);
  swift_bridgeObjectRelease_n();

  return swift_bridgeObjectRelease_n();
}

void sub_24A754D9C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v10;
  id v11;
  unsigned __int8 v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char IsIndoor;

  v10 = objc_msgSend(a1, sel_sourceRevision);
  v11 = objc_msgSend(v10, sel_source);

  v12 = objc_msgSend(v11, sel__hasFirstPartyBundleID);
  if (a2)
  {
    v13 = a2;
    v14 = objc_msgSend(v13, sel_workoutConfiguration);
    v15 = objc_msgSend(v14, sel_activityType);

    v16 = objc_msgSend(v13, sel_workoutConfiguration);
    v17 = objc_msgSend(v16, sel_locationType);

    IsIndoor = v17 == (id)2;
  }
  else
  {
    v15 = objc_msgSend(a1, sel_workoutActivityType);
    IsIndoor = _HKWorkoutIsIndoor(a1);

  }
  *(_QWORD *)a5 = 0xD000000000000029;
  *(_QWORD *)(a5 + 8) = 0x800000024A78F4D0;
  *(_BYTE *)(a5 + 16) = v12;
  *(_QWORD *)(a5 + 24) = v15;
  *(_BYTE *)(a5 + 32) = IsIndoor;
  *(_QWORD *)(a5 + 40) = a3;
  *(_QWORD *)(a5 + 48) = a4;
}

uint64_t sub_24A754F00(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(a1 + 48);
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_24A754F40()
{
  unint64_t result;

  result = qword_25794E330;
  if (!qword_25794E330)
  {
    result = MEMORY[0x24BD1A1F4](&protocol conformance descriptor for EffortUtilities.OvernightVitalsState, &type metadata for EffortUtilities.OvernightVitalsState);
    atomic_store(result, (unint64_t *)&qword_25794E330);
  }
  return result;
}

uint64_t _s20OvernightVitalsStateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24A754FD0 + 4 * byte_24A7881EB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24A755004 + 4 * byte_24A7881E6[v4]))();
}

uint64_t sub_24A755004(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A75500C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A755014);
  return result;
}

uint64_t sub_24A755020(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A755028);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24A75502C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A755034(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EffortUtilities.OvernightVitalsState()
{
  return &type metadata for EffortUtilities.OvernightVitalsState;
}

uint64_t sub_24A755050()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_24A755074()
{
  uint64_t v0;

  sub_24A7520B0((_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_24A755094()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_24A7550D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24A75510C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 40);
  v3 = *(id *)(a1 + 48);
  swift_bridgeObjectRetain();
  v4 = v2;
  return a1;
}

uint64_t sub_24A75514C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24A755188(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v2;
  return a1;
}

uint64_t sub_24A7551D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewedTrainingLoadDetailsAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ViewedTrainingLoadDetailsAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for ViewedTrainingLoadDetailsAnalyticsEvent()
{
  return &type metadata for ViewedTrainingLoadDetailsAnalyticsEvent;
}

uint64_t destroy for EndOfWorkoutAnalyticsEvent(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EndOfWorkoutAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EndOfWorkoutAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EndOfWorkoutAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EndOfWorkoutAnalyticsEvent()
{
  return &type metadata for EndOfWorkoutAnalyticsEvent;
}

void destroy for UpdatedEffortAnalyticsEvent(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for UpdatedEffortAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for UpdatedEffortAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(void **)(a1 + 40);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 48);
  v8 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for UpdatedEffortAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);

  v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for UpdatedEffortAnalyticsEvent()
{
  return &type metadata for UpdatedEffortAnalyticsEvent;
}

uint64_t sub_24A7555F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeepLinkedToVitalsAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for DeepLinkedToVitalsAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLinkedToVitalsAnalyticsEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkedToVitalsAnalyticsEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkedToVitalsAnalyticsEvent()
{
  return &type metadata for DeepLinkedToVitalsAnalyticsEvent;
}

uint64_t sub_24A75576C()
{
  return swift_release();
}

uint64_t storeEnumTagSinglePayload for DeepLinkedToVitalsAnalyticsEvent.DeepLinkSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24A7557C0 + 4 * byte_24A7881F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24A7557F4 + 4 * byte_24A7881F0[v4]))();
}

uint64_t sub_24A7557F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A7557FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24A755804);
  return result;
}

uint64_t sub_24A755810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24A755818);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24A75581C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24A755824(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkedToVitalsAnalyticsEvent.DeepLinkSource()
{
  return &type metadata for DeepLinkedToVitalsAnalyticsEvent.DeepLinkSource;
}

unint64_t sub_24A755844()
{
  unint64_t result;

  result = qword_25794E358;
  if (!qword_25794E358)
  {
    result = MEMORY[0x24BD1A1F4](&unk_24A78849C, &type metadata for DeepLinkedToVitalsAnalyticsEvent.DeepLinkSource);
    atomic_store(result, (unint64_t *)&qword_25794E358);
  }
  return result;
}

uint64_t MetricPublishing.publishPageDidChangeToPage(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v6 = sub_24A778A04();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24A779C10();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, a1, v6, v12);
  sub_24A779C1C();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  swift_getObjectType();
  sub_24A63C880(&qword_2579494F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE8E7D0], MEMORY[0x24BE8E7B8]);
  sub_24A779EEC();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

Swift::Void __swiftcall MetricPublishing.publishBackNavigation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v2 = v1;
  v3 = v0;
  v4 = sub_24A779C4C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE8EAC0];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(v2 + 8))(v3, v2, v7);
  swift_getObjectType();
  sub_24A779C40();
  sub_24A63C880(&qword_25794D770, v5, MEMORY[0x24BE8EAA8]);
  sub_24A779EEC();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t MetricPublishing.publishClick(actionType:targetType:targetIdentifier:targetIdentifierType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v80 = a6;
  v90 = a5;
  v95 = a4;
  v99 = a3;
  v92 = a2;
  v88 = a1;
  v9 = sub_24A779C28();
  v10 = *(_QWORD *)(v9 - 8);
  v103 = v9;
  v104 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v102 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24A778D4C();
  MEMORY[0x24BDAC7A8](v12);
  v101 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E0);
  MEMORY[0x24BDAC7A8](v14);
  v100 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E8);
  MEMORY[0x24BDAC7A8](v16);
  v98 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F0);
  MEMORY[0x24BDAC7A8](v18);
  v93 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F8);
  MEMORY[0x24BDAC7A8](v20);
  v89 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v22);
  v87 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_24A778E6C();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v106 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_24A778D88();
  v96 = *(_QWORD *)(v25 - 8);
  v97 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v94 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v91 = (char *)&v76 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E360);
  MEMORY[0x24BDAC7A8](v29);
  v84 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_24A778DB8();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v76 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E368);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CB0);
  MEMORY[0x24BDAC7A8](v35);
  v78 = (char *)&v76 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_24A778D70();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v77 = (char *)&v76 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25794E370);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v76 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_24A778B3C();
  v107 = *(_QWORD *)(v43 - 8);
  v108 = v43;
  MEMORY[0x24BDAC7A8](v43);
  v105 = (char *)&v76 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_24A778818();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)&v76 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = a7;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, double))(a7 + 16))(&v109, a6, a7, v47);
  v50 = v110;
  v51 = v111;
  __swift_project_boxed_opaque_existential_1(&v109, v110);
  sub_24A77880C();
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 40))(v49, v50, v51);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
  v52 = sub_24A778EB4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v42, 1, 1, v52);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v77, v88, v37);
  v53 = sub_24A7786B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v78, 1, 1, v53);
  v54 = sub_24A778E78();
  v55 = *(_QWORD *)(v54 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v34, v90, v54);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v34, 0, 1, v54);
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v92, v83);
  v56 = sub_24A778EE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v84, 1, 1, v56);
  swift_bridgeObjectRetain();
  v57 = v105;
  sub_24A778B30();
  v58 = v106;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v106, v57, v108);
  (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v58, *MEMORY[0x24BE8B538], v86);
  v59 = v79;
  v60 = v87;
  v61 = v80;
  (*(void (**)(uint64_t, uint64_t))(v79 + 24))(v80, v79);
  v62 = sub_24A778A04();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v60, 0, 1, v62);
  v63 = sub_24A778E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v89, 1, 1, v63);
  v64 = sub_24A778E0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v93, 1, 1, v64);
  v65 = v98;
  sub_24A778DA0();
  v66 = sub_24A778DAC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 0, 1, v66);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949700);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v100, 1, 1, v67);
  v68 = sub_24A778E84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v101, 1, 1, v68);
  v69 = v91;
  sub_24A778D7C();
  v71 = v96;
  v70 = v97;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v94, v69, v97);
  v72 = v102;
  sub_24A779C34();
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v61, v59);
  swift_getObjectType();
  sub_24A63C880(&qword_257949708, (uint64_t (*)(uint64_t))MEMORY[0x24BE8E8A8], MEMORY[0x24BE8E8A0]);
  v73 = v72;
  v74 = v103;
  sub_24A779EEC();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v73, v74);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v70);
  return (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v105, v108);
}

uint64_t MetricPublishing.publishImpressions(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  void (*v31)(_QWORD *__return_ptr, uint64_t, uint64_t, double);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;

  v59 = a1;
  v6 = sub_24A779C28();
  v7 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  v65 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A778D4C();
  MEMORY[0x24BDAC7A8](v9);
  v62 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E0);
  MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496E8);
  MEMORY[0x24BDAC7A8](v13);
  v60 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F0);
  MEMORY[0x24BDAC7A8](v15);
  v55 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579496F8);
  MEMORY[0x24BDAC7A8](v17);
  v53 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2579494E8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_24A778E6C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = sub_24A778D88();
  v57 = *(_QWORD *)(v26 - 8);
  v58 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v56 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v54 = (char *)&v52 - v30;
  v31 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, double))(a3 + 16);
  v52 = v3;
  v32 = a2;
  v31(v66, a2, a3, v29);
  v33 = v67;
  v34 = v68;
  __swift_project_boxed_opaque_existential_1(v66, v67);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v59, v33, v34);
  if (v35)
    v36 = v35;
  else
    v36 = MEMORY[0x24BEE4AF8];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  *v25 = v36;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BE8B520], v22);
  v37 = a3;
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v32, a3);
  v38 = sub_24A778A04();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v21, 0, 1, v38);
  v39 = sub_24A778E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v53, 1, 1, v39);
  v40 = sub_24A778E0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v55, 1, 1, v40);
  v41 = v60;
  sub_24A778DA0();
  v42 = sub_24A778DAC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949700);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v61, 1, 1, v43);
  v44 = sub_24A778E84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v62, 1, 1, v44);
  v45 = v54;
  sub_24A778D7C();
  v46 = v57;
  v47 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v45, v58);
  v48 = v63;
  sub_24A779C34();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v32, v37);
  swift_getObjectType();
  sub_24A63C880(&qword_257949708, (uint64_t (*)(uint64_t))MEMORY[0x24BE8E8A8], MEMORY[0x24BE8E8A0]);
  v49 = v48;
  v50 = v64;
  sub_24A779EEC();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v45, v47);
}

uint64_t dispatch thunk of MetricPublishing.eventHub.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MetricPublishing.impressionsTracker.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MetricPublishing.metricPage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MetricPublishing.publishPageDidChangeToPage(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MetricPublishing.publishBackNavigation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MetricPublishing.publishClick(actionType:targetType:targetIdentifier:targetIdentifierType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of MetricPublishing.publishImpressions(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t static HeartRateZonesPlatterMetricsProvider.metrics(workoutSettingsManager:foriOS:)(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend(a1, sel_supportedMetrics);
  if (v1)
  {
    v2 = v1;
    sub_24A6416A8();
    sub_24A6416E4();
    v3 = sub_24A77BC14();

  }
  else
  {
    v3 = 0;
  }
  sub_24A641440((uint64_t)&unk_251BF3990, v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

ValueMetadata *type metadata accessor for HeartRateZonesPlatterMetricsProvider()
{
  return &type metadata for HeartRateZonesPlatterMetricsProvider;
}

ValueMetadata *type metadata accessor for WorkoutNotificationUnitView()
{
  return &type metadata for WorkoutNotificationUnitView;
}

uint64_t sub_24A7569FC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24A756A0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int64x2_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  id v81;
  void *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  __int16 v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  char v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  id v108;
  __int16 v109;
  int v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  uint64_t v117;
  int v118;
  char v119;
  int64x2_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  char v126;
  int v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  void *v152;
  id v153;
  id v154;
  id v155;
  id v156;
  __int16 v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  char v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  void *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  __int16 v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  id v195;
  id v196;
  void *v197;
  id v198;
  uint64_t v199;
  __int128 v200;
  uint64_t v201;
  int v202;
  char v203;
  int v204;
  uint64_t v205;
  __int128 v206;
  uint64_t v207;
  int v208;
  char v209;
  int v210;
  uint64_t v211;
  char v212;
  int v213;
  uint64_t v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  void *v229;
  id v230;
  uint64_t v231;
  __int16 v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  char v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  id v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  double v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  id v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void *v277;
  id v278;
  id v279;
  id v280;
  void *v281;
  id v282;
  __int16 v283;
  int v284;
  void *v285;
  uint64_t v286;
  void *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unsigned int v298;
  uint64_t v299;
  char v300;
  uint64_t v301;
  uint64_t v302;
  id v303;
  id v304;
  int64x2_t v305;
  uint64_t v306;
  void *v307;
  id v308;
  void *v309;
  id v310;
  id v311;
  void *v312;
  id v313;
  __int16 v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  char v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  id v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char v329;
  char v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  double v337;
  char v338;
  double v339;
  double v340;
  double v341;
  uint64_t v342;
  void *v343;
  id v344;
  id v345;
  id v346;
  id v347;
  __int16 v348;
  __int128 v349;
  uint64_t v350;
  int v351;
  char v352;
  int v353;
  id v354;
  double v355;
  double v356;
  double v357;
  __int16 v358;
  uint64_t v359;
  __int128 v360;
  uint64_t v361;
  int v362;
  char v363;
  int v364;
  uint64_t v365;
  char v366;
  uint64_t v367;
  uint64_t v368;
  id v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  __int128 v374;
  uint64_t v375;
  int v376;
  char v377;
  int v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char v382;
  char v383;
  void *v384;
  id v385;
  id v386;
  id v387;
  void *v388;
  id v389;
  uint64_t v390;
  int v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  char v397;
  char v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  double v405;
  char v406;
  double v407;
  double v408;
  double v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  int v422;
  __int16 v423;
  uint64_t v424;
  __int128 v425;
  uint64_t v426;
  int v427;
  char v428;
  int v429;
  __int128 v430;
  char v431;
  uint64_t v432;
  char v433;
  char v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  int64x2_t v453;
  __int128 v454;
  int64x2_t v455;
  int64x2_t v456;
  __int128 v457;
  int64x2_t v458;
  int64x2_t *v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  uint64_t v466;
  unsigned __int16 v467;
  unsigned __int8 v468;
  char v469;
  int64x2_t v470;
  __int128 v471;
  _BYTE v472[72];
  int v473;
  char v474;
  int64x2_t v475;
  _BYTE v476[88];
  int v477;
  char v478;

  *(_QWORD *)&v457 = a3;
  v458.i64[0] = a2;
  v459 = a4;
  v5 = sub_24A77A9B4();
  MEMORY[0x24BDAC7A8](v5);
  v438 = (uint64_t)&v435 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v444 = sub_24A77C2A4();
  v442 = *(_QWORD *)(v444 - 8);
  MEMORY[0x24BDAC7A8](v444);
  v440 = (uint64_t)&v435 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v445 = sub_24A77C2B0();
  v443 = *(_QWORD *)(v445 - 8);
  MEMORY[0x24BDAC7A8](v445);
  v441 = (uint64_t)&v435 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24A778674();
  v449 = *(_QWORD *)(v9 - 8);
  v450 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v448 = (uint64_t)&v435 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24A77C16C();
  v452 = *(_QWORD *)(v11 - 8);
  v453.i64[0] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v451 = (uint64_t)&v435 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_24A7788D8();
  MEMORY[0x24BDAC7A8](v13);
  v447 = __swift_instantiateConcreteTypeFromMangledName(&qword_257949CC8);
  v14 = *(_QWORD *)(v447 - 8);
  MEMORY[0x24BDAC7A8](v447);
  v16 = (char *)&v435 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v435 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v446 = (uint64_t)&v435 - v21;
  v455.i64[0] = sub_24A77B320();
  *(_QWORD *)&v454 = *(_QWORD *)(v455.i64[0] - 8);
  MEMORY[0x24BDAC7A8](v455.i64[0]);
  v456.i64[0] = (uint64_t)&v435 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_24A779238();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v435 - v26;
  sub_24A779268();
  v28 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v27, v23);
  if (v28 == *MEMORY[0x24BEC57A8])
  {
    v29 = sub_24A779274();
    if ((v30 & 1) != 0)
    {
      v32 = 0;
    }
    else
    {
      v31 = v29;
      v32 = sub_24A779244();
      if (v32)
      {
        KeyPath = swift_getKeyPath();
        v34 = v457;
        if ((_QWORD)v457)
        {
          v35 = (void *)v458.i64[0];
          v36 = (id)v458.i64[0];
          v37 = v34;
        }
        else
        {
          v86 = v456.i64[0];
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v454 + 104))(v456.i64[0], *MEMORY[0x24BDF3C28], v455.i64[0]);
          v35 = (void *)v458.i64[0];
          v87 = (id)v458.i64[0];
          v37 = MEMORY[0x24BD189AC](v86, 0.862745098, 0.549019608, 0.882352941, 1.0);
        }
        swift_retain();
        v47 = 16;
        goto LABEL_35;
      }
    }
    v31 = 0;
    v47 = 0;
    v35 = 0;
    KeyPath = 0;
    v37 = 0;
LABEL_35:
    v443 = KeyPath;
    v455.i64[0] = v32;
    v456.i64[0] = v31;
    *(_QWORD *)&v457 = v37;
    v475.i64[0] = v32;
    v475.i64[1] = v31;
    *(_QWORD *)v476 = 0;
    *(_QWORD *)&v476[8] = v47;
    *(_QWORD *)&v476[16] = v35;
    *(_QWORD *)&v476[24] = 0;
    *(_QWORD *)&v476[32] = 0;
    *(_QWORD *)&v476[40] = KeyPath;
    *(_QWORD *)&v476[48] = 0;
    *(_QWORD *)&v476[56] = v37;
    v476[64] = 0;
    v458.i64[0] = v47;
    sub_24A75CDA0(v32, v31, 0, v47, v35, 0, 0, KeyPath, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
    sub_24A75C164();
    sub_24A75C1E0();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_QWORD *)&v476[72] = 0;
    *(_QWORD *)&v476[80] = 0;
    *(_QWORD *)&v476[64] = v472[48];
    LOWORD(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E428);
    sub_24A75C0F8();
    sub_24A75C25C();
    sub_24A77AB28();
    if (HIBYTE(v467))
      v88 = 256;
    else
      v88 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v466;
    LOWORD(v477) = v88 | v467;
    BYTE2(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
    sub_24A75C08C();
    sub_24A75C344();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    HIWORD(v477) = BYTE2(v473) != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v89 = *((_QWORD *)&v465 + 1);
    v444 = v465;
    v445 = *((_QWORD *)&v464 + 1);
    v90 = v466;
    v91 = v467 | (v468 << 16);
    v92 = v469;
    if (v469)
      v93 = 0x1000000;
    else
      v93 = 0;
    *(_QWORD *)&v454 = v460;
    v470 = (int64x2_t)v460;
    v452 = v461;
    v453.i64[0] = *((_QWORD *)&v460 + 1);
    v471 = v461;
    v450 = v462;
    v451 = *((_QWORD *)&v461 + 1);
    *(_OWORD *)v472 = v462;
    v448 = v463;
    v449 = *((_QWORD *)&v462 + 1);
    *(_OWORD *)&v472[16] = v463;
    v446 = v464;
    v447 = *((_QWORD *)&v463 + 1);
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v93 | v91;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D4A8((void *)v455.i64[0], v456.i64[0], 0, v458.i64[0], v35, 0, 0, v443, 0);
LABEL_61:
    sub_24A75D328(v454, v453.i64[0], v452, v451, v450, v449, v448, v447, v446, v445, v444, v89, v90, v91, SBYTE2(v91), SHIBYTE(v91), v92);
LABEL_62:
    v111 = v475;
    v112 = *(int64x2_t *)v476;
    v113 = *(int64x2_t *)&v476[16];
    v114 = *(int64x2_t *)&v476[32];
    v115 = *(int64x2_t *)&v476[48];
    v116 = *(int64x2_t *)&v476[64];
LABEL_63:
    v117 = *(_QWORD *)&v476[80];
    v118 = v477;
    v119 = v478;
LABEL_64:
    v120 = v459;
    *v459 = v111;
    v120[1] = v112;
    v120[2] = v113;
    v120[3] = v114;
    v120[4] = v115;
    v120[5] = v116;
    v120[6].i64[0] = v117;
    v120[6].i32[2] = v118;
    v120[6].i8[12] = v119;
    return;
  }
  v439 = a1;
  if (v28 == *MEMORY[0x24BEC5790])
  {
    v38 = sub_24A779274();
    if ((v39 & 1) != 0)
    {
      v44 = 0;
      v60 = 0;
      v41 = 0;
    }
    else
    {
      v40 = v38;
      v41 = (void *)sub_24A779244();
      if (v41)
      {
        v42 = swift_getKeyPath();
        v43 = v457;
        if ((_QWORD)v457)
        {
          v44 = (void *)v458.i64[0];
          v45 = (id)v458.i64[0];
          v46 = v43;
LABEL_53:
          swift_retain();
          v60 = 8;
          goto LABEL_54;
        }
        v103 = (void *)objc_opt_self();
        v44 = (void *)v458.i64[0];
        v104 = (id)v458.i64[0];
        v105 = v41;
        v106 = objc_msgSend(v103, sel_paceColors);
        if (v106)
        {
          v107 = v106;
          v108 = objc_msgSend(v106, sel_nonGradientTextColor);

          if (v108)
          {
            v46 = MEMORY[0x24BD189B8](v108);

            goto LABEL_53;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_303;
      }
      v44 = 0;
      v60 = 0;
    }
    v42 = 0;
    v40 = 0;
    v46 = 0;
LABEL_54:
    v443 = v40;
    v455.i64[0] = v42;
    v456.i64[0] = (uint64_t)v41;
    *(_QWORD *)&v457 = v46;
    v475.i64[0] = (uint64_t)v44;
    v475.i64[1] = v60;
    *(_QWORD *)v476 = v41;
    *(_QWORD *)&v476[8] = v42;
    *(_QWORD *)&v476[16] = 0;
    *(_QWORD *)&v476[24] = v40;
    memset(&v476[32], 0, 24);
    *(_QWORD *)&v476[56] = v46;
    v476[64] = 1;
    v458.i64[0] = v60;
    sub_24A75CE04(v44, v60, v41, v42, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
    sub_24A75C164();
    sub_24A75C1E0();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_QWORD *)&v476[72] = 0;
    *(_QWORD *)&v476[80] = 0;
    *(_QWORD *)&v476[64] = v472[48];
    LOWORD(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E428);
    sub_24A75C0F8();
    sub_24A75C25C();
    sub_24A77AB28();
    if (HIBYTE(v467))
      v109 = 256;
    else
      v109 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v466;
    LOWORD(v477) = v109 | v467;
    BYTE2(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
    sub_24A75C08C();
    sub_24A75C344();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    HIWORD(v477) = BYTE2(v473) != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v89 = *((_QWORD *)&v465 + 1);
    v444 = v465;
    v445 = *((_QWORD *)&v464 + 1);
    v90 = v466;
    v91 = v467 | (v468 << 16);
    v92 = v469;
    if (v469)
      v110 = 0x1000000;
    else
      v110 = 0;
    *(_QWORD *)&v454 = v460;
    v470 = (int64x2_t)v460;
    v452 = v461;
    v453.i64[0] = *((_QWORD *)&v460 + 1);
    v471 = v461;
    v450 = v462;
    v451 = *((_QWORD *)&v461 + 1);
    *(_OWORD *)v472 = v462;
    v448 = v463;
    v449 = *((_QWORD *)&v462 + 1);
    *(_OWORD *)&v472[16] = v463;
    v446 = v464;
    v447 = *((_QWORD *)&v463 + 1);
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v110 | v91;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D50C(v44, v458.i64[0], (void *)v456.i64[0], v455.i64[0], 0);
    goto LABEL_61;
  }
  if (v28 == *MEMORY[0x24BEC57A0])
  {
    v48 = sub_24A779274();
    if ((v49 & 1) != 0)
    {
      v51 = 0;
    }
    else
    {
      v50 = v48;
      v51 = (void *)sub_24A779244();
      if (v51)
      {
        v52 = swift_getKeyPath();
        v53 = swift_getKeyPath();
        v54 = swift_getKeyPath();
        v55 = v54;
        v56 = v457;
        if ((_QWORD)v457)
        {
          v57 = (void *)v458.i64[0];
          v58 = (id)v458.i64[0];
          v59 = v56;
LABEL_81:
          swift_retain();
          v70 = 12;
          goto LABEL_82;
        }
        v456.i64[0] = v54;
        v152 = (void *)objc_opt_self();
        v57 = (void *)v458.i64[0];
        v153 = (id)v458.i64[0];
        v154 = v51;
        v155 = objc_msgSend(v152, sel_powerColors);
        v156 = objc_msgSend(v155, sel_nonGradientTextColor);

        if (v156)
        {
          v59 = MEMORY[0x24BD189B8](v156);

          v55 = v456.i64[0];
          goto LABEL_81;
        }
        __break(1u);
        goto LABEL_305;
      }
    }
    v50 = 0;
    v70 = 0;
    v57 = 0;
    v52 = 0;
    v53 = 0;
    v55 = 0;
    v59 = 0;
LABEL_82:
    v458.i64[0] = (uint64_t)v57;
    v452 = v53;
    v453.i64[0] = (uint64_t)v51;
    *(_QWORD *)&v454 = v52;
    v455.i64[0] = v59;
    v456.i64[0] = v55;
    v475.i64[0] = (uint64_t)v51;
    v475.i64[1] = v50;
    *(_QWORD *)v476 = 0;
    *(_QWORD *)&v476[8] = v70;
    *(_QWORD *)&v476[16] = v57;
    *(_QWORD *)&v476[24] = 0;
    *(_QWORD *)&v476[32] = v52;
    *(_QWORD *)&v476[40] = 0;
    *(_QWORD *)&v476[48] = v53;
    *(_QWORD *)&v476[56] = 0;
    *(_QWORD *)&v476[64] = v55;
    *(_QWORD *)&v476[72] = 0;
    *(_QWORD *)&v476[80] = v59;
    LOBYTE(v477) = 0;
    *(_QWORD *)&v457 = v70;
    sub_24A75CE90(v51, v50, 0, v70, v57, 0, v52, 0, v53, 0, v55, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E438);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3E8);
    sub_24A75C2C8();
    sub_24A75C164();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOBYTE(v477) = v473;
    BYTE1(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E428);
    sub_24A75C0F8();
    sub_24A75C25C();
    sub_24A77AB28();
    if (HIBYTE(v467))
      v157 = 256;
    else
      v157 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v466;
    LOWORD(v477) = v157 | v467;
    BYTE2(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
    sub_24A75C08C();
    sub_24A75C344();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    HIWORD(v477) = BYTE2(v473) != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v158 = *((_QWORD *)&v465 + 1);
    v441 = v465;
    v442 = *((_QWORD *)&v464 + 1);
    v159 = v466;
    v160 = v467 | (v468 << 16);
    v161 = v469;
    if (v469)
      v162 = 0x1000000;
    else
      v162 = 0;
    v450 = *((_QWORD *)&v460 + 1);
    v451 = v460;
    v470 = (int64x2_t)v460;
    v448 = *((_QWORD *)&v461 + 1);
    v449 = v461;
    v471 = v461;
    v446 = *((_QWORD *)&v462 + 1);
    v447 = v462;
    *(_OWORD *)v472 = v462;
    v444 = *((_QWORD *)&v463 + 1);
    v445 = v463;
    *(_OWORD *)&v472[16] = v463;
    v443 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v162 | v160;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D598((void *)v453.i64[0], v50, 0, v457, (void *)v458.i64[0], 0, v454, 0, v452, 0, v456.i64[0], 0);
    sub_24A75D328(v451, v450, v449, v448, v447, v446, v445, v444, v443, v442, v441, v158, v159, v160, SBYTE2(v160), SHIBYTE(v160), v161);
    goto LABEL_62;
  }
  if (v28 == *MEMORY[0x24BEC57F0])
  {
    v61 = sub_24A779274();
    v62 = v457;
    if ((v63 & 1) != 0)
    {
      v65 = 0;
    }
    else
    {
      v64 = v61;
      v65 = sub_24A779244();
      if (v65)
      {
        v66 = swift_getKeyPath();
        if (v62)
        {
          v67 = (void *)v458.i64[0];
          v68 = (id)v458.i64[0];
          v69 = v62;
        }
        else
        {
          v184 = v456.i64[0];
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v454 + 104))(v456.i64[0], *MEMORY[0x24BDF3C28], v455.i64[0]);
          v67 = (void *)v458.i64[0];
          v185 = (id)v458.i64[0];
          v69 = MEMORY[0x24BD189AC](v184, 0.862745098, 0.549019608, 0.882352941, 1.0);
        }
        swift_retain();
        v94 = 15;
        goto LABEL_101;
      }
    }
    v64 = 0;
    v94 = 0;
    v67 = 0;
    v66 = 0;
    v69 = 0;
LABEL_101:
    v453.i64[0] = v66;
    *(_QWORD *)&v454 = v65;
    v455.i64[0] = v69;
    v475.i64[0] = v65;
    v475.i64[1] = v64;
    *(_QWORD *)v476 = 0;
    *(_QWORD *)&v476[8] = v94;
    *(_QWORD *)&v476[16] = v67;
    *(_QWORD *)&v476[24] = 0;
    *(_QWORD *)&v476[32] = 0;
    *(_QWORD *)&v476[40] = v66;
    *(_QWORD *)&v476[48] = 0;
    *(_QWORD *)&v476[56] = v69;
    memset(&v476[64], 0, 24);
    v458.i64[0] = (uint64_t)v67;
    *(_QWORD *)&v457 = v64;
    LOBYTE(v477) = 1;
    v456.i64[0] = v94;
    sub_24A75CDA0(v65, v64, 0, v94, v67, 0, 0, v66, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E438);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3E8);
    sub_24A75C2C8();
    sub_24A75C164();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOBYTE(v477) = v473;
    BYTE1(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E428);
    sub_24A75C0F8();
    sub_24A75C25C();
    sub_24A77AB28();
    if (HIBYTE(v467))
      v186 = 256;
    else
      v186 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v466;
    LOWORD(v477) = v186 | v467;
    BYTE2(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
    sub_24A75C08C();
    sub_24A75C344();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    HIWORD(v477) = BYTE2(v473) != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v443 = *((_QWORD *)&v464 + 1);
    v123 = *((_QWORD *)&v465 + 1);
    v122 = v465;
    v124 = v466;
    v125 = v467 | (v468 << 16);
    v126 = v469;
    if (v469)
      v187 = 0x1000000;
    else
      v187 = 0;
    v451 = *((_QWORD *)&v460 + 1);
    v452 = v460;
    v470 = (int64x2_t)v460;
    v449 = *((_QWORD *)&v461 + 1);
    v450 = v461;
    v471 = v461;
    v447 = *((_QWORD *)&v462 + 1);
    v448 = v462;
    *(_OWORD *)v472 = v462;
    v445 = *((_QWORD *)&v463 + 1);
    v446 = v463;
    *(_OWORD *)&v472[16] = v463;
    v444 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v187 | v125;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D4A8((void *)v454, v457, 0, v456.i64[0], (void *)v458.i64[0], 0, 0, v453.i64[0], 0);
    goto LABEL_108;
  }
  if (v28 == *MEMORY[0x24BEC5800])
  {
    v71 = sub_24A779274();
    if ((v72 & 1) != 0)
    {
      v73 = 0;
      v74 = 0;
      v85 = 0;
      v77 = 0;
      v84 = 0;
      v80 = 0;
    }
    else
    {
      v73 = v71;
      v74 = (id)v458.i64[0];
      v75 = sub_24A77925C();
      v77 = sub_24A75E338(v75, v76);
      v79 = v78;
      swift_bridgeObjectRelease();
      v80 = v457;
      if (!(_QWORD)v457)
      {
        v81 = objc_msgSend((id)objc_opt_self(), sel_distanceColors);
        if (!v81)
        {
LABEL_305:
          __break(1u);
          goto LABEL_306;
        }
        v82 = v81;
        v83 = objc_msgSend(v81, sel_nonGradientTextColor);

        if (!v83)
        {
LABEL_306:
          __break(1u);
          goto LABEL_307;
        }
        v80 = MEMORY[0x24BD189B8](v83);
      }
      v84 = v79 & 1;
      swift_retain();
      v85 = 1;
    }
    v453.i64[0] = (uint64_t)v74;
    *(_QWORD *)&v454 = v77;
    v455.i64[0] = v73;
    v456.i64[0] = v80;
    *(_QWORD *)&v457 = v84;
    v475.i64[0] = v73;
    v475.i64[1] = (uint64_t)v74;
    *(_QWORD *)v476 = v85;
    *(_QWORD *)&v476[8] = v77;
    *(_QWORD *)&v476[16] = v84;
    *(_QWORD *)&v476[24] = 0;
    *(_QWORD *)&v476[32] = 0;
    *(_QWORD *)&v476[40] = v80;
    v476[48] = 0;
    v458.i64[0] = v85;
    sub_24A75CF28(v73, v74);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E478);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E498);
    sub_24A75C41C();
    sub_24A75C498();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_QWORD *)&v476[48] = v472[32];
    memset(&v476[56], 0, 26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E468);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4B8);
    sub_24A75C3B0();
    sub_24A75C514();
    sub_24A77AB28();
    v121 = 256;
    if (!BYTE1(v466))
      v121 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v121 | v466;
    LOWORD(v477) = 0;
    BYTE2(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
    sub_24A75C08C();
    sub_24A75C344();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    HIWORD(v477) = BYTE2(v473) != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v443 = *((_QWORD *)&v464 + 1);
    v123 = *((_QWORD *)&v465 + 1);
    v122 = v465;
    v124 = v466;
    v125 = v467 | (v468 << 16);
    v126 = v469;
    if (v469)
      v127 = 0x1000000;
    else
      v127 = 0;
    v451 = *((_QWORD *)&v460 + 1);
    v452 = v460;
    v470 = (int64x2_t)v460;
    v449 = *((_QWORD *)&v461 + 1);
    v450 = v461;
    v471 = v461;
    v447 = *((_QWORD *)&v462 + 1);
    v448 = v462;
    *(_OWORD *)v472 = v462;
    v445 = *((_QWORD *)&v463 + 1);
    v446 = v463;
    *(_OWORD *)&v472[16] = v463;
    v444 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v127 | v125;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D670(v455.i64[0], (void *)v453.i64[0]);
    goto LABEL_108;
  }
  if (v28 == *MEMORY[0x24BEC57E0])
  {
    v95 = sub_24A779274();
    v96 = (void *)v458.i64[0];
    if ((v97 & 1) != 0)
    {
      v98 = 0;
      v163 = 0;
      v96 = 0;
      v99 = 0;
      v102 = 0;
LABEL_119:
      *(_QWORD *)&v454 = v99;
      v455.i64[0] = v98;
      v456.i64[0] = v102;
      v475.i64[0] = v98;
      v475.i64[1] = v163;
      *(_QWORD *)v476 = v163;
      *(_QWORD *)&v476[8] = v96;
      *(_QWORD *)&v476[16] = v99;
      *(_QWORD *)&v476[24] = 0;
      *(_QWORD *)&v476[32] = v102;
      *(_QWORD *)&v476[40] = 0;
      v458.i64[0] = (uint64_t)v96;
      v476[48] = 1;
      *(_QWORD *)&v457 = v163;
      sub_24A75CF6C(v98, v163, v163, v96, v99, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E478);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E498);
      sub_24A75C41C();
      sub_24A75C498();
      sub_24A77AB28();
      v475 = v470;
      *(_OWORD *)v476 = v471;
      *(_OWORD *)&v476[16] = *(_OWORD *)v472;
      *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
      *(_QWORD *)&v476[48] = v472[32];
      memset(&v476[56], 0, 26);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E468);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4B8);
      sub_24A75C3B0();
      sub_24A75C514();
      sub_24A77AB28();
      v199 = 256;
      if (!BYTE1(v466))
        v199 = 0;
      v475 = (int64x2_t)v460;
      *(_OWORD *)v476 = v461;
      *(_OWORD *)&v476[16] = v462;
      *(_OWORD *)&v476[32] = v463;
      *(_OWORD *)&v476[48] = v464;
      *(_OWORD *)&v476[64] = v465;
      *(_QWORD *)&v476[80] = v199 | v466;
      LOWORD(v477) = 0;
      BYTE2(v477) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
      sub_24A75C08C();
      sub_24A75C344();
      sub_24A77AB28();
      v475 = v470;
      *(_OWORD *)v476 = v471;
      *(_OWORD *)&v476[16] = *(_OWORD *)v472;
      *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
      *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
      *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
      *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
      LOWORD(v477) = v473;
      HIWORD(v477) = BYTE2(v473) != 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
      sub_24A75C020();
      sub_24A75C6D0();
      sub_24A77AB28();
      v444 = *((_QWORD *)&v464 + 1);
      v200 = v465;
      v201 = v466;
      v202 = v467 | (v468 << 16);
      v203 = v469;
      if (v469)
        v204 = 0x1000000;
      else
        v204 = 0;
      v452 = *((_QWORD *)&v460 + 1);
      v453.i64[0] = v460;
      v470 = (int64x2_t)v460;
      v450 = *((_QWORD *)&v461 + 1);
      v451 = v461;
      v471 = v461;
      v448 = *((_QWORD *)&v462 + 1);
      v449 = v462;
      *(_OWORD *)v472 = v462;
      v446 = *((_QWORD *)&v463 + 1);
      v447 = v463;
      *(_OWORD *)&v472[16] = v463;
      v445 = v464;
      *(_OWORD *)&v472[32] = v464;
      *(_OWORD *)&v472[48] = v465;
      *(_QWORD *)&v472[64] = v466;
      v473 = v204 | v202;
      v474 = 0;
      sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
      sub_24A75BFB4();
      sub_24A75CB70();
      sub_24A77AB28();
      sub_24A75D6A8(v455.i64[0], v457, v457, (void *)v458.i64[0], v454, 0);
      sub_24A75D328(v453.i64[0], v452, v451, v450, v449, v448, v447, v446, v445, v444, v200, *((uint64_t *)&v200 + 1), v201, v202, SBYTE2(v202), SHIBYTE(v202), v203);
      goto LABEL_62;
    }
    v98 = v95;
    v99 = swift_getKeyPath();
    v100 = v457;
    if ((_QWORD)v457)
    {
      v101 = v96;
      v102 = v100;
LABEL_118:
      swift_retain();
      v163 = 1;
      goto LABEL_119;
    }
    v194 = (void *)objc_opt_self();
    v195 = v96;
    v196 = objc_msgSend(v194, sel_energyColors);
    if (v196)
    {
      v197 = v196;
      v198 = objc_msgSend(v196, sel_nonGradientTextColor);

      if (v198)
      {
        v102 = MEMORY[0x24BD189B8](v198);
        goto LABEL_118;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_310;
  }
  if (v28 == *MEMORY[0x24BEC57F8])
  {
    sub_24A77925C();
    if (v128)
    {
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v129 = (id)qword_2544D6158;
      v130 = sub_24A77856C();
      v132 = v131;
      swift_bridgeObjectRelease();

      v475.i64[0] = v130;
      v475.i64[1] = v132;
      sub_24A645928();
      v133 = sub_24A77BE54();
      v135 = v134;
      swift_bridgeObjectRelease();
      _s9WorkoutUI15LayoutUtilitiesV12layoutMetric9compact389regular428junior408senior4411aloeSmall410K5Big457agave4912CoreGraphics7CGFloatVAN_A6NtFZ_0();
      v137 = v136;
      v475.i64[0] = v133;
      v475.i64[1] = v135;
      v138 = sub_24A77AFD8();
      v140 = v139;
      v142 = v141;
      v144 = v143 & 1;
      v145 = v457;
      if (!(_QWORD)v457)
        v145 = sub_24A77B368();
      v146 = v137;
      swift_retain();
      v147 = 0x4036000000000000;
      v148 = 0x4068B00000000000;
      v149 = 0x4028000000000000;
      v150 = 0x4020000000000000;
      v151 = 0xC000000000000000;
    }
    else
    {
      v138 = 0;
      v140 = 0;
      v144 = 0;
      v142 = 0;
      v146 = 0;
      v151 = 0;
      v150 = 0;
      v149 = 0;
      v148 = 0;
      v147 = 0;
      v145 = 0;
    }
    v448 = v145;
    v449 = v146;
    v450 = v144;
    v451 = v142;
    v452 = v140;
    v453.i64[0] = v138;
    *(_QWORD *)&v454 = v147;
    v455.i64[0] = v148;
    v475.i64[0] = v138;
    v475.i64[1] = v140;
    *(_QWORD *)v476 = v144;
    *(_QWORD *)&v476[8] = v142;
    *(_QWORD *)&v476[16] = v146;
    *(_QWORD *)&v476[24] = v151;
    *(_QWORD *)&v476[32] = v150;
    *(_QWORD *)&v476[40] = v149;
    *(_QWORD *)&v476[48] = v148;
    *(_QWORD *)&v476[56] = 0;
    *(_QWORD *)&v476[64] = v147;
    *(_QWORD *)&v476[72] = v145;
    v476[80] = 0;
    v456.i64[0] = v151;
    *(_QWORD *)&v457 = v150;
    v458.i64[0] = v149;
    sub_24A75CFDC(v138, v140, v144, v142);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4F8);
    sub_24A67047C(&qword_25794E4C0, &qword_25794E4C8, (uint64_t (*)(void))sub_24A75C5B0);
    sub_24A67047C(&qword_25794E4F0, &qword_25794E4F8, (uint64_t (*)(void))sub_24A75C64C);
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    v476[80] = v472[64];
    v476[81] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E468);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4B8);
    sub_24A75C3B0();
    sub_24A75C514();
    sub_24A77AB28();
    v205 = 256;
    if (!BYTE1(v466))
      v205 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v205 | v466;
    LOWORD(v477) = 0;
    BYTE2(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
    sub_24A75C08C();
    sub_24A75C344();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    HIWORD(v477) = BYTE2(v473) != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v438 = *((_QWORD *)&v464 + 1);
    v206 = v465;
    v207 = v466;
    v208 = v467 | (v468 << 16);
    v209 = v469;
    if (v469)
      v210 = 0x1000000;
    else
      v210 = 0;
    v446 = *((_QWORD *)&v460 + 1);
    v447 = v460;
    v470 = (int64x2_t)v460;
    v444 = *((_QWORD *)&v461 + 1);
    v445 = v461;
    v471 = v461;
    v442 = *((_QWORD *)&v462 + 1);
    v443 = v462;
    *(_OWORD *)v472 = v462;
    v440 = *((_QWORD *)&v463 + 1);
    v441 = v463;
    *(_OWORD *)&v472[16] = v463;
    v439 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v210 | v208;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D718(v453.i64[0], v452, v450, v451);
    sub_24A75D328(v447, v446, v445, v444, v443, v442, v441, v440, v439, v438, v206, *((uint64_t *)&v206 + 1), v207, v208, SBYTE2(v208), SHIBYTE(v208), v209);
    goto LABEL_62;
  }
  if (v28 == *MEMORY[0x24BEC5810])
  {
    v164 = sub_24A779274();
    if ((v165 & 1) != 0)
    {
      v173 = 0;
      v174 = 0;
      v176 = 0;
      v178 = 0;
      v183 = 0;
      v179 = 0;
    }
    else
    {
      v470.i64[0] = v164;
      sub_24A77886C();
      sub_24A6971B4();
      sub_24A7785E4();
      v167 = v451;
      v166 = v452;
      v168 = v453.i64[0];
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v452 + 104))(v451, *MEMORY[0x24BEE38E8], v453.i64[0]);
      v169 = v447;
      MEMORY[0x24BD15C28](v167, 0, 1, v447);
      (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v167, v168);
      v170 = *(void (**)(char *, uint64_t))(v14 + 8);
      v170(v16, v169);
      v171 = v448;
      sub_24A778668();
      v172 = v446;
      MEMORY[0x24BD15C34](v171, v169);
      (*(void (**)(uint64_t, uint64_t))(v449 + 8))(v171, v450);
      v170(v19, v169);
      sub_24A63CFF0((unint64_t *)&qword_257949CD8, &qword_257949CC8, MEMORY[0x24BDCD4C0]);
      sub_24A77B8E4();
      v170((char *)v172, v169);
      v174 = v475.i64[1];
      v173 = v475.i64[0];
      if (qword_2544D6160 != -1)
        swift_once();
      swift_beginAccess();
      v175 = (id)qword_2544D6158;
      v176 = sub_24A77856C();
      v178 = v177;

      v179 = v457;
      if (!(_QWORD)v457)
      {
        v180 = objc_msgSend((id)objc_opt_self(), sel_heartRateColors);
        if (!v180)
        {
LABEL_313:
          __break(1u);
          goto LABEL_314;
        }
        v181 = v180;
        v182 = objc_msgSend(v180, sel_nonGradientTextColor);

        if (!v182)
        {
LABEL_314:
          __break(1u);
LABEL_315:
          __break(1u);
          goto LABEL_316;
        }
        v179 = MEMORY[0x24BD189B8](v182);
      }
      v183 = swift_getKeyPath();
      swift_retain();
    }
    v453.i64[0] = v178;
    *(_QWORD *)&v454 = v176;
    v455.i64[0] = v174;
    v456.i64[0] = v179;
    *(_QWORD *)&v457 = v183;
    v475.i64[0] = v173;
    v475.i64[1] = v174;
    v458.i64[0] = v173;
    *(_QWORD *)v476 = v176;
    *(_QWORD *)&v476[8] = v178;
    memset(&v476[16], 0, 24);
    *(_QWORD *)&v476[40] = v183;
    *(_QWORD *)&v476[48] = v179;
    memset(&v476[56], 0, 24);
    v476[80] = 1;
    sub_24A75D018(v173, v174);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4F8);
    sub_24A67047C(&qword_25794E4C0, &qword_25794E4C8, (uint64_t (*)(void))sub_24A75C5B0);
    sub_24A67047C(&qword_25794E4F0, &qword_25794E4F8, (uint64_t (*)(void))sub_24A75C64C);
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    v476[80] = v472[64];
    v476[81] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E468);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E4B8);
    sub_24A75C3B0();
    sub_24A75C514();
    sub_24A77AB28();
    v211 = 256;
    if (!BYTE1(v466))
      v211 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v211 | v466;
    LOWORD(v477) = 0;
    BYTE2(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E458);
    sub_24A75C08C();
    sub_24A75C344();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    HIWORD(v477) = BYTE2(v473) != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v443 = *((_QWORD *)&v464 + 1);
    v123 = *((_QWORD *)&v465 + 1);
    v122 = v465;
    v124 = v466;
    v125 = v467 | (v468 << 16);
    v212 = v469;
    if (v469)
      v213 = 0x1000000;
    else
      v213 = 0;
    v451 = *((_QWORD *)&v460 + 1);
    v452 = v460;
    v470 = (int64x2_t)v460;
    v449 = *((_QWORD *)&v461 + 1);
    v450 = v461;
    v471 = v461;
    v447 = *((_QWORD *)&v462 + 1);
    v448 = v462;
    *(_OWORD *)v472 = v462;
    v445 = *((_QWORD *)&v463 + 1);
    v446 = v463;
    *(_OWORD *)&v472[16] = v463;
    v444 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v213 | v125;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D754(v458.i64[0], v455.i64[0]);
    v434 = v212;
LABEL_109:
    sub_24A75D328(v452, v451, v450, v449, v448, v447, v446, v445, v444, v443, v122, v123, v124, v125, SBYTE2(v125), SHIBYTE(v125), v434);
    goto LABEL_62;
  }
  if (v28 == *MEMORY[0x24BEC57C8])
  {
    sub_24A77925C();
    v188 = v457;
    if (v189)
    {
      v190 = sub_24A77B3C8();
      v191 = v188;
      if (!v188)
        v191 = sub_24A77B368();
      v192 = swift_getKeyPath();
      swift_retain();
      v193 = 256;
    }
    else
    {
      v190 = 0;
      v191 = 0;
      v193 = 0;
      v192 = 0;
    }
    v456.i64[0] = v191;
    *(_QWORD *)&v457 = v190;
    v475.i64[0] = v190;
    v475.i64[1] = v191;
    *(_QWORD *)v476 = v193;
    *(_QWORD *)&v476[8] = v192;
    memset(&v476[16], 0, 49);
    v458.i64[0] = v193;
    sub_24A75D188(v190, v191, v193, v192, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E548);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
    sub_24A67047C(&qword_25794E540, &qword_25794E548, (uint64_t (*)(void))sub_24A75C82C);
    sub_24A75C1E0();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_QWORD *)&v476[72] = 0;
    *(_QWORD *)&v476[80] = 0;
    *(_QWORD *)&v476[64] = v472[48];
    LOWORD(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E538);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E568);
    sub_24A75C7A8();
    sub_24A75C898();
    sub_24A77AB28();
    if (HIBYTE(v467))
      v232 = 256;
    else
      v232 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v466;
    LOWORD(v477) = v232 | v467;
    BYTE2(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
    sub_24A75C73C();
    sub_24A75C904();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    BYTE2(v477) = BYTE2(v473) != 0;
    HIBYTE(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v233 = *((_QWORD *)&v465 + 1);
    v445 = v465;
    v446 = *((_QWORD *)&v464 + 1);
    v234 = v466;
    v235 = v467 | (v468 << 16);
    v236 = v469;
    if (v469)
      v237 = 0x1000000;
    else
      v237 = 0;
    v455.i64[0] = v460;
    v470 = (int64x2_t)v460;
    *(_QWORD *)&v454 = *((_QWORD *)&v460 + 1);
    v452 = *((_QWORD *)&v461 + 1);
    v453.i64[0] = v461;
    v471 = v461;
    v450 = *((_QWORD *)&v462 + 1);
    v451 = v462;
    *(_OWORD *)v472 = v462;
    v448 = *((_QWORD *)&v463 + 1);
    v449 = v463;
    *(_OWORD *)&v472[16] = v463;
    v447 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v237 | v235;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A75D878(v457, v456.i64[0], v458.i64[0], v192, 0);
    sub_24A75D328(v455.i64[0], v454, v453.i64[0], v452, v451, v450, v449, v448, v447, v446, v445, v233, v234, v235, SBYTE2(v235), SHIBYTE(v235), v236);
    goto LABEL_62;
  }
  v214 = v457;
  if (v28 == *MEMORY[0x24BEC57B8])
  {
    v215 = sub_24A779274();
    if ((v216 & 1) != 0)
    {
      v221 = 0;
      v238 = 0;
      v218 = 0;
    }
    else
    {
      v217 = v215;
      v218 = (void *)sub_24A779244();
      if (v218)
      {
        v219 = swift_getKeyPath();
        v220 = v219;
        if (v214)
        {
          v221 = (void *)v458.i64[0];
          v222 = (id)v458.i64[0];
          v223 = v214;
        }
        else
        {
          v275 = v219;
          v276 = v217;
          v277 = (void *)objc_opt_self();
          v278 = (id)v458.i64[0];
          v279 = v218;
          v280 = objc_msgSend(v277, sel_paceColors);
          if (!v280)
          {
LABEL_318:
            __break(1u);
            goto LABEL_319;
          }
          v281 = v280;
          v282 = objc_msgSend(v280, sel_nonGradientTextColor);

          if (!v282)
          {
LABEL_319:
            __break(1u);
            goto LABEL_320;
          }
          v223 = MEMORY[0x24BD189B8](v282);

          v221 = (void *)v458.i64[0];
          v217 = v276;
          v220 = v275;
        }
        swift_retain();
        v238 = 4;
        goto LABEL_184;
      }
      v221 = 0;
      v238 = 0;
    }
    v220 = 0;
    v217 = 0;
    v223 = 0;
LABEL_184:
    v453.i64[0] = v223;
    *(_QWORD *)&v454 = v218;
    v455.i64[0] = v217;
    v475.i64[0] = (uint64_t)v221;
    v475.i64[1] = v238;
    *(_QWORD *)v476 = v218;
    *(_QWORD *)&v476[8] = v220;
    *(_QWORD *)&v476[16] = 0;
    *(_QWORD *)&v476[24] = v217;
    memset(&v476[32], 0, 24);
    *(_QWORD *)&v476[56] = v223;
    v458.i64[0] = (uint64_t)v221;
    *(_QWORD *)&v457 = v220;
    v476[64] = 1;
    v456.i64[0] = v238;
    sub_24A75CE04(v221, v238, v218, v220, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E548);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
    sub_24A67047C(&qword_25794E540, &qword_25794E548, (uint64_t (*)(void))sub_24A75C82C);
    sub_24A75C1E0();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_QWORD *)&v476[72] = 0;
    *(_QWORD *)&v476[80] = 0;
    *(_QWORD *)&v476[64] = v472[48];
    LOWORD(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E538);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E568);
    sub_24A75C7A8();
    sub_24A75C898();
    sub_24A77AB28();
    if (HIBYTE(v467))
      v283 = 256;
    else
      v283 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v466;
    LOWORD(v477) = v283 | v467;
    BYTE2(v477) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
    sub_24A75C73C();
    sub_24A75C904();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    BYTE2(v477) = BYTE2(v473) != 0;
    HIBYTE(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v443 = *((_QWORD *)&v464 + 1);
    v123 = *((_QWORD *)&v465 + 1);
    v122 = v465;
    v124 = v466;
    v125 = v467 | (v468 << 16);
    v126 = v469;
    if (v469)
      v284 = 0x1000000;
    else
      v284 = 0;
    v451 = *((_QWORD *)&v460 + 1);
    v452 = v460;
    v470 = (int64x2_t)v460;
    v449 = *((_QWORD *)&v461 + 1);
    v450 = v461;
    v471 = v461;
    v447 = *((_QWORD *)&v462 + 1);
    v448 = v462;
    *(_OWORD *)v472 = v462;
    v445 = *((_QWORD *)&v463 + 1);
    v446 = v463;
    *(_OWORD *)&v472[16] = v463;
    v444 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v284 | v125;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    v285 = (void *)v458.i64[0];
    v286 = v456.i64[0];
    v287 = (void *)v454;
    v288 = v457;
LABEL_191:
    sub_24A75D50C(v285, v286, v287, v288, 0);
LABEL_108:
    v434 = v126;
    goto LABEL_109;
  }
  if (v28 == *MEMORY[0x24BEC57B0])
  {
    v224 = sub_24A779274();
    if ((v225 & 1) != 0)
    {
      v229 = 0;
      v249 = 0;
      v227 = 0;
    }
    else
    {
      v226 = v224;
      v227 = (void *)sub_24A779244();
      if (v227)
      {
        v228 = swift_getKeyPath();
        v229 = (void *)v458.i64[0];
        if (v214)
        {
          v230 = (id)v458.i64[0];
          v231 = v214;
        }
        else
        {
          v306 = v226;
          v307 = (void *)objc_opt_self();
          v308 = v229;
          v309 = v227;
          v310 = v227;
          v311 = objc_msgSend(v307, sel_paceColors);
          if (!v311)
          {
LABEL_320:
            __break(1u);
            goto LABEL_321;
          }
          v312 = v311;
          v313 = objc_msgSend(v311, sel_nonGradientTextColor);

          if (!v313)
          {
LABEL_321:
            __break(1u);
            goto LABEL_322;
          }
          v231 = MEMORY[0x24BD189B8](v313);

          v229 = (void *)v458.i64[0];
          v226 = v306;
          v227 = v309;
        }
        swift_retain();
        v289 = 1;
        v249 = 4;
LABEL_205:
        v453.i64[0] = v228;
        v458.i64[0] = (uint64_t)v229;
        *(_QWORD *)&v454 = v226;
        v455.i64[0] = (uint64_t)v227;
        v475.i64[0] = (uint64_t)v229;
        v475.i64[1] = v249;
        *(_QWORD *)v476 = v227;
        *(_QWORD *)&v476[8] = v228;
        *(_QWORD *)&v476[16] = 0;
        *(_QWORD *)&v476[24] = v226;
        *(_QWORD *)&v476[32] = v289;
        *(_QWORD *)&v476[40] = 0;
        *(_QWORD *)&v476[48] = 0;
        *(_QWORD *)&v476[56] = v231;
        memset(&v476[64], 0, 24);
        LOBYTE(v477) = 0;
        *(_QWORD *)&v457 = v249;
        v456.i64[0] = v289;
        sub_24A75CE04(v229, v249, v227, v228, 0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E438);
        sub_24A75C1E0();
        sub_24A75C2C8();
        sub_24A77AB28();
        v475 = v470;
        *(_OWORD *)v476 = v471;
        *(_OWORD *)&v476[16] = *(_OWORD *)v472;
        *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
        *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
        *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
        *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
        LOBYTE(v477) = v473;
        BYTE1(v477) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E538);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E568);
        sub_24A75C7A8();
        sub_24A75C898();
        sub_24A77AB28();
        if (HIBYTE(v467))
          v314 = 256;
        else
          v314 = 0;
        v475 = (int64x2_t)v460;
        *(_OWORD *)v476 = v461;
        *(_OWORD *)&v476[16] = v462;
        *(_OWORD *)&v476[32] = v463;
        *(_OWORD *)&v476[48] = v464;
        *(_OWORD *)&v476[64] = v465;
        *(_QWORD *)&v476[80] = v466;
        LOWORD(v477) = v314 | v467;
        BYTE2(v477) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
        sub_24A75C73C();
        sub_24A75C904();
        sub_24A77AB28();
        v475 = v470;
        *(_OWORD *)v476 = v471;
        *(_OWORD *)&v476[16] = *(_OWORD *)v472;
        *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
        *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
        *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
        *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
        LOWORD(v477) = v473;
        BYTE2(v477) = BYTE2(v473) != 0;
        HIBYTE(v477) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
        sub_24A75C020();
        sub_24A75C6D0();
        sub_24A77AB28();
        v315 = *((_QWORD *)&v465 + 1);
        v442 = v465;
        v443 = *((_QWORD *)&v464 + 1);
        v316 = v466;
        v317 = v467 | (v468 << 16);
        v318 = v469;
        if (v469)
          v319 = 0x1000000;
        else
          v319 = 0;
        v451 = *((_QWORD *)&v460 + 1);
        v452 = v460;
        v470 = (int64x2_t)v460;
        v449 = *((_QWORD *)&v461 + 1);
        v450 = v461;
        v471 = v461;
        v447 = *((_QWORD *)&v462 + 1);
        v448 = v462;
        *(_OWORD *)v472 = v462;
        v445 = *((_QWORD *)&v463 + 1);
        v446 = v463;
        *(_OWORD *)&v472[16] = v463;
        v444 = v464;
        *(_OWORD *)&v472[32] = v464;
        *(_OWORD *)&v472[48] = v465;
        *(_QWORD *)&v472[64] = v466;
        v473 = v319 | v317;
        v474 = 0;
        sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
        sub_24A75BFB4();
        sub_24A75CB70();
        sub_24A77AB28();
        sub_24A75D50C((void *)v458.i64[0], v457, (void *)v455.i64[0], v453.i64[0], 0);
        sub_24A75D328(v452, v451, v450, v449, v448, v447, v446, v445, v444, v443, v442, v315, v316, v317, SBYTE2(v317), SHIBYTE(v317), v318);
        goto LABEL_62;
      }
      v229 = 0;
      v249 = 0;
    }
    v228 = 0;
    v226 = 0;
    v289 = 0;
    v231 = 0;
    goto LABEL_205;
  }
  if (v28 == *MEMORY[0x24BEC57D0])
  {
    v239 = sub_24A779274();
    if ((v240 & 1) != 0)
    {
      v242 = 0;
    }
    else
    {
      v241 = v239;
      v242 = (void *)sub_24A779244();
      if (v242)
      {
        v243 = swift_getKeyPath();
        v244 = swift_getKeyPath();
        v245 = swift_getKeyPath();
        if (v214)
        {
          v246 = (void *)v458.i64[0];
          v247 = (id)v458.i64[0];
          v248 = v214;
        }
        else
        {
          v343 = (void *)objc_opt_self();
          v344 = (id)v458.i64[0];
          v345 = v242;
          v346 = objc_msgSend(v343, sel_powerColors);
          v347 = objc_msgSend(v346, sel_nonGradientTextColor);

          if (!v347)
          {
LABEL_322:
            __break(1u);
            goto LABEL_323;
          }
          v248 = MEMORY[0x24BD189B8](v347);

          v246 = (void *)v458.i64[0];
        }
        swift_retain();
        v267 = 11;
        v266 = v241;
LABEL_227:
        v451 = v248;
        v452 = v245;
        *(_QWORD *)&v454 = v244;
        v475.i64[0] = (uint64_t)v242;
        v475.i64[1] = v266;
        *(_QWORD *)v476 = 0;
        *(_QWORD *)&v476[8] = v267;
        *(_QWORD *)&v476[16] = v246;
        *(_QWORD *)&v476[24] = 0;
        *(_QWORD *)&v476[32] = v243;
        *(_QWORD *)&v476[40] = 0;
        *(_QWORD *)&v476[48] = v244;
        *(_QWORD *)&v476[56] = 0;
        *(_QWORD *)&v476[64] = v245;
        *(_QWORD *)&v476[72] = 0;
        *(_QWORD *)&v476[80] = v248;
        v458.i64[0] = (uint64_t)v246;
        LOBYTE(v477) = 1;
        *(_QWORD *)&v457 = v266;
        v453.i64[0] = (uint64_t)v242;
        v455.i64[0] = v267;
        v456.i64[0] = v243;
        sub_24A75CE90(v242, v266, 0, v267, v246, 0, v243, 0, v244, 0, v245, 0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E438);
        sub_24A75C1E0();
        sub_24A75C2C8();
        sub_24A77AB28();
        v475 = v470;
        *(_OWORD *)v476 = v471;
        *(_OWORD *)&v476[16] = *(_OWORD *)v472;
        *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
        *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
        *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
        *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
        LOBYTE(v477) = v473;
        BYTE1(v477) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E538);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E568);
        sub_24A75C7A8();
        sub_24A75C898();
        sub_24A77AB28();
        if (HIBYTE(v467))
          v348 = 256;
        else
          v348 = 0;
        v475 = (int64x2_t)v460;
        *(_OWORD *)v476 = v461;
        *(_OWORD *)&v476[16] = v462;
        *(_OWORD *)&v476[32] = v463;
        *(_OWORD *)&v476[48] = v464;
        *(_OWORD *)&v476[64] = v465;
        *(_QWORD *)&v476[80] = v466;
        LOWORD(v477) = v348 | v467;
        BYTE2(v477) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
        sub_24A75C73C();
        sub_24A75C904();
        sub_24A77AB28();
        v475 = v470;
        *(_OWORD *)v476 = v471;
        *(_OWORD *)&v476[16] = *(_OWORD *)v472;
        *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
        *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
        *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
        *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
        LOWORD(v477) = v473;
        BYTE2(v477) = BYTE2(v473) != 0;
        HIBYTE(v477) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
        sub_24A75C020();
        sub_24A75C6D0();
        sub_24A77AB28();
        v441 = *((_QWORD *)&v464 + 1);
        v349 = v465;
        v350 = v466;
        v351 = v467 | (v468 << 16);
        v352 = v469;
        if (v469)
          v353 = 0x1000000;
        else
          v353 = 0;
        v449 = *((_QWORD *)&v460 + 1);
        v450 = v460;
        v470 = (int64x2_t)v460;
        v447 = *((_QWORD *)&v461 + 1);
        v448 = v461;
        v471 = v461;
        v445 = *((_QWORD *)&v462 + 1);
        v446 = v462;
        *(_OWORD *)v472 = v462;
        v443 = *((_QWORD *)&v463 + 1);
        v444 = v463;
        *(_OWORD *)&v472[16] = v463;
        v442 = v464;
        *(_OWORD *)&v472[32] = v464;
        *(_OWORD *)&v472[48] = v465;
        *(_QWORD *)&v472[64] = v466;
        v473 = v353 | v351;
        v474 = 0;
        sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
        sub_24A75BFB4();
        sub_24A75CB70();
        sub_24A77AB28();
        sub_24A75D598((void *)v453.i64[0], v457, 0, v455.i64[0], (void *)v458.i64[0], 0, v456.i64[0], 0, v454, 0, v452, 0);
        sub_24A75D328(v450, v449, v448, v447, v446, v445, v444, v443, v442, v441, v349, *((uint64_t *)&v349 + 1), v350, v351, SBYTE2(v351), SHIBYTE(v351), v352);
        goto LABEL_62;
      }
    }
    v266 = 0;
    v267 = 0;
    v246 = 0;
    v243 = 0;
    v244 = 0;
    v245 = 0;
    v248 = 0;
    goto LABEL_227;
  }
  if (v28 == *MEMORY[0x24BEC5808])
  {
    *(double *)&v250 = COERCE_DOUBLE(sub_24A779274());
    if ((v251 & 1) != 0)
    {
      v290 = 0;
      v291 = 0;
      v292 = 0;
      v293 = 0;
      v294 = 0;
      v295 = 0;
      v296 = 0;
      v297 = 0;
      v298 = 255;
LABEL_259:
      v475.i64[0] = v290;
      v475.i64[1] = v291;
      v458.i64[0] = v290;
      *(_QWORD *)&v457 = v291;
      LODWORD(v450) = v298;
      *(_QWORD *)v476 = v292;
      *(_QWORD *)&v476[8] = v293;
      v451 = v292;
      v452 = v297;
      v456.i64[0] = v293;
      *(_QWORD *)&v476[16] = v294;
      *(_QWORD *)&v476[24] = v295;
      v455.i64[0] = v294;
      *(_QWORD *)&v454 = v295;
      *(_QWORD *)&v476[32] = v296;
      *(_QWORD *)&v476[40] = v297;
      v453.i64[0] = v296;
      *(_QWORD *)&v476[48] = v298;
      *(_QWORD *)&v476[56] = 0;
      v476[64] = 0;
      sub_24A75D1FC(v290, v291, v292, v293, v294, v295, v296, v297, v298);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E598);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
      sub_24A67047C(&qword_25794E590, &qword_25794E598, (uint64_t (*)(void))sub_24A75C9F4);
      sub_24A75C1E0();
      sub_24A77AB28();
      v475 = v470;
      *(_OWORD *)v476 = v471;
      *(_OWORD *)&v476[16] = *(_OWORD *)v472;
      *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
      *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
      *(_QWORD *)&v476[64] = v472[48];
      *(_QWORD *)&v476[72] = 0;
      *(_WORD *)&v476[80] = 0;
      v476[82] = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E588);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E5B8);
      sub_24A75C970();
      sub_24A75CA70();
      sub_24A77AB28();
      if (BYTE2(v466))
        v373 = 0x10000;
      else
        v373 = 0;
      v475 = (int64x2_t)v460;
      *(_OWORD *)v476 = v461;
      *(_OWORD *)&v476[16] = v462;
      *(_OWORD *)&v476[32] = v463;
      *(_OWORD *)&v476[48] = v464;
      *(_OWORD *)&v476[64] = v465;
      *(_QWORD *)&v476[80] = v373 | (unsigned __int16)v466;
      LOWORD(v477) = 0;
      BYTE2(v477) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
      sub_24A75C73C();
      sub_24A75C904();
      sub_24A77AB28();
      v475 = v470;
      *(_OWORD *)v476 = v471;
      *(_OWORD *)&v476[16] = *(_OWORD *)v472;
      *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
      *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
      *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
      *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
      LOWORD(v477) = v473;
      BYTE2(v477) = BYTE2(v473) != 0;
      HIBYTE(v477) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
      sub_24A75C020();
      sub_24A75C6D0();
      sub_24A77AB28();
      v440 = *((_QWORD *)&v464 + 1);
      v374 = v465;
      v375 = v466;
      v376 = v467 | (v468 << 16);
      v377 = v469;
      if (v469)
        v378 = 0x1000000;
      else
        v378 = 0;
      v448 = *((_QWORD *)&v460 + 1);
      v449 = v460;
      v470 = (int64x2_t)v460;
      v446 = *((_QWORD *)&v461 + 1);
      v447 = v461;
      v471 = v461;
      v444 = *((_QWORD *)&v462 + 1);
      v445 = v462;
      *(_OWORD *)v472 = v462;
      v442 = *((_QWORD *)&v463 + 1);
      v443 = v463;
      *(_OWORD *)&v472[16] = v463;
      v441 = v464;
      *(_OWORD *)&v472[32] = v464;
      *(_OWORD *)&v472[48] = v465;
      *(_QWORD *)&v472[64] = v466;
      v473 = v378 | v376;
      v474 = 0;
      sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
      sub_24A75BFB4();
      sub_24A75CB70();
      sub_24A77AB28();
      sub_24A75D980(v458.i64[0], v457, v451, v456.i64[0], v455.i64[0], v454, v453.i64[0], v452, v450);
      sub_24A75D328(v449, v448, v447, v446, v445, v444, v443, v442, v441, v440, v374, *((uint64_t *)&v374 + 1), v375, v376, SBYTE2(v376), SHIBYTE(v376), v377);
      goto LABEL_62;
    }
    v252 = *(double *)&v250;
    sub_24A77C2C8();
    v254 = v451;
    v253 = v452;
    v255 = v453.i64[0];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v452 + 104))(v451, *MEMORY[0x24BEE38C8], v453.i64[0]);
    v256 = v440;
    sub_24A77C298();
    (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v254, v255);
    v257 = v441;
    sub_24A778338();
    (*(void (**)(uint64_t, uint64_t))(v442 + 8))(v256, v444);
    sub_24A68C7E8();
    v258 = v445;
    sub_24A77C2BC();
    (*(void (**)(uint64_t, uint64_t))(v443 + 8))(v257, v258);
    v43 = v475.i64[1];
    v40 = v475.i64[0];
    v259 = sub_24A77925C();
    if (!v260)
    {
      v354 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
      if (v252 >= 0.0)
      {
        v356 = 0.62745098;
        v357 = 0.0;
        v355 = 1.0;
      }
      else
      {
        v355 = 0.407843137;
        v356 = 0.321568627;
        v357 = 1.0;
      }
      v372 = MEMORY[0x24BD189B8](objc_msgSend(v354, sel_initWithRed_green_blue_alpha_, v357, v355, v356, 1.0));
      v470.i64[0] = v40;
      v470.i64[1] = v43;
      v471 = (unint64_t)v259;
      *(_QWORD *)v472 = v259;
      *(_QWORD *)&v472[8] = 0;
      *(_QWORD *)&v472[16] = 0;
      *(_QWORD *)&v472[24] = v372;
      v472[32] = 1;
LABEL_258:
      __swift_instantiateConcreteTypeFromMangledName(&qword_257949890);
      sub_24A6922E0((unint64_t *)&qword_257949888, &qword_257949890, (uint64_t (*)(void))sub_24A6459E8);
      sub_24A77AB28();
      v291 = v475.i64[1];
      v290 = v475.i64[0];
      v292 = *(_QWORD *)v476;
      v293 = *(_QWORD *)&v476[8];
      v294 = *(_QWORD *)&v476[16];
      v295 = *(_QWORD *)&v476[24];
      v296 = *(_QWORD *)&v476[32];
      v297 = *(_QWORD *)&v476[40];
      v298 = v476[48];
      goto LABEL_259;
    }
    if (qword_2544D6160 == -1)
    {
LABEL_168:
      swift_beginAccess();
      v261 = (id)qword_2544D6158;
      v262 = sub_24A77856C();
      v264 = v263;
      swift_bridgeObjectRelease();

      v265 = v457;
      if (!(_QWORD)v457)
        v265 = MEMORY[0x24BD189B8](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.6, 0.6, 0.6, 1.0));
      v470.i64[0] = v40;
      v470.i64[1] = v43;
      v471 = 0uLL;
      *(_QWORD *)v472 = v262;
      *(_QWORD *)&v472[8] = v264;
      *(_QWORD *)&v472[16] = 0;
      *(_QWORD *)&v472[24] = v265;
      v472[32] = 0;
      swift_retain();
      goto LABEL_258;
    }
LABEL_303:
    swift_once();
    goto LABEL_168;
  }
  if (v28 == *MEMORY[0x24BEC5798])
  {
    v268 = sub_24A779274();
    if ((v269 & 1) != 0)
    {
      v458.i64[0] = 0;
      v320 = 0;
      v271 = 0;
    }
    else
    {
      v270 = v268;
      v271 = (void *)sub_24A779244();
      if (v271)
      {
        v272 = swift_getKeyPath();
        if ((_QWORD)v457)
        {
          v273 = (id)v458.i64[0];
          v274 = v457;
        }
        else
        {
          v384 = (void *)objc_opt_self();
          v385 = (id)v458.i64[0];
          v386 = v271;
          v387 = objc_msgSend(v384, sel_paceColors);
          if (!v387)
          {
LABEL_323:
            __break(1u);
            goto LABEL_324;
          }
          v388 = v387;
          v389 = objc_msgSend(v387, sel_nonGradientTextColor);

          if (!v389)
          {
LABEL_324:
            __break(1u);
            goto LABEL_325;
          }
          v274 = MEMORY[0x24BD189B8](v389);

        }
        swift_retain();
        v320 = 14;
        goto LABEL_271;
      }
      v458.i64[0] = 0;
      v320 = 0;
    }
    v272 = 0;
    v270 = 0;
    v274 = 0;
LABEL_271:
    v475.i64[0] = v458.i64[0];
    v475.i64[1] = v320;
    v456.i64[0] = v320;
    *(_QWORD *)v476 = v271;
    *(_QWORD *)&v476[8] = v272;
    *(_QWORD *)&v457 = v271;
    v455.i64[0] = v272;
    *(_QWORD *)&v476[16] = 0;
    *(_QWORD *)&v476[24] = v270;
    *(_QWORD *)&v454 = v270;
    memset(&v476[32], 0, 24);
    *(_QWORD *)&v476[56] = v274;
    v453.i64[0] = v274;
    v476[64] = 1;
    sub_24A75CE04((void *)v458.i64[0], v320, v271, v272, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E598);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E408);
    sub_24A67047C(&qword_25794E590, &qword_25794E598, (uint64_t (*)(void))sub_24A75C9F4);
    sub_24A75C1E0();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_QWORD *)&v476[64] = v472[48];
    *(_QWORD *)&v476[72] = 0;
    *(_WORD *)&v476[80] = 0;
    v476[82] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E588);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E5B8);
    sub_24A75C970();
    sub_24A75CA70();
    sub_24A77AB28();
    if (BYTE2(v466))
      v390 = 0x10000;
    else
      v390 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v390 | (unsigned __int16)v466;
    LOWORD(v477) = 0;
    BYTE2(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
    sub_24A75C73C();
    sub_24A75C904();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    BYTE2(v477) = BYTE2(v473) != 0;
    HIBYTE(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v443 = *((_QWORD *)&v464 + 1);
    v123 = *((_QWORD *)&v465 + 1);
    v122 = v465;
    v124 = v466;
    v125 = v467 | (v468 << 16);
    v126 = v469;
    if (v469)
      v391 = 0x1000000;
    else
      v391 = 0;
    v451 = *((_QWORD *)&v460 + 1);
    v452 = v460;
    v470 = (int64x2_t)v460;
    v449 = *((_QWORD *)&v461 + 1);
    v450 = v461;
    v471 = v461;
    v447 = *((_QWORD *)&v462 + 1);
    v448 = v462;
    *(_OWORD *)v472 = v462;
    v445 = *((_QWORD *)&v463 + 1);
    v446 = v463;
    *(_OWORD *)&v472[16] = v463;
    v444 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v391 | v125;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    v285 = (void *)v458.i64[0];
    v286 = v456.i64[0];
    v287 = (void *)v457;
    v288 = v455.i64[0];
    goto LABEL_191;
  }
  if (v28 == *MEMORY[0x24BEC57D8])
  {
    v299 = sub_24A779274();
    if ((v300 & 1) != 0)
    {
      v302 = 0;
      v305 = 0uLL;
    }
    else
    {
      v301 = v299;
      v302 = v457;
      if (!(_QWORD)v457)
      {
        v303 = objc_msgSend((id)objc_opt_self(), sel_splitsColors);
        v304 = objc_msgSend(v303, sel_nonGradientTextColor);

        if (!v304)
        {
LABEL_325:
          __break(1u);
          goto LABEL_326;
        }
        v302 = MEMORY[0x24BD189B8](v304);
      }
      swift_retain();
      v305 = vdupq_n_s64(1uLL);
      v305.i64[0] = v301;
    }
    v475 = v305;
    v458.i64[0] = v302;
    *(_QWORD *)v476 = v302;
    memset(&v476[8], 0, 74);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E378);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E5C8);
    sub_24A75BF38();
    sub_24A67047C(&qword_25794E5C0, &qword_25794E5C8, (uint64_t (*)(void))sub_24A75CAF4);
    sub_24A77AB28();
    if (v472[65])
      v358 = 256;
    else
      v358 = 0;
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_WORD *)&v476[80] = v358 | v472[64];
    v476[82] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E588);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E5B8);
    sub_24A75C970();
    sub_24A75CA70();
    sub_24A77AB28();
    if (BYTE2(v466))
      v359 = 0x10000;
    else
      v359 = 0;
    v475 = (int64x2_t)v460;
    *(_OWORD *)v476 = v461;
    *(_OWORD *)&v476[16] = v462;
    *(_OWORD *)&v476[32] = v463;
    *(_OWORD *)&v476[48] = v464;
    *(_OWORD *)&v476[64] = v465;
    *(_QWORD *)&v476[80] = v359 | (unsigned __int16)v466;
    LOWORD(v477) = 0;
    BYTE2(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
    sub_24A75C73C();
    sub_24A75C904();
    sub_24A77AB28();
    v475 = v470;
    *(_OWORD *)v476 = v471;
    *(_OWORD *)&v476[16] = *(_OWORD *)v472;
    *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
    *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
    *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
    *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
    LOWORD(v477) = v473;
    BYTE2(v477) = BYTE2(v473) != 0;
    HIBYTE(v477) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
    sub_24A75C020();
    sub_24A75C6D0();
    sub_24A77AB28();
    v448 = *((_QWORD *)&v464 + 1);
    v360 = v465;
    v361 = v466;
    v362 = v467 | (v468 << 16);
    v363 = v469;
    if (v469)
      v364 = 0x1000000;
    else
      v364 = 0;
    *(_QWORD *)&v457 = v460;
    v470 = (int64x2_t)v460;
    v456.i64[0] = *((_QWORD *)&v460 + 1);
    v455.i64[0] = v461;
    v471 = v461;
    *(_QWORD *)&v454 = *((_QWORD *)&v461 + 1);
    v452 = *((_QWORD *)&v462 + 1);
    v453.i64[0] = v462;
    *(_OWORD *)v472 = v462;
    v450 = *((_QWORD *)&v463 + 1);
    v451 = v463;
    *(_OWORD *)&v472[16] = v463;
    v449 = v464;
    *(_OWORD *)&v472[32] = v464;
    *(_OWORD *)&v472[48] = v465;
    *(_QWORD *)&v472[64] = v466;
    v473 = v364 | v362;
    v474 = 0;
    sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    swift_release();
    sub_24A75D328(v457, v456.i64[0], v455.i64[0], v454, v453.i64[0], v452, v451, v450, v449, v448, v360, *((uint64_t *)&v360 + 1), v361, v362, SBYTE2(v362), SHIBYTE(v362), v363);
    v111 = v475;
    v112 = *(int64x2_t *)v476;
    v113 = *(int64x2_t *)&v476[16];
    v114 = *(int64x2_t *)&v476[32];
    v115 = *(int64x2_t *)&v476[48];
    v116 = *(int64x2_t *)&v476[64];
    goto LABEL_63;
  }
  if (v28 == *MEMORY[0x24BEC57E8])
  {
    sub_24A77925C();
    if (!v321)
    {
      v392 = sub_24A779250();
      if (!v393)
      {
        v411 = 0;
        v412 = 0;
        v413 = 0;
        v414 = 0;
        v415 = 0;
        v416 = 0;
        v417 = 0;
        v418 = 0;
        v419 = 0;
        v420 = 0;
        v421 = 0;
        v422 = 255;
        goto LABEL_288;
      }
      v475.i64[0] = v392;
      v475.i64[1] = v393;
      sub_24A645928();
      swift_bridgeObjectRetain();
      v394 = sub_24A77AFD8();
      v396 = v395;
      v398 = v397;
      v400 = v399;
      v401 = swift_getKeyPath();
      v402 = swift_getKeyPath();
      v403 = swift_getKeyPath();
      swift_bridgeObjectRelease();
      v404 = v457;
      if (!(_QWORD)v457)
      {
        v405 = COERCE_DOUBLE(sub_24A779274());
        if ((v406 & 1) != 0)
          v405 = 16777215.0;
        if ((~*(_QWORD *)&v405 & 0x7FF0000000000000) == 0)
          goto LABEL_315;
        if (v405 <= -1.0)
        {
LABEL_316:
          __break(1u);
          goto LABEL_317;
        }
        if (v405 >= 4294967300.0)
        {
LABEL_317:
          __break(1u);
          goto LABEL_318;
        }
        v407 = (double)(v405 >> 16) / 255.0;
        v408 = (double)((unsigned __int16)v405 >> 8) / 255.0;
        v409 = (double)v405 / 255.0;
        v410 = v456.i64[0];
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v454 + 104))(v456.i64[0], *MEMORY[0x24BDF3C28], v455.i64[0]);
        v404 = MEMORY[0x24BD189AC](v410, v407, v408, v409, 1.0);
      }
      v470.i64[0] = v394;
      v470.i64[1] = v396;
      *(_QWORD *)&v471 = v398 & 1;
      *((_QWORD *)&v471 + 1) = v400;
      *(_QWORD *)v472 = v401;
      *(_QWORD *)&v472[8] = 0;
      *(_QWORD *)&v472[16] = v402;
      *(_QWORD *)&v472[24] = 0x3FE0000000000000;
      *(_OWORD *)&v472[40] = xmmword_24A788560;
      *(_QWORD *)&v472[32] = v403;
      *(_QWORD *)&v472[56] = v404;
      v472[64] = 1;
      goto LABEL_287;
    }
    if (qword_2544D6160 == -1)
    {
LABEL_216:
      swift_beginAccess();
      v322 = (id)qword_2544D6158;
      v323 = sub_24A77856C();
      v325 = v324;
      swift_bridgeObjectRelease();

      v475.i64[0] = v323;
      v475.i64[1] = v325;
      sub_24A645928();
      swift_bridgeObjectRetain();
      v326 = sub_24A77AFD8();
      v328 = v327;
      v330 = v329;
      v332 = v331;
      v333 = swift_getKeyPath();
      v334 = swift_getKeyPath();
      v335 = swift_getKeyPath();
      swift_bridgeObjectRelease();
      v336 = v457;
      if ((_QWORD)v457)
      {
LABEL_223:
        v470.i64[0] = v326;
        v470.i64[1] = v328;
        *(_QWORD *)&v471 = v330 & 1;
        *((_QWORD *)&v471 + 1) = v332;
        *(_QWORD *)v472 = v333;
        *(_QWORD *)&v472[8] = 0;
        *(_QWORD *)&v472[16] = v334;
        *(_QWORD *)&v472[24] = 0x3FE0000000000000;
        *(_OWORD *)&v472[40] = xmmword_24A788550;
        *(_QWORD *)&v472[32] = v335;
        *(_QWORD *)&v472[56] = v336;
        v472[64] = 0;
LABEL_287:
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E5E8);
        sub_24A6922E0(&qword_25794E5E0, &qword_25794E5E8, (uint64_t (*)(void))sub_24A676680);
        sub_24A77AB28();
        v412 = v475.i64[1];
        v411 = v475.i64[0];
        v413 = *(_QWORD *)v476;
        v414 = *(_QWORD *)&v476[8];
        v415 = *(_QWORD *)&v476[16];
        v416 = *(_QWORD *)&v476[24];
        v417 = *(_QWORD *)&v476[32];
        v418 = *(_QWORD *)&v476[40];
        v419 = *(_QWORD *)&v476[48];
        v420 = *(_QWORD *)&v476[56];
        v421 = *(_QWORD *)&v476[64];
        v393 = *(_QWORD *)&v476[72];
        v422 = v476[80];
LABEL_288:
        v475.i64[0] = v411;
        v475.i64[1] = v412;
        v458.i64[0] = v411;
        *(_QWORD *)&v457 = v412;
        *(_QWORD *)v476 = v413;
        *(_QWORD *)&v476[8] = v414;
        v456.i64[0] = v413;
        v455.i64[0] = v414;
        *(_QWORD *)&v476[16] = v415;
        *(_QWORD *)&v476[24] = v416;
        *(_QWORD *)&v454 = v415;
        v452 = v417;
        v453.i64[0] = v416;
        *(_QWORD *)&v476[32] = v417;
        *(_QWORD *)&v476[40] = v418;
        v450 = v419;
        v451 = v418;
        *(_QWORD *)&v476[48] = v419;
        *(_QWORD *)&v476[56] = v420;
        v448 = v421;
        v449 = v420;
        *(_QWORD *)&v476[64] = v421;
        *(_QWORD *)&v476[72] = v393;
        v447 = v393;
        LODWORD(v446) = v422;
        v476[80] = v422;
        v476[81] = 1;
        sub_24A75CC44(v411, v412, v413, v414, v415, v416, v417, v418, v419, v420, v421, v393, v422);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E378);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E5C8);
        sub_24A75BF38();
        sub_24A67047C(&qword_25794E5C0, &qword_25794E5C8, (uint64_t (*)(void))sub_24A75CAF4);
        sub_24A77AB28();
        if (v472[65])
          v423 = 256;
        else
          v423 = 0;
        v475 = v470;
        *(_OWORD *)v476 = v471;
        *(_OWORD *)&v476[16] = *(_OWORD *)v472;
        *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
        *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
        *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
        *(_WORD *)&v476[80] = v423 | v472[64];
        v476[82] = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E588);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E5B8);
        sub_24A75C970();
        sub_24A75CA70();
        sub_24A77AB28();
        if (BYTE2(v466))
          v424 = 0x10000;
        else
          v424 = 0;
        v475 = (int64x2_t)v460;
        *(_OWORD *)v476 = v461;
        *(_OWORD *)&v476[16] = v462;
        *(_OWORD *)&v476[32] = v463;
        *(_OWORD *)&v476[48] = v464;
        *(_OWORD *)&v476[64] = v465;
        *(_QWORD *)&v476[80] = v424 | (unsigned __int16)v466;
        LOWORD(v477) = 0;
        BYTE2(v477) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E528);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E578);
        sub_24A75C73C();
        sub_24A75C904();
        sub_24A77AB28();
        v475 = v470;
        *(_OWORD *)v476 = v471;
        *(_OWORD *)&v476[16] = *(_OWORD *)v472;
        *(_OWORD *)&v476[32] = *(_OWORD *)&v472[16];
        *(_OWORD *)&v476[48] = *(_OWORD *)&v472[32];
        *(_OWORD *)&v476[64] = *(_OWORD *)&v472[48];
        *(_QWORD *)&v476[80] = *(_QWORD *)&v472[64];
        LOWORD(v477) = v473;
        BYTE2(v477) = BYTE2(v473) != 0;
        HIBYTE(v477) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3B8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E518);
        sub_24A75C020();
        sub_24A75C6D0();
        sub_24A77AB28();
        v436 = *((_QWORD *)&v464 + 1);
        v425 = v465;
        v426 = v466;
        v427 = v467 | (v468 << 16);
        v428 = v469;
        if (v469)
          v429 = 0x1000000;
        else
          v429 = 0;
        v444 = *((_QWORD *)&v460 + 1);
        v445 = v460;
        v470 = (int64x2_t)v460;
        v442 = *((_QWORD *)&v461 + 1);
        v443 = v461;
        v471 = v461;
        v440 = *((_QWORD *)&v462 + 1);
        v441 = v462;
        *(_OWORD *)v472 = v462;
        v438 = *((_QWORD *)&v463 + 1);
        v439 = v463;
        *(_OWORD *)&v472[16] = v463;
        v437 = v464;
        *(_OWORD *)&v472[32] = v464;
        *(_OWORD *)&v472[48] = v465;
        *(_QWORD *)&v472[64] = v466;
        v473 = v429 | v427;
        v474 = 0;
        sub_24A75CCE0(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462, *((uint64_t *)&v462 + 1), v463, *((uint64_t *)&v463 + 1), v464, *((uint64_t *)&v464 + 1), v465, *((uint64_t *)&v465 + 1), v466, v467, v468, (v467 | (v468 << 16)) >> 24, v469);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
        sub_24A75BFB4();
        sub_24A75CB70();
        sub_24A77AB28();
        sub_24A75D28C(v458.i64[0], v457, v456.i8[0], v455.i64[0], v454, v453.i8[0], v452, v451, v450, v449, v448, v447, v446);
        sub_24A75D328(v445, v444, v443, v442, v441, v440, v439, v438, v437, v436, v425, *((uint64_t *)&v425 + 1), v426, v427, SBYTE2(v427), SHIBYTE(v427), v428);
        goto LABEL_62;
      }
      v337 = COERCE_DOUBLE(sub_24A779274());
      if ((v338 & 1) != 0)
        v337 = 16777215.0;
      if ((~*(_QWORD *)&v337 & 0x7FF0000000000000) != 0)
      {
        if (v337 > -1.0)
        {
          if (v337 < 4294967300.0)
          {
            v339 = (double)(v337 >> 16) / 255.0;
            v340 = (double)((unsigned __int16)v337 >> 8) / 255.0;
            v341 = (double)v337 / 255.0;
            v342 = v456.i64[0];
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v454 + 104))(v456.i64[0], *MEMORY[0x24BDF3C28], v455.i64[0]);
            v336 = MEMORY[0x24BD189AC](v342, v339, v340, v341, 1.0);
            goto LABEL_223;
          }
          goto LABEL_312;
        }
LABEL_311:
        __break(1u);
LABEL_312:
        __break(1u);
        goto LABEL_313;
      }
LABEL_310:
      __break(1u);
      goto LABEL_311;
    }
LABEL_307:
    swift_once();
    goto LABEL_216;
  }
  if (v28 != *MEMORY[0x24BEC57C0])
  {
    sub_24A77A9A8();
    sub_24A77A99C();
    sub_24A779268();
    sub_24A77B9D4();
    sub_24A77A990();
    swift_bridgeObjectRelease();
    sub_24A77A99C();
    sub_24A77A9CC();
    v379 = sub_24A77AFC0();
    v458.i64[0] = v380;
    v475.i64[0] = v379;
    v475.i64[1] = v381;
    *(_QWORD *)&v457 = v381;
    v383 = v382 & 1;
    *(_QWORD *)v476 = v382 & 1;
    *(_QWORD *)&v476[8] = v380;
    v476[16] = 1;
    sub_24A6436C4(v379, v381, v382 & 1);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E378);
    sub_24A75BF38();
    sub_24A77AB28();
    v470 = (int64x2_t)v460;
    v471 = v461;
    *(_QWORD *)v472 = v462;
    memset(&v472[8], 0, 64);
    v473 = 0;
    v474 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    sub_24A64596C(v379, v457, v383);
    swift_bridgeObjectRelease();
    v457 = *(_OWORD *)v476;
    v458 = v475;
    v455 = *(int64x2_t *)&v476[32];
    v456 = *(int64x2_t *)&v476[16];
    v453 = *(int64x2_t *)&v476[64];
    v454 = *(_OWORD *)&v476[48];
    v117 = *(_QWORD *)&v476[80];
    v118 = v477;
    v119 = v478;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    v116 = v453;
    v115 = (int64x2_t)v454;
    v114 = v455;
    v113 = v456;
    v112 = (int64x2_t)v457;
    v111 = v458;
    goto LABEL_64;
  }
  v365 = sub_24A779274();
  if ((v366 & 1) != 0)
  {
    v367 = 0;
    v368 = 0;
    goto LABEL_299;
  }
  v367 = v365;
  v368 = v457;
  if ((_QWORD)v457)
  {
LABEL_253:
    swift_retain();
LABEL_299:
    v475 = (int64x2_t)(unint64_t)v367;
    v458.i64[0] = v368;
    *(_QWORD *)v476 = v368;
    *(_QWORD *)&v476[8] = 0;
    v476[16] = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E378);
    sub_24A75BF38();
    sub_24A77AB28();
    v430 = v460;
    v431 = v461;
    v432 = *((_QWORD *)&v461 + 1);
    v433 = v462;
    v470 = (int64x2_t)v460;
    v471 = v461;
    *(_QWORD *)v472 = v462;
    memset(&v472[8], 0, 64);
    v473 = 0;
    v474 = 1;
    sub_24A75CBDC(v460, *((uint64_t *)&v460 + 1), v461, *((uint64_t *)&v461 + 1), v462);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25794E3A0);
    sub_24A75BFB4();
    sub_24A75CB70();
    sub_24A77AB28();
    swift_release();
    sub_24A75CC10(v430, *((uint64_t *)&v430 + 1), v431, v432, v433);
    v111 = v475;
    v112 = *(int64x2_t *)v476;
    v113 = *(int64x2_t *)&v476[16];
    v114 = *(int64x2_t *)&v476[32];
    v115 = *(int64x2_t *)&v476[48];
    v116 = *(int64x2_t *)&v476[64];
    goto LABEL_63;
  }
  v369 = objc_msgSend((id)objc_opt_self(), sel_elapsedTimeColors);
  if (!v369)
  {
LABEL_326:
    __break(1u);
    goto LABEL_327;
  }
  v370 = v369;
  v371 = objc_msgSend(v369, sel_nonGradientTextColor);

  if (v371)
  {
    v368 = MEMORY[0x24BD189B8](v371);
    goto LABEL_253;
  }
LABEL_327:
  __break(1u);
}

