uint64_t NXAuthenticationAttemptInfo.password.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Nexus::NXAuthenticationAttemptInfo __swiftcall NXAuthenticationAttemptInfo.init(password:)(Nexus::NXAuthenticationAttemptInfo password)
{
  Nexus::NXAuthenticationAttemptInfo *v1;

  *v1 = password;
  return password;
}

uint64_t NXAuthenticationAttemptInfo.description.getter()
{
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0x64726F7773736170;
}

uint64_t static NXAuthenticationAttemptInfo.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_22DEFAE54();
}

uint64_t sub_22DE7C0D4()
{
  return 1;
}

uint64_t sub_22DE7C0E0()
{
  return sub_22DEFAEE4();
}

uint64_t sub_22DE7C108()
{
  return 0x64726F7773736170;
}

uint64_t sub_22DE7C120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x64726F7773736170 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22DEFAE54();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22DE7C1B4()
{
  return 0;
}

void sub_22DE7C1C0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_22DE7C1CC()
{
  sub_22DE7C36C();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7C1F4()
{
  sub_22DE7C36C();
  return sub_22DEFAF50();
}

uint64_t NXAuthenticationAttemptInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5EC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7C36C();
  sub_22DEFAF2C();
  sub_22DEFAE0C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E321D58]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_22DE7C36C()
{
  unint64_t result;

  result = qword_255DC7890;
  if (!qword_255DC7890)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFCAAC, &type metadata for NXAuthenticationAttemptInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7890);
  }
  return result;
}

uint64_t NXAuthenticationAttemptInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5EC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7C36C();
  sub_22DEFAF20();
  if (!v2)
  {
    v9 = sub_22DEFADAC();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22DE7C4EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return NXAuthenticationAttemptInfo.init(from:)(a1, a2);
}

uint64_t sub_22DE7C500(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5EC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7C36C();
  sub_22DEFAF2C();
  sub_22DEFAE0C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22DE7C5EC()
{
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0x64726F7773736170;
}

uint64_t sub_22DE7C658(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_22DEFAE54();
}

id NXAuthenticationCompletedInfo.error.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t NXAuthenticationCompletedInfo.init(error:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t NXAuthenticationCompletedInfo.description.getter()
{
  id *v0;
  id v1;
  _QWORD v3[2];

  if (!*v0)
    return 0x73736563637573;
  v1 = *v0;
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "failed: error=");
  HIBYTE(v3[1]) = -18;
  type metadata accessor for NXError();
  sub_22DE7CB84((unint64_t *)&qword_255DC5ED0, MEMORY[0x24BDD01A8]);
  sub_22DEFAEC0();
  sub_22DEFAA10();

  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t static NXAuthenticationCompletedInfo.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      type metadata accessor for NXError();
      v4 = v3;
      v5 = v2;
      v6 = sub_22DEFAC08();

      if ((v6 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_22DE7C808()
{
  return 0x726F727265;
}

uint64_t sub_22DE7C81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22DEFAE54();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22DE7C8A8()
{
  sub_22DE7CA0C();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7C8D0()
{
  sub_22DE7CA0C();
  return sub_22DEFAF50();
}

uint64_t NXAuthenticationCompletedInfo.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5ED8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7CA0C();
  sub_22DEFAF2C();
  v9[1] = v7;
  type metadata accessor for NXError();
  sub_22DE7CB84(&qword_255DC5EE0, (uint64_t)&protocol conformance descriptor for NXError);
  sub_22DEFAE00();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_22DE7CA0C()
{
  unint64_t result;

  result = qword_255DC7898;
  if (!qword_255DC7898)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFCA5C, &type metadata for NXAuthenticationCompletedInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7898);
  }
  return result;
}

uint64_t NXAuthenticationCompletedInfo.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5EE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7CA0C();
  sub_22DEFAF20();
  if (!v2)
  {
    type metadata accessor for NXError();
    sub_22DE7CB84(&qword_255DC5EF0, (uint64_t)&protocol conformance descriptor for NXError);
    sub_22DEFADA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_22DE7CB84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NXError();
    result = MEMORY[0x22E321D70](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22DE7CBC4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return NXAuthenticationCompletedInfo.init(from:)(a1, a2);
}

uint64_t sub_22DE7CBD8(_QWORD *a1)
{
  return NXAuthenticationCompletedInfo.encode(to:)(a1);
}

uint64_t sub_22DE7CBF0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      type metadata accessor for NXError();
      v4 = v3;
      v5 = v2;
      v6 = sub_22DEFAC08();

      if ((v6 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

void NXAuthenticationConfiguration.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

Nexus::NXAuthenticationConfiguration __swiftcall NXAuthenticationConfiguration.init(type:)(Nexus::NXAuthenticationConfiguration type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t NXAuthenticationConfiguration.description.getter()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22DEFAA10();
  sub_22DE7CCD0(v1);
  return 0;
}

void sub_22DE7CCD0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22DE7CD18()
{
  sub_22DEFAA10();
  return swift_bridgeObjectRelease();
}

void static NXAuthenticationConfiguration.== infix(_:_:)(char *a1)
{
  sub_22DE7CDD4(*a1);
}

void sub_22DE7CDD4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22DE7CE38(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22DE7CEEC + 4 * byte_22DEFB742[a2]))(0x347469676964);
}

uint64_t sub_22DE7CEEC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x347469676964 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_22DE7D00C()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE7D04C()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE7D088()
{
  return 1701869940;
}

uint64_t sub_22DE7D098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22DEFAE54();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22DE7D11C()
{
  sub_22DE7D268();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7D144()
{
  sub_22DE7D268();
  return sub_22DEFAF50();
}

uint64_t NXAuthenticationConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5EF8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7D268();
  sub_22DEFAF2C();
  v10 = v7;
  sub_22DE7D2AC();
  sub_22DEFAE30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_22DE7D268()
{
  unint64_t result;

  result = qword_255DC78A0;
  if (!qword_255DC78A0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFCA0C, &type metadata for NXAuthenticationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC78A0);
  }
  return result;
}

unint64_t sub_22DE7D2AC()
{
  unint64_t result;

  result = qword_255DC5F00;
  if (!qword_255DC5F00)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationType, &type metadata for NXAuthenticationType);
    atomic_store(result, (unint64_t *)&qword_255DC5F00);
  }
  return result;
}

uint64_t NXAuthenticationConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7D268();
  sub_22DEFAF20();
  if (!v2)
  {
    sub_22DE7D40C();
    sub_22DEFADD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_22DE7D40C()
{
  unint64_t result;

  result = qword_255DC5F10;
  if (!qword_255DC5F10)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationType, &type metadata for NXAuthenticationType);
    atomic_store(result, (unint64_t *)&qword_255DC5F10);
  }
  return result;
}

uint64_t sub_22DE7D450@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return NXAuthenticationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_22DE7D464(_QWORD *a1)
{
  return NXAuthenticationConfiguration.encode(to:)(a1);
}

uint64_t sub_22DE7D478()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22DEFAA10();
  sub_22DE7CCD0(v1);
  sub_22DEFAA10();
  return 0;
}

uint64_t NXAuthenticationPresentInfo.password.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void NXAuthenticationPresentInfo.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

Nexus::NXAuthenticationPresentInfo __swiftcall NXAuthenticationPresentInfo.init(type:password:)(Nexus::NXAuthenticationType type, Swift::String password)
{
  uint64_t v2;
  char v3;
  Nexus::NXAuthenticationPresentInfo result;

  v3 = *(_BYTE *)type;
  *(Swift::String *)v2 = password;
  *(_BYTE *)(v2 + 16) = v3;
  result.password._object = (void *)password._countAndFlagsBits;
  result.type = (Nexus::NXAuthenticationType)password._object;
  LOBYTE(result.password._countAndFlagsBits) = type;
  return result;
}

uint64_t NXAuthenticationPresentInfo.description.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_22DEFAC98();
  sub_22DEFAA10();
  sub_22DE7CCD0(v1);
  sub_22DEFAA10();
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0;
}

void static NXAuthenticationPresentInfo.== infix(_:_:)(uint64_t a1, _QWORD *a2)
{
  char v2;
  BOOL v3;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1];
  if (v3 || (sub_22DEFAE54() & 1) != 0)
    sub_22DE7CDD4(v2);
}

BOOL sub_22DE7D640(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_22DE7D658()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE7D69C()
{
  return sub_22DEFAEE4();
}

uint64_t sub_22DE7D6C4()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE7D704()
{
  _BYTE *v0;

  if (*v0)
    return 1701869940;
  else
    return 0x64726F7773736170;
}

uint64_t sub_22DE7D738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE80444(a1, a2);
  *a3 = result;
  return result;
}

void sub_22DE7D75C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_22DE7D768()
{
  sub_22DE7D900();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7D790()
{
  sub_22DE7D900();
  return sub_22DEFAF50();
}

uint64_t NXAuthenticationPresentInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F18);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7D900();
  sub_22DEFAF2C();
  v13 = 0;
  sub_22DEFAE0C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_22DE7D2AC();
    sub_22DEFAE30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

unint64_t sub_22DE7D900()
{
  unint64_t result;

  result = qword_255DC78A8;
  if (!qword_255DC78A8)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC9BC, &type metadata for NXAuthenticationPresentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC78A8);
  }
  return result;
}

uint64_t NXAuthenticationPresentInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7D900();
  sub_22DEFAF20();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v9 = sub_22DEFADAC();
  v11 = v10;
  v15 = 1;
  sub_22DE7D40C();
  swift_bridgeObjectRetain();
  sub_22DEFADD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v16;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE7DAE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NXAuthenticationPresentInfo.init(from:)(a1, a2);
}

uint64_t sub_22DE7DAF8(_QWORD *a1)
{
  return NXAuthenticationPresentInfo.encode(to:)(a1);
}

void sub_22DE7DB10(uint64_t a1, _QWORD *a2)
{
  char v2;
  BOOL v3;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1];
  if (v3 || (sub_22DEFAE54() & 1) != 0)
    sub_22DE7CDD4(v2);
}

uint64_t NXAuthenticationRequestInfo.incorrect.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

double NXAuthenticationRequestInfo.throttleTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

Nexus::NXAuthenticationRequestInfo __swiftcall NXAuthenticationRequestInfo.init(type:incorrect:throttleTime:)(Nexus::NXAuthenticationType type, Swift::Bool incorrect, Swift::Double throttleTime)
{
  uint64_t v3;
  char v4;
  double v5;
  Nexus::NXAuthenticationRequestInfo result;

  v4 = *(_BYTE *)type;
  *(_BYTE *)v3 = incorrect;
  v5 = fmax(throttleTime, 0.0);
  *(double *)(v3 + 8) = v5;
  *(_BYTE *)(v3 + 16) = v4;
  result.throttleTime = v5;
  result.type = incorrect;
  result.incorrect = type;
  return result;
}

uint64_t NXAuthenticationRequestInfo.description.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_22DEFAC98();
  sub_22DEFAA10();
  sub_22DE7CCD0(v1);
  sub_22DEFAA10();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  sub_22DEFAB60();
  return 0;
}

void static NXAuthenticationRequestInfo.== infix(_:_:)(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1])
    sub_22DE7CDD4(*((_BYTE *)a1 + 16));
}

uint64_t sub_22DE7DCF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C74746F726874;
  if (*v0 != 1)
    v1 = 1701869940;
  if (*v0)
    return v1;
  else
    return 0x636572726F636E69;
}

uint64_t sub_22DE7DD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE80524(a1, a2);
  *a3 = result;
  return result;
}

void sub_22DE7DD7C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_22DE7DD88()
{
  sub_22DE7DF48();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7DDB0()
{
  sub_22DE7DF48();
  return sub_22DEFAF50();
}

uint64_t NXAuthenticationRequestInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7DF48();
  sub_22DEFAF2C();
  v15 = 0;
  sub_22DEFAE18();
  if (!v2)
  {
    v8 = v11;
    v14 = 1;
    sub_22DEFAE24();
    v13 = v8;
    v12 = 2;
    sub_22DE7D2AC();
    sub_22DEFAE30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_22DE7DF48()
{
  unint64_t result;

  result = qword_255DC78B0;
  if (!qword_255DC78B0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC96C, &type metadata for NXAuthenticationRequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC78B0);
  }
  return result;
}

uint64_t NXAuthenticationRequestInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v14[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE7DF48();
  sub_22DEFAF20();
  if (!v2)
  {
    v14[15] = 0;
    v9 = sub_22DEFADB8();
    v14[14] = 1;
    sub_22DEFADC4();
    v12 = v11;
    v14[12] = 2;
    sub_22DE7D40C();
    sub_22DEFADD0();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v14[13];
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_22DE7E12C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NXAuthenticationRequestInfo.init(from:)(a1, a2);
}

uint64_t sub_22DE7E140(_QWORD *a1)
{
  return NXAuthenticationRequestInfo.encode(to:)(a1);
}

void sub_22DE7E158(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1])
    sub_22DE7CDD4(*((_BYTE *)a1 + 16));
}

uint64_t NXAuthenticationType.init(setupCodeType:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  if ((result - 1) >= 8)
    v2 = 0;
  else
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t NXAuthenticationType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DE7E1D4 + 4 * byte_22DEFB74B[*v0]))(0x6669636570736E75, 0xEB00000000646569);
}

uint64_t sub_22DE7E1D4()
{
  return 0x347469676964;
}

uint64_t sub_22DE7E1E8()
{
  return 0x367469676964;
}

uint64_t sub_22DE7E1FC()
{
  return 0x387469676964;
}

uint64_t sub_22DE7E210()
{
  return 0x3472616863;
}

uint64_t sub_22DE7E224()
{
  return 1954047348;
}

uint64_t sub_22DE7E234()
{
  return 0x6F69647561;
}

uint64_t sub_22DE7E248()
{
  return 0x6C6175736976;
}

uint64_t sub_22DE7E25C()
{
  return 0x65646F437271;
}

uint64_t NXAuthenticationType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DE7E2A8 + 4 * byte_22DEFB754[*v0]))(0x6669636570736E75, 0xEB00000000646569);
}

uint64_t sub_22DE7E2A8()
{
  return 0x347469676964;
}

uint64_t sub_22DE7E2BC()
{
  return 0x367469676964;
}

uint64_t sub_22DE7E2D0()
{
  return 0x387469676964;
}

uint64_t sub_22DE7E2E4()
{
  return 0x3472616863;
}

uint64_t sub_22DE7E2F8()
{
  return 1954047348;
}

uint64_t sub_22DE7E308()
{
  return 0x6F69647561;
}

uint64_t sub_22DE7E31C()
{
  return 0x6C6175736976;
}

uint64_t sub_22DE7E330()
{
  return 0x65646F437271;
}

Nexus::NXAuthenticationType_optional __swiftcall NXAuthenticationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Nexus::NXAuthenticationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22DEFAD70();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static NXAuthenticationType.allCases.getter()
{
  return &unk_24F9A4968;
}

void sub_22DE7E3A8(char *a1)
{
  sub_22DE7CDD4(*a1);
}

uint64_t sub_22DE7E3B4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_22DEFAED8();
  sub_22DE7E400((uint64_t)v3, v1);
  return sub_22DEFAEFC();
}

void sub_22DE7E3F8(uint64_t a1)
{
  char *v1;

  sub_22DE7E400(a1, *v1);
}

void sub_22DE7E400(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22DE7E448()
{
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE7E4F8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_22DEFAED8();
  sub_22DE7E400((uint64_t)v3, v1);
  return sub_22DEFAEFC();
}

Nexus::NXAuthenticationType_optional sub_22DE7E538(Swift::String *a1)
{
  return NXAuthenticationType.init(rawValue:)(*a1);
}

uint64_t sub_22DE7E544@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NXAuthenticationType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_22DE7E568(_QWORD *a1@<X8>)
{
  *a1 = &unk_24F9A4968;
}

uint64_t sub_22DE7E578()
{
  sub_22DE82F3C();
  return sub_22DEFAA70();
}

uint64_t sub_22DE7E5D4()
{
  sub_22DE82F3C();
  return sub_22DEFAA58();
}

uint64_t sub_22DE7E628()
{
  return sub_22DEFAA04();
}

uint64_t sub_22DE7E640@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

uint64_t sub_22DE7E64C@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DE7E658()
{
  sub_22DE808A8();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7E680()
{
  sub_22DE808A8();
  return sub_22DEFAF50();
}

uint64_t sub_22DE7E6A8()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE7E6F4()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE7E73C@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

uint64_t sub_22DE7E748@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22DEFAD70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_22DE7E794(_QWORD *a1@<X8>)
{
  *a1 = 0x726F727265;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_22DE7E7AC@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DE7E7B8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22DEFAD70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_22DE7E808()
{
  sub_22DE80820();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7E830()
{
  sub_22DE80820();
  return sub_22DEFAF50();
}

uint64_t NXConnectionStatus.description.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *v0 >> 62;
  if (!(_DWORD)v2)
  {
    (id)v1;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v3 = 0x3A676E6974696157;
    goto LABEL_5;
  }
  if ((_DWORD)v2 == 1)
  {
    (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v3 = 0x203A64656C696146;
LABEL_5:
    v6 = v3;
    type metadata accessor for NXError();
    sub_22DE7CB84((unint64_t *)&qword_255DC5ED0, MEMORY[0x24BDD01A8]);
    sub_22DEFAEC0();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    sub_22DE7E9E8(v1);
    return v6;
  }
  v5 = 0x697463656E6E6F43;
  if (v1 != 0x8000000000000008)
    v5 = 0x657463656E6E6F43;
  if (v1 == 0x8000000000000000)
    return 0x6E776F6E6B6E55;
  else
    return v5;
}

void sub_22DE7E9E8(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return;
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }

}

void NXConnectionStatus.hash(into:)()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  id v4;

  v1 = *v0;
  v2 = *v0 >> 62;
  if (!(_DWORD)v2)
  {
    sub_22DEFAEE4();
    v4 = (id)v1;
    goto LABEL_5;
  }
  if ((_DWORD)v2 == 1)
  {
    sub_22DEFAEE4();
    v3 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_5:
    sub_22DEFAC14();
    sub_22DE7E9E8(v1);
    return;
  }
  sub_22DEFAEE4();
}

uint64_t sub_22DE7EAC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DE7EAF0 + 4 * byte_22DEFB766[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_22DE7EAF0()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_22DE7EB0C()
{
  return 0x676E6974696177;
}

uint64_t sub_22DE7EB20()
{
  return 0x657463656E6E6F63;
}

uint64_t sub_22DE7EB3C()
{
  return 0x64656C696166;
}

uint64_t sub_22DE7EB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE82B50(a1, a2);
  *a3 = result;
  return result;
}

void sub_22DE7EB74(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_22DE7EB80()
{
  sub_22DE807DC();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7EBA8()
{
  sub_22DE807DC();
  return sub_22DEFAF50();
}

uint64_t sub_22DE7EBD0()
{
  return 0;
}

uint64_t sub_22DE7EBDC()
{
  sub_22DE80864();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7EC04()
{
  sub_22DE80864();
  return sub_22DEFAF50();
}

uint64_t sub_22DE7EC2C()
{
  sub_22DE808EC();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7EC54()
{
  sub_22DE808EC();
  return sub_22DEFAF50();
}

uint64_t sub_22DE7EC7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_22DE7ECA8()
{
  sub_22DE80930();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7ECD0()
{
  sub_22DE80930();
  return sub_22DEFAF50();
}

void NXConnectionStatus.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F38);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8]();
  v39 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F40);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8]();
  v34 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F48);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F50);
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x24BDAC7A8]();
  v31 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F58);
  v12 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8]();
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F60);
  v42 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  MEMORY[0x24BDAC7A8]();
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE807DC();
  sub_22DEFAF2C();
  if (!(v18 >> 62))
  {
    LOBYTE(v44) = 2;
    sub_22DE808A8();
    v23 = (id)v18;
    v21 = v43;
    sub_22DEFADE8();
    v44 = v23;
    type metadata accessor for NXError();
    sub_22DE7CB84(&qword_255DC5EE0, (uint64_t)&protocol conformance descriptor for NXError);
    v24 = v38;
    sub_22DEFAE30();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v24);
    goto LABEL_5;
  }
  if (v18 >> 62 == 1)
  {
    LOBYTE(v44) = 4;
    sub_22DE80820();
    v19 = (id)(v18 & 0x3FFFFFFFFFFFFFFFLL);
    v20 = v39;
    v21 = v43;
    sub_22DEFADE8();
    v44 = v19;
    type metadata accessor for NXError();
    sub_22DE7CB84(&qword_255DC5EE0, (uint64_t)&protocol conformance descriptor for NXError);
    v22 = v41;
    sub_22DEFAE30();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v22);
LABEL_5:
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v21);
    sub_22DE7E9E8(v18);
    return;
  }
  if (v18 == 0x8000000000000000)
  {
    LOBYTE(v44) = 0;
    sub_22DE80930();
    v26 = v43;
    sub_22DEFADE8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  }
  else
  {
    if (v18 == 0x8000000000000008)
    {
      LOBYTE(v44) = 1;
      sub_22DE808EC();
      v25 = v31;
      v26 = v43;
      sub_22DEFADE8();
      v28 = v32;
      v27 = v33;
    }
    else
    {
      LOBYTE(v44) = 3;
      sub_22DE80864();
      v25 = v34;
      v26 = v43;
      sub_22DEFADE8();
      v28 = v35;
      v27 = v36;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v26);
}

uint64_t NXConnectionStatus.hashValue.getter()
{
  unint64_t *v0;
  unint64_t v1;
  id v2;
  id v3;

  v1 = *v0;
  sub_22DEFAED8();
  if (v1 >> 62)
  {
    if (v1 >> 62 != 1)
    {
      sub_22DEFAEE4();
      return sub_22DEFAEFC();
    }
    sub_22DEFAEE4();
    v2 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
  }
  else
  {
    sub_22DEFAEE4();
    v3 = (id)v1;
  }
  sub_22DEFAC14();
  sub_22DE7E9E8(v1);
  return sub_22DEFAEFC();
}

uint64_t NXConnectionStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v37 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F78);
  v36 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8]();
  v35 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F80);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8]();
  v32 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F88);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x24BDAC7A8]();
  v33 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F90);
  v34 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8]();
  v31 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5F98);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8]();
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_22DE807DC();
  v18 = v39;
  sub_22DEFAF20();
  if (!v18)
  {
    v24[1] = v9;
    v24[2] = v12;
    v24[0] = v10;
    v39 = v14;
    v19 = sub_22DEFADDC();
    if (*(_QWORD *)(v19 + 16) == 1)
      __asm { BR              X10 }
    v20 = sub_22DEFACBC();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v22 = &type metadata for NXConnectionStatus;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_22DE7F870@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NXConnectionStatus.init(from:)(a1, a2);
}

void sub_22DE7F884(_QWORD *a1)
{
  NXConnectionStatus.encode(to:)(a1);
}

uint64_t sub_22DE7F8A8()
{
  unint64_t *v0;
  unint64_t v1;
  id v2;
  id v3;

  v1 = *v0;
  sub_22DEFAED8();
  if (v1 >> 62)
  {
    if (v1 >> 62 != 1)
    {
      sub_22DEFAEE4();
      return sub_22DEFAEFC();
    }
    sub_22DEFAEE4();
    v2 = (id)(v1 & 0x3FFFFFFFFFFFFFFFLL);
  }
  else
  {
    sub_22DEFAEE4();
    v3 = (id)v1;
  }
  sub_22DEFAC14();
  sub_22DE7E9E8(v1);
  return sub_22DEFAEFC();
}

uint64_t NXMessageContext.localEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_22DE80974(v2, v3, v4, v5, v6, v7, v8);
}

__n128 NXMessageContext.localEndpoint.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  sub_22DE809E8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
  result = v6;
  *(_OWORD *)v1 = v7;
  *(__n128 *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  return result;
}

uint64_t (*NXMessageContext.localEndpoint.modify())()
{
  return nullsub_1;
}

uint64_t NXMessageContext.remoteEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 104);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_22DE80974(v2, v3, v4, v5, v6, v7, v8);
}

__n128 NXMessageContext.remoteEndpoint.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  sub_22DE809E8(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 104));
  *(_OWORD *)(v1 + 56) = v7;
  result = v6;
  *(__n128 *)(v1 + 72) = v6;
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  *(_BYTE *)(v1 + 104) = v4;
  return result;
}

uint64_t (*NXMessageContext.remoteEndpoint.modify())()
{
  return nullsub_1;
}

uint64_t NXMessageContext.senderBundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NXMessageContext.senderBundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*NXMessageContext.senderBundleID.modify())()
{
  return nullsub_1;
}

__n128 NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v5;
  __int128 v6;
  char v7;
  __n128 result;

  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v5;
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 56) = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a5 + 48) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(a5 + 72) = v6;
  result = *(__n128 *)(a2 + 32);
  *(__n128 *)(a5 + 88) = result;
  *(_BYTE *)(a5 + 104) = v7;
  *(_QWORD *)(a5 + 112) = a3;
  *(_QWORD *)(a5 + 120) = a4;
  return result;
}

uint64_t static NXMessageContext.decode(data:)()
{
  sub_22DEFA4A0();
  swift_allocObject();
  sub_22DEFA494();
  sub_22DE80A5C();
  sub_22DEFA488();
  return swift_release();
}

uint64_t NXMessageContext.encode()()
{
  uint64_t v0;

  sub_22DEFA4C4();
  swift_allocObject();
  sub_22DEFA4B8();
  sub_22DE80AA0();
  v0 = sub_22DEFA4AC();
  swift_release();
  return v0;
}

BOOL sub_22DE7FC94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22DE7FCA8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E4565746F6D6572;
  if (*v0 != 1)
    v1 = 0x75427265646E6573;
  if (*v0)
    return v1;
  else
    return 0x646E456C61636F6CLL;
}

uint64_t sub_22DE7FD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE82D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DE7FD4C()
{
  sub_22DE80AE4();
  return sub_22DEFAF44();
}

uint64_t sub_22DE7FD74()
{
  sub_22DE80AE4();
  return sub_22DEFAF50();
}

uint64_t NXMessageContext.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  char v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FC0);
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v24 = v1[1];
  v25 = v6;
  v7 = *((_QWORD *)v1 + 4);
  v8 = *((_QWORD *)v1 + 5);
  v9 = *((_BYTE *)v1 + 48);
  v10 = *((_QWORD *)v1 + 7);
  v22 = *((_QWORD *)v1 + 8);
  v23 = v10;
  v11 = *((_QWORD *)v1 + 9);
  v20 = *((_QWORD *)v1 + 10);
  v21 = v11;
  v12 = *((_QWORD *)v1 + 11);
  v18 = *((_QWORD *)v1 + 12);
  v19 = v12;
  v33 = *((unsigned __int8 *)v1 + 104);
  v13 = *((_QWORD *)v1 + 14);
  v17[0] = *((_QWORD *)v1 + 15);
  v17[1] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE80AE4();
  sub_22DEFAF2C();
  v28 = v25;
  v29 = v24;
  v30 = v7;
  v31 = v8;
  v32 = v9;
  v34 = 0;
  sub_22DE80B28();
  v14 = v27;
  sub_22DEFAE00();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  v16 = v26;
  *(_QWORD *)&v28 = v23;
  *((_QWORD *)&v28 + 1) = v22;
  *(_QWORD *)&v29 = v21;
  *((_QWORD *)&v29 + 1) = v20;
  v30 = v19;
  v31 = v18;
  v32 = v33;
  v34 = 1;
  sub_22DEFAE00();
  LOBYTE(v28) = 2;
  sub_22DEFADF4();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t NXMessageContext.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _OWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  _BYTE v69[24];
  unsigned __int8 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char v79;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_22DE80AE4();
  sub_22DEFAF20();
  if (v2)
  {
    v58 = v2;
    v57 = 0;
    v56 = 0uLL;
    v54 = 0;
    v55 = 0uLL;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v78 = 255;
    LOBYTE(v16) = -1;
  }
  else
  {
    v52 = a2;
    LOBYTE(v59) = 0;
    sub_22DE80C00();
    sub_22DEFADA0();
    v58 = 0;
    v15 = v67;
    v16 = v70;
    LOBYTE(v59) = 1;
    v51 = *((_QWORD *)&v68 + 1);
    v14 = v68;
    v49 = *(_QWORD *)v69;
    v50 = *(_OWORD *)&v69[8];
    sub_22DE80974(v67, v68, *((uint64_t *)&v68 + 1), *(uint64_t *)v69, *(uint64_t *)&v69[8], *(uint64_t *)&v69[16], v70);
    v18 = v58;
    sub_22DEFADA0();
    if (!v18)
    {
      v48 = v16;
      v79 = 2;
      v54 = v67;
      v55 = v68;
      v56 = *(_OWORD *)v69;
      v57 = *(_QWORD *)&v69[16];
      v78 = v70;
      sub_22DE80974(v67, v68, *((uint64_t *)&v68 + 1), *(uint64_t *)v69, *(uint64_t *)&v69[8], *(uint64_t *)&v69[16], v70);
      v19 = sub_22DEFAD94();
      v58 = 0;
      v21 = v20;
      v22 = *(void (**)(char *, uint64_t))(v6 + 8);
      v23 = v19;
      v47 = v19;
      v22(v8, v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v44 = v15;
      v45 = v14;
      *(_QWORD *)&v59 = v15;
      *((_QWORD *)&v59 + 1) = v14;
      *(_QWORD *)&v60 = v51;
      *((_QWORD *)&v60 + 1) = v49;
      v61 = v50;
      LOBYTE(v62) = v48;
      v24 = v21;
      v25 = v54;
      v26 = v55;
      *((_QWORD *)&v62 + 1) = v54;
      v63 = v55;
      v28 = *((_QWORD *)&v55 + 1);
      v27 = v56;
      v64 = v56;
      v30 = *((_QWORD *)&v56 + 1);
      v29 = v57;
      *(_QWORD *)&v65 = v57;
      LOBYTE(v21) = v78;
      BYTE8(v65) = v78;
      *(_QWORD *)&v66 = v23;
      *((_QWORD *)&v66 + 1) = v24;
      v46 = v24;
      sub_22DE80C44((uint64_t)&v59);
      swift_bridgeObjectRelease();
      v31 = v26;
      LOBYTE(v26) = v21;
      sub_22DE809E8(v25, v31, v28, v27, v30, v29, v21);
      v32 = v44;
      v33 = v45;
      v34 = *((_QWORD *)&v50 + 1);
      v35 = v49;
      v36 = v50;
      LOBYTE(v28) = v48;
      sub_22DE809E8(v44, v45, v51, v49, v50, *((uint64_t *)&v50 + 1), v48);
      v37 = v64;
      v39 = v52;
      v38 = (uint64_t)v53;
      v52[4] = v63;
      v39[5] = v37;
      v40 = v66;
      v39[6] = v65;
      v39[7] = v40;
      v41 = v60;
      *v39 = v59;
      v39[1] = v41;
      v42 = v62;
      v39[2] = v61;
      v39[3] = v42;
      __swift_destroy_boxed_opaque_existential_1(v38);
      v67 = v32;
      *(_QWORD *)&v68 = v33;
      *((_QWORD *)&v68 + 1) = v51;
      *(_QWORD *)v69 = v35;
      *(_QWORD *)&v69[8] = v36;
      *(_QWORD *)&v69[16] = v34;
      v70 = v28;
      v71 = v54;
      v72 = v55;
      v73 = v56;
      v74 = v57;
      v75 = v26;
      v76 = v47;
      v77 = v46;
      return sub_22DE80B6C((uint64_t)&v67);
    }
    v58 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = *((_QWORD *)&v50 + 1);
    v13 = v51;
    v12 = v49;
    v11 = v50;
    sub_22DE809E8(v15, v14, v51, v49, v50, *((uint64_t *)&v50 + 1), v16);
    v57 = 0;
    v56 = 0uLL;
    v54 = 0;
    v55 = 0uLL;
    v78 = 255;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  v67 = v15;
  *(_QWORD *)&v68 = v14;
  *((_QWORD *)&v68 + 1) = v13;
  *(_QWORD *)v69 = v12;
  *(_QWORD *)&v69[8] = v11;
  *(_QWORD *)&v69[16] = v10;
  v70 = v16;
  v71 = v54;
  v72 = v55;
  v73 = v56;
  v74 = v57;
  v75 = v78;
  v76 = 0;
  v77 = 0;
  return sub_22DE80B6C((uint64_t)&v67);
}

uint64_t sub_22DE80414@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return NXMessageContext.init(from:)(a1, a2);
}

uint64_t sub_22DE80428(_QWORD *a1)
{
  return NXMessageContext.encode(to:)(a1);
}

uint64_t sub_22DE8043C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_22DE80444(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64726F7773736170 && a2 == 0xE800000000000000;
  if (v2 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22DE80524(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x636572726F636E69 && a2 == 0xE900000000000074;
  if (v2 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C74746F726874 && a2 == 0xEC000000656D6954 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t _s5Nexus18NXConnectionStatusO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;

  v2 = *a1;
  v3 = *a2;
  v4 = *a1 >> 62;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 == 1)
    {
      if (v3 >> 62 == 1)
        goto LABEL_6;
    }
    else if (v2 == 0x8000000000000000)
    {
      if (v3 == 0x8000000000000000)
      {
        v5 = 1;
        v2 = 0x8000000000000000;
        v3 = 0x8000000000000000;
        goto LABEL_16;
      }
    }
    else if (v2 == 0x8000000000000008)
    {
      if (v3 == 0x8000000000000008)
      {
        v5 = 1;
        v2 = 0x8000000000000008;
        v3 = 0x8000000000000008;
        goto LABEL_16;
      }
    }
    else if (v3 == 0x8000000000000010)
    {
      v5 = 1;
      v2 = 0x8000000000000010;
      v3 = 0x8000000000000010;
      goto LABEL_16;
    }
LABEL_15:
    sub_22DE81620(*a2);
    sub_22DE81620(v2);
    v5 = 0;
    goto LABEL_16;
  }
  if (v3 >> 62)
    goto LABEL_15;
LABEL_6:
  sub_22DE82F80();
  sub_22DE81620(v3);
  sub_22DE81620(v2);
  v5 = sub_22DEFAC08();
LABEL_16:
  sub_22DE7E9E8(v2);
  sub_22DE7E9E8(v3);
  return v5 & 1;
}

unint64_t sub_22DE807DC()
{
  unint64_t result;

  result = qword_255DC78B8;
  if (!qword_255DC78B8)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC91C, &type metadata for NXConnectionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC78B8);
  }
  return result;
}

unint64_t sub_22DE80820()
{
  unint64_t result;

  result = qword_255DC5F68;
  if (!qword_255DC5F68)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBDF4, &type metadata for NXConnectionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC5F68);
  }
  return result;
}

unint64_t sub_22DE80864()
{
  unint64_t result;

  result = qword_255DC78C0;
  if (!qword_255DC78C0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC8CC, &type metadata for NXConnectionStatus.ConnectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC78C0);
  }
  return result;
}

unint64_t sub_22DE808A8()
{
  unint64_t result;

  result = qword_255DC5F70;
  if (!qword_255DC5F70)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBCB4, &type metadata for NXConnectionStatus.WaitingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC5F70);
  }
  return result;
}

unint64_t sub_22DE808EC()
{
  unint64_t result;

  result = qword_255DC78C8;
  if (!qword_255DC78C8)
  {
    result = MEMORY[0x22E321D70]("팪!и", &type metadata for NXConnectionStatus.ConnectingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC78C8);
  }
  return result;
}

unint64_t sub_22DE80930()
{
  unint64_t result;

  result = qword_255DC78D0;
  if (!qword_255DC78D0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC82C, &type metadata for NXConnectionStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC78D0);
  }
  return result;
}

uint64_t sub_22DE80974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 0xFF)
    return sub_22DE80988(a1, a2, a3, a4, a5, a6, a7);
  return a1;
}

uint64_t sub_22DE80988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result;

  if (a7 >= 3u && a7 != 4)
  {
    if (a7 != 3)
      return result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DE809E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 0xFF)
    return sub_22DE809FC(a1, a2, a3, a4, a5, a6, a7);
  return a1;
}

uint64_t sub_22DE809FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result;

  if (a7 >= 3u && a7 != 4)
  {
    if (a7 != 3)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_22DE80A5C()
{
  unint64_t result;

  result = qword_255DC5FB0;
  if (!qword_255DC5FB0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXMessageContext, &type metadata for NXMessageContext);
    atomic_store(result, (unint64_t *)&qword_255DC5FB0);
  }
  return result;
}

unint64_t sub_22DE80AA0()
{
  unint64_t result;

  result = qword_255DC5FB8;
  if (!qword_255DC5FB8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXMessageContext, &type metadata for NXMessageContext);
    atomic_store(result, (unint64_t *)&qword_255DC5FB8);
  }
  return result;
}

unint64_t sub_22DE80AE4()
{
  unint64_t result;

  result = qword_255DC78D8[0];
  if (!qword_255DC78D8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC7DC, &type metadata for NXMessageContext.CodingKeys);
    atomic_store(result, qword_255DC78D8);
  }
  return result;
}

unint64_t sub_22DE80B28()
{
  unint64_t result;

  result = qword_255DC5FC8;
  if (!qword_255DC5FC8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXEndpoint, &type metadata for NXEndpoint);
    atomic_store(result, (unint64_t *)&qword_255DC5FC8);
  }
  return result;
}

uint64_t sub_22DE80B6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  sub_22DE809E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  sub_22DE809E8(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22DE80C00()
{
  unint64_t result;

  result = qword_255DC5FD8;
  if (!qword_255DC5FD8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXEndpoint, &type metadata for NXEndpoint);
    atomic_store(result, (unint64_t *)&qword_255DC5FD8);
  }
  return result;
}

uint64_t sub_22DE80C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  sub_22DE80974(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  sub_22DE80974(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_22DE80CDC()
{
  unint64_t result;

  result = qword_255DC5FE0;
  if (!qword_255DC5FE0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationType, &type metadata for NXAuthenticationType);
    atomic_store(result, (unint64_t *)&qword_255DC5FE0);
  }
  return result;
}

unint64_t sub_22DE80D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DC5FE8;
  if (!qword_255DC5FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC5FF0);
    result = MEMORY[0x22E321D70](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255DC5FE8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E321D64](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_22DE80DB8()
{
  unint64_t result;

  result = qword_255DC5FF8;
  if (!qword_255DC5FF8)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBC14, &type metadata for NXConnectionStatus.WaitingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC5FF8);
  }
  return result;
}

unint64_t sub_22DE80E00()
{
  unint64_t result;

  result = qword_255DC6000;
  if (!qword_255DC6000)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBD2C, &type metadata for NXConnectionStatus.WaitingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6000);
  }
  return result;
}

unint64_t sub_22DE80E48()
{
  unint64_t result;

  result = qword_255DC6008;
  if (!qword_255DC6008)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBD04, &type metadata for NXConnectionStatus.WaitingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6008);
  }
  return result;
}

unint64_t sub_22DE80E90()
{
  unint64_t result;

  result = qword_255DC6010;
  if (!qword_255DC6010)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBD54, &type metadata for NXConnectionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6010);
  }
  return result;
}

unint64_t sub_22DE80ED8()
{
  unint64_t result;

  result = qword_255DC6018;
  if (!qword_255DC6018)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBE6C, &type metadata for NXConnectionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6018);
  }
  return result;
}

unint64_t sub_22DE80F20()
{
  unint64_t result;

  result = qword_255DC6020;
  if (!qword_255DC6020)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFBE44, &type metadata for NXConnectionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6020);
  }
  return result;
}

unint64_t sub_22DE80F68()
{
  unint64_t result;

  result = qword_255DC6028;
  if (!qword_255DC6028)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXConnectionStatus, &type metadata for NXConnectionStatus);
    atomic_store(result, (unint64_t *)&qword_255DC6028);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for NXAuthenticationAttemptInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for NXAuthenticationAttemptInfo()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for NXAuthenticationAttemptInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for NXAuthenticationAttemptInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NXAuthenticationAttemptInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NXAuthenticationAttemptInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationAttemptInfo()
{
  return &type metadata for NXAuthenticationAttemptInfo;
}

void **initializeBufferWithCopyOfBuffer for NXAuthenticationCompletedInfo(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for NXAuthenticationCompletedInfo(id *a1)
{

}

void **assignWithCopy for NXAuthenticationCompletedInfo(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for NXAuthenticationCompletedInfo(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for NXAuthenticationCompletedInfo(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXAuthenticationCompletedInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationCompletedInfo()
{
  return &type metadata for NXAuthenticationCompletedInfo;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationConfiguration()
{
  return &type metadata for NXAuthenticationConfiguration;
}

uint64_t sub_22DE8127C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NXAuthenticationPresentInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NXAuthenticationPresentInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXAuthenticationPresentInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NXAuthenticationPresentInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationPresentInfo()
{
  return &type metadata for NXAuthenticationPresentInfo;
}

uint64_t getEnumTagSinglePayload for NXAuthenticationRequestInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NXAuthenticationRequestInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationRequestInfo()
{
  return &type metadata for NXAuthenticationRequestInfo;
}

uint64_t _s5Nexus20NXAuthenticationTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5Nexus20NXAuthenticationTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_22DE81570 + 4 * byte_22DEFB775[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_22DE815A4 + 4 * byte_22DEFB770[v4]))();
}

uint64_t sub_22DE815A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE815AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE815B4);
  return result;
}

uint64_t sub_22DE815C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE815C8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_22DE815CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE815D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationType()
{
  return &type metadata for NXAuthenticationType;
}

unint64_t *initializeBufferWithCopyOfBuffer for NXConnectionStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_22DE81620(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_22DE81620(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void destroy for NXConnectionStatus(unint64_t *a1)
{
  sub_22DE7E9E8(*a1);
}

unint64_t *assignWithCopy for NXConnectionStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_22DE81620(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_22DE7E9E8(v4);
  return a1;
}

unint64_t *assignWithTake for NXConnectionStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_22DE7E9E8(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXConnectionStatus(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NXConnectionStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_22DE81758(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_22DE81774(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_22DE81784(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for NXConnectionStatus()
{
  return &type metadata for NXConnectionStatus;
}

uint64_t sub_22DE817CC()
{
  return 0;
}

ValueMetadata *type metadata accessor for NXConnectionStatus.WaitingCodingKeys()
{
  return &type metadata for NXConnectionStatus.WaitingCodingKeys;
}

ValueMetadata *type metadata accessor for NXConnectionStatus.FailedCodingKeys()
{
  return &type metadata for NXConnectionStatus.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for NXHandlerOptions()
{
  return &type metadata for NXHandlerOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for NXEndpoint(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for NXMessageContext(uint64_t a1)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 != 255)
    sub_22DE809FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v2);
  v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 != 255)
    sub_22DE809FC(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), v3);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NXMessageContext(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v4 = *((unsigned __int8 *)a2 + 48);
  if (v4 == 255)
  {
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    v7 = a2[2];
    v8 = a2[3];
    v9 = a2[4];
    v10 = a2[5];
    sub_22DE80988(*a2, v6, v7, v8, v9, v10, v4);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v4;
  }
  v12 = *((unsigned __int8 *)a2 + 104);
  if (v12 == 255)
  {
    v19 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = v19;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  }
  else
  {
    v13 = a2[7];
    v14 = a2[8];
    v15 = a2[9];
    v16 = a2[10];
    v17 = a2[11];
    v18 = a2[12];
    sub_22DE80988(v13, v14, v15, v16, v17, v18, *((_BYTE *)a2 + 104));
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = v15;
    *(_QWORD *)(a1 + 80) = v16;
    *(_QWORD *)(a1 + 88) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    *(_BYTE *)(a1 + 104) = v12;
  }
  v20 = a2[15];
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NXMessageContext(uint64_t a1, __int128 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  __int128 *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v4 = *((unsigned __int8 *)a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v4 == 255)
    {
      v27 = *a2;
      v28 = a2[1];
      v29 = a2[2];
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_OWORD *)(a1 + 16) = v28;
      *(_OWORD *)(a1 + 32) = v29;
      *(_OWORD *)a1 = v27;
    }
    else
    {
      v18 = *(_QWORD *)a2;
      v19 = *((_QWORD *)a2 + 1);
      v20 = *((_QWORD *)a2 + 2);
      v21 = *((_QWORD *)a2 + 3);
      v22 = *((_QWORD *)a2 + 4);
      v23 = *((_QWORD *)a2 + 5);
      sub_22DE80988(*(_QWORD *)a2, v19, v20, v21, v22, v23, v4);
      *(_QWORD *)a1 = v18;
      *(_QWORD *)(a1 + 8) = v19;
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = v21;
      *(_QWORD *)(a1 + 32) = v22;
      *(_QWORD *)(a1 + 40) = v23;
      *(_BYTE *)(a1 + 48) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_22DE81BF8(a1);
    v25 = a2[1];
    v24 = a2[2];
    v26 = *a2;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)(a1 + 16) = v25;
    *(_OWORD *)(a1 + 32) = v24;
    *(_OWORD *)a1 = v26;
  }
  else
  {
    v5 = *(_QWORD *)a2;
    v6 = *((_QWORD *)a2 + 1);
    v7 = *((_QWORD *)a2 + 2);
    v8 = *((_QWORD *)a2 + 3);
    v9 = *((_QWORD *)a2 + 4);
    v10 = *((_QWORD *)a2 + 5);
    sub_22DE80988(*(_QWORD *)a2, v6, v7, v8, v9, v10, v4);
    v11 = *(_QWORD *)a1;
    v12 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(_QWORD *)(a1 + 24);
    v15 = *(_QWORD *)(a1 + 32);
    v16 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    v17 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v4;
    sub_22DE809FC(v11, v12, v13, v14, v15, v16, v17);
  }
  v30 = (_OWORD *)(a1 + 56);
  v31 = (__int128 *)((char *)a2 + 56);
  v32 = *((unsigned __int8 *)a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) == 255)
  {
    if (v32 == 255)
    {
      v55 = *v31;
      v56 = *(__int128 *)((char *)a2 + 72);
      v57 = *(__int128 *)((char *)a2 + 88);
      *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
      *(_OWORD *)(a1 + 72) = v56;
      *(_OWORD *)(a1 + 88) = v57;
      *v30 = v55;
    }
    else
    {
      v46 = *((_QWORD *)a2 + 7);
      v47 = *((_QWORD *)a2 + 8);
      v48 = *((_QWORD *)a2 + 9);
      v49 = *((_QWORD *)a2 + 10);
      v50 = *((_QWORD *)a2 + 11);
      v51 = *((_QWORD *)a2 + 12);
      sub_22DE80988(v46, v47, v48, v49, v50, v51, *((_BYTE *)a2 + 104));
      *(_QWORD *)(a1 + 56) = v46;
      *(_QWORD *)(a1 + 64) = v47;
      *(_QWORD *)(a1 + 72) = v48;
      *(_QWORD *)(a1 + 80) = v49;
      *(_QWORD *)(a1 + 88) = v50;
      *(_QWORD *)(a1 + 96) = v51;
      *(_BYTE *)(a1 + 104) = v32;
    }
  }
  else if (v32 == 255)
  {
    sub_22DE81BF8(a1 + 56);
    v53 = *(__int128 *)((char *)a2 + 72);
    v52 = *(__int128 *)((char *)a2 + 88);
    v54 = *v31;
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    *(_OWORD *)(a1 + 72) = v53;
    *(_OWORD *)(a1 + 88) = v52;
    *v30 = v54;
  }
  else
  {
    v33 = *((_QWORD *)a2 + 7);
    v34 = *((_QWORD *)a2 + 8);
    v35 = *((_QWORD *)a2 + 9);
    v36 = *((_QWORD *)a2 + 10);
    v37 = *((_QWORD *)a2 + 11);
    v38 = *((_QWORD *)a2 + 12);
    sub_22DE80988(v33, v34, v35, v36, v37, v38, *((_BYTE *)a2 + 104));
    v39 = *(_QWORD *)(a1 + 56);
    v40 = *(_QWORD *)(a1 + 64);
    v41 = *(_QWORD *)(a1 + 72);
    v42 = *(_QWORD *)(a1 + 80);
    v43 = *(_QWORD *)(a1 + 88);
    v44 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 56) = v33;
    *(_QWORD *)(a1 + 64) = v34;
    *(_QWORD *)(a1 + 72) = v35;
    *(_QWORD *)(a1 + 80) = v36;
    *(_QWORD *)(a1 + 88) = v37;
    *(_QWORD *)(a1 + 96) = v38;
    v45 = *(_BYTE *)(a1 + 104);
    *(_BYTE *)(a1 + 104) = v32;
    sub_22DE809FC(v39, v40, v41, v42, v43, v44, v45);
  }
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22DE81BF8(uint64_t a1)
{
  destroy for NXEndpoint(a1);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for NXMessageContext(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v4 = *(unsigned __int8 *)(a1 + 48);
  if (v4 != 255)
  {
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 != 255)
    {
      v6 = *(_QWORD *)a1;
      v7 = *(_QWORD *)(a1 + 8);
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      v11 = *(_QWORD *)(a1 + 40);
      v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 48) = v5;
      sub_22DE809FC(v6, v7, v8, v9, v10, v11, v4);
      goto LABEL_6;
    }
    sub_22DE81BF8(a1);
  }
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
LABEL_6:
  v14 = *(unsigned __int8 *)(a1 + 104);
  if (v14 == 255)
  {
LABEL_10:
    v22 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v22;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    goto LABEL_11;
  }
  v15 = *(unsigned __int8 *)(a2 + 104);
  if (v15 == 255)
  {
    sub_22DE81BF8(a1 + 56);
    goto LABEL_10;
  }
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v15;
  sub_22DE809FC(v16, v17, v18, v19, v20, v21, v14);
LABEL_11:
  v23 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NXMessageContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 120);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXMessageContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
      *(_QWORD *)(result + 120) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXMessageContext()
{
  return &type metadata for NXMessageContext;
}

_BYTE *sub_22DE81E44(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NXMessageContext.CodingKeys()
{
  return &type metadata for NXMessageContext.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NXConnectionStatus.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXConnectionStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22DE81F38 + 4 * byte_22DEFB77F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22DE81F6C + 4 * byte_22DEFB77A[v4]))();
}

uint64_t sub_22DE81F6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE81F74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE81F7CLL);
  return result;
}

uint64_t sub_22DE81F88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE81F90);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22DE81F94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE81F9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXConnectionStatus.CodingKeys()
{
  return &type metadata for NXConnectionStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for NXConnectionStatus.UnknownCodingKeys()
{
  return &type metadata for NXConnectionStatus.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for NXConnectionStatus.ConnectingCodingKeys()
{
  return &type metadata for NXConnectionStatus.ConnectingCodingKeys;
}

ValueMetadata *type metadata accessor for NXConnectionStatus.ConnectedCodingKeys()
{
  return &type metadata for NXConnectionStatus.ConnectedCodingKeys;
}

uint64_t getEnumTagSinglePayload for NXOperationEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5Nexus16NXMessageContextV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22DE820C4 + 4 * byte_22DEFB789[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22DE820F8 + 4 * byte_22DEFB784[v4]))();
}

uint64_t sub_22DE820F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE82100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE82108);
  return result;
}

uint64_t sub_22DE82114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE8211CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22DE82120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE82128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationRequestInfo.CodingKeys()
{
  return &type metadata for NXAuthenticationRequestInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NXAuthenticationPresentInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXAuthenticationPresentInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DE82220 + 4 * byte_22DEFB793[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DE82254 + 4 * byte_22DEFB78E[v4]))();
}

uint64_t sub_22DE82254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE8225C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE82264);
  return result;
}

uint64_t sub_22DE82270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE82278);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DE8227C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE82284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_22DE82290(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationPresentInfo.CodingKeys()
{
  return &type metadata for NXAuthenticationPresentInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for NXAuthenticationConfiguration.CodingKeys()
{
  return &type metadata for NXAuthenticationConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for NXAuthenticationCompletedInfo.CodingKeys()
{
  return &type metadata for NXAuthenticationCompletedInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NXDiagnosticShowResponseMessage.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s5Nexus18NXConnectionStatusO17WaitingCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22DE8235C + 4 * byte_22DEFB798[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22DE8237C + 4 * byte_22DEFB79D[v4]))();
}

_BYTE *sub_22DE8235C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22DE8237C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DE82384(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DE8238C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DE82394(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DE8239C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NXAuthenticationAttemptInfo.CodingKeys()
{
  return &type metadata for NXAuthenticationAttemptInfo.CodingKeys;
}

unint64_t sub_22DE823BC()
{
  unint64_t result;

  result = qword_255DC90E0[0];
  if (!qword_255DC90E0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC274, &type metadata for NXAuthenticationAttemptInfo.CodingKeys);
    atomic_store(result, qword_255DC90E0);
  }
  return result;
}

unint64_t sub_22DE82404()
{
  unint64_t result;

  result = qword_255DC92F0[0];
  if (!qword_255DC92F0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC32C, &type metadata for NXAuthenticationCompletedInfo.CodingKeys);
    atomic_store(result, qword_255DC92F0);
  }
  return result;
}

unint64_t sub_22DE8244C()
{
  unint64_t result;

  result = qword_255DC9500[0];
  if (!qword_255DC9500[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC3E4, &type metadata for NXAuthenticationConfiguration.CodingKeys);
    atomic_store(result, qword_255DC9500);
  }
  return result;
}

unint64_t sub_22DE82494()
{
  unint64_t result;

  result = qword_255DC9710[0];
  if (!qword_255DC9710[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC49C, &type metadata for NXAuthenticationPresentInfo.CodingKeys);
    atomic_store(result, qword_255DC9710);
  }
  return result;
}

unint64_t sub_22DE824DC()
{
  unint64_t result;

  result = qword_255DC9920[0];
  if (!qword_255DC9920[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC554, &type metadata for NXAuthenticationRequestInfo.CodingKeys);
    atomic_store(result, qword_255DC9920);
  }
  return result;
}

unint64_t sub_22DE82524()
{
  unint64_t result;

  result = qword_255DC9E30[0];
  if (!qword_255DC9E30[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC6FC, &type metadata for NXConnectionStatus.CodingKeys);
    atomic_store(result, qword_255DC9E30);
  }
  return result;
}

unint64_t sub_22DE8256C()
{
  unint64_t result;

  result = qword_255DCA040[0];
  if (!qword_255DCA040[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC7B4, &type metadata for NXMessageContext.CodingKeys);
    atomic_store(result, qword_255DCA040);
  }
  return result;
}

unint64_t sub_22DE825B4()
{
  unint64_t result;

  result = qword_255DCA150;
  if (!qword_255DCA150)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC724, &type metadata for NXMessageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA150);
  }
  return result;
}

unint64_t sub_22DE825FC()
{
  unint64_t result;

  result = qword_255DCA158[0];
  if (!qword_255DCA158[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC74C, &type metadata for NXMessageContext.CodingKeys);
    atomic_store(result, qword_255DCA158);
  }
  return result;
}

unint64_t sub_22DE82644()
{
  unint64_t result;

  result = qword_255DCA1E0;
  if (!qword_255DCA1E0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC61C, &type metadata for NXConnectionStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA1E0);
  }
  return result;
}

unint64_t sub_22DE8268C()
{
  unint64_t result;

  result = qword_255DCA1E8[0];
  if (!qword_255DCA1E8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC644, &type metadata for NXConnectionStatus.UnknownCodingKeys);
    atomic_store(result, qword_255DCA1E8);
  }
  return result;
}

unint64_t sub_22DE826D4()
{
  unint64_t result;

  result = qword_255DCA270;
  if (!qword_255DCA270)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC5CC, &type metadata for NXConnectionStatus.ConnectingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA270);
  }
  return result;
}

unint64_t sub_22DE8271C()
{
  unint64_t result;

  result = qword_255DCA278;
  if (!qword_255DCA278)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC5F4, &type metadata for NXConnectionStatus.ConnectingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA278);
  }
  return result;
}

unint64_t sub_22DE82764()
{
  unint64_t result;

  result = qword_255DCA300;
  if (!qword_255DCA300)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC57C, &type metadata for NXConnectionStatus.ConnectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA300);
  }
  return result;
}

unint64_t sub_22DE827AC()
{
  unint64_t result;

  result = qword_255DCA308[0];
  if (!qword_255DCA308[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC5A4, &type metadata for NXConnectionStatus.ConnectedCodingKeys);
    atomic_store(result, qword_255DCA308);
  }
  return result;
}

unint64_t sub_22DE827F4()
{
  unint64_t result;

  result = qword_255DCA390;
  if (!qword_255DCA390)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC66C, &type metadata for NXConnectionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA390);
  }
  return result;
}

unint64_t sub_22DE8283C()
{
  unint64_t result;

  result = qword_255DCA398[0];
  if (!qword_255DCA398[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC694, &type metadata for NXConnectionStatus.CodingKeys);
    atomic_store(result, qword_255DCA398);
  }
  return result;
}

unint64_t sub_22DE82884()
{
  unint64_t result;

  result = qword_255DCA420;
  if (!qword_255DCA420)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC4C4, &type metadata for NXAuthenticationRequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA420);
  }
  return result;
}

unint64_t sub_22DE828CC()
{
  unint64_t result;

  result = qword_255DCA428[0];
  if (!qword_255DCA428[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC4EC, &type metadata for NXAuthenticationRequestInfo.CodingKeys);
    atomic_store(result, qword_255DCA428);
  }
  return result;
}

unint64_t sub_22DE82914()
{
  unint64_t result;

  result = qword_255DCA4B0;
  if (!qword_255DCA4B0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC40C, &type metadata for NXAuthenticationPresentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA4B0);
  }
  return result;
}

unint64_t sub_22DE8295C()
{
  unint64_t result;

  result = qword_255DCA4B8[0];
  if (!qword_255DCA4B8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC434, &type metadata for NXAuthenticationPresentInfo.CodingKeys);
    atomic_store(result, qword_255DCA4B8);
  }
  return result;
}

unint64_t sub_22DE829A4()
{
  unint64_t result;

  result = qword_255DCA540;
  if (!qword_255DCA540)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC354, &type metadata for NXAuthenticationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA540);
  }
  return result;
}

unint64_t sub_22DE829EC()
{
  unint64_t result;

  result = qword_255DCA548[0];
  if (!qword_255DCA548[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC37C, &type metadata for NXAuthenticationConfiguration.CodingKeys);
    atomic_store(result, qword_255DCA548);
  }
  return result;
}

unint64_t sub_22DE82A34()
{
  unint64_t result;

  result = qword_255DCA5D0;
  if (!qword_255DCA5D0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC29C, &type metadata for NXAuthenticationCompletedInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA5D0);
  }
  return result;
}

unint64_t sub_22DE82A7C()
{
  unint64_t result;

  result = qword_255DCA5D8[0];
  if (!qword_255DCA5D8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC2C4, &type metadata for NXAuthenticationCompletedInfo.CodingKeys);
    atomic_store(result, qword_255DCA5D8);
  }
  return result;
}

unint64_t sub_22DE82AC4()
{
  unint64_t result;

  result = qword_255DCA660;
  if (!qword_255DCA660)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC1E4, &type metadata for NXAuthenticationAttemptInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCA660);
  }
  return result;
}

unint64_t sub_22DE82B0C()
{
  unint64_t result;

  result = qword_255DCA668[0];
  if (!qword_255DCA668[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFC20C, &type metadata for NXAuthenticationAttemptInfo.CodingKeys);
    atomic_store(result, qword_255DCA668);
  }
  return result;
}

uint64_t sub_22DE82B50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEA0000000000676ELL || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E6974696177 && a2 == 0xE700000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657463656E6E6F63 && a2 == 0xE900000000000064 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_22DE82D7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646E456C61636F6CLL && a2 == 0xED0000746E696F70;
  if (v2 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E4565746F6D6572 && a2 == 0xEE00746E696F7064 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x75427265646E6573 && a2 == 0xEE004449656C646ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_22DE82F3C()
{
  unint64_t result;

  result = qword_255DC6030;
  if (!qword_255DC6030)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationType, &type metadata for NXAuthenticationType);
    atomic_store(result, (unint64_t *)&qword_255DC6030);
  }
  return result;
}

unint64_t sub_22DE82F80()
{
  unint64_t result;

  result = qword_255DC6038;
  if (!qword_255DC6038)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255DC6038);
  }
  return result;
}

Nexus::NXErrorCode_optional __swiftcall NXErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  v2 = 0;
  v3 = 5;
  switch(rawValue)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v2 = 1;
      goto LABEL_7;
    case 2:
      v2 = 2;
      goto LABEL_7;
    case 3:
      v2 = 3;
      goto LABEL_7;
    case 4:
      v2 = 4;
LABEL_7:
      v3 = v2;
      goto LABEL_8;
    case 5:
LABEL_8:
      *v1 = v3;
      break;
    case 6:
      *v1 = 6;
      break;
    case 7:
      *v1 = 7;
      break;
    case 8:
      *v1 = 8;
      break;
    case 9:
      *v1 = 9;
      break;
    case 10:
      *v1 = 10;
      break;
    case 11:
      *v1 = 11;
      break;
    case 12:
      *v1 = 12;
      break;
    case 13:
      *v1 = 13;
      break;
    case 14:
      *v1 = 14;
      break;
    case 15:
      *v1 = 15;
      break;
    case 16:
      *v1 = 16;
      break;
    case 17:
      *v1 = 17;
      break;
    case 18:
      *v1 = 18;
      break;
    case 19:
      *v1 = 19;
      break;
    case 20:
      *v1 = 20;
      break;
    case 21:
      *v1 = 21;
      break;
    case 22:
      *v1 = 22;
      break;
    default:
      *v1 = 23;
      break;
  }
  return (Nexus::NXErrorCode_optional)rawValue;
}

uint64_t NXErrorCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

Nexus::NXErrorCode_optional sub_22DE83120(Swift::Int *a1)
{
  return NXErrorCode.init(rawValue:)(*a1);
}

void sub_22DE83128(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_22DE83134()
{
  sub_22DE84128();
  return sub_22DEFAA7C();
}

uint64_t sub_22DE83190()
{
  sub_22DE84128();
  return sub_22DEFAA64();
}

uint64_t static NXError.domain.getter()
{
  return 0x726F727245584ELL;
}

uint64_t static NXError.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t NXError.message.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, sel_userInfo);
  v2 = sub_22DEFA968();

  sub_22DEFA62C();
  v3 = sub_22DEFA5FC();
  if (!*(_QWORD *)(v2 + 16) || (v5 = sub_22DE83DDC(v3, v4), (v6 & 1) == 0))
  {
    v9 = 0u;
    v10 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_22DE83E80(*(_QWORD *)(v2 + 56) + 32 * v5, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_9:
    sub_22DE83E40((uint64_t)&v9);
    return 0;
  }
  if (swift_dynamicCast())
    return v8;
  else
    return 0;
}

id NXError.__allocating_init(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  objc_class *v5;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v5 = v4;
  v7 = objc_allocWithZone((Class)sub_22DEFA62C());
  v8 = a4;
  v9 = (void *)sub_22DEFA614();
  v10 = objc_allocWithZone(v5);
  v11 = NXError.init(_:)(v9);

  return v11;
}

id NXError.__allocating_init(_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  objc_class *v6;
  objc_class *v7;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  v7 = v6;
  v9 = objc_allocWithZone((Class)sub_22DEFA62C());
  v10 = a6;
  v11 = (void *)sub_22DEFA614();
  v12 = objc_allocWithZone(v7);
  v13 = NXError.init(_:)(v11);

  return v13;
}

id NXError.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return NXError.init(_:)(a1);
}

{
  objc_class *v1;
  objc_class *v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v13;
  objc_super v14;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  if (a1)
  {
    v13 = v4;
    v5 = a1;
    v6 = (void *)sub_22DEFA524();
    v7 = objc_msgSend(v6, sel_domain);
    if (!v7)
    {
      sub_22DEFA9E0();
      v7 = (id)sub_22DEFA9D4();
      swift_bridgeObjectRelease();
    }
    v8 = objc_msgSend(v6, sel_code);
    v9 = objc_msgSend(v6, sel_userInfo);
    sub_22DEFA968();

    v10 = (void *)sub_22DEFA95C();
    swift_bridgeObjectRelease();
    v14.receiver = v13;
    v14.super_class = v2;
    v11 = objc_msgSendSuper2(&v14, sel_initWithDomain_code_userInfo_, v7, v8, v10);

  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

id NXError.init(_:)(void *a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  objc_class *ObjectType;
  objc_super v12;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = (void *)sub_22DEFA524();
  v5 = objc_msgSend(v4, sel_domain);
  if (!v5)
  {
    sub_22DEFA9E0();
    v5 = (id)sub_22DEFA9D4();
    swift_bridgeObjectRelease();
  }
  v6 = objc_msgSend(v4, sel_code);
  v7 = objc_msgSend(v4, sel_userInfo);
  sub_22DEFA968();

  v8 = (void *)sub_22DEFA95C();
  swift_bridgeObjectRelease();
  v12.receiver = v2;
  v12.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v12, sel_initWithDomain_code_userInfo_, v5, v6, v8);

  return v9;
}

{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  objc_class *v13;
  objc_super v14;

  v2 = v1;
  ObjectType = swift_getObjectType();
  if (a1)
  {
    v13 = (objc_class *)ObjectType;
    v5 = a1;
    v6 = (void *)sub_22DEFA524();
    v7 = objc_msgSend(v6, sel_domain);
    if (!v7)
    {
      sub_22DEFA9E0();
      v7 = (id)sub_22DEFA9D4();
      swift_bridgeObjectRelease();
    }
    v8 = objc_msgSend(v6, sel_code);
    v9 = objc_msgSend(v6, sel_userInfo);
    sub_22DEFA968();

    v10 = (void *)sub_22DEFA95C();
    swift_bridgeObjectRelease();
    v14.receiver = v2;
    v14.super_class = v13;
    v11 = objc_msgSendSuper2(&v14, sel_initWithDomain_code_userInfo_, v7, v8, v10);

  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

uint64_t NXError.__allocating_init(from:)(uint64_t a1)
{
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _BYTE v10[40];

  v3 = v1;
  v5 = sub_22DEFA62C();
  sub_22DE83EBC(a1, (uint64_t)v10);
  v6 = sub_22DEFA608();
  if (!v2)
  {
    v7 = (void *)v6;
    v8 = objc_allocWithZone(v3);
    v5 = (uint64_t)NXError.init(_:)(v7);
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

void NXError.encode(to:)()
{
  void *v0;
  id v1;
  id v2;
  void *v3;

  v1 = objc_allocWithZone((Class)sub_22DEFA62C());
  v2 = v0;
  v3 = (void *)sub_22DEFA638();
  sub_22DEFA620();

}

uint64_t NXError.errorDescription.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_22DEFA524();
  v1 = (id)CUPrintNSError();

  if (!v1)
    return 0;
  v2 = sub_22DEFA9E0();

  return v2;
}

id NXError.__allocating_init(domain:code:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  void *v8;
  void *v9;
  id v10;

  v5 = v4;
  v8 = (void *)sub_22DEFA9D4();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v9 = (void *)sub_22DEFA95C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(objc_allocWithZone(v5), sel_initWithDomain_code_userInfo_, v8, a3, v9);

  return v10;
}

void NXError.init(domain:code:userInfo:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NXError.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22DE83BFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v7;
  uint64_t result;
  void *v9;
  id v10;
  id v11;
  _BYTE v12[40];

  v4 = v2;
  sub_22DEFA62C();
  sub_22DE83EBC(a1, (uint64_t)v12);
  v7 = sub_22DEFA608();
  if (v3)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v9 = (void *)v7;
  v10 = objc_allocWithZone(v4);
  v11 = NXError.init(_:)(v9);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v11;
  return result;
}

void sub_22DE83CA4()
{
  void **v0;
  void *v1;
  id v2;
  id v3;
  void *v4;

  v1 = *v0;
  v2 = objc_allocWithZone((Class)sub_22DEFA62C());
  v3 = v1;
  v4 = (void *)sub_22DEFA638();
  sub_22DEFA620();

}

uint64_t sub_22DE83D04()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_22DEFA524();
  v1 = (id)CUPrintNSError();

  if (!v1)
    return 0;
  v2 = sub_22DEFA9E0();

  return v2;
}

uint64_t sub_22DE83D78()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_helpAnchor);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_22DEFA9E0();

  return v3;
}

unint64_t sub_22DE83DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22DEFAED8();
  sub_22DEFAA04();
  v4 = sub_22DEFAEFC();
  return sub_22DE8416C(a1, a2, v4);
}

uint64_t sub_22DE83E40(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6040);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DE83E80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22DE83EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_22DE83F04()
{
  unint64_t result;

  result = qword_255DC6048;
  if (!qword_255DC6048)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXErrorCode, &type metadata for NXErrorCode);
    atomic_store(result, (unint64_t *)&qword_255DC6048);
  }
  return result;
}

unint64_t sub_22DE83F4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DC5ED0;
  if (!qword_255DC5ED0)
  {
    v1 = type metadata accessor for NXError();
    result = MEMORY[0x22E321D70](MEMORY[0x24BDD01A8], v1);
    atomic_store(result, (unint64_t *)&qword_255DC5ED0);
  }
  return result;
}

uint64_t type metadata accessor for NXError()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for NXErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_22DE8408C + 4 * byte_22DEFCB1C[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_22DE840C0 + 4 * byte_22DEFCB17[v4]))();
}

uint64_t sub_22DE840C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE840C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE840D0);
  return result;
}

uint64_t sub_22DE840DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE840E4);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_22DE840E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE840F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXErrorCode()
{
  return &type metadata for NXErrorCode;
}

uint64_t method lookup function for NXError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXError.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_22DE84128()
{
  unint64_t result;

  result = qword_255DC6078;
  if (!qword_255DC6078)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXErrorCode, &type metadata for NXErrorCode);
    atomic_store(result, (unint64_t *)&qword_255DC6078);
  }
  return result;
}

unint64_t sub_22DE8416C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22DEFAE54() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22DEFAE54() & 1) == 0);
    }
  }
  return v6;
}

Nexus::NXEnvironmentValues __swiftcall NXEnvironmentValues.init()()
{
  Nexus::NXEnvironmentValues *v0;
  Nexus::NXEnvironmentValues *v1;
  Nexus::NXEnvironmentValues result;

  v1 = v0;
  result._values._rawValue = (void *)sub_22DE86FC0(MEMORY[0x24BEE4AF8]);
  v1->_values._rawValue = result._values._rawValue;
  return result;
}

uint64_t sub_22DE84278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _OWORD v14[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61D8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) && (v6 = sub_22DE86764((uint64_t)&type metadata for ClockNXEnvironmentKey), (v7 & 1) != 0))
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)v14);
  else
    memset(v14, 0, sizeof(v14));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  v8 = sub_22DEFA5F0();
  v9 = swift_dynamicCast();
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v9)
  {
    v11(v5, 0, 1, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v5, v8);
  }
  else
  {
    v11(v5, 1, 1, v8);
    sub_22DE8731C((uint64_t)v5, &qword_255DC61D8);
    if (qword_255DCAAF0 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v8, (uint64_t)qword_255DCAAF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v13, v8);
  }
}

id sub_22DE843E8(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for DispatchQueueNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  sub_22DE87170();
  if (swift_dynamicCast())
    return (id)v5;
  if (qword_255DCAB10 != -1)
    swift_once();
  return (id)qword_255DCAB18;
}

uint64_t sub_22DE844B8(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unsigned __int8 v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for LogFramesNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  return swift_dynamicCast() & v5;
}

uint64_t sub_22DE84540(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unsigned __int8 v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for LogMessagesNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  return swift_dynamicCast() & v5;
}

uint64_t sub_22DE845C8(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for NANMockIDNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6090);
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

uint64_t sub_22DE84664(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unsigned __int16 v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for NetworkServerPortNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  if (swift_dynamicCast())
    return v5;
  else
    return 4294934760;
}

uint64_t sub_22DE846F4(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for NexusClientNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6098);
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

uint64_t sub_22DE8478C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _OWORD v15[2];

  if (*(_QWORD *)(a1 + 16)
    && (v4 = sub_22DE86764((uint64_t)&type metadata for NexusEndpointNXEnvironmentKey), (v5 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)v15);
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v7 = v11;
    v8 = v12;
    v9 = v13;
    v10 = v14;
  }
  else
  {
    v7 = 0uLL;
    v10 = 5;
    v8 = 0uLL;
    v9 = 0uLL;
  }
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 48) = v10;
  return result;
}

uint64_t sub_22DE84840(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for NexusXPCClientNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC60A0);
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

uint64_t sub_22DE848D8(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for PairingPeerIdentityNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

uint64_t sub_22DE84970(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for PairingSelfIdentityNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

uint64_t sub_22DE84A08(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unsigned __int8 v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_22DE86764((uint64_t)&type metadata for SecurityDisabledNXEnvironmentKey), (v3 & 1) != 0))
  {
    sub_22DE83E80(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  return swift_dynamicCast() & v5;
}

uint64_t NXEnvironmentValues.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD v21[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_22DEFAC20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8]();
  v13 = (char *)v21 - v12;
  v14 = *v4;
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_22DE86764(a1), (v16 & 1) != 0))
    sub_22DE83E80(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)v21);
  else
    memset(v21, 0, sizeof(v21));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6080);
  v17 = swift_dynamicCast();
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v17 & 1) != 0)
  {
    v19(v13, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a4, v13, AssociatedTypeWitness);
  }
  else
  {
    v19(v13, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  }
}

uint64_t NXEnvironmentValues.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  sub_22DE870B4(a1, a2);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_22DE84C60(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_22DE8730C((_OWORD *)a1, v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_22DE86C84(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_22DE8731C(a1, &qword_255DC6080);
    v7 = sub_22DE86764(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_22DE86E00();
        v11 = v13;
      }
      sub_22DE8730C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v9), v14);
      sub_22DE86AF0(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_22DE8731C((uint64_t)v14, &qword_255DC6080);
  }
}

void (*NXEnvironmentValues.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  NXEnvironmentValues.subscript.getter(a2, a3, a4, (uint64_t)v13);
  return sub_22DE84E3C;
}

void sub_22DE84E3C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[6];
  v4 = (void *)(*a1)[7];
  v5 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[6], v4, v5);
    sub_22DE870B4((uint64_t)v3, v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
  }
  else
  {
    sub_22DE870B4((*a1)[7], v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_22DE84F00()
{
  uint64_t v0;

  v0 = sub_22DEFA5F0();
  __swift_allocate_value_buffer(v0, qword_255DCAAF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DCAAF8);
  return sub_22DEFA5D8();
}

uint64_t sub_22DE84F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255DCAAF0 != -1)
    swift_once();
  v2 = sub_22DEFA5F0();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255DCAAF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t NXEnvironmentValues.clock.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = swift_bridgeObjectRetain();
  sub_22DE84278(v2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE84FEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = swift_bridgeObjectRetain();
  sub_22DE84278(v2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE85020(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  sub_22DEFA5F0();
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return NXEnvironmentValues.clock.setter(v3);
}

uint64_t NXEnvironmentValues.clock.setter(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, char *, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  void (*v8)(char *, uint64_t);
  uint64_t v10[4];

  v2 = sub_22DEFA5F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  v10[3] = v2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
  v6((char *)boxed_opaque_existential_0, v5, v2);
  sub_22DE84C60((uint64_t)v10, (uint64_t)&type metadata for ClockNXEnvironmentKey);
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  return ((uint64_t (*)(char *, uint64_t))v8)(a1, v2);
}

void (*NXEnvironmentValues.clock.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = sub_22DEFA5F0();
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[11] = malloc(v6);
  v3[12] = malloc(v6);
  v7 = malloc(v6);
  v3[13] = v7;
  v8 = swift_bridgeObjectRetain();
  sub_22DE84278(v8, (uint64_t)v7);
  swift_bridgeObjectRelease();
  return sub_22DE85200;
}

void sub_22DE85200(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  void (*v11)(void *, uint64_t);
  uint64_t v12;
  uint64_t *v13;

  v3 = *a1;
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))((*a1)[10] + 16);
  v4((*a1)[12], v3[13], v3[9]);
  v6 = (void *)v3[12];
  v5 = (void *)v3[13];
  if ((a2 & 1) != 0)
  {
    v8 = v3[10];
    v7 = (void *)v3[11];
    v9 = v3[9];
    v4((uint64_t)v7, v3[12], v9);
    v3[3] = v9;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v3);
    v4((uint64_t)boxed_opaque_existential_0, (uint64_t)v7, v9);
    sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for ClockNXEnvironmentKey);
    v11 = *(void (**)(void *, uint64_t))(v8 + 8);
    v11(v7, v9);
  }
  else
  {
    v12 = v3[10];
    v7 = (void *)v3[11];
    v9 = v3[9];
    v3[7] = v9;
    v13 = __swift_allocate_boxed_opaque_existential_0(v3 + 4);
    v4((uint64_t)v13, (uint64_t)v6, v9);
    sub_22DE84C60((uint64_t)(v3 + 4), (uint64_t)&type metadata for ClockNXEnvironmentKey);
    v11 = *(void (**)(void *, uint64_t))(v12 + 8);
  }
  v11(v6, v9);
  v11(v5, v9);
  free(v5);
  free(v6);
  free(v7);
  free(v3);
}

uint64_t sub_22DE8531C()
{
  uint64_t result;

  sub_22DE87170();
  result = sub_22DEFABF0();
  qword_255DCAB18 = result;
  return result;
}

id sub_22DE8534C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_255DCAB10 != -1)
    swift_once();
  v2 = (void *)qword_255DCAB18;
  *a1 = qword_255DCAB18;
  return v2;
}

uint64_t NXEnvironmentValues.dispatchQueue.getter()
{
  return sub_22DE863A4((uint64_t (*)(uint64_t))sub_22DE843E8);
}

uint64_t sub_22DE853A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_22DE843E8(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_22DE853EC(void **a1)
{
  void *v1;
  id v2;
  _QWORD v4[4];

  v1 = *a1;
  v4[3] = sub_22DE87170();
  v4[0] = v1;
  v2 = v1;
  return sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for DispatchQueueNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.dispatchQueue.setter(uint64_t a1)
{
  _QWORD v3[4];

  v3[3] = sub_22DE87170();
  v3[0] = a1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for DispatchQueueNXEnvironmentKey);
}

void (*NXEnvironmentValues.dispatchQueue.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  a1[1] = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE843E8(v3);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return sub_22DE854D0;
}

void sub_22DE854D0(void **a1, char a2)
{
  void *v2;
  id v3;
  _QWORD v4[3];
  unint64_t v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = sub_22DE87170();
    v4[0] = v2;
    v3 = v2;
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for DispatchQueueNXEnvironmentKey);

  }
  else
  {
    v5 = sub_22DE87170();
    v4[0] = v2;
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for DispatchQueueNXEnvironmentKey);
  }
}

void sub_22DE85550(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t NXEnvironmentValues.logFrames.getter()
{
  return sub_22DE865B0(sub_22DE844B8);
}

uint64_t sub_22DE85564@<X0>(_BYTE *a1@<X8>)
{
  return sub_22DE865F8(sub_22DE844B8, a1);
}

uint64_t sub_22DE85570(char *a1)
{
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *a1;
  v4 = MEMORY[0x24BEE1328];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for LogFramesNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.logFrames.setter(char a1)
{
  _BYTE v2[24];
  uint64_t v3;

  v3 = MEMORY[0x24BEE1328];
  v2[0] = a1;
  return sub_22DE84C60((uint64_t)v2, (uint64_t)&type metadata for LogFramesNXEnvironmentKey);
}

uint64_t (*NXEnvironmentValues.logFrames.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)a1 = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE844B8(v3);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_22DE85648;
}

uint64_t sub_22DE85648(uint64_t a1)
{
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *(_BYTE *)(a1 + 8);
  v4 = MEMORY[0x24BEE1328];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for LogFramesNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.logMessages.getter()
{
  return sub_22DE865B0(sub_22DE84540);
}

uint64_t sub_22DE8569C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22DE865F8(sub_22DE84540, a1);
}

uint64_t sub_22DE856A8(char *a1)
{
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *a1;
  v4 = MEMORY[0x24BEE1328];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for LogMessagesNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.logMessages.setter(char a1)
{
  _BYTE v2[24];
  uint64_t v3;

  v3 = MEMORY[0x24BEE1328];
  v2[0] = a1;
  return sub_22DE84C60((uint64_t)v2, (uint64_t)&type metadata for LogMessagesNXEnvironmentKey);
}

uint64_t (*NXEnvironmentValues.logMessages.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)a1 = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE84540(v3);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_22DE85780;
}

uint64_t sub_22DE85780(uint64_t a1)
{
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *(_BYTE *)(a1 + 8);
  v4 = MEMORY[0x24BEE1328];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for LogMessagesNXEnvironmentKey);
}

void sub_22DE857C8(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t NXEnvironmentValues.nanMockID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_22DE845C8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22DE85818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_22DE845C8(v2);
  v5 = v4;
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_22DE85860(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v2 = *a1;
  v1 = a1[1];
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6090);
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain();
  return sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for NANMockIDNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.nanMockID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD v5[4];

  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6090);
  v5[0] = a1;
  v5[1] = a2;
  return sub_22DE84C60((uint64_t)v5, (uint64_t)&type metadata for NANMockIDNXEnvironmentKey);
}

uint64_t (*NXEnvironmentValues.nanMockID.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  a1[2] = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE845C8(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v6;
  return sub_22DE85968;
}

uint64_t sub_22DE85968(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6090);
    v5 = v3;
    v6 = v2;
    swift_bridgeObjectRetain();
    sub_22DE84C60((uint64_t)&v5, (uint64_t)&type metadata for NANMockIDNXEnvironmentKey);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6090);
    v5 = v3;
    v6 = v2;
    return sub_22DE84C60((uint64_t)&v5, (uint64_t)&type metadata for NANMockIDNXEnvironmentKey);
  }
}

void sub_22DE859FC(_WORD *a1@<X8>)
{
  *a1 = -32536;
}

uint64_t NXEnvironmentValues.networkServerPort.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_22DE84664(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22DE85A40@<X0>(_WORD *a1@<X8>)
{
  uint64_t v2;
  __int16 v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_22DE84664(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_22DE85A84(__int16 *a1)
{
  __int16 v1;
  _WORD v3[12];
  uint64_t v4;

  v1 = *a1;
  v4 = MEMORY[0x24BEE4478];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for NetworkServerPortNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.networkServerPort.setter(__int16 a1)
{
  _WORD v2[12];
  uint64_t v3;

  v3 = MEMORY[0x24BEE4478];
  v2[0] = a1;
  return sub_22DE84C60((uint64_t)v2, (uint64_t)&type metadata for NetworkServerPortNXEnvironmentKey);
}

uint64_t (*NXEnvironmentValues.networkServerPort.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;

  *(_QWORD *)a1 = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE84664(v3);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = v4;
  return sub_22DE85B58;
}

uint64_t sub_22DE85B58(uint64_t a1)
{
  __int16 v1;
  _WORD v3[12];
  uint64_t v4;

  v1 = *(_WORD *)(a1 + 8);
  v4 = MEMORY[0x24BEE4478];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for NetworkServerPortNXEnvironmentKey);
}

void sub_22DE85BA0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t NXEnvironmentValues.nexusClient.getter()
{
  return sub_22DE863A4(sub_22DE846F4);
}

uint64_t sub_22DE85BB4@<X0>(uint64_t *a1@<X8>)
{
  return sub_22DE863EC(sub_22DE846F4, a1);
}

uint64_t sub_22DE85BC0(uint64_t *a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v1 = *a1;
  v3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6098);
  v3[0] = v1;
  swift_retain();
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for NexusClientNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.nexusClient.setter(uint64_t a1)
{
  _QWORD v3[4];

  v3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6098);
  v3[0] = a1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for NexusClientNXEnvironmentKey);
}

uint64_t (*NXEnvironmentValues.nexusClient.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[1] = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE846F4(v3);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return sub_22DE85CB0;
}

uint64_t sub_22DE85CB0(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6098);
    v4[0] = v2;
    swift_retain();
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for NexusClientNXEnvironmentKey);
    return swift_release();
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6098);
    v4[0] = v2;
    return sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for NexusClientNXEnvironmentKey);
  }
}

double sub_22DE85D34@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 48) = 5;
  return result;
}

uint64_t NXEnvironmentValues.nexusEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = swift_bridgeObjectRetain();
  sub_22DE8478C(v2, a1);
  return swift_bridgeObjectRelease();
}

double sub_22DE85D80@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;
  char v8;

  v2 = swift_bridgeObjectRetain();
  sub_22DE8478C(v2, (uint64_t)v6);
  swift_bridgeObjectRelease();
  v3 = v8;
  v4 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v4;
  result = *(double *)&v7;
  *(_OWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 48) = v3;
  return result;
}

uint64_t sub_22DE85DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  _QWORD v10[4];

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  v10[3] = &type metadata for NXEndpoint;
  v8 = swift_allocObject();
  v10[0] = v8;
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v2;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v4;
  *(_QWORD *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 56) = v6;
  *(_BYTE *)(v8 + 64) = v7;
  sub_22DE80988(v1, v2, v3, v4, v5, v6, v7);
  return sub_22DE84C60((uint64_t)v10, (uint64_t)&type metadata for NexusEndpointNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.nexusEndpoint.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  _QWORD v8[4];

  v6 = a1[1];
  v7 = *a1;
  v1 = *((_QWORD *)a1 + 4);
  v2 = *((_QWORD *)a1 + 5);
  v3 = *((_BYTE *)a1 + 48);
  v8[3] = &type metadata for NXEndpoint;
  v4 = swift_allocObject();
  v8[0] = v4;
  *(_OWORD *)(v4 + 16) = v7;
  *(_OWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v1;
  *(_QWORD *)(v4 + 56) = v2;
  *(_BYTE *)(v4 + 64) = v3;
  return sub_22DE84C60((uint64_t)v8, (uint64_t)&type metadata for NexusEndpointNXEnvironmentKey);
}

void (*NXEnvironmentValues.nexusEndpoint.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  v4 = swift_bridgeObjectRetain();
  sub_22DE8478C(v4, (uint64_t)v3);
  swift_bridgeObjectRelease();
  return sub_22DE85F6C;
}

void sub_22DE85F6C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  v8 = (*a1)[4];
  v7 = (*a1)[5];
  v9 = *((_BYTE *)*a1 + 48);
  v12[3] = &type metadata for NXEndpoint;
  if ((a2 & 1) != 0)
  {
    v10 = swift_allocObject();
    v12[0] = v10;
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = v3;
    *(_QWORD *)(v10 + 32) = v6;
    *(_QWORD *)(v10 + 40) = v5;
    *(_QWORD *)(v10 + 48) = v8;
    *(_QWORD *)(v10 + 56) = v7;
    *(_BYTE *)(v10 + 64) = v9;
    sub_22DE80988(v4, v3, v6, v5, v8, v7, v9);
    sub_22DE84C60((uint64_t)v12, (uint64_t)&type metadata for NexusEndpointNXEnvironmentKey);
    sub_22DE809FC(*v2, v2[1], v2[2], v2[3], v2[4], v2[5], *((_BYTE *)v2 + 48));
  }
  else
  {
    v11 = swift_allocObject();
    v12[0] = v11;
    *(_QWORD *)(v11 + 16) = v4;
    *(_QWORD *)(v11 + 24) = v3;
    *(_QWORD *)(v11 + 32) = v6;
    *(_QWORD *)(v11 + 40) = v5;
    *(_QWORD *)(v11 + 48) = v8;
    *(_QWORD *)(v11 + 56) = v7;
    *(_BYTE *)(v11 + 64) = v9;
    sub_22DE84C60((uint64_t)v12, (uint64_t)&type metadata for NexusEndpointNXEnvironmentKey);
  }
  free(v2);
}

uint64_t NXEnvironmentValues.nexusXPCClient.getter()
{
  return sub_22DE863A4(sub_22DE84840);
}

uint64_t sub_22DE86090@<X0>(uint64_t *a1@<X8>)
{
  return sub_22DE863EC(sub_22DE84840, a1);
}

uint64_t sub_22DE8609C(uint64_t *a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v1 = *a1;
  v3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC60A0);
  v3[0] = v1;
  swift_retain();
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for NexusXPCClientNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.nexusXPCClient.setter(uint64_t a1)
{
  _QWORD v3[4];

  v3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC60A0);
  v3[0] = a1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for NexusXPCClientNXEnvironmentKey);
}

uint64_t (*NXEnvironmentValues.nexusXPCClient.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[1] = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE84840(v3);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return sub_22DE8618C;
}

uint64_t sub_22DE8618C(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC60A0);
    v4[0] = v2;
    swift_retain();
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for NexusXPCClientNXEnvironmentKey);
    return swift_release();
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC60A0);
    v4[0] = v2;
    return sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for NexusXPCClientNXEnvironmentKey);
  }
}

uint64_t NXEnvironmentValues.pairingPeerIdentity.getter()
{
  return sub_22DE863A4(sub_22DE848D8);
}

uint64_t sub_22DE8621C@<X0>(uint64_t *a1@<X8>)
{
  return sub_22DE863EC(sub_22DE848D8, a1);
}

uint64_t sub_22DE86228(void **a1)
{
  void *v1;
  id v2;
  _QWORD v4[4];

  v1 = *a1;
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
  v4[0] = v1;
  v2 = v1;
  return sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for PairingPeerIdentityNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.pairingPeerIdentity.setter(uint64_t a1)
{
  _QWORD v3[4];

  v3[3] = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
  v3[0] = a1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for PairingPeerIdentityNXEnvironmentKey);
}

void (*NXEnvironmentValues.pairingPeerIdentity.modify(uint64_t *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[1] = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE848D8(v3);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return sub_22DE86314;
}

void sub_22DE86314(void **a1, char a2)
{
  void *v2;
  id v3;
  _QWORD v4[3];
  uint64_t v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
    v4[0] = v2;
    v3 = v2;
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for PairingPeerIdentityNXEnvironmentKey);

  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
    v4[0] = v2;
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for PairingPeerIdentityNXEnvironmentKey);
  }
}

uint64_t NXEnvironmentValues.pairingSelfIdentity.getter()
{
  return sub_22DE863A4(sub_22DE84970);
}

uint64_t sub_22DE863A4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_bridgeObjectRetain();
  v3 = a1(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_22DE863E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_22DE863EC(sub_22DE84970, a1);
}

uint64_t sub_22DE863EC@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = swift_bridgeObjectRetain();
  v5 = a1(v4);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_22DE86434(void **a1)
{
  void *v1;
  id v2;
  _QWORD v4[4];

  v1 = *a1;
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
  v4[0] = v1;
  v2 = v1;
  return sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for PairingSelfIdentityNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.pairingSelfIdentity.setter(uint64_t a1)
{
  _QWORD v3[4];

  v3[3] = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
  v3[0] = a1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for PairingSelfIdentityNXEnvironmentKey);
}

void (*NXEnvironmentValues.pairingSelfIdentity.modify(uint64_t *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[1] = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE84970(v3);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return sub_22DE86520;
}

void sub_22DE86520(void **a1, char a2)
{
  void *v2;
  id v3;
  _QWORD v4[3];
  uint64_t v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
    v4[0] = v2;
    v3 = v2;
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for PairingSelfIdentityNXEnvironmentKey);

  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(qword_255DC60A8);
    v4[0] = v2;
    sub_22DE84C60((uint64_t)v4, (uint64_t)&type metadata for PairingSelfIdentityNXEnvironmentKey);
  }
}

uint64_t NXEnvironmentValues.securityDisabled.getter()
{
  return sub_22DE865B0(sub_22DE84A08);
}

uint64_t sub_22DE865B0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  v2 = swift_bridgeObjectRetain();
  LOBYTE(a1) = a1(v2);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_22DE865EC@<X0>(_BYTE *a1@<X8>)
{
  return sub_22DE865F8(sub_22DE84A08, a1);
}

uint64_t sub_22DE865F8@<X0>(uint64_t (*a1)(uint64_t)@<X3>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = swift_bridgeObjectRetain();
  LOBYTE(a1) = a1(v4);
  result = swift_bridgeObjectRelease();
  *a2 = a1 & 1;
  return result;
}

uint64_t sub_22DE86644(char *a1)
{
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *a1;
  v4 = MEMORY[0x24BEE1328];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for SecurityDisabledNXEnvironmentKey);
}

uint64_t NXEnvironmentValues.securityDisabled.setter(char a1)
{
  _BYTE v2[24];
  uint64_t v3;

  v3 = MEMORY[0x24BEE1328];
  v2[0] = a1;
  return sub_22DE84C60((uint64_t)v2, (uint64_t)&type metadata for SecurityDisabledNXEnvironmentKey);
}

uint64_t (*NXEnvironmentValues.securityDisabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)a1 = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_22DE84A08(v3);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_22DE8671C;
}

uint64_t sub_22DE8671C(uint64_t a1)
{
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *(_BYTE *)(a1 + 8);
  v4 = MEMORY[0x24BEE1328];
  v3[0] = v1;
  return sub_22DE84C60((uint64_t)v3, (uint64_t)&type metadata for SecurityDisabledNXEnvironmentKey);
}

unint64_t sub_22DE86764(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22DEFAECC();
  return sub_22DE86794(a1, v2);
}

unint64_t sub_22DE86794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_22DE86830(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _OWORD v32[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61D0);
  result = sub_22DEFAD4C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
        sub_22DE8730C(v22, v32);
      else
        sub_22DE83E80((uint64_t)v22, (uint64_t)v32);
      result = sub_22DEFAECC();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      result = (uint64_t)sub_22DE8730C(v32, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

unint64_t sub_22DE86AF0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = sub_22DEFAECC();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = (_OWORD *)(v16 + 32 * v3);
            v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
            {
              v9 = v18[1];
              *v17 = *v18;
              v17[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_22DE86C84(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_22DE86764(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_22DE8730C(a1, v17);
      }
      return sub_22DE86D9C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22DE86E00();
      goto LABEL_7;
    }
    sub_22DE86830(v13, a3 & 1);
    v19 = sub_22DE86764(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_22DE86D9C(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_22DEFAE9C();
  __break(1u);
  return result;
}

_OWORD *sub_22DE86D9C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_22DE8730C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_22DE86E00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61D0);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_22DE83E80(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = sub_22DE8730C(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_22DE86FC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61D0);
    v3 = (_QWORD *)sub_22DEFAD58();
    for (i = a1 + 32; ; i += 40)
    {
      sub_22DE87358(i, (uint64_t)&v11);
      v5 = v11;
      result = sub_22DE86764(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      result = (unint64_t)sub_22DE8730C(&v12, (_OWORD *)(v3[7] + 32 * result));
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_22DE870B4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_0, a1, AssociatedTypeWitness);
  return sub_22DE84C60((uint64_t)v7, a2);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_22DE87170()
{
  unint64_t result;

  result = qword_255DC6088;
  if (!qword_255DC6088)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255DC6088);
  }
  return result;
}

uint64_t sub_22DE871AC()
{
  uint64_t v0;

  sub_22DE809FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t dispatch thunk of static NXEnvironmentKey.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for NXEnvironmentValues()
{
  return &type metadata for NXEnvironmentValues;
}

ValueMetadata *type metadata accessor for SecurityDisabledNXEnvironmentKey()
{
  return &type metadata for SecurityDisabledNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for PairingSelfIdentityNXEnvironmentKey()
{
  return &type metadata for PairingSelfIdentityNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for PairingPeerIdentityNXEnvironmentKey()
{
  return &type metadata for PairingPeerIdentityNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for NexusXPCClientNXEnvironmentKey()
{
  return &type metadata for NexusXPCClientNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for NexusEndpointNXEnvironmentKey()
{
  return &type metadata for NexusEndpointNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for NexusClientNXEnvironmentKey()
{
  return &type metadata for NexusClientNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for NetworkServerPortNXEnvironmentKey()
{
  return &type metadata for NetworkServerPortNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for NANMockIDNXEnvironmentKey()
{
  return &type metadata for NANMockIDNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for LogMessagesNXEnvironmentKey()
{
  return &type metadata for LogMessagesNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for LogFramesNXEnvironmentKey()
{
  return &type metadata for LogFramesNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for DispatchQueueNXEnvironmentKey()
{
  return &type metadata for DispatchQueueNXEnvironmentKey;
}

ValueMetadata *type metadata accessor for ClockNXEnvironmentKey()
{
  return &type metadata for ClockNXEnvironmentKey;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

_OWORD *sub_22DE8730C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_22DE8731C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22DE87358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DE873A0()
{
  uint64_t v0;

  v0 = sub_22DEFA674();
  __swift_allocate_value_buffer(v0, qword_255DCAB28);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DCAB28);
  sub_22DEF4E10();
  swift_bridgeObjectRetain();
  return sub_22DEFA668();
}

uint64_t sub_22DE87424@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 48);
  v5 = *(_QWORD *)(v3 + 56);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DE90090;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DE875A4(v4);
}

uint64_t sub_22DE874AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DE90090;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 48);
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = v5;
  sub_22DE875A4(v3);
  return sub_22DE87604(v8);
}

uint64_t NXDiscoveryClient.eventHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  sub_22DE875A4(v1);
  return v1;
}

uint64_t sub_22DE875A4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t NXDiscoveryClient.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return sub_22DE87604(v5);
}

uint64_t sub_22DE87604(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t (*NXDiscoveryClient.eventHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t NXDiscoveryClient._xpcClient.getter()
{
  return swift_retain();
}

unint64_t sub_22DE8765C()
{
  unint64_t result;

  result = qword_255DC6460;
  if (!qword_255DC6460)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255DC6460);
  }
  return result;
}

uint64_t NXDiscoveryClient.__allocating_init(configuration:dispatchQueue:xpcEndpoint:)(char *a1, void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  NXDiscoveryClient.init(configuration:dispatchQueue:xpcEndpoint:)(a1, a2, a3);
  return v6;
}

uint64_t NXDiscoveryClient.init(configuration:dispatchQueue:xpcEndpoint:)(char *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  id v8;

  v4 = v3;
  v7 = *a1;
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = CUNextID64();
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_BYTE *)(v4 + 64) = 0;
  *(_BYTE *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = a2;
  type metadata accessor for NXXPCClient();
  v8 = a2;
  *(_QWORD *)(v4 + 72) = NXXPCClient.__allocating_init(dispatchQueue:xpcEndpoint:)((uint64_t)a2, a3);
  return v4;
}

uint64_t NXDiscoveryClient.__allocating_init(configuration:reuseClient:)(char *a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_22DE8C988(a1, a2);
  swift_release();
  return v4;
}

uint64_t NXDiscoveryClient.init(configuration:reuseClient:)(char *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_22DE8C988(a1, a2);
  swift_release();
  return v2;
}

uint64_t NXDiscoveryClient.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_255DCAB20 != -1)
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DCAB28);
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFAB90();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DE7A000, v3, v4, "deinit", v5, 2u);
    MEMORY[0x22E321E0C](v5, -1, -1);
  }

  sub_22DE9425C(v1, 0, nullsub_1, 0);
  sub_22DE87604(*(_QWORD *)(v1 + 48));
  swift_release();
  return v1;
}

uint64_t NXDiscoveryClient.__deallocating_deinit()
{
  NXDiscoveryClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t NXDiscoveryClient.description.getter()
{
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0x4449746E65696C63;
}

Swift::Void __swiftcall NXDiscoveryClient.activate()()
{
  sub_22DE87EEC((uint64_t)sub_22DE8C9E8, (uint64_t)&block_descriptor);
}

uint64_t sub_22DE87998()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v1 = (_QWORD *)v0;
  v2 = sub_22DEFA674();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {
    LOBYTE(v29) = 8;
    v6 = type metadata accessor for NXError();
    v7 = NXError.__allocating_init(_:_:_:)((uint64_t)&v29, 0x6164696C61766E49, 0xEB00000000646574, 0);
    if (qword_255DCAB20 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255DCAB28);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    swift_retain_n();
    v9 = v7;
    v10 = sub_22DEFA65C();
    v11 = sub_22DEFAB9C();
    v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v26 = v14;
      *(_DWORD *)v13 = 136315394;
      v24 = v6;
      v28 = v14;
      v29 = 0x4449746E65696C63;
      v30 = 0xE90000000000003DLL;
      v27 = v1[3];
      swift_retain();
      v25 = v12;
      sub_22DEFAE3C();
      sub_22DEFAA10();
      swift_release();
      swift_bridgeObjectRelease();
      v29 = sub_22DE8C348(v29, v30, &v28);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v29 = (uint64_t)v9;
      sub_22DE8D808((unint64_t *)&qword_255DC5ED0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
      v15 = sub_22DEFAEC0();
      v29 = sub_22DE8C348(v15, v16, &v28);
      sub_22DEFAC2C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DE7A000, v10, (os_log_type_t)v25, "### Activate failed: self=%s, error=%s", (uint8_t *)v13, 0x16u);
      v17 = v26;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v17, -1, -1);
      MEMORY[0x22E321E0C](v13, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_beginAccess();
    v21 = v1[6];
    v1[6] = 0;
    v1[7] = 0;
    return sub_22DE87604(v21);
  }
  else
  {
    if (qword_255DCAB20 != -1)
      swift_once();
    __swift_project_value_buffer(v2, (uint64_t)qword_255DCAB28);
    swift_retain();
    v18 = sub_22DEFA65C();
    v19 = sub_22DEFABA8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v20 = 134217984;
      v29 = v1[3];
      sub_22DEFAC2C();
      swift_release();
      _os_log_impl(&dword_22DE7A000, v18, v19, "Activate: clientID=%llu", v20, 0xCu);
      MEMORY[0x22E321E0C](v20, -1, -1);

    }
    else
    {

      swift_release();
    }
    v23 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_22DE93E14((uint64_t)v1, (uint64_t)sub_22DE90618, v23);
    return swift_release_n();
  }
}

uint64_t sub_22DE87E38(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_22DE87E64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  void (*v5)(uint64_t *);
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = swift_beginAccess();
  v5 = *(void (**)(uint64_t *))(v1 + 48);
  if (v5)
  {
    v6 = v2;
    v7 = v3;
    swift_retain();
    v5(&v6);
    return sub_22DE87604((uint64_t)v5);
  }
  return result;
}

Swift::Void __swiftcall NXDiscoveryClient.invalidate()()
{
  sub_22DE87EEC((uint64_t)sub_22DE8CA64, (uint64_t)&block_descriptor_3);
}

uint64_t sub_22DE87EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_22DEFA914();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DEFA92C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v5 + 40);
  aBlock[4] = a1;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = a2;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_22DEFA920();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE8CA18();
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v14, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_22DE880A0()
{
  sub_22DEFAA10();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  return 0;
}

uint64_t NXDiscoveryConfiguration.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7075746573;
  else
    return 0x746C7561666564;
}

BOOL static NXDiscoveryConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NXDiscoveryConfiguration.hash(into:)()
{
  return sub_22DEFAEE4();
}

uint64_t sub_22DE881AC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7075746573;
  else
    return 0x746C7561666564;
}

uint64_t sub_22DE881E0()
{
  char *v0;

  return sub_22DE881AC(*v0);
}

uint64_t sub_22DE881E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE8D3EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DE8820C()
{
  sub_22DE8CBF4();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88234()
{
  sub_22DE8CBF4();
  return sub_22DEFAF50();
}

uint64_t sub_22DE8825C()
{
  sub_22DE8CC7C();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88284()
{
  sub_22DE8CC7C();
  return sub_22DEFAF50();
}

uint64_t sub_22DE882AC()
{
  sub_22DE8CC38();
  return sub_22DEFAF44();
}

uint64_t sub_22DE882D4()
{
  sub_22DE8CC38();
  return sub_22DEFAF50();
}

uint64_t NXDiscoveryConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61F0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61F8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6200);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE8CBF4();
  sub_22DEFAF2C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_22DE8CC38();
    sub_22DEFADE8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_22DE8CC7C();
    sub_22DEFADE8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t NXDiscoveryConfiguration.hashValue.getter()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t NXDiscoveryConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6208);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6210);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6218);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE8CBF4();
  v11 = v33;
  sub_22DEFAF20();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_22DEFADDC();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_22DEFACBC();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v21 = &type metadata for NXDiscoveryConfiguration;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_22DE8CC38();
    sub_22DEFAD7C();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_22DE8CC7C();
    v22 = v6;
    sub_22DEFAD7C();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_22DE8886C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return NXDiscoveryConfiguration.init(from:)(a1, a2);
}

uint64_t sub_22DE88880(_QWORD *a1)
{
  return NXDiscoveryConfiguration.encode(to:)(a1);
}

uint64_t sub_22DE8889C()
{
  return sub_22DE7E6A8();
}

uint64_t sub_22DE888B4()
{
  return sub_22DE7E6F4();
}

uint64_t sub_22DE888C8@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

uint64_t sub_22DE888D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22DE7C808();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22DE888FC@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DE88908()
{
  sub_22DE8D6D4();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88930()
{
  sub_22DE8D6D4();
  return sub_22DEFAF50();
}

uint64_t sub_22DE88958@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

uint64_t sub_22DE88964@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DE88970()
{
  sub_22DE8D690();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88998()
{
  sub_22DE8D690();
  return sub_22DEFAF50();
}

void NXDiscoveryEvent.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_22DE889FC()
{
  void *v0;
  char v2[15];
  char v3;

  if (!v0)
    return 0x6465646E45;
  sub_22DE8D538(v0, 0);
  v0;
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  strcpy(v2, "Failed: error=");
  v3 = -18;
  type metadata accessor for NXError();
  sub_22DE8D808((unint64_t *)&qword_255DC5ED0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
  sub_22DEFAEC0();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DE8D55C(v0, 0);
  sub_22DE8D55C(v0, 0);
  return *(_QWORD *)v2;
}

uint64_t sub_22DE88DF8(char a1)
{
  return *(_QWORD *)&aStarted_3[8 * a1];
}

uint64_t sub_22DE88E18()
{
  char *v0;

  return sub_22DE88DF8(*v0);
}

uint64_t sub_22DE88E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE8F974(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DE88E44()
{
  sub_22DE8D580();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88E6C()
{
  sub_22DE8D580();
  return sub_22DEFAF50();
}

uint64_t sub_22DE88E94()
{
  sub_22DE8D64C();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88EBC()
{
  sub_22DE8D64C();
  return sub_22DEFAF50();
}

uint64_t sub_22DE88EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE8FB80(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_22DE88F14()
{
  sub_22DE8D5C4();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88F3C()
{
  sub_22DE8D5C4();
  return sub_22DEFAF50();
}

uint64_t sub_22DE88F64()
{
  sub_22DE8D718();
  return sub_22DEFAF44();
}

uint64_t sub_22DE88F8C()
{
  sub_22DE8D718();
  return sub_22DEFAF50();
}

void NXDiscoveryEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[15];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6220);
  v17[10] = *(_QWORD *)(v4 - 8);
  v17[11] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v17[9] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6228);
  v17[1] = *(_QWORD *)(v6 - 8);
  v17[2] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v17[0] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6230);
  v17[7] = *(_QWORD *)(v8 - 8);
  v17[8] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v17[6] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6238);
  v17[4] = *(_QWORD *)(v10 - 8);
  v17[5] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v17[3] = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6240);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6248);
  v17[13] = *(_QWORD *)(v13 - 8);
  v17[14] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(unsigned __int8 *)(v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE8D580();
  v17[12] = v15;
  sub_22DEFAF2C();
  __asm { BR              X9 }
}

void sub_22DE891B4()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 - 72) = 1;
  sub_22DE8D6D4();
  v2 = v0;
  v3 = v0;
  v4 = *(_QWORD *)(v1 - 184);
  v5 = *(_QWORD *)(v1 - 96);
  v6 = *(_QWORD *)(v1 - 112);
  sub_22DEFADE8();
  *(_QWORD *)(v1 - 72) = v0;
  type metadata accessor for NXError();
  sub_22DE8D808(&qword_255DC5EE0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
  v7 = *(_QWORD *)(v1 - 168);
  sub_22DEFAE00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 176) + 8))(v4, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 104) + 8))(v6, v5);
  sub_22DE8D55C(v2, 0);
}

uint64_t NXDiscoveryEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v34 = a2;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6278);
  v26 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v32 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6280);
  v24[5] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v29 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6288);
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6290);
  v24[3] = *(_QWORD *)(v6 - 8);
  v24[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6298);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62A0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_22DE8D580();
  v17 = v36;
  sub_22DEFAF20();
  if (!v17)
  {
    v24[1] = v8;
    v24[2] = v11;
    v24[0] = v9;
    v36 = v13;
    v18 = sub_22DEFADDC();
    v19 = v12;
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v20 = sub_22DEFACBC();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v22 = &type metadata for NXDiscoveryEvent;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

void sub_22DE89878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 72) = 1;
  sub_22DE8D6D4();
  v5 = *(_QWORD *)(v4 - 152);
  sub_22DEFAD7C();
  if (!v2)
  {
    type metadata accessor for NXError();
    sub_22DE8D808(&qword_255DC5EF0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
    v6 = *(_QWORD *)(v4 - 192);
    sub_22DEFADA0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 200) + 8))(v5, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 88) + 8))(v1, v0);
    *(_QWORD *)v3 = *(_QWORD *)(v4 - 72);
    *(_BYTE *)(v3 + 8) = 0;
    JUMPOUT(0x22DE89850);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x22DE89848);
}

void sub_22DE89A14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 - 128) = a1;
  *(_BYTE *)(v6 - 72) = 4;
  sub_22DE8D5C4();
  v7 = v1;
  sub_22DEFAD7C();
  if (v4)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x22DE89844);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6250);
  sub_22DE8D75C(&qword_255DC62A8, (uint64_t (*)(void))sub_22DE8D7C4, MEMORY[0x24BEE12D0]);
  sub_22DEFADD0();
  v8 = *(_QWORD *)(v6 - 88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 168) + 8))(v3, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
  JUMPOUT(0x22DE89C54);
}

uint64_t sub_22DE89C64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NXDiscoveryEvent.init(from:)(a1, a2);
}

void sub_22DE89C78(_QWORD *a1)
{
  NXDiscoveryEvent.encode(to:)(a1);
}

uint64_t NXDiscoveryResult.endpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_22DE80988(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t NXDiscoveryResult.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NXDiscoveryResult.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NXDiscoveryResult.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 NXDiscoveryResult.init(endpoint:id:model:name:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v8;
  __int128 v9;
  __n128 result;

  v8 = *(_BYTE *)(a1 + 48);
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(_OWORD *)(a8 + 16) = v9;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a8 + 32) = result;
  *(_BYTE *)(a8 + 48) = v8;
  *(_QWORD *)(a8 + 56) = a2;
  *(_QWORD *)(a8 + 64) = a3;
  *(_QWORD *)(a8 + 72) = a4;
  *(_QWORD *)(a8 + 80) = a5;
  *(_QWORD *)(a8 + 88) = a6;
  *(_QWORD *)(a8 + 96) = a7;
  return result;
}

uint64_t NXDiscoveryResult.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(_BYTE *)(v0 + 48);
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  sub_22DE80988(v1, v2, v3, v4, v6, v5, v7);
  sub_22DE8D848();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DE809FC(v1, v2, v3, v4, v6, v5, v7);
  sub_22DEFAA10();
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 4023401;
}

uint64_t NXDiscoveryResult.hash(into:)()
{
  sub_22DE8D88C();
  sub_22DEFA9BC();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE8A01C(char a1)
{
  return *(_QWORD *)&aEndpointid[8 * a1];
}

uint64_t sub_22DE8A03C()
{
  char *v0;

  return sub_22DE8A01C(*v0);
}

uint64_t sub_22DE8A044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE8FC1C(a1, a2);
  *a3 = result;
  return result;
}

void sub_22DE8A068(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_22DE8A074()
{
  sub_22DE8D8D0();
  return sub_22DEFAF44();
}

uint64_t sub_22DE8A09C()
{
  sub_22DE8D8D0();
  return sub_22DEFAF50();
}

uint64_t NXDiscoveryResult.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[7];
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62C8);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v18 = v1[1];
  v19 = v6;
  v7 = *((_QWORD *)v1 + 4);
  v8 = *((_QWORD *)v1 + 5);
  v9 = *((_BYTE *)v1 + 48);
  v10 = *((_QWORD *)v1 + 7);
  v16[5] = *((_QWORD *)v1 + 8);
  v16[6] = v10;
  v11 = *((_QWORD *)v1 + 9);
  v16[3] = *((_QWORD *)v1 + 10);
  v16[4] = v11;
  v12 = *((_QWORD *)v1 + 11);
  v16[1] = *((_QWORD *)v1 + 12);
  v16[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE8D8D0();
  sub_22DEFAF2C();
  v21 = v19;
  v22 = v18;
  v23 = v7;
  v24 = v8;
  v25 = v9;
  v26 = 0;
  sub_22DE80B28();
  v13 = v20;
  sub_22DEFAE30();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  v15 = v17;
  LOBYTE(v21) = 1;
  sub_22DEFAE0C();
  LOBYTE(v21) = 2;
  sub_22DEFAE0C();
  LOBYTE(v21) = 3;
  sub_22DEFAE0C();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t NXDiscoveryResult.hashValue.getter()
{
  sub_22DEFAED8();
  sub_22DE8D88C();
  sub_22DEFA9BC();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t NXDiscoveryResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  int v55;
  char v56;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE8D8D0();
  sub_22DEFAF20();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v56 = 0;
  sub_22DE80C00();
  sub_22DEFADD0();
  v44 = a2;
  v9 = v48;
  v10 = v51;
  v12 = v52;
  v11 = v53;
  LOBYTE(v48) = 1;
  v45 = v49;
  v46 = v9;
  v47 = v50;
  v55 = v54;
  sub_22DE80988(v9, v49, v50, v51, v52, v53, v54);
  v13 = sub_22DEFADAC();
  v43 = v14;
  v37 = v13;
  v40 = v11;
  v41 = v12;
  v42 = v10;
  v15 = v45;
  v16 = v46;
  LOBYTE(v48) = 2;
  swift_bridgeObjectRetain();
  v39 = 0;
  v36 = sub_22DEFADAC();
  LOBYTE(v48) = 3;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_22DEFADAC();
  v38 = v18;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v39 = v19;
  v35 = v22;
  v21(v8, v5);
  v23 = v16;
  v24 = v16;
  v26 = v41;
  v25 = v42;
  v27 = v40;
  v28 = v55;
  sub_22DE80988(v24, v15, v47, v42, v41, v40, v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v47;
  sub_22DE809FC(v23, v15, v47, v25, v26, v27, v28);
  v30 = v44;
  *v44 = v23;
  v30[1] = v15;
  v30[2] = v29;
  v30[3] = v25;
  v30[4] = v26;
  v30[5] = v27;
  *((_BYTE *)v30 + 48) = v28;
  v31 = v38;
  v32 = v43;
  v30[7] = v37;
  v30[8] = v32;
  v33 = v35;
  v30[9] = v36;
  v30[10] = v31;
  v30[11] = v39;
  v30[12] = v33;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_22DE809FC(v23, v15, v47, v25, v26, v27, v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE8A7E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return NXDiscoveryResult.init(from:)(a1, a2);
}

uint64_t sub_22DE8A7F8(_QWORD *a1)
{
  return NXDiscoveryResult.encode(to:)(a1);
}

uint64_t sub_22DE8A818()
{
  sub_22DE8D88C();
  sub_22DEFA9BC();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE8A8F4()
{
  sub_22DEFAED8();
  sub_22DE8D88C();
  sub_22DEFA9BC();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE8A9F8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = *(_QWORD *)(v1 + 56);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_OWORD *NXDiscoveryResultChange.init(between:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v4 = a1[8];
  v6 = *a2;
  v5 = a2[1];
  v8 = a2[2];
  v7 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v12 = a2[6];
  v11 = a2[7];
  v14 = a2[8];
  v13 = a2[9];
  v15 = a2[10];
  v16 = a2[11];
  v17 = a2[12];
  if (v4)
  {
    v47 = a3;
    v19 = *a1;
    v18 = a1[1];
    v21 = a1[2];
    v20 = a1[3];
    v23 = a1[4];
    v22 = a1[5];
    v25 = a1[6];
    v24 = a1[7];
    v27 = a1[9];
    v26 = a1[10];
    v28 = a1[11];
    v29 = a1[12];
    if (v14)
    {
      *(_QWORD *)&v60 = *a1;
      *((_QWORD *)&v60 + 1) = v18;
      v61 = v21;
      v62 = v20;
      v43 = v23;
      v44 = v22;
      v63 = v23;
      v64 = v22;
      v45 = v25;
      v46 = v24;
      v65 = v25;
      v66 = v24;
      v67 = v4;
      v68 = v27;
      v69 = v26;
      v70 = v28;
      v71 = v29;
      *(_QWORD *)&v48 = v6;
      *((_QWORD *)&v48 + 1) = v5;
      v49 = v8;
      v50 = v7;
      v51 = v10;
      v52 = v9;
      v53 = v12;
      v54 = v11;
      v55 = v14;
      v56 = v13;
      v57 = v15;
      v58 = v16;
      v59 = v17;
      v41 = v12;
      v42 = v11;
      v39 = v10;
      v40 = v9;
      v37 = v15;
      v38 = v13;
      v35 = v17;
      v36 = v16;
      v33 = v8;
      v34 = v7;
      v31 = v6;
      v32 = v5;
      if ((_s5Nexus17NXDiscoveryResultV2eeoiySbAC_ACtFZ_0((uint64_t)&v60, (uint64_t)&v48) & 1) != 0)
      {
        sub_22DE8D99C(v19, v18, v21, v20, v43, v44, v45, v46, v4);
        sub_22DE8D99C(v31, v32, v33, v34, v39, v40, v41, v42, v14);
        sub_22DE8D914((uint64_t)&v60);
      }
      else
      {
        *(_QWORD *)&v60 = v19;
        *((_QWORD *)&v60 + 1) = v18;
        v61 = v21;
        v62 = v20;
        v63 = v43;
        v64 = v44;
        v65 = v45;
        v66 = v46;
        v67 = v4;
        v68 = v27;
        v69 = v26;
        v70 = v28;
        v71 = v29;
        v72 = v31;
        v73 = v32;
        v74 = v33;
        v75 = v34;
        v76 = v39;
        v77 = v40;
        v78 = v41;
        v79 = v42;
        v80 = v14;
        v81 = v38;
        v82 = v37;
        v83 = v36;
        v84 = v35;
        sub_22DE8D97C((uint64_t)&v60);
      }
      sub_22DE8D4CC(&v60, &v48);
    }
    else
    {
      *(_QWORD *)&v48 = *a1;
      *((_QWORD *)&v48 + 1) = v18;
      v49 = v21;
      v50 = v20;
      v51 = v23;
      v52 = v22;
      v53 = v25;
      v54 = v24;
      v55 = v4;
      v56 = v27;
      v57 = v26;
      v58 = v28;
      v59 = v29;
      sub_22DE8D95C((uint64_t)&v48);
    }
    sub_22DE8D4CC(&v48, &v60);
    a3 = v47;
  }
  else
  {
    if (v14)
    {
      *(_QWORD *)&v48 = *a2;
      *((_QWORD *)&v48 + 1) = v5;
      v49 = v8;
      v50 = v7;
      v51 = v10;
      v52 = v9;
      v53 = v12;
      v54 = v11;
      v55 = v14;
      v56 = v13;
      v57 = v15;
      v58 = v16;
      v59 = v17;
      sub_22DE8D940((uint64_t)&v48);
    }
    else
    {
      sub_22DE8D914((uint64_t)&v48);
    }
    sub_22DE8D4CC(&v48, &v60);
  }
  return sub_22DE8D4CC(&v60, a3);
}

void NXDiscoveryResultChange.description.getter()
{
  _OWORD *v0;
  char *v1;
  _OWORD v2[13];
  _OWORD v3[13];

  sub_22DE8D4CC(v0, v2);
  sub_22DE8D4CC(v2, v3);
  v1 = (char *)sub_22DE8AD00 + 4 * byte_22DEFD029[sub_22DE8D50C((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_22DE8AD00()
{
  uint64_t v1;

  sub_22DE8D528((uint64_t)&v1);
  NXDiscoveryResult.description.getter();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0x203A6465646441;
}

void NXDiscoveryResultChange.hash(into:)()
{
  _OWORD *v0;
  char *v1;
  _OWORD v2[13];
  _OWORD v3[13];

  sub_22DE8D4CC(v0, v2);
  sub_22DE8D4CC(v2, v3);
  v1 = (char *)sub_22DE8AF44 + 4 * byte_22DEFD02D[sub_22DE8D50C((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_22DE8AF44()
{
  uint64_t v1;

  sub_22DE8D528((uint64_t)&v1);
  sub_22DEFAEE4();
  sub_22DE8D88C();
  sub_22DEFA9BC();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DE8B218(char a1)
{
  if ((a1 & 1) != 0)
    return 7824750;
  else
    return 6581359;
}

uint64_t sub_22DE8B238(char a1)
{
  return *(_QWORD *)&aIdenticaadded[8 * a1];
}

uint64_t sub_22DE8B25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE90000(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_22DE8B288()
{
  sub_22DE8DB04();
  return sub_22DEFAF44();
}

uint64_t sub_22DE8B2B0()
{
  sub_22DE8DB04();
  return sub_22DEFAF50();
}

uint64_t sub_22DE8B2D8()
{
  char *v0;

  return sub_22DE8B218(*v0);
}

uint64_t sub_22DE8B2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE8FD98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DE8B304()
{
  sub_22DE8DA38();
  return sub_22DEFAF44();
}

uint64_t sub_22DE8B32C()
{
  sub_22DE8DA38();
  return sub_22DEFAF50();
}

uint64_t sub_22DE8B354()
{
  char *v0;

  return sub_22DE8B238(*v0);
}

uint64_t sub_22DE8B35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DE8FE60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DE8B380()
{
  sub_22DE8D9F4();
  return sub_22DEFAF44();
}

uint64_t sub_22DE8B3A8()
{
  sub_22DE8D9F4();
  return sub_22DEFAF50();
}

uint64_t sub_22DE8B3D0()
{
  sub_22DE8DB48();
  return sub_22DEFAF44();
}

uint64_t sub_22DE8B3F8()
{
  sub_22DE8DB48();
  return sub_22DEFAF50();
}

uint64_t sub_22DE8B420()
{
  sub_22DE8DAC0();
  return sub_22DEFAF44();
}

uint64_t sub_22DE8B448()
{
  sub_22DE8DAC0();
  return sub_22DEFAF50();
}

void NXDiscoveryResultChange.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  _QWORD v10[2];
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _OWORD v21[13];
  _OWORD v22[13];

  v2 = v1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62D8);
  v16 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v15 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62E0);
  v13 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v12 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62E8);
  v10[0] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62F0);
  MEMORY[0x24BDAC7A8](v6);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC62F8);
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DE8D4CC(v2, v21);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DE8D9F4();
  v19 = v8;
  sub_22DEFAF2C();
  sub_22DE8D4CC(v21, v22);
  v9 = (char *)sub_22DE8B65C + 4 * byte_22DEFD031[sub_22DE8D50C((uint64_t)v22)];
  __asm { BR              X10 }
}

uint64_t sub_22DE8B65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v2 = sub_22DE8D528(v0 + 472);
  v3 = *(_OWORD *)v2;
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v0 + 112) = v3;
  v4 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v2 + 32);
  v5 = *(_BYTE *)(v2 + 48);
  v6 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v0 + 64) = v6;
  v7 = *(_QWORD *)(v2 + 88);
  v8 = *(_QWORD *)(v2 + 96);
  *(_BYTE *)(v0 + 160) = 1;
  sub_22DE8DB04();
  v9 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 152);
  sub_22DEFADE8();
  v11 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 176) = v11;
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 200) = v4;
  *(_BYTE *)(v0 + 208) = v5;
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 248) = v7;
  *(_QWORD *)(v0 + 256) = v8;
  sub_22DE8DA7C();
  v12 = *(_QWORD *)(v0 + 16);
  sub_22DEFAE30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 8))(v1, v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 128) + 8))(v9, v10);
}

uint64_t NXDiscoveryResultChange.hashValue.getter()
{
  _OWORD *v0;
  _OWORD v2[13];
  _OWORD v3[13];

  sub_22DE8D4CC(v0, v3);
  sub_22DE8D4CC(v3, v2);
  sub_22DEFAED8();
  NXDiscoveryResultChange.hash(into:)();
  return sub_22DEFAEFC();
}

uint64_t NXDiscoveryResultChange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  char *v41;

  v35 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6308);
  v28 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6310);
  v5 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  v33 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6318);
  v8 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  v31 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6320);
  v10 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6328);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_22DE8D9F4();
  v39 = v16;
  v18 = v41;
  sub_22DEFAF20();
  if (!v18)
  {
    v41 = v12;
    v26[1] = v10;
    v27 = v14;
    v19 = v39;
    v20 = sub_22DEFADDC();
    v21 = v13;
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v22 = sub_22DEFACBC();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v24 = &type metadata for NXDiscoveryResultChange;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_22DE8C258@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NXDiscoveryResultChange.init(from:)(a1, a2);
}

void sub_22DE8C26C(_QWORD *a1)
{
  NXDiscoveryResultChange.encode(to:)(a1);
}

uint64_t sub_22DE8C288()
{
  _OWORD *v0;
  _OWORD v2[13];
  _OWORD v3[13];

  sub_22DE8D4CC(v0, v3);
  sub_22DE8D4CC(v3, v2);
  sub_22DEFAED8();
  NXDiscoveryResultChange.hash(into:)();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE8C2E4()
{
  _OWORD *v0;
  _OWORD v2[13];
  _OWORD v3[13];

  sub_22DE8D4CC(v0, v3);
  sub_22DE8D4CC(v3, v2);
  sub_22DEFAED8();
  NXDiscoveryResultChange.hash(into:)();
  return sub_22DEFAEFC();
}

uint64_t sub_22DE8C348(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_22DE8C418(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_22DE83E80((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_22DE83E80((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22DE8C418(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22DEFAC38();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_22DE8C5D0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_22DEFACC8();
  if (!v8)
  {
    sub_22DEFAD28();
    __break(1u);
LABEL_17:
    result = sub_22DEFAD64();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_22DE8C5D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_22DE8C664(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_22DE8C83C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_22DE8C83C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22DE8C664(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_22DE8C7D8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_22DEFACA4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_22DEFAD28();
      __break(1u);
LABEL_10:
      v2 = sub_22DEFAA28();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_22DEFAD64();
    __break(1u);
LABEL_14:
    result = sub_22DEFAD28();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_22DE8C7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6458);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22DE8C83C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6458);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22DEFAD64();
  __break(1u);
  return result;
}

uint64_t sub_22DE8C988(char *a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  void *v5;
  id v6;

  v4 = *a1;
  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = CUNextID64();
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_BYTE *)(v2 + 64) = 0;
  *(_BYTE *)(v2 + 32) = v4;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 72) = *(_QWORD *)(a2 + 136);
  v6 = v5;
  swift_retain();
  return v2;
}

uint64_t sub_22DE8C9E8()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
  {
    *(_BYTE *)(v0 + 16) = 1;
    return sub_22DE87998();
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_22DE8CA18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DC6490;
  if (!qword_255DC6490)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC61E8);
    result = MEMORY[0x22E321D70](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255DC6490);
  }
  return result;
}

void sub_22DE8CA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  if ((*(_BYTE *)(v0 + 64) & 1) == 0)
  {
    v1 = v0;
    *(_BYTE *)(v0 + 64) = 1;
    if (qword_255DCAB20 != -1)
      swift_once();
    v2 = sub_22DEFA674();
    __swift_project_value_buffer(v2, (uint64_t)qword_255DCAB28);
    swift_retain();
    v3 = sub_22DEFA65C();
    v4 = sub_22DEFABA8();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      sub_22DEFAC2C();
      swift_release();
      _os_log_impl(&dword_22DE7A000, v3, v4, "Invalidate: clientID=%llu", v5, 0xCu);
      MEMORY[0x22E321E0C](v5, -1, -1);

    }
    else
    {

      swift_release();
    }
    v6 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_22DE9425C(v1, 1, (uint64_t (*)(_QWORD))sub_22DE9027C, v6);
    swift_release_n();
  }
}

unint64_t sub_22DE8CBF4()
{
  unint64_t result;

  result = qword_255DCAB40;
  if (!qword_255DCAB40)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE3D4, &type metadata for NXDiscoveryConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB40);
  }
  return result;
}

unint64_t sub_22DE8CC38()
{
  unint64_t result;

  result = qword_255DCAB48;
  if (!qword_255DCAB48)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE384, &type metadata for NXDiscoveryConfiguration.SetupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB48);
  }
  return result;
}

unint64_t sub_22DE8CC7C()
{
  unint64_t result;

  result = qword_255DCAB50;
  if (!qword_255DCAB50)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE334, &type metadata for NXDiscoveryConfiguration.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB50);
  }
  return result;
}

uint64_t _s5Nexus17NXDiscoveryResultV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  char v22;
  _OWORD v23[3];
  char v24;

  v2 = *(_BYTE *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 88);
  v7 = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  v14 = *(_OWORD *)(a1 + 16);
  v23[0] = *(_OWORD *)a1;
  v23[1] = v14;
  v23[2] = *(_OWORD *)(a1 + 32);
  v24 = v2;
  v15 = *(_OWORD *)(a2 + 16);
  v21[0] = *(_OWORD *)a2;
  v21[1] = v15;
  v21[2] = *(_OWORD *)(a2 + 32);
  v22 = v7;
  if ((static NXEndpoint.== infix(_:_:)(v23, v21) & 1) == 0)
    return 0;
  if (v3 == v8 && v4 == v9 || (v16 = sub_22DEFAE54(), result = 0, (v16 & 1) != 0))
  {
    if (v5 == v10 && v6 == v11 || (v18 = sub_22DEFAE54(), result = 0, (v18 & 1) != 0))
    {
      if (v20 == v13 && v19 == v12)
        return 1;
      else
        return sub_22DEFAE54();
    }
  }
  return result;
}

void _s5Nexus23NXDiscoveryResultChangeO2eeoiySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  char *v3;
  _OWORD v4[13];
  _OWORD v5[13];
  _OWORD v6[13];
  _OWORD v7[13];
  _OWORD v8[14];

  sub_22DE8D4CC(a1, v4);
  sub_22DE8D4CC(a2, v5);
  sub_22DE8D4CC(v4, v6);
  sub_22DE8D4CC(v5, v7);
  sub_22DE8D4CC(v4, v8);
  v3 = (char *)sub_22DE8CE9C + 4 * word_22DEFD03A[sub_22DE8D50C((uint64_t)v8)];
  __asm { BR              X10 }
}

uint64_t sub_22DE8CE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[3];
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[13];
  _QWORD v38[26];
  _OWORD v39[13];
  _BYTE v40[416];
  uint64_t v41;

  v0 = sub_22DE8D528((uint64_t)&v41);
  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_BYTE *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 96);
  sub_22DE8D4CC(v39, v37);
  if (sub_22DE8D50C((uint64_t)v37))
  {
    sub_22DE901EC(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E3EC);
    sub_22DE901EC(v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E3EC);
    sub_22DE900B0((uint64_t)v40);
    v18 = 0;
  }
  else
  {
    v11 = sub_22DE8D528((uint64_t)v37);
    v12 = *(_BYTE *)(v11 + 48);
    v13 = *(_OWORD *)(v11 + 56);
    v14 = *(_OWORD *)(v11 + 72);
    v15 = *(_QWORD *)(v11 + 88);
    v16 = *(_QWORD *)(v11 + 96);
    v29[0] = v1;
    v29[1] = v2;
    v29[2] = v3;
    v29[3] = v4;
    v29[4] = v5;
    v29[5] = v6;
    v30 = v7;
    v31 = v8;
    v32 = v9;
    v33 = v10;
    v34 = v22;
    v35 = v21;
    v36 = v20;
    v17 = *(_OWORD *)(v11 + 16);
    v23[0] = *(_OWORD *)v11;
    v23[1] = v17;
    v23[2] = *(_OWORD *)(v11 + 32);
    v24 = v12;
    v25 = v13;
    v26 = v14;
    v27 = v15;
    v28 = v16;
    sub_22DE901EC(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E3EC);
    sub_22DE901EC(v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E3EC);
    sub_22DE901EC(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E3EC);
    sub_22DE901EC(v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E3EC);
    v18 = _s5Nexus17NXDiscoveryResultV2eeoiySbAC_ACtFZ_0((uint64_t)v29, (uint64_t)v23);
    sub_22DE900B0((uint64_t)v40);
    sub_22DE901EC(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E550);
    sub_22DE901EC(v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE8E550);
  }
  return v18 & 1;
}

uint64_t sub_22DE8D3EC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v3 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7075746573 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_OWORD *sub_22DE8D4CC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[8];
  a2[7] = a1[7];
  a2[8] = v7;
  a2[5] = v5;
  a2[6] = v6;
  v8 = a1[9];
  v9 = a1[10];
  v10 = a1[12];
  a2[11] = a1[11];
  a2[12] = v10;
  a2[9] = v8;
  a2[10] = v9;
  return a2;
}

uint64_t sub_22DE8D50C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 152) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_22DE8D528(uint64_t result)
{
  *(_QWORD *)(result + 152) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

id sub_22DE8D538(id result, unsigned __int8 a2)
{
  if (a2 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a2 <= 1u)
    return result;
  return result;
}

void sub_22DE8D55C(id a1, unsigned __int8 a2)
{
  if (a2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a2 <= 1u)
  {

  }
}

unint64_t sub_22DE8D580()
{
  unint64_t result;

  result = qword_255DCAB58;
  if (!qword_255DCAB58)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE2E4, &type metadata for NXDiscoveryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB58);
  }
  return result;
}

unint64_t sub_22DE8D5C4()
{
  unint64_t result;

  result = qword_255DCAB60;
  if (!qword_255DCAB60)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE294, &type metadata for NXDiscoveryEvent.ResultsChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB60);
  }
  return result;
}

unint64_t sub_22DE8D608()
{
  unint64_t result;

  result = qword_255DC6260;
  if (!qword_255DC6260)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryResultChange, &type metadata for NXDiscoveryResultChange);
    atomic_store(result, (unint64_t *)&qword_255DC6260);
  }
  return result;
}

unint64_t sub_22DE8D64C()
{
  unint64_t result;

  result = qword_255DCAB68;
  if (!qword_255DCAB68)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE244, &type metadata for NXDiscoveryEvent.RestartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB68);
  }
  return result;
}

unint64_t sub_22DE8D690()
{
  unint64_t result;

  result = qword_255DC6268;
  if (!qword_255DC6268)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD354, &type metadata for NXDiscoveryEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6268);
  }
  return result;
}

unint64_t sub_22DE8D6D4()
{
  unint64_t result;

  result = qword_255DC6270;
  if (!qword_255DC6270)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD214, &type metadata for NXDiscoveryEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6270);
  }
  return result;
}

unint64_t sub_22DE8D718()
{
  unint64_t result;

  result = qword_255DCAB70;
  if (!qword_255DCAB70)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE1F4, &type metadata for NXDiscoveryEvent.StartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB70);
  }
  return result;
}

uint64_t sub_22DE8D75C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC6250);
    v8 = a2();
    result = MEMORY[0x22E321D70](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DE8D7C4()
{
  unint64_t result;

  result = qword_255DC62B0;
  if (!qword_255DC62B0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryResultChange, &type metadata for NXDiscoveryResultChange);
    atomic_store(result, (unint64_t *)&qword_255DC62B0);
  }
  return result;
}

uint64_t sub_22DE8D808(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E321D70](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DE8D848()
{
  unint64_t result;

  result = qword_255DC62B8;
  if (!qword_255DC62B8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXEndpoint, &type metadata for NXEndpoint);
    atomic_store(result, (unint64_t *)&qword_255DC62B8);
  }
  return result;
}

unint64_t sub_22DE8D88C()
{
  unint64_t result;

  result = qword_255DC62C0;
  if (!qword_255DC62C0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXEndpoint, &type metadata for NXEndpoint);
    atomic_store(result, (unint64_t *)&qword_255DC62C0);
  }
  return result;
}

unint64_t sub_22DE8D8D0()
{
  unint64_t result;

  result = qword_255DCAB78;
  if (!qword_255DCAB78)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE1A4, &type metadata for NXDiscoveryResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB78);
  }
  return result;
}

double sub_22DE8D914(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0xC000000000000000;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  return result;
}

uint64_t sub_22DE8D940(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 152) & 7;
  *(_QWORD *)(result + 48) &= 7uLL;
  *(_QWORD *)(result + 152) = v1;
  return result;
}

uint64_t sub_22DE8D95C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 152) & 7 | 0x4000000000000000;
  *(_QWORD *)(result + 48) &= 7uLL;
  *(_QWORD *)(result + 152) = v1;
  return result;
}

uint64_t sub_22DE8D97C(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 152) & 7 | 0x8000000000000000;
  *(_QWORD *)(result + 48) &= 7uLL;
  *(_QWORD *)(result + 152) = v1;
  return result;
}

uint64_t sub_22DE8D99C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9)
{
  if (a9)
  {
    sub_22DE809FC(result, a2, a3, a4, a5, a6, a7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_22DE8D9F4()
{
  unint64_t result;

  result = qword_255DCAB80;
  if (!qword_255DCAB80)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE154, &type metadata for NXDiscoveryResultChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB80);
  }
  return result;
}

unint64_t sub_22DE8DA38()
{
  unint64_t result;

  result = qword_255DCAB88;
  if (!qword_255DCAB88)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE104, &type metadata for NXDiscoveryResultChange.ChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB88);
  }
  return result;
}

unint64_t sub_22DE8DA7C()
{
  unint64_t result;

  result = qword_255DC6300;
  if (!qword_255DC6300)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryResult, &type metadata for NXDiscoveryResult);
    atomic_store(result, (unint64_t *)&qword_255DC6300);
  }
  return result;
}

unint64_t sub_22DE8DAC0()
{
  unint64_t result;

  result = qword_255DCAB90;
  if (!qword_255DCAB90)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE0B4, &type metadata for NXDiscoveryResultChange.RemovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB90);
  }
  return result;
}

unint64_t sub_22DE8DB04()
{
  unint64_t result;

  result = qword_255DCAB98;
  if (!qword_255DCAB98)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE064, &type metadata for NXDiscoveryResultChange.AddedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCAB98);
  }
  return result;
}

unint64_t sub_22DE8DB48()
{
  unint64_t result;

  result = qword_255DCABA0[0];
  if (!qword_255DCABA0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE014, &type metadata for NXDiscoveryResultChange.IdenticalCodingKeys);
    atomic_store(result, qword_255DCABA0);
  }
  return result;
}

unint64_t sub_22DE8DB8C()
{
  unint64_t result;

  result = qword_255DC6330;
  if (!qword_255DC6330)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryResult, &type metadata for NXDiscoveryResult);
    atomic_store(result, (unint64_t *)&qword_255DC6330);
  }
  return result;
}

unint64_t sub_22DE8DBD4()
{
  unint64_t result;

  result = qword_255DC6338;
  if (!qword_255DC6338)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryConfiguration, &type metadata for NXDiscoveryConfiguration);
    atomic_store(result, (unint64_t *)&qword_255DC6338);
  }
  return result;
}

unint64_t sub_22DE8DC1C()
{
  unint64_t result;

  result = qword_255DC6340;
  if (!qword_255DC6340)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD174, &type metadata for NXDiscoveryEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6340);
  }
  return result;
}

unint64_t sub_22DE8DC64()
{
  unint64_t result;

  result = qword_255DC6348;
  if (!qword_255DC6348)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD28C, &type metadata for NXDiscoveryEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6348);
  }
  return result;
}

unint64_t sub_22DE8DCAC()
{
  unint64_t result;

  result = qword_255DC6350;
  if (!qword_255DC6350)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD264, &type metadata for NXDiscoveryEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6350);
  }
  return result;
}

unint64_t sub_22DE8DCF4()
{
  unint64_t result;

  result = qword_255DC6358;
  if (!qword_255DC6358)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD2B4, &type metadata for NXDiscoveryEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6358);
  }
  return result;
}

unint64_t sub_22DE8DD3C()
{
  unint64_t result;

  result = qword_255DC6360;
  if (!qword_255DC6360)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD3CC, &type metadata for NXDiscoveryEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6360);
  }
  return result;
}

unint64_t sub_22DE8DD84()
{
  unint64_t result;

  result = qword_255DC6368;
  if (!qword_255DC6368)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD3A4, &type metadata for NXDiscoveryEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC6368);
  }
  return result;
}

unint64_t sub_22DE8DDCC()
{
  unint64_t result;

  result = qword_255DC6370;
  if (!qword_255DC6370)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryResult, &type metadata for NXDiscoveryResult);
    atomic_store(result, (unint64_t *)&qword_255DC6370);
  }
  return result;
}

uint64_t sub_22DE8DE10()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t sub_22DE8DE20()
{
  unint64_t result;

  result = qword_255DC6378;
  if (!qword_255DC6378)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryResultChange, &type metadata for NXDiscoveryResultChange);
    atomic_store(result, (unint64_t *)&qword_255DC6378);
  }
  return result;
}

uint64_t type metadata accessor for NXDiscoveryClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for NXDiscoveryClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXDiscoveryClient.__allocating_init(configuration:dispatchQueue:xpcEndpoint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of NXDiscoveryClient.__allocating_init(configuration:reuseClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for NXDiscoveryConfiguration()
{
  return &type metadata for NXDiscoveryConfiguration;
}

uint64_t initializeBufferWithCopyOfBuffer for NXDiscoveryEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22DE8D538(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for NXDiscoveryEvent(uint64_t a1)
{
  sub_22DE8D55C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for NXDiscoveryEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22DE8D538(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_22DE8D55C(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for NXDiscoveryEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_22DE8D55C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXDiscoveryEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXDiscoveryEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_22DE8E038(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_22DE8E050(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NXDiscoveryEvent()
{
  return &type metadata for NXDiscoveryEvent;
}

ValueMetadata *type metadata accessor for NXDiscoveryEvent.EndedCodingKeys()
{
  return &type metadata for NXDiscoveryEvent.EndedCodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryEvent.ErrorCodingKeys()
{
  return &type metadata for NXDiscoveryEvent.ErrorCodingKeys;
}

uint64_t destroy for NXDiscoveryResult(uint64_t a1)
{
  sub_22DE809FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NXDiscoveryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_22DE80988(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  v13 = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NXDiscoveryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_22DE80988(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v17 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v10;
  sub_22DE809FC(v11, v12, v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for NXDiscoveryResult(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v4;
  sub_22DE809FC(v5, v6, v7, v8, v9, v10, v12);
  v13 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NXDiscoveryResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NXDiscoveryResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXDiscoveryResult()
{
  return &type metadata for NXDiscoveryResult;
}

uint64_t sub_22DE8E3EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  if (a20 >> 62 == 2)
  {
    sub_22DE80988(result, a2, a3, a4, a5, a6, a7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22DE80988(a14, a15, a16, a17, a18, a19, a20);
  }
  else
  {
    if ((a20 >> 62) > 1)
      return result;
    sub_22DE80988(result, a2, a3, a4, a5, a6, a7);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for NXDiscoveryResultChange(uint64_t *a1)
{
  return sub_22DE8E550(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
           a1[19]);
}

uint64_t sub_22DE8E550(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  if (a20 >> 62 == 2)
  {
    sub_22DE809FC(result, a2, a3, a4, a5, a6, a7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22DE809FC(a14, a15, a16, a17, a18, a19, a20);
  }
  else
  {
    if ((a20 >> 62) > 1)
      return result;
    sub_22DE809FC(result, a2, a3, a4, a5, a6, a7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for NXDiscoveryResultChange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = a2[7];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  v22 = a2[18];
  v23 = a2[19];
  v24 = a2[20];
  v25 = a2[21];
  v26 = a2[22];
  v27 = a2[23];
  v28 = a2[24];
  v29 = a2[25];
  v4 = a2[8];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  sub_22DE8E3EC(*a2, v6, v7, v8, v9, v10, v11, v3, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v3;
  a1[8] = v4;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  a1[23] = v27;
  a1[24] = v28;
  a1[25] = v29;
  return a1;
}

uint64_t assignWithCopy for NXDiscoveryResultChange(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = a2[7];
  v27 = a2[9];
  v28 = a2[10];
  v29 = a2[11];
  v30 = a2[12];
  v31 = a2[13];
  v32 = a2[14];
  v33 = a2[15];
  v34 = a2[16];
  v35 = a2[17];
  v36 = a2[18];
  v37 = a2[19];
  v38 = a2[20];
  v39 = a2[21];
  v40 = a2[22];
  v41 = a2[23];
  v42 = a2[24];
  v43 = a2[25];
  v4 = a2[8];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  sub_22DE8E3EC(*a2, v6, v7, v8, v9, v10, v11, v3, v4, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v3;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v27;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 104) = v31;
  *(_QWORD *)(a1 + 112) = v32;
  *(_QWORD *)(a1 + 120) = v33;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v34;
  *(_QWORD *)(a1 + 136) = v35;
  *(_QWORD *)(a1 + 144) = v36;
  *(_QWORD *)(a1 + 152) = v37;
  *(_QWORD *)(a1 + 160) = v38;
  *(_QWORD *)(a1 + 168) = v39;
  *(_QWORD *)(a1 + 176) = v40;
  *(_QWORD *)(a1 + 184) = v41;
  *(_QWORD *)(a1 + 192) = v42;
  *(_QWORD *)(a1 + 200) = v43;
  sub_22DE8E550(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((unint64_t *)&v25 + 1));
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for NXDiscoveryResultChange(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = *(_OWORD *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 128);
  v16 = *(_OWORD *)(a1 + 144);
  v17 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v17;
  v18 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v18;
  v19 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v19;
  v20 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v20;
  v21 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v21;
  v22 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v22;
  *(_OWORD *)(a1 + 192) = a2[12];
  sub_22DE8E550(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16,
    *((unint64_t *)&v16 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for NXDiscoveryResultChange(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48) >> 3;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for NXDiscoveryResultChange(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 200) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = 8 * -a2;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      *(_OWORD *)(a1 + 152) = 0u;
      *(_OWORD *)(a1 + 168) = 0u;
      *(_OWORD *)(a1 + 184) = 0u;
      *(_QWORD *)(a1 + 200) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_22DE8EB44(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 3)
  {
    v2 = *(_QWORD *)(result + 152) & 7 | (a2 << 62);
    *(_QWORD *)(result + 48) &= 7uLL;
    *(_QWORD *)(result + 152) = v2;
  }
  else
  {
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_QWORD *)(result + 152) = 0xC000000000000000;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXDiscoveryResultChange()
{
  return &type metadata for NXDiscoveryResultChange;
}

ValueMetadata *type metadata accessor for NXDiscoveryResultChange.CodingKeys()
{
  return &type metadata for NXDiscoveryResultChange.CodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryResultChange.IdenticalCodingKeys()
{
  return &type metadata for NXDiscoveryResultChange.IdenticalCodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryResultChange.AddedCodingKeys()
{
  return &type metadata for NXDiscoveryResultChange.AddedCodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryResultChange.RemovedCodingKeys()
{
  return &type metadata for NXDiscoveryResultChange.RemovedCodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryResultChange.ChangedCodingKeys()
{
  return &type metadata for NXDiscoveryResultChange.ChangedCodingKeys;
}

uint64_t getEnumTagSinglePayload for NXOperationEvent.XPCKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5Nexus23NXDiscoveryResultChangeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22DE8ECF0 + 4 * byte_22DEFD047[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22DE8ED24 + 4 * byte_22DEFD042[v4]))();
}

uint64_t sub_22DE8ED24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE8ED2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE8ED34);
  return result;
}

uint64_t sub_22DE8ED40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE8ED48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22DE8ED4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE8ED54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXDiscoveryResult.CodingKeys()
{
  return &type metadata for NXDiscoveryResult.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for NXDiscoveryEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22DE8EDBC + 4 * byte_22DEFD051[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22DE8EDF0 + 4 * byte_22DEFD04C[v4]))();
}

uint64_t sub_22DE8EDF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE8EDF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE8EE00);
  return result;
}

uint64_t sub_22DE8EE0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE8EE14);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22DE8EE18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE8EE20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXDiscoveryEvent.CodingKeys()
{
  return &type metadata for NXDiscoveryEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryEvent.StartedCodingKeys()
{
  return &type metadata for NXDiscoveryEvent.StartedCodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryEvent.RestartedCodingKeys()
{
  return &type metadata for NXDiscoveryEvent.RestartedCodingKeys;
}

uint64_t _s5Nexus16NXDiscoveryEventO15EndedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22DE8EE9C + 4 * byte_22DEFD056[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22DE8EEBC + 4 * byte_22DEFD05B[v4]))();
}

_BYTE *sub_22DE8EE9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22DE8EEBC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DE8EEC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DE8EECC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DE8EED4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DE8EEDC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NXDiscoveryEvent.ResultsChangedCodingKeys()
{
  return &type metadata for NXDiscoveryEvent.ResultsChangedCodingKeys;
}

uint64_t _s5Nexus24NXDiscoveryConfigurationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DE8EF44 + 4 * byte_22DEFD065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DE8EF78 + 4 * byte_22DEFD060[v4]))();
}

uint64_t sub_22DE8EF78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE8EF80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DE8EF88);
  return result;
}

uint64_t sub_22DE8EF94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DE8EF9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DE8EFA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DE8EFA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXDiscoveryConfiguration.CodingKeys()
{
  return &type metadata for NXDiscoveryConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryConfiguration.DefaultCodingKeys()
{
  return &type metadata for NXDiscoveryConfiguration.DefaultCodingKeys;
}

ValueMetadata *type metadata accessor for NXDiscoveryConfiguration.SetupCodingKeys()
{
  return &type metadata for NXDiscoveryConfiguration.SetupCodingKeys;
}

unint64_t sub_22DE8EFE8()
{
  unint64_t result;

  result = qword_255DCBEB0[0];
  if (!qword_255DCBEB0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD9F4, &type metadata for NXDiscoveryConfiguration.CodingKeys);
    atomic_store(result, qword_255DCBEB0);
  }
  return result;
}

unint64_t sub_22DE8F030()
{
  unint64_t result;

  result = qword_255DCC0C0[0];
  if (!qword_255DCC0C0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDAAC, &type metadata for NXDiscoveryEvent.ResultsChangedCodingKeys);
    atomic_store(result, qword_255DCC0C0);
  }
  return result;
}

unint64_t sub_22DE8F078()
{
  unint64_t result;

  result = qword_255DCC4D0[0];
  if (!qword_255DCC4D0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDC04, &type metadata for NXDiscoveryEvent.CodingKeys);
    atomic_store(result, qword_255DCC4D0);
  }
  return result;
}

unint64_t sub_22DE8F0C0()
{
  unint64_t result;

  result = qword_255DCC6E0[0];
  if (!qword_255DCC6E0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDCBC, &type metadata for NXDiscoveryResult.CodingKeys);
    atomic_store(result, qword_255DCC6E0);
  }
  return result;
}

unint64_t sub_22DE8F108()
{
  unint64_t result;

  result = qword_255DCC8F0[0];
  if (!qword_255DCC8F0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDD74, &type metadata for NXDiscoveryResultChange.ChangedCodingKeys);
    atomic_store(result, qword_255DCC8F0);
  }
  return result;
}

unint64_t sub_22DE8F150()
{
  unint64_t result;

  result = qword_255DCCB00[0];
  if (!qword_255DCCB00[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDE2C, &type metadata for NXDiscoveryResultChange.RemovedCodingKeys);
    atomic_store(result, qword_255DCCB00);
  }
  return result;
}

unint64_t sub_22DE8F198()
{
  unint64_t result;

  result = qword_255DCCD10[0];
  if (!qword_255DCCD10[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDEE4, &type metadata for NXDiscoveryResultChange.AddedCodingKeys);
    atomic_store(result, qword_255DCCD10);
  }
  return result;
}

unint64_t sub_22DE8F1E0()
{
  unint64_t result;

  result = qword_255DCD020[0];
  if (!qword_255DCD020[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDFEC, &type metadata for NXDiscoveryResultChange.CodingKeys);
    atomic_store(result, qword_255DCD020);
  }
  return result;
}

unint64_t sub_22DE8F228()
{
  unint64_t result;

  result = qword_255DCD130;
  if (!qword_255DCD130)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDF0C, &type metadata for NXDiscoveryResultChange.IdenticalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD130);
  }
  return result;
}

unint64_t sub_22DE8F270()
{
  unint64_t result;

  result = qword_255DCD138[0];
  if (!qword_255DCD138[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDF34, &type metadata for NXDiscoveryResultChange.IdenticalCodingKeys);
    atomic_store(result, qword_255DCD138);
  }
  return result;
}

unint64_t sub_22DE8F2B8()
{
  unint64_t result;

  result = qword_255DCD1C0;
  if (!qword_255DCD1C0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDE54, &type metadata for NXDiscoveryResultChange.AddedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD1C0);
  }
  return result;
}

unint64_t sub_22DE8F300()
{
  unint64_t result;

  result = qword_255DCD1C8[0];
  if (!qword_255DCD1C8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDE7C, &type metadata for NXDiscoveryResultChange.AddedCodingKeys);
    atomic_store(result, qword_255DCD1C8);
  }
  return result;
}

unint64_t sub_22DE8F348()
{
  unint64_t result;

  result = qword_255DCD250;
  if (!qword_255DCD250)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDD9C, &type metadata for NXDiscoveryResultChange.RemovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD250);
  }
  return result;
}

unint64_t sub_22DE8F390()
{
  unint64_t result;

  result = qword_255DCD258[0];
  if (!qword_255DCD258[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDDC4, &type metadata for NXDiscoveryResultChange.RemovedCodingKeys);
    atomic_store(result, qword_255DCD258);
  }
  return result;
}

unint64_t sub_22DE8F3D8()
{
  unint64_t result;

  result = qword_255DCD2E0;
  if (!qword_255DCD2E0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDCE4, &type metadata for NXDiscoveryResultChange.ChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD2E0);
  }
  return result;
}

unint64_t sub_22DE8F420()
{
  unint64_t result;

  result = qword_255DCD2E8[0];
  if (!qword_255DCD2E8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDD0C, &type metadata for NXDiscoveryResultChange.ChangedCodingKeys);
    atomic_store(result, qword_255DCD2E8);
  }
  return result;
}

unint64_t sub_22DE8F468()
{
  unint64_t result;

  result = qword_255DCD370;
  if (!qword_255DCD370)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDF5C, &type metadata for NXDiscoveryResultChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD370);
  }
  return result;
}

unint64_t sub_22DE8F4B0()
{
  unint64_t result;

  result = qword_255DCD378;
  if (!qword_255DCD378)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDF84, &type metadata for NXDiscoveryResultChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD378);
  }
  return result;
}

unint64_t sub_22DE8F4F8()
{
  unint64_t result;

  result = qword_255DCD400;
  if (!qword_255DCD400)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDC2C, &type metadata for NXDiscoveryResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD400);
  }
  return result;
}

unint64_t sub_22DE8F540()
{
  unint64_t result;

  result = qword_255DCD408[0];
  if (!qword_255DCD408[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDC54, &type metadata for NXDiscoveryResult.CodingKeys);
    atomic_store(result, qword_255DCD408);
  }
  return result;
}

unint64_t sub_22DE8F588()
{
  unint64_t result;

  result = qword_255DCD490;
  if (!qword_255DCD490)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDB24, &type metadata for NXDiscoveryEvent.StartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD490);
  }
  return result;
}

unint64_t sub_22DE8F5D0()
{
  unint64_t result;

  result = qword_255DCD498[0];
  if (!qword_255DCD498[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDB4C, &type metadata for NXDiscoveryEvent.StartedCodingKeys);
    atomic_store(result, qword_255DCD498);
  }
  return result;
}

unint64_t sub_22DE8F618()
{
  unint64_t result;

  result = qword_255DCD520;
  if (!qword_255DCD520)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDAD4, &type metadata for NXDiscoveryEvent.RestartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD520);
  }
  return result;
}

unint64_t sub_22DE8F660()
{
  unint64_t result;

  result = qword_255DCD528[0];
  if (!qword_255DCD528[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDAFC, &type metadata for NXDiscoveryEvent.RestartedCodingKeys);
    atomic_store(result, qword_255DCD528);
  }
  return result;
}

unint64_t sub_22DE8F6A8()
{
  unint64_t result;

  result = qword_255DCD5B0;
  if (!qword_255DCD5B0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDA1C, &type metadata for NXDiscoveryEvent.ResultsChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD5B0);
  }
  return result;
}

unint64_t sub_22DE8F6F0()
{
  unint64_t result;

  result = qword_255DCD5B8[0];
  if (!qword_255DCD5B8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDA44, &type metadata for NXDiscoveryEvent.ResultsChangedCodingKeys);
    atomic_store(result, qword_255DCD5B8);
  }
  return result;
}

unint64_t sub_22DE8F738()
{
  unint64_t result;

  result = qword_255DCD640;
  if (!qword_255DCD640)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDB74, &type metadata for NXDiscoveryEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD640);
  }
  return result;
}

unint64_t sub_22DE8F780()
{
  unint64_t result;

  result = qword_255DCD648[0];
  if (!qword_255DCD648[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFDB9C, &type metadata for NXDiscoveryEvent.CodingKeys);
    atomic_store(result, qword_255DCD648);
  }
  return result;
}

unint64_t sub_22DE8F7C8()
{
  unint64_t result;

  result = qword_255DCD6D0;
  if (!qword_255DCD6D0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD914, &type metadata for NXDiscoveryConfiguration.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD6D0);
  }
  return result;
}

unint64_t sub_22DE8F810()
{
  unint64_t result;

  result = qword_255DCD6D8[0];
  if (!qword_255DCD6D8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD93C, &type metadata for NXDiscoveryConfiguration.DefaultCodingKeys);
    atomic_store(result, qword_255DCD6D8);
  }
  return result;
}

unint64_t sub_22DE8F858()
{
  unint64_t result;

  result = qword_255DCD760;
  if (!qword_255DCD760)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD8C4, &type metadata for NXDiscoveryConfiguration.SetupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD760);
  }
  return result;
}

unint64_t sub_22DE8F8A0()
{
  unint64_t result;

  result = qword_255DCD768[0];
  if (!qword_255DCD768[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD8EC, &type metadata for NXDiscoveryConfiguration.SetupCodingKeys);
    atomic_store(result, qword_255DCD768);
  }
  return result;
}

unint64_t sub_22DE8F8E8()
{
  unint64_t result;

  result = qword_255DCD7F0;
  if (!qword_255DCD7F0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD964, &type metadata for NXDiscoveryConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD7F0);
  }
  return result;
}

unint64_t sub_22DE8F930()
{
  unint64_t result;

  result = qword_255DCD7F8[0];
  if (!qword_255DCD7F8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFD98C, &type metadata for NXDiscoveryConfiguration.CodingKeys);
    atomic_store(result, qword_255DCD7F8);
  }
  return result;
}

uint64_t sub_22DE8F974(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x64657472617473 && a2 == 0xE700000000000000;
  if (v3 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465646E65 && a2 == 0xE500000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574726174736572 && a2 == 0xE900000000000064 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4373746C75736572 && a2 == 0xEE006465676E6168)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_22DE8FB80(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365676E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22DE8FC04()
{
  return 0x7365676E616863;
}

uint64_t sub_22DE8FC1C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000;
  if (v3 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_22DE8FD8C()
{
  return 12383;
}

uint64_t sub_22DE8FD98(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 6581359 && a2 == 0xE300000000000000;
  if (v3 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7824750 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22DE8FE60(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x616369746E656469 && a2 == 0xE90000000000006CLL;
  if (v3 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465646461 && a2 == 0xE500000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465676E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_22DE90000(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22DE9006C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DE90090()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_22DE900B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 216);
  v16 = *(_QWORD *)(a1 + 208);
  v3 = *(_QWORD *)(a1 + 224);
  v4 = *(_QWORD *)(a1 + 232);
  v5 = *(_QWORD *)(a1 + 240);
  v6 = *(_QWORD *)(a1 + 248);
  v7 = *(_QWORD *)(a1 + 256);
  v8 = *(_QWORD *)(a1 + 264);
  v14 = *(_OWORD *)(a1 + 288);
  v15 = *(_OWORD *)(a1 + 272);
  v12 = *(_OWORD *)(a1 + 320);
  v13 = *(_OWORD *)(a1 + 304);
  v11 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  sub_22DE8E550(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152));
  sub_22DE8E550(v16, v2, v3, v4, v5, v6, v7, v8, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10,
    *((unint64_t *)&v10 + 1));
  return a1;
}

_QWORD *sub_22DE901EC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25]);
  return a1;
}

uint64_t sub_22DE90258()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DE9027C(void *a1)
{
  uint64_t result;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(uint64_t *);
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22[3];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (_QWORD *)result;
    if (a1)
    {
      v4 = a1;
      if (qword_255DCAB20 != -1)
        swift_once();
      v5 = sub_22DEFA674();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DCAB28);
      v6 = a1;
      swift_retain();
      v7 = a1;
      v8 = sub_22DEFA65C();
      v9 = sub_22DEFAB9C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v22[0] = v11;
        *(_DWORD *)v10 = 134218242;
        sub_22DEFAC2C();
        swift_release();
        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue();
        v12 = sub_22DEFAEC0();
        v20 = sub_22DE8C348(v12, v13, v22);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v8, v9, "### Invalidate failed: clientID=%llu, error=%s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        MEMORY[0x22E321E0C](v10, -1, -1);

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      if (qword_255DCAB20 != -1)
        swift_once();
      v14 = sub_22DEFA674();
      __swift_project_value_buffer(v14, (uint64_t)qword_255DCAB28);
      swift_retain();
      v15 = sub_22DEFA65C();
      v16 = sub_22DEFABA8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v17 = 134217984;
        v22[0] = v3[3];
        sub_22DEFAC2C();
        swift_release();
        _os_log_impl(&dword_22DE7A000, v15, v16, "Invalidated: clientID=%llu", v17, 0xCu);
        MEMORY[0x22E321E0C](v17, -1, -1);
      }
      else
      {
        swift_release();
      }

    }
    swift_beginAccess();
    v18 = (void (*)(uint64_t *))v3[6];
    if (v18)
    {
      v20 = 0;
      v21 = 0;
      swift_retain();
      v18(&v20);
      sub_22DE87604((uint64_t)v18);
      v19 = v3[6];
    }
    else
    {
      v19 = 0;
    }
    v3[6] = 0;
    v3[7] = 0;
    sub_22DE87604(v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DE90618(void *a1)
{
  uint64_t result;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  void (*v20)(uint64_t *);
  uint64_t v21;
  void (*v22)(uint64_t *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27[3];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (_QWORD *)result;
    if (a1)
    {
      v4 = a1;
      if (qword_255DCAB20 != -1)
        swift_once();
      v5 = sub_22DEFA674();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DCAB28);
      v6 = a1;
      swift_retain();
      v7 = a1;
      v8 = sub_22DEFA65C();
      v9 = sub_22DEFAB9C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v27[0] = v11;
        *(_DWORD *)v10 = 134218242;
        v23 = v3[3];
        sub_22DEFAC2C();
        swift_release();
        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue();
        v12 = sub_22DEFAEC0();
        v25 = sub_22DE8C348(v12, v13, v27);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v8, v9, "### Activate failed: clientID=%llu, error=%s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        MEMORY[0x22E321E0C](v10, -1, -1);
      }
      else
      {
        swift_release();

      }
      type metadata accessor for NXError();
      v18 = a1;
      v19 = NXError.__allocating_init(_:)(a1);
      swift_beginAccess();
      v20 = (void (*)(uint64_t *))v3[6];
      if (v20)
      {
        v25 = (uint64_t)v19;
        v26 = 0;
        swift_retain();
        v20(&v25);
        sub_22DE87604((uint64_t)v20);
      }

      v21 = v3[6];
      v3[6] = 0;
      v3[7] = 0;
    }
    else
    {
      if (qword_255DCAB20 != -1)
        swift_once();
      v14 = sub_22DEFA674();
      __swift_project_value_buffer(v14, (uint64_t)qword_255DCAB28);
      swift_retain();
      v15 = sub_22DEFA65C();
      v16 = sub_22DEFABA8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v17 = 134217984;
        v27[0] = v3[3];
        sub_22DEFAC2C();
        swift_release();
        _os_log_impl(&dword_22DE7A000, v15, v16, "Activated: clientID=%llu", v17, 0xCu);
        MEMORY[0x22E321E0C](v17, -1, -1);
      }
      else
      {
        swift_release();
      }

      swift_beginAccess();
      v22 = (void (*)(uint64_t *))v3[6];
      if (!v22)
        return swift_release();
      v23 = 0;
      LOBYTE(v24) = 3;
      swift_retain();
      v22(&v23);
      v21 = (uint64_t)v22;
    }
    sub_22DE87604(v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DE90A24()
{
  uint64_t v0;

  v0 = sub_22DEFA674();
  __swift_allocate_value_buffer(v0, qword_255DCD888);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DCD888);
  sub_22DEF4E10();
  swift_bridgeObjectRetain();
  return sub_22DEFA668();
}

id NXXPCClient.dispatchQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_22DE90AB4@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DEA6384;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DE875A4(v4);
}

uint64_t sub_22DE90B3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DEA6384;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = v5;
  sub_22DE875A4(v3);
  return sub_22DE87604(v8);
}

uint64_t NXXPCClient.interruptionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  sub_22DE875A4(v1);
  return v1;
}

uint64_t NXXPCClient.interruptionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return sub_22DE87604(v5);
}

uint64_t (*NXXPCClient.interruptionHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22DE90CC0@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 48);
  v5 = *(_QWORD *)(v3 + 56);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DE90090;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DE875A4(v4);
}

uint64_t sub_22DE90D48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DE90090;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 48);
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = v5;
  sub_22DE875A4(v3);
  return sub_22DE87604(v8);
}

uint64_t NXXPCClient.invalidationHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  sub_22DE875A4(v1);
  return v1;
}

uint64_t NXXPCClient.invalidationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return sub_22DE87604(v5);
}

uint64_t (*NXXPCClient.invalidationHandler.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t NXXPCClient.__allocating_init(dispatchQueue:xpcEndpoint:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  NXXPCClient.init(dispatchQueue:xpcEndpoint:)(a1, a2);
  return v4;
}

uint64_t NXXPCClient.init(dispatchQueue:xpcEndpoint:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_22DEFABC0();
  MEMORY[0x24BDAC7A8]();
  sub_22DEFA92C();
  MEMORY[0x24BDAC7A8]();
  v5 = sub_22DEFABCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_WORD *)(v2 + 40) = 0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  v9 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 80) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 88) = v9;
  *(_QWORD *)(v2 + 96) = v9;
  *(_QWORD *)(v2 + 104) = v9;
  *(_QWORD *)(v2 + 112) = v9;
  *(_QWORD *)(v2 + 120) = v9;
  *(_QWORD *)(v2 + 128) = v9;
  if (!a1)
  {
    sub_22DE8765C();
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5758], v5);
    sub_22DEFA920();
    v11[1] = MEMORY[0x24BEE4AF8];
    sub_22DE8D808(&qword_255DC6468, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6470);
    sub_22DE91728(&qword_255DC6478, &qword_255DC6470);
    sub_22DEFAC5C();
    a1 = sub_22DEFABE4();
  }
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  swift_unknownObjectRelease();
  return v2;
}

Swift::Void __swiftcall NXXPCClient.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_22DEFA914();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DEFA92C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v1 + 16);
  aBlock[4] = sub_22DE912E8;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = &block_descriptor_0;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_22DEFA920();
  v12[1] = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE91728((unint64_t *)&qword_255DC6490, &qword_255DC61E8);
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

void sub_22DE912E8()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  _xpc_connection_s *v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  _QWORD v29[2];
  char v30[8];
  _QWORD v31[2];
  char v32[32];

  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    return;
  ObjectType = v0;
  *(_BYTE *)(v0 + 40) = 1;
  if (qword_255DCD880 != -1)
LABEL_39:
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DCD888);
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFABA8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DE7A000, v3, v4, "Invalidate", v5, 2u);
    MEMORY[0x22E321E0C](v5, -1, -1);
  }

  *(_BYTE *)(ObjectType + 40) = 1;
  swift_beginAccess();
  v6 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(ObjectType + 80) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(ObjectType + 88) = v6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(ObjectType + 128) = v6;
  swift_bridgeObjectRelease();
  type metadata accessor for NXError();
  v32[0] = 8;
  v7 = NXError.__allocating_init(_:_:_:)((uint64_t)v32, 0xD000000000000016, 0x800000022DF02AA0, 0);
  swift_beginAccess();
  v8 = *(_QWORD *)(ObjectType + 112);
  v23 = ObjectType;
  v24 = v8 + 64;
  v9 = 1 << *(_BYTE *)(v8 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v8 + 64);
  v25 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (v11)
  {
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v12 << 6);
LABEL_11:
    v15 = *(_QWORD *)(v8 + 56);
    v28 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14);
    sub_22DEA27E0(v15 + 16 * v14, (uint64_t)v29);
LABEL_30:
    sub_22DEA4DD0((uint64_t)&v28, (uint64_t)v30, &qword_255DC6600);
    if (!v31[0] && v31[1] == 1)
    {
      swift_release();
      *(_QWORD *)(v23 + 112) = MEMORY[0x24BEE4B00];

      swift_bridgeObjectRelease();
      v22 = *(_xpc_connection_s **)(v23 + 64);
      if (v22)
        xpc_connection_cancel(v22);
      sub_22DE91768();
      return;
    }
    sub_22DEA310C((uint64_t)v31, (uint64_t)&v28);
    if (MEMORY[0x22E321ED8](&v28))
    {
      v19 = v29[0];
      ObjectType = swift_getObjectType();
      v20 = v7;
      v21 = NXError.__allocating_init(_:)(v7);
      v26 = v21;
      v27 = 1;
      (*(void (**)(id *, uint64_t, uint64_t))(v19 + 72))(&v26, ObjectType, v19);
      swift_unknownObjectRelease();

    }
    sub_22DEA3148((uint64_t)&v28);
  }
  v16 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v16 >= v25)
  {
LABEL_29:
    v11 = 0;
    v28 = 0;
    v29[0] = 0;
    v29[1] = 1;
    goto LABEL_30;
  }
  v17 = *(_QWORD *)(v24 + 8 * v16);
  if (v17)
  {
LABEL_15:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v12 = v16;
    goto LABEL_11;
  }
  v18 = v12 + 2;
  ++v12;
  if (v16 + 1 >= v25)
    goto LABEL_29;
  v17 = *(_QWORD *)(v24 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v12 = v16 + 1;
  if (v16 + 2 >= v25)
    goto LABEL_29;
  v17 = *(_QWORD *)(v24 + 8 * (v16 + 2));
  if (v17)
  {
    v16 += 2;
    goto LABEL_15;
  }
  v18 = v16 + 3;
  v12 = v16 + 2;
  if (v16 + 3 >= v25)
    goto LABEL_29;
  v17 = *(_QWORD *)(v24 + 8 * v18);
  if (v17)
  {
LABEL_18:
    v16 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v25)
    {
      v12 = v25 - 1;
      goto LABEL_29;
    }
    v17 = *(_QWORD *)(v24 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_15;
  }
  __break(1u);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_22DE91728(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E321D70](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_22DE91768()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (*(_BYTE *)(v0 + 40) == 1 && (*(_BYTE *)(v0 + 41) & 1) == 0 && !*(_QWORD *)(v0 + 64))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 80) + 16))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(v0 + 88) + 16))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(v0 + 128) + 16))
        {
          swift_beginAccess();
          v1 = *(_QWORD *)(v0 + 24);
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = 0;
          sub_22DE87604(v1);
          swift_beginAccess();
          v2 = *(void (**)(uint64_t))(v0 + 48);
          *(_QWORD *)(v0 + 48) = 0;
          *(_QWORD *)(v0 + 56) = 0;
          sub_22DE875A4((uint64_t)v2);
          sub_22DE87604((uint64_t)v2);
          if (v2)
          {
            v3 = swift_retain();
            v2(v3);
            sub_22DE87604((uint64_t)v2);
          }
          if (qword_255DCD880 != -1)
            swift_once();
          v4 = sub_22DEFA674();
          __swift_project_value_buffer(v4, (uint64_t)qword_255DCD888);
          v5 = sub_22DEFA65C();
          v6 = sub_22DEFABA8();
          if (os_log_type_enabled(v5, v6))
          {
            v7 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v7 = 0;
            _os_log_impl(&dword_22DE7A000, v5, v6, "Invalidated", v7, 2u);
            MEMORY[0x22E321E0C](v7, -1, -1);

            sub_22DE87604((uint64_t)v2);
          }
          else
          {
            sub_22DE87604((uint64_t)v2);

          }
        }
      }
    }
  }
}

uint64_t sub_22DE91954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _xpc_connection_s *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  dispatch_queue_t v37;
  uint64_t v38;
  __int128 aBlock;
  __int128 v40;
  __int128 v41;
  char v42;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6498);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DEFA938();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v4 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v37 = v16;
    v38 = a2;
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock) = 0;
    NXRequestType.rawValue.getter();
    v19 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v20 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v19 + 32), (const char *)(v20 + 32));
    swift_release();
    swift_release();
    LOBYTE(aBlock) = 0;
    NXKey.rawValue.getter();
    v21 = *(_QWORD *)(a1 + 24);
    v22 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v22 + 32), v21);
    swift_release();
    LOBYTE(aBlock) = 2;
    NXKey.rawValue.getter();
    v23 = *(_BYTE *)(a1 + 88);
    v24 = *(_OWORD *)(a1 + 56);
    aBlock = *(_OWORD *)(a1 + 40);
    v40 = v24;
    v41 = *(_OWORD *)(a1 + 72);
    v42 = v23;
    NXEndpoint.xpcObjectRepresentation.getter();
    v26 = v25;
    v27 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(empty, (const char *)(v27 + 32), v26);
    swift_unknownObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 120))
    {
      LOBYTE(aBlock) = 5;
      NXKey.rawValue.getter();
      v28 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v29 = sub_22DEFA9EC();
      xpc_dictionary_set_string(empty, (const char *)(v28 + 32), (const char *)(v29 + 32));
      swift_release();
      swift_release();
    }
    *(_QWORD *)&aBlock = 0x8000000000000008;
    nullsub_1(&aBlock);
    type metadata accessor for NXClient();
    swift_retain();
    sub_22DEFA650();
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 0, 1, v30);
    swift_beginAccess();
    sub_22DE92048((uint64_t)v10, v21, &qword_255DC6498, &qword_255DC64A0, &qword_255DC6668);
    swift_endAccess();
    v31 = sub_22DE9223C();
    v32 = swift_allocObject();
    swift_weakInit();
    v33 = swift_allocObject();
    swift_weakInit();
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = v32;
    v34[3] = v33;
    v34[4] = v38;
    v34[5] = a3;
    *(_QWORD *)&v41 = sub_22DE925FC;
    *((_QWORD *)&v41 + 1) = v34;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v40 = sub_22DE92608;
    *((_QWORD *)&v40 + 1) = &block_descriptor_9;
    v35 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v31, empty, v37, v35);
    _Block_release(v35);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DE91E14(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  BOOL v5;
  char v6;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v3 = v2;
  if (*a1)
    v5 = 0;
  else
    v5 = a1[1] == 1;
  if (v5)
  {
    sub_22DE8731C((uint64_t)a1, &qword_255DC64C8);
    v8 = sub_22DE9F9F8(a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = *v2;
      v14 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22DEA29BC();
        v12 = v14;
      }
      sub_22DEA310C(*(_QWORD *)(v12 + 56) + 16 * v10, (uint64_t)&v15);
      sub_22DEA0EF4(v10, v12);
      *v3 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = xmmword_22DEFE510;
    }
    return sub_22DE8731C((uint64_t)&v15, &qword_255DC64C8);
  }
  else
  {
    sub_22DEA310C((uint64_t)a1, (uint64_t)&v15);
    v6 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_22DEA1B20((uint64_t)&v15, a2, v6);
    *v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22DE91F30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14[2];
  uint64_t v15;

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_22DEA2EEC((__int128 *)a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_22DEA1DA0(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_22DE8731C(a1, &qword_255DC64D0);
    v7 = sub_22DE9F9F8(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_22DEA2D28();
        v11 = v13;
      }
      sub_22DEA2EEC((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v9), (uint64_t)v14);
      sub_22DEA1284(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
      memset(v14, 0, sizeof(v14));
    }
    return sub_22DE8731C((uint64_t)v14, &qword_255DC64D0);
  }
}

uint64_t sub_22DE92048(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;

  v9 = v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8]();
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8]();
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a1, 1, v14) == 1)
  {
    sub_22DE8731C(a1, a3);
    v18 = sub_22DE9F9F8(a2);
    if ((v19 & 1) != 0)
    {
      v20 = v18;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v22 = *v9;
      v27 = *v9;
      *v9 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_22DEA3280(a4, a5);
        v22 = v27;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 32))(v13, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v15 + 72) * v20, v14);
      sub_22DEA142C(v20, v22, a4);
      *v9 = v22;
      swift_bridgeObjectRelease();
      v23 = 0;
    }
    else
    {
      v23 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v23, 1, v14);
    return sub_22DE8731C((uint64_t)v13, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v17, a1, v14);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v9;
    *v9 = 0x8000000000000000;
    sub_22DEA1894((uint64_t)v17, a2, v24, a4, a5);
    *v9 = v27;
    return swift_bridgeObjectRelease();
  }
}

_xpc_connection_s *sub_22DE9223C()
{
  uint64_t v0;
  _xpc_connection_s *mach_service;
  _xpc_endpoint_s *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[6];

  if (*(_QWORD *)(v0 + 64))
  {
    mach_service = *(_xpc_connection_s **)(v0 + 64);
  }
  else
  {
    if (*(_QWORD *)(v0 + 72))
    {
      v2 = (_xpc_endpoint_s *)swift_unknownObjectRetain();
      mach_service = xpc_connection_create_from_endpoint(v2);
      xpc_connection_set_target_queue(mach_service, *(dispatch_queue_t *)(v0 + 16));
      swift_unknownObjectRelease();
    }
    else
    {
      sub_22DEF4F08();
      v3 = *(NSObject **)(v0 + 16);
      v4 = sub_22DEFA9EC();
      mach_service = xpc_connection_create_mach_service((const char *)(v4 + 32), v3, 0);
      swift_release();
    }
    *(_QWORD *)(v0 + 64) = mach_service;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    v5 = swift_allocObject();
    swift_weakInit();
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    v10[4] = sub_22DE993B0;
    v10[5] = v7;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_22DE92608;
    v10[3] = &block_descriptor_19;
    v8 = _Block_copy(v10);
    swift_release();
    xpc_connection_set_event_handler(mach_service, v8);
    _Block_release(v8);
    xpc_connection_activate(mach_service);
  }
  swift_unknownObjectRetain();
  return mach_service;
}

uint64_t sub_22DE923C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_22DE923E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  char v13[24];

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v5 = (id)CUXPCDecodeNSErrorIfNeeded();
    if (v5)
    {
      v6 = v5;
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        type metadata accessor for NXError();
        v7 = (unint64_t)NXError.__allocating_init(_:)(v6);
        v12 = v7 | 0x4000000000000000;
        nullsub_1(&v12);

        swift_release();
      }
      v8 = v6;
      a4(v6);

      sub_22DE91768();
    }
    else
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v12 = 0x8000000000000010;
        nullsub_1(&v12);
        swift_release();
      }
      a4(0);
    }
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    v13[0] = 1;
    v9 = NXError.__allocating_init(_:_:_:)((uint64_t)v13, 0xD000000000000016, 0x800000022DF02A80, 0);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v10 = (unint64_t)NXError.__allocating_init(_:)(v9);
      v12 = v10 | 0x4000000000000000;
      nullsub_1(&v12);

      swift_release();
    }
    v11 = v9;
    a4(v9);

  }
}

uint64_t sub_22DE925EC()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_22DE925FC(uint64_t a1)
{
  uint64_t v1;

  sub_22DE923E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

uint64_t sub_22DE92608(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_22DE92650()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DE92674(uint64_t a1, char a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_22DEFA914();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_22DEFA92C();
  v12 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v4;
  v16[3] = v15;
  v16[4] = a3;
  v16[5] = a4;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_retain();
    sub_22DE928F0(v15, a3, a4);
  }
  else
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_22DE9945C;
    *(_QWORD *)(v18 + 24) = v16;
    aBlock[4] = sub_22DE90090;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE87E38;
    aBlock[3] = &block_descriptor_28;
    v19 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22DEFA920();
    v23 = MEMORY[0x24BEE4AF8];
    sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
    sub_22DE91728((unint64_t *)&qword_255DC6490, &qword_255DC61E8);
    sub_22DEFAC5C();
    MEMORY[0x22E321590](0, v14, v11, v19);
    _Block_release(v19);
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  }
  return swift_release();
}

uint64_t sub_22DE928F0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  xpc_object_t empty;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _xpc_connection_s *v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6498);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DEFA938();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (_QWORD *)((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v4 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  v17 = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    swift_beginAccess();
    v19 = *(_QWORD *)(v4 + 80);
    if (*(_QWORD *)(v19 + 16) && (v20 = sub_22DE9F9F8(a1), (v21 & 1) != 0))
    {
      v22 = v20;
      v23 = *(_QWORD *)(v19 + 56);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
      v25 = *(_QWORD *)(v24 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v10, v23 + *(_QWORD *)(v25 + 72) * v22, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v24);
    }
    else
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
    }
    swift_endAccess();
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v10, 1, v27);
    sub_22DE8731C((uint64_t)v10, &qword_255DC6498);
    if (v28 == 1)
    {
      return a2(0);
    }
    else
    {
      empty = xpc_dictionary_create_empty();
      LOBYTE(aBlock[0]) = 18;
      NXKey.rawValue.getter();
      LOBYTE(aBlock[0]) = 1;
      NXRequestType.rawValue.getter();
      v30 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v31 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_string(empty, (const char *)(v30 + 32), (const char *)(v31 + 32));
      swift_release();
      swift_release();
      LOBYTE(aBlock[0]) = 0;
      NXKey.rawValue.getter();
      v32 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_uint64(empty, (const char *)(v32 + 32), a1);
      swift_release();
      v33 = sub_22DE9223C();
      v34 = swift_allocObject();
      swift_weakInit();
      v35 = (_QWORD *)swift_allocObject();
      v35[2] = v34;
      v35[3] = a2;
      v35[4] = a3;
      v35[5] = a1;
      aBlock[4] = sub_22DE9FA30;
      aBlock[5] = v35;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22DE92608;
      aBlock[3] = &block_descriptor_35;
      v36 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      xpc_connection_send_message_with_reply(v33, empty, v16, v36);
      _Block_release(v36);
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22DE92C88(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6498);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_beginAccess();
    sub_22DE92048((uint64_t)v9, a5, &qword_255DC6498, &qword_255DC64A0, &qword_255DC6668);
    swift_endAccess();
    v11 = (id)CUXPCDecodeNSErrorIfNeeded();
    if (v11)
    {
      v12 = v11;
      v16[0] = 1;
      type metadata accessor for NXError();
      v13 = v12;
      v14 = NXError.__allocating_init(_:_:_:)((uint64_t)v16, 0x69616620706F7453, 0xEB0000000064656CLL, v12);
      a3();

    }
    else
    {
      a3();
    }
    sub_22DE91768();
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    v16[0] = 1;
    v15 = NXError.__allocating_init(_:_:_:)((uint64_t)v16, 0xD000000000000016, 0x800000022DF02A80, 0);
    a3();

  }
}

uint64_t sub_22DE92E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  NSObject *v14;
  char v15;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _xpc_connection_s *v24;
  uint64_t v25;
  void *v26;
  dispatch_queue_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v6 = v5;
  v28 = a4;
  v9 = sub_22DEFA938();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (dispatch_queue_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v6 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  v15 = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    empty = xpc_dictionary_create_empty();
    v27 = v14;
    LOBYTE(aBlock[0]) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock[0]) = 18;
    NXRequestType.rawValue.getter();
    v18 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v19 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v18 + 32), (const char *)(v19 + 32));
    swift_release();
    swift_release();
    LOBYTE(aBlock[0]) = 0;
    NXKey.rawValue.getter();
    v20 = *(_QWORD *)(a1 + 24);
    v21 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v21 + 32), v20);
    swift_release();
    LOBYTE(aBlock[0]) = 14;
    NXKey.rawValue.getter();
    v22 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v23 = sub_22DEFA9EC();
    xpc_dictionary_set_string(empty, (const char *)(v22 + 32), (const char *)(v23 + 32));
    swift_release();
    swift_release();
    v24 = sub_22DE9223C();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v28;
    *(_QWORD *)(v25 + 24) = a5;
    aBlock[4] = sub_22DE9FA3C;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    aBlock[3] = &block_descriptor_41;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v24, empty, v27, v26);
    _Block_release(v26);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DE9312C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  char *v57;
  int64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t *v62;
  unint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[3];

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6498);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v2 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
  v66 = *(_QWORD *)(v3 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v64 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6650);
  v5 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v7 = (uint64_t *)((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v50 - v8);
  v10 = (uint64_t *)(v0 + 80);
  swift_beginAccess();
  v59 = v0;
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v11 + 64);
  v54 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v65 = v14 & v12;
  v15 = (unint64_t)(v13 + 63) >> 6;
  v51 = v15 - 1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v58 = v15;
  v52 = v15 - 5;
  v61 = result;
  v53 = result + 104;
  *(_QWORD *)&v18 = 136315138;
  v56 = v18;
  v55 = MEMORY[0x24BEE4AD8] + 8;
  v57 = v2;
  v60 = v7;
  v62 = v9;
  while (1)
  {
    if (v65)
    {
      v20 = __clz(__rbit64(v65));
      v65 &= v65 - 1;
      v63 = v17;
      v21 = v20 | (v17 << 6);
      goto LABEL_9;
    }
    v26 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v26 >= v58)
    {
      v28 = v17;
    }
    else
    {
      v27 = *(_QWORD *)(v54 + 8 * v26);
      if (v27)
        goto LABEL_13;
      v28 = v17 + 1;
      if ((uint64_t)(v17 + 2) < v58)
      {
        v27 = *(_QWORD *)(v54 + 8 * (v17 + 2));
        if (v27)
        {
          v26 = v17 + 2;
          goto LABEL_13;
        }
        v28 = v17 + 2;
        if ((uint64_t)(v17 + 3) < v58)
        {
          v27 = *(_QWORD *)(v54 + 8 * (v17 + 3));
          if (v27)
          {
            v26 = v17 + 3;
LABEL_13:
            v65 = (v27 - 1) & v27;
            v21 = __clz(__rbit64(v27)) + (v26 << 6);
            v63 = v26;
LABEL_9:
            v22 = *(_QWORD *)(v61 + 56);
            *v7 = *(_QWORD *)(*(_QWORD *)(v61 + 48) + 8 * v21);
            v23 = v66;
            v24 = v22 + *(_QWORD *)(v66 + 72) * v21;
            v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6658);
            (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)v7 + *(int *)(v25 + 48), v24, v3);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 0, 1, v25);
            goto LABEL_16;
          }
          v26 = v17 + 4;
          v28 = v17 + 3;
          if ((uint64_t)(v17 + 4) < v58)
          {
            v27 = *(_QWORD *)(v54 + 8 * v26);
            if (v27)
              goto LABEL_13;
            while (v52 != v17)
            {
              v27 = *(_QWORD *)(v53 + 8 * v17++);
              if (v27)
              {
                v26 = v17 + 4;
                goto LABEL_13;
              }
            }
            v28 = v51;
          }
        }
      }
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6658);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
    v65 = 0;
    v63 = v28;
LABEL_16:
    sub_22DEA4DD0((uint64_t)v7, (uint64_t)v9, &qword_255DC6650);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6658);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v9, 1, v30) == 1)
      return swift_release();
    v31 = *v9;
    v32 = (char *)v9 + *(int *)(v30 + 48);
    v33 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v33(v64, v32, v3);
    v34 = sub_22DEFA644();
    if (v34)
    {
      v35 = (uint64_t *)v34;
      if (qword_255DCD880 != -1)
        swift_once();
      v36 = sub_22DEFA674();
      __swift_project_value_buffer(v36, (uint64_t)qword_255DCD888);
      swift_retain_n();
      v37 = sub_22DEFA65C();
      v38 = sub_22DEFABA8();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v67 = (uint64_t)v35;
        v68[0] = v40;
        *(_DWORD *)v39 = v56;
        type metadata accessor for NXClient();
        sub_22DE8D808(&qword_255DC6660, (uint64_t (*)(uint64_t))type metadata accessor for NXClient, (uint64_t)&protocol conformance descriptor for NXClient);
        v41 = sub_22DEFAE3C();
        *(_QWORD *)(v39 + 4) = sub_22DE8C348(v41, v42, v68);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v37, v38, "Client restart: client=%s", (uint8_t *)v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v40, -1, -1);
        v43 = v39;
        v2 = v57;
        MEMORY[0x22E321E0C](v43, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v7 = v60;
      v19 = swift_retain();
      sub_22DEA3BA4(v19, v59, v35);
      swift_release_n();
      v9 = v62;
    }
    else
    {
      swift_beginAccess();
      v44 = sub_22DE9F9F8(v31);
      if ((v45 & 1) != 0)
      {
        v46 = v44;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v48 = *v10;
        v67 = *v10;
        *v10 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_22DEA3280(&qword_255DC64A0, &qword_255DC6668);
          v48 = v67;
        }
        v33(v2, (char *)(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v66 + 72) * v46), v3);
        sub_22DEA142C(v46, v48, &qword_255DC64A0);
        *v10 = v48;
        swift_bridgeObjectRelease();
        v49 = 0;
      }
      else
      {
        v49 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v2, v49, 1, v3);
      sub_22DE8731C((uint64_t)v2, &qword_255DC6498);
      swift_endAccess();
      v9 = v62;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v64, v3);
    v17 = v63;
  }
  __break(1u);
  return result;
}

void sub_22DE937B8(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  __int128 v23;
  char v24;

  if (a1)
  {
    v2 = a1;
    if (qword_255DCD880 != -1)
      swift_once();
    v3 = sub_22DEFA674();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DCD888);
    swift_retain();
    v4 = a1;
    swift_retain();
    v5 = a1;
    v6 = sub_22DEFA65C();
    v7 = sub_22DEFAB9C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      *(_QWORD *)&v23 = v9;
      *(_DWORD *)v8 = 136315394;
      sub_22DE8D808(&qword_255DC6660, (uint64_t (*)(uint64_t))type metadata accessor for NXClient, (uint64_t)&protocol conformance descriptor for NXClient);
      v10 = sub_22DEFAE3C();
      sub_22DE8C348(v10, v11, (uint64_t *)&v23);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      swift_getErrorValue();
      v12 = sub_22DEFAEC0();
      sub_22DE8C348(v12, v13, (uint64_t *)&v23);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, v6, v7, "### Client restart failed: client=%s, error=%s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v9, -1, -1);
      MEMORY[0x22E321E0C](v8, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    type metadata accessor for NXError();
    LOBYTE(v23) = 10;
    v21 = a1;
    v22 = NXError.__allocating_init(_:_:_:)((uint64_t)&v23, 0, 0, a1);
    v23 = (unint64_t)v22;
    v24 = 32;
    sub_22DED68DC((uint64_t *)&v23);

  }
  else
  {
    if (qword_255DCD880 != -1)
      swift_once();
    v14 = sub_22DEFA674();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DCD888);
    swift_retain_n();
    v15 = sub_22DEFA65C();
    v16 = sub_22DEFABA8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_QWORD *)&v23 = v18;
      *(_DWORD *)v17 = 136315138;
      sub_22DE8D808(&qword_255DC6660, (uint64_t (*)(uint64_t))type metadata accessor for NXClient, (uint64_t)&protocol conformance descriptor for NXClient);
      v19 = sub_22DEFAE3C();
      sub_22DE8C348(v19, v20, (uint64_t *)&v23);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DE7A000, v15, v16, "Client restarted: client=%s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v18, -1, -1);
      MEMORY[0x22E321E0C](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v23 = xmmword_22DEFE520;
    v24 = 0x80;
    sub_22DED68DC((uint64_t *)&v23);
  }
}

uint64_t NXXPCClient.ping(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  NSObject *v11;
  char v12;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v15;
  uint64_t v16;
  _xpc_connection_s *v17;
  uint64_t v18;
  void *v19;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_22DEFA938();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + 16);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  v12 = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) != 0)
  {
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock[0]) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock[0]) = 10;
    NXRequestType.rawValue.getter();
    v15 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v16 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v15 + 32), (const char *)(v16 + 32));
    swift_release();
    swift_release();
    v17 = sub_22DE9223C();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a1;
    *(_QWORD *)(v18 + 24) = a2;
    aBlock[4] = sub_22DE9FA3C;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    aBlock[3] = &block_descriptor_47;
    v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v17, empty, v11, v19);
    _Block_release(v19);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DE93E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class *v13;
  Class isa;
  NSObject *v15;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _xpc_connection_s *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  dispatch_queue_t v30[2];
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[3];
  ValueMetadata *v34;
  uint64_t (*v35)();
  _QWORD *v36;
  uint64_t v37;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DEFA938();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (Class *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  isa = v3[2].isa;
  *v13 = isa;
  (*(void (**)(Class *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = isa;
  LOBYTE(isa) = sub_22DEFA944();
  result = (*(uint64_t (**)(Class *, uint64_t))(v11 + 8))(v13, v10);
  if ((isa & 1) != 0)
  {
    v30[0] = v15;
    v30[1] = v3;
    v31 = a2;
    v32 = a3;
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock[0]) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock[0]) = 15;
    NXRequestType.rawValue.getter();
    v18 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v19 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v18 + 32), (const char *)(v19 + 32));
    swift_release();
    swift_release();
    v20 = *(_QWORD *)(a1 + 24);
    LOBYTE(aBlock[0]) = 0;
    NXKey.rawValue.getter();
    v21 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v21 + 32), v20);
    swift_release();
    swift_getObjectType();
    v22 = *(_BYTE *)(a1 + 32);
    v34 = &type metadata for NXDiscoveryConfiguration;
    v35 = (uint64_t (*)())sub_22DE9FA40();
    LOBYTE(aBlock[0]) = v22;
    LOBYTE(v37) = 1;
    NXKey.rawValue.getter();
    sub_22DEFA4C4();
    sub_22DE8D808(&qword_255DC64B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB410], MEMORY[0x24BDCB3C8]);
    v37 = default argument 2 of OS_xpc_object.setObject<A>(_:key:encoder:)();
    OS_xpc_object.setObject<A>(_:key:encoder:)(aBlock);
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    type metadata accessor for NXDiscoveryClient();
    swift_retain();
    sub_22DEFA650();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 0, 1, v23);
    swift_beginAccess();
    sub_22DE92048((uint64_t)v9, v20, &qword_255DC64A8, &qword_255DC64C0, &qword_255DC6648);
    swift_endAccess();
    v24 = sub_22DE9223C();
    v25 = swift_allocObject();
    swift_weakInit();
    v26 = (_QWORD *)swift_allocObject();
    v27 = v31;
    v28 = v32;
    v26[2] = v25;
    v26[3] = v27;
    v26[4] = v28;
    v35 = sub_22DEA6388;
    v36 = v26;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    v34 = (ValueMetadata *)&block_descriptor_54;
    v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v24, empty, v30[0], v29);
    _Block_release(v29);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DE9425C(uint64_t a1, char a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v18;
  void *v19;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v9 = sub_22DEFA914();
  v20[0] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DEFA92C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 24);
  if ((a2 & 1) != 0)
    return sub_22DE9448C(v16, a3, a4);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v4;
  v18[3] = v16;
  v18[4] = a3;
  v18[5] = a4;
  aBlock[4] = sub_22DE9FA90;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = &block_descriptor_60;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_22DEFA920();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE91728((unint64_t *)&qword_255DC6490, &qword_255DC61E8);
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v15, v11, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v20[0] + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_22DE9448C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  xpc_object_t empty;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _xpc_connection_s *v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DEFA938();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (_QWORD *)((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v4 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  v17 = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    swift_beginAccess();
    v19 = *(_QWORD *)(v4 + 88);
    if (*(_QWORD *)(v19 + 16) && (v20 = sub_22DE9F9F8(a1), (v21 & 1) != 0))
    {
      v22 = v20;
      v23 = *(_QWORD *)(v19 + 56);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
      v25 = *(_QWORD *)(v24 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v10, v23 + *(_QWORD *)(v25 + 72) * v22, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v24);
    }
    else
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
    }
    swift_endAccess();
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v10, 1, v27);
    sub_22DE8731C((uint64_t)v10, &qword_255DC64A8);
    if (v28 == 1)
    {
      return a2(0);
    }
    else
    {
      empty = xpc_dictionary_create_empty();
      LOBYTE(aBlock[0]) = 18;
      NXKey.rawValue.getter();
      LOBYTE(aBlock[0]) = 16;
      NXRequestType.rawValue.getter();
      v30 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v31 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_string(empty, (const char *)(v30 + 32), (const char *)(v31 + 32));
      swift_release();
      swift_release();
      LOBYTE(aBlock[0]) = 0;
      NXKey.rawValue.getter();
      v32 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_uint64(empty, (const char *)(v32 + 32), a1);
      swift_release();
      v33 = sub_22DE9223C();
      v34 = swift_allocObject();
      swift_weakInit();
      v35 = (_QWORD *)swift_allocObject();
      v35[2] = v34;
      v35[3] = a2;
      v35[4] = a3;
      v35[5] = a1;
      aBlock[4] = sub_22DE9FAA4;
      aBlock[5] = v35;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22DE92608;
      aBlock[3] = &block_descriptor_67;
      v36 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      xpc_connection_send_message_with_reply(v33, empty, v16, v36);
      _Block_release(v36);
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22DE94824(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_beginAccess();
    sub_22DE92048((uint64_t)v9, a5, &qword_255DC64A8, &qword_255DC64C0, &qword_255DC6648);
    swift_endAccess();
    v11 = (id)CUXPCDecodeNSErrorIfNeeded();
    if (v11)
    {
      v12 = v11;
      v16[0] = 1;
      type metadata accessor for NXError();
      v13 = v12;
      v14 = NXError.__allocating_init(_:_:_:)((uint64_t)v16, 0x69616620706F7453, 0xEB0000000064656CLL, v12);
      a3();

    }
    else
    {
      a3();
    }
    sub_22DE91768();
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    v16[0] = 1;
    v15 = NXError.__allocating_init(_:_:_:)((uint64_t)v16, 0xD000000000000016, 0x800000022DF02A80, 0);
    a3();

  }
}

uint64_t sub_22DE94A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  char *v59;
  int64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6630);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v52 - v10);
  v12 = (uint64_t *)(v0 + 88);
  swift_beginAccess();
  v61 = v0;
  v13 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v13 + 64);
  v56 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v67 = v16 & v14;
  v17 = (unint64_t)(v15 + 63) >> 6;
  v53 = v17 - 1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v60 = v17;
  v54 = v17 - 5;
  v63 = result;
  v55 = result + 104;
  *(_QWORD *)&v20 = 136315138;
  v58 = v20;
  v57 = MEMORY[0x24BEE4AD8] + 8;
  v59 = v3;
  v62 = v9;
  v64 = v11;
  while (1)
  {
    if (v67)
    {
      v22 = __clz(__rbit64(v67));
      v67 &= v67 - 1;
      v65 = v19;
      v23 = v22 | (v19 << 6);
      goto LABEL_9;
    }
    v28 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v28 >= v60)
    {
      v30 = v19;
    }
    else
    {
      v29 = *(_QWORD *)(v56 + 8 * v28);
      if (v29)
        goto LABEL_13;
      v30 = v19 + 1;
      if ((uint64_t)(v19 + 2) < v60)
      {
        v29 = *(_QWORD *)(v56 + 8 * (v19 + 2));
        if (v29)
        {
          v28 = v19 + 2;
          goto LABEL_13;
        }
        v30 = v19 + 2;
        if ((uint64_t)(v19 + 3) < v60)
        {
          v29 = *(_QWORD *)(v56 + 8 * (v19 + 3));
          if (v29)
          {
            v28 = v19 + 3;
LABEL_13:
            v67 = (v29 - 1) & v29;
            v23 = __clz(__rbit64(v29)) + (v28 << 6);
            v65 = v28;
LABEL_9:
            v24 = *(_QWORD *)(v63 + 56);
            *v9 = *(_QWORD *)(*(_QWORD *)(v63 + 48) + 8 * v23);
            v25 = v68;
            v26 = v24 + *(_QWORD *)(v68 + 72) * v23;
            v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6638);
            (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)v9 + *(int *)(v27 + 48), v26, v4);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 0, 1, v27);
            goto LABEL_16;
          }
          v28 = v19 + 4;
          v30 = v19 + 3;
          if ((uint64_t)(v19 + 4) < v60)
          {
            v29 = *(_QWORD *)(v56 + 8 * v28);
            if (v29)
              goto LABEL_13;
            while (v54 != v19)
            {
              v29 = *(_QWORD *)(v55 + 8 * v19++);
              if (v29)
              {
                v28 = v19 + 4;
                goto LABEL_13;
              }
            }
            v30 = v53;
          }
        }
      }
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6638);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
    v67 = 0;
    v65 = v30;
LABEL_16:
    sub_22DEA4DD0((uint64_t)v9, (uint64_t)v11, &qword_255DC6630);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6638);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v11, 1, v32) == 1)
      return swift_release();
    v33 = *v11;
    v34 = (char *)v11 + *(int *)(v32 + 48);
    v35 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    v35(v66, v34, v4);
    v36 = sub_22DEFA644();
    if (v36)
    {
      v37 = (uint64_t *)v36;
      if (qword_255DCD880 != -1)
        swift_once();
      v38 = sub_22DEFA674();
      __swift_project_value_buffer(v38, (uint64_t)qword_255DCD888);
      swift_retain_n();
      v39 = sub_22DEFA65C();
      v40 = sub_22DEFABA8();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v69 = (uint64_t)v37;
        v70[0] = v42;
        *(_DWORD *)v41 = v58;
        type metadata accessor for NXDiscoveryClient();
        sub_22DE8D808(&qword_255DC6640, (uint64_t (*)(uint64_t))type metadata accessor for NXDiscoveryClient, (uint64_t)&protocol conformance descriptor for NXDiscoveryClient);
        v43 = sub_22DEFAE3C();
        *(_QWORD *)(v41 + 4) = sub_22DE8C348(v43, v44, v70);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v39, v40, "Discovery client restart: client=%s", (uint8_t *)v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v42, -1, -1);
        v45 = v41;
        v3 = v59;
        MEMORY[0x22E321E0C](v45, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v9 = v62;
      v21 = swift_retain();
      sub_22DEA4070(v21, v61, v37);
      swift_release_n();
      v11 = v64;
    }
    else
    {
      swift_beginAccess();
      v46 = sub_22DE9F9F8(v33);
      if ((v47 & 1) != 0)
      {
        v48 = v46;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v50 = *v12;
        v69 = *v12;
        *v12 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_22DEA3280(&qword_255DC64C0, &qword_255DC6648);
          v50 = v69;
        }
        v35(v3, (char *)(*(_QWORD *)(v50 + 56) + *(_QWORD *)(v68 + 72) * v48), v4);
        sub_22DEA142C(v48, v50, &qword_255DC64C0);
        *v12 = v50;
        swift_bridgeObjectRelease();
        v51 = 0;
      }
      else
      {
        v51 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v3, v51, 1, v4);
      sub_22DE8731C((uint64_t)v3, &qword_255DC64A8);
      swift_endAccess();
      v11 = v64;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v66, v4);
    v19 = v65;
  }
  __break(1u);
  return result;
}

void sub_22DE950AC(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  char v24;

  if (a1)
  {
    v2 = a1;
    if (qword_255DCD880 != -1)
      swift_once();
    v3 = sub_22DEFA674();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DCD888);
    swift_retain();
    v4 = a1;
    swift_retain();
    v5 = a1;
    v6 = sub_22DEFA65C();
    v7 = sub_22DEFAB9C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v23 = v9;
      *(_DWORD *)v8 = 136315394;
      sub_22DE8D808(&qword_255DC6640, (uint64_t (*)(uint64_t))type metadata accessor for NXDiscoveryClient, (uint64_t)&protocol conformance descriptor for NXDiscoveryClient);
      v10 = sub_22DEFAE3C();
      sub_22DE8C348(v10, v11, &v23);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      swift_getErrorValue();
      v12 = sub_22DEFAEC0();
      sub_22DE8C348(v12, v13, &v23);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, v6, v7, "### Discovery client restart failed: client=%s, error=%s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v9, -1, -1);
      MEMORY[0x22E321E0C](v8, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    type metadata accessor for NXError();
    LOBYTE(v23) = 10;
    v21 = a1;
    v22 = NXError.__allocating_init(_:_:_:)((uint64_t)&v23, 0, 0, a1);
    v23 = (uint64_t)v22;
    v24 = 1;
    sub_22DE87E64(&v23);

  }
  else
  {
    if (qword_255DCD880 != -1)
      swift_once();
    v14 = sub_22DEFA674();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DCD888);
    swift_retain_n();
    v15 = sub_22DEFA65C();
    v16 = sub_22DEFABA8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136315138;
      sub_22DE8D808(&qword_255DC6640, (uint64_t (*)(uint64_t))type metadata accessor for NXDiscoveryClient, (uint64_t)&protocol conformance descriptor for NXDiscoveryClient);
      v19 = sub_22DEFAE3C();
      sub_22DE8C348(v19, v20, &v23);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DE7A000, v15, v16, "Discovery client restarted: client=%s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v18, -1, -1);
      MEMORY[0x22E321E0C](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v23 = 1;
    v24 = 3;
    sub_22DE87E64(&v23);
  }
}

uint64_t sub_22DE95500()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22DE875A4(*v0);
  return v1;
}

uint64_t sub_22DE95530(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_22DE87604(*v2);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_22DE95564())()
{
  return nullsub_1;
}

uint64_t sub_22DE95574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  uint64_t v20;

  v11 = (uint64_t *)(v5 + 96);
  swift_beginAccess();
  v12 = *(_QWORD *)(v5 + 96);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v13 = sub_22DE83DDC(a1, a2);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    v15 = MEMORY[0x24BEE4B00];
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_22DEA19E4((uint64_t)sub_22DE9FAB0, v16, a3, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  v20 = *v11;
  *v11 = 0x8000000000000000;
  sub_22DEA1C2C(v15, a1, a2, v18, (uint64_t *)&unk_255DC6700);
  *v11 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_22DE95708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  void (*v19)(_QWORD *);
  uint64_t *v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  _QWORD v28[4];

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v25 = v4;
  while (v7)
  {
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v11 = v10 | (v9 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    v19 = sub_22DE9595C(v28, v16, v17);
    if (*v18)
    {
      v20 = v18;
      v21 = sub_22DE9F9F8(a2);
      if ((v22 & 1) != 0)
      {
        v23 = v21;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v27 = *v20;
        *v20 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_22DEA23FC();
        sub_22DEA0D60(v23, v27);
        *v20 = v27;
        swift_release();
        swift_bridgeObjectRelease();
        v4 = v25;
      }
    }
    ((void (*)(_QWORD *, _QWORD))v19)(v28, 0);
    swift_endAccess();
    result = swift_bridgeObjectRelease_n();
  }
  v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v12 >= v26)
    return swift_release();
  v13 = *(_QWORD *)(v4 + 8 * v12);
  ++v9;
  if (v13)
    goto LABEL_21;
  v9 = v12 + 1;
  if (v12 + 1 >= v26)
    return swift_release();
  v13 = *(_QWORD *)(v4 + 8 * v9);
  if (v13)
    goto LABEL_21;
  v9 = v12 + 2;
  if (v12 + 2 >= v26)
    return swift_release();
  v13 = *(_QWORD *)(v4 + 8 * v9);
  if (v13)
  {
LABEL_21:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_22;
  }
  v14 = v12 + 3;
  if (v14 >= v26)
    return swift_release();
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v26)
      return swift_release();
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_22DE9595C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_22DEA36D8(v6, a2, a3);
  return sub_22DE959C8;
}

void sub_22DE959C8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_22DE95A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  __int128 v24;
  xpc_object_t empty;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  xpc_object_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  _xpc_connection_s *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  _QWORD v58[3];
  int v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  xpc_object_t v69;
  __int128 v70;
  uint64_t (*v71)(uint64_t);
  void *v72;
  void (*v73)();
  _QWORD *v74;
  unsigned __int8 v75;
  __int128 aBlock;
  uint64_t (*v77)(uint64_t);
  void *v78;
  void (*v79)();
  _QWORD *v80;
  unsigned __int8 v81;
  uint64_t v82;

  v64 = a6;
  v65 = a7;
  v63 = a4;
  v62 = a3;
  v11 = sub_22DEFA938();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (_QWORD *)((char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = v7;
  v15 = *(void **)(v7 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    ObjectType = swift_getObjectType();
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
    if ((a5 & 1) != 0)
      goto LABEL_8;
    v20 = v82;
    swift_beginAccess();
    v21 = *(_QWORD *)(v20 + 112);
    if (*(_QWORD *)(v21 + 16) && (v22 = sub_22DE9F9F8(v19), (v23 & 1) != 0))
      sub_22DEA27E0(*(_QWORD *)(v21 + 56) + 16 * v22, (uint64_t)&v70);
    else
      v70 = xmmword_22DEFE510;
    swift_endAccess();
    v24 = v70;
    sub_22DE8731C((uint64_t)&v70, &qword_255DC64C8);
    if (v24 == __PAIR128__(1, 0))
    {
LABEL_8:
      v59 = a5;
      v60 = v19;
      v61 = v16;
      empty = xpc_dictionary_create_empty();
      LOBYTE(aBlock) = 18;
      NXKey.rawValue.getter();
      LOBYTE(aBlock) = 4;
      NXRequestType.rawValue.getter();
      v26 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v27 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v69 = empty;
      xpc_dictionary_set_string(empty, (const char *)(v26 + 32), (const char *)(v27 + 32));
      swift_release();
      swift_release();
      LOBYTE(aBlock) = 2;
      v58[1] = NXKey.rawValue.getter();
      v66 = v28;
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&aBlock, ObjectType, a2);
      v29 = aBlock;
      v58[2] = a1;
      v30 = (uint64_t)v77;
      v31 = (uint64_t)v78;
      v67 = ObjectType;
      v32 = (uint64_t)v79;
      v33 = (uint64_t)v80;
      v34 = v81;
      v70 = aBlock;
      v71 = v77;
      v72 = v78;
      v73 = v79;
      v74 = v80;
      v75 = v81;
      v35 = v68;
      NXEndpoint.xpcObjectRepresentation.getter();
      v68 = v35;
      if (v35)
      {
        sub_22DE809FC(v29, *((uint64_t *)&v29 + 1), v30, v31, v32, v33, v34);
        swift_bridgeObjectRelease();
      }
      else
      {
        v37 = v36;
        sub_22DE809FC(v29, *((uint64_t *)&v29 + 1), v30, v31, v32, v33, v34);
        v38 = sub_22DEFA9EC();
        swift_bridgeObjectRelease();
        v39 = v69;
        xpc_dictionary_set_value(v69, (const char *)(v38 + 32), v37);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(a2 + 16))(v67, a2);
        if (v40)
        {
          LOBYTE(aBlock) = 5;
          NXKey.rawValue.getter();
          v41 = sub_22DEFA9EC();
          swift_bridgeObjectRelease();
          v42 = sub_22DEFA9EC();
          swift_bridgeObjectRelease();
          xpc_dictionary_set_string(v39, (const char *)(v41 + 32), (const char *)(v42 + 32));
          swift_release();
          swift_release();
        }
        LOBYTE(aBlock) = 9;
        NXKey.rawValue.getter();
        v43 = sub_22DEFA9EC();
        swift_bridgeObjectRelease();
        v44 = v60;
        xpc_dictionary_set_uint64(v39, (const char *)(v43 + 32), v60);
        swift_release();
        LOBYTE(aBlock) = 10;
        NXKey.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(a2 + 56))(v67, a2);
        v45 = sub_22DEFA9EC();
        swift_bridgeObjectRelease();
        v46 = sub_22DEFA9EC();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_string(v39, (const char *)(v45 + 32), (const char *)(v46 + 32));
        swift_release();
        swift_release();
        LOBYTE(aBlock) = 12;
        NXKey.rawValue.getter();
        v47 = (void *)sub_22DEFA53C();
        v48 = sub_22DEFA9EC();
        swift_bridgeObjectRelease();
        xpc_dictionary_set_value(v39, (const char *)(v48 + 32), v47);
        swift_unknownObjectRelease();
        swift_release();
        v50 = v64;
        v49 = v65;
        v51 = v61;
        if ((v59 & 1) == 0)
        {
          swift_unknownObjectRetain();
          sub_22DED1B14(a2, (uint64_t)&v70);
          swift_beginAccess();
          sub_22DE91E14(&v70, v44);
          swift_endAccess();
        }
        *(_QWORD *)&aBlock = 0x8000000000000008;
        v52 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(a2 + 88))(&aBlock, v67, a2);
        v53 = (_xpc_connection_s *)sub_22DE9223C(v52);
        v54 = swift_allocObject();
        swift_weakInit();
        v55 = swift_allocObject();
        *(_QWORD *)(v55 + 24) = a2;
        swift_unknownObjectWeakInit();
        v56 = (_QWORD *)swift_allocObject();
        v56[2] = v55;
        v56[3] = v50;
        v56[4] = v49;
        v56[5] = v54;
        v56[6] = v44;
        v79 = sub_22DEA25FC;
        v80 = v56;
        *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v77 = sub_22DE92608;
        v78 = &block_descriptor_80;
        v57 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        xpc_connection_send_message_with_reply(v53, v69, v51, v57);
        _Block_release(v57);
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      type metadata accessor for NXError();
      LOBYTE(aBlock) = 7;
      NXError.__allocating_init(_:_:_:)((uint64_t)&aBlock, 0xD000000000000019, 0x800000022DF02640, 0);
      return swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DE960CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v16;
  xpc_object_t empty;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _xpc_connection_s *v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[2];
  dispatch_queue_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v28 = a5;
  v26[1] = a4;
  v9 = sub_22DEFA938();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v6 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v27 = v13;
  LOBYTE(v13) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    ObjectType = swift_getObjectType();
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock[0]) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock[0]) = 5;
    NXRequestType.rawValue.getter();
    v18 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v19 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v18 + 32), (const char *)(v19 + 32));
    swift_release();
    swift_release();
    LOBYTE(aBlock[0]) = 9;
    NXKey.rawValue.getter();
    v20 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v20 + 32), v16);
    swift_release();
    LOBYTE(aBlock[0]) = 12;
    NXKey.rawValue.getter();
    v21 = (void *)sub_22DEFA53C();
    v22 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(empty, (const char *)(v22 + 32), v21);
    swift_unknownObjectRelease();
    swift_release();
    v23 = sub_22DE9223C();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v28;
    *(_QWORD *)(v24 + 24) = a6;
    aBlock[4] = sub_22DE9FA3C;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    aBlock[3] = &block_descriptor_86;
    v25 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v23, empty, v27, v25);
    _Block_release(v25);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22DE963A0(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v6 = v5;
  v11 = sub_22DEFA914();
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_22DEFA92C();
  v14 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
  v19 = v18;
  if ((a3 & 1) != 0)
  {
    sub_22DE965EC(v18, a4, a5);
  }
  else
  {
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = v6;
    v20[3] = v19;
    v20[4] = a4;
    v20[5] = a5;
    aBlock[4] = sub_22DEA2888;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE87E38;
    aBlock[3] = &block_descriptor_92;
    v21 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_22DEFA920();
    v25 = MEMORY[0x24BEE4AF8];
    sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
    sub_22DE91728((unint64_t *)&qword_255DC6490, &qword_255DC61E8);
    sub_22DEFAC5C();
    MEMORY[0x22E321590](0, v16, v13, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
    swift_release();
  }
}

void sub_22DE965EC(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  NSObject *v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  xpc_object_t empty;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _xpc_connection_s *v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  void (*v37)();
  _QWORD *v38;
  char v39;
  __int128 v40;

  v4 = v3;
  v8 = sub_22DEFA938();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v4 + 16);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  v14 = sub_22DEFA944();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_8;
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(v4 + 112);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_22DE9F9F8(a1), (v17 & 1) != 0))
    sub_22DEA27E0(*(_QWORD *)(v15 + 56) + 16 * v16, (uint64_t)&v40);
  else
    v40 = xmmword_22DEFE510;
  swift_endAccess();
  v18 = v40;
  sub_22DE8731C((uint64_t)&v40, &qword_255DC64C8);
  if (v18 != __PAIR128__(1, 0))
  {
    v40 = xmmword_22DEFE510;
    swift_beginAccess();
    sub_22DE91E14(&v40, a1);
    swift_endAccess();
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock) = 6;
    NXRequestType.rawValue.getter();
    v25 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v26 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v25 + 32), (const char *)(v26 + 32));
    swift_release();
    swift_release();
    LOBYTE(aBlock) = 9;
    NXKey.rawValue.getter();
    v27 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v27 + 32), a1);
    swift_release();
    v28 = sub_22DE9223C();
    v29 = swift_allocObject();
    swift_weakInit();
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = a2;
    v30[3] = a3;
    v30[4] = v29;
    v30[5] = a1;
    v37 = sub_22DEA28EC;
    v38 = v30;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_22DE92608;
    v36 = &block_descriptor_99;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v28, empty, v13, v31);
    _Block_release(v31);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  if (qword_255DCD880 != -1)
    goto LABEL_13;
LABEL_8:
  v19 = sub_22DEFA674();
  __swift_project_value_buffer(v19, (uint64_t)qword_255DCD888);
  v20 = sub_22DEFA65C();
  v21 = sub_22DEFABA8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v22 = 134217984;
    aBlock = a1;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v20, v21, "Operation cancel ignored: operation not found, operationID=%llu", v22, 0xCu);
    MEMORY[0x22E321E0C](v22, -1, -1);
  }

  type metadata accessor for NXError();
  v39 = 2;
  aBlock = 0;
  v34 = 0xE000000000000000;
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  aBlock = 0xD000000000000021;
  v34 = 0x800000022DF02660;
  *(_QWORD *)&v40 = a1;
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  v23 = NXError.__allocating_init(_:_:_:)((uint64_t)&v39, aBlock, v34, 0);
  a2();

}

uint64_t sub_22DE96A80(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  _BYTE v19[40];
  uint64_t v20;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
  v9 = v8;
  v10 = (uint64_t *)(v2 + 120);
  swift_beginAccess();
  v11 = *(_QWORD *)(v2 + 120);
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v12 = sub_22DE83DDC(v7, v9);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    v14 = MEMORY[0x24BEE4B00];
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  v20 = v14;
  sub_22DE83EBC((uint64_t)a1, (uint64_t)v19);
  sub_22DE91F30((uint64_t)v19, a2);
  v15 = v20;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v10;
  *v10 = 0x8000000000000000;
  sub_22DEA1C2C(v15, v7, v9, isUniquelyReferenced_nonNull_native, &qword_255DC66F0);
  *v10 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_22DE96BF8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  char v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return result;
  v4 = (uint64_t *)(v2 + 120);
  v5 = result + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_22DE83EBC(v5, (uint64_t)v44);
    v6 = v45;
    v7 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
    v10 = v9;
    swift_beginAccess();
    v11 = *v4;
    if (!*(_QWORD *)(*v4 + 16))
      goto LABEL_4;
    swift_bridgeObjectRetain();
    v12 = sub_22DE83DDC(v8, v10);
    if ((v13 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
LABEL_4:
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    v5 += 40;
    if (!--v3)
      return swift_bridgeObjectRelease();
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = sub_22DE9F9F8(a2);
  if ((v16 & 1) != 0)
  {
    v17 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22DEA2D28();
    sub_22DEA2EEC((__int128 *)(*(_QWORD *)(v14 + 56) + 40 * v17), (uint64_t)v42);
    sub_22DEA1284(v17, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = 0;
    memset(v42, 0, sizeof(v42));
  }
  sub_22DE8731C((uint64_t)v42, &qword_255DC64D0);
  if (!*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v29 = sub_22DE83DDC(v8, v10);
    v31 = v30;
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v33 = *v4;
      v41 = *v4;
      *v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22DEA2B7C(&qword_255DC66F0);
        v33 = v41;
      }
      swift_bridgeObjectRelease();
      sub_22DEA10B0(v29, v33);
      *v4 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_31;
  }
  swift_beginAccess();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v4;
  v40 = (_QWORD *)*v4;
  *v4 = 0x8000000000000000;
  v21 = sub_22DE83DDC(v8, v10);
  v22 = *(_QWORD *)(v19 + 16);
  v23 = (v20 & 1) == 0;
  v24 = v22 + v23;
  if (!__OFADD__(v22, v23))
  {
    v25 = v20;
    if (*(_QWORD *)(v19 + 24) >= v24)
    {
      if ((v18 & 1) != 0)
      {
        v28 = v40;
        if ((v20 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        sub_22DEA2B7C(&qword_255DC66F0);
        v28 = v40;
        if ((v25 & 1) == 0)
          goto LABEL_28;
      }
    }
    else
    {
      sub_22DEA00C4(v24, v18, &qword_255DC66F0);
      v26 = sub_22DE83DDC(v8, v10);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_36;
      v21 = v26;
      v28 = v40;
      if ((v25 & 1) == 0)
      {
LABEL_28:
        v28[(v21 >> 6) + 8] |= 1 << v21;
        v35 = (uint64_t *)(v28[6] + 16 * v21);
        *v35 = v8;
        v35[1] = v10;
        *(_QWORD *)(v28[7] + 8 * v21) = v14;
        v36 = v28[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_35;
        v28[2] = v38;
        swift_bridgeObjectRetain();
LABEL_30:
        *v4 = (uint64_t)v28;
        swift_bridgeObjectRelease();
LABEL_31:
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_5;
      }
    }
    v34 = v28[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 8 * v21) = v14;
    goto LABEL_30;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DE96FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  NSObject *v14;
  char v15;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  _xpc_connection_s *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  dispatch_queue_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[56];
  _OWORD v50[8];
  uint64_t v51;

  v51 = a5;
  v37 = a3;
  v38 = a4;
  v39 = a1;
  v9 = sub_22DEFA938();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (dispatch_queue_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = v6;
  v13 = *(void **)(v6 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  v15 = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    v35 = v14;
    empty = xpc_dictionary_create_empty();
    LOBYTE(v41) = 18;
    NXKey.rawValue.getter();
    LOBYTE(v41) = 11;
    NXRequestType.rawValue.getter();
    v18 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v19 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v18 + 32), (const char *)(v19 + 32));
    swift_release();
    swift_release();
    LOBYTE(v41) = 0;
    NXKey.rawValue.getter();
    v20 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v20 + 32), a2);
    swift_release();
    LOBYTE(v41) = 16;
    NXKey.rawValue.getter();
    v21 = v51;
    (*(void (**)(uint64_t, uint64_t))(a6 + 56))(v51, a6);
    v22 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v23 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v22 + 32), (const char *)(v23 + 32));
    swift_release();
    swift_release();
    v42 = 0u;
    v43 = 0u;
    v41 = 0u;
    LOBYTE(v44) = -1;
    memset(v49, 0, 48);
    v49[48] = -1;
    NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v41, (uint64_t)v49, 0, 0, (uint64_t)v50);
    v45 = v50[4];
    v46 = v50[5];
    v47 = v50[6];
    v48 = v50[7];
    v41 = v50[0];
    v42 = v50[1];
    v43 = v50[2];
    v44 = v50[3];
    v24 = v40;
    v25 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(a6 + 72))(&v41, v21, a6);
    if (v24)
    {
      sub_22DE80B6C((uint64_t)v50);
    }
    else
    {
      v27 = v25;
      v28 = v26;
      sub_22DE80B6C((uint64_t)v50);
      v29 = (void *)sub_22DEFA53C();
      sub_22DEA2F04(v27, v28);
      LOBYTE(v41) = 15;
      NXKey.rawValue.getter();
      v30 = sub_22DEFA9EC();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_value(empty, (const char *)(v30 + 32), v29);
      swift_unknownObjectRelease();
      swift_release();
      v31 = sub_22DE9223C();
      v32 = (_QWORD *)swift_allocObject();
      v32[2] = v21;
      v32[3] = a6;
      v33 = v38;
      v32[4] = v37;
      v32[5] = v33;
      *(_QWORD *)&v43 = sub_22DEA2F6C;
      *((_QWORD *)&v43 + 1) = v32;
      *(_QWORD *)&v41 = MEMORY[0x24BDAC760];
      *((_QWORD *)&v41 + 1) = 1107296256;
      *(_QWORD *)&v42 = sub_22DE92608;
      *((_QWORD *)&v42 + 1) = &block_descriptor_105;
      v34 = _Block_copy(&v41);
      swift_retain();
      swift_release();
      xpc_connection_send_message_with_reply(v31, empty, v35, v34);
      _Block_release(v34);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DE973D8(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *);
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[56];
  _OWORD v46[9];

  v36 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v9 = sub_22DEFAF08();
  v10 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  v35 = v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v29 - v12);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v29 - v15;
  v17 = (id)CUXPCDecodeNSErrorIfNeeded();
  if (v17)
  {
    v18 = v17;
    swift_willThrow();
  }
  else
  {
    v30 = v16;
    v31 = a5;
    v32 = a4;
    v33 = a3;
    v29 = v14;
    swift_getObjectType();
    LOBYTE(v46[0]) = 19;
    NXKey.rawValue.getter();
    v19 = OS_xpc_object.data(_:)();
    v21 = v20;
    swift_bridgeObjectRelease();
    if (v21 >> 60 != 15)
    {
      v38 = 0u;
      v39 = 0u;
      v37 = 0u;
      LOBYTE(v40) = -1;
      memset(v45, 0, 48);
      v45[48] = -1;
      NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v37, (uint64_t)v45, 0, 0, (uint64_t)v46);
      v41 = v46[4];
      v42 = v46[5];
      v43 = v46[6];
      v44 = v46[7];
      v37 = v46[0];
      v38 = v46[1];
      v39 = v46[2];
      v40 = v46[3];
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v23 = v30;
      (*(void (**)(uint64_t, unint64_t, __int128 *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v19, v21, &v37, AssociatedTypeWitness, AssociatedConformanceWitness);
      sub_22DE80B6C((uint64_t)v46);
      v26 = v29;
      (*(void (**)(_QWORD *, char *, uint64_t))(v29 + 16))(v13, v23, AssociatedTypeWitness);
      v27 = v34;
      swift_storeEnumTagMultiPayload();
      v36(v13);
      sub_22DEA326C(v19, v21);
      (*(void (**)(_QWORD *, uint64_t))(v35 + 8))(v13, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v23, AssociatedTypeWitness);
    }
    type metadata accessor for NXError();
    LOBYTE(v46[0]) = 1;
    v18 = NXError.__allocating_init(_:_:_:)((uint64_t)v46, 0xD00000000000001ELL, 0x800000022DF029B0, 0);
    swift_willThrow();
  }
  *v13 = v18;
  v24 = v34;
  swift_storeEnumTagMultiPayload();
  v25 = v18;
  v36(v13);

  return (*(uint64_t (**)(_QWORD *, uint64_t))(v35 + 8))(v13, v24);
}

uint64_t sub_22DE9770C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  NSObject *v15;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  xpc_object_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  xpc_object_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  uint64_t v51;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  xpc_object_t v56;
  uint64_t v57;
  uint64_t v58;
  _xpc_connection_s *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  xpc_object_t v66;
  uint64_t v67;
  char *v68;
  dispatch_queue_t v69;
  uint64_t v70;
  xpc_object_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  __int128 v76;
  _QWORD aBlock[3];
  ValueMetadata *v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64D8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DEFA938();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v3 + 16);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
    goto LABEL_35;
  v72 = a2;
  v68 = v9;
  v69 = v15;
  v75 = v3;
  empty = xpc_dictionary_create_empty();
  LOBYTE(aBlock[0]) = 18;
  NXKey.rawValue.getter();
  LOBYTE(aBlock[0]) = 12;
  NXRequestType.rawValue.getter();
  v18 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  v19 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_string(empty, (const char *)(v18 + 32), (const char *)(v19 + 32));
  swift_release();
  swift_release();
  LOBYTE(aBlock[0]) = 0;
  NXKey.rawValue.getter();
  v20 = *(_QWORD *)(a1 + 24);
  v21 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_uint64(empty, (const char *)(v21 + 32), v20);
  swift_release();
  v22 = *(_BYTE *)(a1 + 73);
  LOBYTE(aBlock[0]) = v22;
  LOBYTE(v81) = 0;
  sub_22DEA2F78();
  if ((sub_22DEFA9C8() & 1) != 0)
  {
    v65 = 0;
  }
  else
  {
    swift_getObjectType();
    v78 = &type metadata for NXServerMode;
    v79 = sub_22DEA2FBC();
    LOBYTE(aBlock[0]) = v22;
    LOBYTE(v81) = 7;
    NXKey.rawValue.getter();
    sub_22DEFA4C4();
    sub_22DE8D808(&qword_255DC64B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB410], MEMORY[0x24BDCB3C8]);
    v81 = default argument 2 of OS_xpc_object.setObject<A>(_:key:encoder:)();
    OS_xpc_object.setObject<A>(_:key:encoder:)(aBlock);
    v65 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }
  v67 = a3;
  if (*(_QWORD *)(a1 + 64))
  {
    LOBYTE(aBlock[0]) = 5;
    NXKey.rawValue.getter();
    v23 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v24 = sub_22DEFA9EC();
    xpc_dictionary_set_string(empty, (const char *)(v23 + 32), (const char *)(v24 + 32));
    swift_release();
    swift_release();
  }
  v25 = xpc_array_create_empty();
  v26 = *(_QWORD *)(a1 + 88);
  v27 = *(_QWORD *)(v26 + 16);
  v70 = a1;
  v71 = empty;
  if (v27)
  {
    v28 = v26 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22DE83EBC(v28, (uint64_t)aBlock);
      v29 = sub_22DEFA698();
      v30 = v78;
      v31 = v79;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v78);
      (*(void (**)(ValueMetadata *, unint64_t))(v31 + 40))(v30, v31);
      v32 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_array_set_string(v25, v29, (const char *)(v32 + 32));
      swift_release();
      sub_22DE96A80(aBlock, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      v28 += 40;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    a1 = v70;
    empty = v71;
  }
  LOBYTE(aBlock[0]) = 17;
  NXKey.rawValue.getter();
  v33 = sub_22DEFA9EC();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_value(empty, (const char *)(v33 + 32), v25);
  v66 = v25;
  swift_unknownObjectRelease();
  swift_release();
  v34 = xpc_array_create_empty();
  v35 = *(_QWORD *)(a1 + 80);
  v36 = *(_QWORD *)(v35 + 64);
  v73 = v35 + 64;
  v37 = 1 << *(_BYTE *)(v35 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v36;
  v74 = (unint64_t)(v37 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v40 = 0;
  v41 = v20;
  while (1)
  {
    if (v39)
    {
      v42 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      v43 = v42 | (v40 << 6);
      goto LABEL_15;
    }
    if (__OFADD__(v40++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v40 >= v74)
      goto LABEL_32;
    v53 = *(_QWORD *)(v73 + 8 * v40);
    if (!v53)
      break;
LABEL_27:
    v39 = (v53 - 1) & v53;
    v43 = __clz(__rbit64(v53)) + (v40 << 6);
LABEL_15:
    v44 = 16 * v43;
    v45 = *(_QWORD *)(v35 + 56);
    v46 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v43);
    v47 = *v46;
    v48 = v46[1];
    v49 = swift_allocObject();
    v76 = *(_OWORD *)(v45 + v44);
    *(_OWORD *)(v49 + 16) = v76;
    swift_bridgeObjectRetain();
    swift_retain();
    v50 = sub_22DEFA698();
    v51 = sub_22DEFA9EC();
    xpc_array_set_string(v34, v50, (const char *)(v51 + 32));
    swift_release();
    v20 = v41;
    sub_22DE95574(v47, v48, v41, (uint64_t)sub_22DEA3024, v49);
    swift_bridgeObjectRelease();
    result = swift_release();
  }
  v54 = v40 + 1;
  if (v40 + 1 >= v74)
    goto LABEL_32;
  v53 = *(_QWORD *)(v73 + 8 * v54);
  if (v53)
    goto LABEL_26;
  v54 = v40 + 2;
  if (v40 + 2 >= v74)
    goto LABEL_32;
  v53 = *(_QWORD *)(v73 + 8 * v54);
  if (v53)
    goto LABEL_26;
  v54 = v40 + 3;
  if (v40 + 3 >= v74)
  {
LABEL_32:
    swift_release();
    LOBYTE(aBlock[0]) = 11;
    NXKey.rawValue.getter();
    v55 = sub_22DEFA9EC();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v56 = v71;
    xpc_dictionary_set_value(v71, (const char *)(v55 + 32), v34);
    swift_unknownObjectRelease();
    swift_release();
    type metadata accessor for NXServer();
    swift_retain();
    v57 = (uint64_t)v68;
    sub_22DEFA650();
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 0, 1, v58);
    swift_beginAccess();
    sub_22DE92048(v57, v20, &qword_255DC64D8, &qword_255DC64F0, &qword_255DC6628);
    swift_endAccess();
    v59 = sub_22DE9223C();
    v60 = swift_allocObject();
    swift_weakInit();
    v61 = (_QWORD *)swift_allocObject();
    v62 = v72;
    v61[2] = v60;
    v61[3] = v62;
    v61[4] = v67;
    v79 = (unint64_t)sub_22DEA3040;
    v80 = v61;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    v78 = (ValueMetadata *)&block_descriptor_115;
    v63 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v59, v56, v69, v63);
    _Block_release(v63);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  v53 = *(_QWORD *)(v73 + 8 * v54);
  if (v53)
  {
LABEL_26:
    v40 = v54;
    goto LABEL_27;
  }
  while (1)
  {
    v40 = v54 + 1;
    if (__OFADD__(v54, 1))
      break;
    if (v40 >= v74)
      goto LABEL_32;
    v53 = *(_QWORD *)(v73 + 8 * v40);
    ++v54;
    if (v53)
      goto LABEL_27;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void sub_22DE97F54(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v4 = (id)CUXPCDecodeNSErrorIfNeeded();
    if (v4)
    {
      v5 = v4;
      v6 = v4;
      ((void (*)(id))a3)(v5);

      sub_22DE91768();
    }
    else
    {
      a3();
    }
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    v8 = 1;
    v7 = NXError.__allocating_init(_:_:_:)((uint64_t)&v8, 0xD000000000000016, 0x800000022DF02A80, 0);
    a3();

  }
}

uint64_t sub_22DE98050(_QWORD *a1, char a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v9 = sub_22DEFA914();
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DEFA92C();
  v24 = *(_QWORD *)(v12 - 8);
  v25 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[10];
  v17 = a1[11];
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v4;
  v18[3] = v15;
  v18[4] = v17;
  v18[5] = v16;
  v18[6] = a3;
  v18[7] = a4;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_22DE98300(v15, v17, v16, a3, a4);
  }
  else
  {
    v23 = *(_QWORD *)(v4 + 16);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_22DEA3098;
    *(_QWORD *)(v20 + 24) = v18;
    aBlock[4] = sub_22DEA6384;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE87E38;
    aBlock[3] = &block_descriptor_124;
    v21 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22DEFA920();
    v28 = MEMORY[0x24BEE4AF8];
    sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
    sub_22DE91728((unint64_t *)&qword_255DC6490, &qword_255DC61E8);
    v22 = v27;
    sub_22DEFAC5C();
    MEMORY[0x22E321590](0, v14, v11, v21);
    _Block_release(v21);
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v22);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v25);
  }
  return swift_release();
}

uint64_t sub_22DE98300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  xpc_object_t empty;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _xpc_connection_s *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v37)(_QWORD);
  void *v38;
  dispatch_queue_t v39;
  uint64_t (*v40)(_QWORD);
  _QWORD aBlock[6];

  v6 = v5;
  v40 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64D8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22DEFA938();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (dispatch_queue_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v6 + 16);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v39 = v18;
  LOBYTE(v18) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    sub_22DE96BF8(a2, a1);
    sub_22DE95708(a3, a1);
    swift_beginAccess();
    v20 = *(_QWORD *)(v6 + 128);
    if (*(_QWORD *)(v20 + 16) && (v21 = sub_22DE9F9F8(a1), (v22 & 1) != 0))
    {
      v23 = v21;
      v24 = *(_QWORD *)(v20 + 56);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
      v26 = *(_QWORD *)(v25 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v13, v24 + *(_QWORD *)(v26 + 72) * v23, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v13, 0, 1, v25);
    }
    else
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 1, 1, v27);
    }
    swift_endAccess();
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v13, 1, v28);
    sub_22DE8731C((uint64_t)v13, &qword_255DC64D8);
    if (v29 == 1)
    {
      return v40(0);
    }
    else
    {
      empty = xpc_dictionary_create_empty();
      LOBYTE(aBlock[0]) = 18;
      NXKey.rawValue.getter();
      LOBYTE(aBlock[0]) = 13;
      NXRequestType.rawValue.getter();
      v31 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v32 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_string(empty, (const char *)(v31 + 32), (const char *)(v32 + 32));
      swift_release();
      swift_release();
      LOBYTE(aBlock[0]) = 0;
      NXKey.rawValue.getter();
      v33 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_uint64(empty, (const char *)(v33 + 32), a1);
      swift_release();
      v34 = sub_22DE9223C();
      v35 = swift_allocObject();
      swift_weakInit();
      v36 = (_QWORD *)swift_allocObject();
      v37 = v40;
      v36[2] = v35;
      v36[3] = v37;
      v36[4] = a5;
      v36[5] = a1;
      aBlock[4] = sub_22DEA30CC;
      aBlock[5] = v36;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22DE92608;
      aBlock[3] = &block_descriptor_131;
      v38 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      xpc_connection_send_message_with_reply(v34, empty, v39, v38);
      _Block_release(v38);
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22DE986C4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64D8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_beginAccess();
    sub_22DE92048((uint64_t)v9, a5, &qword_255DC64D8, &qword_255DC64F0, &qword_255DC6628);
    swift_endAccess();
    v11 = (id)CUXPCDecodeNSErrorIfNeeded();
    if (v11)
    {
      v12 = v11;
      v16[0] = 1;
      type metadata accessor for NXError();
      v13 = v12;
      v14 = NXError.__allocating_init(_:_:_:)((uint64_t)v16, 0x69616620706F7453, 0xEB0000000064656CLL, v12);
      a3();

    }
    else
    {
      a3();
    }
    sub_22DE91768();
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    v16[0] = 1;
    v15 = NXError.__allocating_init(_:_:_:)((uint64_t)v16, 0xD000000000000016, 0x800000022DF02A80, 0);
    a3();

  }
}

uint64_t sub_22DE988C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  char *v59;
  int64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64D8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6610);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v52 - v10);
  v12 = (uint64_t *)(v0 + 128);
  swift_beginAccess();
  v61 = v0;
  v13 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v13 + 64);
  v56 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v67 = v16 & v14;
  v17 = (unint64_t)(v15 + 63) >> 6;
  v53 = v17 - 1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v60 = v17;
  v54 = v17 - 5;
  v63 = result;
  v55 = result + 104;
  *(_QWORD *)&v20 = 136315138;
  v58 = v20;
  v57 = MEMORY[0x24BEE4AD8] + 8;
  v59 = v3;
  v62 = v9;
  v64 = v11;
  while (1)
  {
    if (v67)
    {
      v22 = __clz(__rbit64(v67));
      v67 &= v67 - 1;
      v65 = v19;
      v23 = v22 | (v19 << 6);
      goto LABEL_9;
    }
    v28 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v28 >= v60)
    {
      v30 = v19;
    }
    else
    {
      v29 = *(_QWORD *)(v56 + 8 * v28);
      if (v29)
        goto LABEL_13;
      v30 = v19 + 1;
      if ((uint64_t)(v19 + 2) < v60)
      {
        v29 = *(_QWORD *)(v56 + 8 * (v19 + 2));
        if (v29)
        {
          v28 = v19 + 2;
          goto LABEL_13;
        }
        v30 = v19 + 2;
        if ((uint64_t)(v19 + 3) < v60)
        {
          v29 = *(_QWORD *)(v56 + 8 * (v19 + 3));
          if (v29)
          {
            v28 = v19 + 3;
LABEL_13:
            v67 = (v29 - 1) & v29;
            v23 = __clz(__rbit64(v29)) + (v28 << 6);
            v65 = v28;
LABEL_9:
            v24 = *(_QWORD *)(v63 + 56);
            *v9 = *(_QWORD *)(*(_QWORD *)(v63 + 48) + 8 * v23);
            v25 = v68;
            v26 = v24 + *(_QWORD *)(v68 + 72) * v23;
            v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6618);
            (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)v9 + *(int *)(v27 + 48), v26, v4);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 0, 1, v27);
            goto LABEL_16;
          }
          v28 = v19 + 4;
          v30 = v19 + 3;
          if ((uint64_t)(v19 + 4) < v60)
          {
            v29 = *(_QWORD *)(v56 + 8 * v28);
            if (v29)
              goto LABEL_13;
            while (v54 != v19)
            {
              v29 = *(_QWORD *)(v55 + 8 * v19++);
              if (v29)
              {
                v28 = v19 + 4;
                goto LABEL_13;
              }
            }
            v30 = v53;
          }
        }
      }
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6618);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
    v67 = 0;
    v65 = v30;
LABEL_16:
    sub_22DEA4DD0((uint64_t)v9, (uint64_t)v11, &qword_255DC6610);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6618);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v11, 1, v32) == 1)
      return swift_release();
    v33 = *v11;
    v34 = (char *)v11 + *(int *)(v32 + 48);
    v35 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    v35(v66, v34, v4);
    v36 = sub_22DEFA644();
    if (v36)
    {
      v37 = (_QWORD *)v36;
      if (qword_255DCD880 != -1)
        swift_once();
      v38 = sub_22DEFA674();
      __swift_project_value_buffer(v38, (uint64_t)qword_255DCD888);
      swift_retain_n();
      v39 = sub_22DEFA65C();
      v40 = sub_22DEFABA8();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v69 = v37;
        v70[0] = v42;
        *(_DWORD *)v41 = v58;
        type metadata accessor for NXServer();
        sub_22DE8D808(&qword_255DC6620, (uint64_t (*)(uint64_t))type metadata accessor for NXServer, (uint64_t)&protocol conformance descriptor for NXServer);
        v43 = sub_22DEFAE3C();
        *(_QWORD *)(v41 + 4) = sub_22DE8C348(v43, v44, v70);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v39, v40, "Server restart: server=%s", (uint8_t *)v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v42, -1, -1);
        v45 = v41;
        v3 = v59;
        MEMORY[0x22E321E0C](v45, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v9 = v62;
      v21 = swift_retain();
      sub_22DEA44D0(v21, v61, v37);
      swift_release_n();
      v11 = v64;
    }
    else
    {
      swift_beginAccess();
      v46 = sub_22DE9F9F8(v33);
      if ((v47 & 1) != 0)
      {
        v48 = v46;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v50 = *v12;
        v69 = (_QWORD *)*v12;
        *v12 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_22DEA3280(&qword_255DC64F0, &qword_255DC6628);
          v50 = (uint64_t)v69;
        }
        v35(v3, (char *)(*(_QWORD *)(v50 + 56) + *(_QWORD *)(v68 + 72) * v48), v4);
        sub_22DEA142C(v48, v50, &qword_255DC64F0);
        *v12 = v50;
        swift_bridgeObjectRelease();
        v51 = 0;
      }
      else
      {
        v51 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v3, v51, 1, v4);
      sub_22DE8731C((uint64_t)v3, &qword_255DC64D8);
      swift_endAccess();
      v11 = v64;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v66, v4);
    v19 = v65;
  }
  __break(1u);
  return result;
}

void sub_22DE98F4C(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  __int128 v23;
  char v24;

  if (a1)
  {
    v2 = a1;
    if (qword_255DCD880 != -1)
      swift_once();
    v3 = sub_22DEFA674();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DCD888);
    swift_retain();
    v4 = a1;
    swift_retain();
    v5 = a1;
    v6 = sub_22DEFA65C();
    v7 = sub_22DEFAB9C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      *(_QWORD *)&v23 = v9;
      *(_DWORD *)v8 = 136315394;
      sub_22DE8D808(&qword_255DC6620, (uint64_t (*)(uint64_t))type metadata accessor for NXServer, (uint64_t)&protocol conformance descriptor for NXServer);
      v10 = sub_22DEFAE3C();
      sub_22DE8C348(v10, v11, (uint64_t *)&v23);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      swift_getErrorValue();
      v12 = sub_22DEFAEC0();
      sub_22DE8C348(v12, v13, (uint64_t *)&v23);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, v6, v7, "### Server restart failed: server=%s, error=%s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v9, -1, -1);
      MEMORY[0x22E321E0C](v8, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    type metadata accessor for NXError();
    LOBYTE(v23) = 10;
    v21 = a1;
    v22 = NXError.__allocating_init(_:_:_:)((uint64_t)&v23, 0, 0, a1);
    v23 = (unint64_t)v22;
    v24 = 32;
    sub_22DEA70B8((uint64_t *)&v23);

  }
  else
  {
    if (qword_255DCD880 != -1)
      swift_once();
    v14 = sub_22DEFA674();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DCD888);
    swift_retain_n();
    v15 = sub_22DEFA65C();
    v16 = sub_22DEFABA8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_QWORD *)&v23 = v18;
      *(_DWORD *)v17 = 136315138;
      sub_22DE8D808(&qword_255DC6620, (uint64_t (*)(uint64_t))type metadata accessor for NXServer, (uint64_t)&protocol conformance descriptor for NXServer);
      v19 = sub_22DEFAE3C();
      sub_22DE8C348(v19, v20, (uint64_t *)&v23);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DE7A000, v15, v16, "Server restarted: client=%s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v18, -1, -1);
      MEMORY[0x22E321E0C](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v23 = xmmword_22DEFE520;
    v24 = 0x80;
    sub_22DEA70B8((uint64_t *)&v23);
  }
}

uint64_t sub_22DE993A4()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_22DE993B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v3 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    swift_beginAccess();
    v6 = MEMORY[0x22E321ED8](v3 + 16);
    if (v6)
    {
      v7 = *(_QWORD *)(v5 + 64);
      if (v7)
        v8 = v6 == v7;
      else
        v8 = 0;
      if (v8)
        NXXPCClient._xpcReceivedEvent(_:)(a1);
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22DE9945C()
{
  return sub_22DEA2894((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_22DE928F0);
}

void NXXPCClient._xpcReceivedEvent(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  Swift::String v15;
  Swift::String_optional v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = MEMORY[0x22E322064]();
  if (v4 == sub_22DEFA6A4())
  {
    swift_getObjectType();
    LOBYTE(v25) = 18;
    v15._countAndFlagsBits = NXKey.rawValue.getter();
    v16 = OS_xpc_object.string(_:)(v15);
    swift_bridgeObjectRelease();
    if (v16.value._object)
    {
      swift_bridgeObjectRetain();
      NXRequestType.init(rawValue:)(v16.value);
      __asm { BR              X10 }
    }
    if (qword_255DCD880 != -1)
      swift_once();
    v21 = sub_22DEFA674();
    __swift_project_value_buffer(v21, (uint64_t)qword_255DCD888);
    v8 = sub_22DEFA65C();
    v22 = sub_22DEFAB9C();
    if (!os_log_type_enabled(v8, v22))
      goto LABEL_24;
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_22DE7A000, v8, v22, "### No request type", v23, 2u);
    v14 = v23;
LABEL_23:
    MEMORY[0x22E321E0C](v14, -1, -1);
LABEL_24:

    return;
  }
  swift_getObjectType();
  v5 = sub_22DEFA6BC();
  swift_unknownObjectRelease();
  if (v5 == a1)
  {
    if ((*(_BYTE *)(v2 + 40) & 1) == 0)
      NXXPCClient._xpcInterrupted()();
  }
  else
  {
    v6 = sub_22DEFA6B0();
    swift_unknownObjectRelease();
    if (v6 == a1)
    {
      if ((*(_BYTE *)(v2 + 40) & 1) == 0)
      {
        if (qword_255DCD880 != -1)
          swift_once();
        v17 = sub_22DEFA674();
        __swift_project_value_buffer(v17, (uint64_t)qword_255DCD888);
        v18 = sub_22DEFA65C();
        v19 = sub_22DEFAB9C();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_22DE7A000, v18, v19, "### Invalidated unexpectedly (sandbox?)", v20, 2u);
          MEMORY[0x22E321E0C](v20, -1, -1);
        }

      }
      *(_QWORD *)(v2 + 64) = 0;
      swift_unknownObjectRelease();
      sub_22DE91768();
    }
    else
    {
      if (qword_255DCD880 != -1)
        swift_once();
      v7 = sub_22DEFA674();
      __swift_project_value_buffer(v7, (uint64_t)qword_255DCD888);
      swift_unknownObjectRetain_n();
      v8 = sub_22DEFA65C();
      v9 = sub_22DEFAB9C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        v24 = v11;
        *(_DWORD *)v10 = 136315138;
        v12 = sub_22DEFAB78();
        v25 = sub_22DE8C348(v12, v13, &v24);
        sub_22DEFAC2C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v8, v9, "### XPC event error: error=%s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        v14 = v10;
        goto LABEL_23;
      }

      swift_unknownObjectRelease_n();
    }
  }
}

uint64_t sub_22DE99D1C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String_optional v18;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  void *v26;
  void *v27;
  _xpc_connection_s *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = sub_22DEFA674();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DCD880 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_255DCD888);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_unknownObjectRetain();
  v11 = a2;
  swift_unknownObjectRetain();
  v12 = a2;
  v13 = sub_22DEFA65C();
  v14 = sub_22DEFAB9C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v32 = v2;
    v16 = v15;
    v30 = swift_slowAlloc();
    v34 = v30;
    *(_DWORD *)v16 = 136315394;
    swift_getObjectType();
    v31 = v7;
    LOBYTE(v33) = 18;
    v17._countAndFlagsBits = NXKey.rawValue.getter();
    v18 = OS_xpc_object.string(_:)(v17);
    swift_bridgeObjectRelease();
    if (v18.value._object)
      countAndFlagsBits = v18.value._countAndFlagsBits;
    else
      countAndFlagsBits = 7104878;
    if (v18.value._object)
      object = v18.value._object;
    else
      object = (void *)0xE300000000000000;
    v33 = sub_22DE8C348(countAndFlagsBits, (unint64_t)object, &v34);
    sub_22DEFAC2C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_getErrorValue();
    v21 = sub_22DEFAEC0();
    v33 = sub_22DE8C348(v21, v22, &v34);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v13, v14, "### XPC error reply: requestType='%s', error=%s", (uint8_t *)v16, 0x16u);
    v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v23, -1, -1);
    v24 = v16;
    v3 = v32;
    MEMORY[0x22E321E0C](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v6);
  }
  else
  {
    swift_unknownObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  result = xpc_dictionary_expects_reply();
  if ((_DWORD)result)
  {
    result = (uint64_t)sub_22DEA5A94(a1);
    if (result)
    {
      v26 = (void *)result;
      v27 = (void *)sub_22DEFA524();
      CUXPCEncodeNSErrorStd(v26, v27);

      v28 = *(_xpc_connection_s **)(v3 + 64);
      if (v28)
        xpc_connection_send_message(v28, v26);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall NXXPCClient._xpcInterrupted()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  char v48[8];
  uint64_t v49;
  id v50;
  _QWORD v51[2];
  uint64_t v52;
  _QWORD v53[2];

  v1 = v0;
  if (qword_255DCD880 != -1)
LABEL_50:
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DCD888);
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFAB9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DE7A000, v3, v4, "### XPC interrupted", v5, 2u);
    MEMORY[0x22E321E0C](v5, -1, -1);
  }

  swift_beginAccess();
  v6 = *(void (**)(uint64_t))(v1 + 24);
  if (v6)
  {
    v7 = swift_retain();
    v6(v7);
    sub_22DE87604((uint64_t)v6);
  }
  sub_22DE9312C();
  sub_22DE94A20();
  sub_22DE988C0();
  v8 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  v9 = *(_QWORD *)(v1 + 112);
  v10 = *(_QWORD *)(v9 + 64);
  v43 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v14 = (unint64_t)(v11 + 63) >> 6;
  v39 = v14 - 1;
  v15 = 0;
  v45 = swift_bridgeObjectRetain();
  v44 = v14;
  v40 = v14 - 5;
  v41 = v1;
  v42 = (uint64_t *)(v1 + 112);
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v15 << 6);
LABEL_13:
      v19 = *(_QWORD *)(v45 + 56);
      v50 = *(id *)(*(_QWORD *)(v45 + 48) + 8 * v18);
      sub_22DEA27E0(v19 + 16 * v18, (uint64_t)v51);
      goto LABEL_23;
    }
    v20 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v20 < v44)
    {
      v21 = *(_QWORD *)(v43 + 8 * v20);
      if (v21)
        goto LABEL_17;
      if ((uint64_t)(v15 + 2) >= v44)
      {
        ++v15;
      }
      else
      {
        v21 = *(_QWORD *)(v43 + 8 * (v15 + 2));
        if (v21)
        {
          v20 = v15 + 2;
LABEL_17:
          v13 = (v21 - 1) & v21;
          v18 = __clz(__rbit64(v21)) + (v20 << 6);
          v15 = v20;
          goto LABEL_13;
        }
        if ((uint64_t)(v15 + 3) >= v44)
        {
          v15 += 2;
        }
        else
        {
          v21 = *(_QWORD *)(v43 + 8 * (v15 + 3));
          if (v21)
          {
            v20 = v15 + 3;
            goto LABEL_17;
          }
          v20 = v15 + 4;
          if ((uint64_t)(v15 + 4) >= v44)
          {
            v15 += 3;
          }
          else
          {
            v21 = *(_QWORD *)(v43 + 8 * v20);
            if (v21)
              goto LABEL_17;
            while (v40 != v15)
            {
              v21 = *(_QWORD *)(v45 + 104 + 8 * v15++);
              if (v21)
              {
                v20 = v15 + 4;
                goto LABEL_17;
              }
            }
            v15 = v39;
          }
        }
      }
    }
    v13 = 0;
    v50 = 0;
    v51[0] = 0;
    v51[1] = 1;
LABEL_23:
    sub_22DEA4DD0((uint64_t)&v50, (uint64_t)&v52, &qword_255DC6600);
    if (!v53[0] && v53[1] == 1)
      break;
    v23 = v52;
    sub_22DEA310C((uint64_t)v53, (uint64_t)v48);
    v24 = MEMORY[0x22E321ED8](v48);
    if (v24)
    {
      v25 = v24;
      v26 = v49;
      ObjectType = swift_getObjectType();
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 64))(ObjectType, v26) & 1) == 0
        || (v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(ObjectType, v26), v29 >> 60 == 15))
      {
        type metadata accessor for NXError();
        LOBYTE(v50) = 10;
        v16 = NXError.__allocating_init(_:_:_:)((uint64_t)&v50, 0xD000000000000023, 0x800000022DF027E0, 0);
        v50 = v16;
        LOBYTE(v51[0]) = 1;
        (*(void (**)(id *, uint64_t, uint64_t))(v26 + 72))(&v50, ObjectType, v26);

        sub_22DE91768();
        swift_unknownObjectRelease();
        goto LABEL_10;
      }
      v30 = v28;
      v31 = v29;
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v25;
      *(_QWORD *)(v32 + 24) = v26;
      v33 = swift_unknownObjectRetain();
      sub_22DE95A00(v33, v26, v30, v31, 1, (uint64_t)sub_22DEA31A0, v32);
      sub_22DEA3148((uint64_t)v48);
      swift_release();
      sub_22DEA326C(v30, v31);
      swift_unknownObjectRelease();
      v1 = v41;
      v8 = v42;
    }
    else
    {
      swift_beginAccess();
      v34 = sub_22DE9F9F8(v23);
      if ((v35 & 1) != 0)
      {
        v36 = v34;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v38 = *v8;
        v46 = *v8;
        *v8 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_22DEA29BC();
          v38 = v46;
        }
        sub_22DEA310C(*(_QWORD *)(v38 + 56) + 16 * v36, (uint64_t)&v47);
        sub_22DEA0EF4(v36, v38);
        *v8 = v38;
        swift_bridgeObjectRelease();
      }
      else
      {
        v47 = xmmword_22DEFE510;
      }
      sub_22DE8731C((uint64_t)&v47, &qword_255DC64C8);
      swift_endAccess();
LABEL_10:
      sub_22DEA3148((uint64_t)v48);
    }
  }
  swift_release();
}

void sub_22DE9A634(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  Swift::UInt64 v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  xpc_object_t v20;
  void *v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  Swift::UInt64 v35;
  void *v36;
  uint64_t v37;
  unsigned __int8 v38;
  int v39;
  char v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6498);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  LOBYTE(v36) = 0;
  v7._countAndFlagsBits = NXKey.rawValue.getter();
  v8 = OS_xpc_object.uint64(_:)(v7);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(v1 + 80);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_22DE9F9F8(v8), (v11 & 1) != 0))
  {
    v12 = v10;
    v13 = *(_QWORD *)(v9 + 56);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v6, v13 + *(_QWORD *)(v15 + 72) * v12, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17))
  {
    sub_22DE8731C((uint64_t)v6, &qword_255DC6498);
    swift_endAccess();
LABEL_7:
    type metadata accessor for NXError();
    v40 = 2;
    v36 = 0;
    v37 = 0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v36 = (void *)0xD00000000000001BLL;
    v37 = 0x800000022DF02840;
    v35 = v8;
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v40, (uint64_t)v36, v37, 0);
    swift_willThrow();
    return;
  }
  v18 = sub_22DEFA644();
  sub_22DE8731C((uint64_t)v6, &qword_255DC6498);
  swift_endAccess();
  if (!v18)
    goto LABEL_7;
  LOBYTE(v36) = 3;
  NXKey.rawValue.getter();
  v19 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  v20 = xpc_dictionary_get_dictionary(a1, (const char *)(v19 + 32));
  swift_release();
  if (v20)
  {
    swift_unknownObjectRetain();
    NXClientEvent.init(xpcObject:)((uint64_t)&v36);
    if (v2)
    {
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      v21 = v36;
      v22 = v37;
      v23 = v38;
      if (qword_255DCD880 != -1)
        swift_once();
      v24 = sub_22DEFA674();
      __swift_project_value_buffer(v24, (uint64_t)qword_255DCD888);
      sub_22DEA4E94(v21, v22, v23);
      sub_22DEA4E94(v21, v22, v23);
      v25 = sub_22DEFA65C();
      v26 = sub_22DEFABA8();
      v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        v28 = swift_slowAlloc();
        v39 = v27;
        v29 = v28;
        v34 = swift_slowAlloc();
        v35 = v34;
        *(_DWORD *)v29 = 134218242;
        v36 = (void *)v8;
        sub_22DEFAC2C();
        *(_WORD *)(v29 + 12) = 2080;
        v36 = v21;
        v37 = v22;
        v38 = v23;
        sub_22DEA4EDC();
        v33 = v25;
        v30 = sub_22DEFAE3C();
        v36 = (void *)sub_22DE8C348(v30, v31, (uint64_t *)&v35);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        sub_22DEA4EB8(v21, v22, v23);
        sub_22DEA4EB8(v21, v22, v23);
        v25 = v33;
        _os_log_impl(&dword_22DE7A000, v33, (os_log_type_t)v39, "Client event received: clientID=%llu, event=%s", (uint8_t *)v29, 0x16u);
        v32 = v34;
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v32, -1, -1);
        MEMORY[0x22E321E0C](v29, -1, -1);
      }
      else
      {
        sub_22DEA4EB8(v21, v22, v23);
        sub_22DEA4EB8(v21, v22, v23);
      }

      v36 = v21;
      v37 = v22;
      v38 = v23;
      sub_22DED68DC((uint64_t *)&v36);
      swift_release();
      swift_unknownObjectRelease();
      sub_22DEA4EB8(v21, v22, v23);
    }
  }
  else
  {
    LOBYTE(v36) = 2;
    type metadata accessor for NXError();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v36, 0x6E65696C63206F4ELL, 0xEF746E6576652074, 0);
    swift_willThrow();
    swift_release();
  }
}

void sub_22DE9AB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::String v6;
  Swift::UInt64 v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  unsigned __int8 v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::UInt64 v34;
  void *v35;
  uint64_t v36;
  char v37;

  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  LOBYTE(v35) = 0;
  v6._countAndFlagsBits = NXKey.rawValue.getter();
  v7 = OS_xpc_object.uint64(_:)(v6);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = *(_QWORD *)(v0 + 88);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_22DE9F9F8(v7), (v10 & 1) != 0))
  {
    v11 = v9;
    v12 = *(_QWORD *)(v8 + 56);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v5, v12 + *(_QWORD *)(v14 + 72) * v11, v13);
    v15 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
    v2 = v1;
    v15(v5, 0, 1, v13);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v5, 1, v17))
  {
    sub_22DE8731C((uint64_t)v5, &qword_255DC64A8);
    swift_endAccess();
LABEL_7:
    type metadata accessor for NXError();
    v37 = 2;
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v35 = (void *)0xD000000000000025;
    v36 = 0x800000022DF02860;
    v34 = v7;
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v37, (uint64_t)v35, v36, 0);
    swift_willThrow();
    return;
  }
  v18 = sub_22DEFA644();
  sub_22DE8731C((uint64_t)v5, &qword_255DC64A8);
  swift_endAccess();
  if (!v18)
    goto LABEL_7;
  v33 = v18;
  v31 = v7;
  LOBYTE(v34) = 4;
  NXKey.rawValue.getter();
  sub_22DEFA4A0();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB268];
  sub_22DEA4F20();
  sub_22DE8D808(&qword_255DC6680, v19, MEMORY[0x24BDCB230]);
  v32 = v2;
  v34 = default argument 1 of OS_xpc_object.object<A, B>(key:decoder:)();
  v20 = v32;
  OS_xpc_object.object<A, B>(key:decoder:)((uint64_t)&type metadata for NXDiscoveryEvent, (uint64_t)&v35);
  if (v20)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    v21 = v36;
    if (v36 == 255)
    {
      type metadata accessor for NXError();
      LOBYTE(v35) = 2;
      NXError.__allocating_init(_:_:_:)((uint64_t)&v35, 0xD000000000000012, 0x800000022DF02890, 0);
      swift_willThrow();
      swift_release();
    }
    else
    {
      v22 = v35;
      if (qword_255DCD880 != -1)
        swift_once();
      v23 = sub_22DEFA674();
      __swift_project_value_buffer(v23, (uint64_t)qword_255DCD888);
      sub_22DEA4F64(v22, v21);
      sub_22DE8D538(v22, v21);
      v24 = sub_22DEFA65C();
      v25 = sub_22DEFABA8();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        *(_DWORD *)v26 = 134218242;
        v34 = v27;
        v35 = (void *)v31;
        sub_22DEFAC2C();
        *(_WORD *)(v26 + 12) = 2080;
        v35 = v22;
        LOBYTE(v36) = v21;
        sub_22DEA4F8C();
        v28 = sub_22DEFAE3C();
        v35 = (void *)sub_22DE8C348(v28, v29, (uint64_t *)&v34);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        sub_22DEA4F78(v22, v21);
        sub_22DEA4F78(v22, v21);
        _os_log_impl(&dword_22DE7A000, v24, v25, "Discovery event received: clientID=%llu, event=%s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v27, -1, -1);
        MEMORY[0x22E321E0C](v26, -1, -1);
      }
      else
      {
        sub_22DEA4F78(v22, v21);
        sub_22DEA4F78(v22, v21);
      }

      v35 = v22;
      LOBYTE(v36) = v21;
      sub_22DE87E64((uint64_t *)&v35);
      swift_release();
      sub_22DEA4F78(v22, v21);
    }
  }
}

void sub_22DE9B124(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  Swift::UInt64 v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  xpc_object_t v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  Swift::UInt64 v35;
  void *v36;
  void *v37;
  unsigned __int8 v38;
  int v39;
  char v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  LOBYTE(v36) = 0;
  v7._countAndFlagsBits = NXKey.rawValue.getter();
  v8 = OS_xpc_object.uint64(_:)(v7);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(v1 + 128);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_22DE9F9F8(v8), (v11 & 1) != 0))
  {
    v12 = v10;
    v13 = *(_QWORD *)(v9 + 56);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v6, v13 + *(_QWORD *)(v15 + 72) * v12, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17))
  {
    sub_22DE8731C((uint64_t)v6, &qword_255DC64D8);
    swift_endAccess();
LABEL_7:
    type metadata accessor for NXError();
    v40 = 2;
    v36 = 0;
    v37 = (void *)0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v36 = (void *)0xD00000000000001BLL;
    v37 = (void *)0x800000022DF028B0;
    v35 = v8;
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v40, (uint64_t)v36, (uint64_t)v37, 0);
    swift_willThrow();
    return;
  }
  v18 = sub_22DEFA644();
  sub_22DE8731C((uint64_t)v6, &qword_255DC64D8);
  swift_endAccess();
  if (!v18)
    goto LABEL_7;
  LOBYTE(v36) = 3;
  NXKey.rawValue.getter();
  v19 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  v20 = xpc_dictionary_get_dictionary(a1, (const char *)(v19 + 32));
  swift_release();
  if (v20)
  {
    swift_unknownObjectRetain();
    NXServerEvent.init(xpcObject:)((uint64_t)&v36);
    if (v2)
    {
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      v21 = v36;
      v22 = v37;
      v23 = v38;
      if (qword_255DCD880 != -1)
        swift_once();
      v24 = sub_22DEFA674();
      __swift_project_value_buffer(v24, (uint64_t)qword_255DCD888);
      sub_22DEA4FD0(v21, v22, v23);
      sub_22DEA4FD0(v21, v22, v23);
      v25 = sub_22DEFA65C();
      v26 = sub_22DEFABA8();
      v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        v28 = swift_slowAlloc();
        v39 = v27;
        v29 = v28;
        v34 = swift_slowAlloc();
        v35 = v34;
        *(_DWORD *)v29 = 134218242;
        v36 = (void *)v8;
        sub_22DEFAC2C();
        *(_WORD *)(v29 + 12) = 2080;
        v36 = v21;
        v37 = v22;
        v38 = v23;
        sub_22DEA5040();
        v33 = v25;
        v30 = sub_22DEFAE3C();
        v36 = (void *)sub_22DE8C348(v30, v31, (uint64_t *)&v35);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        sub_22DEA5008(v21, v22, v23);
        sub_22DEA5008(v21, v22, v23);
        v25 = v33;
        _os_log_impl(&dword_22DE7A000, v33, (os_log_type_t)v39, "Server event received: clientID=%llu, event=%s", (uint8_t *)v29, 0x16u);
        v32 = v34;
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v32, -1, -1);
        MEMORY[0x22E321E0C](v29, -1, -1);
      }
      else
      {
        sub_22DEA5008(v21, v22, v23);
        sub_22DEA5008(v21, v22, v23);
      }

      v36 = v21;
      v37 = v22;
      v38 = v23;
      sub_22DEA70B8((uint64_t *)&v36);
      swift_release();
      swift_unknownObjectRelease();
      sub_22DEA5008(v21, v22, v23);
    }
  }
  else
  {
    LOBYTE(v36) = 2;
    type metadata accessor for NXError();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v36, 0x6576726573206F4ELL, 0xEF746E6576652072, 0);
    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_22DE9B674(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v5;
  Swift::String_optional v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String_optional *v27;
  void (*v28)(uint64_t, void *, uint64_t, unint64_t, __int128 *, uint64_t (*)(void *, unint64_t, char), Swift::String_optional *, uint64_t, uint64_t);
  uint64_t v29;
  __int128 v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[3];
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[64];
  __int128 v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v1;
  swift_getObjectType();
  LOBYTE(v49) = 16;
  v5._countAndFlagsBits = NXKey.rawValue.getter();
  v6 = OS_xpc_object.string(_:)(v5);
  swift_bridgeObjectRelease();
  if (!v6.value._object)
  {
    LOBYTE(v49) = 2;
    type metadata accessor for NXError();
    v10 = 0x656D614E7473;
    goto LABEL_5;
  }
  LOBYTE(v49) = 15;
  NXKey.rawValue.getter();
  v7 = OS_xpc_object.data(_:)();
  v9 = v8;
  swift_bridgeObjectRelease();
  if (v9 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    LOBYTE(v49) = 2;
    type metadata accessor for NXError();
    v10 = 0x617461447473;
LABEL_5:
    NXError.__allocating_init(_:_:_:)((uint64_t)&v49, 0x6575716572206F4ELL, v10 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000, 0);
    return swift_willThrow();
  }
  v57 = v7;
  swift_beginAccess();
  v12 = *(_QWORD *)(v3 + 120);
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_endAccess();
LABEL_14:
    type metadata accessor for NXError();
    LOBYTE(v39) = 13;
    *(_QWORD *)&v49 = 0;
    *((_QWORD *)&v49 + 1) = 0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v49 = 0xD000000000000020;
    *((_QWORD *)&v49 + 1) = 0x800000022DF028D0;
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v39, v49, *((uint64_t *)&v49 + 1), 0);
    swift_willThrow();
    return sub_22DEA326C(v57, v9);
  }
  swift_bridgeObjectRetain();
  v13 = sub_22DE83DDC(v6.value._countAndFlagsBits, (uint64_t)v6.value._object);
  if ((v14 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_22DE9DE8C(v15, &v49);
  swift_bridgeObjectRelease();
  if (!(_QWORD)v51)
  {
    sub_22DE8731C((uint64_t)&v49, &qword_255DC6698);
    goto LABEL_14;
  }
  sub_22DEA2EEC((__int128 *)((char *)&v49 + 8), (uint64_t)&v39);
  sub_22DEA2EEC(&v39, (uint64_t)v54);
  LOBYTE(v49) = 6;
  NXKey.rawValue.getter();
  v16 = OS_xpc_object.data(_:)();
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v18 >> 60 == 15)
  {
    v40 = 0u;
    v41 = 0u;
    v39 = 0u;
    LOBYTE(v42) = -1;
    memset(v47, 0, sizeof(v47));
    v48 = -1;
    NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v39, (uint64_t)v47, 0, 0, (uint64_t)&v49);
    v36 = v50;
    v37 = v49;
    v19 = v52[0];
    v34 = *(_OWORD *)&v52[8];
    v35 = v51;
    v32 = *(_OWORD *)&v52[40];
    v33 = *(_OWORD *)&v52[24];
    v31 = v52[56];
    v30 = v53;
LABEL_18:
    v38 = v19;
    if (qword_255DCD880 != -1)
      swift_once();
    v20 = sub_22DEFA674();
    __swift_project_value_buffer(v20, (uint64_t)qword_255DCD888);
    swift_bridgeObjectRetain();
    v21 = v57;
    sub_22DEA5084(v57, v9);
    swift_bridgeObjectRetain();
    sub_22DEA5084(v21, v9);
    v22 = sub_22DEFA65C();
    LOBYTE(v21) = sub_22DEFAB84();
    if (os_log_type_enabled(v22, (os_log_type_t)v21))
    {
      v23 = swift_slowAlloc();
      *(_QWORD *)&v49 = swift_slowAlloc();
      *(_DWORD *)v23 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v39 = sub_22DE8C348(v6.value._countAndFlagsBits, (unint64_t)v6.value._object, (uint64_t *)&v49);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2048;
      __asm { BR              X10 }
    }
    v24 = v57;
    sub_22DEA326C(v57, v9);
    swift_bridgeObjectRelease_n();
    sub_22DEA326C(v24, v9);

    v25 = v56;
    v29 = v55;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    v49 = v37;
    v50 = v36;
    v51 = v35;
    v52[0] = v38;
    *(_OWORD *)&v52[8] = v34;
    *(_OWORD *)&v52[24] = v33;
    *(_OWORD *)&v52[40] = v32;
    v52[56] = v31;
    v53 = v30;
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = (Swift::String_optional *)swift_allocObject();
    v27[1].value._countAndFlagsBits = v26;
    v27[1].value._object = a1;
    v27[2] = v6;
    v28 = *(void (**)(uint64_t, void *, uint64_t, unint64_t, __int128 *, uint64_t (*)(void *, unint64_t, char), Swift::String_optional *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    v28(v6.value._countAndFlagsBits, v6.value._object, v57, v9, &v49, sub_22DEA513C, v27, v29, v25);
    v43 = *(_OWORD *)&v52[16];
    v44 = *(_OWORD *)&v52[32];
    v45 = *(_OWORD *)&v52[48];
    v46 = v53;
    v39 = v49;
    v40 = v50;
    v41 = v51;
    v42 = *(_OWORD *)v52;
    sub_22DE80B6C((uint64_t)&v39);
    sub_22DEA326C(v57, v9);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  }
  static NXMessageContext.decode(data:)();
  if (!v2)
  {
    sub_22DEA326C(v16, v18);
    v36 = v50;
    v37 = v49;
    v19 = v52[0];
    v34 = *(_OWORD *)&v52[8];
    v35 = v51;
    v32 = *(_OWORD *)&v52[40];
    v33 = *(_OWORD *)&v52[24];
    v31 = v52[56];
    v30 = v53;
    goto LABEL_18;
  }
  sub_22DEA326C(v16, v18);
  sub_22DEA326C(v57, v9);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

uint64_t sub_22DE9BE1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String_optional v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (**v16)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t), char *);
  void (*v33)(uint64_t *__return_ptr, uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t), char *);
  void (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  os_log_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  NSObject *v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  void (*v74)(uint64_t (*)(uint64_t), _QWORD *, uint64_t, _QWORD *);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  _QWORD *v82;
  void (*v83)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, _QWORD *);
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  void (*v91)(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t), uint64_t, _QWORD *);
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, unint64_t, void (*)(void *), uint64_t, uint64_t, _QWORD *);
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v103;
  os_log_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  void (*v112)(uint64_t *__return_ptr, uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t), char *);
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  unint64_t v116;
  void *object;
  char *v118;
  _QWORD *v119;
  uint64_t ObjectType;
  uint64_t v121;
  char *v122;
  uint64_t (*v123)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  _QWORD *v124;
  ValueMetadata *v125;
  _UNKNOWN **v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t (*countAndFlagsBits)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DEFA59C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v118 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v119 = (uint64_t *)((char *)&v103 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v122 = (char *)&v103 - v11;
  swift_getObjectType();
  LOBYTE(v123) = 10;
  v12._countAndFlagsBits = NXKey.rawValue.getter();
  v13 = OS_xpc_object.string(_:)(v12);
  swift_bridgeObjectRelease();
  if (!v13.value._object)
  {
    type metadata accessor for NXError();
    LOBYTE(v123) = 2;
    v15 = 0x800000022DF02900;
    v16 = &v123;
    v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))0xD000000000000011;
    goto LABEL_5;
  }
  countAndFlagsBits = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))v13.value._countAndFlagsBits;
  LOBYTE(v123) = 13;
  NXKey.rawValue.getter();
  OS_xpc_object.uuid(_:)((uint64_t)v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_22DE8731C((uint64_t)v4, &qword_255DC66A8);
    type metadata accessor for NXError();
    LOBYTE(v127) = 2;
    v123 = 0;
    v124 = (_QWORD *)0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))0xD000000000000018;
    v124 = (_QWORD *)0x800000022DF02920;
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    v14 = v123;
    v15 = (uint64_t)v124;
    v16 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))&v127;
LABEL_5:
    NXError.__allocating_init(_:_:_:)((uint64_t)v16, (uint64_t)v14, v15, 0);
    return swift_willThrow();
  }
  object = v13.value._object;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  v19 = v6;
  v20 = v122;
  v114 = v18;
  v18(v122, (uint64_t)v4, v5);
  LOBYTE(v123) = 12;
  NXKey.rawValue.getter();
  v21 = OS_xpc_object.data(_:)();
  v23 = v22;
  swift_bridgeObjectRelease();
  v116 = v23;
  if (v23 >> 60 == 15)
  {
    type metadata accessor for NXError();
    LOBYTE(v127) = 2;
    v123 = 0;
    v124 = (_QWORD *)0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))0xD00000000000001ELL;
    v124 = (_QWORD *)0x800000022DF02940;
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v127, (uint64_t)v123, (uint64_t)v124, 0);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v20, v5);
  }
  v113 = v21;
  v115 = v19;
  v24 = v121;
  swift_beginAccess();
  v25 = *(_QWORD *)(v24 + 96);
  v26 = v20;
  if (!*(_QWORD *)(v25 + 16))
  {
    swift_endAccess();
    v29 = v115;
    goto LABEL_17;
  }
  v27 = (unint64_t)object;
  swift_bridgeObjectRetain();
  v28 = sub_22DE83DDC((uint64_t)countAndFlagsBits, v27);
  v29 = v115;
  if ((v30 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v31 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v28);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v111 = (uint64_t)sub_22DE9DF48(v31);
  v33 = v32;
  v35 = v34;
  swift_bridgeObjectRelease();
  v112 = v33;
  if (!v33)
  {
LABEL_17:
    type metadata accessor for NXError();
    LOBYTE(v127) = 15;
    v123 = 0;
    v124 = (_QWORD *)0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))0xD00000000000001BLL;
    v124 = (_QWORD *)0x800000022DF02960;
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v127, (uint64_t)v123, (uint64_t)v124, 0);
    swift_willThrow();
    sub_22DEA326C(v113, v116);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v26, v5);
  }
  v109 = v35;
  v36 = v5;
  if (qword_255DCD880 != -1)
    swift_once();
  v37 = sub_22DEFA674();
  __swift_project_value_buffer(v37, (uint64_t)qword_255DCD888);
  v38 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v39 = v119;
  v40 = v26;
  v110 = v38;
  v38((char *)v119, v26, v36);
  v41 = v27;
  swift_bridgeObjectRetain_n();
  v42 = sub_22DEFA65C();
  v43 = sub_22DEFABA8();
  v44 = v43;
  v45 = os_log_type_enabled(v42, v43);
  v107 = a1;
  if (v45)
  {
    v46 = swift_slowAlloc();
    v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))swift_slowAlloc();
    v123 = v106;
    *(_DWORD *)v46 = 136315394;
    v104 = v42;
    LODWORD(v105) = v44;
    swift_bridgeObjectRetain();
    v47 = countAndFlagsBits;
    v127 = sub_22DE8C348((uint64_t)countAndFlagsBits, v27, (uint64_t *)&v123);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    v48 = (uint8_t *)v46;
    *(_WORD *)(v46 + 12) = 2080;
    sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v49 = sub_22DEFAE3C();
    v127 = sub_22DE8C348(v49, v50, (uint64_t *)&v123);
    v40 = v122;
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    v51 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
    v51((uint64_t)v39, v36);
    v52 = v104;
    _os_log_impl(&dword_22DE7A000, v104, (os_log_type_t)v105, "Operation start server: name=%s, uuid=%s", v48, 0x16u);
    v53 = v106;
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v53, -1, -1);
    MEMORY[0x22E321E0C](v48, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    v51 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
    v51((uint64_t)v39, v36);

    v47 = countAndFlagsBits;
  }
  v54 = v36;
  v123 = v47;
  v124 = (_QWORD *)v41;
  v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))ObjectType;
  v56 = (uint64_t)v112;
  v112(&v127, &v123, v40);
  v57 = v55;
  if (v55)
  {
    sub_22DEA5758(v111, v56);
LABEL_23:
    LOBYTE(v127) = 16;
    v123 = 0;
    v124 = (_QWORD *)0xE000000000000000;
    sub_22DEFAC98();
    sub_22DEFAA10();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    type metadata accessor for NXError();
    sub_22DEFAA10();
    sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    v100 = v123;
    v101 = (uint64_t)v124;
    v102 = v57;
    NXError.__allocating_init(_:_:_:)((uint64_t)&v127, (uint64_t)v100, v101, v57);
    swift_willThrow();
    sub_22DEA326C(v113, v116);

    return (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v40, v54);
  }
  sub_22DEA5758(v111, v56);
  v58 = v127;
  v59 = (uint64_t)v128;
  v119 = v128;
  v108 = v54;
  v109 = v51;
  v60 = (uint64_t)v118;
  v110(v118, v40, v54);
  v61 = v121;
  swift_beginAccess();
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v127 = *(_QWORD *)(v61 + 104);
  *(_QWORD *)(v61 + 104) = 0x8000000000000000;
  v112 = (void (*)(uint64_t *__return_ptr, uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t), char *))v58;
  sub_22DEA1EBC(v58, v59, v60, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v61 + 104) = v127;
  swift_bridgeObjectRelease();
  v63 = v108;
  v109(v60, v108);
  swift_endAccess();
  ObjectType = swift_getObjectType();
  v64 = v40;
  v65 = swift_allocObject();
  swift_weakInit();
  v66 = v63;
  v67 = (void (*)(uint64_t, char *, uint64_t))v110;
  v110((char *)v60, v64, v63);
  v105 = *(unsigned __int8 *)(v115 + 80);
  v106 = 0;
  v103 = ((v105 + 40) & ~v105) + v7;
  v68 = ((v105 + 40) & ~v105);
  v104 = v68;
  v111 = v105 | 7;
  v69 = (_QWORD *)swift_allocObject();
  v70 = (uint64_t)countAndFlagsBits;
  v69[2] = v65;
  v69[3] = v70;
  v69[4] = v41;
  v71 = (char *)v68 + (_QWORD)v69;
  v72 = v60;
  v114(v71, v60, v66);
  v73 = v119;
  v74 = (void (*)(uint64_t (*)(uint64_t), _QWORD *, uint64_t, _QWORD *))v119[9];
  swift_bridgeObjectRetain();
  swift_retain();
  v74(sub_22DEA576C, v69, ObjectType, v73);
  swift_release();
  v75 = swift_allocObject();
  v76 = v121;
  swift_weakInit();
  v77 = v66;
  v67(v72, v122, v66);
  v78 = (_QWORD *)swift_allocObject();
  v79 = (uint64_t)countAndFlagsBits;
  v78[2] = v75;
  v78[3] = v79;
  v78[4] = v41;
  v80 = v77;
  v81 = v114;
  v114((char *)v104 + (_QWORD)v78, v72, v80);
  v82 = v119;
  v83 = (void (*)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, _QWORD *))v119[15];
  swift_bridgeObjectRetain();
  swift_retain();
  v83(sub_22DEA5830, v78, ObjectType, v82);
  swift_release();
  v84 = *(void **)(v76 + 16);
  v85 = swift_allocObject();
  swift_weakInit();
  v86 = v72;
  v87 = v108;
  v110((char *)v72, v122, v108);
  v88 = (v105 + 48) & ~v105;
  v89 = (char *)swift_allocObject();
  *((_QWORD *)v89 + 2) = v84;
  *((_QWORD *)v89 + 3) = v85;
  *((_QWORD *)v89 + 4) = countAndFlagsBits;
  *((_QWORD *)v89 + 5) = v41;
  v81(&v89[v88], v86, v87);
  v125 = &type metadata for NXXPCClient.OperationHandlerContext;
  v126 = &off_24F9A7000;
  v123 = sub_22DEA5908;
  v124 = v89;
  v90 = v119;
  v91 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t), uint64_t, _QWORD *))v119[12];
  swift_bridgeObjectRetain();
  v92 = v84;
  swift_retain();
  v93 = ObjectType;
  v91(&v123, ObjectType, v90);
  v94 = swift_allocObject();
  swift_weakInit();
  v95 = swift_allocObject();
  v96 = v107;
  *(_QWORD *)(v95 + 16) = v94;
  *(_QWORD *)(v95 + 24) = v96;
  v97 = (void (*)(uint64_t, unint64_t, void (*)(void *), uint64_t, uint64_t, _QWORD *))v90[19];
  swift_retain();
  swift_unknownObjectRetain();
  v98 = v113;
  v99 = v106;
  v97(v113, v116, sub_22DEA59AC, v95, v93, v90);
  if (v99)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    v57 = v99;
    v40 = v122;
    v54 = v108;
    goto LABEL_23;
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22DEA326C(v98, v116);
  swift_unknownObjectRelease();
  swift_release();
  v109((uint64_t)v122, v108);
  return swift_release();
}

uint64_t sub_22DE9CACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, unint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66A8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DEFA59C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - v11;
  swift_getObjectType();
  LOBYTE(v51) = 13;
  NXKey.rawValue.getter();
  OS_xpc_object.uuid(_:)((uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_22DE8731C((uint64_t)v6, &qword_255DC66A8);
    type metadata accessor for NXError();
    LOBYTE(v51) = 2;
    NXError.__allocating_init(_:_:_:)((uint64_t)&v51, 0xD000000000000011, 0x800000022DF029D0, 0);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v6, v7);
    swift_beginAccess();
    v14 = *(_QWORD *)(v1 + 104);
    if (*(_QWORD *)(v14 + 16) && (v15 = sub_22DE9FAE8((uint64_t)v12), (v16 & 1) != 0))
    {
      v48 = v7;
      v49 = v12;
      v47 = v2;
      v17 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v15);
      v19 = *v17;
      v18 = v17[1];
      swift_endAccess();
      LOBYTE(v51) = 12;
      swift_unknownObjectRetain();
      NXKey.rawValue.getter();
      v46 = OS_xpc_object.data(_:)();
      v21 = v20;
      swift_bridgeObjectRelease();
      if (v21 >> 60 == 15)
      {
        type metadata accessor for NXError();
        LOBYTE(v53) = 2;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_22DEFAC98();
        swift_bridgeObjectRelease();
        v51 = 0xD00000000000001FLL;
        v52 = 0x800000022DF02A10;
        sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v23 = v48;
        v22 = v49;
        sub_22DEFAE3C();
        sub_22DEFAA10();
        swift_bridgeObjectRelease();
        NXError.__allocating_init(_:_:_:)((uint64_t)&v53, v51, v52, 0);
        swift_willThrow();
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v22, v23);
      }
      else
      {
        v44 = v21;
        v45 = v19;
        if (qword_255DCD880 != -1)
          swift_once();
        v24 = sub_22DEFA674();
        __swift_project_value_buffer(v24, (uint64_t)qword_255DCD888);
        v25 = v50;
        v26 = v48;
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v50, v49, v48);
        v27 = sub_22DEFA65C();
        v28 = sub_22DEFABA8();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = swift_slowAlloc();
          v43 = v18;
          v30 = (uint8_t *)v29;
          v42 = swift_slowAlloc();
          v51 = v42;
          *(_DWORD *)v30 = 136315138;
          v41 = v30 + 4;
          sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v31 = sub_22DEFAE3C();
          v53 = sub_22DE8C348(v31, v32, &v51);
          sub_22DEFAC2C();
          swift_bridgeObjectRelease();
          v50 = *(char **)(v8 + 8);
          ((void (*)(char *, uint64_t))v50)(v25, v26);
          _os_log_impl(&dword_22DE7A000, v27, v28, "Operation update client: uuid=%s", v30, 0xCu);
          v33 = v42;
          swift_arrayDestroy();
          MEMORY[0x22E321E0C](v33, -1, -1);
          v34 = v30;
          v18 = v43;
          MEMORY[0x22E321E0C](v34, -1, -1);
        }
        else
        {
          v50 = *(char **)(v8 + 8);
          ((void (*)(char *, uint64_t))v50)(v25, v26);
        }

        ObjectType = swift_getObjectType();
        v36 = swift_allocObject();
        swift_weakInit();
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = v36;
        *(_QWORD *)(v37 + 24) = a1;
        v38 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v18 + 160);
        swift_retain();
        swift_unknownObjectRetain();
        v39 = v46;
        v40 = v44;
        v38(v46, v44, sub_22DEA6034, v37, ObjectType, v18);
        swift_release();
        sub_22DEA326C(v39, v40);
        swift_unknownObjectRelease();
        ((void (*)(char *, uint64_t))v50)(v49, v48);
        return swift_release();
      }
    }
    else
    {
      swift_endAccess();
      type metadata accessor for NXError();
      LOBYTE(v53) = 2;
      v51 = 0;
      v52 = 0xE000000000000000;
      sub_22DEFAC98();
      swift_bridgeObjectRelease();
      v51 = 0xD00000000000001ALL;
      v52 = 0x800000022DF029F0;
      sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      sub_22DEFAE3C();
      sub_22DEFAA10();
      swift_bridgeObjectRelease();
      NXError.__allocating_init(_:_:_:)((uint64_t)&v53, v51, v52, 0);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    }
  }
}

uint64_t sub_22DE9D108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint8_t *v36;
  uint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66A8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DEFA59C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - v11;
  swift_getObjectType();
  LOBYTE(v44) = 13;
  NXKey.rawValue.getter();
  v43 = a1;
  OS_xpc_object.uuid(_:)((uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_22DE8731C((uint64_t)v6, &qword_255DC66A8);
    type metadata accessor for NXError();
    LOBYTE(v44) = 2;
    NXError.__allocating_init(_:_:_:)((uint64_t)&v44, 0xD000000000000011, 0x800000022DF029D0, 0);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v6, v7);
    swift_beginAccess();
    v14 = *(_QWORD *)(v1 + 104);
    v15 = (uint64_t)v12;
    if (*(_QWORD *)(v14 + 16) && (v16 = sub_22DE9FAE8((uint64_t)v12), (v17 & 1) != 0))
    {
      v18 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v16);
      v19 = *v18;
      v40 = v18[1];
      swift_endAccess();
      v20 = qword_255DCD880;
      v39 = v19;
      swift_unknownObjectRetain();
      if (v20 != -1)
        swift_once();
      v41 = v2;
      v21 = sub_22DEFA674();
      __swift_project_value_buffer(v21, (uint64_t)qword_255DCD888);
      v22 = v42;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v42, v12, v7);
      v23 = sub_22DEFA65C();
      v24 = sub_22DEFABA8();
      if (os_log_type_enabled(v23, v24))
      {
        v38 = v23;
        v25 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v44 = v37;
        *(_DWORD *)v25 = 136315138;
        v36 = v25 + 4;
        sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v26 = sub_22DEFAE3C();
        v46 = sub_22DE8C348(v26, v27, &v44);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        v28 = *(void (**)(char *, uint64_t))(v8 + 8);
        v28(v22, v7);
        v23 = v38;
        _os_log_impl(&dword_22DE7A000, v38, v24, "Operation cancel client: uuid=%s", v25, 0xCu);
        v29 = v37;
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v29, -1, -1);
        MEMORY[0x22E321E0C](v25, -1, -1);
      }
      else
      {
        v28 = *(void (**)(char *, uint64_t))(v8 + 8);
        v28(v22, v7);
      }

      swift_beginAccess();
      sub_22DE9F90C(v15);
      swift_endAccess();
      swift_unknownObjectRelease();
      ObjectType = swift_getObjectType();
      v31 = swift_allocObject();
      swift_weakInit();
      v32 = swift_allocObject();
      v33 = v43;
      *(_QWORD *)(v32 + 16) = v31;
      *(_QWORD *)(v32 + 24) = v33;
      v34 = v40;
      v35 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v40 + 56);
      swift_retain();
      swift_unknownObjectRetain();
      v35(sub_22DEA6034, v32, ObjectType, v34);
      swift_unknownObjectRelease();
      swift_release();
      v28((char *)v15, v7);
      return swift_release();
    }
    else
    {
      swift_endAccess();
      type metadata accessor for NXError();
      LOBYTE(v46) = 2;
      v44 = 0;
      v45 = 0xE000000000000000;
      sub_22DEFAC98();
      swift_bridgeObjectRelease();
      v44 = 0xD00000000000001ALL;
      v45 = 0x800000022DF029F0;
      sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      sub_22DEFAE3C();
      sub_22DEFAA10();
      swift_bridgeObjectRelease();
      NXError.__allocating_init(_:_:_:)((uint64_t)&v46, v44, v45, 0);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    }
  }
}

void sub_22DE9D65C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v4;
  Swift::UInt64 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  xpc_object_t v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  __int128 v26;
  void *v27;
  uint64_t v28;
  os_log_type_t type[7];
  char v30;

  swift_getObjectType();
  LOBYTE(v27) = 9;
  v4._countAndFlagsBits = NXKey.rawValue.getter();
  v5 = OS_xpc_object.uint64(_:)(v4);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 112);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = sub_22DE9F9F8(v5);
    if ((v9 & 1) != 0)
    {
      sub_22DEA27E0(*(_QWORD *)(v6 + 56) + 16 * v8, (uint64_t)&v26);
      LOBYTE(v7) = *((_QWORD *)&v26 + 1) != 1;
      if ((_QWORD)v26)
        goto LABEL_9;
      goto LABEL_7;
    }
    LOBYTE(v7) = 0;
  }
  v26 = xmmword_22DEFE510;
LABEL_7:
  if ((v7 & 1) == 0)
  {
    sub_22DE8731C((uint64_t)&v26, &qword_255DC64C8);
    swift_endAccess();
LABEL_13:
    type metadata accessor for NXError();
    v30 = 2;
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v27 = (void *)0xD000000000000021;
    v28 = 0x800000022DF02660;
    *(_QWORD *)&v26 = v5;
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v30, (uint64_t)v27, v28, 0);
    swift_willThrow();
    return;
  }
LABEL_9:
  v10 = MEMORY[0x22E321ED8](&v26);
  v11 = *((_QWORD *)&v26 + 1);
  sub_22DE8731C((uint64_t)&v26, &qword_255DC64C8);
  swift_endAccess();
  if (!v10)
    goto LABEL_13;
  LOBYTE(v27) = 8;
  NXKey.rawValue.getter();
  v12 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  v13 = xpc_dictionary_get_value(a1, (const char *)(v12 + 32));
  swift_release();
  if (v13)
  {
    swift_unknownObjectRetain();
    NXOperationEvent.init(xpcObject:)((uint64_t)&v27);
    if (v2)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      v14 = v27;
      v15 = v28;
      if (qword_255DCD880 != -1)
        swift_once();
      v16 = sub_22DEFA674();
      __swift_project_value_buffer(v16, (uint64_t)qword_255DCD888);
      sub_22DEA5FBC(v14, v15);
      sub_22DEA5FBC(v14, v15);
      v17 = sub_22DEFA65C();
      v18 = sub_22DEFABA8();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        *(_DWORD *)type = v19;
        v21 = v20;
        v25 = swift_slowAlloc();
        *(_QWORD *)&v26 = v25;
        *(_DWORD *)v21 = 134218242;
        v27 = (void *)v5;
        sub_22DEFAC2C();
        *(_WORD *)(v21 + 12) = 2080;
        v27 = v14;
        LOBYTE(v28) = v15;
        sub_22DEA5FE4();
        v22 = sub_22DEFAE3C();
        v27 = (void *)sub_22DE8C348(v22, v23, (uint64_t *)&v26);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        sub_22DEA5FD0(v14, v15);
        sub_22DEA5FD0(v14, v15);
        _os_log_impl(&dword_22DE7A000, v17, type[0], "Operation event received: operationID=%llu, event=%s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v25, -1, -1);
        MEMORY[0x22E321E0C](v21, -1, -1);
      }
      else
      {
        sub_22DEA5FD0(v14, v15);
        sub_22DEA5FD0(v14, v15);
      }

      ObjectType = swift_getObjectType();
      v27 = v14;
      LOBYTE(v28) = v15;
      (*(void (**)(void **, uint64_t, uint64_t))(v11 + 72))(&v27, ObjectType, v11);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_22DEA5FD0(v14, v15);
    }
  }
  else
  {
    type metadata accessor for NXError();
    LOBYTE(v27) = 2;
    NXError.__allocating_init(_:_:_:)((uint64_t)&v27, 0xD000000000000012, 0x800000022DF02A30, 0);
    swift_willThrow();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_22DE9DB18()
{
  uint64_t v0;
  Swift::String v1;
  Swift::UInt64 v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t ObjectType;
  __int128 v18;
  Swift::UInt64 v19;
  uint64_t v20;
  char v21;

  swift_getObjectType();
  LOBYTE(v19) = 9;
  v1._countAndFlagsBits = NXKey.rawValue.getter();
  v2 = OS_xpc_object.uint64(_:)(v1);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = sub_22DE9F9F8(v2);
    if ((v6 & 1) != 0)
    {
      sub_22DEA27E0(*(_QWORD *)(v3 + 56) + 16 * v5, (uint64_t)&v18);
      LOBYTE(v4) = *((_QWORD *)&v18 + 1) != 1;
      if ((_QWORD)v18)
        goto LABEL_9;
      goto LABEL_7;
    }
    LOBYTE(v4) = 0;
  }
  v18 = xmmword_22DEFE510;
LABEL_7:
  if ((v4 & 1) == 0)
  {
    sub_22DE8731C((uint64_t)&v18, &qword_255DC64C8);
    swift_endAccess();
LABEL_12:
    type metadata accessor for NXError();
    v21 = 2;
    v19 = 0;
    v20 = 0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v19 = 0xD000000000000021;
    v20 = 0x800000022DF02660;
    *(_QWORD *)&v18 = v2;
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v21, v19, v20, 0);
    return swift_willThrow();
  }
LABEL_9:
  v7 = MEMORY[0x22E321ED8](&v18);
  v8 = *((_QWORD *)&v18 + 1);
  sub_22DE8731C((uint64_t)&v18, &qword_255DC64C8);
  swift_endAccess();
  if (!v7)
    goto LABEL_12;
  LOBYTE(v19) = 4;
  NXKey.rawValue.getter();
  v9 = OS_xpc_object.data(_:)();
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v11 >> 60 == 15)
  {
    type metadata accessor for NXError();
    LOBYTE(v19) = 2;
    NXError.__allocating_init(_:_:_:)((uint64_t)&v19, 0xD000000000000020, 0x800000022DF02A50, 0);
    swift_willThrow();
  }
  else
  {
    if (qword_255DCD880 != -1)
      swift_once();
    v13 = sub_22DEFA674();
    __swift_project_value_buffer(v13, (uint64_t)qword_255DCD888);
    v14 = sub_22DEFA65C();
    v15 = sub_22DEFABA8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      v19 = v2;
      sub_22DEFAC2C();
      _os_log_impl(&dword_22DE7A000, v14, v15, "Operation provider event received: operationID=%llu", v16, 0xCu);
      MEMORY[0x22E321E0C](v16, -1, -1);
    }

    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 80))(v9, v11, ObjectType, v8);
    sub_22DEA326C(v9, v11);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_22DE9DE8C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  _BYTE v8[40];

  result = sub_22DEA3A20(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  else
  {
    v7 = sub_22DEA3AA8((uint64_t)v8, result, v5, 0, a1);
    *(_QWORD *)a2 = v7;
    sub_22DE83EBC((uint64_t)v8, (uint64_t)a2 + 8);
    return sub_22DE8731C((uint64_t)&v7, &qword_255DC66A0);
  }
  return result;
}

_OWORD *sub_22DE9DF48(uint64_t a1)
{
  _OWORD *result;
  int v3;
  char v4;
  __int128 v5;

  result = (_OWORD *)sub_22DEA3A20(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_OWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_22DEA3B28(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_22DE9DFD0(uint64_t a1, uint64_t a2, NSObject *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t result;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;

  v30 = a3;
  v8 = sub_22DEFA59C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)a1;
  v13 = *(_BYTE *)(a1 + 8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_255DCD880 != -1)
      swift_once();
    v15 = sub_22DEFA674();
    __swift_project_value_buffer(v15, (uint64_t)qword_255DCD888);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a5, v8);
    swift_bridgeObjectRetain();
    sub_22DEA5FBC(v12, v13);
    swift_bridgeObjectRetain();
    sub_22DEA5FBC(v12, v13);
    v16 = sub_22DEFA65C();
    v17 = sub_22DEFABA8();
    v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      v19 = swift_slowAlloc();
      v29 = a5;
      v20 = v19;
      v28 = swift_slowAlloc();
      v31 = v28;
      *(_DWORD *)v20 = 136315650;
      HIDWORD(v27) = v18;
      swift_bridgeObjectRetain();
      v32 = sub_22DE8C348((uint64_t)v30, a4, &v31);
      v30 = v16;
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v21 = sub_22DEFAE3C();
      v32 = sub_22DE8C348(v21, v22, &v31);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      *(_WORD *)(v20 + 22) = 2080;
      v32 = (uint64_t)v12;
      v33 = v13;
      sub_22DEA5FE4();
      v23 = sub_22DEFAE3C();
      v32 = sub_22DE8C348(v23, v24, &v31);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      sub_22DEA5FD0(v12, v13);
      sub_22DEA5FD0(v12, v13);
      v25 = v30;
      _os_log_impl(&dword_22DE7A000, v30, BYTE4(v27), "Operation event server: name=%s, uuid=%s, event=%s", (uint8_t *)v20, 0x20u);
      v26 = v28;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v26, -1, -1);
      MEMORY[0x22E321E0C](v20, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_22DEA5FD0(v12, v13);
      sub_22DEA5FD0(v12, v13);

    }
    v32 = (uint64_t)v12;
    v33 = v13;
    sub_22DE9E35C();
    return swift_release();
  }
  return result;
}

uint64_t sub_22DE9E35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _xpc_connection_s *v3;
  xpc_object_t empty;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = sub_22DEFA59C();
  result = MEMORY[0x24BDAC7A8](v1);
  v3 = *(_xpc_connection_s **)(v0 + 64);
  if (v3)
  {
    swift_unknownObjectRetain();
    empty = xpc_dictionary_create_empty();
    NXKey.rawValue.getter();
    NXRequestType.rawValue.getter();
    v5 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v6 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v5 + 32), (const char *)(v6 + 32));
    swift_release();
    swift_release();
    swift_getObjectType();
    NXKey.rawValue.getter();
    OS_xpc_object.setUUID(_:key:)();
    swift_bridgeObjectRelease();
    NXKey.rawValue.getter();
    v7 = NXOperationEvent.xpcObjectRepresentation.getter();
    v8 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(empty, (const char *)(v8 + 32), v7);
    swift_unknownObjectRelease();
    swift_release();
    xpc_connection_send_message(v3, empty);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22DE9E7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _xpc_connection_s *v28;
  xpc_object_t empty;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v11 = sub_22DEFA59C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v38 = a2;
    if (qword_255DCD880 != -1)
      swift_once();
    v17 = sub_22DEFA674();
    __swift_project_value_buffer(v17, (uint64_t)qword_255DCD888);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v36 = a6;
    v18(v14, a6, v11);
    swift_bridgeObjectRetain_n();
    v19 = sub_22DEFA65C();
    v20 = sub_22DEFABA8();
    v21 = os_log_type_enabled(v19, v20);
    v37 = a1;
    if (v21)
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v35 = v16;
      v24 = v23;
      v40 = v23;
      *(_DWORD *)v22 = 136315394;
      swift_bridgeObjectRetain();
      v39 = sub_22DE8C348(a4, a5, &v40);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v25 = sub_22DEFAE3C();
      v39 = sub_22DE8C348(v25, v26, &v40);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      _os_log_impl(&dword_22DE7A000, v19, v20, "Operation provider event server: name=%s, uuid=%s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      v27 = v24;
      v16 = v35;
      MEMORY[0x22E321E0C](v27, -1, -1);
      MEMORY[0x22E321E0C](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }

    v28 = *(_xpc_connection_s **)(v16 + 64);
    if (v28)
    {
      swift_unknownObjectRetain();
      empty = xpc_dictionary_create_empty();
      LOBYTE(v40) = 18;
      NXKey.rawValue.getter();
      LOBYTE(v40) = 8;
      NXRequestType.rawValue.getter();
      v30 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v31 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_string(empty, (const char *)(v30 + 32), (const char *)(v31 + 32));
      swift_release();
      swift_release();
      swift_getObjectType();
      LOBYTE(v40) = 13;
      NXKey.rawValue.getter();
      OS_xpc_object.setUUID(_:key:)();
      swift_bridgeObjectRelease();
      LOBYTE(v40) = 4;
      NXKey.rawValue.getter();
      v32 = (void *)sub_22DEFA53C();
      v33 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_value(empty, (const char *)(v33 + 32), v32);
      swift_release();
      swift_unknownObjectRelease();
      xpc_connection_send_message(v28, empty);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22DE9EBB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[6];

  v45 = a7;
  v40 = a6;
  v39 = a5;
  v43 = a3;
  v44 = a4;
  v41 = a1;
  v42 = a2;
  v38 = a10;
  v37 = a9;
  v48 = sub_22DEFA914();
  v51 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DEFA92C();
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v46 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22DEFA59C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  v36[1] = v18;
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a11, v14);
  v19 = (*(unsigned __int8 *)(v15 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = (v16 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  v23 = v39;
  *((_QWORD *)v22 + 2) = v18;
  *((_QWORD *)v22 + 3) = v23;
  v24 = v37;
  *((_QWORD *)v22 + 4) = v40;
  *((_QWORD *)v22 + 5) = v24;
  *((_QWORD *)v22 + 6) = v38;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v22[v19], v17, v14);
  v25 = &v22[v20];
  v26 = v42;
  *(_QWORD *)v25 = v41;
  *((_QWORD *)v25 + 1) = v26;
  v27 = (uint64_t *)&v22[v21];
  v29 = v43;
  v28 = v44;
  *v27 = v43;
  v27[1] = v28;
  v30 = v45;
  *(_QWORD *)&v22[(v21 + 23) & 0xFFFFFFFFFFFFFFF8] = v45;
  aBlock[4] = sub_22DEA5D58;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = &block_descriptor_204;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22DEA5098(v29, v28);
  v30;
  v32 = v46;
  sub_22DEFA920();
  v52 = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE91728((unint64_t *)&qword_255DC6490, &qword_255DC61E8);
  v34 = v47;
  v33 = v48;
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v32, v34, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v50);
  swift_release();
  return swift_release();
}

void sub_22DE9EF50(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD, _QWORD, _QWORD);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a7;
  v45 = a6;
  v16 = sub_22DEFA59C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v40 = (void (*)(_QWORD, _QWORD, _QWORD))a4;
    v42 = a9;
    v43 = a10;
    if (qword_255DCD880 != -1)
      swift_once();
    v41 = a11;
    v20 = sub_22DEFA674();
    __swift_project_value_buffer(v20, (uint64_t)qword_255DCD888);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v45, v16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v21 = a8;
    v22 = sub_22DEFA65C();
    v23 = sub_22DEFABA8();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v39 = a3;
      v26 = v25;
      v38 = swift_slowAlloc();
      v47 = v38;
      *(_DWORD *)v26 = 136315650;
      HIDWORD(v37) = v24;
      swift_bridgeObjectRetain();
      v46 = sub_22DE8C348((uint64_t)v40, a5, &v47);
      v40 = a2;
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v27 = sub_22DEFAE3C();
      v46 = sub_22DE8C348(v27, v28, &v47);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      *(_WORD *)(v26 + 22) = 2080;
      swift_bridgeObjectRetain();
      v29 = v44;
      v46 = sub_22DE8C348(v44, v21, &v47);
      a2 = v40;
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22DE7A000, v22, BYTE4(v37), "Operation request: name=%s, uuid=%s, requestName=%s", (uint8_t *)v26, 0x20u);
      v30 = v38;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v30, -1, -1);
      v31 = v26;
      a3 = v39;
      MEMORY[0x22E321E0C](v31, -1, -1);

      v32 = v21;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);

      swift_bridgeObjectRelease_n();
      v32 = v21;
      v29 = v44;
    }
    v34 = (_QWORD *)swift_allocObject();
    v35 = v41;
    v34[2] = v41;
    v34[3] = a2;
    v34[4] = a3;
    v36 = v35;
    swift_retain();
    sub_22DE9F564(v45, v29, v32, v42, v43, (uint64_t)v34);
    swift_release();
    swift_release();
  }
  else
  {
    LOBYTE(v47) = 8;
    type metadata accessor for NXError();
    v33 = NXError.__allocating_init(_:_:_:)((uint64_t)&v47, 0x6320435058206F4ELL, 0xED0000746E65696CLL, 0);
    a2(v33, 0, 1);

  }
}

uint64_t sub_22DE9F354(void *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v23 = a4;
  v11 = sub_22DEFA914();
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22DEFA92C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = a6;
  *(_QWORD *)(v18 + 32) = a1;
  *(_QWORD *)(v18 + 40) = a2;
  a3 &= 1u;
  *(_BYTE *)(v18 + 48) = a3;
  aBlock[4] = sub_22DEA5F90;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = &block_descriptor_219;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_22DEA5740(a1, a2, a3);
  sub_22DEFA920();
  v24 = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE91728((unint64_t *)&qword_255DC6490, &qword_255DC61E8);
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v17, v13, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return swift_release();
}

uint64_t sub_22DE9F564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  NSObject *v14;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _xpc_connection_s *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  dispatch_queue_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v7 = v6;
  v29 = a4;
  v30 = a5;
  v9 = sub_22DEFA938();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v7 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock[0]) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock[0]) = 9;
    NXRequestType.rawValue.getter();
    v28 = v14;
    v17 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v18 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v17 + 32), (const char *)(v18 + 32));
    swift_release();
    swift_release();
    swift_getObjectType();
    LOBYTE(aBlock[0]) = 13;
    NXKey.rawValue.getter();
    OS_xpc_object.setUUID(_:key:)();
    swift_bridgeObjectRelease();
    LOBYTE(aBlock[0]) = 16;
    NXKey.rawValue.getter();
    v19 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v20 = sub_22DEFA9EC();
    xpc_dictionary_set_string(empty, (const char *)(v19 + 32), (const char *)(v20 + 32));
    swift_release();
    swift_release();
    LOBYTE(aBlock[0]) = 15;
    NXKey.rawValue.getter();
    v21 = (void *)sub_22DEFA53C();
    v22 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(empty, (const char *)(v22 + 32), v21);
    swift_unknownObjectRelease();
    v23 = swift_release();
    v24 = (_xpc_connection_s *)sub_22DE9223C(v23);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = sub_22DEA5E04;
    *(_QWORD *)(v25 + 24) = a6;
    aBlock[4] = sub_22DEA5E14;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    aBlock[3] = &block_descriptor_213;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v24, empty, v28, v26);
    _Block_release(v26);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NXXPCClient.deinit()
{
  uint64_t v0;

  sub_22DE87604(*(_QWORD *)(v0 + 24));
  sub_22DE87604(*(_QWORD *)(v0 + 48));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NXXPCClient.__deallocating_deinit()
{
  NXXPCClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22DE9F90C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_22DE9FAE8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22DEA349C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_22DEFA59C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_22DEA15F4(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_22DE9F9F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22DEFAECC();
  return sub_22DEA2220(a1, v2);
}

uint64_t sub_22DE9FA28()
{
  return objectdestroy_31Tm();
}

void sub_22DE9FA30(uint64_t a1)
{
  uint64_t v1;

  sub_22DE92C88(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_22DE9FA40()
{
  unint64_t result;

  result = qword_255DC64B0;
  if (!qword_255DC64B0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryConfiguration, &type metadata for NXDiscoveryConfiguration);
    atomic_store(result, (unint64_t *)&qword_255DC64B0);
  }
  return result;
}

uint64_t sub_22DE9FA84()
{
  return objectdestroy_31Tm();
}

uint64_t sub_22DE9FA90()
{
  return sub_22DEA2894((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_22DE9448C);
}

uint64_t sub_22DE9FA9C()
{
  return objectdestroy_31Tm();
}

void sub_22DE9FAA4(uint64_t a1)
{
  uint64_t v1;

  sub_22DE94824(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_22DE9FAB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v3 + 16))(*a1, a1[1], a2);
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
  }
  return result;
}

unint64_t sub_22DE9FAE8(uint64_t a1)
{
  uint64_t v2;

  sub_22DEFA59C();
  sub_22DE8D808(&qword_255DC66C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_22DEFA9B0();
  return sub_22DEA22BC(a1, v2);
}

uint64_t sub_22DE9FB54(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66F8);
  result = sub_22DEFAD4C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v30 = 1 << *(_BYTE *)(v5 + 32);
    v31 = v3;
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v29;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_22DEFAECC();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_22DE9FE04(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _BYTE v32[16];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6608);
  result = sub_22DEFAD4C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_QWORD *)(v5 + 56) + 16 * v17;
      if ((a2 & 1) != 0)
        sub_22DEA310C(v22, (uint64_t)v32);
      else
        sub_22DEA27E0(v22, (uint64_t)v32);
      result = sub_22DEFAECC();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      result = sub_22DEA310C((uint64_t)v32, *(_QWORD *)(v7 + 56) + 16 * v15);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_22DEA00C4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_22DEFAD4C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_22DEFAED8();
    sub_22DEFAA04();
    result = sub_22DEFAEFC();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_22DEA03D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E8);
  result = sub_22DEFAD4C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_34;
        v18 = v30[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_34;
          v18 = v30[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if ((a2 & 1) != 0)
              {
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 >= 64)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v30[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_34;
                v18 = v30[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v16);
      if ((a2 & 1) != 0)
        sub_22DEA2EEC(v21, (uint64_t)v31);
      else
        sub_22DE83EBC((uint64_t)v21, (uint64_t)v31);
      result = sub_22DEFAECC();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v20;
      result = sub_22DEA2EEC(v31, *(_QWORD *)(v7 + 56) + 40 * v14);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_22DEA0698(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;

  v6 = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  result = sub_22DEFAD4C();
  v14 = result;
  if (*(_QWORD *)(v12 + 16))
  {
    v39 = v6;
    v15 = 0;
    v16 = *(_QWORD *)(v12 + 64);
    v42 = (_QWORD *)(v12 + 64);
    v17 = 1 << *(_BYTE *)(v12 + 32);
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v19 = v18 & v16;
    v41 = (unint64_t)(v17 + 63) >> 6;
    v20 = result + 64;
    v40 = a2;
    v21 = 16;
    if ((a2 & 1) != 0)
      v21 = 32;
    v43 = v21;
    while (1)
    {
      if (v19)
      {
        v23 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        v24 = v23 | (v15 << 6);
      }
      else
      {
        v25 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v42;
        if (v25 >= v41)
          goto LABEL_33;
        v26 = v42[v25];
        ++v15;
        if (!v26)
        {
          v15 = v25 + 1;
          if (v25 + 1 >= v41)
            goto LABEL_33;
          v26 = v42[v15];
          if (!v26)
          {
            v27 = v25 + 2;
            if (v27 >= v41)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                result = swift_release();
                v6 = v39;
                goto LABEL_40;
              }
              v37 = 1 << *(_BYTE *)(v12 + 32);
              if (v37 >= 64)
                bzero(v42, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v42 = -1 << v37;
              v6 = v39;
              *(_QWORD *)(v12 + 16) = 0;
              break;
            }
            v26 = v42[v27];
            if (!v26)
            {
              while (1)
              {
                v15 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_42;
                if (v15 >= v41)
                  goto LABEL_33;
                v26 = v42[v15];
                ++v27;
                if (v26)
                  goto LABEL_23;
              }
            }
            v15 = v27;
          }
        }
LABEL_23:
        v19 = (v26 - 1) & v26;
        v24 = __clz(__rbit64(v26)) + (v15 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v24);
      v29 = *(_QWORD *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + v43))(v11, *(_QWORD *)(v12 + 56) + v29 * v24, v8);
      result = sub_22DEFAECC();
      v30 = -1 << *(_BYTE *)(v14 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v20 + 8 * v32);
        }
        while (v36 == -1);
        v22 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v20 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v22) = v28;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 56) + v29 * v22, v11, v8);
      ++*(_QWORD *)(v14 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v6 = v14;
  return result;
}

uint64_t sub_22DEA09C8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  __int128 v40;

  v3 = v2;
  v5 = sub_22DEFA59C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66C0);
  v39 = a2;
  v10 = sub_22DEFAD4C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
      swift_unknownObjectRetain();
    }
    sub_22DE8D808(&qword_255DC66C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22DEFA9B0();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v19) = v40;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

unint64_t sub_22DEA0D60(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_22DEFAECC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEA0EF4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_22DEFAECC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        result = v15 + 16 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 16 * v6 + 16)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v16 = v3 == v6;
          v3 = v6;
          if (v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEA10B0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22DEFAED8();
        swift_bridgeObjectRetain();
        sub_22DEFAA04();
        v9 = sub_22DEFAEFC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEA1284(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_QWORD *)(v11 + 8 * v6);
        result = sub_22DEFAECC();
        v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            v16 = (_QWORD *)(v11 + 8 * v3);
            if (v3 != v6 || v16 >= v12 + 1)
              *v16 = *v12;
            v17 = *(_QWORD *)(a2 + 56);
            v18 = v17 + 40 * v3;
            v19 = (__int128 *)(v17 + 40 * v6);
            if (v3 != v6 || (v3 = v6, v18 >= (unint64_t)v19 + 40))
            {
              v9 = *v19;
              v10 = v19[1];
              *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
              *(_OWORD *)v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEA142C(unint64_t result, uint64_t a2, uint64_t *a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_QWORD *)(v11 + 8 * v7);
        result = sub_22DEFAECC();
        v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13)
            goto LABEL_6;
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        v16 = (_QWORD *)(v11 + 8 * v4);
        if (v4 != v7 || v16 >= v12 + 1)
          *v16 = *v12;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 72);
        v19 = v18 * v4;
        result = v17 + v18 * v4;
        v20 = v18 * v7;
        v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v24 = *v23;
    v25 = (-1 << v4) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEA15F4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_22DEFA59C();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_22DE8D808(&qword_255DC66C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_22DEFA9B0();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 16 * a1);
            v25 = (_OWORD *)(v23 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_22DEA1894(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v8;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;

  v8 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_22DE9F9F8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v8;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = __swift_instantiateConcreteTypeFromMangledName(a4);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      return sub_22DEA20F4(v14, a2, a1, v20, a4);
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_22DEA3280(a4, a5);
      goto LABEL_7;
    }
    sub_22DEA0698(v17, a3 & 1, a4, a5);
    v24 = sub_22DE9F9F8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v8;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_22DEA20F4(v14, a2, a1, v20, a4);
    }
  }
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEA19E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_22DE9F9F8(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_22DEA23FC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_22DE9FB54(result, a4 & 1);
  result = sub_22DE9F9F8(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEA1B20(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_22DE9F9F8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_22DEA6158(a1, v16[7] + 16 * v10);
      return sub_22DEA2028(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22DEA29BC();
      goto LABEL_7;
    }
    sub_22DE9FE04(v13, a3 & 1);
    v18 = sub_22DE9F9F8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_22DEA6158(a1, v16[7] + 16 * v10);
      return sub_22DEA2028(v10, a2, a1, v16);
    }
  }
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEA1C2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_22DE83DDC(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_22DEA2B7C(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_22DEA00C4(v17, a4 & 1, a5);
  v23 = sub_22DE83DDC(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEA1DA0(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_22DE9F9F8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7] + 40 * v10;
        __swift_destroy_boxed_opaque_existential_1(v17);
        return sub_22DEA2EEC(a1, v17);
      }
      return sub_22DEA208C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22DEA2D28();
      goto LABEL_7;
    }
    sub_22DEA03D4(v13, a3 & 1);
    v19 = sub_22DE9F9F8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_22DEA208C(v10, a2, a1, v16);
    }
  }
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEA1EBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a2;
  v9 = sub_22DEFA59C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_22DE9FAE8(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      result = swift_unknownObjectRelease();
      v24 = v28;
      *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_22DEA349C();
    goto LABEL_7;
  }
  sub_22DEA09C8(v18, a4 & 1);
  v25 = sub_22DE9FAE8(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_22DEFAE9C();
    __break(1u);
    return result;
  }
  v15 = v25;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_22DEA2180(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_22DEA2028(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_22DEA310C(a3, a4[7] + 16 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_22DEA208C(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_22DEA2EEC(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_22DEA20F4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v8 = a4[7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a3, v9);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_22DEA2180(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_22DEFA59C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

unint64_t sub_22DEA2220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_22DEA22BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_22DEFA59C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_22DE8D808((unint64_t *)&unk_255DC66D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_22DEFA9C8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

void *sub_22DEA23FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66F8);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22DEA25A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DEA25C8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22DEA25FC()
{
  _QWORD *v0;
  void (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  uint64_t v7;
  uint64_t ObjectType;
  id v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _QWORD v16[3];

  v2 = v0[2];
  v1 = (void (*)(_QWORD))v0[3];
  v3 = v0[6];
  v4 = (id)CUXPCDecodeNSErrorIfNeeded();
  if (v4)
  {
    swift_beginAccess();
    if (MEMORY[0x22E321ED8](v2 + 16))
    {
      v5 = *(_QWORD *)(v2 + 24);
      v6 = v1;
      v7 = v3;
      ObjectType = swift_getObjectType();
      type metadata accessor for NXError();
      v9 = v4;
      v10 = (unint64_t)NXError.__allocating_init(_:)(v9);
      v16[0] = v10 | 0x4000000000000000;
      v11 = ObjectType;
      v3 = v7;
      v1 = v6;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 88))(v16, v11, v5);
      swift_unknownObjectRelease();

    }
    v12 = v4;
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x22E321ED8](v2 + 16))
    {
      v13 = *(_QWORD *)(v2 + 24);
      v14 = swift_getObjectType();
      v16[0] = 0x8000000000000010;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 88))(v16, v14, v13);
      swift_unknownObjectRelease();
    }
    v12 = 0;
  }
  v1(v12);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (v12)
    {
      v15 = xmmword_22DEFE510;
      swift_beginAccess();
      sub_22DE91E14(&v15, v3);
      swift_endAccess();
      sub_22DE91768();

    }
    swift_release();
  }
  else
  {

  }
}

uint64_t sub_22DEA27E0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NXOperationDataClientWeak(a2, a1);
  return a2;
}

void sub_22DEA281C()
{
  uint64_t v0;
  void (*v1)(void);
  id v2;

  v1 = *(void (**)(void))(v0 + 16);
  v2 = (id)CUXPCDecodeNSErrorIfNeeded();
  v1();

}

uint64_t objectdestroy_21Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEA2888()
{
  return sub_22DEA2894((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_22DE965EC);
}

uint64_t sub_22DEA2894(uint64_t (*a1)(_QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[3], v1[4], v1[5]);
}

uint64_t sub_22DEA28C0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22DEA28EC()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  id v3;
  __int128 v4;

  v1 = *(void (**)(void))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = (id)CUXPCDecodeNSErrorIfNeeded();
  v1();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (v3)
    {
      v4 = xmmword_22DEFE510;
      swift_beginAccess();
      sub_22DE91E14(&v4, v2);
      swift_endAccess();
      sub_22DE91768();

    }
    swift_release();
  }
  else
  {

  }
}

void *sub_22DEA29BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _BYTE v22[16];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6608);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    sub_22DEA27E0(*(_QWORD *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_22DEA310C((uint64_t)v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22DEA2B7C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22DEFAD40();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22DEA2D28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E8);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_22DE83EBC(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_22DEA2EEC(v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22DEA2EEC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_22DEA2F04(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_22DEA2F48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEA2F6C(uint64_t a1)
{
  uint64_t v1;

  return sub_22DE973D8(a1, *(void (**)(_QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_22DEA2F78()
{
  unint64_t result;

  result = qword_255DC64E0;
  if (!qword_255DC64E0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXServerMode, &type metadata for NXServerMode);
    atomic_store(result, (unint64_t *)&qword_255DC64E0);
  }
  return result;
}

unint64_t sub_22DEA2FBC()
{
  unint64_t result;

  result = qword_255DC64E8;
  if (!qword_255DC64E8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXServerMode, &type metadata for NXServerMode);
    atomic_store(result, (unint64_t *)&qword_255DC64E8);
  }
  return result;
}

uint64_t sub_22DEA3000()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_22DEA3024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DEA4D3C(a1, a2, a3);
}

uint64_t sub_22DEA3038()
{
  return objectdestroy_31Tm();
}

void sub_22DEA3040(uint64_t a1)
{
  uint64_t v1;

  sub_22DE97F54(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_22DEA305C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEA3098()
{
  uint64_t v0;

  return sub_22DE98300(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(uint64_t (**)(_QWORD))(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_22DEA30C4()
{
  return objectdestroy_31Tm();
}

void sub_22DEA30CC(uint64_t a1)
{
  uint64_t v1;

  sub_22DE986C4(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t type metadata accessor for NXXPCClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for NXXPCClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXXPCClient.__allocating_init(dispatchQueue:xpcEndpoint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_22DEA310C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for NXOperationDataClientWeak(a2, a1);
  return a2;
}

uint64_t sub_22DEA3148(uint64_t a1)
{
  destroy for NXOperationDataClientWeak();
  return a1;
}

uint64_t sub_22DEA317C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_22DEA31A0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  id v5;
  id v6;
  id v7;
  char v8;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  if (a1)
  {
    type metadata accessor for NXError();
    LOBYTE(v7) = 10;
    v5 = a1;
    v6 = NXError.__allocating_init(_:_:_:)((uint64_t)&v7, 0, 0, a1);
    v7 = v6;
    v8 = 1;
    (*(void (**)(id *, uint64_t, uint64_t))(v3 + 72))(&v7, ObjectType, v3);

  }
  else
  {
    v7 = 0;
    v8 = 2;
    (*(void (**)(id *, uint64_t, uint64_t))(v3 + 72))(&v7, ObjectType, v3);
  }
}

uint64_t sub_22DEA326C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_22DEA2F04(a1, a2);
  return a1;
}

void *sub_22DEA3280(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = sub_22DEFAD40();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v27 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v28 = v8 + 64;
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
    v22 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 56) + v22, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + v20) = v21;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v22, v7, v4);
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22DEA349C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = sub_22DEFA59C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66C0);
  v6 = *v0;
  v7 = sub_22DEFAD40();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v26 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
    result = (void *)swift_unknownObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void (*sub_22DEA36D8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_22DEA3930(v6);
  v6[10] = sub_22DEA37B8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_22DEA3768;
}

void sub_22DEA3768(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_22DEA37B8(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_22DE83DDC(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_22DEA38F4;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_22DEA2B7C((uint64_t *)&unk_255DC6700);
      goto LABEL_7;
    }
    sub_22DEA00C4(v16, a4 & 1, (uint64_t *)&unk_255DC6700);
    v20 = sub_22DE83DDC(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_22DEFAE9C();
  __break(1u);
  return result;
}

void sub_22DEA38F4(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_22DEA395C(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_22DEA3930(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_22DEA3950;
}

uint64_t sub_22DEA3950(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t *sub_22DEA395C(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v8 = *result;
  if (!*result)
  {
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      sub_22DEA10B0(a4, *a3);
    }
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  v9 = (_QWORD *)*a3;
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)(v9[7] + 8 * a4) = v8;
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  v9[(a4 >> 6) + 8] |= 1 << a4;
  v10 = (_QWORD *)(v9[6] + 16 * a4);
  *v10 = a5;
  v10[1] = a6;
  *(_QWORD *)(v9[7] + 8 * a4) = v8;
  v11 = v9[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (!v12)
  {
    v9[2] = v13;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

uint64_t sub_22DEA3A20(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_22DEA3AA8(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    sub_22DE83EBC(*(_QWORD *)(a5 + 56) + 40 * a2, result);
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

_OWORD *sub_22DEA3B28(_OWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    *result = *(_OWORD *)(*(_QWORD *)(a5 + 56) + 16 * a2);
    swift_retain();
    return (_OWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_22DEA3BA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  NSObject *v14;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _xpc_connection_s *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  _QWORD v35[2];
  dispatch_queue_t v36;
  __int128 aBlock;
  __int128 v38;
  __int128 v39;
  char v40;

  v6 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6498);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DEFA938();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (_QWORD *)((char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(a2 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  swift_retain();
  v14 = v13;
  LOBYTE(v13) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    v35[1] = v6;
    v36 = v14;
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock) = 0;
    NXRequestType.rawValue.getter();
    v17 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v18 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v17 + 32), (const char *)(v18 + 32));
    swift_release();
    swift_release();
    LOBYTE(aBlock) = 0;
    NXKey.rawValue.getter();
    v19 = *(_QWORD *)(a1 + 24);
    v20 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v20 + 32), v19);
    swift_release();
    LOBYTE(aBlock) = 2;
    NXKey.rawValue.getter();
    v21 = *(_BYTE *)(a1 + 88);
    v22 = *(_OWORD *)(a1 + 56);
    aBlock = *(_OWORD *)(a1 + 40);
    v38 = v22;
    v39 = *(_OWORD *)(a1 + 72);
    v40 = v21;
    NXEndpoint.xpcObjectRepresentation.getter();
    v24 = v23;
    v25 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(empty, (const char *)(v25 + 32), v24);
    swift_unknownObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 120))
    {
      LOBYTE(aBlock) = 5;
      NXKey.rawValue.getter();
      v26 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      v27 = sub_22DEFA9EC();
      xpc_dictionary_set_string(empty, (const char *)(v26 + 32), (const char *)(v27 + 32));
      swift_release();
      swift_release();
    }
    *(_QWORD *)&aBlock = 0x8000000000000008;
    nullsub_1(&aBlock);
    swift_retain();
    sub_22DEFA650();
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 0, 1, v28);
    swift_beginAccess();
    sub_22DE92048((uint64_t)v8, v19, &qword_255DC6498, &qword_255DC64A0, &qword_255DC6668);
    v29 = swift_endAccess();
    v30 = (_xpc_connection_s *)sub_22DE9223C(v29);
    v31 = swift_allocObject();
    swift_weakInit();
    v32 = swift_allocObject();
    swift_weakInit();
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = v31;
    v33[3] = v32;
    v33[4] = sub_22DEA4E14;
    v33[5] = a3;
    *(_QWORD *)&v39 = sub_22DEA638C;
    *((_QWORD *)&v39 + 1) = v33;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v38 = sub_22DE92608;
    *((_QWORD *)&v38 + 1) = &block_descriptor_177;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v30, empty, v36, v34);
    _Block_release(v34);
    swift_release();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DEA4070(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  NSObject *v15;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _xpc_connection_s *v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  dispatch_queue_t v31;
  uint64_t v32;
  _QWORD aBlock[3];
  ValueMetadata *v34;
  uint64_t (*v35)();
  _QWORD *v36;
  uint64_t v37;

  v6 = *a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DEFA938();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(a2 + 16);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  swift_retain();
  v15 = v14;
  LOBYTE(v14) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v29 = v6;
    v30 = v9;
    v31 = v15;
    v32 = a2;
    empty = xpc_dictionary_create_empty();
    LOBYTE(aBlock[0]) = 18;
    NXKey.rawValue.getter();
    LOBYTE(aBlock[0]) = 15;
    NXRequestType.rawValue.getter();
    v18 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v19 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v18 + 32), (const char *)(v19 + 32));
    swift_release();
    swift_release();
    v20 = *(_QWORD *)(a1 + 24);
    LOBYTE(aBlock[0]) = 0;
    NXKey.rawValue.getter();
    v21 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_uint64(empty, (const char *)(v21 + 32), v20);
    swift_release();
    swift_getObjectType();
    LOBYTE(v19) = *(_BYTE *)(a1 + 32);
    v34 = &type metadata for NXDiscoveryConfiguration;
    v35 = (uint64_t (*)())sub_22DE9FA40();
    LOBYTE(aBlock[0]) = v19;
    LOBYTE(v37) = 1;
    NXKey.rawValue.getter();
    sub_22DEFA4C4();
    sub_22DE8D808(&qword_255DC64B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB410], MEMORY[0x24BDCB3C8]);
    v37 = default argument 2 of OS_xpc_object.setObject<A>(_:key:encoder:)();
    OS_xpc_object.setObject<A>(_:key:encoder:)(aBlock);
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    swift_retain();
    v22 = (uint64_t)v30;
    sub_22DEFA650();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64C0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    swift_beginAccess();
    sub_22DE92048(v22, v20, &qword_255DC64A8, &qword_255DC64C0, &qword_255DC6648);
    v24 = swift_endAccess();
    v25 = (_xpc_connection_s *)sub_22DE9223C(v24);
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v26;
    v27[3] = sub_22DEA4D88;
    v27[4] = a3;
    v35 = sub_22DEA6388;
    v36 = v27;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    v34 = (ValueMetadata *)&block_descriptor_168;
    v28 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v25, empty, v31, v28);
    _Block_release(v28);
    swift_release();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DEA44D0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  NSObject *v15;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  xpc_object_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  size_t v31;
  ValueMetadata *v32;
  uint64_t (*v33)();
  void (*v34)(ValueMetadata *, uint64_t (*)());
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  xpc_object_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  size_t v53;
  uint64_t v54;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  xpc_object_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _xpc_connection_s *v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  xpc_object_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  dispatch_queue_t v75;
  uint64_t v76;
  xpc_object_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  __int128 v81;
  _QWORD aBlock[3];
  ValueMetadata *v83;
  uint64_t (*v84)();
  _QWORD *v85;
  uint64_t v86;

  v6 = *a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64D8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DEFA938();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(a2 + 16);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  swift_retain();
  v15 = v14;
  LOBYTE(v14) = sub_22DEFA944();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
    goto LABEL_35;
  v73 = v6;
  v74 = v9;
  v75 = v15;
  empty = xpc_dictionary_create_empty();
  LOBYTE(aBlock[0]) = 18;
  NXKey.rawValue.getter();
  LOBYTE(aBlock[0]) = 12;
  NXRequestType.rawValue.getter();
  v18 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  v19 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_string(empty, (const char *)(v18 + 32), (const char *)(v19 + 32));
  swift_release();
  swift_release();
  LOBYTE(aBlock[0]) = 0;
  NXKey.rawValue.getter();
  v20 = *(_QWORD *)(a1 + 24);
  v21 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_uint64(empty, (const char *)(v21 + 32), v20);
  swift_release();
  v22 = *(_BYTE *)(a1 + 73);
  LOBYTE(aBlock[0]) = v22;
  LOBYTE(v86) = 0;
  sub_22DEA2F78();
  v23 = sub_22DEFA9C8();
  v80 = a2;
  if ((v23 & 1) != 0)
  {
    v70 = 0;
  }
  else
  {
    swift_getObjectType();
    v83 = &type metadata for NXServerMode;
    v84 = (uint64_t (*)())sub_22DEA2FBC();
    LOBYTE(aBlock[0]) = v22;
    LOBYTE(v86) = 7;
    NXKey.rawValue.getter();
    sub_22DEFA4C4();
    sub_22DE8D808(&qword_255DC64B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB410], MEMORY[0x24BDCB3C8]);
    v86 = default argument 2 of OS_xpc_object.setObject<A>(_:key:encoder:)();
    OS_xpc_object.setObject<A>(_:key:encoder:)(aBlock);
    v70 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }
  v72 = a3;
  if (*(_QWORD *)(a1 + 64))
  {
    LOBYTE(aBlock[0]) = 5;
    NXKey.rawValue.getter();
    v24 = sub_22DEFA9EC();
    swift_bridgeObjectRelease();
    v25 = sub_22DEFA9EC();
    xpc_dictionary_set_string(empty, (const char *)(v24 + 32), (const char *)(v25 + 32));
    swift_release();
    swift_release();
  }
  v77 = empty;
  v26 = xpc_array_create_empty();
  v76 = a1;
  v27 = *(_QWORD *)(a1 + 88);
  v28 = *(_QWORD *)(v27 + 16);
  v29 = v20;
  if (v28)
  {
    v30 = v27 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22DE83EBC(v30, (uint64_t)aBlock);
      v31 = sub_22DEFA698();
      v32 = v83;
      v33 = v84;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v83);
      v34 = (void (*)(ValueMetadata *, uint64_t (*)()))*((_QWORD *)v33 + 5);
      v35 = v33;
      v20 = v29;
      v34(v32, v35);
      v36 = sub_22DEFA9EC();
      swift_bridgeObjectRelease();
      xpc_array_set_string(v26, v31, (const char *)(v36 + 32));
      swift_release();
      sub_22DE96A80(aBlock, v29);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      v30 += 40;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  LOBYTE(aBlock[0]) = 17;
  NXKey.rawValue.getter();
  v37 = sub_22DEFA9EC();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_value(v77, (const char *)(v37 + 32), v26);
  v71 = v26;
  swift_unknownObjectRelease();
  swift_release();
  v38 = xpc_array_create_empty();
  v39 = *(_QWORD *)(v76 + 80);
  v40 = *(_QWORD *)(v39 + 64);
  v78 = v39 + 64;
  v41 = 1 << *(_BYTE *)(v39 + 32);
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  v43 = v42 & v40;
  v79 = (unint64_t)(v41 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v44 = 0;
  while (1)
  {
    if (v43)
    {
      v45 = __clz(__rbit64(v43));
      v43 &= v43 - 1;
      v46 = v45 | (v44 << 6);
      goto LABEL_15;
    }
    if (__OFADD__(v44++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v44 >= v79)
      goto LABEL_32;
    v56 = *(_QWORD *)(v78 + 8 * v44);
    if (!v56)
      break;
LABEL_27:
    v43 = (v56 - 1) & v56;
    v46 = __clz(__rbit64(v56)) + (v44 << 6);
LABEL_15:
    v47 = 16 * v46;
    v48 = *(_QWORD *)(v39 + 56);
    v49 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * v46);
    v50 = *v49;
    v51 = v49[1];
    v52 = swift_allocObject();
    v81 = *(_OWORD *)(v48 + v47);
    *(_OWORD *)(v52 + 16) = v81;
    swift_bridgeObjectRetain();
    swift_retain();
    v53 = sub_22DEFA698();
    v54 = sub_22DEFA9EC();
    xpc_array_set_string(v38, v53, (const char *)(v54 + 32));
    swift_release();
    v20 = v29;
    sub_22DE95574(v50, v51, v29, (uint64_t)sub_22DEA3024, v52);
    swift_bridgeObjectRelease();
    result = swift_release();
  }
  v57 = v44 + 1;
  if (v44 + 1 >= v79)
    goto LABEL_32;
  v56 = *(_QWORD *)(v78 + 8 * v57);
  if (v56)
    goto LABEL_26;
  v57 = v44 + 2;
  if (v44 + 2 >= v79)
    goto LABEL_32;
  v56 = *(_QWORD *)(v78 + 8 * v57);
  if (v56)
    goto LABEL_26;
  v57 = v44 + 3;
  if (v44 + 3 >= v79)
  {
LABEL_32:
    swift_release();
    LOBYTE(aBlock[0]) = 11;
    NXKey.rawValue.getter();
    v58 = sub_22DEFA9EC();
    v59 = v38;
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v60 = v20;
    v61 = v77;
    xpc_dictionary_set_value(v77, (const char *)(v58 + 32), v59);
    swift_unknownObjectRelease();
    swift_release();
    swift_retain();
    v62 = (uint64_t)v74;
    sub_22DEFA650();
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC64F0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 0, 1, v63);
    swift_beginAccess();
    sub_22DE92048(v62, v60, &qword_255DC64D8, &qword_255DC64F0, &qword_255DC6628);
    v64 = swift_endAccess();
    v65 = (_xpc_connection_s *)sub_22DE9223C(v64);
    v66 = swift_allocObject();
    swift_weakInit();
    v67 = (_QWORD *)swift_allocObject();
    v67[2] = v66;
    v67[3] = sub_22DEA4D34;
    v67[4] = v72;
    v84 = sub_22DEA6388;
    v85 = v67;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE92608;
    v83 = (ValueMetadata *)&block_descriptor_160;
    v68 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v65, v61, v75, v68);
    _Block_release(v68);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  v56 = *(_QWORD *)(v78 + 8 * v57);
  if (v56)
  {
LABEL_26:
    v44 = v57;
    goto LABEL_27;
  }
  while (1)
  {
    v44 = v57 + 1;
    if (__OFADD__(v57, 1))
      break;
    if (v44 >= v79)
      goto LABEL_32;
    v56 = *(_QWORD *)(v78 + 8 * v44);
    ++v57;
    if (v56)
      goto LABEL_27;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void sub_22DEA4D34(void *a1)
{
  sub_22DE98F4C(a1);
}

_QWORD *sub_22DEA4D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *(*v5)(uint64_t *__return_ptr, _QWORD *, uint64_t);
  _QWORD *result;
  uint64_t v7;
  _QWORD v8[2];

  v8[1] = a2;
  v5 = *(_QWORD *(**)(uint64_t *__return_ptr, _QWORD *, uint64_t))(v3 + 16);
  v8[0] = a1;
  result = v5(&v7, v8, a3);
  if (!v4)
    return (_QWORD *)v7;
  return result;
}

uint64_t sub_22DEA4D80()
{
  return objectdestroy_31Tm();
}

void sub_22DEA4D88(void *a1)
{
  sub_22DE950AC(a1);
}

uint64_t sub_22DEA4D90()
{
  return objectdestroy_31Tm();
}

uint64_t objectdestroy_31Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEA4DD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22DEA4E14(void *a1)
{
  sub_22DE937B8(a1);
}

uint64_t sub_22DEA4E1C()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void CUXPCEncodeNSErrorStd(void *a1, void *a2)
{
  id v3;
  id v4;

  v3 = a1;
  v4 = a2;
  CUXPCEncodeNSError();

}

id sub_22DEA4E94(id result, uint64_t a2, unsigned __int8 a3)
{
  unsigned int v3;

  v3 = a3 >> 5;
  if (v3 == 3 || v3 <= 1)
    return result;
  return result;
}

void sub_22DEA4EB8(id a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned int v3;

  v3 = a3 >> 5;
  if (v3 == 3 || v3 <= 1)

}

unint64_t sub_22DEA4EDC()
{
  unint64_t result;

  result = qword_255DC6670;
  if (!qword_255DC6670)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXClientEvent, &type metadata for NXClientEvent);
    atomic_store(result, (unint64_t *)&qword_255DC6670);
  }
  return result;
}

unint64_t sub_22DEA4F20()
{
  unint64_t result;

  result = qword_255DC6678;
  if (!qword_255DC6678)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryEvent, &type metadata for NXDiscoveryEvent);
    atomic_store(result, (unint64_t *)&qword_255DC6678);
  }
  return result;
}

id sub_22DEA4F64(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_22DE8D538(result, a2);
  return result;
}

void sub_22DEA4F78(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    sub_22DE8D55C(a1, a2);
}

unint64_t sub_22DEA4F8C()
{
  unint64_t result;

  result = qword_255DC6688;
  if (!qword_255DC6688)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiscoveryEvent, &type metadata for NXDiscoveryEvent);
    atomic_store(result, (unint64_t *)&qword_255DC6688);
  }
  return result;
}

id sub_22DEA4FD0(id result, id a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 3:
      result = result;
      break;
    case 2:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_22DEA5008(void *a1, id a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 3:

      break;
    case 2:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

unint64_t sub_22DEA5040()
{
  unint64_t result;

  result = qword_255DC6690;
  if (!qword_255DC6690)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXServerEvent, &type metadata for NXServerEvent);
    atomic_store(result, (unint64_t *)&qword_255DC6690);
  }
  return result;
}

uint64_t sub_22DEA5084(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_22DEA5098(a1, a2);
  return a1;
}

uint64_t sub_22DEA5098(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_22DEA50DC()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_5Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  swift_release();
  a1(*(_QWORD *)(v2 + 24));
  a2(*(_QWORD *)(v2 + 40));
  return swift_deallocObject();
}

uint64_t sub_22DEA513C(void *a1, unint64_t a2, char a3)
{
  _QWORD *v3;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  _xpc_connection_s *v11;
  xpc_object_t reply;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  os_log_type_t type;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = (void *)v3[3];
  v9 = v3[4];
  v8 = v3[5];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = *(_xpc_connection_s **)(result + 64);
    if (v11)
    {
      swift_unknownObjectRetain();
      reply = xpc_dictionary_create_reply(v7);
      if (reply)
      {
        v13 = reply;
        if ((a3 & 1) != 0)
        {
          v14 = a1;
          if (qword_255DCD880 != -1)
            swift_once();
          v15 = sub_22DEFA674();
          __swift_project_value_buffer(v15, (uint64_t)qword_255DCD888);
          sub_22DEA5740(a1, a2, 1);
          swift_bridgeObjectRetain();
          sub_22DEA5740(a1, a2, 1);
          swift_bridgeObjectRetain();
          v16 = sub_22DEFA65C();
          v17 = sub_22DEFAB9C();
          if (os_log_type_enabled(v16, v17))
          {
            type = v17;
            v18 = swift_slowAlloc();
            v29 = swift_slowAlloc();
            v31 = v29;
            *(_DWORD *)v18 = 136315394;
            swift_bridgeObjectRetain();
            v30 = sub_22DE8C348(v9, v8, &v31);
            sub_22DEFAC2C();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v18 + 12) = 2080;
            swift_getErrorValue();
            v19 = sub_22DEFAEC0();
            sub_22DE8C348(v19, v20, &v31);
            sub_22DEFAC2C();
            swift_bridgeObjectRelease();
            sub_22DEA574C(a1, a2, 1);
            sub_22DEA574C(a1, a2, 1);
            _os_log_impl(&dword_22DE7A000, v16, type, "Send response failed: requestName=%s, error=%s", (uint8_t *)v18, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x22E321E0C](v29, -1, -1);
            MEMORY[0x22E321E0C](v18, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            sub_22DEA574C(a1, a2, 1);
            sub_22DEA574C(a1, a2, 1);
          }

          v25 = (void *)sub_22DEFA524();
          CUXPCEncodeNSErrorStd(v13, v25);

        }
        else
        {
          sub_22DEA5098((uint64_t)a1, a2);
          if (qword_255DCD880 != -1)
            swift_once();
          v21 = sub_22DEFA674();
          __swift_project_value_buffer(v21, (uint64_t)qword_255DCD888);
          sub_22DEA5740(a1, a2, 0);
          swift_bridgeObjectRetain();
          sub_22DEA5740(a1, a2, 0);
          swift_bridgeObjectRetain();
          v22 = sub_22DEFA65C();
          v23 = sub_22DEFAB84();
          if (os_log_type_enabled(v22, v23))
          {
            v24 = swift_slowAlloc();
            v30 = swift_slowAlloc();
            *(_DWORD *)v24 = 136315394;
            swift_bridgeObjectRetain();
            v31 = sub_22DE8C348(v9, v8, &v30);
            sub_22DEFAC2C();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v24 + 12) = 2048;
            __asm { BR              X10 }
          }
          sub_22DEA574C(a1, a2, 0);
          swift_bridgeObjectRelease_n();
          sub_22DEA574C(a1, a2, 0);

          LOBYTE(v30) = 19;
          NXKey.rawValue.getter();
          v26 = (void *)sub_22DEFA53C();
          v27 = sub_22DEFA9EC();
          swift_bridgeObjectRelease();
          xpc_dictionary_set_value(v13, (const char *)(v27 + 32), v26);
          swift_release();
          swift_unknownObjectRelease();
        }
        sub_22DEA574C(a1, a2, a3 & 1);
        xpc_connection_send_message(v11, v13);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

id sub_22DEA5740(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)sub_22DEA5098((uint64_t)a1, a2);
}

void sub_22DEA574C(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_22DEA2F04((uint64_t)a1, a2);
}

uint64_t sub_22DEA5758(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
    return swift_release();
  return result;
}

uint64_t sub_22DEA576C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA59C() - 8) + 80);
  return sub_22DE9DFD0(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t objectdestroy_184Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22DEFA59C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DEA5830(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA59C() - 8) + 80);
  return sub_22DE9E7A4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

uint64_t sub_22DEA5884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22DEFA59C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DEA5908(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;

  v13 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA59C() - 8) + 80);
  return sub_22DE9EBB8(a1, a2, a3, a4, a5, a6, *(void **)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v6 + ((v13 + 48) & ~v13));
}

uint64_t sub_22DEA59A0()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

void sub_22DEA59AC(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t Strong;
  _xpc_connection_s *v5;
  id v6;
  xpc_object_t v7;

  v3 = *(void **)(v1 + 24);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = *(_xpc_connection_s **)(Strong + 64);
    if (v5)
    {
      if (a1)
      {
        swift_unknownObjectRetain();
        v6 = a1;
        sub_22DE99D1C(v3, a1);
        swift_unknownObjectRelease();
        swift_release();

        return;
      }
      swift_unknownObjectRetain();
      v7 = sub_22DEA5A94(v3);
      if (v7)
      {
        xpc_connection_send_message(v5, v7);
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        return;
      }
      swift_unknownObjectRelease();
    }
    swift_release();
  }
}

xpc_object_t sub_22DEA5A94(void *a1)
{
  xpc_object_t result;
  Swift::String v2;
  Swift::String_optional v3;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  result = xpc_dictionary_create_reply(a1);
  if (!result)
  {
    swift_getObjectType();
    LOBYTE(v11) = 18;
    v2._countAndFlagsBits = NXKey.rawValue.getter();
    v3 = OS_xpc_object.string(_:)(v2);
    swift_bridgeObjectRelease();
    if (v3.value._object)
      countAndFlagsBits = v3.value._countAndFlagsBits;
    else
      countAndFlagsBits = 7104878;
    if (v3.value._object)
      object = v3.value._object;
    else
      object = (void *)0xE300000000000000;
    if (qword_255DCD880 != -1)
      swift_once();
    v6 = sub_22DEFA674();
    __swift_project_value_buffer(v6, (uint64_t)qword_255DCD888);
    swift_bridgeObjectRetain();
    v7 = sub_22DEFA65C();
    v8 = sub_22DEFAB9C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v11 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_22DE8C348(countAndFlagsBits, (unint64_t)object, &v11);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22DE7A000, v7, v8, "### XPC create reply failed: requestType='%s'", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v10, -1, -1);
      MEMORY[0x22E321E0C](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return result;
}

uint64_t sub_22DEA5C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_22DEFA59C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  sub_22DEA2F04(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8));

  return swift_deallocObject();
}

void sub_22DEA5D58()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_22DEFA59C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_22DE9EF50(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_22DEA5DD8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEA5E04(void *a1, unint64_t a2, char a3)
{
  uint64_t *v3;

  return sub_22DE9F354(a1, a2, a3 & 1, v3[2], v3[3], v3[4]);
}

void sub_22DEA5E14()
{
  uint64_t v0;
  void (*v1)(id, unint64_t, uint64_t);
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  _BYTE v7[2];

  v1 = *(void (**)(id, unint64_t, uint64_t))(v0 + 16);
  v2 = (id)CUXPCDecodeNSErrorIfNeeded();
  if (v2)
    goto LABEL_4;
  swift_getObjectType();
  v7[1] = 19;
  NXKey.rawValue.getter();
  v3 = OS_xpc_object.data(_:)();
  v5 = v4;
  swift_bridgeObjectRelease();
  if (v5 >> 60 == 15)
  {
    type metadata accessor for NXError();
    v7[0] = 1;
    v2 = NXError.__allocating_init(_:_:_:)((uint64_t)v7, 0xD00000000000001ELL, 0x800000022DF029B0, 0);
LABEL_4:
    swift_willThrow();
    v6 = v2;
    v1(v2, 0, 1);

    return;
  }
  sub_22DEA5098(v3, v5);
  v1((id)v3, v5, 0);
  sub_22DEA326C(v3, v5);
  sub_22DEA326C(v3, v5);
}

uint64_t sub_22DEA5F60()
{
  uint64_t v0;

  swift_release();
  sub_22DEA574C(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_22DEA5F90()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

id sub_22DEA5FBC(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void sub_22DEA5FD0(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

unint64_t sub_22DEA5FE4()
{
  unint64_t result;

  result = qword_255DC66B8;
  if (!qword_255DC66B8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXOperationEvent, &type metadata for NXOperationEvent);
    atomic_store(result, (unint64_t *)&qword_255DC66B8);
  }
  return result;
}

uint64_t sub_22DEA6028()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_22DEA6038()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t objectdestroy_15Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

void sub_22DEA607C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t Strong;
  id v5;
  _xpc_connection_s *v6;
  xpc_object_t v7;

  v3 = *(void **)(v1 + 24);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (a1)
    {
      v5 = a1;
      sub_22DE99D1C(v3, a1);
      swift_release();

      return;
    }
    v6 = *(_xpc_connection_s **)(Strong + 64);
    if (v6)
    {
      swift_unknownObjectRetain();
      v7 = sub_22DEA5A94(v3);
      if (v7)
      {
        xpc_connection_send_message(v6, v7);
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      swift_unknownObjectRelease();
    }
    swift_release();
  }
}

uint64_t sub_22DEA6158(uint64_t a1, uint64_t a2)
{
  assignWithTake for NXOperationDataClientWeak(a2, a1);
  return a2;
}

_QWORD *destroy for NXXPCClient.OperationHandlerContext(_QWORD *result)
{
  if (*result)
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *_s5Nexus11NXXPCClientC23OperationHandlerContextVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  if (*a2)
  {
    v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for NXXPCClient.OperationHandlerContext(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for NXXPCClient.OperationHandlerContext(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NXXPCClient.OperationHandlerContext(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXXPCClient.OperationHandlerContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXXPCClient.OperationHandlerContext()
{
  return &type metadata for NXXPCClient.OperationHandlerContext;
}

uint64_t sub_22DEA6480()
{
  uint64_t v0;

  v0 = sub_22DEFA674();
  __swift_allocate_value_buffer(v0, qword_255DCD8A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DCD8A8);
  sub_22DEF4E10();
  swift_bridgeObjectRetain();
  return sub_22DEFA668();
}

uint64_t sub_22DEA6500@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DE90090;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DE875A4(v4);
}

uint64_t sub_22DEA6588(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DE90090;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;
  *(_QWORD *)(v7 + 48) = v5;
  sub_22DE875A4(v3);
  return sub_22DE87604(v8);
}

uint64_t NXServer.eventHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  sub_22DE875A4(v1);
  return v1;
}

uint64_t NXServer.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return sub_22DE87604(v5);
}

uint64_t (*NXServer.eventHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t NXServer.idsServiceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NXServer.xpcClient.getter()
{
  return swift_retain();
}

void static NXServer.registerLaunchOnDemand()()
{
  void *v0;
  uint64_t v1;
  _QWORD v2[6];

  sub_22DEF4EE0();
  v2[4] = sub_22DEA67E4;
  v2[5] = 0;
  v2[0] = MEMORY[0x24BDAC760];
  v2[1] = 1107296256;
  v2[2] = sub_22DE92608;
  v2[3] = &block_descriptor_1;
  v0 = _Block_copy(v2);
  v1 = sub_22DEFA9EC();
  xpc_set_event_stream_handler((const char *)(v1 + 32), 0, v0);
  swift_release();
  _Block_release(v0);
}

void sub_22DEA67E4(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  xpc_object_t reply;
  void *v10;
  _xpc_connection_s *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  if (qword_255DCD8A0 != -1)
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DCD8A8);
  swift_unknownObjectRetain_n();
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFABA8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v24 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_getObjectType();
    v7 = sub_22DEFAB78();
    sub_22DE8C348(v7, v8, &v24);
    sub_22DEFAC2C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DE7A000, v3, v4, "XPC launch event: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v6, -1, -1);
    MEMORY[0x22E321E0C](v5, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  reply = xpc_dictionary_create_reply(a1);
  if (reply)
  {
    v10 = reply;
    v11 = xpc_dictionary_get_remote_connection(a1);
    if (v11)
    {
      xpc_connection_send_message(v11, v10);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    swift_unknownObjectRetain_n();
    v18 = sub_22DEFA65C();
    v19 = sub_22DEFAB9C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v24 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_getObjectType();
      v22 = sub_22DEFAB78();
      sub_22DE8C348(v22, v23, &v24);
      sub_22DEFAC2C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DE7A000, v18, v19, "### XPC launch event get connection failed: event=%s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v21, -1, -1);
      MEMORY[0x22E321E0C](v20, -1, -1);

      swift_unknownObjectRelease();
      return;
    }

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRetain_n();
    v12 = sub_22DEFA65C();
    v13 = sub_22DEFAB9C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v24 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_getObjectType();
      v16 = sub_22DEFAB78();
      sub_22DE8C348(v16, v17, &v24);
      sub_22DEFAC2C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DE7A000, v12, v13, "### XPC launch event create reply failed: event=%s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v15, -1, -1);
      MEMORY[0x22E321E0C](v14, -1, -1);

      return;
    }

  }
  swift_unknownObjectRelease_n();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t NXServer.__allocating_init(idsServiceID:mode:requestHandlers:operationCreators:dispatchQueue:xpcEndpoint:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  NXServer.init(idsServiceID:mode:requestHandlers:operationCreators:dispatchQueue:xpcEndpoint:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t NXServer.init(idsServiceID:mode:requestHandlers:operationCreators:dispatchQueue:xpcEndpoint:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v15;
  uint64_t v16;
  id v17;

  v8 = v7;
  v15 = *a3;
  *(_BYTE *)(v8 + 16) = 0;
  v16 = CUNextID64();
  *(_BYTE *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 40) = 0;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 24) = v16;
  *(_QWORD *)(v8 + 32) = a6;
  *(_BYTE *)(v8 + 73) = v15;
  *(_QWORD *)(v8 + 56) = a1;
  *(_QWORD *)(v8 + 64) = a2;
  *(_QWORD *)(v8 + 80) = a5;
  *(_QWORD *)(v8 + 88) = a4;
  type metadata accessor for NXXPCClient();
  v17 = a6;
  *(_QWORD *)(v8 + 96) = NXXPCClient.__allocating_init(dispatchQueue:xpcEndpoint:)((uint64_t)a6, a7);
  return v8;
}

uint64_t NXServer.__allocating_init(idsServiceID:mode:requestHandlers:operationCreators:xpcClient:)(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v12 = swift_allocObject();
  LOBYTE(a3) = *a3;
  *(_BYTE *)(v12 + 16) = 0;
  v13 = CUNextID64();
  *(_BYTE *)(v12 + 72) = 0;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  v14 = *(void **)(a6 + 16);
  *(_QWORD *)(v12 + 24) = v13;
  *(_QWORD *)(v12 + 32) = v14;
  *(_BYTE *)(v12 + 73) = (_BYTE)a3;
  *(_QWORD *)(v12 + 56) = a1;
  *(_QWORD *)(v12 + 64) = a2;
  *(_QWORD *)(v12 + 80) = a5;
  *(_QWORD *)(v12 + 88) = a4;
  *(_QWORD *)(v12 + 96) = a6;
  v15 = v14;
  return v12;
}

uint64_t NXServer.init(idsServiceID:mode:requestHandlers:operationCreators:xpcClient:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v12;
  void *v13;
  id v14;

  v12 = *a3;
  *(_BYTE *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = CUNextID64();
  *(_BYTE *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  v13 = *(void **)(a6 + 16);
  *(_QWORD *)(v6 + 32) = v13;
  *(_BYTE *)(v6 + 73) = v12;
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = a2;
  *(_QWORD *)(v6 + 80) = a5;
  *(_QWORD *)(v6 + 88) = a4;
  *(_QWORD *)(v6 + 96) = a6;
  v14 = v13;
  return v6;
}

uint64_t NXServer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_255DCD8A0 != -1)
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DCD8A8);
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFAB90();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DE7A000, v3, v4, "deinit", v5, 2u);
    MEMORY[0x22E321E0C](v5, -1, -1);
  }

  sub_22DE98050((_QWORD *)v1, 0, nullsub_1, 0);
  sub_22DE87604(*(_QWORD *)(v1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t NXServer.__deallocating_deinit()
{
  NXServer.deinit();
  return swift_deallocClassInstance();
}

uint64_t NXServer.description.getter()
{
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0x4449746E65696C63;
}

Swift::Void __swiftcall NXServer.activate()()
{
  sub_22DEA7148((uint64_t)sub_22DEA8EB4, (uint64_t)&block_descriptor_3_0);
}

uint64_t sub_22DEA70B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  void (*v6)(_QWORD *);
  _QWORD v7[2];
  char v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = swift_beginAccess();
  v6 = *(void (**)(_QWORD *))(v1 + 40);
  if (v6)
  {
    v7[0] = v2;
    v7[1] = v3;
    v8 = v4;
    swift_retain();
    v6(v7);
    return sub_22DE87604((uint64_t)v6);
  }
  return result;
}

Swift::Void __swiftcall NXServer.invalidate()()
{
  sub_22DEA7148((uint64_t)sub_22DEA92C8, (uint64_t)&block_descriptor_6);
}

uint64_t sub_22DEA7148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_22DEFA914();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DEFA92C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v5 + 32);
  aBlock[4] = a1;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = a2;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_22DEFA920();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE8CA18();
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v14, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_22DEA72FC()
{
  return NXServer.description.getter();
}

uint64_t NXServerMode.description.getter()
{
  char *v0;

  return *(_QWORD *)&aDefault_1[8 * *v0];
}

BOOL static NXServerMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NXServerMode.hash(into:)()
{
  return sub_22DEFAEE4();
}

uint64_t sub_22DEA737C(char a1)
{
  return *(_QWORD *)&aDefault_1[8 * a1];
}

uint64_t sub_22DEA739C()
{
  char *v0;

  return sub_22DEA737C(*v0);
}

uint64_t sub_22DEA73A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DEA96FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DEA73C8()
{
  sub_22DEA9454();
  return sub_22DEFAF44();
}

uint64_t sub_22DEA73F0()
{
  sub_22DEA9454();
  return sub_22DEFAF50();
}

uint64_t sub_22DEA7418()
{
  sub_22DEA9520();
  return sub_22DEFAF44();
}

uint64_t sub_22DEA7440()
{
  sub_22DEA9520();
  return sub_22DEFAF50();
}

uint64_t sub_22DEA7468()
{
  sub_22DEA9498();
  return sub_22DEFAF44();
}

uint64_t sub_22DEA7490()
{
  sub_22DEA9498();
  return sub_22DEFAF50();
}

uint64_t sub_22DEA74B8()
{
  sub_22DEA94DC();
  return sub_22DEFAF44();
}

uint64_t sub_22DEA74E0()
{
  sub_22DEA94DC();
  return sub_22DEFAF50();
}

uint64_t NXServerMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6770);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6778);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6780);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6788);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEA9454();
  sub_22DEFAF2C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_22DEA94DC();
      sub_22DEFADE8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_22DEA9498();
      v16 = v21;
      sub_22DEFADE8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_22DEA9520();
    sub_22DEFADE8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t NXServerMode.hashValue.getter()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t NXServerMode.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6790);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6798);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC67A0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC67A8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEA9454();
  v13 = v41;
  sub_22DEFAF20();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_22DEFADDC();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_22DEFACBC();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v25 = &type metadata for NXServerMode;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_22DEA94DC();
      v20 = v9;
      sub_22DEFAD7C();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_22DEA9498();
      v28 = v15;
      sub_22DEFAD7C();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_22DEA9520();
    sub_22DEFAD7C();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_22DEA7BF4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return NXServerMode.init(from:)(a1, a2);
}

uint64_t sub_22DEA7C08(_QWORD *a1)
{
  return NXServerMode.encode(to:)(a1);
}

void NXServerEvent.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_22DEA7C5C()
{
  void *v0;
  void *v1;
  unsigned __int8 v2;
  char v4[14];
  __int16 v5;

  if (!v1)
    return 0x73203A6465646E45;
  strcpy(v4, "Ended: error=");
  v5 = -4864;
  swift_getErrorValue();
  sub_22DEA4FD0(v1, v0, v2);
  sub_22DEA4FD0(v1, v0, v2);
  sub_22DEFAEC0();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEA5008(v1, v0, v2);
  sub_22DEA5008(v1, v0, v2);
  return *(_QWORD *)v4;
}

uint64_t NXServerEvent.init(xpcObject:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  Swift::String v3;
  Swift::String_optional v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  const char *v11;
  unint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  char v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  unint64_t v18;
  char v19;
  Swift::String_optional v20;
  char v21;

  swift_getObjectType();
  v3._countAndFlagsBits = 1701869940;
  v3._object = (void *)0xE400000000000000;
  v4 = OS_xpc_object.string(_:)(v3);
  if (v4.value._object)
  {
    if (v4.value._countAndFlagsBits == 0x64657472617473 && v4.value._object == (void *)0xE700000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v6 = 0;
      v7 = 0;
      v8 = 0x80;
LABEL_6:
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 16) = v8;
      return result;
    }
    if (v4.value._countAndFlagsBits == 0x6465646E65 && v4.value._object == (void *)0xE500000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      v6 = (uint64_t)(id)CUXPCDecodeNSErrorIfNeeded();
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v7 = 0;
      v8 = 0;
      goto LABEL_6;
    }
    if (v4.value._countAndFlagsBits == 0x726F727265 && v4.value._object == (void *)0xE500000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      v9 = (id)CUXPCDecodeNSErrorIfNeeded();
      if (v9)
      {
        v6 = (uint64_t)v9;
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        v7 = 0;
        v8 = 32;
        goto LABEL_6;
      }
      type metadata accessor for NXError();
      LOBYTE(v17) = 2;
      v10 = 0xD00000000000001ALL;
      v11 = "Server error without error";
    }
    else
    {
      if (v4.value._countAndFlagsBits == 0x6574726174736572 && v4.value._object == (void *)0xE900000000000064
        || (sub_22DEFAE54() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        v7 = 0;
        v8 = 0x80;
        v6 = 1;
        goto LABEL_6;
      }
      if (v4.value._countAndFlagsBits == 0xD000000000000015 && v4.value._object == (void *)0x800000022DF02AF0
        || (sub_22DEFAE54() & 1) != 0)
      {
        sub_22DEFA4A0();
        v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB268];
        sub_22DEA9630();
        sub_22DE8D808(&qword_255DC6680, v14, MEMORY[0x24BDCB230]);
        v20.value._countAndFlagsBits = default argument 1 of OS_xpc_object.object<A, B>(key:decoder:)();
        OS_xpc_object.object<A, B>(key:decoder:)((uint64_t)&type metadata for NXAuthenticationPresentInfo, (uint64_t)&v17);
        swift_release();
        if (v1)
          goto LABEL_21;
        v7 = v18;
        if (v18)
        {
          v15 = v19;
          v6 = v17;
          swift_bridgeObjectRelease();
          result = swift_unknownObjectRelease();
          v8 = v15 | 0x40;
          goto LABEL_6;
        }
        type metadata accessor for NXError();
        LOBYTE(v17) = 2;
        v10 = 0xD000000000000019;
        v11 = "No authentication present";
      }
      else
      {
        if ((v4.value._countAndFlagsBits != 0xD000000000000017 || v4.value._object != (void *)0x800000022DF02B10)
          && (sub_22DEFAE54() & 1) == 0)
        {
          type metadata accessor for NXError();
          v21 = 2;
          v17 = 0;
          v18 = 0xE000000000000000;
          sub_22DEFAC98();
          sub_22DEFAA10();
          v20 = v4;
          sub_22DEFAE48();
          v10 = 0;
          v12 = 0xE000000000000000;
          v13 = &v21;
          goto LABEL_20;
        }
        sub_22DEFA4A0();
        v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB268];
        sub_22DEA95EC();
        sub_22DE8D808(&qword_255DC6680, v16, MEMORY[0x24BDCB230]);
        v20.value._countAndFlagsBits = default argument 1 of OS_xpc_object.object<A, B>(key:decoder:)();
        OS_xpc_object.object<A, B>(key:decoder:)((uint64_t)&type metadata for NXAuthenticationCompletedInfo, (uint64_t)&v17);
        if (v1)
        {
          swift_release();
          goto LABEL_21;
        }
        swift_release();
        v6 = v17;
        if (v17 != 1)
        {
          swift_bridgeObjectRelease();
          result = swift_unknownObjectRelease();
          v7 = 0;
          v8 = 96;
          goto LABEL_6;
        }
        type metadata accessor for NXError();
        LOBYTE(v17) = 2;
        v10 = 0xD000000000000020;
        v11 = "No authentication completed info";
      }
    }
    v12 = (unint64_t)(v11 - 32) | 0x8000000000000000;
    v13 = (char *)&v17;
LABEL_20:
    NXError.__allocating_init(_:_:_:)((uint64_t)v13, v10, v12, 0);
    swift_willThrow();
LABEL_21:
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  type metadata accessor for NXError();
  LOBYTE(v17) = 2;
  NXError.__allocating_init(_:_:_:)((uint64_t)&v17, 0xD000000000000019, 0x800000022DF02B70, 0);
  swift_willThrow();
  return swift_unknownObjectRelease();
}

uint64_t sub_22DEA84CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22DEA8504 + 4 * byte_22DEFE645[a1]))(0xD000000000000015, 0x800000022DF02AF0);
}

uint64_t sub_22DEA8504()
{
  return 0x64657472617473;
}

uint64_t sub_22DEA851C()
{
  return 0x6465646E65;
}

uint64_t sub_22DEA8530()
{
  return 0x726F727265;
}

uint64_t sub_22DEA8544()
{
  return 0x6574726174736572;
}

uint64_t sub_22DEA8560(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_22DEA8578()
{
  return 1701869940;
}

uint64_t sub_22DEA8588()
{
  return 1868983913;
}

void NXServerEvent.xpcObjectRepresentation.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  xpc_dictionary_create_empty();
  __asm { BR              X10 }
}

void *sub_22DEA85E8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void *v26;
  void *v27;
  void *v28;
  unsigned __int8 v29;
  id v30;
  id v31;
  void *v32;

  v30 = v28;
  xpc_dictionary_set_string(v26, "type", "ended");
  if (v28)
  {
    v31 = v28;
    v32 = (void *)sub_22DEFA524();
    CUXPCEncodeNSErrorStd(v26, v32);
    sub_22DEA5008(v28, v27, v29);

    sub_22DEA5008(v28, v27, v29);
  }
  return v26;
}

uint64_t sub_22DEA88B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22DEA88E8 + 4 * byte_22DEFE652[a1]))(0xD000000000000015, 0x800000022DF02AF0);
}

uint64_t sub_22DEA88E8()
{
  return 0x64657472617473;
}

uint64_t sub_22DEA8900()
{
  return 0x6465646E65;
}

uint64_t sub_22DEA8914()
{
  return 0x726F727265;
}

uint64_t sub_22DEA8928()
{
  return 0x6574726174736572;
}

uint64_t sub_22DEA8944(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_22DEA895C()
{
  return 1701869940;
}

uint64_t sub_22DEA896C()
{
  return 1868983913;
}

void sub_22DEA897C(char *a1)
{
  sub_22DEA8988(*a1);
}

void sub_22DEA8988(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22DEA89D4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22DEA8A84 + 4 * byte_22DEFE662[a2]))(0x64657472617473);
}

uint64_t sub_22DEA8A84(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64657472617473 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_22DEA8B90()
{
  char *v0;

  sub_22DEA8C98(0, *v0);
}

void sub_22DEA8B9C(uint64_t a1)
{
  char *v1;

  sub_22DEA8BA4(a1, *v1);
}

void sub_22DEA8BA4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22DEA8BE8()
{
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

void sub_22DEA8C90(uint64_t a1)
{
  char *v1;

  sub_22DEA8C98(a1, *v1);
}

void sub_22DEA8C98(uint64_t a1, char a2)
{
  sub_22DEFAED8();
  __asm { BR              X10 }
}

uint64_t sub_22DEA8CEC()
{
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEA8DB0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DEA9838();
  *a1 = result;
  return result;
}

uint64_t sub_22DEA8DDC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22DEA84CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22DEA8E04()
{
  unsigned __int8 *v0;

  return sub_22DEA88B0(*v0);
}

uint64_t sub_22DEA8E0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DEA9838();
  *a1 = result;
  return result;
}

void sub_22DEA8E30(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_22DEA8E3C()
{
  sub_22DEAA0B8();
  return sub_22DEFAF44();
}

uint64_t sub_22DEA8E64()
{
  sub_22DEAA0B8();
  return sub_22DEFAF50();
}

uint64_t sub_22DEA8E8C@<X0>(uint64_t a1@<X8>)
{
  return NXServerEvent.init(xpcObject:)(a1);
}

void sub_22DEA8EA0()
{
  NXServerEvent.xpcObjectRepresentation.getter();
}

void sub_22DEA8EB4()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void (*v16)(_QWORD *);
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  char v20;
  uint64_t v21[3];

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
  {
    v1 = (_QWORD *)v0;
    *(_BYTE *)(v0 + 16) = 1;
    if ((*(_BYTE *)(v0 + 72) & 1) != 0)
    {
      LOBYTE(v21[0]) = 8;
      type metadata accessor for NXError();
      v2 = NXError.__allocating_init(_:_:_:)((uint64_t)v21, 0x6164696C61766E49, 0xEB00000000646574, 0);
      if (qword_255DCD8A0 != -1)
        swift_once();
      v3 = sub_22DEFA674();
      __swift_project_value_buffer(v3, (uint64_t)qword_255DCD8A8);
      v4 = v2;
      swift_retain();
      v5 = v4;
      v6 = sub_22DEFA65C();
      v7 = sub_22DEFAB9C();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = swift_slowAlloc();
        v9 = swift_slowAlloc();
        v21[0] = v9;
        *(_DWORD *)v8 = 134218242;
        sub_22DEFAC2C();
        swift_release();
        *(_WORD *)(v8 + 12) = 2080;
        sub_22DE8D808((unint64_t *)&qword_255DC5ED0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
        v10 = sub_22DEFAEC0();
        v19[0] = sub_22DE8C348(v10, v11, v21);
        sub_22DEFAC2C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v6, v7, "### Activate failed: clientID=%llu, error=%s", (uint8_t *)v8, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v9, -1, -1);
        MEMORY[0x22E321E0C](v8, -1, -1);

      }
      else
      {

        swift_release();
      }
      swift_beginAccess();
      v16 = (void (*)(_QWORD *))v1[5];
      if (v16)
      {
        v19[0] = v5;
        v19[1] = 0;
        v20 = 0;
        v5 = v5;
        sub_22DE875A4((uint64_t)v16);
        v16(v19);
        sub_22DE87604((uint64_t)v16);

      }
      v17 = v1[5];
      v1[5] = 0;
      v1[6] = 0;
      sub_22DE87604(v17);
    }
    else
    {
      if (qword_255DCD8A0 != -1)
        swift_once();
      v12 = sub_22DEFA674();
      __swift_project_value_buffer(v12, (uint64_t)qword_255DCD8A8);
      swift_retain();
      v13 = sub_22DEFA65C();
      v14 = sub_22DEFABA8();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v15 = 134217984;
        v21[0] = v1[3];
        sub_22DEFAC2C();
        swift_release();
        _os_log_impl(&dword_22DE7A000, v13, v14, "Activate: clientID=%llu", v15, 0xCu);
        MEMORY[0x22E321E0C](v15, -1, -1);

      }
      else
      {

        swift_release();
      }
      v18 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_22DE9770C((uint64_t)v1, (uint64_t)sub_22DEAA4B8, v18);
      swift_release_n();
    }
  }
}

void sub_22DEA92C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  if ((*(_BYTE *)(v0 + 72) & 1) == 0)
  {
    v1 = (_QWORD *)v0;
    *(_BYTE *)(v0 + 72) = 1;
    if (qword_255DCD8A0 != -1)
      swift_once();
    v2 = sub_22DEFA674();
    __swift_project_value_buffer(v2, (uint64_t)qword_255DCD8A8);
    swift_retain();
    v3 = sub_22DEFA65C();
    v4 = sub_22DEFABA8();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      sub_22DEFAC2C();
      swift_release();
      _os_log_impl(&dword_22DE7A000, v3, v4, "Invalidate: clientID=%llu", v5, 0xCu);
      MEMORY[0x22E321E0C](v5, -1, -1);
    }
    else
    {
      swift_release();
    }

    v6 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_22DE98050(v1, 1, (uint64_t (*)(_QWORD))sub_22DEAA120, v6);
    swift_release_n();
  }
}

unint64_t sub_22DEA9454()
{
  unint64_t result;

  result = qword_255DCD8C0;
  if (!qword_255DCD8C0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFECCC, &type metadata for NXServerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD8C0);
  }
  return result;
}

unint64_t sub_22DEA9498()
{
  unint64_t result;

  result = qword_255DCD8C8;
  if (!qword_255DCD8C8)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEC7C, &type metadata for NXServerMode.PairingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD8C8);
  }
  return result;
}

unint64_t sub_22DEA94DC()
{
  unint64_t result;

  result = qword_255DCD8D0;
  if (!qword_255DCD8D0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEC2C, &type metadata for NXServerMode.SetupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCD8D0);
  }
  return result;
}

unint64_t sub_22DEA9520()
{
  unint64_t result;

  result = qword_255DCD8D8[0];
  if (!qword_255DCD8D8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEBDC, &type metadata for NXServerMode.DefaultCodingKeys);
    atomic_store(result, qword_255DCD8D8);
  }
  return result;
}

unint64_t sub_22DEA9564()
{
  unint64_t result;

  result = qword_255DC67B0;
  if (!qword_255DC67B0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationCompletedInfo, &type metadata for NXAuthenticationCompletedInfo);
    atomic_store(result, (unint64_t *)&qword_255DC67B0);
  }
  return result;
}

unint64_t sub_22DEA95A8()
{
  unint64_t result;

  result = qword_255DC67B8;
  if (!qword_255DC67B8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationPresentInfo, &type metadata for NXAuthenticationPresentInfo);
    atomic_store(result, (unint64_t *)&qword_255DC67B8);
  }
  return result;
}

unint64_t sub_22DEA95EC()
{
  unint64_t result;

  result = qword_255DC67C0;
  if (!qword_255DC67C0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationCompletedInfo, &type metadata for NXAuthenticationCompletedInfo);
    atomic_store(result, (unint64_t *)&qword_255DC67C0);
  }
  return result;
}

unint64_t sub_22DEA9630()
{
  unint64_t result;

  result = qword_255DC67C8;
  if (!qword_255DC67C8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationPresentInfo, &type metadata for NXAuthenticationPresentInfo);
    atomic_store(result, (unint64_t *)&qword_255DC67C8);
  }
  return result;
}

unint64_t sub_22DEA9674()
{
  unint64_t result;

  result = qword_255DC67D0;
  if (!qword_255DC67D0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationCompletedInfo, &type metadata for NXAuthenticationCompletedInfo);
    atomic_store(result, (unint64_t *)&qword_255DC67D0);
  }
  return result;
}

unint64_t sub_22DEA96B8()
{
  unint64_t result;

  result = qword_255DC67D8;
  if (!qword_255DC67D8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationPresentInfo, &type metadata for NXAuthenticationPresentInfo);
    atomic_store(result, (unint64_t *)&qword_255DC67D8);
  }
  return result;
}

uint64_t sub_22DEA96FC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v3 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7075746573 && a2 == 0xE500000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E6972696170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_22DEA9838()
{
  unint64_t v0;

  v0 = sub_22DEFAD70();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

unint64_t sub_22DEA9888()
{
  unint64_t result;

  result = qword_255DC67E0;
  if (!qword_255DC67E0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE7C8, &type metadata for NXServerEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC67E0);
  }
  return result;
}

unint64_t sub_22DEA98D0()
{
  unint64_t result;

  result = qword_255DC67E8;
  if (!qword_255DC67E8)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE8E0, &type metadata for NXServerEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC67E8);
  }
  return result;
}

unint64_t sub_22DEA9918()
{
  unint64_t result;

  result = qword_255DC67F0;
  if (!qword_255DC67F0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFE8B8, &type metadata for NXServerEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC67F0);
  }
  return result;
}

uint64_t type metadata accessor for NXServer()
{
  return objc_opt_self();
}

uint64_t method lookup function for NXServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXServer.__allocating_init(idsServiceID:mode:requestHandlers:operationCreators:dispatchQueue:xpcEndpoint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of NXServer.__allocating_init(idsServiceID:mode:requestHandlers:operationCreators:xpcClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for NXServerMode()
{
  return &type metadata for NXServerMode;
}

void destroy for NXServerEvent(uint64_t a1)
{
  sub_22DEA5008(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Nexus13NXServerEventOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEA4FD0(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NXServerEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEA4FD0(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_22DEA5008(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NXServerEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_22DEA5008(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXServerEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 12);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 1) & 8 | (*(unsigned __int8 *)(a1 + 16) >> 5)) ^ 0xF;
  if (v3 >= 0xB)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NXServerEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 12;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 16 * (((-a2 & 8) != 0) - 2 * a2);
    }
  }
  return result;
}

uint64_t sub_22DEA9B48(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 16);
  v2 = (char)v1;
  v3 = v1 >> 5;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_22DEA9B68(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_22DEA9B78(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 0xF | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXServerEvent()
{
  return &type metadata for NXServerEvent;
}

uint64_t getEnumTagSinglePayload for NXServerEvent.XPCKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXServerEvent.XPCKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22DEA9C90 + 4 * byte_22DEFE687[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22DEA9CC4 + 4 * byte_22DEFE682[v4]))();
}

uint64_t sub_22DEA9CC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEA9CCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEA9CD4);
  return result;
}

uint64_t sub_22DEA9CE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEA9CE8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22DEA9CEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEA9CF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXServerEvent.XPCKeys()
{
  return &type metadata for NXServerEvent.XPCKeys;
}

uint64_t _s5Nexus12NXServerModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22DEA9D5C + 4 * byte_22DEFE691[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22DEA9D90 + 4 * byte_22DEFE68C[v4]))();
}

uint64_t sub_22DEA9D90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEA9D98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEA9DA0);
  return result;
}

uint64_t sub_22DEA9DAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEA9DB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22DEA9DB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEA9DC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXServerMode.CodingKeys()
{
  return &type metadata for NXServerMode.CodingKeys;
}

ValueMetadata *type metadata accessor for NXServerMode.DefaultCodingKeys()
{
  return &type metadata for NXServerMode.DefaultCodingKeys;
}

ValueMetadata *type metadata accessor for NXServerMode.SetupCodingKeys()
{
  return &type metadata for NXServerMode.SetupCodingKeys;
}

ValueMetadata *type metadata accessor for NXServerMode.PairingCodingKeys()
{
  return &type metadata for NXServerMode.PairingCodingKeys;
}

unint64_t sub_22DEA9E10()
{
  unint64_t result;

  result = qword_255DCE360[0];
  if (!qword_255DCE360[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEBB4, &type metadata for NXServerMode.CodingKeys);
    atomic_store(result, qword_255DCE360);
  }
  return result;
}

unint64_t sub_22DEA9E58()
{
  unint64_t result;

  result = qword_255DCE470;
  if (!qword_255DCE470)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEAD4, &type metadata for NXServerMode.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCE470);
  }
  return result;
}

unint64_t sub_22DEA9EA0()
{
  unint64_t result;

  result = qword_255DCE478;
  if (!qword_255DCE478)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEAFC, &type metadata for NXServerMode.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCE478);
  }
  return result;
}

unint64_t sub_22DEA9EE8()
{
  unint64_t result;

  result = qword_255DCE500;
  if (!qword_255DCE500)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEA84, &type metadata for NXServerMode.SetupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCE500);
  }
  return result;
}

unint64_t sub_22DEA9F30()
{
  unint64_t result;

  result = qword_255DCE508[0];
  if (!qword_255DCE508[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEAAC, &type metadata for NXServerMode.SetupCodingKeys);
    atomic_store(result, qword_255DCE508);
  }
  return result;
}

unint64_t sub_22DEA9F78()
{
  unint64_t result;

  result = qword_255DCE590;
  if (!qword_255DCE590)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEA34, &type metadata for NXServerMode.PairingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCE590);
  }
  return result;
}

unint64_t sub_22DEA9FC0()
{
  unint64_t result;

  result = qword_255DCE598[0];
  if (!qword_255DCE598[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEA5C, &type metadata for NXServerMode.PairingCodingKeys);
    atomic_store(result, qword_255DCE598);
  }
  return result;
}

unint64_t sub_22DEAA008()
{
  unint64_t result;

  result = qword_255DCE620;
  if (!qword_255DCE620)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEB24, &type metadata for NXServerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCE620);
  }
  return result;
}

unint64_t sub_22DEAA050()
{
  unint64_t result;

  result = qword_255DCE628[0];
  if (!qword_255DCE628[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFEB4C, &type metadata for NXServerMode.CodingKeys);
    atomic_store(result, qword_255DCE628);
  }
  return result;
}

uint64_t sub_22DEAA094()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_22DEAA0B8()
{
  unint64_t result;

  result = qword_255DC68E8;
  if (!qword_255DC68E8)
  {
    result = MEMORY[0x22E321D70]("ጪ!ȟ", &type metadata for NXServerEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC68E8);
  }
  return result;
}

uint64_t sub_22DEAA0FC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DEAA120(void *a1)
{
  uint64_t result;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(_QWORD *);
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  uint64_t v22[3];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (_QWORD *)result;
    if (a1)
    {
      v4 = a1;
      if (qword_255DCD8A0 != -1)
        swift_once();
      v5 = sub_22DEFA674();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DCD8A8);
      v6 = a1;
      swift_retain();
      v7 = a1;
      v8 = sub_22DEFA65C();
      v9 = sub_22DEFAB9C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v22[0] = v11;
        *(_DWORD *)v10 = 134218242;
        sub_22DEFAC2C();
        swift_release();
        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue();
        v12 = sub_22DEFAEC0();
        v20[0] = sub_22DE8C348(v12, v13, v22);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v8, v9, "### Ended: clientID=%llu, error=%s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        MEMORY[0x22E321E0C](v10, -1, -1);

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      if (qword_255DCD8A0 != -1)
        swift_once();
      v14 = sub_22DEFA674();
      __swift_project_value_buffer(v14, (uint64_t)qword_255DCD8A8);
      swift_retain();
      v15 = sub_22DEFA65C();
      v16 = sub_22DEFABA8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v17 = 134217984;
        v22[0] = v3[3];
        sub_22DEFAC2C();
        swift_release();
        _os_log_impl(&dword_22DE7A000, v15, v16, "Ended: clientID=%llu", v17, 0xCu);
        MEMORY[0x22E321E0C](v17, -1, -1);
      }
      else
      {
        swift_release();
      }

    }
    swift_beginAccess();
    v18 = (void (*)(_QWORD *))v3[5];
    if (v18)
    {
      v20[0] = 0;
      v20[1] = 0;
      v21 = 0;
      swift_retain();
      v18(v20);
      sub_22DE87604((uint64_t)v18);
      v19 = v3[5];
    }
    else
    {
      v19 = 0;
    }
    v3[5] = 0;
    v3[6] = 0;
    sub_22DE87604(v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DEAA4B8(void *a1)
{
  uint64_t result;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(_QWORD *);
  id v19;
  uint64_t v20;
  void (*v21)(_QWORD *);
  _QWORD v22[2];
  uint64_t v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26[3];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (_QWORD *)result;
    if (a1)
    {
      v4 = a1;
      if (qword_255DCD8A0 != -1)
        swift_once();
      v5 = sub_22DEFA674();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DCD8A8);
      v6 = a1;
      swift_retain();
      v7 = a1;
      v8 = sub_22DEFA65C();
      v9 = sub_22DEFAB9C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v26[0] = v11;
        *(_DWORD *)v10 = 134218242;
        v22[0] = v3[3];
        sub_22DEFAC2C();
        swift_release();
        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue();
        v12 = sub_22DEFAEC0();
        v24[0] = sub_22DE8C348(v12, v13, v26);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v8, v9, "### Ended: clientID=%llu, error=%s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        MEMORY[0x22E321E0C](v10, -1, -1);
      }
      else
      {
        swift_release();

      }
      swift_beginAccess();
      v18 = (void (*)(_QWORD *))v3[5];
      if (v18)
      {
        v24[0] = a1;
        v24[1] = 0;
        v25 = 0;
        v19 = a1;
        sub_22DE875A4((uint64_t)v18);
        v18(v24);
        sub_22DE87604((uint64_t)v18);

      }
      v20 = v3[5];
      v3[5] = 0;
      v3[6] = 0;
    }
    else
    {
      if (qword_255DCD8A0 != -1)
        swift_once();
      v14 = sub_22DEFA674();
      __swift_project_value_buffer(v14, (uint64_t)qword_255DCD8A8);
      swift_retain();
      v15 = sub_22DEFA65C();
      v16 = sub_22DEFABA8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v17 = 134217984;
        v26[0] = v3[3];
        sub_22DEFAC2C();
        swift_release();
        _os_log_impl(&dword_22DE7A000, v15, v16, "Started: clientID=%llu", v17, 0xCu);
        MEMORY[0x22E321E0C](v17, -1, -1);
      }
      else
      {
        swift_release();
      }

      swift_beginAccess();
      v21 = (void (*)(_QWORD *))v3[5];
      if (!v21)
        return swift_release();
      v22[0] = 0;
      v22[1] = 0;
      LOBYTE(v23) = 0x80;
      swift_retain();
      v21(v22);
      v20 = (uint64_t)v21;
    }
    sub_22DE87604(v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DEAA8A4()
{
  uint64_t v0;

  v0 = sub_22DEFA674();
  __swift_allocate_value_buffer(v0, qword_255DCE6B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DCE6B8);
  sub_22DEF4E10();
  swift_bridgeObjectRetain();
  return sub_22DEFA668();
}

uint64_t NXSessionConfiguration.nanEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NXSessionConfiguration.nanEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*NXSessionConfiguration.nanEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NXSessionConfiguration.serverMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t NXSessionConfiguration.serverMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*NXSessionConfiguration.serverMode.modify())()
{
  return nullsub_1;
}

Nexus::NXSessionConfiguration __swiftcall NXSessionConfiguration.init(nanEnabled:serverMode:)(Swift::Bool nanEnabled, Swift::Bool serverMode)
{
  Swift::Bool *v2;
  Nexus::NXSessionConfiguration result;

  *v2 = nanEnabled;
  v2[1] = serverMode;
  result.nanEnabled = nanEnabled;
  return result;
}

uint64_t NXSessionConfiguration.description.getter()
{
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0x6C62616E456E616ELL;
}

BOOL static NXSessionConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

BOOL sub_22DEAAAA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t NXSession.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)NXEnvironmentValues.dispatchQueue.getter();
  v1 = sub_22DEFABFC();

  return v1;
}

uint64_t NXSession.__allocating_init(configuration:environment:)(char *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  NXSession.init(configuration:environment:)(a1, a2);
  return v4;
}

{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = swift_allocObject();
  v5 = *a1;
  LOBYTE(a1) = a1[1];
  v6 = *a2;
  *(_BYTE *)(v4 + 16) = 0;
  swift_weakInit();
  *(_QWORD *)(v4 + 48) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v4 + 64) = sub_22DEFAF14();
  *(_QWORD *)(v4 + 72) = 0;
  *(_WORD *)(v4 + 80) = 0;
  v7 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + 88) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 112) = v7;
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + 120) = v7;
  *(_QWORD *)(v4 + 128) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F0);
  *(_QWORD *)(v4 + 136) = NXOrderedDictionary.__allocating_init()();
  *(_QWORD *)(v4 + 144) = 0;
  *(_QWORD *)(v4 + 152) = v7;
  *(_QWORD *)(v4 + 160) = 0;
  *(_QWORD *)(v4 + 168) = v7;
  *(_BYTE *)(v4 + 32) = v5;
  *(_DWORD *)(v4 + 36) = 0;
  *(_DWORD *)(v4 + 40) = 0;
  *(_BYTE *)(v4 + 44) = 1;
  *(_BYTE *)(v4 + 45) = (_BYTE)a1;
  *(_QWORD *)(v4 + 56) = v6;
  return v4;
}

uint64_t NXSession.init(configuration:environment:)(char *a1, uint64_t *a2)
{
  uint64_t v2;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = a1[12];
  v6 = a1[13];
  v7 = *a2;
  *(_BYTE *)(v2 + 16) = 0;
  swift_weakInit();
  *(_QWORD *)(v2 + 48) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v2 + 64) = sub_22DEFAF14();
  *(_QWORD *)(v2 + 72) = 0;
  *(_WORD *)(v2 + 80) = 0;
  v8 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 88) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0;
  *(_QWORD *)(v2 + 112) = v8;
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 120) = v8;
  *(_QWORD *)(v2 + 128) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F0);
  *(_QWORD *)(v2 + 136) = NXOrderedDictionary.__allocating_init()();
  *(_QWORD *)(v2 + 144) = 0;
  *(_QWORD *)(v2 + 152) = v8;
  *(_QWORD *)(v2 + 160) = 0;
  *(_QWORD *)(v2 + 168) = v8;
  *(_BYTE *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 36) = *(_QWORD *)(a1 + 4);
  *(_BYTE *)(v2 + 44) = v5;
  *(_BYTE *)(v2 + 45) = v6;
  *(_QWORD *)(v2 + 56) = v7;
  return v2;
}

{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = *a2;
  *(_BYTE *)(v2 + 16) = 0;
  swift_weakInit();
  *(_QWORD *)(v2 + 48) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v2 + 64) = sub_22DEFAF14();
  *(_QWORD *)(v2 + 72) = 0;
  *(_WORD *)(v2 + 80) = 0;
  v6 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 88) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0;
  *(_QWORD *)(v2 + 112) = v6;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 120) = v6;
  *(_QWORD *)(v2 + 128) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F0);
  *(_QWORD *)(v2 + 136) = NXOrderedDictionary.__allocating_init()();
  *(_QWORD *)(v2 + 144) = 0;
  *(_QWORD *)(v2 + 152) = v6;
  *(_QWORD *)(v2 + 160) = 0;
  *(_QWORD *)(v2 + 168) = v6;
  *(_BYTE *)(v2 + 32) = v3;
  *(_DWORD *)(v2 + 36) = 0;
  *(_DWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 44) = 1;
  *(_BYTE *)(v2 + 45) = v4;
  *(_QWORD *)(v2 + 56) = v5;
  return v2;
}

void NXSession.Configuration.init()(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 12) = 1;
}

double NXSession.Configuration.nanEnabled(_:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;
  double result;

  v3 = *(_BYTE *)(v2 + 12);
  v4 = *(_BYTE *)(v2 + 13);
  *(_BYTE *)a2 = a1;
  result = *(double *)(v2 + 4);
  *(double *)(a2 + 4) = result;
  *(_BYTE *)(a2 + 12) = v3;
  *(_BYTE *)(a2 + 13) = v4;
  return result;
}

double NXSession.Configuration.serverMode(_:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  double result;

  v3 = *(_BYTE *)(v2 + 12);
  *(_BYTE *)a2 = *(_BYTE *)v2;
  result = *(double *)(v2 + 4);
  *(double *)(a2 + 4) = result;
  *(_BYTE *)(a2 + 12) = v3;
  *(_BYTE *)(a2 + 13) = a1;
  return result;
}

uint64_t NXSession.deinit()
{
  int64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6900);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v33 - v10;
  if (qword_255DCE6B0 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v12 = sub_22DEFA674();
    __swift_project_value_buffer(v12, (uint64_t)qword_255DCE6B8);
    v13 = sub_22DEFA65C();
    v14 = sub_22DEFAB90();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_22DE7A000, v13, v14, "deinit", v15, 2u);
      MEMORY[0x22E321E0C](v15, -1, -1);
    }

    swift_beginAccess();
    v16 = *(_QWORD *)(v1 + 112);
    v17 = *(_QWORD *)(v16 + 64);
    v34 = v1;
    v35 = v16 + 64;
    v18 = 1 << *(_BYTE *)(v16 + 32);
    v19 = -1;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    v20 = v19 & v17;
    v36 = (unint64_t)(v18 + 63) >> 6;
    v37 = v16;
    v33 = v36 - 1;
    result = swift_bridgeObjectRetain();
    v1 = 0;
    if (v20)
    {
      while (1)
      {
        v22 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v23 = v22 | (v1 << 6);
LABEL_10:
        v24 = *(_QWORD *)(v37 + 56);
        *(_QWORD *)v9 = *(_QWORD *)(*(_QWORD *)(v37 + 48) + 8 * v23);
        v25 = v24 + *(_QWORD *)(v3 + 72) * v23;
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6908);
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(&v9[*(int *)(v26 + 48)], v25, v2);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
LABEL_29:
        sub_22DEA4DD0((uint64_t)v9, (uint64_t)v11, &qword_255DC6900);
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6908);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v11, 1, v31) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v11[*(int *)(v31 + 48)], v2);
        sub_22DEFAB0C();
        result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        if (!v20)
          goto LABEL_11;
      }
      swift_release();
      v32 = (id *)v34;
      *(_QWORD *)(v34 + 112) = MEMORY[0x24BEE4B00];
      swift_bridgeObjectRelease();
      swift_weakDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v32;
    }
LABEL_11:
    v27 = v1 + 1;
    if (!__OFADD__(v1, 1))
      break;
    __break(1u);
  }
  if (v27 >= v36)
    goto LABEL_28;
  v28 = *(_QWORD *)(v35 + 8 * v27);
  if (v28)
  {
LABEL_14:
    v20 = (v28 - 1) & v28;
    v23 = __clz(__rbit64(v28)) + (v27 << 6);
    v1 = v27;
    goto LABEL_10;
  }
  v29 = v1 + 2;
  ++v1;
  if (v27 + 1 >= v36)
    goto LABEL_28;
  v28 = *(_QWORD *)(v35 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_14;
  }
  v1 = v27 + 1;
  if (v27 + 2 >= v36)
    goto LABEL_28;
  v28 = *(_QWORD *)(v35 + 8 * (v27 + 2));
  if (v28)
  {
    v27 += 2;
    goto LABEL_14;
  }
  v29 = v27 + 3;
  v1 = v27 + 2;
  if (v27 + 3 >= v36)
  {
LABEL_28:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6908);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
    v20 = 0;
    goto LABEL_29;
  }
  v28 = *(_QWORD *)(v35 + 8 * v29);
  if (v28)
    goto LABEL_17;
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v36)
    {
      v1 = v33;
      goto LABEL_28;
    }
    v28 = *(_QWORD *)(v35 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t NXSession.__deallocating_deinit()
{
  NXSession.deinit();
  return swift_deallocClassInstance();
}

uint64_t NXSession.start()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v1[4] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  v1[5] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6920, v2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v1[6] = sub_22DEFAA88();
  v1[7] = v3;
  return swift_task_switch();
}

uint64_t sub_22DEAB340()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;

  v1 = (uint64_t *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    goto LABEL_15;
  if (qword_255DCE6B0 != -1)
    swift_once();
  v3 = sub_22DEFA674();
  __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
  swift_retain_n();
  v4 = sub_22DEFA65C();
  v5 = sub_22DEFABA8();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *v1;
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v26 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = *(_BYTE *)(v7 + 44);
    v11 = *(_BYTE *)(v7 + 45);
    v27 = *(_BYTE *)(v7 + 32);
    v28 = *(_QWORD *)(v7 + 36);
    v29 = v10;
    v30 = v11;
    v12 = NXSession.Configuration.description.getter();
    *(_QWORD *)(v0 + 16) = sub_22DE8C348(v12, v13, &v26);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_22DE7A000, v4, v5, "start: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v9, -1, -1);
    MEMORY[0x22E321E0C](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v14 = *v1;
  if (*(_QWORD *)(*v1 + 72))
  {
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
      goto LABEL_15;
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 32);
    v15 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6930);
    v17 = sub_22DEFAAC4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 1, 1, v17);
    v18 = swift_allocObject();
    swift_weakInit();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = v16;
    *(_QWORD *)(v14 + 72) = sub_22DEFA5CC();
    swift_release();
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    {
LABEL_15:
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v20 = *v1;
  if (*(_BYTE *)(*v1 + 81) == 1)
  {
    *(_BYTE *)(v20 + 80) = 1;
    goto LABEL_15;
  }
  *(_BYTE *)(v20 + 81) = 1;
  v21 = *v1;
  *(_BYTE *)(v21 + 80) = 0;
  v22 = (_BYTE *)*v1;
  if (*(_BYTE *)(v21 + 16) == 1)
  {
    v22[81] = 0;
    goto LABEL_15;
  }
  if (v22[45] == 1)
  {
    sub_22DEAE884();
    if ((v22[32] & 1) != 0)
      sub_22DEAEE8C();
    return swift_task_switch();
  }
  else
  {
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v24;
    *v24 = v0;
    v24[1] = sub_22DEAB6BC;
    return sub_22DEAF2B4((uint64_t)v24, v25);
  }
}

uint64_t sub_22DEAB6BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEAB708()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_BYTE **)(v0 + 24);
  if (v1[80] == 1 && (v1[80] = 0, v2 = v1[16], v1 = *(_BYTE **)(v0 + 24), (v2 & 1) == 0))
  {
    if (v1[45] == 1)
    {
      sub_22DEAE884();
      if ((v1[32] & 1) != 0)
        sub_22DEAEE8C();
      return swift_task_switch();
    }
    else
    {
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 64) = v4;
      *v4 = v0;
      v4[1] = sub_22DEAB6BC;
      return sub_22DEAF2B4((uint64_t)v4, v5);
    }
  }
  else
  {
    v1[81] = 0;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEAB7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[16] = a2;
  v3[17] = a3;
  v4 = sub_22DEFA5E4();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v5 = sub_22DEFA5F0();
  v3[22] = v5;
  v3[23] = *(_QWORD *)(v5 - 8);
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEAB864()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  if ((sub_22DEFAB54() & 1) == 0)
  {
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    do
    {
      Strong = swift_weakLoadStrong();
      swift_release();
      if (!Strong)
        break;
      if (swift_weakLoadStrong())
      {
        v9 = *(_QWORD *)(v0 + 192);
        v10 = *(_QWORD *)(v0 + 160);
        v16 = *(_QWORD *)(v0 + 152);
        v11 = *(_QWORD *)(v0 + 144);
        swift_bridgeObjectRetain();
        swift_release();
        NXEnvironmentValues.clock.getter(v9);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 112) = sub_22DEFAF38();
        *(_QWORD *)(v0 + 120) = v12;
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 88) = 0;
        *(_BYTE *)(v0 + 104) = 1;
        sub_22DEC37B0(&qword_255DC6D90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D68], MEMORY[0x24BE29D80]);
        sub_22DEFAEA8();
        sub_22DEC37B0(&qword_255DC6D98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D40], MEMORY[0x24BE29D50]);
        sub_22DEFACD4();
        v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
        *(_QWORD *)(v0 + 200) = v13;
        v13(v10, v11);
        v14 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 208) = v14;
        *v14 = v0;
        v14[1] = sub_22DEABBDC;
        return sub_22DEFAEB4();
      }
      if (qword_255DCE6B0 != -1)
        swift_once();
      v3 = sub_22DEFA674();
      __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
      v4 = sub_22DEFA65C();
      v5 = sub_22DEFAB90();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_22DE7A000, v4, v5, "run periodic", v6, 2u);
        MEMORY[0x22E321E0C](v6, -1, -1);
      }

      v7 = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 224) = v7;
      if (v7)
      {
        sub_22DEC37B0(&qword_255DC6920, v8, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
        *(_QWORD *)(v0 + 232) = sub_22DEFAA88();
        *(_QWORD *)(v0 + 240) = v15;
        return swift_task_switch();
      }
    }
    while ((sub_22DEFAB54() & 1) == 0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEABBDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 200))(*(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 144));
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 192);
    v4 = *(_QWORD *)(v2 + 176);
    v5 = *(_QWORD *)(v2 + 184);
    (*(void (**)(_QWORD, _QWORD))(v2 + 200))(*(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 144));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_task_switch();
}

uint64_t sub_22DEABC7C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v16;

  while (1)
  {
    if (qword_255DCE6B0 != -1)
      swift_once();
    v1 = sub_22DEFA674();
    __swift_project_value_buffer(v1, (uint64_t)qword_255DCE6B8);
    v2 = sub_22DEFA65C();
    v3 = sub_22DEFAB90();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_22DE7A000, v2, v3, "run periodic", v4, 2u);
      MEMORY[0x22E321E0C](v4, -1, -1);
    }

    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 224) = Strong;
    if (Strong)
      break;
    if ((sub_22DEFAB54() & 1) != 0 || (v7 = swift_weakLoadStrong(), swift_release(), !v7))
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (swift_weakLoadStrong())
    {
      v9 = *(_QWORD *)(v0 + 192);
      v10 = *(_QWORD *)(v0 + 160);
      v16 = *(_QWORD *)(v0 + 152);
      v11 = *(_QWORD *)(v0 + 144);
      swift_bridgeObjectRetain();
      swift_release();
      NXEnvironmentValues.clock.getter(v9);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 112) = sub_22DEFAF38();
      *(_QWORD *)(v0 + 120) = v12;
      *(_QWORD *)(v0 + 96) = 0;
      *(_QWORD *)(v0 + 88) = 0;
      *(_BYTE *)(v0 + 104) = 1;
      sub_22DEC37B0(&qword_255DC6D90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D68], MEMORY[0x24BE29D80]);
      sub_22DEFAEA8();
      sub_22DEC37B0(&qword_255DC6D98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D40], MEMORY[0x24BE29D50]);
      sub_22DEFACD4();
      v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      *(_QWORD *)(v0 + 200) = v13;
      v13(v10, v11);
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v14;
      *v14 = v0;
      v14[1] = sub_22DEABBDC;
      return sub_22DEFAEB4();
    }
  }
  sub_22DEC37B0(&qword_255DC6920, v6, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  *(_QWORD *)(v0 + 232) = sub_22DEFAA88();
  *(_QWORD *)(v0 + 240) = v8;
  return swift_task_switch();
}

uint64_t sub_22DEABFA0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEAC004()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_BYTE **)(v0 + 224);
  if ((v1[16] & 1) != 0)
    goto LABEL_6;
  if ((v1[81] & 1) != 0)
  {
    v1[80] = 1;
LABEL_6:
    swift_release();
    return swift_task_switch();
  }
  v1[81] = 1;
  v2 = *(_QWORD *)(v0 + 224);
  *(_BYTE *)(v2 + 80) = 0;
  v3 = *(_BYTE **)(v0 + 224);
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v3[81] = 0;
    goto LABEL_6;
  }
  if (v3[45] == 1)
  {
    sub_22DEAE884();
    if ((v3[32] & 1) != 0)
      sub_22DEAEE8C();
    return swift_task_switch();
  }
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v5;
  *v5 = v0;
  v5[1] = sub_22DEAC410;
  return sub_22DEAF2B4((uint64_t)v5, v6);
}

uint64_t sub_22DEAC0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  do
  {
    if ((sub_22DEFAB54() & 1) != 0 || (Strong = swift_weakLoadStrong(), swift_release(), !Strong))
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (swift_weakLoadStrong())
    {
      v9 = *(_QWORD *)(v0 + 192);
      v10 = *(_QWORD *)(v0 + 160);
      v16 = *(_QWORD *)(v0 + 152);
      v11 = *(_QWORD *)(v0 + 144);
      swift_bridgeObjectRetain();
      swift_release();
      NXEnvironmentValues.clock.getter(v9);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 112) = sub_22DEFAF38();
      *(_QWORD *)(v0 + 120) = v12;
      *(_QWORD *)(v0 + 96) = 0;
      *(_QWORD *)(v0 + 88) = 0;
      *(_BYTE *)(v0 + 104) = 1;
      sub_22DEC37B0(&qword_255DC6D90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D68], MEMORY[0x24BE29D80]);
      sub_22DEFAEA8();
      sub_22DEC37B0(&qword_255DC6D98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D40], MEMORY[0x24BE29D50]);
      sub_22DEFACD4();
      v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      *(_QWORD *)(v0 + 200) = v13;
      v13(v10, v11);
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v14;
      *v14 = v0;
      v14[1] = sub_22DEABBDC;
      return sub_22DEFAEB4();
    }
    if (qword_255DCE6B0 != -1)
      swift_once();
    v4 = sub_22DEFA674();
    __swift_project_value_buffer(v4, (uint64_t)qword_255DCE6B8);
    v5 = sub_22DEFA65C();
    v6 = sub_22DEFAB90();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_22DE7A000, v5, v6, "run periodic", v7, 2u);
      MEMORY[0x22E321E0C](v7, -1, -1);
    }

    v1 = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 224) = v1;
  }
  while (!v1);
  sub_22DEC37B0(&qword_255DC6920, v2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  *(_QWORD *)(v0 + 232) = sub_22DEFAA88();
  *(_QWORD *)(v0 + 240) = v15;
  return swift_task_switch();
}

uint64_t sub_22DEAC410()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEAC45C()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_BYTE **)(v0 + 224);
  if ((v1[80] & 1) == 0 || (v1[80] = 0, v2 = v1[16], v1 = *(_BYTE **)(v0 + 224), (v2 & 1) != 0))
  {
    v1[81] = 0;
    swift_release();
    return swift_task_switch();
  }
  if (v1[45] == 1)
  {
    sub_22DEAE884();
    if ((v1[32] & 1) != 0)
      sub_22DEAEE8C();
    return swift_task_switch();
  }
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v4;
  *v4 = v0;
  v4[1] = sub_22DEAC410;
  return sub_22DEAF2B4((uint64_t)v4, v5);
}

uint64_t NXSession.cancel()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = v2;
  sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v3[4] = sub_22DEFAA88();
  v3[5] = v4;
  return swift_task_switch();
}

uint64_t sub_22DEAC588()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char v41[4];
  uint64_t v42;
  char v43;
  char v44;

  v1 = &unk_255DCE000;
  if (qword_255DCE6B0 != -1)
    swift_once();
  v2 = v0 + 3;
  v3 = sub_22DEFA674();
  __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
  swift_retain_n();
  v4 = sub_22DEFA65C();
  v5 = sub_22DEFABA8();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[3];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v39 = v3;
    v9 = swift_slowAlloc();
    v40 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = *(_BYTE *)(v7 + 44);
    v11 = *(_BYTE *)(v7 + 45);
    v41[0] = *(_BYTE *)(v7 + 32);
    v42 = *(_QWORD *)(v7 + 36);
    v43 = v10;
    v44 = v11;
    v12 = NXSession.Configuration.description.getter();
    v0[2] = sub_22DE8C348(v12, v13, &v40);
    v1 = (_QWORD *)&unk_255DCE000;
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_22DE7A000, v4, v5, "cancel: %s", v8, 0xCu);
    swift_arrayDestroy();
    v14 = v9;
    v3 = v39;
    MEMORY[0x22E321E0C](v14, -1, -1);
    MEMORY[0x22E321E0C](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v15 = *v2;
  *(_BYTE *)(v15 + 16) = 1;
  v16 = *(void **)(v15 + 96);
  if (v16)
  {
    v17 = v1[214];
    v18 = v16;
    if (v17 != -1)
      swift_once();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
    v19 = sub_22DEFA65C();
    v20 = sub_22DEFABA8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = v3;
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_22DE7A000, v19, v20, "CUMessageSession stop", v22, 2u);
      v23 = v22;
      v3 = v21;
      MEMORY[0x22E321E0C](v23, -1, -1);
    }

    objc_msgSend(v18, sel_invalidate);
    v24 = *(void **)(v15 + 96);
    *(_QWORD *)(v15 + 96) = 0;

  }
  v25 = *v2;
  v26 = *(void **)(*v2 + 104);
  if (v26)
  {
    objc_msgSend(v26, sel_invalidate);
    v27 = *(void **)(v25 + 104);
    *(_QWORD *)(v25 + 104) = 0;

    v25 = *v2;
  }
  v41[0] = 22;
  type metadata accessor for NXError();
  v28 = NXError.__allocating_init(_:_:_:)((uint64_t)v41, 0x206E6F6973736553, 0xEE006C65636E6163, 0);
  sub_22DEACA98(v28);

  v29 = *(void **)(v25 + 144);
  if (v29)
  {
    v30 = v1[214];
    v31 = v29;
    if (v30 != -1)
      swift_once();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
    v32 = sub_22DEFA65C();
    v33 = sub_22DEFABA8();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_22DE7A000, v32, v33, "NAN publisher stop", v34, 2u);
      MEMORY[0x22E321E0C](v34, -1, -1);
    }

    objc_msgSend(v31, sel_invalidate);
    v35 = *(void **)(v25 + 144);
    *(_QWORD *)(v25 + 144) = 0;

  }
  v36 = (_QWORD *)swift_task_alloc();
  v0[6] = v36;
  *v36 = v0;
  v36[1] = sub_22DEAC9B8;
  return sub_22DEACC58((uint64_t)v36, v37);
}

uint64_t sub_22DEAC9B8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v5 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v5;
  v2[1] = sub_22DEACA1C;
  return sub_22DEAD580((uint64_t)v2, v3);
}

uint64_t sub_22DEACA1C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEACA68()
{
  uint64_t v0;

  sub_22DEADB64();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEACA98(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t *__return_ptr, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D08);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v1 + 136) + 256);
  v8 = swift_retain();
  v7(&v19, v8);
  swift_release();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
  NXOrderedDictionary.Iterator.next()(v9, (uint64_t)v6);
  for (i = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18);
        (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(i - 8) + 48))(v6, 1, i) != 1;
        i = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18))
  {
    v11 = *(_QWORD *)&v6[*(int *)(i + 48)];
    v12 = a1;
    sub_22DEB8A88(v11, 0, 0xF000000000000000, 0, a1);
    swift_release();
    sub_22DEA326C(0, 0xF000000000000000);

    v13 = sub_22DEFA59C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
    NXOrderedDictionary.Iterator.next()(v14, (uint64_t)v6);
  }
  swift_release();
  v15 = *(void (**)(uint64_t))(**(_QWORD **)(v2 + 136) + 224);
  v16 = swift_retain();
  v15(v16);
  return swift_release();
}

uint64_t sub_22DEACC58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[12] = v2;
  sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v3[13] = sub_22DEFAA88();
  v3[14] = v4;
  return swift_task_switch();
}

uint64_t sub_22DEACCC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 96);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 152);
  v3 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 120) = v2;
  *(_QWORD *)(v1 + 152) = v3;
  LOBYTE(v3) = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 65) = v3;
  v4 = -1;
  v5 = -1 << v3;
  v6 = *(_QWORD *)(v2 + 64);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v7 = v4 & v6;
  if (!v7)
  {
    v30 = 63 - v5;
    v11 = *(_QWORD **)(v0 + 120);
    if (v30 > 0x7F)
    {
      v31 = v11[9];
      if (v31)
      {
        v8 = 1;
LABEL_14:
        v10 = (v31 - 1) & v31;
        v9 = __clz(__rbit64(v31)) + (v8 << 6);
        goto LABEL_5;
      }
      if (v30 >= 0xC0)
      {
        v31 = v11[10];
        if (v31)
        {
          v8 = 2;
          goto LABEL_14;
        }
        if (v30 >= 0x100)
        {
          v31 = v11[11];
          if (v31)
          {
            v8 = 3;
            goto LABEL_14;
          }
          if (v30 >= 0x140)
          {
            v31 = v11[12];
            if (v31)
            {
              v8 = 4;
              goto LABEL_14;
            }
            v32 = 0;
            v33 = v30 >> 6;
            if (v33 <= 5)
              v33 = 5;
            v34 = v33 - 5;
            while (v34 != v32)
            {
              v31 = v11[v32++ + 13];
              if (v31)
              {
                v8 = v32 + 4;
                goto LABEL_14;
              }
            }
          }
        }
      }
    }
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = 0;
  v9 = __clz(__rbit64(v7));
  v10 = (v7 - 1) & v7;
  v11 = *(_QWORD **)(v0 + 120);
LABEL_5:
  *(_QWORD *)(v0 + 128) = v8;
  *(_QWORD *)(v0 + 136) = v10;
  v12 = v11[6] + 56 * v9;
  v14 = *(_QWORD *)v12;
  v13 = *(_QWORD *)(v12 + 8);
  v16 = *(_QWORD *)(v12 + 16);
  v15 = *(_QWORD *)(v12 + 24);
  v17 = *(_QWORD *)(v12 + 32);
  v18 = *(_QWORD *)(v12 + 40);
  v19 = *(_BYTE *)(v12 + 48);
  v20 = (_QWORD *)(v11[7] + 24 * v9);
  *(_QWORD *)(v0 + 144) = *v20;
  *(_QWORD *)(v0 + 152) = v20[1];
  *(_QWORD *)(v0 + 160) = v20[2];
  v36 = v15;
  v37 = v17;
  sub_22DE80988(v14, v13, v16, v15, v17, v18, v19);
  v21 = qword_255DCE6B0;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v21 != -1)
    swift_once();
  v22 = sub_22DEFA674();
  __swift_project_value_buffer(v22, (uint64_t)qword_255DCE6B8);
  sub_22DE80988(v14, v13, v16, v36, v37, v18, v19);
  v23 = sub_22DEFA65C();
  v24 = sub_22DEFABA8();
  v25 = v19;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v38 = v35;
    *(_DWORD *)v26 = 136315138;
    *(_QWORD *)(v0 + 16) = v14;
    *(_QWORD *)(v0 + 24) = v13;
    *(_QWORD *)(v0 + 32) = v16;
    *(_QWORD *)(v0 + 40) = v36;
    *(_QWORD *)(v0 + 48) = v37;
    *(_QWORD *)(v0 + 56) = v18;
    *(_BYTE *)(v0 + 64) = v25;
    sub_22DE8D848();
    v27 = sub_22DEFAE3C();
    *(_QWORD *)(v26 + 4) = sub_22DE8C348(v27, v28, &v38);
    swift_bridgeObjectRelease();
    sub_22DE809FC(v14, v13, v16, v36, v37, v18, v25);
    sub_22DE809FC(v14, v13, v16, v36, v37, v18, v25);
    _os_log_impl(&dword_22DE7A000, v23, v24, "network client connection stop: endpoint=%s", (uint8_t *)v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v35, -1, -1);
    MEMORY[0x22E321E0C](v26, -1, -1);

  }
  else
  {
    sub_22DE809FC(v14, v13, v16, v36, v37, v18, v19);
    sub_22DE809FC(v14, v13, v16, v36, v37, v18, v19);

  }
  type metadata accessor for NXConnection();
  sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  sub_22DEFAA88();
  return swift_task_switch();
}

uint64_t sub_22DEAD120()
{
  NXConnection.cancel()();
  return swift_task_switch();
}

uint64_t sub_22DEAD158()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_release();
  swift_release();
  result = swift_release();
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  if (!v3)
  {
    v23 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
    }
    else
    {
      v24 = (unint64_t)((1 << *(_BYTE *)(v0 + 65)) + 63) >> 6;
      result = *(_QWORD *)(v0 + 120);
      if (v23 >= v24)
        goto LABEL_23;
      v25 = result + 64;
      v26 = *(_QWORD *)(result + 64 + 8 * v23);
      ++v2;
      if (v26)
      {
LABEL_12:
        v4 = (v26 - 1) & v26;
        v5 = __clz(__rbit64(v26)) + (v2 << 6);
        goto LABEL_3;
      }
      v2 = v23 + 1;
      if (v23 + 1 >= v24)
        goto LABEL_23;
      v26 = *(_QWORD *)(v25 + 8 * v2);
      if (v26)
        goto LABEL_12;
      v2 = v23 + 2;
      if (v23 + 2 >= v24)
        goto LABEL_23;
      v26 = *(_QWORD *)(v25 + 8 * v2);
      if (v26)
        goto LABEL_12;
      v27 = v23 + 3;
      if (v27 >= v24)
      {
LABEL_23:
        swift_release();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v26 = *(_QWORD *)(v25 + 8 * v27);
      if (v26)
      {
        v2 = v27;
        goto LABEL_12;
      }
      while (1)
      {
        v2 = v27 + 1;
        if (__OFADD__(v27, 1))
          break;
        if (v2 >= v24)
          goto LABEL_23;
        v26 = *(_QWORD *)(v25 + 8 * v2);
        ++v27;
        if (v26)
          goto LABEL_12;
      }
    }
    __break(1u);
    return result;
  }
  v4 = (v3 - 1) & v3;
  v5 = __clz(__rbit64(v3)) | (v2 << 6);
  result = *(_QWORD *)(v0 + 120);
LABEL_3:
  *(_QWORD *)(v0 + 128) = v2;
  *(_QWORD *)(v0 + 136) = v4;
  v6 = *(_QWORD *)(result + 48) + 56 * v5;
  v8 = *(_QWORD *)v6;
  v7 = *(_QWORD *)(v6 + 8);
  v10 = *(_QWORD *)(v6 + 16);
  v9 = *(_QWORD *)(v6 + 24);
  v11 = *(_QWORD *)(v6 + 32);
  v12 = *(_QWORD *)(v6 + 40);
  v13 = *(_BYTE *)(v6 + 48);
  v14 = (_QWORD *)(*(_QWORD *)(result + 56) + 24 * v5);
  *(_QWORD *)(v0 + 144) = *v14;
  *(_QWORD *)(v0 + 152) = v14[1];
  *(_QWORD *)(v0 + 160) = v14[2];
  v29 = v9;
  v30 = v11;
  sub_22DE80988(v8, v7, v10, v9, v11, v12, v13);
  v15 = qword_255DCE6B0;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v15 != -1)
    swift_once();
  v16 = sub_22DEFA674();
  __swift_project_value_buffer(v16, (uint64_t)qword_255DCE6B8);
  sub_22DE80988(v8, v7, v10, v29, v30, v12, v13);
  v17 = sub_22DEFA65C();
  v18 = sub_22DEFABA8();
  v19 = v13;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v31 = v28;
    *(_DWORD *)v20 = 136315138;
    *(_QWORD *)(v0 + 16) = v8;
    *(_QWORD *)(v0 + 24) = v7;
    *(_QWORD *)(v0 + 32) = v10;
    *(_QWORD *)(v0 + 40) = v29;
    *(_QWORD *)(v0 + 48) = v30;
    *(_QWORD *)(v0 + 56) = v12;
    *(_BYTE *)(v0 + 64) = v19;
    sub_22DE8D848();
    v21 = sub_22DEFAE3C();
    *(_QWORD *)(v20 + 4) = sub_22DE8C348(v21, v22, &v31);
    swift_bridgeObjectRelease();
    sub_22DE809FC(v8, v7, v10, v29, v30, v12, v19);
    sub_22DE809FC(v8, v7, v10, v29, v30, v12, v19);
    _os_log_impl(&dword_22DE7A000, v17, v18, "network client connection stop: endpoint=%s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v28, -1, -1);
    MEMORY[0x22E321E0C](v20, -1, -1);

  }
  else
  {
    sub_22DE809FC(v8, v7, v10, v29, v30, v12, v13);
    sub_22DE809FC(v8, v7, v10, v29, v30, v12, v13);

  }
  type metadata accessor for NXConnection();
  sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  sub_22DEFAA88();
  return swift_task_switch();
}

uint64_t sub_22DEAD580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[5] = v2;
  sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v3[6] = sub_22DEFAA88();
  v3[7] = v4;
  return swift_task_switch();
}

uint64_t sub_22DEAD5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v1 + 160))
  {
    v2 = qword_255DCE6B0;
    swift_retain();
    if (v2 != -1)
      swift_once();
    v3 = sub_22DEFA674();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
    v4 = sub_22DEFA65C();
    v5 = sub_22DEFABA8();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_22DE7A000, v4, v5, "network server stop", v6, 2u);
      MEMORY[0x22E321E0C](v6, -1, -1);
    }

    sub_22DEFA788();
    swift_release();
    v1 = *(_QWORD *)(v0 + 40);
  }
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 168);
  v8 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 64) = v7;
  *(_QWORD *)(v1 + 168) = v8;
  LOBYTE(v8) = *(_BYTE *)(v7 + 32);
  *(_BYTE *)(v0 + 112) = v8;
  v9 = -1;
  v10 = -1 << v8;
  v11 = *(_QWORD *)(v7 + 64);
  if (-v10 < 64)
    v9 = ~(-1 << -(char)v10);
  v12 = v9 & v11;
  if (v12)
  {
    v13 = 0;
    v14 = __clz(__rbit64(v12));
    v15 = (v12 - 1) & v12;
    v16 = *(_QWORD **)(v0 + 64);
LABEL_11:
    *(_QWORD *)(v0 + 72) = v13;
    *(_QWORD *)(v0 + 80) = v15;
    v17 = (_QWORD *)(v16[7] + 24 * v14);
    *(_QWORD *)(v0 + 88) = *v17;
    *(_QWORD *)(v0 + 96) = v17[1];
    *(_QWORD *)(v0 + 104) = v17[2];
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22DEFAA88();
    return swift_task_switch();
  }
  v19 = 63 - v10;
  v16 = *(_QWORD **)(v0 + 64);
  if (v19 > 0x7F)
  {
    v20 = v16[9];
    if (v20)
    {
      v13 = 1;
LABEL_15:
      v15 = (v20 - 1) & v20;
      v14 = __clz(__rbit64(v20)) + (v13 << 6);
      goto LABEL_11;
    }
    if (v19 >= 0xC0)
    {
      v20 = v16[10];
      if (v20)
      {
        v13 = 2;
        goto LABEL_15;
      }
      if (v19 >= 0x100)
      {
        v20 = v16[11];
        if (v20)
        {
          v13 = 3;
          goto LABEL_15;
        }
        if (v19 >= 0x140)
        {
          v20 = v16[12];
          if (v20)
          {
            v13 = 4;
            goto LABEL_15;
          }
          v21 = 0;
          v22 = v19 >> 6;
          if (v22 <= 5)
            v22 = 5;
          v23 = v22 - 5;
          while (v23 != v21)
          {
            v20 = v16[v21++ + 13];
            if (v20)
            {
              v13 = v21 + 4;
              goto LABEL_15;
            }
          }
        }
      }
    }
  }
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEAD8D0()
{
  NXConnection.cancel()();
  return swift_task_switch();
}

uint64_t sub_22DEAD90C()
{
  sub_22DEFAB48();
  sub_22DEFAB48();
  return swift_task_switch();
}

uint64_t sub_22DEAD988()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;

  swift_release();
  swift_release();
  result = swift_release();
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  if (v3)
  {
    v4 = (v3 - 1) & v3;
    v5 = __clz(__rbit64(v3)) | (v2 << 6);
    result = *(_QWORD *)(v0 + 64);
LABEL_3:
    *(_QWORD *)(v0 + 72) = v2;
    *(_QWORD *)(v0 + 80) = v4;
    v6 = (_QWORD *)(*(_QWORD *)(result + 56) + 24 * v5);
    *(_QWORD *)(v0 + 88) = *v6;
    *(_QWORD *)(v0 + 96) = v6[1];
    *(_QWORD *)(v0 + 104) = v6[2];
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22DEFAA88();
    return swift_task_switch();
  }
  v7 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = (unint64_t)((1 << *(_BYTE *)(v0 + 112)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 64);
    if (v7 >= v8)
      goto LABEL_18;
    v9 = result + 64;
    v10 = *(_QWORD *)(result + 64 + 8 * v7);
    ++v2;
    if (v10)
    {
LABEL_7:
      v4 = (v10 - 1) & v10;
      v5 = __clz(__rbit64(v10)) + (v2 << 6);
      goto LABEL_3;
    }
    v2 = v7 + 1;
    if (v7 + 1 >= v8)
      goto LABEL_18;
    v10 = *(_QWORD *)(v9 + 8 * v2);
    if (v10)
      goto LABEL_7;
    v2 = v7 + 2;
    if (v7 + 2 >= v8)
      goto LABEL_18;
    v10 = *(_QWORD *)(v9 + 8 * v2);
    if (v10)
      goto LABEL_7;
    v11 = v7 + 3;
    if (v11 >= v8)
    {
LABEL_18:
      swift_release();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v10 = *(_QWORD *)(v9 + 8 * v11);
    if (v10)
    {
      v2 = v11;
      goto LABEL_7;
    }
    while (1)
    {
      v2 = v11 + 1;
      if (__OFADD__(v11, 1))
        break;
      if (v2 >= v8)
        goto LABEL_18;
      v10 = *(_QWORD *)(v9 + 8 * v2);
      ++v11;
      if (v10)
        goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22DEADB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6900);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v28 - v11;
  if (*(_BYTE *)(v1 + 16) != 1)
    return result;
  if (*(_QWORD *)(v1 + 144))
    return result;
  if (*(_QWORD *)(v1 + 160))
    return result;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 168) + 16))
    return result;
  swift_beginAccess();
  v13 = *(_QWORD *)(v1 + 112);
  v14 = *(_QWORD *)(v13 + 64);
  v30 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v31 = (unint64_t)(v15 + 63) >> 6;
  v32 = v13;
  v29 = v31 - 1;
  result = swift_bridgeObjectRetain();
  v33 = 0;
  if (!v17)
    goto LABEL_12;
LABEL_10:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v19 = v18 | (v33 << 6);
  while (2)
  {
    v20 = *(_QWORD *)(v32 + 56);
    *(_QWORD *)v9 = *(_QWORD *)(*(_QWORD *)(v32 + 48) + 8 * v19);
    v21 = v20 + *(_QWORD *)(v3 + 72) * v19;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6908);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(&v9[*(int *)(v22 + 48)], v21, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 0, 1, v22);
    while (1)
    {
      sub_22DEA4DD0((uint64_t)v9, (uint64_t)v12, &qword_255DC6900);
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6908);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v12, 1, v27) == 1)
      {
        swift_release();
        *(_QWORD *)(v1 + 112) = MEMORY[0x24BEE4B00];
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v1 + 72))
        {
          swift_retain();
          sub_22DEFA5C0();
          swift_release();
        }
        *(_QWORD *)(v1 + 72) = 0;
        return swift_release();
      }
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v12[*(int *)(v27 + 48)], v2);
      sub_22DEFAB0C();
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v17)
        goto LABEL_10;
LABEL_12:
      v23 = v33 + 1;
      if (__OFADD__(v33, 1))
      {
        __break(1u);
        goto LABEL_36;
      }
      if (v23 < v31)
      {
        v24 = *(_QWORD *)(v30 + 8 * v23);
        if (v24)
          goto LABEL_15;
        v25 = v33 + 2;
        ++v33;
        if (v23 + 1 < v31)
        {
          v24 = *(_QWORD *)(v30 + 8 * v25);
          if (v24)
            goto LABEL_18;
          v33 = v23 + 1;
          if (v23 + 2 < v31)
          {
            v24 = *(_QWORD *)(v30 + 8 * (v23 + 2));
            if (v24)
            {
              v23 += 2;
              goto LABEL_15;
            }
            v25 = v23 + 3;
            v33 = v23 + 2;
            if (v23 + 3 < v31)
              break;
          }
        }
      }
LABEL_29:
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6908);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
      v17 = 0;
    }
    v24 = *(_QWORD *)(v30 + 8 * v25);
    if (v24)
    {
LABEL_18:
      v23 = v25;
LABEL_15:
      v17 = (v24 - 1) & v24;
      v19 = __clz(__rbit64(v24)) + (v23 << 6);
      v33 = v23;
      continue;
    }
    break;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v31)
    {
      v33 = v29;
      goto LABEL_29;
    }
    v24 = *(_QWORD *)(v30 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_15;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t NXSession.add(endpoint:update:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 160) = v2;
  *(_BYTE *)(v3 + 65) = a2;
  sub_22DEC26C8(a1, v3 + 16);
  sub_22DEC37B0(&qword_255DC6920, v4, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  *(_QWORD *)(v3 + 168) = sub_22DEFAA88();
  *(_QWORD *)(v3 + 176) = v5;
  return swift_task_switch();
}

uint64_t sub_22DEADFA4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15[6];
  unsigned __int8 v16;

  if (qword_255DCE6B0 != -1)
    swift_once();
  v1 = sub_22DEFA674();
  __swift_project_value_buffer(v1, (uint64_t)qword_255DCE6B8);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  v2 = sub_22DEFA65C();
  v3 = sub_22DEFAB84();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v15[0] = v5;
    *(_DWORD *)v4 = 136315138;
    sub_22DEC26C8(v0 + 16, v0 + 72);
    sub_22DE8D848();
    v6 = sub_22DEFAE3C();
    *(_QWORD *)(v0 + 152) = sub_22DE8C348(v6, v7, v15);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    _os_log_impl(&dword_22DE7A000, v2, v3, "endpoint add: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v5, -1, -1);
    MEMORY[0x22E321E0C](v4, -1, -1);
  }
  else
  {
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
  }

  v8 = *(unsigned __int8 *)(v0 + 65);
  swift_beginAccess();
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  sub_22DEC2740((uint64_t)v15, v0 + 16);
  swift_endAccess();
  sub_22DE809FC(v15[0], v15[1], v15[2], v15[3], v15[4], v15[5], v16);
  if (v8 != 1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v9 = *(_BYTE **)(v0 + 160);
  if ((v9[16] & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (v9[81] == 1)
  {
    v9[80] = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9[81] = 1;
  v10 = *(_QWORD *)(v0 + 160);
  *(_BYTE *)(v10 + 80) = 0;
  v11 = *(_BYTE **)(v0 + 160);
  if (*(_BYTE *)(v10 + 16) == 1)
  {
    v11[81] = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v11[45] == 1)
  {
    sub_22DEAE884();
    if ((v11[32] & 1) != 0)
      sub_22DEAEE8C();
    return swift_task_switch();
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v13;
    *v13 = v0;
    v13[1] = sub_22DEAE2E4;
    return sub_22DEAF2B4((uint64_t)v13, v14);
  }
}

uint64_t sub_22DEAE2E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEAE330()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_BYTE **)(v0 + 160);
  if (v1[80] == 1 && (v1[80] = 0, v2 = v1[16], v1 = *(_BYTE **)(v0 + 160), (v2 & 1) == 0))
  {
    if (v1[45] == 1)
    {
      sub_22DEAE884();
      if ((v1[32] & 1) != 0)
        sub_22DEAEE8C();
      return swift_task_switch();
    }
    else
    {
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v4;
      *v4 = v0;
      v4[1] = sub_22DEAE2E4;
      return sub_22DEAF2B4((uint64_t)v4, v5);
    }
  }
  else
  {
    v1[81] = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t NXSession.remove(endpoint:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[20] = v1;
  sub_22DEC26C8(a1, (uint64_t)(v2 + 2));
  sub_22DEC37B0(&qword_255DC6920, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v2[21] = sub_22DEFAA88();
  v2[22] = v4;
  return swift_task_switch();
}

uint64_t sub_22DEAE460()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15[6];
  unsigned __int8 v16;

  if (qword_255DCE6B0 != -1)
    swift_once();
  v1 = sub_22DEFA674();
  __swift_project_value_buffer(v1, (uint64_t)qword_255DCE6B8);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  v2 = sub_22DEFA65C();
  v3 = sub_22DEFAB84();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v15[0] = v5;
    *(_DWORD *)v4 = 136315138;
    sub_22DEC26C8(v0 + 16, v0 + 72);
    sub_22DE8D848();
    v6 = sub_22DEFAE3C();
    *(_QWORD *)(v0 + 152) = sub_22DE8C348(v6, v7, v15);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    _os_log_impl(&dword_22DE7A000, v2, v3, "endpoint remove: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v5, -1, -1);
    MEMORY[0x22E321E0C](v4, -1, -1);
  }
  else
  {
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
  }

  v8 = *(_QWORD *)(v0 + 160);
  swift_beginAccess();
  sub_22DEC3300(v0 + 16, (uint64_t)v15);
  swift_endAccess();
  sub_22DE809E8(v15[0], v15[1], v15[2], v15[3], v15[4], v15[5], v16);
  if ((*(_BYTE *)(v8 + 16) & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v9 = *(_QWORD *)(v0 + 160);
  if ((*(_BYTE *)(v9 + 81) & 1) != 0)
  {
    *(_BYTE *)(v9 + 80) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_BYTE *)(v9 + 81) = 1;
  v10 = *(_QWORD *)(v0 + 160);
  *(_BYTE *)(v10 + 80) = 0;
  v11 = *(_BYTE **)(v0 + 160);
  if (*(_BYTE *)(v10 + 16) == 1)
  {
    v11[81] = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v11[45] == 1)
  {
    sub_22DEAE884();
    if ((v11[32] & 1) != 0)
      sub_22DEAEE8C();
    return swift_task_switch();
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v13;
    *v13 = v0;
    v13[1] = sub_22DEAE780;
    return sub_22DEAF2B4((uint64_t)v13, v14);
  }
}

uint64_t sub_22DEAE780()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEAE7CC()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_BYTE **)(v0 + 160);
  if ((v1[80] & 1) != 0 && (v1[80] = 0, v2 = v1[16], v1 = *(_BYTE **)(v0 + 160), (v2 & 1) == 0))
  {
    if (v1[45] == 1)
    {
      sub_22DEAE884();
      if ((v1[32] & 1) != 0)
        sub_22DEAEE8C();
      return swift_task_switch();
    }
    else
    {
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v4;
      *v4 = v0;
      v4[1] = sub_22DEAE780;
      return sub_22DEAF2B4((uint64_t)v4, v5);
    }
  }
  else
  {
    v1[81] = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

void sub_22DEAE884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DEFA728();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  if (!*(_QWORD *)(v0 + 160))
  {
    v12 = *(_QWORD *)(v0 + 56);
    v33 = v12;
    v13 = NXEnvironmentValues.networkServerPort.getter();
    if (qword_255DCE6B0 != -1)
      swift_once();
    v14 = sub_22DEFA674();
    v32 = __swift_project_value_buffer(v14, (uint64_t)qword_255DCE6B8);
    v15 = sub_22DEFA65C();
    v16 = sub_22DEFABA8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v31 = v1;
      v18 = v12;
      v19 = v17;
      *(_DWORD *)v17 = 33554688;
      LOWORD(v33) = v13;
      sub_22DEFAC2C();
      _os_log_impl(&dword_22DE7A000, v15, v16, "network server start: port=%hu", v19, 6u);
      v20 = v19;
      v12 = v18;
      v1 = v31;
      MEMORY[0x22E321E0C](v20, -1, -1);
    }

    sub_22DEFA8E4();
    swift_allocObject();
    sub_22DEFA8D8();
    sub_22DEFA8B4();
    sub_22DEFA8A8();
    sub_22DEFA89C();
    sub_22DEFA8C0();
    sub_22DEFA8CC();
    if (v13)
      sub_22DEFA6F8();
    else
      sub_22DEFA710();
    sub_22DEFA890();
    swift_retain();
    sub_22DEFA884();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_22DEFA7B8();
    swift_allocObject();
    v21 = sub_22DEFA77C();
    swift_retain();
    sub_22DEF4DA4();
    swift_bridgeObjectRetain();
    sub_22DEFA794();
    v22 = sub_22DEFA7A0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 0, 1, v22);
    sub_22DEFA7AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    *(_QWORD *)(v1 + 160) = v21;
    swift_retain();
    swift_release();
    v23 = swift_allocObject();
    swift_weakInit();
    v24 = swift_allocObject();
    swift_weakInit();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v23;
    *(_QWORD *)(v25 + 24) = v24;
    swift_retain();
    swift_retain();
    sub_22DEFA74C();
    swift_release();
    swift_release();
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v26;
    *(_QWORD *)(v28 + 24) = v27;
    swift_retain();
    swift_retain();
    sub_22DEFA740();
    swift_release();
    swift_release();
    v33 = v12;
    v29 = (void *)NXEnvironmentValues.dispatchQueue.getter();
    sub_22DEFA770();
    swift_release_n();

  }
}

void sub_22DEAEE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _WORD v25[8];
  uint64_t aBlock;
  unint64_t v27;
  void (*v28)(uint64_t, void *);
  void *v29;
  uint64_t (*v30)(void *);
  uint64_t v31;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v0 + 144) && *(_QWORD *)(v0 + 160))
  {
    swift_retain();
    sub_22DEFA758();
    swift_release();
    v5 = sub_22DEFA728();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_22DE8731C((uint64_t)v4, &qword_255DC69F0);
    }
    else
    {
      v7 = sub_22DEFA71C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
      if (v7)
      {
        if (qword_255DCE6B0 != -1)
          swift_once();
        v8 = sub_22DEFA674();
        __swift_project_value_buffer(v8, (uint64_t)qword_255DCE6B8);
        v9 = sub_22DEFA65C();
        v10 = sub_22DEFABA8();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v11 = 33554688;
          LOWORD(aBlock) = v7;
          sub_22DEFAC2C();
          _os_log_impl(&dword_22DE7A000, v9, v10, "NAN publisher start: port=%hu", v11, 6u);
          MEMORY[0x22E321E0C](v11, -1, -1);
        }

        v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE297E8]), sel_init);
        v13 = *(void **)(v1 + 144);
        *(_QWORD *)(v1 + 144) = v12;
        v14 = v12;

        objc_msgSend(v14, sel_setControlFlags_, 1);
        aBlock = *(_QWORD *)(v1 + 56);
        v15 = aBlock;
        v16 = (void *)NXEnvironmentValues.dispatchQueue.getter();
        objc_msgSend(v14, sel_setDispatchQueue_, v16);

        aBlock = v15;
        NXEnvironmentValues.nanMockID.getter();
        if (v17)
        {
          v18 = (void *)sub_22DEFA9D4();
          swift_bridgeObjectRelease();
          objc_msgSend(v14, sel_setMockID_, v18);

          aBlock = 0x2E302E302E373231;
          v27 = 0xEA00000000003A31;
          v25[7] = v7;
          sub_22DEFAE3C();
          sub_22DEFAA10();
          swift_bridgeObjectRelease();
          v19 = (void *)sub_22DEFA9D4();
          swift_bridgeObjectRelease();
          objc_msgSend(v14, sel_setMockPeerEndpointString_, v19);

        }
        objc_msgSend(v14, sel_setPort_, v7);
        sub_22DEF4E40();
        swift_bridgeObjectRetain();
        v20 = (void *)sub_22DEFA9D4();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setServiceType_, v20);

        objc_msgSend(v14, sel_setTrafficFlags_, *(unsigned int *)(v1 + 36));
        v21 = swift_allocObject();
        swift_weakInit();
        v22 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = v21;
        *(_QWORD *)(v23 + 24) = v22;
        v30 = sub_22DEC998C;
        v31 = v23;
        aBlock = MEMORY[0x24BDAC760];
        v27 = 1107296256;
        v28 = sub_22DEBCBA0;
        v29 = &block_descriptor_94;
        v24 = _Block_copy(&aBlock);
        swift_release();
        objc_msgSend(v14, sel_activateWithCompletion_, v24);
        _Block_release(v24);

      }
    }
  }
}

uint64_t sub_22DEAF2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[22] = v2;
  sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v3[23] = sub_22DEFAA88();
  v3[24] = v4;
  return swift_task_switch();
}

uint64_t sub_22DEAF320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 176);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 200) = v2;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 65) = v3;
  v4 = 1 << v3;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v8 << 6);
  result = *(_QWORD *)(v0 + 200);
  while (1)
  {
    *(_QWORD *)(v0 + 208) = v8;
    *(_QWORD *)(v0 + 216) = v6;
    v16 = *(_QWORD *)(v0 + 176);
    sub_22DEC26C8(*(_QWORD *)(result + 48) + 56 * v10, v0 + 16);
    swift_beginAccess();
    v17 = *(_QWORD *)(*(_QWORD *)(v16 + 152) + 16);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
    if (!v17 || (sub_22DEC3A2C(v0 + 16), (v18 & 1) == 0))
    {
      swift_endAccess();
      sub_22DEC26C8(v0 + 16, v0 + 72);
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v19;
      *v19 = v0;
      v19[1] = sub_22DEAF57C;
      return sub_22DEBCBF4(v0 + 72);
    }
    swift_endAccess();
    result = sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    if (v6)
      goto LABEL_5;
LABEL_6:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    v12 = (unint64_t)((1 << *(_BYTE *)(v0 + 65)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 200);
    if (v11 >= v12)
      goto LABEL_25;
    v13 = result + 56;
    v14 = *(_QWORD *)(result + 56 + 8 * v11);
    ++v8;
    if (!v14)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v12)
        goto LABEL_25;
      v14 = *(_QWORD *)(v13 + 8 * v8);
      if (!v14)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v12)
          goto LABEL_25;
        v14 = *(_QWORD *)(v13 + 8 * v8);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v6 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
  }
  v15 = v11 + 3;
  if (v15 >= v12)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v13 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v14 = *(_QWORD *)(v13 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22DEAF57C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  sub_22DEC2704(v1 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
  return swift_task_switch();
}

void sub_22DEAF5DC()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  if (!v2)
    goto LABEL_3;
LABEL_2:
  v3 = __clz(__rbit64(v2));
  v2 &= v2 - 1;
  v4 = v3 | (v1 << 6);
  v5 = *(_QWORD *)(v0 + 200);
  while (1)
  {
    *(_QWORD *)(v0 + 208) = v1;
    *(_QWORD *)(v0 + 216) = v2;
    v11 = *(_QWORD *)(v0 + 176);
    sub_22DEC26C8(*(_QWORD *)(v5 + 48) + 56 * v4, v0 + 16);
    swift_beginAccess();
    v12 = *(_QWORD *)(*(_QWORD *)(v11 + 152) + 16);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
    if (!v12 || (sub_22DEC3A2C(v0 + 16), (v13 & 1) == 0))
    {
      swift_endAccess();
      sub_22DEC26C8(v0 + 16, v0 + 72);
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v14;
      *v14 = v0;
      v14[1] = sub_22DEAF57C;
      sub_22DEBCBF4(v0 + 72);
      return;
    }
    swift_endAccess();
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    if (v2)
      goto LABEL_2;
LABEL_3:
    v6 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    v7 = (unint64_t)((1 << *(_BYTE *)(v0 + 65)) + 63) >> 6;
    v5 = *(_QWORD *)(v0 + 200);
    if (v6 >= v7)
      goto LABEL_22;
    v8 = v5 + 56;
    v9 = *(_QWORD *)(v5 + 56 + 8 * v6);
    ++v1;
    if (!v9)
    {
      v1 = v6 + 1;
      if (v6 + 1 >= v7)
        goto LABEL_22;
      v9 = *(_QWORD *)(v8 + 8 * v1);
      if (!v9)
      {
        v1 = v6 + 2;
        if (v6 + 2 >= v7)
          goto LABEL_22;
        v9 = *(_QWORD *)(v8 + 8 * v1);
        if (!v9)
          break;
      }
    }
LABEL_16:
    v2 = (v9 - 1) & v9;
    v4 = __clz(__rbit64(v9)) + (v1 << 6);
  }
  v10 = v6 + 3;
  if (v10 >= v7)
  {
LABEL_22:
    swift_release();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v9 = *(_QWORD *)(v8 + 8 * v10);
  if (v9)
  {
    v1 = v10;
    goto LABEL_16;
  }
  while (1)
  {
    v1 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v1 >= v7)
      goto LABEL_22;
    v9 = *(_QWORD *)(v8 + 8 * v1);
    ++v10;
    if (v9)
      goto LABEL_16;
  }
LABEL_24:
  __break(1u);
}

void sub_22DEAF7EC()
{
  byte_255DCE6D8 = 1;
  qword_255DCE6E0 = 0xE400000000000000;
}

uint64_t sub_22DEAF808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  _QWORD v9[7];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x24BDAC7A8](result);
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = a3;
    v9[5] = a4;
    sub_22DEAF8C8((uint64_t)sub_22DEC9618, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DEAF8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isEscapingClosureAtFileLocation;

  v5 = (void *)NXEnvironmentValues.dispatchQueue.getter();
  sub_22DEFABFC();

  if ((swift_task_isCurrentExecutor() & 1) == 0)
    goto LABEL_6;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_22DEC92F0;
  *(_QWORD *)(v7 + 24) = v6;
  swift_retain();
  sub_22DEC92F0();
  if (v2)
  {
    swift_release();
    return swift_release();
  }
  swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_22DEFAC98();
    sub_22DEFAA10();
    sub_22DEFACE0();
    sub_22DEFAA10();
    result = sub_22DEFAD34();
    __break(1u);
  }
  return result;
}

uint64_t sub_22DEAFAB4(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  v7 = sub_22DEFA9E0();
  v9 = v8;
  if (a3)
    a3 = sub_22DEFA968();
  v10 = _Block_copy(a4);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  swift_retain();
  v6(v7, v9, a3, sub_22DEC9610, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEAFB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  void *v10;
  void (*v11)(uint64_t, void *, void *, void *);
  _QWORD v13[6];

  if (a1)
    v8 = (void *)sub_22DEFA95C();
  else
    v8 = 0;
  v9 = (void *)sub_22DEFA95C();
  v13[4] = a3;
  v13[5] = a4;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_22DEAFC98;
  v13[3] = &block_descriptor_75;
  v10 = _Block_copy(v13);
  v11 = *(void (**)(uint64_t, void *, void *, void *))(a5 + 16);
  swift_retain();
  v11(a5, v8, v9, v10);
  _Block_release(v10);

  return swift_release();
}

uint64_t sub_22DEAFC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v4 = a4;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (!a3)
  {
    v7 = 0;
    if (!a4)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = sub_22DEFA968();
  if (v4)
LABEL_3:
    v4 = sub_22DEFA968();
LABEL_4:
  swift_retain();
  v6(a2, v7, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEAFD58(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD v5[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x24BDAC7A8](result);
    v5[2] = a1;
    v5[3] = a2;
    sub_22DEAF8C8((uint64_t)sub_22DEC93A8, (uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DEAFE04(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = sub_22DEFA9E0();
  v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEAFE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  _QWORD v11[9];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x24BDAC7A8](result);
    v11[2] = a1;
    v11[3] = a2;
    v11[4] = a3;
    v11[5] = a4;
    v11[6] = a5;
    sub_22DEAF8C8((uint64_t)sub_22DEC8DBC, (uint64_t)v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DEAFF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  v8 = sub_22DEFA9E0();
  v10 = v9;
  if (a3)
    a3 = sub_22DEFA968();
  v11 = sub_22DEFA968();
  v12 = _Block_copy(a5);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  swift_retain();
  v7(v8, v10, a3, v11, sub_22DEC8DB4, v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_22DEB0038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;

  if (!a2)
  {
    v7 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)sub_22DEFA95C();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v8 = sub_22DEFA95C();
LABEL_6:
  v9 = (id)v8;
  (*(void (**)(uint64_t, uint64_t, void *))(a4 + 16))(a4, a1, v7);

}

uint64_t sub_22DEB00F8(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(int a1, uint64_t a2, uint64_t a3), uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *a1;
  v6 = *a2;
  v8 = *a3;
  v7 = a3[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  swift_retain();
  a4(v5, v6, sub_22DEC98E4, v9);
  return swift_release();
}

uint64_t sub_22DEB017C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69B0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_22DE8731C(a1, &qword_255DC69B0);
    v13 = sub_22DE9F9F8(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_22DEC63A4();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_22DEC5238(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_22DE8731C((uint64_t)v8, &qword_255DC69B0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_22DEC5A50((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22DEB0358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_22DEA2EEC((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_22DEC5B78(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_22DE8731C(a1, &qword_255DC69E0);
    sub_22DEC3D60(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_22DE8731C((uint64_t)v9, &qword_255DC69E0);
  }
}

uint64_t sub_22DEB042C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v4[12] = sub_22DEFAA88();
  v4[13] = v5;
  return swift_task_switch();
}

uint64_t sub_22DEB04A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28[3];

  v1 = *(_QWORD *)(v0 + 80);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 88);
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_8;
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  v5 = sub_22DE83DDC(v3, v4);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    swift_endAccess();
    type metadata accessor for NXError();
    v27 = 13;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v28[0] = 0xD000000000000022;
    v28[1] = 0x800000022DF032A0;
    sub_22DEFAA10();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v27, 0xD000000000000022, 0x800000022DF032A0, 0);
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = v5;
  v8 = *(_QWORD *)(v2 + 56);
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(v8 + 16 * v7);
  *(_QWORD *)(v0 + 112) = v9;
  *(_OWORD *)(v9 + 16) = v10;
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  if (qword_255DCE6B0 != -1)
    swift_once();
  v11 = sub_22DEFA674();
  __swift_project_value_buffer(v11, (uint64_t)qword_255DCE6B8);
  swift_bridgeObjectRetain_n();
  v12 = sub_22DEFA65C();
  v13 = sub_22DEFABA8();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 64);
  if (v14)
  {
    v25 = *(_QWORD *)(v0 + 56);
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v9;
    v17 = swift_slowAlloc();
    v28[0] = v17;
    *(_DWORD *)v16 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 48) = sub_22DE8C348(v25, v15, v28);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DE7A000, v12, v13, "CUMessageSession request: id=%{public}s", v16, 0xCu);
    swift_arrayDestroy();
    v18 = v17;
    v9 = v26;
    MEMORY[0x22E321E0C](v18, -1, -1);
    MEMORY[0x22E321E0C](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v21 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 72);
  v22 = *(_QWORD *)(v0 + 56);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v23;
  v23[2] = sub_22DECA01C;
  v23[3] = v9;
  v23[4] = v20;
  v23[5] = v22;
  v23[6] = v21;
  v24 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v24;
  sub_22DEC9F48(0, &qword_255DC6E40);
  *v24 = v0;
  v24[1] = sub_22DEB0850;
  return sub_22DEFAE78();
}

uint64_t sub_22DEB0850()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB08BC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_22DEB08F4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB0930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t *, _QWORD *))
{
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v11 = a2;
  v12 = a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[0] = sub_22DECA4AC;
  v10[1] = v8;
  swift_retain();
  a5(&v12, &v11, v10);
  return swift_release();
}

uint64_t sub_22DEB09B8(uint64_t a1, void (*a2)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3), uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void (*v18)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t);

  v18 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E60);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
  sub_22DEC9348();
  v12 = sub_22DEFA968();
  v13 = sub_22DEB0B20(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  swift_bridgeObjectRetain();
  v18(0, v13, sub_22DECA0AC, v15);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEB0B20(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[2];
  _OWORD v45[2];
  void *v46;
  uint64_t v47;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_22DEFAD10())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B00];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v5 = ~v8;
    v35 = a1 + 64;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 64);
    v7 = a1;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D68);
  v3 = sub_22DEFAD58();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  v4 = sub_22DEFAD04();
  v35 = 0;
  v5 = 0;
  v6 = 0;
  v7 = v4 | 0x8000000000000000;
LABEL_11:
  v34 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v36 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    v17 = sub_22DEFAD1C();
    if (!v17)
      goto LABEL_45;
    v19 = v18;
    *(_QWORD *)&v41 = v17;
    sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
    swift_dynamicCast();
    v47 = v19;
    v20 = v46;
LABEL_36:
    *(_QWORD *)&v45[0] = v20;
    sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
    swift_dynamicCast();
    swift_dynamicCast();
    v41 = v37;
    v42 = v38;
    v43 = v39;
    sub_22DE8730C(&v40, v44);
    v37 = v41;
    v38 = v42;
    v39 = v43;
    sub_22DE8730C(v44, v45);
    sub_22DE8730C(v45, &v41);
    result = sub_22DEFAC74();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      v13 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v3 + 48) + 40 * v13;
    *(_OWORD *)v14 = v37;
    *(_OWORD *)(v14 + 16) = v38;
    *(_QWORD *)(v14 + 32) = v39;
    result = (uint64_t)sub_22DE8730C(&v41, (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v13));
    ++*(_QWORD *)(v3 + 16);
  }
  if (v6)
  {
    v15 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v16 = v15 | (v36 << 6);
LABEL_35:
    v20 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v16);
    v25 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16);
    v46 = v20;
    v47 = v25;
    v26 = v20;
    swift_unknownObjectRetain();
    goto LABEL_36;
  }
  v21 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v21 >= v34)
    goto LABEL_45;
  v22 = *(_QWORD *)(v35 + 8 * v21);
  v23 = v36 + 1;
  if (v22)
    goto LABEL_34;
  v23 = v36 + 2;
  if (v36 + 2 >= v34)
    goto LABEL_45;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
    goto LABEL_34;
  v23 = v36 + 3;
  if (v36 + 3 >= v34)
    goto LABEL_45;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
    goto LABEL_34;
  v23 = v36 + 4;
  if (v36 + 4 >= v34)
    goto LABEL_45;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
  {
LABEL_34:
    v6 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v23 << 6);
    v36 = v23;
    goto LABEL_35;
  }
  v24 = v36 + 5;
  if (v36 + 5 >= v34)
  {
LABEL_45:
    v46 = 0;
    v47 = 0;
    swift_release();
    sub_22DEC93A0();
    return v3;
  }
  v22 = *(_QWORD *)(v35 + 8 * v24);
  if (v22)
  {
    v23 = v36 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v34)
      goto LABEL_45;
    v22 = *(_QWORD *)(v35 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_34;
  }
LABEL_47:
  __break(1u);
  return result;
}

void sub_22DEB0FB4(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void (*v20)(_QWORD, _QWORD, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t i;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a5;
  v44 = a8;
  v14 = sub_22DEFA674();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v18 = qword_255DCE6B0;
    v19 = a3;
    if (v18 != -1)
      swift_once();
    v20 = (void (*)(_QWORD, _QWORD, uint64_t))a7;
    __swift_project_value_buffer(v14, (uint64_t)qword_255DCE6B8);
    swift_bridgeObjectRetain_n();
    v21 = sub_22DEFA65C();
    v22 = sub_22DEFABA8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v46 = v24;
      *(_DWORD *)v23 = 136446210;
      swift_bridgeObjectRetain();
      v45 = sub_22DE8C348(v43, a6, &v46);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22DE7A000, v21, v22, "CUMessageSession response: id=%{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v24, -1, -1);
      MEMORY[0x22E321E0C](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
    sub_22DEC9348();
    v33 = sub_22DEFA968();
    v34 = sub_22DEB0B20(v33);
    swift_bridgeObjectRelease();
    v20(0, 0, v34);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_255DCE6B0 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v14, (uint64_t)qword_255DCE6B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v25, v14);
    swift_bridgeObjectRetain();
    sub_22DEA5084(a1, a2);
    v26 = a4;
    swift_bridgeObjectRetain();
    sub_22DEA5084(a1, a2);
    v27 = a4;
    v28 = sub_22DEFA65C();
    v29 = sub_22DEFAB9C();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v40 = v29;
      v41 = v28;
      v42 = a7;
      a7 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v46 = v39;
      *(_DWORD *)a7 = 136446466;
      swift_bridgeObjectRetain();
      v45 = sub_22DE8C348(v43, a6, &v46);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(a7 + 12) = 2080;
      if (!a4)
        goto LABEL_17;
      swift_getErrorValue();
      v30 = sub_22DEFAEC0();
      for (i = v31; ; i = 0xE300000000000000)
      {
        v45 = sub_22DE8C348(v30, i, &v46);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        sub_22DEA326C(a1, a2);

        sub_22DEA326C(a1, a2);
        v37 = v41;
        _os_log_impl(&dword_22DE7A000, v41, (os_log_type_t)v40, "### CUMessageSession request failed: id=%{public}s, error=%s", (uint8_t *)a7, 0x16u);
        v38 = v39;
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v38, -1, -1);
        MEMORY[0x22E321E0C](a7, -1, -1);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        a7 = v42;
        if (!a4)
          break;
LABEL_14:
        v35 = (void *)sub_22DEFA524();
        v36 = (uint64_t)objc_msgSend(v35, sel_code);
        if (v36 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
          return;
        }
        if (v36 <= 0x7FFFFFFF)
          goto LABEL_20;
        __break(1u);
LABEL_17:
        v30 = 7104878;
      }
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_22DEA326C(a1, a2);

      sub_22DEA326C(a1, a2);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      if (a4)
        goto LABEL_14;
    }
    v35 = 0;
    v36 = -6700;
LABEL_20:
    ((void (*)(uint64_t, _QWORD, _QWORD))a7)(v36, 0, 0);

  }
}

uint64_t sub_22DEB1500(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  __int128 v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(uint64_t *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD v54[2];
  int v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v63 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DEFA59C();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
  {
    type metadata accessor for NXError();
    LOBYTE(v65) = 8;
    NXError.__allocating_init(_:_:_:)((uint64_t)&v65, 0xD00000000000001BLL, 0x800000022DF02CD0, 0);
    return swift_willThrow();
  }
  else
  {
    v56 = v16;
    v60 = v9;
    v61 = v3;
    v62 = v4;
    v18 = (char *)v54 - v14;
    v19 = v15;
    sub_22DEFA590();
    v20 = v10;
    v21 = (void (*)(uint64_t, char *, uint64_t))v11[2];
    v21(v19, v18, v20);
    type metadata accessor for NXSession.RequestTransaction(0);
    v22 = swift_allocObject();
    v23 = OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount;
    *(_QWORD *)(v22 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount) = 0;
    v24 = (void (*)(uint64_t, uint64_t, uint64_t))v11[4];
    v59 = v19;
    v24(v22 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_xid, v19, v20);
    v25 = v22 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage;
    v26 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v25 = *(_OWORD *)a1;
    *(_OWORD *)(v25 + 16) = v26;
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v22 + v23) = 0;
    v57 = v22;
    v27 = (_QWORD *)(v22
                   + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_responseHandler);
    v28 = v63;
    *v27 = a2;
    v27[1] = v28;
    sub_22DEC8A58((_QWORD *)a1);
    v29 = qword_255DCE6B0;
    swift_retain();
    if (v29 != -1)
      swift_once();
    v30 = sub_22DEFA674();
    __swift_project_value_buffer(v30, (uint64_t)qword_255DCE6B8);
    v31 = v56;
    v63 = v18;
    v21(v56, v18, v20);
    sub_22DEC8A58((_QWORD *)a1);
    sub_22DEC8A58((_QWORD *)a1);
    v32 = sub_22DEFA65C();
    v33 = sub_22DEFAB84();
    v34 = v33;
    v35 = os_log_type_enabled(v32, v33);
    v58 = v21;
    if (v35)
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v65 = v37;
      *(_DWORD *)v36 = 136446466;
      v54[1] = v36 + 4;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v55 = v34;
      v38 = sub_22DEFAE3C();
      v64 = sub_22DE8C348(v38, v39, &v65);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v40 = (void (*)(uint64_t, uint64_t))v11[1];
      v40(v31, v20);
      *(_WORD *)(v36 + 12) = 2082;
      v42 = *(_QWORD *)a1;
      v41 = *(_QWORD *)(a1 + 8);
      swift_bridgeObjectRetain();
      v64 = sub_22DE8C348(v42, v41, &v65);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      sub_22DEC8AA0((_QWORD *)a1);
      sub_22DEC8AA0((_QWORD *)a1);
      _os_log_impl(&dword_22DE7A000, v32, (os_log_type_t)v55, "request queue: xid=%{public}s, name=%{public}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v37, -1, -1);
      MEMORY[0x22E321E0C](v36, -1, -1);
    }
    else
    {
      v40 = (void (*)(uint64_t, uint64_t))v11[1];
      v40(v31, v20);
      sub_22DEC8AA0((_QWORD *)a1);
      sub_22DEC8AA0((_QWORD *)a1);
    }

    v43 = v61;
    v44 = v20;
    v45 = *(_QWORD *)(v61 + 136);
    v46 = v59;
    v47 = v63;
    v58(v59, v63, v44);
    v65 = v57;
    v48 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)v45 + 240);
    swift_retain();
    swift_retain();
    v48(&v65, v46);
    swift_release();
    v49 = sub_22DEFAAC4();
    v50 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v60, 1, 1, v49);
    v52 = sub_22DEC37B0(&qword_255DC6920, v51, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
    v53 = (_QWORD *)swift_allocObject();
    v53[2] = v43;
    v53[3] = v52;
    v53[4] = v43;
    swift_retain_n();
    sub_22DEB34C8(v50, (uint64_t)&unk_255DC6CD0, (uint64_t)v53);
    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v40)(v47, v44);
  }
}

id NXSession.cuMessageSessionTemplate.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
  {
    v4 = (_QWORD *)v0;
    v5 = *(void **)(v0 + 104);
    if (v5)
    {
      v1 = *(id *)(v0 + 104);
    }
    else
    {
      v6 = *(void **)(v0 + 96);
      if (v6)
      {
        v7 = *(id *)(v0 + 96);
      }
      else
      {
        if (qword_255DCE6B0 != -1)
          swift_once();
        v8 = sub_22DEFA674();
        __swift_project_value_buffer(v8, (uint64_t)qword_255DCE6B8);
        v9 = sub_22DEFA65C();
        v10 = sub_22DEFABA8();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v11 = 0;
          _os_log_impl(&dword_22DE7A000, v9, v10, "CUMessageSession start", v11, 2u);
          MEMORY[0x22E321E0C](v11, -1, -1);
        }

        v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE297D8]), sel_init);
        v13 = (void *)v4[12];
        v4[12] = v12;
        v7 = v12;

        v27 = v4[7];
        v14 = (void *)NXEnvironmentValues.dispatchQueue.getter();
        objc_msgSend(v7, sel_setDispatchQueue_, v14, v27);

        v15 = swift_allocObject();
        swift_weakInit();
        v31 = sub_22DEC8D4C;
        v32 = v15;
        v16 = MEMORY[0x24BDAC760];
        v27 = MEMORY[0x24BDAC760];
        v28 = 1107296256;
        v29 = sub_22DEAFAB4;
        v30 = &block_descriptor_2;
        v17 = _Block_copy(&v27);
        swift_release();
        objc_msgSend(v7, sel_setRegisterRequestHandler_, v17);
        _Block_release(v17);
        v18 = swift_allocObject();
        swift_weakInit();
        v31 = sub_22DEC8D74;
        v32 = v18;
        v27 = v16;
        v28 = 1107296256;
        v29 = sub_22DEAFE04;
        v30 = &block_descriptor_53;
        v19 = _Block_copy(&v27);
        swift_release();
        objc_msgSend(v7, sel_setDeregisterRequestHandler_, v19);
        _Block_release(v19);
        v20 = swift_allocObject();
        swift_weakInit();
        v31 = sub_22DEC8D7C;
        v32 = v20;
        v27 = v16;
        v28 = 1107296256;
        v29 = sub_22DEAFF28;
        v30 = &block_descriptor_57;
        v21 = _Block_copy(&v27);
        swift_release();
        objc_msgSend(v7, sel_setSendRequestHandler_, v21);
        _Block_release(v21);
        objc_msgSend(v7, sel_activate);
        v6 = 0;
      }
      v22 = v6;
      v23 = objc_msgSend(v7, sel_templateSession);

      if (!v23)
      {
        v1 = (id)type metadata accessor for NXError();
        LOBYTE(v27) = 1;
        v3 = 0xD000000000000027;
        v2 = 0x800000022DF02CA0;
        goto LABEL_3;
      }
      v24 = (void *)v4[13];
      v4[13] = v23;
      v1 = v23;

      v5 = 0;
    }
    v25 = v5;
    return v1;
  }
  v1 = (id)type metadata accessor for NXError();
  LOBYTE(v27) = 8;
  v2 = 0x800000022DF02CD0;
  v3 = 0xD00000000000001BLL;
LABEL_3:
  NXError.__allocating_init(_:_:_:)((uint64_t)&v27, v3, v2, 0);
  swift_willThrow();
  return v1;
}

uint64_t NXSession.perform(command:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 120) = v1;
  v4 = sub_22DEFA674();
  *(_QWORD *)(v2 + 128) = v4;
  *(_QWORD *)(v2 + 136) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 144) = swift_task_alloc();
  *(_OWORD *)(v2 + 152) = *(_OWORD *)a1;
  *(_BYTE *)(v2 + 57) = *(_BYTE *)(a1 + 16);
  sub_22DEC37B0(&qword_255DC6920, v5, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  *(_QWORD *)(v2 + 168) = sub_22DEFAA88();
  *(_QWORD *)(v2 + 176) = v6;
  return swift_task_switch();
}

uint64_t sub_22DEB1EA0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t Strong;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t (*v38)(void);
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];

  if (qword_255DCE6B0 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 57);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_255DCE6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  sub_22DEC34A8(v3, v2, v1);
  sub_22DEC34A8(v3, v2, v1);
  v8 = sub_22DEFA65C();
  v9 = sub_22DEFABA8();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_BYTE *)(v0 + 57);
  v13 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 128);
  if (v10)
  {
    v46 = *(_QWORD *)(v0 + 128);
    v45 = *(_QWORD *)(v0 + 136);
    v17 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    *(_DWORD *)v17 = 136315138;
    v47 = v44;
    strcpy((char *)v48, "connection: ");
    BYTE5(v48[1]) = 0;
    HIWORD(v48[1]) = -5120;
    *(_QWORD *)(v0 + 88) = v13;
    *(_QWORD *)(v0 + 96) = v12;
    *(_BYTE *)(v0 + 104) = v11;
    sub_22DEC34A8(v13, v12, v11);
    sub_22DEC34C8();
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    sub_22DEC34B8(v13, v12, v11);
    *(_QWORD *)(v0 + 112) = sub_22DE8C348(v48[0], v48[1], &v47);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC34B8(v13, v12, v11);
    sub_22DEC34B8(v13, v12, v11);
    _os_log_impl(&dword_22DE7A000, v8, v9, "perform command: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v44, -1, -1);
    MEMORY[0x22E321E0C](v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v14, v46);
  }
  else
  {
    sub_22DEC34B8(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 57));
    sub_22DEC34B8(v13, v12, v11);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  if (*(_BYTE *)(v0 + 57) == 1)
  {
    v18 = *(_QWORD *)(v0 + 120);
    LOBYTE(v48[0]) = *(_QWORD *)(v0 + 152);
    *(_DWORD *)(v18 + 40) = sub_22DE8043C((unsigned __int8 *)v48);
    *(_BYTE *)(v18 + 44) = 0;
  }
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 184) = Strong;
  if (Strong)
  {
    v20 = *(_BYTE *)(v0 + 57);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 152);
    *(_BYTE *)(v0 + 80) = v20;
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v21;
    *v21 = v0;
    v21[1] = sub_22DEB23FC;
    v23 = v0 + 64;
    return NXConnection.perform(command:)(v23, v22);
  }
  v24 = *(_QWORD *)(v0 + 120);
  swift_beginAccess();
  v25 = *(_QWORD *)(v24 + 152);
  *(_QWORD *)(v0 + 208) = v25;
  if (*(_QWORD *)(v25 + 16))
  {
    v26 = *(_BYTE *)(v25 + 32);
    *(_BYTE *)(v0 + 58) = v26;
    v27 = -1;
    v28 = -1 << v26;
    if (-(-1 << v26) < 64)
      v27 = ~(-1 << -(char)v28);
    v29 = v27 & *(_QWORD *)(v25 + 64);
    v30 = (_QWORD *)swift_bridgeObjectRetain();
    if (v29)
    {
      v31 = 0;
      v32 = __clz(__rbit64(v29));
      v33 = (v29 - 1) & v29;
LABEL_15:
      *(_QWORD *)(v0 + 216) = v31;
      *(_QWORD *)(v0 + 224) = v33;
      v34 = *(_BYTE *)(v0 + 57);
      v35 = (_QWORD *)(v30[7] + 24 * v32);
      *(_QWORD *)(v0 + 232) = *v35;
      *(_QWORD *)(v0 + 240) = v35[1];
      *(_QWORD *)(v0 + 248) = v35[2];
      *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 152);
      *(_BYTE *)(v0 + 56) = v34;
      swift_retain();
      swift_retain();
      swift_retain();
      v36 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v36;
      *v36 = v0;
      v36[1] = sub_22DEB249C;
      v23 = v0 + 40;
      return NXConnection.perform(command:)(v23, v22);
    }
    v39 = 63 - v28;
    if ((unint64_t)(63 - v28) > 0x7F)
    {
      v40 = v30[9];
      if (v40)
      {
        v31 = 1;
LABEL_21:
        v33 = (v40 - 1) & v40;
        v32 = __clz(__rbit64(v40)) + (v31 << 6);
        goto LABEL_15;
      }
      if (v39 >= 0xC0)
      {
        v40 = v30[10];
        if (v40)
        {
          v31 = 2;
          goto LABEL_21;
        }
        if (v39 >= 0x100)
        {
          v40 = v30[11];
          if (v40)
          {
            v31 = 3;
            goto LABEL_21;
          }
          if (v39 >= 0x140)
          {
            v40 = v30[12];
            if (v40)
            {
              v31 = 4;
              goto LABEL_21;
            }
            v41 = 0;
            v42 = v39 >> 6;
            if (v42 <= 5)
              v42 = 5;
            v43 = v42 - 5;
            while (v43 != v41)
            {
              v40 = v30[v41++ + 13];
              if (v40)
              {
                v31 = v41 + 4;
                goto LABEL_21;
              }
            }
          }
        }
      }
    }
    swift_release();
    swift_task_dealloc();
    v38 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    LOBYTE(v48[0]) = 19;
    type metadata accessor for NXError();
    NXError.__allocating_init(_:_:_:)((uint64_t)v48, 0x656E6E6F63206F4ELL, 0xED00006E6F697463, 0);
    swift_willThrow();
    swift_task_dealloc();
    v38 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v38();
}

uint64_t sub_22DEB23FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB2460()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB249C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB2500()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;

  swift_release();
  swift_release();
  result = swift_release();
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  if (v3)
  {
    v4 = (v3 - 1) & v3;
    v5 = __clz(__rbit64(v3)) | (v2 << 6);
    result = *(_QWORD *)(v0 + 208);
LABEL_3:
    *(_QWORD *)(v0 + 216) = v2;
    *(_QWORD *)(v0 + 224) = v4;
    v6 = *(_BYTE *)(v0 + 57);
    v7 = (_QWORD *)(*(_QWORD *)(result + 56) + 24 * v5);
    *(_QWORD *)(v0 + 232) = *v7;
    *(_QWORD *)(v0 + 240) = v7[1];
    *(_QWORD *)(v0 + 248) = v7[2];
    *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 152);
    *(_BYTE *)(v0 + 56) = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v8;
    *v8 = v0;
    v8[1] = sub_22DEB249C;
    return NXConnection.perform(command:)(v0 + 40, v9);
  }
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v11 = (unint64_t)((1 << *(_BYTE *)(v0 + 58)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 208);
    if (v10 >= v11)
      goto LABEL_18;
    v12 = result + 64;
    v13 = *(_QWORD *)(result + 64 + 8 * v10);
    ++v2;
    if (v13)
    {
LABEL_7:
      v4 = (v13 - 1) & v13;
      v5 = __clz(__rbit64(v13)) + (v2 << 6);
      goto LABEL_3;
    }
    v2 = v10 + 1;
    if (v10 + 1 >= v11)
      goto LABEL_18;
    v13 = *(_QWORD *)(v12 + 8 * v2);
    if (v13)
      goto LABEL_7;
    v2 = v10 + 2;
    if (v10 + 2 >= v11)
      goto LABEL_18;
    v13 = *(_QWORD *)(v12 + 8 * v2);
    if (v13)
      goto LABEL_7;
    v14 = v10 + 3;
    if (v14 >= v11)
    {
LABEL_18:
      swift_release();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v13 = *(_QWORD *)(v12 + 8 * v14);
    if (v13)
    {
      v2 = v14;
      goto LABEL_7;
    }
    while (1)
    {
      v2 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if (v2 >= v11)
        goto LABEL_18;
      v13 = *(_QWORD *)(v12 + 8 * v2);
      ++v14;
      if (v13)
        goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22DEB26D4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB2710()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t NXSession.Command.description.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "connection: ");
  sub_22DEC34C8();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t static NXSession.Command.== infix(_:_:)(__int128 *a1, __int128 *a2)
{
  char v2;
  char v3;
  __int128 v5;
  char v6;
  __int128 v7;
  char v8;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_BYTE *)a2 + 16);
  v7 = *a1;
  v8 = v2;
  v5 = *a2;
  v6 = v3;
  return static NXConnection.Command.== infix(_:_:)(&v7, &v5) & 1;
}

uint64_t sub_22DEB2840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_22DEC8738(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_22DEB286C()
{
  sub_22DEC350C();
  return sub_22DEFAF44();
}

uint64_t sub_22DEB2894()
{
  sub_22DEC350C();
  return sub_22DEFAF50();
}

uint64_t sub_22DEB28BC()
{
  sub_22DEC3550();
  return sub_22DEFAF44();
}

uint64_t sub_22DEB28E4()
{
  sub_22DEC3550();
  return sub_22DEFAF50();
}

uint64_t NXSession.Command.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[12];
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6980);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6988);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *v1;
  v13 = v1[1];
  v12 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEC350C();
  sub_22DEFAF2C();
  sub_22DEC3550();
  sub_22DEFADE8();
  v16 = v9;
  v17 = v13;
  v18 = v12;
  sub_22DEC3594();
  sub_22DEFAE30();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v5, v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v8, v6);
}

uint64_t NXSession.Command.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v24 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6998);
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69A0);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEC350C();
  v9 = v29;
  sub_22DEFAF20();
  if (v9)
    goto LABEL_5;
  v22 = v3;
  v23 = a1;
  v11 = v25;
  v10 = v26;
  v29 = v6;
  if (*(_QWORD *)(sub_22DEFADDC() + 16) != 1)
  {
    v13 = v10;
    v14 = sub_22DEFACBC();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v16 = &type metadata for NXSession.Command;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v13);
    a1 = v23;
LABEL_5:
    v19 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v19);
  }
  sub_22DEC3550();
  sub_22DEFAD7C();
  v12 = v29;
  sub_22DEC35D8();
  sub_22DEFADD0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v10);
  v18 = v28;
  v19 = (uint64_t)v23;
  v20 = v24;
  *v24 = v27;
  *((_BYTE *)v20 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

uint64_t sub_22DEB2D6C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return NXSession.Command.init(from:)(a1, a2);
}

uint64_t sub_22DEB2D80(_QWORD *a1)
{
  return NXSession.Command.encode(to:)(a1);
}

uint64_t sub_22DEB2D98(__int128 *a1, __int128 *a2)
{
  char v2;
  char v3;
  __int128 v5;
  char v6;
  __int128 v7;
  char v8;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_BYTE *)a2 + 16);
  v7 = *a1;
  v8 = v2;
  v5 = *a2;
  v6 = v3;
  return static NXConnection.Command.== infix(_:_:)(&v7, &v5) & 1;
}

uint64_t NXSession.events.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v2 + 64);
  if (v15 == -1)
  {
    __break(1u);
  }
  else
  {
    v25[1] = a1;
    v26 = v12;
    *(_QWORD *)(v2 + 64) = v15 + 1;
    if (qword_255DCE6B0 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v16 = sub_22DEFA674();
  __swift_project_value_buffer(v16, (uint64_t)qword_255DCE6B8);
  v17 = sub_22DEFA65C();
  v18 = sub_22DEFAB84();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v25[0] = v2;
    v20 = v19;
    *(_DWORD *)v19 = 134217984;
    v27 = v15;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v17, v18, "event monitor start: id=%llu", v20, 0xCu);
    MEMORY[0x22E321E0C](v20, -1, -1);
  }

  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE6A10], v7);
  sub_22DEFAAD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v6, v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v11);
  swift_beginAccess();
  sub_22DEB017C((uint64_t)v6, v15);
  swift_endAccess();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v15;
  sub_22DEFAAE8();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v11);
}

uint64_t sub_22DEB30D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v7;
  v8[5] = a2;
  sub_22DEB3614((uint64_t)v5, (uint64_t)&unk_255DC6D38, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_22DEB31F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch();
}

uint64_t sub_22DEB320C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    type metadata accessor for NXSession();
    sub_22DEC37B0(&qword_255DC6920, v2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEB32C8()
{
  uint64_t v0;

  sub_22DEB3328(*(_QWORD *)(v0 + 56));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEB330C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB3328(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD v11[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DCE6B0 != -1)
    swift_once();
  v5 = sub_22DEFA674();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DCE6B8);
  v6 = sub_22DEFA65C();
  v7 = sub_22DEFAB84();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    v11[1] = a1;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v6, v7, "event monitor cancel: id=%llu", v8, 0xCu);
    MEMORY[0x22E321E0C](v8, -1, -1);
  }

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  swift_beginAccess();
  sub_22DEB017C((uint64_t)v4, a1);
  return swift_endAccess();
}

uint64_t sub_22DEB34C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22DEFAAC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22DEFAAB8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22DE8731C(a1, &qword_255DC6918);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22DEFAA88();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_22DEB3614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22DEFAAC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22DEFAAB8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22DE8731C(a1, &qword_255DC6918);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22DEFAA88();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D50);
  return swift_task_create();
}

uint64_t NXSession._report(event:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t *v21;
  __int128 v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  int64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  char v70;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69C0);
  v58 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  v64 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6900);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (int64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v49 - v11;
  v12 = *(void **)(a1 + 8);
  v65 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(unsigned __int8 *)(a1 + 24);
  swift_beginAccess();
  v15 = *(_QWORD *)(v1 + 112);
  v16 = *(_QWORD *)(v15 + 64);
  v50 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v51 = (unint64_t)(v17 + 63) >> 6;
  v49 = v51 - 1;
  v55 = v15;
  result = swift_bridgeObjectRetain();
  v60 = 0;
  v21 = &qword_255DC6908;
  *(_QWORD *)&v22 = 134218242;
  v53 = v22;
  v52 = MEMORY[0x24BEE4AD8] + 8;
  v63 = v10;
  v54 = v3;
  v56 = v5;
  while (1)
  {
    if (v19)
    {
      v61 = (v19 - 1) & v19;
      v25 = __clz(__rbit64(v19)) | (v60 << 6);
LABEL_8:
      v26 = *(_QWORD *)(v55 + 56);
      *v10 = *(_QWORD *)(*(_QWORD *)(v55 + 48) + 8 * v25);
      v27 = v64;
      v28 = v26 + *(_QWORD *)(v64 + 72) * v25;
      v29 = __swift_instantiateConcreteTypeFromMangledName(v21);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
      v10 = v63;
      v30((char *)v63 + *(int *)(v29 + 48), v28, v5);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 0, 1, v29);
      goto LABEL_27;
    }
    v31 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v31 < v51)
    {
      v32 = *(_QWORD *)(v50 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v60 + 2;
      ++v60;
      if (v31 + 1 < v51)
      {
        v32 = *(_QWORD *)(v50 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v60 = v31 + 1;
        if (v31 + 2 < v51)
        {
          v32 = *(_QWORD *)(v50 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v33 = v31 + 3;
          v60 = v31 + 2;
          if (v31 + 3 < v51)
            break;
        }
      }
    }
LABEL_26:
    v34 = __swift_instantiateConcreteTypeFromMangledName(v21);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v10, 1, 1, v34);
    v61 = 0;
LABEL_27:
    v35 = v59;
    sub_22DEA4DD0((uint64_t)v10, (uint64_t)v59, &qword_255DC6900);
    v36 = v21;
    v37 = __swift_instantiateConcreteTypeFromMangledName(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v35, 1, v37) == 1)
      return swift_release();
    v38 = *(_QWORD *)v35;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v62, &v35[*(int *)(v37 + 48)], v5);
    if (qword_255DCE6B0 != -1)
      swift_once();
    v39 = sub_22DEFA674();
    __swift_project_value_buffer(v39, (uint64_t)qword_255DCE6B8);
    v40 = v65;
    sub_22DEC3648(v65, v12, v13, v14);
    sub_22DEC3648(v40, v12, v13, v14);
    v41 = sub_22DEFA65C();
    v42 = sub_22DEFABA8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      *(_DWORD *)v43 = v53;
      *(_QWORD *)(v43 + 4) = v38;
      *(_WORD *)(v43 + 12) = 2080;
      v66 = v44;
      v67 = v65;
      v68 = v12;
      v69 = v13;
      v70 = v14;
      NXSession.Event.description.getter();
      *(_QWORD *)(v43 + 14) = sub_22DE8C348(v45, v46, &v66);
      swift_bridgeObjectRelease();
      sub_22DEC36FC(v65, v12, v13, v14);
      sub_22DEC36FC(v65, v12, v13, v14);
      _os_log_impl(&dword_22DE7A000, v41, v42, "event monitor report: id=%llu, event={%s}", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      v47 = v44;
      v40 = v65;
      MEMORY[0x22E321E0C](v47, -1, -1);
      v48 = v43;
      v3 = v54;
      MEMORY[0x22E321E0C](v48, -1, -1);
    }
    else
    {
      sub_22DEC36FC(v40, v12, v13, v14);
      sub_22DEC36FC(v40, v12, v13, v14);
    }

    v10 = v63;
    v67 = v40;
    v68 = v12;
    v69 = v13;
    v70 = v14;
    sub_22DEC3648(v40, v12, v13, v14);
    v5 = v56;
    v23 = v57;
    v24 = v62;
    sub_22DEFAB00();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v3);
    result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v24, v5);
    v21 = v36;
    v19 = v61;
  }
  v32 = *(_QWORD *)(v50 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v60 = v31;
    v61 = (v32 - 1) & v32;
    v25 = __clz(__rbit64(v32)) + (v31 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v51)
    {
      v60 = v49;
      goto LABEL_26;
    }
    v32 = *(_QWORD *)(v50 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
LABEL_34:
  __break(1u);
  return result;
}

void NXSession.Event.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_22DEB3DFC()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unint64_t v3;

  sub_22DEC3648(v3, v1, v0, v2);
  type metadata accessor for NXError();
  sub_22DEC37B0((unint64_t *)&qword_255DC5ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
  sub_22DEFAEC0();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEC36FC(v3, v1, v0, v2);
  return 0x203A726F727265;
}

uint64_t NXSession.Event.asyncDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v1 + 96) = *(_OWORD *)v0;
  *(_QWORD *)(v1 + 112) = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + 33) = *(_BYTE *)(v0 + 24);
  return swift_task_switch();
}

void sub_22DEB40CC()
{
  __asm { BR              X10 }
}

uint64_t sub_22DEB4138()
{
  unsigned int v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v4 = *(void **)(v2 + 104);
  v3 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 88) = v1;
  sub_22DEC3648(v1, v4, v3, v0);
  type metadata accessor for NXError();
  sub_22DEC37B0((unint64_t *)&qword_255DC5ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
  sub_22DEFAEC0();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEC36FC(v1, v4, v3, v0);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2 + 8))(0x203A726F727265, 0xE700000000000000);
}

uint64_t sub_22DEB41F4()
{
  _QWORD *v0;
  _QWORD *v1;

  swift_retain();
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  v0[9] = 0xD000000000000013;
  v0[10] = 0x800000022DF02D30;
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_22DEB4370;
  return NXConnection.asyncDescription.getter();
}

uint64_t sub_22DEB4370(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB43CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  unsigned int v4;

  v2 = *(void **)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(unsigned __int8 *)(v0 + 33);
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEC36FC(v3, v2, v1, v4);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_22DEB4440(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB449C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  unsigned int v4;

  v2 = *(void **)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(unsigned __int8 *)(v0 + 33);
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEC36FC(v3, v2, v1, v4);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_22DEB4510(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB456C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  v2 = *(void **)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_BYTE *)(v0 + 33) & 0xEF;
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = v3;
  sub_22DEC37F0();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEC377C(v2, v1, v3);
  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t NXSession.registerRequestHandler(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[5];

  v3 = v1;
  v4 = (uint64_t)a1;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  v9 = v8;
  if (qword_255DCE6B0 != -1)
    swift_once();
  v10 = sub_22DEFA674();
  __swift_project_value_buffer(v10, (uint64_t)qword_255DCE6B8);
  swift_bridgeObjectRetain_n();
  v11 = sub_22DEFA65C();
  v12 = sub_22DEFABA8();
  if (os_log_type_enabled(v11, v12))
  {
    v27[4] = v2;
    v23 = v4;
    v13 = (uint8_t *)swift_slowAlloc();
    v22 = v3;
    v14 = swift_slowAlloc();
    *(_QWORD *)&v24 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    v27[0] = sub_22DE8C348(v7, v9, (uint64_t *)&v24);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DE7A000, v11, v12, "request handler register: name=%s", v13, 0xCu);
    swift_arrayDestroy();
    v15 = v14;
    v3 = v22;
    MEMORY[0x22E321E0C](v15, -1, -1);
    v16 = v13;
    v4 = v23;
    MEMORY[0x22E321E0C](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(v3 + 120);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_22DE83DDC(v7, v9);
    if ((v19 & 1) != 0)
    {
      sub_22DE83EBC(*(_QWORD *)(v17 + 56) + 40 * v18, (uint64_t)&v24);
    }
    else
    {
      v26 = 0;
      v24 = 0u;
      v25 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
  }
  swift_endAccess();
  v20 = *((_QWORD *)&v25 + 1);
  sub_22DE8731C((uint64_t)&v24, &qword_255DC69E0);
  if (v20)
  {
    type metadata accessor for NXError();
    LOBYTE(v27[0]) = 7;
    *(_QWORD *)&v24 = 0;
    *((_QWORD *)&v24 + 1) = 0xE000000000000000;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v24 = 0xD000000000000029;
    *((_QWORD *)&v24 + 1) = 0x800000022DF02D50;
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)v27, v24, *((uint64_t *)&v24 + 1), 0);
    return swift_willThrow();
  }
  else
  {
    sub_22DE83EBC(v4, (uint64_t)&v24);
    swift_beginAccess();
    sub_22DEB0358((uint64_t)&v24, v7, v9);
    return swift_endAccess();
  }
}

Swift::Void __swiftcall NXSession.deregisterRequestHandler(name:)(Swift::String name)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  if (qword_255DCE6B0 != -1)
    swift_once();
  v3 = sub_22DEFA674();
  __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
  swift_bridgeObjectRetain_n();
  v4 = sub_22DEFA65C();
  v5 = sub_22DEFABA8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_QWORD *)&v8[0] = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    sub_22DE8C348(countAndFlagsBits, (unint64_t)object, (uint64_t *)v8);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DE7A000, v4, v5, "request handler deregister: name=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v7, -1, -1);
    MEMORY[0x22E321E0C](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_22DEB0358((uint64_t)v8, countAndFlagsBits, (uint64_t)object);
  swift_endAccess();
}

void sub_22DEB4B8C(uint64_t a1, unint64_t a2, void **a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;
  id v20;
  id v21;
  _BYTE *v22;
  int v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  id v54;
  _BYTE v55[12];
  int v56;
  uint64_t v57;
  id v58;
  void (*v59)(_BYTE *, uint64_t);
  void (*v60)(_BYTE *, _BYTE *, uint64_t);
  unint64_t v61;
  void (*v62)(char *, _BYTE *, uint64_t);
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[2];
  uint64_t v68[5];

  v66 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v5);
  v64 = &v55[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_22DEFA59C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v63 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = &v55[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v55[-v17];
  v19 = *a3;
  *(_QWORD *)&v67[0] = 3;
  v20 = v19;
  v21 = objc_msgSend(v20, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
  swift_unknownObjectRelease();
  if (v21)
  {
    sub_22DEFAC44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v67, 0, sizeof(v67));
  }
  sub_22DEA4DD0((uint64_t)v67, (uint64_t)v68, &qword_255DC6040);
  if (v68[3])
  {
    v22 = v18;
    v23 = swift_dynamicCast();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, v23 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v62 = *(void (**)(char *, _BYTE *, uint64_t))(v11 + 32);
      v62(v18, v9, v10);
      if (qword_255DCE6B0 != -1)
        swift_once();
      v24 = sub_22DEFA674();
      __swift_project_value_buffer(v24, (uint64_t)qword_255DCE6B8);
      v60 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
      v60(v16, v18, v10);
      swift_bridgeObjectRetain_n();
      v25 = sub_22DEFA65C();
      v26 = sub_22DEFABA8();
      v27 = v26;
      v28 = os_log_type_enabled(v25, v26);
      v61 = a2;
      if (v28)
      {
        v29 = swift_slowAlloc();
        v58 = v20;
        v30 = v29;
        v57 = swift_slowAlloc();
        v68[0] = v57;
        *(_DWORD *)v30 = 136315394;
        v59 = (void (*)(_BYTE *, uint64_t))(v30 + 4);
        sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v56 = v27;
        v31 = sub_22DEFAE3C();
        *(_QWORD *)&v67[0] = sub_22DE8C348(v31, v32, v68);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        v59 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
        v59(v16, v10);
        *(_WORD *)(v30 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v67[0] = sub_22DE8C348(v66, a2, v68);
        v22 = v18;
        sub_22DEFAC2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_22DE7A000, v25, (os_log_type_t)v56, "request received: xid=%s, name=%s", (uint8_t *)v30, 0x16u);
        v33 = v57;
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v33, -1, -1);
        v34 = v30;
        v20 = v58;
        MEMORY[0x22E321E0C](v34, -1, -1);

      }
      else
      {
        v59 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
        v59(v16, v10);

        swift_bridgeObjectRelease_n();
      }
      v42 = sub_22DEFAAC4();
      v43 = (uint64_t)v64;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v64, 1, 1, v42);
      v44 = v63;
      v60(v63, v22, v10);
      v46 = sub_22DEC37B0(&qword_255DC6920, v45, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
      v47 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v48 = v22;
      v49 = (_QWORD *)swift_allocObject();
      v51 = v65;
      v50 = v66;
      v49[2] = v65;
      v49[3] = v46;
      v49[4] = v20;
      v49[5] = v51;
      v52 = (char *)v49 + v47;
      v53 = v61;
      v49[6] = v50;
      v49[7] = v53;
      v62(v52, v44, v10);
      swift_retain_n();
      v54 = v20;
      swift_bridgeObjectRetain();
      sub_22DEB34C8(v43, (uint64_t)&unk_255DC6E38, (uint64_t)v49);

      swift_release();
      v59(v48, v10);
      return;
    }
  }
  else
  {
    sub_22DE8731C((uint64_t)v68, &qword_255DC6040);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  sub_22DE8731C((uint64_t)v9, &qword_255DC66A8);
  if (qword_255DCE6B0 != -1)
    swift_once();
  v35 = sub_22DEFA674();
  __swift_project_value_buffer(v35, (uint64_t)qword_255DCE6B8);
  swift_bridgeObjectRetain_n();
  v36 = sub_22DEFA65C();
  v37 = sub_22DEFAB9C();
  v38 = os_log_type_enabled(v36, v37);
  v39 = v66;
  if (v38)
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v68[0] = v41;
    *(_DWORD *)v40 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v67[0] = sub_22DE8C348(v39, a2, v68);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DE7A000, v36, v37, "### request dropped: no xid, name=%s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v41, -1, -1);
    MEMORY[0x22E321E0C](v40, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_22DEB5288(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t *__return_ptr, char *);
  id v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint8_t *v72;
  id v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint8_t *v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(uint64_t *, unint64_t);
  id v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  char *v96;
  void *v97;
  uint64_t v98;
  char *v99;
  id v100;
  NSObject *v101;
  os_log_type_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  id v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  id v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  unint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125[3];
  uint64_t v126;

  v2 = sub_22DEFA59C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v116 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v112 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v115 = (uint64_t)&v112 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v114 = (char *)&v112 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v113 = (char *)&v112 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v112 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v112 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v120 = (char *)&v112 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66A8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v119 = (char *)&v112 - v26;
  v27 = *a1;
  *(_QWORD *)&v123 = 3;
  v28 = v27;
  v29 = objc_msgSend(v28, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
  swift_unknownObjectRelease();
  if (v29)
  {
    sub_22DEFAC44();
    swift_unknownObjectRelease();
  }
  else
  {
    v123 = 0u;
    v124 = 0u;
  }
  sub_22DEA4DD0((uint64_t)&v123, (uint64_t)v125, &qword_255DC6040);
  v30 = (uint64_t)v119;
  if (v126)
  {
    v31 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v30, v31 ^ 1u, 1, v2);
  }
  else
  {
    sub_22DE8731C((uint64_t)v125, &qword_255DC6040);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v30, 1, 1, v2);
  }
  sub_22DECA4D8(v30, (uint64_t)v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v25, 1, v2) == 1)
  {
    sub_22DE8731C((uint64_t)v25, &qword_255DC66A8);
    if (qword_255DCE6B0 != -1)
      swift_once();
    v32 = sub_22DEFA674();
    __swift_project_value_buffer(v32, (uint64_t)qword_255DCE6B8);
    v33 = sub_22DEFA65C();
    v34 = sub_22DEFAB9C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_22DE7A000, v33, v34, "### response dropped: no xid", v35, 2u);
      MEMORY[0x22E321E0C](v35, -1, -1);
    }

    return sub_22DE8731C(v30, &qword_255DC66A8);
  }
  v117 = v28;
  v36 = v2;
  v37 = v120;
  v38 = v36;
  (*(void (**)(char *, char *))(v3 + 32))(v120, v25);
  v39 = *(void (**)(uint64_t *__return_ptr, char *))(**(_QWORD **)(v118 + 136) + 232);
  swift_retain();
  v39(v125, v37);
  swift_release();
  if (v125[0])
  {
    v112 = v125[0];
    *(_QWORD *)&v123 = 2;
    v40 = objc_msgSend(v117, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
    swift_unknownObjectRelease();
    if (v40)
    {
      sub_22DEFAC44();
      swift_unknownObjectRelease();
    }
    else
    {
      v123 = 0u;
      v124 = 0u;
    }
    v50 = v38;
    sub_22DEA4DD0((uint64_t)&v123, (uint64_t)v125, &qword_255DC6040);
    v51 = v117;
    if (v126)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v52 = (uint64_t)v121;
        v53 = v122;
        if (qword_255DCE6B0 != -1)
          swift_once();
        v54 = sub_22DEFA674();
        __swift_project_value_buffer(v54, (uint64_t)qword_255DCE6B8);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v20, v120, v50);
        sub_22DEA5098(v52, v53);
        sub_22DEA5098(v52, v53);
        v55 = sub_22DEFA65C();
        v56 = sub_22DEFABA8();
        if (os_log_type_enabled(v55, v56))
        {
          v116 = (char *)(v53 >> 62);
          v57 = swift_slowAlloc();
          v115 = swift_slowAlloc();
          v125[0] = v115;
          *(_DWORD *)v57 = 136315394;
          sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v58 = sub_22DEFAE3C();
          *(_QWORD *)&v123 = sub_22DE8C348(v58, v59, v125);
          sub_22DEFAC2C();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v3 + 8))(v20, v50);
          *(_WORD *)(v57 + 12) = 2048;
          __asm { BR              X9 }
        }
        sub_22DEA2F04(v52, v53);
        v93 = *(void (**)(char *, uint64_t))(v3 + 8);
        v93(v20, v50);
        sub_22DEA2F04(v52, v53);

        v94 = v120;
        sub_22DEA5098(v52, v53);
        sub_22DEB8A88(v112, v52, v53, 0, 0);
        sub_22DEA326C(v52, v53);

        swift_release();
        sub_22DEA2F04(v52, v53);
        v30 = (uint64_t)v119;
        v93(v94, v50);
        return sub_22DE8731C(v30, &qword_255DC66A8);
      }
    }
    else
    {
      sub_22DE8731C((uint64_t)v125, &qword_255DC6040);
    }
    *(_QWORD *)&v123 = 5;
    v60 = objc_msgSend(v51, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
    swift_unknownObjectRelease();
    v61 = v120;
    if (v60)
    {
      sub_22DEFAC44();
      swift_unknownObjectRelease();
    }
    else
    {
      v123 = 0u;
      v124 = 0u;
    }
    sub_22DEA4DD0((uint64_t)&v123, (uint64_t)v125, &qword_255DC6040);
    if (v126)
    {
      sub_22DEC9F48(0, &qword_255DC6E40);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v116 = v121;
        if (qword_255DCE6B0 != -1)
          swift_once();
        v63 = sub_22DEFA674();
        __swift_project_value_buffer(v63, (uint64_t)qword_255DCE6B8);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v17, v61, v50);
        v64 = sub_22DEFA65C();
        v65 = sub_22DEFABA8();
        if (os_log_type_enabled(v64, v65))
        {
          v66 = (uint8_t *)swift_slowAlloc();
          v67 = swift_slowAlloc();
          v125[0] = v67;
          *(_DWORD *)v66 = 136315138;
          sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v68 = sub_22DEFAE3C();
          *(_QWORD *)&v123 = sub_22DE8C348(v68, v69, v125);
          v30 = (uint64_t)v119;
          sub_22DEFAC2C();
          swift_bridgeObjectRelease();
          v70 = *(void (**)(char *, uint64_t))(v3 + 8);
          v70(v17, v50);
          _os_log_impl(&dword_22DE7A000, v64, v65, "response received: xid=%s, dict=true", v66, 0xCu);
          swift_arrayDestroy();
          v71 = v67;
          v51 = v117;
          MEMORY[0x22E321E0C](v71, -1, -1);
          v72 = v66;
          v61 = v120;
          MEMORY[0x22E321E0C](v72, -1, -1);
        }
        else
        {
          v70 = *(void (**)(char *, uint64_t))(v3 + 8);
          v70(v17, v50);
        }

        v95 = (uint64_t)v116;
        v96 = v116;
        sub_22DEB8A88(v112, 0, 0xF000000000000000, v95, 0);

        swift_release();
        sub_22DEA326C(0, 0xF000000000000000);

LABEL_59:
        v70(v61, v50);
        return sub_22DE8731C(v30, &qword_255DC66A8);
      }
    }
    else
    {
      sub_22DE8731C((uint64_t)v125, &qword_255DC6040);
    }
    *(_QWORD *)&v123 = 4;
    v73 = objc_msgSend(v51, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
    swift_unknownObjectRelease();
    if (v73)
    {
      sub_22DEFAC44();
      swift_unknownObjectRelease();
    }
    else
    {
      v123 = 0u;
      v124 = 0u;
    }
    sub_22DEA4DD0((uint64_t)&v123, (uint64_t)v125, &qword_255DC6040);
    if (v126)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v74 = v121;
        v75 = v122;
        sub_22DEFA4A0();
        swift_allocObject();
        sub_22DEFA494();
        type metadata accessor for NXError();
        sub_22DEC37B0(&qword_255DC5EF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
        v116 = v74;
        v115 = v75;
        sub_22DEFA488();
        swift_release();
        v97 = (void *)v125[0];
        if (qword_255DCE6B0 != -1)
          swift_once();
        v98 = sub_22DEFA674();
        __swift_project_value_buffer(v98, (uint64_t)qword_255DCE6B8);
        v99 = v113;
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v113, v61, v50);
        v100 = v97;
        v101 = sub_22DEFA65C();
        v102 = sub_22DEFABA8();
        if (os_log_type_enabled(v101, v102))
        {
          v103 = v99;
          v104 = swift_slowAlloc();
          v114 = (char *)swift_slowAlloc();
          v125[0] = (uint64_t)v114;
          *(_DWORD *)v104 = 136315394;
          sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v105 = sub_22DEFAE3C();
          *(_QWORD *)&v123 = sub_22DE8C348(v105, v106, v125);
          sub_22DEFAC2C();
          swift_bridgeObjectRelease();
          v70 = *(void (**)(char *, uint64_t))(v3 + 8);
          v70(v103, v50);
          *(_WORD *)(v104 + 12) = 2080;
          *(_QWORD *)&v123 = v100;
          sub_22DEC37B0((unint64_t *)&qword_255DC5ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
          v107 = sub_22DEFAEC0();
          *(_QWORD *)&v123 = sub_22DE8C348(v107, v108, v125);
          sub_22DEFAC2C();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_22DE7A000, v101, v102, "response received: xid=%s, error=%s", (uint8_t *)v104, 0x16u);
          v109 = v114;
          swift_arrayDestroy();
          v30 = (uint64_t)v119;
          MEMORY[0x22E321E0C](v109, -1, -1);
          MEMORY[0x22E321E0C](v104, -1, -1);

        }
        else
        {
          v70 = *(void (**)(char *, uint64_t))(v3 + 8);
          v70(v99, v50);

        }
        v111 = v100;
        sub_22DEB8A88(v112, 0, 0xF000000000000000, 0, v100);

        swift_release();
        sub_22DEA326C(0, 0xF000000000000000);

        sub_22DEA2F04((uint64_t)v116, v115);
        v61 = v120;
        goto LABEL_59;
      }
    }
    else
    {
      sub_22DE8731C((uint64_t)v125, &qword_255DC6040);
    }
    v76 = v114;
    if (qword_255DCE6B0 != -1)
      swift_once();
    v77 = sub_22DEFA674();
    __swift_project_value_buffer(v77, (uint64_t)qword_255DCE6B8);
    v78 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v78(v76, v61, v50);
    v79 = sub_22DEFA65C();
    v80 = sub_22DEFAB9C();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      v82 = v50;
      v83 = v76;
      v84 = swift_slowAlloc();
      v125[0] = v84;
      *(_DWORD *)v81 = 136315138;
      v116 = (char *)(v81 + 4);
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v85 = sub_22DEFAE3C();
      *(_QWORD *)&v123 = sub_22DE8C348(v85, v86, v125);
      v30 = (uint64_t)v119;
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v70 = *(void (**)(char *, uint64_t))(v3 + 8);
      v87 = v83;
      v50 = v82;
      v51 = v117;
      v70(v87, v50);
      _os_log_impl(&dword_22DE7A000, v79, v80, "### response dropped: no content or error, xid=%s", v81, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v84, -1, -1);
      v88 = v81;
      v61 = v120;
      MEMORY[0x22E321E0C](v88, -1, -1);
    }
    else
    {
      v70 = *(void (**)(char *, uint64_t))(v3 + 8);
      v70(v76, v50);
    }

    v89 = *(_QWORD *)(v118 + 136);
    v90 = v115;
    v78((char *)v115, v61, v50);
    v125[0] = 0;
    v91 = *(void (**)(uint64_t *, unint64_t))(*(_QWORD *)v89 + 240);
    swift_retain();
    v91(v125, v90);
    swift_release();
    type metadata accessor for NXError();
    LOBYTE(v125[0]) = 1;
    v92 = NXError.__allocating_init(_:_:_:)((uint64_t)v125, 0xD000000000000021, 0x800000022DF03320, 0);
    sub_22DEB8A88(v112, 0, 0xF000000000000000, 0, v92);

    swift_release();
    sub_22DEA326C(0, 0xF000000000000000);

    goto LABEL_59;
  }
  if (qword_255DCE6B0 != -1)
    swift_once();
  v41 = sub_22DEFA674();
  __swift_project_value_buffer(v41, (uint64_t)qword_255DCE6B8);
  v42 = v120;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v120, v38);
  v43 = sub_22DEFA65C();
  v44 = sub_22DEFABA8();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v125[0] = v46;
    *(_DWORD *)v45 = 136315138;
    sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v47 = sub_22DEFAE3C();
    *(_QWORD *)&v123 = sub_22DE8C348(v47, v48, v125);
    v30 = (uint64_t)v119;
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    v49 = *(void (**)(char *, uint64_t))(v3 + 8);
    v49(v8, v38);
    _os_log_impl(&dword_22DE7A000, v43, v44, "response dropped: no transaction, xid=%s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v46, -1, -1);
    MEMORY[0x22E321E0C](v45, -1, -1);

    v49(v120, v38);
  }
  else
  {

    v62 = *(void (**)(char *, uint64_t))(v3 + 8);
    v62(v8, v38);
    v62(v42, v38);
  }
  return sub_22DE8731C(v30, &qword_255DC66A8);
}

uint64_t sub_22DEB6800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[86] = a8;
  v8[85] = a7;
  v8[84] = a6;
  v8[83] = a5;
  v8[82] = a4;
  v9 = sub_22DEFA59C();
  v8[87] = v9;
  v8[88] = *(_QWORD *)(v9 - 8);
  v8[89] = swift_task_alloc();
  v8[90] = swift_task_alloc();
  v8[91] = type metadata accessor for NXSession.ResponseSendItem(0);
  v8[92] = swift_task_alloc();
  type metadata accessor for NXSession();
  sub_22DEC37B0(&qword_255DC6920, v10, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v8[93] = sub_22DEFAA88();
  v8[94] = v11;
  return swift_task_switch();
}

uint64_t sub_22DEB68E4()
{
  uint64_t v0;
  void *v1;
  id v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  int *v38;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  int *v64;
  id v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint64_t v71;
  int *v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  _OWORD v74[3];
  char v75;
  uint64_t v76[6];
  char v77;

  v1 = *(void **)(v0 + 656);
  *(_QWORD *)(v0 + 640) = 2;
  v2 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
  swift_unknownObjectRelease();
  if (v2)
  {
    sub_22DEFAC44();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 424) = 0u;
    *(_OWORD *)(v0 + 440) = 0u;
  }
  sub_22DEA4DD0(v0 + 424, v0 + 488, &qword_255DC6040);
  if (!*(_QWORD *)(v0 + 512))
  {
    sub_22DE8731C(v0 + 488, &qword_255DC6040);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v12 = *(void **)(v0 + 656);
    *(_QWORD *)(v0 + 608) = 5;
    v13 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
    swift_unknownObjectRelease();
    if (v13)
    {
      sub_22DEFAC44();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 392) = 0u;
      *(_OWORD *)(v0 + 408) = 0u;
    }
    sub_22DEA4DD0(v0 + 392, v0 + 456, &qword_255DC6040);
    if (*(_QWORD *)(v0 + 480))
    {
      sub_22DEC9F48(0, &qword_255DC6E40);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v14 = *(_QWORD *)(v0 + 616);
        *(_QWORD *)(v0 + 840) = v14;
        v15 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 848) = v15;
        *v15 = v0;
        v15[1] = sub_22DEB799C;
        return sub_22DEB042C(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 680), v14);
      }
    }
    else
    {
      sub_22DE8731C(v0 + 456, &qword_255DC6040);
    }
    if (qword_255DCE6B0 != -1)
      swift_once();
    v17 = *(_QWORD *)(v0 + 720);
    v18 = *(_QWORD *)(v0 + 704);
    v19 = *(_QWORD *)(v0 + 696);
    v20 = *(_QWORD *)(v0 + 688);
    v21 = sub_22DEFA674();
    __swift_project_value_buffer(v21, (uint64_t)qword_255DCE6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v20, v19);
    swift_bridgeObjectRetain_n();
    v22 = sub_22DEFA65C();
    v23 = sub_22DEFAB9C();
    v24 = os_log_type_enabled(v22, v23);
    v25 = *(_QWORD *)(v0 + 720);
    v26 = *(_QWORD *)(v0 + 704);
    v27 = *(_QWORD *)(v0 + 696);
    v28 = *(_QWORD *)(v0 + 680);
    if (v24)
    {
      v68 = *(_QWORD *)(v0 + 672);
      v29 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v76[0] = v71;
      *(_DWORD *)v29 = 136315394;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v30 = sub_22DEFAE3C();
      *(_QWORD *)(v0 + 632) = sub_22DE8C348(v30, v31, v76);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 624) = sub_22DE8C348(v68, v28, v76);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22DE7A000, v22, v23, "### request failed: no content, xid=%s, name=%s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v71, -1, -1);
      MEMORY[0x22E321E0C](v29, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v26 + 8))(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 696));
      swift_bridgeObjectRelease_n();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = (_OWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 664);
  v5 = *(_QWORD *)(v0 + 568);
  *(_QWORD *)(v0 + 760) = v5;
  v6 = *(_QWORD *)(v0 + 576);
  *(_QWORD *)(v0 + 768) = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(v4 + 120);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = *(_QWORD *)(v0 + 680);
    v9 = *(_QWORD *)(v0 + 672);
    swift_bridgeObjectRetain();
    v10 = sub_22DE83DDC(v9, v8);
    if ((v11 & 1) != 0)
    {
      sub_22DE83EBC(*(_QWORD *)(v7 + 56) + 40 * v10, v0 + 312);
    }
    else
    {
      *(_QWORD *)(v0 + 344) = 0;
      *v3 = 0u;
      *(_OWORD *)(v0 + 328) = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 336))
    {
      sub_22DEA2EEC((__int128 *)(v0 + 312), v0 + 352);
      swift_endAccess();
      memset(v74, 0, sizeof(v74));
      v75 = -1;
      memset(v76, 0, sizeof(v76));
      v77 = -1;
      NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)v74, (uint64_t)v76, 0, 0, v0 + 144);
      v32 = *(_QWORD *)(v0 + 376);
      v33 = *(_QWORD *)(v0 + 384);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 352), v32);
      v34 = *(_OWORD *)(v0 + 224);
      *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
      *(_OWORD *)(v0 + 96) = v34;
      v35 = *(_OWORD *)(v0 + 256);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
      *(_OWORD *)(v0 + 128) = v35;
      v36 = *(_OWORD *)(v0 + 160);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 144);
      *(_OWORD *)(v0 + 32) = v36;
      v37 = *(_OWORD *)(v0 + 192);
      *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
      *(_OWORD *)(v0 + 64) = v37;
      v38 = *(int **)(v33 + 40);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      *(_QWORD *)(v0 + 776) = AssociatedTypeWitness;
      *(_QWORD *)(v0 + 296) = AssociatedTypeWitness;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v0 + 784) = AssociatedConformanceWitness;
      *(_QWORD *)(v0 + 304) = AssociatedConformanceWitness;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 272));
      *(_QWORD *)(v0 + 792) = boxed_opaque_existential_0;
      v72 = (int *)((char *)v38 + *v38);
      v42 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 800) = v42;
      *v42 = v0;
      v42[1] = sub_22DEB73D0;
      return ((uint64_t (*)(uint64_t *, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))v72)(boxed_opaque_existential_0, *(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 680), v5, v6, v0 + 16, v32, v33);
    }
  }
  else
  {
    *(_QWORD *)(v0 + 344) = 0;
    *v3 = 0u;
    *(_OWORD *)(v0 + 328) = 0u;
  }
  sub_22DE8731C(v0 + 312, &qword_255DC69E0);
  swift_endAccess();
  type metadata accessor for NXError();
  LOBYTE(v74[0]) = 13;
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  v76[0] = 0xD000000000000019;
  v76[1] = 0x800000022DF031E0;
  sub_22DEFAA10();
  v43 = NXError.__allocating_init(_:_:_:)((uint64_t)v74, 0xD000000000000019, 0x800000022DF031E0, 0);
  swift_willThrow();
  sub_22DEA2F04(v5, v6);
  *(_QWORD *)(v0 + 880) = v43;
  if (qword_255DCE6B0 != -1)
    swift_once();
  v44 = *(_QWORD *)(v0 + 712);
  v45 = *(_QWORD *)(v0 + 704);
  v46 = *(_QWORD *)(v0 + 696);
  v47 = *(_QWORD *)(v0 + 688);
  v48 = sub_22DEFA674();
  __swift_project_value_buffer(v48, (uint64_t)qword_255DCE6B8);
  v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  v73(v44, v47, v46);
  swift_bridgeObjectRetain();
  v49 = v43;
  swift_bridgeObjectRetain();
  v50 = v43;
  v51 = sub_22DEFA65C();
  v52 = sub_22DEFAB9C();
  v53 = os_log_type_enabled(v51, v52);
  v54 = *(_QWORD *)(v0 + 712);
  v55 = *(_QWORD *)(v0 + 704);
  v56 = *(_QWORD *)(v0 + 696);
  v57 = *(_QWORD *)(v0 + 680);
  if (v53)
  {
    v67 = *(_QWORD *)(v0 + 672);
    v70 = v52;
    v58 = swift_slowAlloc();
    v69 = swift_slowAlloc();
    v76[0] = v69;
    *(_DWORD *)v58 = 136315650;
    sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v59 = sub_22DEFAE3C();
    *(_QWORD *)(v0 + 600) = sub_22DE8C348(v59, v60, v76);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    *(_WORD *)(v58 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 648) = sub_22DE8C348(v67, v57, v76);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v58 + 22) = 2080;
    swift_getErrorValue();
    v61 = sub_22DEFAEC0();
    *(_QWORD *)(v0 + 592) = sub_22DE8C348(v61, v62, v76);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v51, v70, "### request failed: xid=%s, name=%s, error=%s", (uint8_t *)v58, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v69, -1, -1);
    MEMORY[0x22E321E0C](v58, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v55 + 8))(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 696));
    swift_bridgeObjectRelease_n();

  }
  v63 = *(_QWORD *)(v0 + 736);
  v64 = *(int **)(v0 + 728);
  v73(v63, *(_QWORD *)(v0 + 688), *(_QWORD *)(v0 + 696));
  *(_OWORD *)(v63 + v64[5]) = xmmword_22DEFF4B0;
  *(_QWORD *)(v63 + v64[6]) = 0;
  *(_QWORD *)(v63 + v64[7]) = v43;
  v65 = v43;
  v66 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 888) = v66;
  *v66 = v0;
  v66[1] = sub_22DEB7B70;
  return sub_22DEB836C(*(_QWORD *)(v0 + 736));
}

uint64_t sub_22DEB73D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 808) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB743C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t (*v39)();
  uint64_t v40;
  int *v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t type;
  _OWORD v47[9];

  v1 = *(void **)(v0 + 808);
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 776);
  v4 = *(_OWORD *)(v0 + 224);
  v47[4] = *(_OWORD *)(v0 + 208);
  v47[5] = v4;
  v5 = *(_OWORD *)(v0 + 256);
  v47[6] = *(_OWORD *)(v0 + 240);
  v47[7] = v5;
  v6 = *(_OWORD *)(v0 + 160);
  v47[0] = *(_OWORD *)(v0 + 144);
  v47[1] = v6;
  v7 = *(_OWORD *)(v0 + 192);
  v47[2] = *(_OWORD *)(v0 + 176);
  v47[3] = v7;
  v8 = (*(uint64_t (**)(_OWORD *, uint64_t))(v2 + 40))(v47, v3);
  if (v1)
  {
    sub_22DEA2F04(*(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 768));
    sub_22DE80B6C(v0 + 144);
    __swift_destroy_boxed_opaque_existential_1(v0 + 272);
    __swift_destroy_boxed_opaque_existential_1(v0 + 352);
    *(_QWORD *)(v0 + 880) = v1;
    if (qword_255DCE6B0 != -1)
      swift_once();
    v10 = *(_QWORD *)(v0 + 712);
    v11 = *(_QWORD *)(v0 + 704);
    v12 = *(_QWORD *)(v0 + 696);
    v13 = *(_QWORD *)(v0 + 688);
    v14 = sub_22DEFA674();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DCE6B8);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v15(v10, v13, v12);
    swift_bridgeObjectRetain();
    v16 = v1;
    swift_bridgeObjectRetain();
    v17 = v1;
    v18 = sub_22DEFA65C();
    v19 = sub_22DEFAB9C();
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(_QWORD *)(v0 + 712);
    v22 = *(_QWORD *)(v0 + 704);
    v23 = *(_QWORD *)(v0 + 696);
    v24 = *(_QWORD *)(v0 + 680);
    if (v20)
    {
      v44 = *(_QWORD *)(v0 + 672);
      type = v19;
      v25 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      *(_QWORD *)&v47[0] = v45;
      *(_DWORD *)v25 = 136315650;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v26 = sub_22DEFAE3C();
      *(_QWORD *)(v0 + 600) = sub_22DE8C348(v26, v27, (uint64_t *)v47);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 648) = sub_22DE8C348(v44, v24, (uint64_t *)v47);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2080;
      swift_getErrorValue();
      v28 = sub_22DEFAEC0();
      *(_QWORD *)(v0 + 592) = sub_22DE8C348(v28, v29, (uint64_t *)v47);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, v18, type, "### request failed: xid=%s, name=%s, error=%s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v45, -1, -1);
      MEMORY[0x22E321E0C](v25, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v22 + 8))(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 696));
      swift_bridgeObjectRelease_n();

    }
    v40 = *(_QWORD *)(v0 + 736);
    v41 = *(int **)(v0 + 728);
    v15(v40, *(_QWORD *)(v0 + 688), *(_QWORD *)(v0 + 696));
    *(_OWORD *)(v40 + v41[5]) = xmmword_22DEFF4B0;
    *(_QWORD *)(v40 + v41[6]) = 0;
    *(_QWORD *)(v40 + v41[7]) = v1;
    v42 = v1;
    v38 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 888) = v38;
    v39 = sub_22DEB7B70;
  }
  else
  {
    v30 = v8;
    v31 = v9;
    v32 = *(_QWORD *)(v0 + 736);
    v33 = *(int **)(v0 + 728);
    v34 = *(_QWORD *)(v0 + 704);
    v35 = *(_QWORD *)(v0 + 696);
    v36 = *(_QWORD *)(v0 + 688);
    *(_QWORD *)(v0 + 816) = v9;
    *(_QWORD *)(v0 + 824) = v8;
    sub_22DE80B6C(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v32, v36, v35);
    v37 = (uint64_t *)(v32 + v33[5]);
    *v37 = v30;
    v37[1] = v31;
    *(_QWORD *)(v32 + v33[6]) = 0;
    *(_QWORD *)(v32 + v33[7]) = 0;
    sub_22DEA5098(v30, v31);
    v38 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 832) = v38;
    v39 = sub_22DEB78B8;
  }
  *v38 = v0;
  v38[1] = v39;
  return sub_22DEB836C(*(_QWORD *)(v0 + 736));
}

uint64_t sub_22DEB78B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 736);
  swift_task_dealloc();
  sub_22DEC8BF0(v1);
  return swift_task_switch();
}

uint64_t sub_22DEB7914()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(_QWORD *)(v0 + 816);
  sub_22DEA2F04(*(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 768));
  sub_22DEA2F04(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 272);
  __swift_destroy_boxed_opaque_existential_1(v0 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB799C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 856) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 864) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEB7A18()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  int *v3;
  id v4;
  _QWORD *v5;

  v1 = (void *)v0[108];
  v2 = v0[92];
  v3 = (int *)v0[91];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[88] + 16))(v2, v0[86], v0[87]);
  *(_OWORD *)(v2 + v3[5]) = xmmword_22DEFF4B0;
  *(_QWORD *)(v2 + v3[6]) = v1;
  *(_QWORD *)(v2 + v3[7]) = 0;
  v4 = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[109] = v5;
  *v5 = v0;
  v5[1] = sub_22DEB7ABC;
  return sub_22DEB836C(v0[92]);
}

uint64_t sub_22DEB7ABC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 736);
  swift_task_dealloc();
  sub_22DEC8BF0(v1);
  return swift_task_switch();
}

uint64_t sub_22DEB7B18()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 840);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB7B70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 736);
  swift_task_dealloc();
  sub_22DEC8BF0(v1);
  return swift_task_switch();
}

uint64_t sub_22DEB7BCC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB7C1C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  id v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t type;
  uint64_t v30;

  sub_22DEA2F04(v0[95], v0[96]);
  sub_22DE80B6C((uint64_t)(v0 + 18));
  __swift_deallocate_boxed_opaque_existential_1((uint64_t)(v0 + 34));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 44));
  v1 = (void *)v0[101];
  v0[110] = v1;
  if (qword_255DCE6B0 != -1)
    swift_once();
  v2 = v0[89];
  v3 = v0[88];
  v4 = v0[87];
  v5 = v0[86];
  v6 = sub_22DEFA674();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DCE6B8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v5, v4);
  swift_bridgeObjectRetain();
  v8 = v1;
  swift_bridgeObjectRetain();
  v9 = v1;
  v10 = sub_22DEFA65C();
  v11 = sub_22DEFAB9C();
  v12 = os_log_type_enabled(v10, v11);
  v13 = v0[89];
  v14 = v0[88];
  v15 = v0[87];
  v16 = v0[85];
  if (v12)
  {
    v27 = v0[84];
    type = v11;
    v17 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v30 = v28;
    *(_DWORD *)v17 = 136315650;
    sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v18 = sub_22DEFAE3C();
    v0[75] = sub_22DE8C348(v18, v19, &v30);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[81] = sub_22DE8C348(v27, v16, &v30);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 22) = 2080;
    swift_getErrorValue();
    v20 = sub_22DEFAEC0();
    v0[74] = sub_22DE8C348(v20, v21, &v30);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v10, type, "### request failed: xid=%s, name=%s, error=%s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v28, -1, -1);
    MEMORY[0x22E321E0C](v17, -1, -1);

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v14 + 8))(v0[89], v0[87]);
    swift_bridgeObjectRelease_n();

  }
  v22 = v0[92];
  v23 = (int *)v0[91];
  v7(v22, v0[86], v0[87]);
  *(_OWORD *)(v22 + v23[5]) = xmmword_22DEFF4B0;
  *(_QWORD *)(v22 + v23[6]) = 0;
  *(_QWORD *)(v22 + v23[7]) = v1;
  v24 = v1;
  v25 = (_QWORD *)swift_task_alloc();
  v0[111] = v25;
  *v25 = v0;
  v25[1] = sub_22DEB7B70;
  return sub_22DEB836C(v0[92]);
}

uint64_t sub_22DEB7FD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  id v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t type;
  uint64_t v30;

  v1 = *(void **)(v0 + 856);
  *(_QWORD *)(v0 + 880) = v1;
  if (qword_255DCE6B0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 712);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 696);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = sub_22DEFA674();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DCE6B8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v5, v4);
  swift_bridgeObjectRetain();
  v8 = v1;
  swift_bridgeObjectRetain();
  v9 = v1;
  v10 = sub_22DEFA65C();
  v11 = sub_22DEFAB9C();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 712);
  v14 = *(_QWORD *)(v0 + 704);
  v15 = *(_QWORD *)(v0 + 696);
  v16 = *(_QWORD *)(v0 + 680);
  if (v12)
  {
    v27 = *(_QWORD *)(v0 + 672);
    type = v11;
    v17 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v30 = v28;
    *(_DWORD *)v17 = 136315650;
    sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v18 = sub_22DEFAE3C();
    *(_QWORD *)(v0 + 600) = sub_22DE8C348(v18, v19, &v30);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 648) = sub_22DE8C348(v27, v16, &v30);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 22) = 2080;
    swift_getErrorValue();
    v20 = sub_22DEFAEC0();
    *(_QWORD *)(v0 + 592) = sub_22DE8C348(v20, v21, &v30);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v10, type, "### request failed: xid=%s, name=%s, error=%s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v28, -1, -1);
    MEMORY[0x22E321E0C](v17, -1, -1);

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v14 + 8))(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 696));
    swift_bridgeObjectRelease_n();

  }
  v22 = *(_QWORD *)(v0 + 736);
  v23 = *(int **)(v0 + 728);
  v7(v22, *(_QWORD *)(v0 + 688), *(_QWORD *)(v0 + 696));
  *(_OWORD *)(v22 + v23[5]) = xmmword_22DEFF4B0;
  *(_QWORD *)(v22 + v23[6]) = 0;
  *(_QWORD *)(v22 + v23[7]) = v1;
  v24 = v1;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 888) = v25;
  *v25 = v0;
  v25[1] = sub_22DEB7B70;
  return sub_22DEB836C(*(_QWORD *)(v0 + 736));
}

uint64_t sub_22DEB836C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[11] = a1;
  v2[12] = v1;
  v3 = type metadata accessor for NXSession.ResponseSendItem(0);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v4 = sub_22DEFA674();
  v2[20] = v4;
  v2[21] = *(_QWORD *)(v4 - 8);
  v2[22] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6920, v5, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v2[23] = sub_22DEFAA88();
  v2[24] = v6;
  return swift_task_switch();
}

uint64_t sub_22DEB8464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BOOL4 v19;
  _BOOL4 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50;

  if (qword_255DCE6B0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v9, v3);
  sub_22DEC8BAC(v8, v4);
  sub_22DEC8BAC(v8, v5);
  sub_22DEC8BAC(v8, v6);
  sub_22DEC8BAC(v8, v7);
  v10 = sub_22DEFA65C();
  v11 = sub_22DEFAB84();
  if (os_log_type_enabled(v10, v11))
  {
    v49 = v11;
    v13 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 136);
    v47 = *(_QWORD *)(v0 + 128);
    v15 = *(int **)(v0 + 104);
    v16 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v50 = v48;
    *(_DWORD *)v16 = 136446978;
    sub_22DEFA59C();
    sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_22DEFAE3C();
    *(_QWORD *)(v0 + 64) = sub_22DE8C348(v17, v18, &v50);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC8BF0(v12);
    *(_WORD *)(v16 + 12) = 1024;
    v19 = *(_QWORD *)(v13 + v15[5] + 8) >> 60 != 15;
    sub_22DEC8BF0(v13);
    *(_DWORD *)(v0 + 224) = v19;
    sub_22DEFAC2C();
    *(_WORD *)(v16 + 18) = 1024;
    v20 = *(_QWORD *)(v14 + v15[6]) != 0;
    sub_22DEC8BF0(v14);
    *(_DWORD *)(v0 + 228) = v20;
    sub_22DEFAC2C();
    *(_WORD *)(v16 + 24) = 2080;
    if (*(_QWORD *)(v47 + v15[7]))
    {
      swift_getErrorValue();
      v21 = sub_22DEFAEC0();
      v23 = v22;
    }
    else
    {
      v23 = 0xE300000000000000;
      v21 = 7104878;
    }
    v31 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 72) = sub_22DE8C348(v21, v23, &v50);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC8BF0(v33);
    _os_log_impl(&dword_22DE7A000, v10, v49, "response queue: xid=%{public}s, data=%{BOOL}d, dict=%{BOOL}d, error=%s", (uint8_t *)v16, 0x22u);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v48, -1, -1);
    MEMORY[0x22E321E0C](v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 128);
    sub_22DEC8BF0(*(_QWORD *)(v0 + 136));
    sub_22DEC8BF0(v28);
    sub_22DEC8BF0(v27);
    sub_22DEC8BF0(v29);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  }
  v34 = *(_QWORD *)(v0 + 96);
  sub_22DEC8BAC(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 120));
  v35 = (unint64_t *)(v34 + 128);
  swift_beginAccess();
  v36 = *(_QWORD *)(v34 + 128);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v34 + 128) = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v36 = sub_22DEC24C0(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
    *v35 = v36;
  }
  v39 = *(_QWORD *)(v36 + 16);
  v38 = *(_QWORD *)(v36 + 24);
  if (v39 >= v38 >> 1)
  {
    v36 = sub_22DEC24C0(v38 > 1, v39 + 1, 1, v36);
    *v35 = v36;
  }
  v41 = *(_QWORD *)(v0 + 112);
  v40 = *(_QWORD *)(v0 + 120);
  v42 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v36 + 16) = v39 + 1;
  sub_22DEC9FB4(v40, v36+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v39);
  swift_endAccess();
  if ((*(_BYTE *)(v42 + 16) & 1) != 0 || (Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 200) = Strong) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v44 = Strong;
    v45 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v45;
    *v45 = v0;
    v45[1] = sub_22DEB8954;
    return sub_22DEB976C(v44);
  }
}

uint64_t sub_22DEB8954()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 216) = v2;
  *v2 = v4;
  v2[1] = sub_22DEB89C0;
  return sub_22DEBA920(*(_QWORD *)(v1 + 200));
}

uint64_t sub_22DEB89C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB8A0C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB8A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t *, char *);
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  id v35;
  uint64_t v36;
  uint8_t *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v49;
  os_log_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v55 = a3;
  v56 = a4;
  v54 = a2;
  v8 = sub_22DEFA59C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v49 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v49 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - v19;
  v53 = a1;
  v21 = a1 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_xid;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v22((char *)&v49 - v19, v21, v8);
  v23 = *(_QWORD *)(v5 + 136);
  v22(v18, (uint64_t)v20, v8);
  v58 = 0;
  v24 = *(void (**)(uint64_t *, char *))(*(_QWORD *)v23 + 240);
  swift_retain();
  v24(&v58, v18);
  swift_release();
  if (a5)
  {
    v25 = a5;
    if (qword_255DCE6B0 != -1)
      swift_once();
    v26 = sub_22DEFA674();
    __swift_project_value_buffer(v26, (uint64_t)qword_255DCE6B8);
    v22(v15, (uint64_t)v20, v8);
    v27 = a5;
    v28 = a5;
    v29 = sub_22DEFA65C();
    v30 = sub_22DEFAB9C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v58 = v52;
      *(_DWORD *)v31 = 136446466;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v50 = v29;
      v32 = sub_22DEFAE3C();
      v57 = sub_22DE8C348(v32, v33, &v58);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34(v15, v8);
      *(_WORD *)(v31 + 12) = 2112;
      v35 = a5;
      v36 = _swift_stdlib_bridgeErrorToNSError();
      v57 = v36;
      sub_22DEFAC2C();
      v37 = v51;
      *(_QWORD *)v51 = v36;

      v38 = v50;
      _os_log_impl(&dword_22DE7A000, v50, v30, "### request failed: xid=%{public}s, error=%@", (uint8_t *)v31, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D20);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v37, -1, -1);
      v39 = v52;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v39, -1, -1);
      MEMORY[0x22E321E0C](v31, -1, -1);

    }
    else
    {

      v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34(v15, v8);

    }
  }
  else
  {
    if (qword_255DCE6B0 != -1)
      swift_once();
    v40 = sub_22DEFA674();
    __swift_project_value_buffer(v40, (uint64_t)qword_255DCE6B8);
    v22(v12, (uint64_t)v20, v8);
    v41 = sub_22DEFA65C();
    v42 = sub_22DEFABA8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v58 = v52;
      v51 = v43;
      *(_DWORD *)v43 = 136446210;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v44 = sub_22DEFAE3C();
      v57 = sub_22DE8C348(v44, v45, &v58);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34(v12, v8);
      v46 = v51;
      _os_log_impl(&dword_22DE7A000, v41, v42, "request completed: xid=%{public}s", v51, 0xCu);
      v47 = v52;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v47, -1, -1);
      MEMORY[0x22E321E0C](v46, -1, -1);
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34(v12, v8);
    }

  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v53
                                                            + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_responseHandler))(v54, v55, v56, a5);
  return ((uint64_t (*)(char *, uint64_t))v34)(v20, v8);
}

uint64_t NXSession.send<A>(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  v5[32] = sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v5[33] = sub_22DEFAA88();
  v5[34] = v6;
  return swift_task_switch();
}

uint64_t sub_22DEB9068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD v17[8];

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  (*(void (**)(uint64_t, uint64_t))(v1 + 48))(v2, v1);
  v3 = *(_OWORD *)(v0 + 96);
  v17[4] = *(_OWORD *)(v0 + 80);
  v17[5] = v3;
  v4 = *(_OWORD *)(v0 + 128);
  v17[6] = *(_OWORD *)(v0 + 112);
  v17[7] = v4;
  v5 = *(_OWORD *)(v0 + 32);
  v17[0] = *(_OWORD *)(v0 + 16);
  v17[1] = v5;
  v6 = *(_OWORD *)(v0 + 64);
  v17[2] = *(_OWORD *)(v0 + 48);
  v17[3] = v6;
  v7 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v1 + 72))(v17, v2, v1);
  *(_QWORD *)(v0 + 280) = v7;
  *(_QWORD *)(v0 + 288) = v8;
  v9 = v7;
  v10 = v8;
  v11 = *(_QWORD *)(v0 + 248);
  v12 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 232));
  *(_QWORD *)(v0 + 296) = v13;
  *(_QWORD *)(v0 + 144) = v12;
  *(_QWORD *)(v0 + 152) = v13;
  *(_QWORD *)(v0 + 160) = v9;
  *(_QWORD *)(v0 + 168) = v10;
  *(_QWORD *)(v0 + 176) = 0;
  sub_22DEA5098(v9, v10);
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v14;
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v0 + 144;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v15;
  *v15 = v0;
  v15[1] = sub_22DEB91E4;
  return sub_22DEFAE78();
}

uint64_t sub_22DEB91E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB9250()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t AssociatedConformanceWitness;
  void (*v15)(uint64_t, unint64_t, _OWORD *, uint64_t, uint64_t);
  void *v17;
  id v18;
  _OWORD v19[8];

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 280);
  swift_bridgeObjectRelease();
  sub_22DEA326C(v2, v1);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(void **)(v0 + 200);
  v5 = *(void **)(v0 + 208);
  if (v4 >> 60 == 15)
  {
    v8 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 288);
    sub_22DE80B6C(v0 + 16);
    type metadata accessor for NXError();
    LOBYTE(v19[0]) = 12;
    NXError.__allocating_init(_:_:_:)((uint64_t)v19, 0xD000000000000010, 0x800000022DF02DA0, 0);
    swift_willThrow();
    sub_22DEA326C(v3, v4);

    sub_22DEA2F04(v8, v7);
  }
  else
  {
    v17 = *(void **)(v0 + 200);
    v18 = *(id *)(v0 + 208);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v10 = *(_OWORD *)(v0 + 96);
    v19[4] = *(_OWORD *)(v0 + 80);
    v19[5] = v10;
    v11 = *(_OWORD *)(v0 + 128);
    v19[6] = *(_OWORD *)(v0 + 112);
    v19[7] = v11;
    v12 = *(_OWORD *)(v0 + 32);
    v19[0] = *(_OWORD *)(v0 + 16);
    v19[1] = v12;
    v13 = *(_OWORD *)(v0 + 64);
    v19[2] = *(_OWORD *)(v0 + 48);
    v19[3] = v13;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v15 = *(void (**)(uint64_t, unint64_t, _OWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                       + 32);
    sub_22DEA5098(v3, v4);
    v15(v3, v4, v19, AssociatedTypeWitness, AssociatedConformanceWitness);
    sub_22DEA2F04(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
    sub_22DEA326C(v3, v4);
    sub_22DEA326C(v3, v4);

    sub_22DE80B6C(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB9420()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_22DEA326C(v2, v1);
  sub_22DEA2F04(v2, v1);
  sub_22DE80B6C(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB948C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6CC0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = (char *)swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v10[v9], v8, v5);
  sub_22DEB1500(a3, (uint64_t)sub_22DEC8994, v10);
  return swift_release();
}

uint64_t sub_22DEB9594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v4[3] = sub_22DEFAA88();
  v4[4] = v5;
  return swift_task_switch();
}

uint64_t sub_22DEB9604()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 16) + 16) & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 40) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = Strong;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *v3 = v0;
  v3[1] = sub_22DEB9684;
  return sub_22DEB976C(v2);
}

uint64_t sub_22DEB9684()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v4;
  v2[1] = sub_22DEB96F0;
  return sub_22DEBA920(*(_QWORD *)(v1 + 40));
}

uint64_t sub_22DEB96F0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEB973C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEB976C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[7] = a1;
  v2[8] = v1;
  v3 = sub_22DEFA59C();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D08);
  v2[13] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6920, v4, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v2[14] = sub_22DEFAA88();
  v2[15] = v5;
  return swift_task_switch();
}

void sub_22DEB983C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *boxed_opaque_existential_0;
  id v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *, uint64_t, uint64_t);
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 64) + 136) + 256);
  v3 = swift_retain();
  v2(v3);
  swift_release();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
  NXOrderedDictionary.Iterator.next()(v4, v1);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5) == 1)
  {
LABEL_5:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 32);
    while (1)
    {
      v6 = *(void (**)(uint64_t))(v0 + 128);
      v7 = *(_QWORD *)(v0 + 96);
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + *(int *)(v5 + 48));
      *(_QWORD *)(v0 + 136) = v8;
      v6(v7);
      v9 = OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount;
      if (!*(_QWORD *)(v8
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount))
        break;
      v10 = *(_QWORD *)(v0 + 104);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      swift_release();
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
      NXOrderedDictionary.Iterator.next()(v11, v10);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v10, 1, v5) == 1)
        goto LABEL_5;
    }
    if (qword_255DCE6B0 != -1)
      swift_once();
    v13 = *(uint64_t **)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 80);
    v16 = sub_22DEFA674();
    __swift_project_value_buffer(v16, (uint64_t)qword_255DCE6B8);
    v50 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16);
    v50(v13, v12, v15);
    v17 = sub_22DEFA65C();
    v18 = sub_22DEFABA8();
    v19 = os_log_type_enabled(v17, v18);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    if (v19)
    {
      v23 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v51 = v49;
      *(_DWORD *)v23 = 136446210;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v24 = sub_22DEFAE3C();
      *(_QWORD *)(v23 + 4) = sub_22DE8C348(v24, v25, &v51);
      swift_bridgeObjectRelease();
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(v20, v22);
      _os_log_impl(&dword_22DE7A000, v17, v18, "request send: xid=%{public}s", (uint8_t *)v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v49, -1, -1);
      MEMORY[0x22E321E0C](v23, -1, -1);
    }
    else
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    }

    *(_QWORD *)(v0 + 144) = v26;
    v27 = *(_QWORD *)(v8 + v9);
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 72);
      *(_QWORD *)(v8 + v9) = v29;
      v31 = (_QWORD *)(v8
                     + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage);
      v32 = *(_QWORD *)(v8
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage);
      v33 = *(_QWORD *)(v8
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage
                      + 8);
      *(_QWORD *)(v0 + 152) = v33;
      v34 = v31[2];
      *(_QWORD *)(v0 + 160) = v34;
      v35 = v31[3];
      *(_QWORD *)(v0 + 168) = v35;
      v36 = (void *)v31[4];
      *(_QWORD *)(v0 + 176) = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D00);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_22DEFF4C0;
      v38 = MEMORY[0x24BEE1768];
      *(_QWORD *)(v37 + 32) = 1;
      v39 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v37 + 56) = v38;
      *(_QWORD *)(v37 + 64) = v32;
      *(_QWORD *)(v37 + 72) = v33;
      *(_QWORD *)(v37 + 120) = v38;
      *(_QWORD *)(v37 + 88) = v39;
      *(_QWORD *)(v37 + 96) = 3;
      v40 = v8 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_xid;
      *(_QWORD *)(v37 + 152) = v30;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v37 + 128));
      v50(boxed_opaque_existential_0, v40, v30);
      sub_22DEC9F48(0, &qword_255DC6CF8);
      swift_bridgeObjectRetain_n();
      sub_22DEA5084(v34, v35);
      v42 = v36;
      v43 = (void *)sub_22DEFAB6C();
      *(_QWORD *)(v0 + 184) = v43;
      if (v35 >> 60 != 15)
      {
        sub_22DEA5098(v34, v35);
        v44 = (void *)sub_22DEFA560();
        *(_QWORD *)(v0 + 48) = 2;
        objc_msgSend(v43, sel___swift_setObject_forKeyedSubscript_, v44, sub_22DEFAE84());
        sub_22DEA326C(v34, v35);
        swift_unknownObjectRelease();

      }
      if (v36)
      {
        *(_QWORD *)(v0 + 40) = 5;
        v45 = v42;
        objc_msgSend(v43, sel___swift_setObject_forKeyedSubscript_, v45, sub_22DEFAE84());
        swift_unknownObjectRelease();

      }
      NXConnection.Message.init(content:)((NSDictionary)v43);
      v46 = *(_QWORD *)(v0 + 24);
      *(_QWORD *)(v0 + 192) = v46;
      *(_QWORD *)(v0 + 32) = v46;
      v47 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v47;
      *v47 = v0;
      v47[1] = sub_22DEB9D9C;
      NXConnection.send(message:)((_QWORD *)(v0 + 32), v48);
    }
  }
}

uint64_t sub_22DEB9D9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();

  return swift_task_switch();
}

void sub_22DEB9E0C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_0;
  id v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *, uint64_t, uint64_t);
  uint64_t v53;

  v2 = *(void **)(v0 + 176);
  v1 = *(void **)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  swift_bridgeObjectRelease();
  sub_22DEA326C(v4, v3);

  swift_release();
  v5 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
  NXOrderedDictionary.Iterator.next()(v6, v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
LABEL_4:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    while (1)
    {
      v8 = *(void (**)(uint64_t))(v0 + 128);
      v9 = *(_QWORD *)(v0 + 96);
      v10 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + *(int *)(v7 + 48));
      *(_QWORD *)(v0 + 136) = v10;
      v8(v9);
      v11 = OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount;
      if (!*(_QWORD *)(v10
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount))
        break;
      v12 = *(_QWORD *)(v0 + 104);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      swift_release();
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
      NXOrderedDictionary.Iterator.next()(v13, v12);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v12, 1, v7) == 1)
        goto LABEL_4;
    }
    if (qword_255DCE6B0 != -1)
      swift_once();
    v15 = *(uint64_t **)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    v18 = sub_22DEFA674();
    __swift_project_value_buffer(v18, (uint64_t)qword_255DCE6B8);
    v52 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16);
    v52(v15, v14, v17);
    v19 = sub_22DEFA65C();
    v20 = sub_22DEFABA8();
    v21 = os_log_type_enabled(v19, v20);
    v23 = *(_QWORD *)(v0 + 80);
    v22 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 72);
    if (v21)
    {
      v25 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v53 = v51;
      *(_DWORD *)v25 = 136446210;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v26 = sub_22DEFAE3C();
      *(_QWORD *)(v25 + 4) = sub_22DE8C348(v26, v27, &v53);
      swift_bridgeObjectRelease();
      v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v28(v22, v24);
      _os_log_impl(&dword_22DE7A000, v19, v20, "request send: xid=%{public}s", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v51, -1, -1);
      MEMORY[0x22E321E0C](v25, -1, -1);
    }
    else
    {
      v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v28(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    }

    *(_QWORD *)(v0 + 144) = v28;
    v29 = *(_QWORD *)(v10 + v11);
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
    }
    else
    {
      v32 = *(_QWORD *)(v0 + 72);
      *(_QWORD *)(v10 + v11) = v31;
      v33 = (_QWORD *)(v10
                     + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage);
      v34 = *(_QWORD *)(v10
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage);
      v35 = *(_QWORD *)(v10
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage
                      + 8);
      *(_QWORD *)(v0 + 152) = v35;
      v36 = v33[2];
      *(_QWORD *)(v0 + 160) = v36;
      v37 = v33[3];
      *(_QWORD *)(v0 + 168) = v37;
      v38 = (void *)v33[4];
      *(_QWORD *)(v0 + 176) = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D00);
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_22DEFF4C0;
      v40 = MEMORY[0x24BEE1768];
      *(_QWORD *)(v39 + 32) = 1;
      v41 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v39 + 56) = v40;
      *(_QWORD *)(v39 + 64) = v34;
      *(_QWORD *)(v39 + 72) = v35;
      *(_QWORD *)(v39 + 120) = v40;
      *(_QWORD *)(v39 + 88) = v41;
      *(_QWORD *)(v39 + 96) = 3;
      v42 = v10 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_xid;
      *(_QWORD *)(v39 + 152) = v32;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v39 + 128));
      v52(boxed_opaque_existential_0, v42, v32);
      sub_22DEC9F48(0, &qword_255DC6CF8);
      swift_bridgeObjectRetain_n();
      sub_22DEA5084(v36, v37);
      v44 = v38;
      v45 = (void *)sub_22DEFAB6C();
      *(_QWORD *)(v0 + 184) = v45;
      if (v37 >> 60 != 15)
      {
        sub_22DEA5098(v36, v37);
        v46 = (void *)sub_22DEFA560();
        *(_QWORD *)(v0 + 48) = 2;
        objc_msgSend(v45, sel___swift_setObject_forKeyedSubscript_, v46, sub_22DEFAE84());
        sub_22DEA326C(v36, v37);
        swift_unknownObjectRelease();

      }
      if (v38)
      {
        *(_QWORD *)(v0 + 40) = 5;
        v47 = v44;
        objc_msgSend(v45, sel___swift_setObject_forKeyedSubscript_, v47, sub_22DEFAE84());
        swift_unknownObjectRelease();

      }
      NXConnection.Message.init(content:)((NSDictionary)v45);
      v48 = *(_QWORD *)(v0 + 24);
      *(_QWORD *)(v0 + 192) = v48;
      *(_QWORD *)(v0 + 32) = v48;
      v49 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v49;
      *v49 = v0;
      v49[1] = sub_22DEB9D9C;
      NXConnection.send(message:)((_QWORD *)(v0 + 32), v50);
    }
  }
}

void sub_22DEBA368()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *boxed_opaque_existential_0;
  id v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t, uint64_t);
  uint64_t v57;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 136);

  swift_bridgeObjectRelease();
  sub_22DEA326C(v3, v4);

  v6 = v1;
  sub_22DEB8A88(v5, 0, 0xF000000000000000, 0, v1);
  sub_22DEA326C(0, 0xF000000000000000);

  swift_release();
  v7 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
  NXOrderedDictionary.Iterator.next()(v8, v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
LABEL_5:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = (_QWORD *)(v0 + 32);
    while (1)
    {
      v11 = *(void (**)(uint64_t))(v0 + 128);
      v12 = *(_QWORD *)(v0 + 96);
      v13 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + *(int *)(v9 + 48));
      *(_QWORD *)(v0 + 136) = v13;
      v11(v12);
      v14 = OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount;
      if (!*(_QWORD *)(v13
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_sendCount))
        break;
      v15 = *(_QWORD *)(v0 + 104);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      swift_release();
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D10);
      NXOrderedDictionary.Iterator.next()(v16, v15);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v15, 1, v9) == 1)
        goto LABEL_5;
    }
    if (qword_255DCE6B0 != -1)
      swift_once();
    v17 = *(uint64_t **)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = sub_22DEFA674();
    __swift_project_value_buffer(v21, (uint64_t)qword_255DCE6B8);
    v56 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v20 + 16);
    v56(v17, v18, v19);
    v22 = sub_22DEFA65C();
    v23 = sub_22DEFABA8();
    v24 = os_log_type_enabled(v22, v23);
    v26 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 72);
    if (v24)
    {
      v28 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v57 = v55;
      *(_DWORD *)v28 = 136446210;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v29 = sub_22DEFAE3C();
      *(_QWORD *)(v28 + 4) = sub_22DE8C348(v29, v30, &v57);
      swift_bridgeObjectRelease();
      v31 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v31(v25, v27);
      _os_log_impl(&dword_22DE7A000, v22, v23, "request send: xid=%{public}s", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v55, -1, -1);
      v32 = v28;
      v10 = (_QWORD *)(v0 + 32);
      MEMORY[0x22E321E0C](v32, -1, -1);
    }
    else
    {
      v31 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v31(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    }

    *(_QWORD *)(v0 + 144) = v31;
    v33 = *(_QWORD *)(v13 + v14);
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
    {
      __break(1u);
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 72);
      *(_QWORD *)(v13 + v14) = v35;
      v37 = (_QWORD *)(v13
                     + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage);
      v39 = *(_QWORD *)(v13
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage);
      v38 = *(_QWORD *)(v13
                      + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage
                      + 8);
      *(_QWORD *)(v0 + 152) = v38;
      v40 = v37[2];
      *(_QWORD *)(v0 + 160) = v40;
      v41 = v37[3];
      *(_QWORD *)(v0 + 168) = v41;
      v42 = (void *)v37[4];
      *(_QWORD *)(v0 + 176) = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D00);
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_22DEFF4C0;
      v44 = MEMORY[0x24BEE1768];
      *(_QWORD *)(v43 + 32) = 1;
      v45 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v43 + 56) = v44;
      *(_QWORD *)(v43 + 64) = v39;
      *(_QWORD *)(v43 + 72) = v38;
      *(_QWORD *)(v43 + 120) = v44;
      *(_QWORD *)(v43 + 88) = v45;
      *(_QWORD *)(v43 + 96) = 3;
      v46 = v13 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_xid;
      *(_QWORD *)(v43 + 152) = v36;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v43 + 128));
      v56(boxed_opaque_existential_0, v46, v36);
      sub_22DEC9F48(0, &qword_255DC6CF8);
      swift_bridgeObjectRetain_n();
      sub_22DEA5084(v40, v41);
      v48 = v42;
      v49 = (void *)sub_22DEFAB6C();
      *(_QWORD *)(v0 + 184) = v49;
      if (v41 >> 60 != 15)
      {
        sub_22DEA5098(v40, v41);
        v50 = (void *)sub_22DEFA560();
        *(_QWORD *)(v0 + 48) = 2;
        objc_msgSend(v49, sel___swift_setObject_forKeyedSubscript_, v50, sub_22DEFAE84());
        sub_22DEA326C(v40, v41);
        swift_unknownObjectRelease();

      }
      if (v42)
      {
        *(_QWORD *)(v0 + 40) = 5;
        v51 = v48;
        objc_msgSend(v49, sel___swift_setObject_forKeyedSubscript_, v51, sub_22DEFAE84());
        swift_unknownObjectRelease();

      }
      NXConnection.Message.init(content:)((NSDictionary)v49);
      v52 = *(_QWORD *)(v0 + 24);
      *(_QWORD *)(v0 + 192) = v52;
      *(_QWORD *)(v0 + 32) = v52;
      v53 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v53;
      *v53 = v0;
      v53[1] = sub_22DEB9D9C;
      NXConnection.send(message:)(v10, v54);
    }
  }
}

uint64_t sub_22DEBA920(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[20] = a1;
  v2[21] = v1;
  v3 = sub_22DEFA674();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = swift_task_alloc();
  v4 = sub_22DEFA59C();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v5 = type metadata accessor for NXSession.ResponseSendItem(0);
  v2[30] = v5;
  v2[31] = *(_QWORD *)(v5 - 8);
  v2[32] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6920, v6, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v2[33] = sub_22DEFAA88();
  v2[34] = v7;
  return swift_task_switch();
}

uint64_t sub_22DEBAA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  NSObject *log;
  void *v69;

  v1 = *(_QWORD *)(v0 + 168);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v0 + 280) = v2;
  *(_QWORD *)(v1 + 128) = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 288) = v3;
  if (v3)
  {
    v66 = (uint64_t *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 296) = sub_22DEC9F48(0, &qword_255DC6CF8);
    v5 = MEMORY[0x24BEE1768];
    *(_DWORD *)(v0 + 376) = *(_DWORD *)(v4 + 80);
    *(_QWORD *)(v0 + 304) = *(_QWORD *)(v4 + 72);
    *(_QWORD *)(v0 + 312) = 0;
    v6 = *(_QWORD *)(v0 + 256);
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    sub_22DEC8BAC(*(_QWORD *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 376)), v6);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    *(_QWORD *)(v0 + 320) = v11;
    v11(v7, v6, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D00);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_22DEFF4D0;
    *(_QWORD *)(v12 + 56) = v5;
    *(_QWORD *)(v12 + 32) = 3;
    *(_QWORD *)(v12 + 88) = v9;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v12 + 64));
    v11((uint64_t)boxed_opaque_existential_0, v7, v9);
    v14 = (void *)sub_22DEFAB6C();
    *(_QWORD *)(v0 + 328) = v14;
    v15 = v6 + *(int *)(v8 + 20);
    v16 = *(_QWORD *)(v15 + 8);
    if (v16 >> 60 != 15)
    {
      v17 = *(_QWORD *)v15;
      sub_22DEA5098(*(_QWORD *)v15, *(_QWORD *)(v15 + 8));
      v18 = (void *)sub_22DEFA560();
      *(_QWORD *)(v0 + 152) = 2;
      objc_msgSend(v14, sel___swift_setObject_forKeyedSubscript_, v18, sub_22DEFAE84());
      sub_22DEA326C(v17, v16);
      swift_unknownObjectRelease();

    }
    v19 = *(_QWORD *)(v0 + 256);
    v20 = *(_QWORD *)(v0 + 240);
    v21 = *(void **)(v19 + *(int *)(v20 + 24));
    if (v21)
    {
      *(_QWORD *)(v0 + 144) = 5;
      v22 = v21;
      objc_msgSend(v14, sel___swift_setObject_forKeyedSubscript_, v22, sub_22DEFAE84());
      swift_unknownObjectRelease();

      v19 = *(_QWORD *)(v0 + 256);
      v20 = *(_QWORD *)(v0 + 240);
    }
    v23 = *(void **)(v19 + *(int *)(v20 + 28));
    *(_QWORD *)(v0 + 336) = v23;
    if (v23)
    {
      sub_22DEFA4C4();
      swift_allocObject();
      v24 = v23;
      v25 = v23;
      sub_22DEFA4B8();
      type metadata accessor for NXError();
      v26 = v23;
      v27 = NXError.__allocating_init(_:)(v23);
      *(_QWORD *)(v0 + 128) = v27;
      sub_22DEC37B0(&qword_255DC5EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
      v28 = sub_22DEFA4AC();
      v30 = v29;

      swift_release();
      v31 = (void *)sub_22DEFA560();
      sub_22DEA2F04(v28, v30);
      *(_QWORD *)(v0 + 136) = 4;
      objc_msgSend(v14, sel___swift_setObject_forKeyedSubscript_, v31, sub_22DEFAE84());

      swift_unknownObjectRelease();
      v32 = v23;
    }
    else
    {
      v32 = 0;
    }
    v69 = v32;
    if (qword_255DCE6B0 != -1)
      swift_once();
    v34 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 232);
    v36 = *(_QWORD *)(v0 + 192);
    v35 = *(_QWORD *)(v0 + 200);
    v38 = *(_QWORD *)(v0 + 176);
    v37 = *(_QWORD *)(v0 + 184);
    v39 = __swift_project_value_buffer(v38, (uint64_t)qword_255DCE6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v39, v38);
    v11(v34, v33, v35);
    v40 = v69;
    v41 = v69;
    v42 = sub_22DEFA65C();
    v43 = sub_22DEFABA8();
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(_QWORD *)(v0 + 224);
    v47 = *(_QWORD *)(v0 + 200);
    v46 = *(_QWORD *)(v0 + 208);
    if (v44)
    {
      log = v42;
      v48 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      *v66 = v67;
      *(_DWORD *)v48 = 136446466;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v49 = sub_22DEFAE3C();
      *(_QWORD *)(v48 + 4) = sub_22DE8C348(v49, v50, v66);
      swift_bridgeObjectRelease();
      v51 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v51(v45, v47);
      *(_WORD *)(v48 + 12) = 2080;
      if (v23)
      {
        v52 = v69;
        swift_getErrorValue();
        v53 = sub_22DEFAEC0();
        v55 = v54;
      }
      else
      {
        v55 = 0xE300000000000000;
        v53 = 7104878;
        v52 = v69;
      }
      v61 = *(_QWORD *)(v0 + 184);
      v60 = *(_QWORD *)(v0 + 192);
      v62 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v48 + 14) = sub_22DE8C348(v53, v55, v66);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, log, v43, "response send: xid=%{public}s, error=%s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v67, -1, -1);
      MEMORY[0x22E321E0C](v48, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    }
    else
    {
      v57 = *(_QWORD *)(v0 + 184);
      v56 = *(_QWORD *)(v0 + 192);
      v58 = *(_QWORD *)(v0 + 176);
      v51 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v51(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200));

      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
    }
    *(_QWORD *)(v0 + 344) = v51;
    NXConnection.Message.init(content:)((NSDictionary)v14);
    v63 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 352) = v63;
    *(_QWORD *)(v0 + 96) = v63;
    v64 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v64;
    *v64 = v0;
    v64[1] = sub_22DEBB360;
    return NXConnection.send(message:)((_QWORD *)(v0 + 96), v65);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEBB360()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 368) = v0;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_22DEBB3D4()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t *boxed_opaque_existential_0;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  void *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *log;
  void *v97;
  uint64_t v98[2];

  v1 = *(void **)(v0 + 336);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 200);

  v2(v4, v5);
  sub_22DEC8BF0(v3);
  v6 = *(_QWORD *)(v0 + 312) + 1;
  if (v6 == *(_QWORD *)(v0 + 288))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v91 = (uint64_t *)(v0 + 104);
    v8 = *(void **)(v0 + 368);
    v9 = MEMORY[0x24BEE1768];
    while (1)
    {
      *(_QWORD *)(v0 + 312) = v6;
      v18 = *(_QWORD *)(v0 + 256);
      v19 = *(_QWORD *)(v0 + 232);
      v20 = *(_QWORD *)(v0 + 240);
      v21 = *(_QWORD *)(v0 + 200);
      v22 = *(_QWORD *)(v0 + 208);
      sub_22DEC8BAC(*(_QWORD *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 376))+ *(_QWORD *)(v0 + 304) * v6, v18);
      v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
      *(_QWORD *)(v0 + 320) = v23;
      v23(v19, v18, v21);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D00);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_22DEFF4D0;
      *(_QWORD *)(v24 + 56) = v9;
      *(_QWORD *)(v24 + 32) = 3;
      *(_QWORD *)(v24 + 88) = v21;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v24 + 64));
      v23((uint64_t)boxed_opaque_existential_0, v19, v21);
      v26 = (void *)sub_22DEFAB6C();
      *(_QWORD *)(v0 + 328) = v26;
      v27 = v18 + *(int *)(v20 + 20);
      v28 = *(_QWORD *)(v27 + 8);
      if (v28 >> 60 != 15)
      {
        v29 = *(_QWORD *)v27;
        sub_22DEA5098(*(_QWORD *)v27, *(_QWORD *)(v27 + 8));
        v30 = (void *)sub_22DEFA560();
        *(_QWORD *)(v0 + 152) = 2;
        objc_msgSend(v26, sel___swift_setObject_forKeyedSubscript_, v30, sub_22DEFAE84());
        sub_22DEA326C(v29, v28);
        swift_unknownObjectRelease();

      }
      v31 = *(_QWORD *)(v0 + 256);
      v32 = *(_QWORD *)(v0 + 240);
      v33 = *(void **)(v31 + *(int *)(v32 + 24));
      if (v33)
      {
        *(_QWORD *)(v0 + 144) = 5;
        v34 = v33;
        objc_msgSend(v26, sel___swift_setObject_forKeyedSubscript_, v34, sub_22DEFAE84());
        swift_unknownObjectRelease();

        v31 = *(_QWORD *)(v0 + 256);
        v32 = *(_QWORD *)(v0 + 240);
      }
      v35 = *(void **)(v31 + *(int *)(v32 + 28));
      *(_QWORD *)(v0 + 336) = v35;
      if (!v35)
      {
        v58 = 0;
        goto LABEL_18;
      }
      sub_22DEFA4C4();
      swift_allocObject();
      v36 = v35;
      v37 = v35;
      sub_22DEFA4B8();
      type metadata accessor for NXError();
      v38 = v35;
      v39 = NXError.__allocating_init(_:)(v35);
      *(_QWORD *)(v0 + 128) = v39;
      sub_22DEC37B0(&qword_255DC5EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
      v40 = sub_22DEFA4AC();
      v42 = v41;

      if (!v8)
        break;

      swift_release();
      if (qword_255DCE6B0 != -1)
        swift_once();
      v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
      v44 = *(_QWORD *)(v0 + 232);
      v45 = *(_QWORD *)(v0 + 216);
      v46 = *(_QWORD *)(v0 + 200);
      __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)qword_255DCE6B8);
      v43(v45, v44, v46);
      v47 = v8;
      v48 = v8;
      v49 = sub_22DEFA65C();
      v50 = sub_22DEFAB9C();
      v51 = os_log_type_enabled(v49, v50);
      v52 = *(_QWORD *)(v0 + 256);
      v53 = *(_QWORD *)(v0 + 232);
      v55 = *(_QWORD *)(v0 + 208);
      v54 = *(_QWORD *)(v0 + 216);
      v56 = *(_QWORD *)(v0 + 200);
      if (v51)
      {
        v94 = *(_QWORD *)(v0 + 256);
        v10 = swift_slowAlloc();
        v92 = v53;
        v11 = swift_slowAlloc();
        v98[0] = v11;
        *(_DWORD *)v10 = 136446466;
        sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v12 = sub_22DEFAE3C();
        *(_QWORD *)(v10 + 4) = sub_22DE8C348(v12, v13, v98);
        swift_bridgeObjectRelease();
        v14 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        v14(v54, v56);
        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue();
        v15 = sub_22DEFAEC0();
        *(_QWORD *)(v10 + 14) = sub_22DE8C348(v15, v16, v98);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v49, v50, "### response send failed: xid=%{public}s, error=%s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        MEMORY[0x22E321E0C](v10, -1, -1);

        v14(v92, v56);
        v17 = v94;
      }
      else
      {

        v57 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        v57(v54, v56);

        v57(v53, v56);
        v17 = v52;
      }
      sub_22DEC8BF0(v17);
      v8 = 0;
      v6 = *(_QWORD *)(v0 + 312) + 1;
      v9 = MEMORY[0x24BEE1768];
      if (v6 == *(_QWORD *)(v0 + 288))
        goto LABEL_2;
    }
    swift_release();
    v59 = (void *)sub_22DEFA560();
    sub_22DEA2F04(v40, v42);
    *(_QWORD *)(v0 + 136) = 4;
    objc_msgSend(v26, sel___swift_setObject_forKeyedSubscript_, v59, sub_22DEFAE84());

    swift_unknownObjectRelease();
    v58 = v35;
LABEL_18:
    v97 = v58;
    if (qword_255DCE6B0 != -1)
      swift_once();
    v61 = *(_QWORD *)(v0 + 224);
    v60 = *(_QWORD *)(v0 + 232);
    v63 = *(_QWORD *)(v0 + 192);
    v62 = *(_QWORD *)(v0 + 200);
    v65 = *(_QWORD *)(v0 + 176);
    v64 = *(_QWORD *)(v0 + 184);
    v66 = __swift_project_value_buffer(v65, (uint64_t)qword_255DCE6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v63, v66, v65);
    v23(v61, v60, v62);
    v67 = v97;
    v68 = v97;
    v69 = sub_22DEFA65C();
    v70 = sub_22DEFABA8();
    v71 = os_log_type_enabled(v69, v70);
    v72 = *(_QWORD *)(v0 + 224);
    v74 = *(_QWORD *)(v0 + 200);
    v73 = *(_QWORD *)(v0 + 208);
    if (v71)
    {
      log = v69;
      v75 = swift_slowAlloc();
      v95 = swift_slowAlloc();
      *v91 = v95;
      *(_DWORD *)v75 = 136446466;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v76 = sub_22DEFAE3C();
      *(_QWORD *)(v75 + 4) = sub_22DE8C348(v76, v77, v91);
      swift_bridgeObjectRelease();
      v78 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v78(v72, v74);
      *(_WORD *)(v75 + 12) = 2080;
      if (v35)
      {
        v79 = v97;
        swift_getErrorValue();
        v80 = sub_22DEFAEC0();
        v82 = v81;
      }
      else
      {
        v82 = 0xE300000000000000;
        v80 = 7104878;
        v79 = v97;
      }
      v86 = *(_QWORD *)(v0 + 184);
      v93 = *(_QWORD *)(v0 + 192);
      v87 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v75 + 14) = sub_22DE8C348(v80, v82, v91);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, log, v70, "response send: xid=%{public}s, error=%s", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v95, -1, -1);
      MEMORY[0x22E321E0C](v75, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v93, v87);
    }
    else
    {
      v83 = *(_QWORD *)(v0 + 184);
      v84 = *(_QWORD *)(v0 + 192);
      v85 = *(_QWORD *)(v0 + 176);
      v78 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v78(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200));

      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v84, v85);
    }
    *(_QWORD *)(v0 + 344) = v78;
    NXConnection.Message.init(content:)((NSDictionary)v26);
    v88 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 352) = v88;
    *(_QWORD *)(v0 + 96) = v88;
    v89 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v89;
    *v89 = v0;
    v89[1] = sub_22DEBB360;
    return NXConnection.send(message:)((_QWORD *)(v0 + 96), v90);
  }
}

uint64_t sub_22DEBBCE4()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  void *v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t *boxed_opaque_existential_0;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  void *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *log;
  void *v95;
  uint64_t v96[2];

  v1 = *(void **)(v0 + 328);
  v89 = (uint64_t *)(v0 + 104);

  v2 = &unk_255DCE000;
  v3 = *(void **)(v0 + 368);
  if (qword_255DCE6B0 != -1)
    swift_once();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 200);
  __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)qword_255DCE6B8);
  v4(v6, v5, v7);
  v8 = v3;
  v9 = v3;
  v10 = sub_22DEFA65C();
  v11 = sub_22DEFAB9C();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 200);
  if (v12)
  {
    v92 = *(_QWORD *)(v0 + 232);
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v96[0] = v19;
    *(_DWORD *)v18 = 136446466;
    sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_22DEFAE3C();
    v90 = v13;
    *(_QWORD *)(v18 + 4) = sub_22DE8C348(v20, v21, v96);
    swift_bridgeObjectRelease();
    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
    *(_WORD *)(v18 + 12) = 2080;
    swift_getErrorValue();
    v23 = sub_22DEFAEC0();
    *(_QWORD *)(v18 + 14) = sub_22DE8C348(v23, v24, v96);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v10, v11, "### response send failed: xid=%{public}s, error=%s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    v25 = v19;
    v2 = (_QWORD *)&unk_255DCE000;
    MEMORY[0x22E321E0C](v25, -1, -1);
    MEMORY[0x22E321E0C](v18, -1, -1);

    v22(v92, v17);
    v26 = v90;
  }
  else
  {

    v27 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v27(v15, v17);

    v27(v14, v17);
    v26 = v13;
  }
  sub_22DEC8BF0(v26);
  v28 = *(_QWORD *)(v0 + 312) + 1;
  if (v28 == *(_QWORD *)(v0 + 288))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 312) = v28;
    v29 = *(_QWORD *)(v0 + 256);
    v30 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 200);
    v33 = *(_QWORD *)(v0 + 208);
    sub_22DEC8BAC(*(_QWORD *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 376))+ *(_QWORD *)(v0 + 304) * v28, v29);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
    *(_QWORD *)(v0 + 320) = v34;
    v34(v30, v29, v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D00);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_22DEFF4D0;
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v35 + 32) = 3;
    *(_QWORD *)(v35 + 88) = v32;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v35 + 64));
    v34((uint64_t)boxed_opaque_existential_0, v30, v32);
    v37 = (void *)sub_22DEFAB6C();
    *(_QWORD *)(v0 + 328) = v37;
    v38 = v29 + *(int *)(v31 + 20);
    v39 = *(_QWORD *)(v38 + 8);
    if (v39 >> 60 != 15)
    {
      v40 = *(_QWORD *)v38;
      sub_22DEA5098(*(_QWORD *)v38, *(_QWORD *)(v38 + 8));
      v41 = (void *)sub_22DEFA560();
      *(_QWORD *)(v0 + 152) = 2;
      objc_msgSend(v37, sel___swift_setObject_forKeyedSubscript_, v41, sub_22DEFAE84());
      sub_22DEA326C(v40, v39);
      swift_unknownObjectRelease();

    }
    v42 = *(_QWORD *)(v0 + 256);
    v43 = *(_QWORD *)(v0 + 240);
    v44 = *(void **)(v42 + *(int *)(v43 + 24));
    if (v44)
    {
      *(_QWORD *)(v0 + 144) = 5;
      v45 = v44;
      objc_msgSend(v37, sel___swift_setObject_forKeyedSubscript_, v45, sub_22DEFAE84());
      swift_unknownObjectRelease();

      v42 = *(_QWORD *)(v0 + 256);
      v43 = *(_QWORD *)(v0 + 240);
    }
    v46 = *(void **)(v42 + *(int *)(v43 + 28));
    *(_QWORD *)(v0 + 336) = v46;
    if (v46)
    {
      sub_22DEFA4C4();
      swift_allocObject();
      v47 = v46;
      v48 = v46;
      sub_22DEFA4B8();
      type metadata accessor for NXError();
      v49 = v46;
      v50 = NXError.__allocating_init(_:)(v46);
      *(_QWORD *)(v0 + 128) = v50;
      sub_22DEC37B0(&qword_255DC5EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
      v51 = sub_22DEFA4AC();
      v53 = v52;

      swift_release();
      v55 = (void *)sub_22DEFA560();
      sub_22DEA2F04(v51, v53);
      *(_QWORD *)(v0 + 136) = 4;
      objc_msgSend(v37, sel___swift_setObject_forKeyedSubscript_, v55, sub_22DEFAE84());

      swift_unknownObjectRelease();
      v56 = v46;
    }
    else
    {
      v56 = 0;
    }
    v95 = v56;
    if (v2[214] != -1)
      swift_once();
    v58 = *(_QWORD *)(v0 + 224);
    v57 = *(_QWORD *)(v0 + 232);
    v60 = *(_QWORD *)(v0 + 192);
    v59 = *(_QWORD *)(v0 + 200);
    v62 = *(_QWORD *)(v0 + 176);
    v61 = *(_QWORD *)(v0 + 184);
    v63 = __swift_project_value_buffer(v62, (uint64_t)qword_255DCE6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v63, v62);
    v34(v58, v57, v59);
    v64 = v95;
    v65 = v95;
    v66 = sub_22DEFA65C();
    v67 = sub_22DEFABA8();
    v68 = os_log_type_enabled(v66, v67);
    v69 = *(_QWORD *)(v0 + 224);
    v71 = *(_QWORD *)(v0 + 200);
    v70 = *(_QWORD *)(v0 + 208);
    if (v68)
    {
      log = v66;
      v72 = swift_slowAlloc();
      v93 = swift_slowAlloc();
      *v89 = v93;
      *(_DWORD *)v72 = 136446466;
      sub_22DEC37B0(&qword_255DC66B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v73 = sub_22DEFAE3C();
      *(_QWORD *)(v72 + 4) = sub_22DE8C348(v73, v74, v89);
      swift_bridgeObjectRelease();
      v75 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v75(v69, v71);
      *(_WORD *)(v72 + 12) = 2080;
      if (v46)
      {
        v76 = v95;
        swift_getErrorValue();
        v77 = sub_22DEFAEC0();
        v79 = v78;
        v80 = (_QWORD *)(v0 + 96);
      }
      else
      {
        v79 = 0xE300000000000000;
        v77 = 7104878;
        v80 = (_QWORD *)(v0 + 96);
        v76 = v95;
      }
      v84 = *(_QWORD *)(v0 + 184);
      v91 = *(_QWORD *)(v0 + 192);
      v85 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v72 + 14) = sub_22DE8C348(v77, v79, v89);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, log, v67, "response send: xid=%{public}s, error=%s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v93, -1, -1);
      MEMORY[0x22E321E0C](v72, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v91, v85);
    }
    else
    {
      v81 = *(_QWORD *)(v0 + 184);
      v82 = *(_QWORD *)(v0 + 192);
      v83 = *(_QWORD *)(v0 + 176);
      v75 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v75(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200));

      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
      v80 = (_QWORD *)(v0 + 96);
    }
    *(_QWORD *)(v0 + 344) = v75;
    NXConnection.Message.init(content:)((NSDictionary)v37);
    v86 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 352) = v86;
    *(_QWORD *)(v0 + 96) = v86;
    v87 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v87;
    *v87 = v0;
    v87[1] = sub_22DEBB360;
    return NXConnection.send(message:)(v80, v88);
  }
}

uint64_t NXSession.networkServerPort.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned __int16 v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69F0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 160))
  {
    swift_retain();
    sub_22DEFA758();
    swift_release();
    v4 = sub_22DEFA728();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      v8 = sub_22DEFA71C();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
      v7 = 0;
      v6 = v8;
      return v6 | (v7 << 16);
    }
    sub_22DE8731C((uint64_t)v3, &qword_255DC69F0);
  }
  v6 = 0;
  v7 = 1;
  return v6 | (v7 << 16);
}

uint64_t sub_22DEBC6C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _BYTE v15[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v10 = swift_allocObject();
  swift_beginAccess();
  v11 = (void *)MEMORY[0x22E321ED8](a3 + 16);
  swift_unknownObjectWeakInit();

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v9;
  v12[5] = v10;
  v12[6] = a1;
  v13 = a1;
  sub_22DEB3614((uint64_t)v7, (uint64_t)&unk_255DC6DA8, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_22DEBC840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a1;
  v6[14] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEBC85C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 136) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 120) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 144) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXSession();
    sub_22DEC37B0(&qword_255DC6920, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 104) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEBC940()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  BOOL v5;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  uint64_t v21;

  v2 = v0[17];
  v1 = (void *)v0[18];
  if (v1)
  {
    v3 = (void *)v0[16];
    v4 = *(void **)(v2 + 144);
    v5 = v4 && v1 == v4;
    if (v5 && v3 != 0)
    {
      v7 = v1;
      v8 = v3;
      if (qword_255DCE6B0 != -1)
        swift_once();
      v9 = sub_22DEFA674();
      __swift_project_value_buffer(v9, (uint64_t)qword_255DCE6B8);
      v10 = v3;
      v11 = v3;
      v12 = sub_22DEFA65C();
      v13 = sub_22DEFAB9C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v21 = v15;
        *(_DWORD *)v14 = 136315138;
        swift_getErrorValue();
        v16 = sub_22DEFAEC0();
        v0[12] = sub_22DE8C348(v16, v17, &v21);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v12, v13, "### NAN publisher start failed: error=%s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v15, -1, -1);
        MEMORY[0x22E321E0C](v14, -1, -1);
      }
      else
      {

      }
      v18 = (void *)v0[18];
      objc_msgSend(v18, sel_invalidate);

      v19 = *(void **)(v2 + 144);
      *(_QWORD *)(v2 + 144) = 0;

      v1 = (void *)v0[18];
    }
  }

  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEBCB84()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 104) = *(_QWORD *)(v0 + 136) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22DEBCBA0(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_22DEBCBF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[27] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  v2[28] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF0);
  v2[29] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[30] = v5;
  v2[31] = *(_QWORD *)(v5 + 64);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8);
  v2[34] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[35] = v7;
  v2[36] = *(_QWORD *)(v7 + 64);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  sub_22DEC26C8(a1, (uint64_t)(v2 + 2));
  sub_22DEC37B0(&qword_255DC6920, v8, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v2[39] = sub_22DEFAA88();
  v2[40] = v9;
  return swift_task_switch();
}

uint64_t sub_22DEBCD28()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  if (qword_255DCE6B0 != -1)
    swift_once();
  v1 = sub_22DEFA674();
  __swift_project_value_buffer(v1, (uint64_t)qword_255DCE6B8);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  v2 = sub_22DEFA65C();
  v3 = sub_22DEFABA8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v16 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_22DEC26C8(v0 + 16, v0 + 128);
    sub_22DE8D848();
    v6 = sub_22DEFAE3C();
    *(_QWORD *)(v0 + 208) = sub_22DE8C348(v6, v7, &v16);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    _os_log_impl(&dword_22DE7A000, v2, v3, "network client connection start: endpoint=%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v5, -1, -1);
    MEMORY[0x22E321E0C](v4, -1, -1);
  }
  else
  {
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
  }

  v8 = *(_QWORD *)(v0 + 216);
  type metadata accessor for NXConnection();
  sub_22DEC26C8(v0 + 16, v0 + 72);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  NXConnection.Configuration.init()((uint64_t)&v14);
  v16 = v14;
  v17 = v15;
  NXConnection.Configuration.nanTrafficFlags(_:)(*(unsigned int *)(v8 + 36), (uint64_t)&v12);
  v16 = v12;
  v17 = v13;
  v9 = *(unsigned int *)(v8 + 40);
  LOBYTE(v14) = *(_BYTE *)(v8 + 44);
  NXConnection.Configuration.passwordType(_:)(v9 | ((unint64_t)v14 << 32), (uint64_t)&v14);
  v16 = v14;
  v17 = v15;
  v12 = *(_QWORD *)(v8 + 56);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 328) = NXConnection.__allocating_init(endpoint:configuration:environment:)((__int128 *)(v0 + 72), (uint64_t)&v16, &v12);
  sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  *(_QWORD *)(v0 + 336) = sub_22DEFAA88();
  *(_QWORD *)(v0 + 344) = v10;
  return swift_task_switch();
}

uint64_t sub_22DEBD02C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 264);
  NXConnection.events.getter(*(_QWORD *)(v0 + 304));
  NXConnection.messages.getter(v1);
  return swift_task_switch();
}

uint64_t sub_22DEBD074()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = v0[41];
  v1 = v0[37];
  v2 = v0[38];
  v3 = v0[35];
  v25 = v1;
  v26 = v0[36];
  v4 = v0[34];
  v32 = v0[32];
  v33 = v0[33];
  v34 = v0[31];
  v5 = v0[28];
  v30 = v0[30];
  v31 = v0[29];
  v35 = v5;
  v36 = v0[27];
  v6 = sub_22DEFAAC4();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v29 = v6;
  v28(v5, 1, 1, v6);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = v3;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v11 = v4;
  v10(v1, v2, v4);
  v12 = v9;
  v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (v26 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v16 + v13, v25, v11);
  *(_QWORD *)(v16 + v14) = v7;
  *(_QWORD *)(v16 + v15) = v8;
  sub_22DEC26C8((uint64_t)(v0 + 2), v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_22DEC2704((uint64_t)(v0 + 2), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  v27 = sub_22DEB34C8(v35, (uint64_t)&unk_255DC6E90, v16);
  v0[44] = v27;
  v28(v35, 1, 1, v29);
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v33, v31);
  v19 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v20 = (v34 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 32))(v21 + v19, v32, v31);
  *(_QWORD *)(v21 + v20) = v17;
  *(_QWORD *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  v22 = sub_22DEB34C8(v35, (uint64_t)&unk_255DC6EA0, v21);
  v0[45] = v22;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DEC2704((uint64_t)(v0 + 2), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  swift_retain();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = *(_QWORD *)(v36 + 152);
  *(_QWORD *)(v36 + 152) = 0x8000000000000000;
  sub_22DEC5794(v37, v27, v22, (uint64_t)(v0 + 2), isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v36 + 152) = v38;
  swift_bridgeObjectRelease();
  sub_22DEC2704((uint64_t)(v0 + 2), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_22DEBD3F0()
{
  NXConnection.start()();
  return swift_task_switch();
}

uint64_t sub_22DEBD428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBD4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[23] = a6;
  v7[24] = a7;
  v7[21] = a4;
  v7[22] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E68);
  v7[25] = v8;
  v7[26] = *(_QWORD *)(v8 - 8);
  v7[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEBD560()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8);
  sub_22DEFAB24();
  swift_beginAccess();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  *v1 = v0;
  v1[1] = sub_22DEBD634;
  return sub_22DEFAB30();
}

uint64_t sub_22DEBD634()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEBD688()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(void **)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 232) = v2;
  *(_QWORD *)(v0 + 240) = v1;
  v3 = *(unsigned __int8 *)(v0 + 136);
  *(_BYTE *)(v0 + 65) = v3;
  if (v3 < 0xF0)
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 248) = Strong;
    if (Strong)
    {
      v5 = *(_QWORD *)(v0 + 192);
      v6 = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 256) = v6;
      sub_22DEC26C8(v5, v0 + 16);
      *(_QWORD *)(v0 + 144) = v2;
      *(_QWORD *)(v0 + 152) = v1;
      *(_BYTE *)(v0 + 160) = v3;
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v7;
      *v7 = v0;
      v7[1] = sub_22DEBD7B4;
      return sub_22DEBD8A4(v6, v0 + 16, v0 + 144);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    sub_22DECA520(v2, v1, v3);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBD7B4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEBD810()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(void **)(v0 + 232);
  v3 = *(_BYTE *)(v0 + 65);
  swift_release();
  sub_22DECA520(v2, v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v4;
  *v4 = v0;
  v4[1] = sub_22DEBD634;
  return sub_22DEFAB30();
}

uint64_t sub_22DEBD8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 104) = a1;
  *(_QWORD *)(v4 + 112) = v3;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 120) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 136) = v5;
  *(_OWORD *)(v4 + 152) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(v4 + 65) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(v4 + 168) = *(_OWORD *)a3;
  *(_BYTE *)(v4 + 66) = *(_BYTE *)(a3 + 16);
  sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  *(_QWORD *)(v4 + 184) = sub_22DEFAA88();
  *(_QWORD *)(v4 + 192) = v6;
  return swift_task_switch();
}

void sub_22DEBD93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unsigned __int8 v9;
  uint64_t v10;
  void *v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[3];
  unsigned __int8 v21;

  if (*(_QWORD *)(v0 + 104))
  {
    v1 = qword_255DCE6B0;
    swift_retain();
    if (v1 != -1)
      swift_once();
    v3 = *(void **)(v0 + 168);
    v2 = *(_QWORD *)(v0 + 176);
    v4 = *(unsigned __int8 *)(v0 + 66);
    v5 = sub_22DEFA674();
    __swift_project_value_buffer(v5, (uint64_t)qword_255DCE6B8);
    v19 = v4 >> 5;
    sub_22DEC36C8(v3, v2, v4);
    sub_22DEC36C8(v3, v2, v4);
    v6 = sub_22DEFA65C();
    v7 = sub_22DEFABA8();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_BYTE *)(v0 + 66);
    v11 = *(void **)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 176);
    if (v8)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v12 = 136315138;
      v20[0] = v18;
      *(_QWORD *)(v0 + 72) = v11;
      *(_QWORD *)(v0 + 80) = v10;
      *(_BYTE *)(v0 + 88) = v9;
      sub_22DEC37F0();
      v13 = sub_22DEFAE3C();
      *(_QWORD *)(v0 + 96) = sub_22DE8C348(v13, v14, v20);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      sub_22DEC377C(v11, v10, v9);
      sub_22DEC377C(v11, v10, v9);
      _os_log_impl(&dword_22DE7A000, v6, v7, "network client connection event: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v18, -1, -1);
      MEMORY[0x22E321E0C](v12, -1, -1);
    }
    else
    {
      sub_22DEC377C(*(void **)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 66));
      sub_22DEC377C(v11, v10, v9);
    }

    v16 = *(void **)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 176);
    v17 = *(_BYTE *)(v0 + 66);
    v20[0] = *(_QWORD *)(v0 + 104) | 0xC000000000000000;
    v20[1] = (uint64_t)v16;
    v20[2] = v15;
    v21 = v17;
    swift_retain();
    sub_22DEC36C8(v16, v15, v17);
    NXSession._report(event:)((uint64_t)v20);
    swift_release();
    sub_22DEC377C(v16, v15, v17);
    __asm { BR              X9 }
  }
  __asm { BR              X0 }
}

uint64_t sub_22DEBDCEC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 168);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_22DEBDD44()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;

  v1 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_BYTE *)(v0 + 66);
  swift_release();
  sub_22DEC377C(v1, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBDD94()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 224) = v2;
  *v2 = v4;
  v2[1] = sub_22DEBDE00;
  return sub_22DEBA920(*(_QWORD *)(v1 + 208));
}

uint64_t sub_22DEBDE00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEBDE4C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBDE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E28);
  v6[23] = v7;
  v6[24] = *(_QWORD *)(v7 - 8);
  v6[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEBDEEC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF0);
  sub_22DEFAB24();
  swift_beginAccess();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v1;
  *v1 = v0;
  v1[1] = sub_22DEBDFC0;
  return sub_22DEFAB30();
}

uint64_t sub_22DEBDFC0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEBE014()
{
  uint64_t v0;
  void *v1;
  uint64_t Strong;
  uint64_t v3;

  v1 = *(void **)(v0 + 144);
  *(_QWORD *)(v0 + 216) = v1;
  if (v1)
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 224) = Strong;
    if (Strong)
    {
      *(_QWORD *)(v0 + 232) = swift_weakLoadStrong();
      type metadata accessor for NXSession();
      sub_22DEC37B0(&qword_255DC6920, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
      sub_22DEFAA88();
      return swift_task_switch();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBE0F8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  void *v6;

  if (*(_QWORD *)(v0 + 232))
  {
    if (*(_BYTE *)(*(_QWORD *)(v0 + 224) + 16) != 1)
    {
      v1 = *(void **)(v0 + 216);
      *(_QWORD *)(v0 + 152) = 1;
      v2 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
      swift_unknownObjectRelease();
      if (v2)
      {
        sub_22DEFAC44();
        swift_unknownObjectRelease();
      }
      else
      {
        *(_OWORD *)(v0 + 48) = 0u;
        *(_OWORD *)(v0 + 64) = 0u;
      }
      sub_22DEA4DD0(v0 + 48, v0 + 16, &qword_255DC6040);
      if (*(_QWORD *)(v0 + 40))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v3 = *(_QWORD *)(v0 + 128);
          v4 = *(_QWORD *)(v0 + 136);
          v6 = *(void **)(v0 + 216);
          sub_22DEB4B8C(v3, v4, &v6);
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      else
      {
        sub_22DE8731C(v0 + 16, &qword_255DC6040);
      }
      v6 = *(void **)(v0 + 216);
      sub_22DEB5288(&v6);
    }
LABEL_11:
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_22DEBE260()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)(v0 + 216);
  swift_release();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v2;
  *v2 = v0;
  v2[1] = sub_22DEBDFC0;
  return sub_22DEFAB30();
}

uint64_t sub_22DEBE2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[29] = a3;
  v4[30] = v3;
  v4[28] = a1;
  v6 = sub_22DEFA674();
  v4[31] = v6;
  v4[32] = *(_QWORD *)(v6 - 8);
  v4[33] = swift_task_alloc();
  sub_22DEC26C8(a2, (uint64_t)(v4 + 2));
  sub_22DEC37B0(&qword_255DC6920, v7, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v4[34] = sub_22DEFAA88();
  v4[35] = v8;
  return swift_task_switch();
}

uint64_t sub_22DEBE384()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BOOL4 v45;
  uint64_t v46;

  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(_QWORD *)(v0 + 224);
    swift_release();
    v45 = v2 == v3;
  }
  else
  {
    v45 = 0;
  }
  if (qword_255DCE6B0 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(void **)(v0 + 232);
  v8 = __swift_project_value_buffer(v6, (uint64_t)qword_255DCE6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8, v6);
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  v9 = v7;
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  v10 = v7;
  v11 = sub_22DEFA65C();
  v12 = sub_22DEFABA8();
  if (os_log_type_enabled(v11, v12))
  {
    v42 = *(_QWORD *)(v0 + 232);
    v13 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v46 = v44;
    *(_DWORD *)v13 = 136315650;
    sub_22DEC26C8(v0 + 16, v0 + 72);
    sub_22DE8D848();
    v14 = sub_22DEFAE3C();
    *(_QWORD *)(v0 + 216) = sub_22DE8C348(v14, v15, &v46);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    *(_WORD *)(v13 + 12) = 1024;
    *(_DWORD *)(v0 + 68) = v45;
    sub_22DEFAC2C();
    *(_WORD *)(v13 + 18) = 2080;
    if (v42)
    {
      swift_getErrorValue();
      v16 = sub_22DEFAEC0();
      v18 = v17;
    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    v22 = *(_QWORD *)(v0 + 256);
    v43 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 200) = sub_22DE8C348(v16, v18, &v46);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v11, v12, "network client connection ended: endpoint=%s, best=%{BOOL}d, error=%s", (uint8_t *)v13, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v44, -1, -1);
    MEMORY[0x22E321E0C](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v43, v23);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 256);
    v19 = *(_QWORD *)(v0 + 264);
    v21 = *(_QWORD *)(v0 + 248);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  v24 = (uint64_t *)(*(_QWORD *)(v0 + 240) + 152);
  swift_beginAccess();
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
  v25 = sub_22DEC3B84(v0 + 16);
  swift_endAccess();
  sub_22DEC2704(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
  sub_22DECA7E8(v25);
  if (!v45)
    goto LABEL_38;
  swift_weakAssign();
  v26 = *v24;
  *(_QWORD *)(v0 + 288) = *v24;
  v27 = *(_BYTE *)(v26 + 32);
  *(_BYTE *)(v0 + 65) = v27;
  v28 = -1;
  v29 = -1 << v27;
  if (-(-1 << v27) < 64)
    v28 = ~(-1 << -(char)v29);
  v30 = v28 & *(_QWORD *)(v26 + 64);
  v31 = (_QWORD *)swift_bridgeObjectRetain();
  if (!v30)
  {
    v36 = 63 - v29;
    if ((unint64_t)(63 - v29) > 0x7F)
    {
      v37 = v31[9];
      if (v37)
      {
        v32 = 1;
LABEL_21:
        v34 = (v37 - 1) & v37;
        v33 = __clz(__rbit64(v37)) + (v32 << 6);
        goto LABEL_17;
      }
      if (v36 >= 0xC0)
      {
        v37 = v31[10];
        if (v37)
        {
          v32 = 2;
          goto LABEL_21;
        }
        if (v36 >= 0x100)
        {
          v37 = v31[11];
          if (v37)
          {
            v32 = 3;
            goto LABEL_21;
          }
          if (v36 >= 0x140)
          {
            v37 = v31[12];
            if (v37)
            {
              v32 = 4;
              goto LABEL_21;
            }
            v38 = 0;
            v39 = v36 >> 6;
            if (v39 <= 5)
              v39 = 5;
            v40 = v39 - 5;
            while (v40 != v38)
            {
              v37 = v31[v38++ + 13];
              if (v37)
              {
                v32 = v38 + 4;
                goto LABEL_21;
              }
            }
          }
        }
      }
    }
    swift_release();
LABEL_38:
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  v32 = 0;
  v33 = __clz(__rbit64(v30));
  v34 = (v30 - 1) & v30;
LABEL_17:
  *(_QWORD *)(v0 + 296) = v32;
  *(_QWORD *)(v0 + 304) = v34;
  v35 = (_QWORD *)(v31[7] + 24 * v33);
  *(_QWORD *)(v0 + 312) = *v35;
  *(_QWORD *)(v0 + 320) = v35[1];
  *(_QWORD *)(v0 + 328) = v35[2];
  type metadata accessor for NXConnection();
  sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DEFAA88();
  return swift_task_switch();
}

uint64_t sub_22DEBE954()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 312);
  swift_beginAccess();
  *(_BYTE *)(v0 + 66) = *(_BYTE *)(v1 + 56);
  return swift_task_switch();
}

uint64_t sub_22DEBE9A4()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;

  v1 = *(unsigned __int8 *)(v0 + 66);
  swift_release();
  swift_release();
  if (v1 == 9)
    swift_weakAssign();
  result = swift_release();
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 304);
  if (v4)
  {
    v5 = (v4 - 1) & v4;
    v6 = __clz(__rbit64(v4)) | (v3 << 6);
    result = *(_QWORD *)(v0 + 288);
LABEL_5:
    *(_QWORD *)(v0 + 296) = v3;
    *(_QWORD *)(v0 + 304) = v5;
    v7 = (_QWORD *)(*(_QWORD *)(result + 56) + 24 * v6);
    *(_QWORD *)(v0 + 312) = *v7;
    *(_QWORD *)(v0 + 320) = v7[1];
    *(_QWORD *)(v0 + 328) = v7[2];
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22DEFAA88();
    return swift_task_switch();
  }
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = (unint64_t)((1 << *(_BYTE *)(v0 + 65)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 288);
    if (v8 >= v9)
      goto LABEL_20;
    v10 = result + 64;
    v11 = *(_QWORD *)(result + 64 + 8 * v8);
    ++v3;
    if (v11)
    {
LABEL_9:
      v5 = (v11 - 1) & v11;
      v6 = __clz(__rbit64(v11)) + (v3 << 6);
      goto LABEL_5;
    }
    v3 = v8 + 1;
    if (v8 + 1 >= v9)
      goto LABEL_20;
    v11 = *(_QWORD *)(v10 + 8 * v3);
    if (v11)
      goto LABEL_9;
    v3 = v8 + 2;
    if (v8 + 2 >= v9)
      goto LABEL_20;
    v11 = *(_QWORD *)(v10 + 8 * v3);
    if (v11)
      goto LABEL_9;
    v12 = v8 + 3;
    if (v12 >= v9)
    {
LABEL_20:
      swift_release();
      type metadata accessor for NXConnection();
      sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
      sub_22DEFAA88();
      return swift_task_switch();
    }
    v11 = *(_QWORD *)(v10 + 8 * v12);
    if (v11)
    {
      v3 = v12;
      goto LABEL_9;
    }
    while (1)
    {
      v3 = v12 + 1;
      if (__OFADD__(v12, 1))
        break;
      if (v3 >= v9)
        goto LABEL_20;
      v11 = *(_QWORD *)(v10 + 8 * v3);
      ++v12;
      if (v11)
        goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22DEBEBCC()
{
  uint64_t v0;

  NXConnection.cancel()();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBEC08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE v10[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v7 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  v8[5] = v7;
  v8[6] = a1;
  swift_retain();
  sub_22DEB34C8((uint64_t)v4, (uint64_t)&unk_255DC6DE0, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_22DEBED8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEBEDA8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = Strong;
  if (Strong)
  {
    swift_beginAccess();
    v2 = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 96) = v2;
    if (v2)
    {
      v3 = v2;
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v4;
      *v4 = v0;
      v4[1] = sub_22DEBEE74;
      return sub_22DEBEEC8(*(_QWORD *)(v0 + 80), v3);
    }
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBEE74()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEBEEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  v3[9] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 + 64);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8);
  v3[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[16] = v7;
  v3[17] = *(_QWORD *)(v7 + 64);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v8 = sub_22DEFA734();
  v3[20] = v8;
  v3[21] = *(_QWORD *)(v8 - 8);
  v3[22] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6920, v9, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v3[23] = sub_22DEFAA88();
  v3[24] = v10;
  return swift_task_switch();
}

uint64_t sub_22DEBF00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 160);
  v2 = *(_QWORD *)(v0 + 176);
  if (v1)
    v3 = *(_QWORD *)(v0 + 56) == v1;
  else
    v3 = 0;
  if (v3)
  {
    v6 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 168);
    sub_22DEFA86C();
    v7 = sub_22DEFA6EC();
    v9 = v8;
    *(_QWORD *)(v0 + 200) = v7;
    *(_QWORD *)(v0 + 208) = v8;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v6);
    if (qword_255DCE6B0 != -1)
      swift_once();
    v10 = sub_22DEFA674();
    __swift_project_value_buffer(v10, (uint64_t)qword_255DCE6B8);
    swift_bridgeObjectRetain_n();
    v11 = sub_22DEFA65C();
    v12 = sub_22DEFABA8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v23 = v14;
      *(_DWORD *)v13 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_22DE8C348(v7, v9, &v23);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22DE7A000, v11, v12, "network server connection accepted: peer=%s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v14, -1, -1);
      MEMORY[0x22E321E0C](v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 48);
    type metadata accessor for NXConnection();
    swift_retain();
    NXConnection.Configuration.init()((uint64_t)&v21);
    v23 = v21;
    v24 = v22;
    NXConnection.Configuration.nanTrafficFlags(_:)(*(unsigned int *)(v15 + 36), (uint64_t)&v19);
    v23 = v19;
    v24 = v20;
    v17 = *(unsigned int *)(v15 + 40);
    LOBYTE(v21) = *(_BYTE *)(v15 + 44);
    NXConnection.Configuration.passwordType(_:)(v17 | ((unint64_t)v21 << 32), (uint64_t)&v21);
    v23 = v21;
    v24 = v22;
    v19 = *(_QWORD *)(v15 + 56);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 216) = NXConnection.__allocating_init(networkConnection:configuration:environment:)(v16, (uint64_t)&v23, &v19);
    sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    *(_QWORD *)(v0 + 224) = sub_22DEFAA88();
    *(_QWORD *)(v0 + 232) = v18;
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEBF350()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  NXConnection.events.getter(*(_QWORD *)(v0 + 152));
  NXConnection.messages.getter(v1);
  return swift_task_switch();
}

uint64_t sub_22DEBF398()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  char v38;

  v35 = v0[27];
  v26 = v0[25];
  v27 = v0[26];
  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[16];
  v22 = v2;
  v23 = v0[17];
  v4 = v0[15];
  v31 = v0[13];
  v32 = v0[14];
  v33 = v0[12];
  v5 = v0[9];
  v29 = v0[11];
  v30 = v0[10];
  v34 = v5;
  v36 = v0[8];
  v6 = sub_22DEFAAC4();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v25 = v6;
  v24(v5, 1, 1, v6);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = (v23 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v12 + v9, v22, v4);
  *(_QWORD *)(v12 + v10) = v7;
  *(_QWORD *)(v12 + v11) = v8;
  v13 = (_QWORD *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v13 = v26;
  v13[1] = v27;
  v28 = sub_22DEB34C8(v34, (uint64_t)&unk_255DC6E08, v12);
  v0[30] = v28;
  v24(v34, 1, 1, v25);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v31, v32, v30);
  v16 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v17 = (v33 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 32))(v18 + v16, v31, v30);
  *(_QWORD *)(v18 + v17) = v14;
  *(_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v15;
  v19 = sub_22DEB34C8(v34, (uint64_t)&unk_255DC6E18, v18);
  v0[31] = v19;
  swift_beginAccess();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v37[0] = *(_QWORD *)(v36 + 168);
  *(_QWORD *)(v36 + 168) = 0x8000000000000000;
  sub_22DEC5CAC(v35, v28, v19, v35, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v36 + 168) = v37[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  v37[1] = 0;
  v37[2] = 0;
  v37[0] = v35 | 0x4000000000000000;
  v38 = 0;
  swift_retain();
  NXSession._report(event:)((uint64_t)v37);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEBF704()
{
  NXConnection.start()();
  return swift_task_switch();
}

uint64_t sub_22DEBF73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBF810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _BYTE v14[24];

  v2 = sub_22DEFA764();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v10 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = v9;
  *((_QWORD *)v12 + 5) = v10;
  (*(void (**)(char *, _BYTE *, uint64_t))(v3 + 32))(&v12[v11], &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  sub_22DEB34C8((uint64_t)v7, (uint64_t)&unk_255DC6DC0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_22DEBFA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEBFA20()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = Strong;
  if (Strong)
  {
    swift_beginAccess();
    v2 = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 96) = v2;
    if (v2)
    {
      v3 = v2;
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v4;
      *v4 = v0;
      v4[1] = sub_22DEBFAEC;
      return sub_22DEBFB78(*(_QWORD *)(v0 + 80), v3);
    }
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBFAEC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEBFB40()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEBFB78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_22DEFA908();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC69F0);
  v3[14] = swift_task_alloc();
  v5 = sub_22DEFA674();
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v6 = sub_22DEFA764();
  v3[18] = v6;
  v3[19] = *(_QWORD *)(v6 - 8);
  v3[20] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6920, v7, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v3[21] = sub_22DEFAA88();
  v3[22] = v8;
  return swift_task_switch();
}

uint64_t sub_22DEBFCB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[3];
  char v83;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 160);
  if (v2)
    v3 = *(_QWORD *)(v0 + 48) == v2;
  else
    v3 = 0;
  if (!v3)
    goto LABEL_28;
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v4, *(_QWORD *)(v0 + 40), v6);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
  if (v7 == *MEMORY[0x24BDDFFC8])
  {
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 96))(v8, *(_QWORD *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v8, v11);
    if (qword_255DCE6B0 != -1)
      swift_once();
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 64);
    v14 = *(_QWORD *)(v0 + 72);
    __swift_project_value_buffer(*(_QWORD *)(v0 + 120), (uint64_t)qword_255DCE6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v13, v15);
    v16 = sub_22DEFA65C();
    v17 = sub_22DEFABA8();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 72);
    if (v18)
    {
      v80 = *(_QWORD *)(v0 + 88);
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v82[0] = v24;
      *(_DWORD *)v23 = 136315138;
      sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
      v25 = sub_22DEFAEC0();
      *(_QWORD *)(v0 + 16) = sub_22DE8C348(v25, v26, v82);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v27(v19, v21);
      _os_log_impl(&dword_22DE7A000, v16, v17, "network server waiting: error=%s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v24, -1, -1);
      MEMORY[0x22E321E0C](v23, -1, -1);

      v27(v80, v21);
    }
    else
    {

      v46 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v46(v19, v21);
      v46(v20, v21);
    }
    goto LABEL_28;
  }
  if (v7 == *MEMORY[0x24BDDFFC0])
  {
    v28 = *(_QWORD *)(v0 + 160);
    v29 = *(_QWORD *)(v0 + 104);
    v31 = *(_QWORD *)(v0 + 64);
    v30 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 96))(v28, *(_QWORD *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v29, v28, v31);
    if (qword_255DCE6B0 != -1)
      swift_once();
    v33 = *(_QWORD *)(v0 + 96);
    v32 = *(_QWORD *)(v0 + 104);
    v35 = *(_QWORD *)(v0 + 64);
    v34 = *(_QWORD *)(v0 + 72);
    __swift_project_value_buffer(*(_QWORD *)(v0 + 120), (uint64_t)qword_255DCE6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v32, v35);
    v36 = sub_22DEFA65C();
    v37 = sub_22DEFAB9C();
    v38 = os_log_type_enabled(v36, v37);
    v39 = *(_QWORD *)(v0 + 96);
    v41 = *(_QWORD *)(v0 + 64);
    v40 = *(_QWORD *)(v0 + 72);
    if (v38)
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      v82[0] = v78;
      *(_DWORD *)v42 = 136315138;
      sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
      v43 = sub_22DEFAEC0();
      *(_QWORD *)(v0 + 24) = sub_22DE8C348(v43, v44, v82);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v45 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v45(v39, v41);
      _os_log_impl(&dword_22DE7A000, v36, v37, "### network server failed: error=%s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v78, -1, -1);
      MEMORY[0x22E321E0C](v42, -1, -1);
    }
    else
    {
      v45 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v45(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64));
    }

    v61 = *(_QWORD *)(v0 + 104);
    v62 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v1 + 160) = 0;
    swift_release();
    sub_22DEADB64();
    v45(v61, v62);
    goto LABEL_28;
  }
  if (v7 == *MEMORY[0x24BDDFFB8])
  {
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v7 != *MEMORY[0x24BDDFFB0])
  {
    if (v7 == *MEMORY[0x24BDDFFD0])
    {
      if (qword_255DCE6B0 != -1)
        swift_once();
      __swift_project_value_buffer(*(_QWORD *)(v0 + 120), (uint64_t)qword_255DCE6B8);
      v64 = sub_22DEFA65C();
      v65 = sub_22DEFABA8();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v66 = 0;
        _os_log_impl(&dword_22DE7A000, v64, v65, "network server canceled", v66, 2u);
        MEMORY[0x22E321E0C](v66, -1, -1);
      }

      *(_QWORD *)(v1 + 160) = 0;
      swift_release();
      sub_22DEADB64();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    }
    goto LABEL_28;
  }
  if (qword_255DCE6B0 != -1)
    swift_once();
  v47 = *(_QWORD *)(v0 + 128);
  v48 = *(_QWORD *)(v0 + 136);
  v49 = *(_QWORD *)(v0 + 120);
  v50 = __swift_project_value_buffer(v49, (uint64_t)qword_255DCE6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v48, v50, v49);
  swift_retain_n();
  v51 = sub_22DEFA65C();
  v52 = sub_22DEFABA8();
  if (!os_log_type_enabled(v51, v52))
  {
    v68 = *(_QWORD *)(v0 + 128);
    v67 = *(_QWORD *)(v0 + 136);
    v69 = *(_QWORD *)(v0 + 120);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    goto LABEL_39;
  }
  v81 = 7104878;
  v53 = (uint8_t *)swift_slowAlloc();
  v54 = swift_slowAlloc();
  v82[0] = v54;
  *(_DWORD *)v53 = 136315138;
  if (*(_QWORD *)(v1 + 160))
  {
    v55 = *(_QWORD *)(v0 + 112);
    swift_retain();
    sub_22DEFA758();
    swift_release();
    v56 = sub_22DEFA728();
    v57 = *(_QWORD *)(v56 - 8);
    v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56);
    v59 = *(_QWORD *)(v0 + 112);
    if (v58 != 1)
    {
      v81 = sub_22DEFA704();
      v60 = v70;
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v56);
      goto LABEL_38;
    }
    sub_22DE8731C(*(_QWORD *)(v0 + 112), &qword_255DC69F0);
  }
  v60 = 0xE300000000000000;
LABEL_38:
  v71 = *(_QWORD *)(v0 + 128);
  v77 = *(_QWORD *)(v0 + 120);
  v79 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 32) = sub_22DE8C348(v81, v60, v82);
  sub_22DEFAC2C();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_22DE7A000, v51, v52, "network server ready: port=%s", v53, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x22E321E0C](v54, -1, -1);
  MEMORY[0x22E321E0C](v53, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v79, v77);
LABEL_39:
  v72 = *(_BYTE **)(v0 + 56);
  if ((v72[16] & 1) != 0)
  {
LABEL_44:
    memset(v82, 0, sizeof(v82));
    v83 = 16;
    NXSession._report(event:)((uint64_t)v82);
    goto LABEL_28;
  }
  if ((v72[81] & 1) != 0)
  {
    v72[80] = 1;
    goto LABEL_44;
  }
  v72[81] = 1;
  v73 = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v73 + 80) = 0;
  v74 = *(_BYTE **)(v0 + 56);
  if (*(_BYTE *)(v73 + 16) == 1)
  {
    v74[81] = 0;
    goto LABEL_44;
  }
  if (v74[45] == 1)
  {
    sub_22DEAE884();
    if ((v74[32] & 1) != 0)
      sub_22DEAEE8C();
    return swift_task_switch();
  }
  else
  {
    v75 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v75;
    *v75 = v0;
    v75[1] = sub_22DEC05E8;
    return sub_22DEAF2B4((uint64_t)v75, v76);
  }
}

uint64_t sub_22DEC05E8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEC0634()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD v6[3];
  char v7;

  v1 = *(_BYTE **)(v0 + 56);
  if ((v1[80] & 1) != 0 && (v1[80] = 0, v2 = v1[16], v1 = *(_BYTE **)(v0 + 56), (v2 & 1) == 0))
  {
    if (v1[45] == 1)
    {
      sub_22DEAE884();
      if ((v1[32] & 1) != 0)
        sub_22DEAEE8C();
      return swift_task_switch();
    }
    else
    {
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v4;
      *v4 = v0;
      v4[1] = sub_22DEC05E8;
      return sub_22DEAF2B4((uint64_t)v4, v5);
    }
  }
  else
  {
    v1[81] = 0;
    memset(v6, 0, sizeof(v6));
    v7 = 16;
    NXSession._report(event:)((uint64_t)v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEC0780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[14] = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E68);
  v8[19] = v9;
  v8[20] = *(_QWORD *)(v9 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEC07EC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8);
  sub_22DEFAB24();
  swift_beginAccess();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_22DEC08C0;
  return sub_22DEFAB30();
}

uint64_t sub_22DEC08C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEC0914()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  uint64_t Strong;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 184) = v2;
  *(_QWORD *)(v0 + 192) = v1;
  v3 = *(unsigned __int8 *)(v0 + 80);
  *(_BYTE *)(v0 + 81) = v3;
  if (v3 < 0xF0)
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 200) = Strong;
    if (Strong)
    {
      v5 = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 208) = v5;
      *(_QWORD *)(v0 + 88) = v2;
      *(_QWORD *)(v0 + 96) = v1;
      *(_BYTE *)(v0 + 104) = v3;
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v6;
      *v6 = v0;
      v6[1] = sub_22DEC0A24;
      return sub_22DEC0B14(v5, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), v0 + 88);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    sub_22DECA520(v2, v1, v3);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEC0A24()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEC0A80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(void **)(v0 + 184);
  v3 = *(_BYTE *)(v0 + 81);
  swift_release();
  sub_22DECA520(v2, v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v4;
  *v4 = v0;
  v4[1] = sub_22DEC08C0;
  return sub_22DEFAB30();
}

uint64_t sub_22DEC0B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 64) = a3;
  *(_QWORD *)(v5 + 72) = v4;
  *(_QWORD *)(v5 + 48) = a1;
  *(_QWORD *)(v5 + 56) = a2;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)a4;
  *(_BYTE *)(v5 + 33) = *(_BYTE *)(a4 + 16);
  sub_22DEC37B0(&qword_255DC6920, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  *(_QWORD *)(v5 + 96) = sub_22DEFAA88();
  *(_QWORD *)(v5 + 104) = v6;
  return swift_task_switch();
}

void sub_22DEC0B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unsigned __int8 v9;
  uint64_t v10;
  void *v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[3];
  unsigned __int8 v21;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = qword_255DCE6B0;
    swift_retain();
    if (v1 != -1)
      swift_once();
    v3 = *(void **)(v0 + 80);
    v2 = *(_QWORD *)(v0 + 88);
    v4 = *(unsigned __int8 *)(v0 + 33);
    v5 = sub_22DEFA674();
    __swift_project_value_buffer(v5, (uint64_t)qword_255DCE6B8);
    v19 = v4 >> 5;
    sub_22DEC36C8(v3, v2, v4);
    sub_22DEC36C8(v3, v2, v4);
    v6 = sub_22DEFA65C();
    v7 = sub_22DEFABA8();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_BYTE *)(v0 + 33);
    v11 = *(void **)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 88);
    if (v8)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v12 = 136315138;
      v20[0] = v18;
      *(_QWORD *)(v0 + 16) = v11;
      *(_QWORD *)(v0 + 24) = v10;
      *(_BYTE *)(v0 + 32) = v9;
      sub_22DEC37F0();
      v13 = sub_22DEFAE3C();
      *(_QWORD *)(v0 + 40) = sub_22DE8C348(v13, v14, v20);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      sub_22DEC377C(v11, v10, v9);
      sub_22DEC377C(v11, v10, v9);
      _os_log_impl(&dword_22DE7A000, v6, v7, "network server connection event: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v18, -1, -1);
      MEMORY[0x22E321E0C](v12, -1, -1);
    }
    else
    {
      sub_22DEC377C(*(void **)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 33));
      sub_22DEC377C(v11, v10, v9);
    }

    v16 = *(void **)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 88);
    v17 = *(_BYTE *)(v0 + 33);
    v20[0] = *(_QWORD *)(v0 + 48) | 0xC000000000000000;
    v20[1] = (uint64_t)v16;
    v20[2] = v15;
    v21 = v17;
    swift_retain();
    sub_22DEC36C8(v16, v15, v17);
    NXSession._report(event:)((uint64_t)v20);
    swift_release();
    sub_22DEC377C(v16, v15, v17);
    __asm { BR              X9 }
  }
  __asm { BR              X0 }
}

uint64_t sub_22DEC0F24()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 80);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_22DEC0F7C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_BYTE *)(v0 + 33);
  swift_release();
  sub_22DEC377C(v1, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEC0FCC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 136) = v2;
  *v2 = v4;
  v2[1] = sub_22DEC1038;
  return sub_22DEBA920(*(_QWORD *)(v1 + 120));
}

uint64_t sub_22DEC1038()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEC1084()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEC10BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E28);
  v6[23] = v7;
  v6[24] = *(_QWORD *)(v7 - 8);
  v6[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEC1124()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF0);
  sub_22DEFAB24();
  swift_beginAccess();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v1;
  *v1 = v0;
  v1[1] = sub_22DEC11F8;
  return sub_22DEFAB30();
}

uint64_t sub_22DEC11F8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEC124C()
{
  uint64_t v0;
  void *v1;
  uint64_t Strong;
  uint64_t v3;

  v1 = *(void **)(v0 + 144);
  *(_QWORD *)(v0 + 216) = v1;
  if (v1)
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 224) = Strong;
    if (Strong)
    {
      *(_QWORD *)(v0 + 232) = swift_weakLoadStrong();
      type metadata accessor for NXSession();
      sub_22DEC37B0(&qword_255DC6920, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
      sub_22DEFAA88();
      return swift_task_switch();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEC1330()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  void *v6;

  if (*(_QWORD *)(v0 + 232))
  {
    if (*(_BYTE *)(*(_QWORD *)(v0 + 224) + 16) != 1)
    {
      v1 = *(void **)(v0 + 216);
      *(_QWORD *)(v0 + 152) = 1;
      v2 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_22DEFAE84());
      swift_unknownObjectRelease();
      if (v2)
      {
        sub_22DEFAC44();
        swift_unknownObjectRelease();
      }
      else
      {
        *(_OWORD *)(v0 + 48) = 0u;
        *(_OWORD *)(v0 + 64) = 0u;
      }
      sub_22DEA4DD0(v0 + 48, v0 + 16, &qword_255DC6040);
      if (*(_QWORD *)(v0 + 40))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v3 = *(_QWORD *)(v0 + 128);
          v4 = *(_QWORD *)(v0 + 136);
          v6 = *(void **)(v0 + 216);
          sub_22DEB4B8C(v3, v4, &v6);
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      else
      {
        sub_22DE8731C(v0 + 16, &qword_255DC6040);
      }
      v6 = *(void **)(v0 + 216);
      sub_22DEB5288(&v6);
    }
LABEL_11:
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_22DEC1498()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)(v0 + 216);
  swift_release();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v2;
  *v2 = v0;
  v2[1] = sub_22DEC11F8;
  return sub_22DEFAB30();
}

uint64_t sub_22DEC1508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  v6 = sub_22DEFA674();
  v5[19] = v6;
  v5[20] = *(_QWORD *)(v6 - 8);
  v5[21] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6920, v7, (uint64_t (*)(uint64_t))type metadata accessor for NXSession, (uint64_t)&protocol conformance descriptor for NXSession);
  v5[22] = sub_22DEFAA88();
  v5[23] = v8;
  return swift_task_switch();
}

uint64_t sub_22DEC15A4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BOOL4 v51;
  uint64_t v52[3];
  char v53;

  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(_QWORD *)(v0 + 112);
    swift_release();
    v51 = v2 == v3;
  }
  else
  {
    v51 = 0;
  }
  if (qword_255DCE6B0 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(void **)(v0 + 136);
  v8 = __swift_project_value_buffer(v6, (uint64_t)qword_255DCE6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8, v6);
  swift_bridgeObjectRetain();
  v9 = v7;
  swift_bridgeObjectRetain();
  v10 = v7;
  v11 = sub_22DEFA65C();
  v12 = sub_22DEFABA8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 128);
    v48 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v52[0] = v50;
    *(_DWORD *)v15 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_22DE8C348(v14, v13, v52);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 1024;
    *(_DWORD *)(v0 + 240) = v51;
    sub_22DEFAC2C();
    *(_WORD *)(v15 + 18) = 2080;
    if (v48)
    {
      swift_getErrorValue();
      v16 = sub_22DEFAEC0();
      v18 = v17;
    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    v22 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 96) = sub_22DE8C348(v16, v18, v52);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v11, v12, "network server connection ended: peer=%s, best=%{BOOL}d, error=%s", (uint8_t *)v15, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v50, -1, -1);
    MEMORY[0x22E321E0C](v15, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v49, v23);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  v24 = *(_QWORD *)(v0 + 112);
  v25 = (uint64_t *)(*(_QWORD *)(v0 + 144) + 168);
  swift_beginAccess();
  v26 = sub_22DE86764(v24);
  if ((v27 & 1) != 0)
  {
    v28 = v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v25;
    v52[0] = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_22DEC67B4();
      v30 = v52[0];
    }
    sub_22DEC55EC(v28, v30);
    *v25 = v30;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_endAccess();
  if (v51)
  {
    swift_weakAssign();
    v31 = *v25;
    *(_QWORD *)(v0 + 192) = *v25;
    v32 = *(_BYTE *)(v31 + 32);
    *(_BYTE *)(v0 + 244) = v32;
    v33 = -1;
    v34 = -1 << v32;
    if (-(-1 << v32) < 64)
      v33 = ~(-1 << -(char)v34);
    v35 = v33 & *(_QWORD *)(v31 + 64);
    v36 = (_QWORD *)swift_bridgeObjectRetain();
    if (v35)
    {
      v37 = 0;
      v38 = __clz(__rbit64(v35));
      v39 = (v35 - 1) & v35;
LABEL_21:
      *(_QWORD *)(v0 + 200) = v37;
      *(_QWORD *)(v0 + 208) = v39;
      v40 = (_QWORD *)(v36[7] + 24 * v38);
      *(_QWORD *)(v0 + 216) = *v40;
      *(_QWORD *)(v0 + 224) = v40[1];
      *(_QWORD *)(v0 + 232) = v40[2];
      type metadata accessor for NXConnection();
      sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_22DEFAA88();
      return swift_task_switch();
    }
    v42 = 63 - v34;
    if ((unint64_t)(63 - v34) > 0x7F)
    {
      v43 = v36[9];
      if (v43)
      {
        v37 = 1;
LABEL_25:
        v39 = (v43 - 1) & v43;
        v38 = __clz(__rbit64(v43)) + (v37 << 6);
        goto LABEL_21;
      }
      if (v42 >= 0xC0)
      {
        v43 = v36[10];
        if (v43)
        {
          v37 = 2;
          goto LABEL_25;
        }
        if (v42 >= 0x100)
        {
          v43 = v36[11];
          if (v43)
          {
            v37 = 3;
            goto LABEL_25;
          }
          if (v42 >= 0x140)
          {
            v43 = v36[12];
            if (v43)
            {
              v37 = 4;
              goto LABEL_25;
            }
            v44 = 0;
            v45 = v42 >> 6;
            if (v45 <= 5)
              v45 = 5;
            v46 = v45 - 5;
            while (v46 != v44)
            {
              v43 = v36[v44++ + 13];
              if (v43)
              {
                v37 = v44 + 4;
                goto LABEL_25;
              }
            }
          }
        }
      }
    }
    swift_release();
  }
  v47 = *(_QWORD *)(v0 + 112);
  v52[1] = 0;
  v52[2] = 0;
  v52[0] = v47 | 0x8000000000000000;
  v53 = 0;
  swift_retain();
  NXSession._report(event:)((uint64_t)v52);
  swift_release();
  sub_22DEADB64();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEC1B78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);
  swift_beginAccess();
  *(_BYTE *)(v0 + 245) = *(_BYTE *)(v1 + 56);
  return swift_task_switch();
}

uint64_t sub_22DEC1BC8()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  char v15;

  v1 = *(unsigned __int8 *)(v0 + 245);
  swift_release();
  swift_release();
  if (v1 == 9)
    swift_weakAssign();
  result = swift_release();
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  if (v4)
  {
    v5 = (v4 - 1) & v4;
    v6 = __clz(__rbit64(v4)) | (v3 << 6);
    result = *(_QWORD *)(v0 + 192);
LABEL_5:
    *(_QWORD *)(v0 + 200) = v3;
    *(_QWORD *)(v0 + 208) = v5;
    v7 = (_QWORD *)(*(_QWORD *)(result + 56) + 24 * v6);
    *(_QWORD *)(v0 + 216) = *v7;
    *(_QWORD *)(v0 + 224) = v7[1];
    *(_QWORD *)(v0 + 232) = v7[2];
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, 255, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22DEFAA88();
    return swift_task_switch();
  }
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = (unint64_t)((1 << *(_BYTE *)(v0 + 244)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 192);
    if (v8 >= v9)
      goto LABEL_20;
    v10 = result + 64;
    v11 = *(_QWORD *)(result + 64 + 8 * v8);
    ++v3;
    if (v11)
    {
LABEL_9:
      v5 = (v11 - 1) & v11;
      v6 = __clz(__rbit64(v11)) + (v3 << 6);
      goto LABEL_5;
    }
    v3 = v8 + 1;
    if (v8 + 1 >= v9)
      goto LABEL_20;
    v11 = *(_QWORD *)(v10 + 8 * v3);
    if (v11)
      goto LABEL_9;
    v3 = v8 + 2;
    if (v8 + 2 >= v9)
      goto LABEL_20;
    v11 = *(_QWORD *)(v10 + 8 * v3);
    if (v11)
      goto LABEL_9;
    v12 = v8 + 3;
    if (v12 >= v9)
    {
LABEL_20:
      swift_release();
      v13 = *(_QWORD *)(v0 + 112);
      v14[1] = 0;
      v14[2] = 0;
      v14[0] = v13 | 0x8000000000000000;
      v15 = 0;
      swift_retain();
      NXSession._report(event:)((uint64_t)v14);
      swift_release();
      sub_22DEADB64();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v11 = *(_QWORD *)(v10 + 8 * v12);
    if (v11)
    {
      v3 = v12;
      goto LABEL_9;
    }
    while (1)
    {
      v3 = v12 + 1;
      if (__OFADD__(v12, 1))
        break;
      if (v3 >= v9)
        goto LABEL_20;
      v11 = *(_QWORD *)(v10 + 8 * v3);
      ++v12;
      if (v11)
        goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

void static NXSession.Configuration.default.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 12) = 1;
}

uint64_t NXSession.Configuration.nanEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NXSession.Configuration.nanEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*NXSession.Configuration.nanEnabled.modify())()
{
  return nullsub_1;
}

uint64_t NXSession.Configuration.nanTrafficFlags.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t NXSession.Configuration.nanTrafficFlags.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*NXSession.Configuration.nanTrafficFlags.modify())()
{
  return nullsub_1;
}

unint64_t NXSession.Configuration.passwordType.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t NXSession.Configuration.passwordType.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*NXSession.Configuration.passwordType.modify())()
{
  return nullsub_1;
}

uint64_t NXSession.Configuration.serverMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 13);
}

uint64_t NXSession.Configuration.serverMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 13) = result;
  return result;
}

uint64_t (*NXSession.Configuration.serverMode.modify())()
{
  return nullsub_1;
}

uint64_t NXSession.Configuration.description.getter()
{
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  sub_22DEFABB4();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0x6C62616E456E616ELL;
}

uint64_t NXSession.Configuration.nanTrafficFlags(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;
  char v5;

  v3 = *(_DWORD *)(v2 + 8);
  v4 = *(_BYTE *)(v2 + 12);
  v5 = *(_BYTE *)(v2 + 13);
  *(_BYTE *)a2 = *(_BYTE *)v2;
  *(_DWORD *)(a2 + 4) = result;
  *(_DWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 12) = v4;
  *(_BYTE *)(a2 + 13) = v5;
  return result;
}

uint64_t NXSession.Configuration.passwordType(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;

  v3 = *(_DWORD *)(v2 + 4);
  v4 = *(_BYTE *)(v2 + 13);
  *(_BYTE *)a2 = *(_BYTE *)v2;
  *(_DWORD *)(a2 + 4) = v3;
  *(_DWORD *)(a2 + 8) = result;
  *(_BYTE *)(a2 + 12) = BYTE4(result) & 1;
  *(_BYTE *)(a2 + 13) = v4;
  return result;
}

uint64_t sub_22DEC2048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;

  v1 = v0 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_xid;
  v2 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage
                 + 16);
  v4 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage
                 + 24);
  v5 = *(void **)(v0
                + OBJC_IVAR____TtCC5Nexus9NXSessionP33_7D7442A4671C6D470D1B71BC5152D67D18RequestTransaction_requestMessage
                + 32);
  swift_bridgeObjectRelease();
  sub_22DEA326C(v3, v4);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_22DEC20DC()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)NXEnvironmentValues.dispatchQueue.getter();
  v1 = sub_22DEFABFC();

  return v1;
}

void sub_22DEC2130(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_22DEC2138@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_22DEC214C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_22DEC2160@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_22DEC2174(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_22DEC21A4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_22DEC21D0@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_22DEC21F4(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_22DEC2208(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_22DEC221C(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_22DEC2230@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_22DEC2244(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_22DEC2258(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_22DEC226C(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_22DEC2280()
{
  _DWORD *v0;

  return *v0 == 0;
}

uint64_t sub_22DEC2290()
{
  return sub_22DEFAC50();
}

_DWORD *sub_22DEC22A8(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_22DEC22BC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_22DEC22CC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_22DEC22D8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22DEC22EC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_22DEC88F8(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_DWORD *sub_22DEC2328@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata accessor for NXSession()
{
  return objc_opt_self();
}

uint64_t sub_22DEC2354()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DEC2378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_22DEC23C8;
  return sub_22DEAB7CC((uint64_t)v4, v2, v3);
}

uint64_t sub_22DEC23C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22DEC2410(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_22DEC2474;
  return v6(a1);
}

uint64_t sub_22DEC2474()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22DEC24C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E58);
  v10 = *(_QWORD *)(type metadata accessor for NXSession.ResponseSendItem(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_22DEFAD28();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for NXSession.ResponseSendItem(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_22DEC87E0(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_22DEC26C8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

uint64_t sub_22DEC2704(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_22DEC2740(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  _BYTE v25[56];
  _OWORD v26[3];
  char v27;

  sub_22DEC26C8(a2, (uint64_t)v25);
  v5 = *v2;
  sub_22DE8D88C();
  swift_bridgeObjectRetain();
  v6 = sub_22DEFA9B0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = ~v7;
    sub_22DEC9920();
    while (1)
    {
      v10 = *(_QWORD *)(v5 + 48) + 56 * v8;
      v11 = *(_BYTE *)(v10 + 48);
      v12 = *(_OWORD *)(v10 + 16);
      v13 = *(_OWORD *)(v10 + 32);
      v26[0] = *(_OWORD *)v10;
      v26[1] = v12;
      v26[2] = v13;
      v27 = v11;
      if ((sub_22DEFA9C8() & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_22DEC2704(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE809FC);
    v16 = *(_QWORD *)(*v2 + 48) + 56 * v8;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    v22 = *(_QWORD *)(v16 + 40);
    v23 = *(_BYTE *)(v16 + 48);
    *(_QWORD *)a1 = *(_QWORD *)v16;
    *(_QWORD *)(a1 + 8) = v18;
    *(_QWORD *)(a1 + 16) = v19;
    *(_QWORD *)(a1 + 24) = v20;
    *(_QWORD *)(a1 + 32) = v21;
    *(_QWORD *)(a1 + 40) = v22;
    *(_BYTE *)(a1 + 48) = v23;
    sub_22DE80988(v17, v18, v19, v20, v21, v22, v23);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_22DEC26C8((uint64_t)v25, (uint64_t)v26);
    v24 = *v2;
    *v2 = 0x8000000000000000;
    sub_22DEC2704((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
    sub_22DEC2C68((uint64_t)v26, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v24;
    swift_bridgeObjectRelease();
    sub_22DEC26C8((uint64_t)v26, a1);
    return 1;
  }
}

uint64_t sub_22DEC2924()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D80);
  v3 = sub_22DEFAC8C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v33 = v1;
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v36 = v2;
    while (1)
    {
      if (v7)
      {
        v38 = (v7 - 1) & v7;
        v39 = v10;
        v13 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v34)
          goto LABEL_33;
        v15 = v35[v14];
        v16 = v10 + 1;
        if (!v15)
        {
          v16 = v10 + 2;
          if (v10 + 2 >= v34)
            goto LABEL_33;
          v15 = v35[v16];
          if (!v15)
          {
            v16 = v10 + 3;
            if (v10 + 3 >= v34)
              goto LABEL_33;
            v15 = v35[v16];
            if (!v15)
            {
              v17 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v2 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v35[v17];
              if (!v15)
              {
                while (1)
                {
                  v16 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v16 >= v34)
                    goto LABEL_33;
                  v15 = v35[v16];
                  ++v17;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v16 = v10 + 4;
            }
          }
        }
LABEL_23:
        v38 = (v15 - 1) & v15;
        v39 = v16;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 56 * v13;
      v19 = *(_QWORD *)v18;
      v21 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v18 + 24);
      v23 = *(_QWORD *)(v18 + 32);
      v22 = *(_QWORD *)(v18 + 40);
      v24 = *(_BYTE *)(v18 + 48);
      v37 = *(_QWORD *)(v18 + 8);
      sub_22DE8D88C();
      result = sub_22DEFA9B0();
      v25 = -1 << *(_BYTE *)(v4 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v8 + 8 * v27);
        }
        while (v31 == -1);
        v11 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 56 * v11;
      v2 = v36;
      *(_QWORD *)v12 = v19;
      *(_QWORD *)(v12 + 8) = v37;
      *(_QWORD *)(v12 + 16) = v21;
      *(_QWORD *)(v12 + 24) = v20;
      *(_QWORD *)(v12 + 32) = v23;
      *(_QWORD *)(v12 + 40) = v22;
      *(_BYTE *)(v12 + 48) = v24;
      ++*(_QWORD *)(v4 + 16);
      v7 = v38;
      v10 = v39;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_22DEC2C68(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _BYTE v19[56];

  v4 = v3;
  sub_22DEC26C8(a1, (uint64_t)v19);
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_22DEC2924();
  }
  else
  {
    if (v9 > v8)
    {
      sub_22DEC2E10();
      goto LABEL_12;
    }
    sub_22DEC2FDC();
  }
  v10 = *v4;
  sub_22DE8D88C();
  v11 = sub_22DEFA9B0();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    sub_22DEC9920();
    while ((sub_22DEFA9C8() & 1) == 0)
    {
      a2 = (a2 + 1) & v13;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_12:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_22DEC26C8(a1, *(_QWORD *)(v14 + 48) + 56 * a2);
  v16 = *(_QWORD *)(v14 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (!v17)
  {
    *(_QWORD *)(v14 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_22DEFAE90();
  __break(1u);
  return result;
}

void *sub_22DEC2E10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D80);
  v2 = *v0;
  v3 = sub_22DEFAC80();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_28;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
      {
        v9 = v26 + 2;
        if (v26 + 2 >= v13)
          goto LABEL_28;
        v27 = *(_QWORD *)(v6 + 8 * v9);
        if (!v27)
          break;
      }
    }
LABEL_27:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 56 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_QWORD *)(v17 + 40);
    v24 = *(_QWORD *)(v4 + 48) + v16;
    v25 = *(_BYTE *)(v17 + 48);
    *(_QWORD *)v24 = *(_QWORD *)v17;
    *(_QWORD *)(v24 + 8) = v19;
    *(_QWORD *)(v24 + 16) = v20;
    *(_QWORD *)(v24 + 24) = v21;
    *(_QWORD *)(v24 + 32) = v22;
    *(_QWORD *)(v24 + 40) = v23;
    *(_BYTE *)(v24 + 48) = v25;
    result = (void *)sub_22DE80988(v18, v19, v20, v21, v22, v23, v25);
  }
  v28 = v26 + 3;
  if (v28 >= v13)
    goto LABEL_28;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22DEC2FDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D80);
  v3 = sub_22DEFAC8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v32 = v1;
  v33 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v35 = v2;
  while (1)
  {
    if (v7)
    {
      v37 = (v7 - 1) & v7;
      v38 = v10;
      v13 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v34)
      goto LABEL_33;
    v15 = *(_QWORD *)(v33 + 8 * v14);
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_33;
      v15 = *(_QWORD *)(v33 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v34)
          goto LABEL_33;
        v15 = *(_QWORD *)(v33 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v37 = (v15 - 1) & v15;
    v38 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 56 * v13;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 32);
    v24 = *(_BYTE *)(v18 + 48);
    v36 = *(_QWORD *)(v18 + 40);
    sub_22DE80988(*(_QWORD *)v18, v20, v21, v22, v23, v36, v24);
    sub_22DE8D88C();
    result = sub_22DEFA9B0();
    v25 = -1 << *(_BYTE *)(v4 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v8 + 8 * v27);
      }
      while (v31 == -1);
      v11 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 56 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_QWORD *)(v12 + 16) = v21;
    *(_QWORD *)(v12 + 24) = v22;
    v2 = v35;
    *(_QWORD *)(v12 + 32) = v23;
    *(_QWORD *)(v12 + 40) = v36;
    *(_BYTE *)(v12 + 48) = v24;
    ++*(_QWORD *)(v4 + 16);
    v7 = v37;
    v10 = v38;
  }
  v17 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v32;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v33 + 8 * v17);
  if (v15)
  {
    v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v34)
      goto LABEL_33;
    v15 = *(_QWORD *)(v33 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22DEC3300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  _BYTE v16[56];

  sub_22DEC26C8(a1, (uint64_t)v16);
  v4 = *v2;
  sub_22DE8D88C();
  swift_bridgeObjectRetain();
  v5 = sub_22DEFA9B0();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    sub_22DEC9920();
    while ((sub_22DEFA9C8() & 1) == 0)
    {
      v7 = (v7 + 1) & v8;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v2;
    v15 = *v2;
    *v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_22DEC2E10();
      v11 = v15;
    }
    v12 = *(_QWORD *)(v11 + 48) + 56 * v7;
    v13 = *(_BYTE *)(v12 + 48);
    v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v12;
    *(_OWORD *)(a2 + 16) = v14;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v12 + 32);
    *(_BYTE *)(a2 + 48) = v13;
    sub_22DEC3834(v7);
    *v2 = v15;
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    result = swift_bridgeObjectRelease();
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_BYTE *)(a2 + 48) = -1;
  }
  return result;
}

uint64_t sub_22DEC34A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_22DEC34B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_22DEC34C8()
{
  unint64_t result;

  result = qword_255DC6978;
  if (!qword_255DC6978)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXConnection.Command, &type metadata for NXConnection.Command);
    atomic_store(result, (unint64_t *)&qword_255DC6978);
  }
  return result;
}

unint64_t sub_22DEC350C()
{
  unint64_t result;

  result = qword_255DCE6E8;
  if (!qword_255DCE6E8)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF458, &type metadata for NXSession.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCE6E8);
  }
  return result;
}

unint64_t sub_22DEC3550()
{
  unint64_t result;

  result = qword_255DCE6F0[0];
  if (!qword_255DCE6F0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF408, &type metadata for NXSession.Command.ConnectionCodingKeys);
    atomic_store(result, qword_255DCE6F0);
  }
  return result;
}

unint64_t sub_22DEC3594()
{
  unint64_t result;

  result = qword_255DC6990;
  if (!qword_255DC6990)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXConnection.Command, &type metadata for NXConnection.Command);
    atomic_store(result, (unint64_t *)&qword_255DC6990);
  }
  return result;
}

unint64_t sub_22DEC35D8()
{
  unint64_t result;

  result = qword_255DC69A8;
  if (!qword_255DC69A8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXConnection.Command, &type metadata for NXConnection.Command);
    atomic_store(result, (unint64_t *)&qword_255DC69A8);
  }
  return result;
}

uint64_t sub_22DEC361C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEC3640()
{
  uint64_t v0;

  return sub_22DEB30D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_22DEC3648(unint64_t result, void *a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v6;

  switch((a4 >> 2) & 4 | (result >> 62))
  {
    case 0uLL:
      result = (unint64_t)(id)result;
      break;
    case 1uLL:
    case 2uLL:
      result = swift_retain();
      break;
    case 3uLL:
      v6 = a4 & 0xEF;
      swift_retain();
      result = (unint64_t)sub_22DEC36C8(a2, a3, v6);
      break;
    default:
      return result;
  }
  return result;
}

id sub_22DEC36C8(id result, uint64_t a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
    case 3:
    case 4:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_22DEC36FC(unint64_t a1, void *a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v6;

  switch((a4 >> 2) & 4 | (a1 >> 62))
  {
    case 0uLL:

      break;
    case 1uLL:
    case 2uLL:
      swift_release();
      break;
    case 3uLL:
      v6 = a4 & 0xEF;
      swift_release();
      sub_22DEC377C(a2, a3, v6);
      break;
    default:
      return;
  }
}

void sub_22DEC377C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 2:
    case 3:
    case 4:

      break;
    default:
      return;
  }
}

uint64_t sub_22DEC37B0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x22E321D70](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DEC37F0()
{
  unint64_t result;

  result = qword_255DC69D0;
  if (!qword_255DC69D0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXConnection.Event, &type metadata for NXConnection.Event);
    atomic_store(result, (unint64_t *)&qword_255DC69D0);
  }
  return result;
}

unint64_t sub_22DEC3834(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      sub_22DE8D88C();
      do
      {
        v13 = 56 * v6;
        v14 = sub_22DEFA9B0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v2 >= v14)
          {
LABEL_16:
            v17 = *(_QWORD *)(v3 + 48);
            v18 = v17 + 56 * v2;
            v19 = (__int128 *)(v17 + v13);
            if (56 * v2 < v13 || v18 >= (unint64_t)v19 + 56 || (v20 = v2 == v6, v2 = v6, !v20))
            {
              v10 = *v19;
              v11 = v19[1];
              v12 = v19[2];
              *(_QWORD *)(v18 + 48) = *((_QWORD *)v19 + 6);
              *(_OWORD *)(v18 + 16) = v11;
              *(_OWORD *)(v18 + 32) = v12;
              *(_OWORD *)v18 = v10;
              v2 = v6;
            }
          }
        }
        else if (v14 >= v9 || v2 >= v14)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v23;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_22DEC3A2C(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[56];

  sub_22DEC26C8(a1, (uint64_t)v4);
  sub_22DE8D88C();
  v2 = sub_22DEFA9B0();
  return sub_22DEC3A98(a1, v2);
}

unint64_t sub_22DEC3A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v9[56];

  v3 = v2;
  sub_22DEC26C8(a1, (uint64_t)v9);
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = ~v5;
    sub_22DEC9920();
    do
    {
      if ((sub_22DEFA9C8() & 1) != 0)
        break;
      v6 = (v6 + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_22DEC3B84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_22DEC3A2C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v11 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22DEC5FDC();
    v7 = v11;
  }
  v8 = *(_QWORD *)(v7 + 48) + 56 * v4;
  sub_22DE809FC(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_BYTE *)(v8 + 48));
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v4);
  sub_22DEC4E58(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_22DEC3C7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22DE83DDC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22DEC61E4();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_22DEC5064(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_22DEC3D60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_22DE83DDC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22DEC65CC();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_22DEA2EEC((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_22DEC5404(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_22DEC3E58(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  __int128 v47;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6EA8);
  v43 = a2;
  v6 = sub_22DEFAD4C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v39 = v3;
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    v42 = v5;
    while (1)
    {
      if (v10)
      {
        v44 = (v10 - 1) & v10;
        v45 = v13;
        v20 = __clz(__rbit64(v10)) | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v40)
          goto LABEL_33;
        v22 = v41[v21];
        v23 = v13 + 1;
        if (!v22)
        {
          v23 = v13 + 2;
          if (v13 + 2 >= v40)
            goto LABEL_33;
          v22 = v41[v23];
          if (!v22)
          {
            v24 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_33:
              swift_release();
              v3 = v39;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v41[v24];
            if (!v22)
            {
              while (1)
              {
                v23 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v23 >= v40)
                  goto LABEL_33;
                v22 = v41[v23];
                ++v24;
                if (v22)
                  goto LABEL_30;
              }
            }
            v23 = v13 + 3;
          }
        }
LABEL_30:
        v44 = (v22 - 1) & v22;
        v45 = v23;
        v20 = __clz(__rbit64(v22)) + (v23 << 6);
      }
      v29 = *(_QWORD *)(v5 + 48) + 56 * v20;
      v30 = *(_QWORD *)(v29 + 8);
      v31 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v29 + 24);
      v34 = *(_QWORD *)(v29 + 32);
      v33 = *(_QWORD *)(v29 + 40);
      v35 = *(_BYTE *)(v29 + 48);
      v36 = *(_QWORD *)(v5 + 56) + 24 * v20;
      v47 = *(_OWORD *)v36;
      v37 = *(_QWORD *)(v36 + 16);
      v46 = *(_QWORD *)v29;
      if ((v43 & 1) == 0)
      {
        sub_22DE80988(v46, v30, v31, v32, v34, v33, v35);
        swift_retain();
        swift_retain();
        swift_retain();
      }
      sub_22DE8D88C();
      result = sub_22DEFA9B0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = *(_QWORD *)(v7 + 48) + 56 * v17;
      *(_QWORD *)v18 = v46;
      *(_QWORD *)(v18 + 8) = v30;
      *(_QWORD *)(v18 + 16) = v31;
      *(_QWORD *)(v18 + 24) = v32;
      *(_QWORD *)(v18 + 32) = v34;
      *(_QWORD *)(v18 + 40) = v33;
      *(_BYTE *)(v18 + 48) = v35;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_OWORD *)v19 = v47;
      *(_QWORD *)(v19 + 16) = v37;
      ++*(_QWORD *)(v7 + 16);
      v5 = v42;
      v10 = v44;
      v13 = v45;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_22DEC4218(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D70);
  v6 = a2;
  v7 = sub_22DEFAD4C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_22DEFAED8();
      sub_22DEFAA04();
      result = sub_22DEFAEFC();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_22DEC4520(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D58);
  result = sub_22DEFAD4C();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_22DEFAECC();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_22DEC4854(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D28);
  v37 = a2;
  v6 = sub_22DEFAD4C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_22DEA2EEC(v25, (uint64_t)v38);
    }
    else
    {
      sub_22DE83EBC((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_22DEFAED8();
    sub_22DEFAA04();
    result = sub_22DEFAEFC();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_22DEA2EEC(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_22DEC4B78(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t *v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E20);
  result = sub_22DEFAD4C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v9;
    v31 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v31 >= 64)
                  bzero(v33, 8 * v32);
                else
                  *v33 = v30;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v34 = *(_OWORD *)v28;
      v29 = *(_QWORD *)(v28 + 16);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_retain();
        swift_retain();
      }
      result = sub_22DEFAECC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_OWORD *)v17 = v34;
      *(_QWORD *)(v17 + 16) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_22DEC4E58(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      sub_22DE8D88C();
      do
      {
        v10 = 56 * v6;
        result = sub_22DEFA9B0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 56 * v3;
            v16 = (__int128 *)(v14 + v10);
            if (56 * v3 < v10 || v15 >= (unint64_t)v16 + 56 || v3 != v6)
            {
              v17 = *v16;
              v18 = v16[1];
              v19 = v16[2];
              *(_QWORD *)(v15 + 48) = *((_QWORD *)v16 + 6);
              *(_OWORD *)(v15 + 16) = v18;
              *(_OWORD *)(v15 + 32) = v19;
              *(_OWORD *)v15 = v17;
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = v20 + 24 * v3;
            v22 = (__int128 *)(v20 + 24 * v6);
            if (v3 != v6 || (v3 = v6, v21 >= (unint64_t)v22 + 24))
            {
              v9 = *v22;
              *(_QWORD *)(v21 + 16) = *((_QWORD *)v22 + 2);
              *(_OWORD *)v21 = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEC5064(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22DEFAED8();
        swift_bridgeObjectRetain();
        sub_22DEFAA04();
        v9 = sub_22DEFAEFC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEC5238(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_22DEFAECC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEC5404(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22DEFAED8();
        swift_bridgeObjectRetain();
        sub_22DEFAA04();
        v11 = sub_22DEFAEFC();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22DEC55EC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22DEFAC68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = sub_22DEFAECC();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = v16 + 24 * v3;
            v18 = (__int128 *)(v16 + 24 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              v9 = *v18;
              *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
              *(_OWORD *)v17 = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_22DEC5794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_22DEC3A2C(a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 24 * v14);
        swift_release();
        swift_release();
        result = swift_release();
        *v21 = a1;
        v21[1] = a2;
        v21[2] = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_22DEC5FDC();
      goto LABEL_7;
    }
    sub_22DEC3E58(v17, a5 & 1);
    v23 = sub_22DEC3A2C(a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_22DEC5DF8(v14, a4, a1, a2, a3, v20);
      return sub_22DEC2704(a4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DE80988);
    }
  }
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEC58DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_22DE83DDC(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_22DEC61E4();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_release();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_22DEC4218(v17, a5 & 1);
  v23 = sub_22DE83DDC(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEC5A50(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_22DE9F9F8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_22DEC5E90(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22DEC63A4();
      goto LABEL_7;
    }
    sub_22DEC4520(v13, a3 & 1);
    v20 = sub_22DE9F9F8(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_22DEC5E90(v10, a2, a1, v16);
    }
  }
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEC5B78(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_22DE83DDC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_22DEA2EEC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_22DEC65CC();
      goto LABEL_7;
    }
    sub_22DEC4854(v15, a4 & 1);
    v21 = sub_22DE83DDC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_22DEC5F20(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEC5CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_22DE86764(a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 24 * v14);
        swift_release();
        swift_release();
        result = swift_release();
        *v21 = a1;
        v21[1] = a2;
        v21[2] = a3;
        return result;
      }
      return sub_22DEC5F8C(v14, a4, a1, a2, a3, v20);
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_22DEC67B4();
      goto LABEL_7;
    }
    sub_22DEC4B78(v17, a5 & 1);
    v23 = sub_22DE86764(a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_22DEC5F8C(v14, a4, a1, a2, a3, v20);
    }
  }
  result = sub_22DEFAE9C();
  __break(1u);
  return result;
}

uint64_t sub_22DEC5DF8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  result = sub_22DEC26C8(a2, a6[6] + 56 * a1);
  v12 = (_QWORD *)(a6[7] + 24 * a1);
  *v12 = a3;
  v12[1] = a4;
  v12[2] = a5;
  v13 = a6[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a6[2] = v15;
  return result;
}

uint64_t sub_22DEC5E90(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_22DEC5F20(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_22DEA2EEC(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_22DEC5F8C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a6[6] + 8 * result) = a2;
  v6 = (_QWORD *)(a6[7] + 24 * result);
  *v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

void *sub_22DEC5FDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unsigned __int8 v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6EA8);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      v9 = v31 + 1;
      if (v31 + 1 >= v13)
        goto LABEL_26;
      v32 = *(_QWORD *)(v6 + 8 * v9);
      if (!v32)
        break;
    }
LABEL_25:
    v12 = (v32 - 1) & v32;
    v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    v16 = 56 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 56 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_QWORD *)(v17 + 40);
    v24 = 24 * v15;
    v25 = *(_QWORD *)(v2 + 56) + v24;
    v26 = *(_QWORD *)(v25 + 16);
    v27 = *(_QWORD *)(v4 + 48) + v16;
    v28 = *(_OWORD *)v25;
    v29 = *(_BYTE *)(v17 + 48);
    *(_QWORD *)v27 = *(_QWORD *)v17;
    *(_QWORD *)(v27 + 8) = v19;
    *(_QWORD *)(v27 + 16) = v20;
    *(_QWORD *)(v27 + 24) = v21;
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)(v27 + 40) = v23;
    *(_BYTE *)(v27 + 48) = v29;
    v30 = *(_QWORD *)(v4 + 56) + v24;
    *(_OWORD *)v30 = v28;
    *(_QWORD *)(v30 + 16) = v26;
    sub_22DE80988(v18, v19, v20, v21, v22, v23, v29);
    swift_retain();
    swift_retain();
    result = (void *)swift_retain();
  }
  v33 = v31 + 2;
  if (v33 >= v13)
    goto LABEL_26;
  v32 = *(_QWORD *)(v6 + 8 * v33);
  if (v32)
  {
    v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v9);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22DEC61E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D70);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22DEC63A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC68F8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D58);
  v23 = v0;
  v5 = *v0;
  v6 = sub_22DEFAD40();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_22:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    v18 = *(_QWORD *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_23;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_22DEC65CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D28);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_22DE83EBC(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_22DEA2EEC(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22DEC67B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E20);
  v2 = *v0;
  v3 = sub_22DEFAD40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_OWORD *)v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v22 = v21;
    *(_QWORD *)(v22 + 16) = v20;
    swift_retain();
    swift_retain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22DEC6990(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_22DEC69F8;
  return v5(v2 + 32);
}

uint64_t sub_22DEC69F8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t _s5Nexus9NXSessionC13ConfigurationV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v4;

  if (*a1 != *a2 || *((_DWORD *)a1 + 1) != *((_DWORD *)a2 + 1))
    return 0;
  v4 = a2[12];
  if ((a1[12] & 1) != 0)
  {
    if (!a2[12])
      return 0;
  }
  else
  {
    if (*((_DWORD *)a1 + 2) != *((_DWORD *)a2 + 2))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  return a1[13] ^ a2[13] ^ 1u;
}

void _s5Nexus9NXSessionC5EventO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22DEC6B14()
{
  uint64_t v0;
  unsigned int v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  unint64_t v7;
  char v8;

  if ((v1 >> 2) & 4 | (v3 >> 62))
  {
    sub_22DEC3648(v3, v2, v0, v1);
    sub_22DEC3648(v7, v5, v4, v6);
    sub_22DEC36FC(v7, v5, v4, v6);
    sub_22DEC36FC(v3, v2, v0, v1);
    v8 = 0;
  }
  else
  {
    sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
    sub_22DEC3648(v3, v2, v0, v1);
    sub_22DEC3648(v7, v5, v4, v6);
    v8 = sub_22DEFAC08();
    sub_22DEC36FC(v7, v5, v4, v6);
    sub_22DEC36FC(v3, v2, v0, v1);
  }
  return v8 & 1;
}

uint64_t sub_22DEC6E58(uint64_t a1)
{
  uint64_t v1;

  return sub_22DEB948C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NXSessionConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXSessionConfiguration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DEC6F5C + 4 * byte_22DEFEDA2[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_22DEC6F90 + 4 * byte_22DEFED9D[v4]))();
}

uint64_t sub_22DEC6F90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_22DEC6F98(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x22DEC6FA0);
  return result;
}

uint64_t sub_22DEC6FAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x22DEC6FB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DEC6FB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_22DEC6FC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXSessionConfiguration()
{
  return &type metadata for NXSessionConfiguration;
}

uint64_t method lookup function for NXSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXSession.__allocating_init(configuration:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t destroy for NXConnection.Command(uint64_t a1)
{
  return sub_22DEC34B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Nexus12NXConnectionC7CommandOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEC34A8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NXConnection.Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEC34A8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_22DEC34B8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NXConnection.Command(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_22DEC34B8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXConnection.Command(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXConnection.Command(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXSession.Command()
{
  return &type metadata for NXSession.Command;
}

void destroy for NXSession.Event(uint64_t a1)
{
  sub_22DEC36FC(*(_QWORD *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t initializeWithCopy for NXSession.Event(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 24);
  sub_22DEC3648(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for NXSession.Event(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 24);
  sub_22DEC3648(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_22DEC36FC(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NXSession.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned int v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_22DEC36FC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXSession.Event(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 252);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x7F | (((*(unsigned __int8 *)(a1 + 24) >> 4) & 1u) << 7)) >> 5) | (8 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0xFF;
  if (v3 >= 0xFB)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NXSession.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      v3 = (-(char)a2 >> 3) & 0x1F | (32 * -(char)a2);
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_BYTE *)(result + 24) = (-4 * a2) & 0x10;
    }
  }
  return result;
}

uint64_t sub_22DEC7394(uint64_t a1)
{
  unsigned int v1;

  v1 = (*(unsigned __int8 *)(a1 + 24) >> 2) & 4 | (*(_QWORD *)a1 >> 62);
  if (v1 <= 3)
    return v1;
  else
    return (*(_QWORD *)a1 >> 3) + 4;
}

uint64_t sub_22DEC73C0(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 24) & 0xEF;
  *(_QWORD *)result &= 0x3FFFFFFFFFFFFFFFuLL;
  *(_BYTE *)(result + 24) = v1;
  return result;
}

uint64_t sub_22DEC73DC(uint64_t result, uint64_t a2)
{
  char v2;

  if (a2 < 4)
  {
    v2 = *(_BYTE *)(result + 24) & 0xEF;
    *(_QWORD *)result = *(_QWORD *)result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *(_BYTE *)(result + 24) = v2;
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = 8 * (a2 - 4);
    *(_BYTE *)(result + 24) = 16;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXSession.Event()
{
  return &type metadata for NXSession.Event;
}

_QWORD *__swift_memcpy14_4(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 6) = *(uint64_t *)((char *)a2 + 6);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for NXSession.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[14])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NXSession.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 14) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 14) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXSession.Configuration()
{
  return &type metadata for NXSession.Configuration;
}

uint64_t sub_22DEC74EC()
{
  return type metadata accessor for NXSession.RequestTransaction(0);
}

uint64_t type metadata accessor for NXSession.RequestTransaction(uint64_t a1)
{
  return sub_22DEC8090(a1, (uint64_t *)&unk_255DCECA0);
}

uint64_t sub_22DEC7508()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DEFA59C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void destroy for NXSession.RequestMessageRaw(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_22DEA2F04(*(_QWORD *)(a1 + 16), v2);

}

uint64_t initializeWithCopy for NXSession.RequestMessageRaw(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_22DEA5098(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  v8 = (void *)a2[4];
  *(_QWORD *)(a1 + 32) = v8;
  v9 = v8;
  return a1;
}

_QWORD *assignWithCopy for NXSession.RequestMessageRaw(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_22DEA5098(*v4, a2[3]);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_22DEA2F04(v8, v9);
      goto LABEL_8;
    }
    sub_22DEC7738((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_22DEA5098(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  v10 = (void *)a1[4];
  v11 = (void *)a2[4];
  a1[4] = v11;
  v12 = v11;

  return a1;
}

uint64_t sub_22DEC7738(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for NXSession.RequestMessageRaw(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_22DEA2F04(v8, v6);
      goto LABEL_6;
    }
    sub_22DEC7738((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  v9 = (void *)a1[4];
  a1[4] = a2[4];

  return a1;
}

uint64_t getEnumTagSinglePayload for NXSession.RequestMessageRaw(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NXSession.RequestMessageRaw(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXSession.RequestMessageRaw()
{
  return &type metadata for NXSession.RequestMessageRaw;
}

void type metadata accessor for PairingSetupCodeType(uint64_t a1)
{
  sub_22DEC78E0(a1, &qword_255DC6C08);
}

void type metadata accessor for CUTrafficFlags(uint64_t a1)
{
  sub_22DEC78E0(a1, qword_255DC6C10);
}

void sub_22DEC78E0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t destroy for NXSession.ConnectionInfo()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s5Nexus9NXSessionC14ConnectionInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NXSession.ConnectionInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NXSession.ConnectionInfo(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NXSession.ConnectionInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NXSession.ConnectionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXSession.ConnectionInfo()
{
  return &type metadata for NXSession.ConnectionInfo;
}

uint64_t *sub_22DEC7B10(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22DEFA59C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      sub_22DEA5098(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = (uint64_t)v16;
    v17 = *(void **)((char *)a2 + v15);
    v18 = v16;
    v19 = v17;
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v17;
  }
  return a1;
}

void sub_22DEC7BF0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;

  v4 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + a2[5]);
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_22DEA2F04(*v5, v6);

}

uint64_t sub_22DEC7C60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  v6 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_22DEA5098(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = *(void **)(a2 + v13);
  v16 = v14;
  v17 = v15;
  *(_QWORD *)(a1 + v13) = v15;
  return a1;
}

uint64_t sub_22DEC7D14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v6 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      v12 = *v9;
      sub_22DEA5098(v12, v10);
      v13 = *v8;
      v14 = v8[1];
      *v8 = v12;
      v8[1] = v10;
      sub_22DEA2F04(v13, v14);
      goto LABEL_8;
    }
    sub_22DEC7738((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v11 = *v9;
  sub_22DEA5098(v11, v10);
  *v8 = v11;
  v8[1] = v10;
LABEL_8:
  v15 = a3[6];
  v16 = *(void **)(a1 + v15);
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = v17;

  v19 = a3[7];
  v20 = *(void **)(a1 + v19);
  v21 = *(void **)(a2 + v19);
  v22 = v21;
  *(_QWORD *)(a1 + v19) = v21;

  return a1;
}

uint64_t sub_22DEC7E24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_22DEC7E94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;

  v6 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      v12 = *v8;
      *v8 = *v9;
      v8[1] = v11;
      sub_22DEA2F04(v12, v10);
      goto LABEL_6;
    }
    sub_22DEC7738((uint64_t)v8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
LABEL_6:
  v13 = a3[6];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  v15 = a3[7];
  v16 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);

  return a1;
}

uint64_t sub_22DEC7F64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DEC7F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_22DEFA59C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_22DEC7FF8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DEC8004(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22DEFA59C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for NXSession.ResponseSendItem(uint64_t a1)
{
  return sub_22DEC8090(a1, qword_255DCECB0);
}

uint64_t sub_22DEC8090(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DEC80C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DEFA59C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for NXSession.ResponseMessageRaw(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >> 60 != 15)
    sub_22DEA2F04(*(_QWORD *)a1, v2);

}

uint64_t initializeWithCopy for NXSession.ResponseMessageRaw(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_22DEA5098(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = (void *)a2[2];
  v7 = (void *)a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  v8 = v6;
  v9 = v7;
  *(_QWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t *assignWithCopy for NXSession.ResponseMessageRaw(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *a2;
      sub_22DEA5098(*a2, a2[1]);
      v7 = *a1;
      v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_22DEA2F04(v7, v8);
      goto LABEL_8;
    }
    sub_22DEC7738((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v5 = *a2;
  sub_22DEA5098(*a2, a2[1]);
  *a1 = v5;
  a1[1] = v4;
LABEL_8:
  v9 = (void *)a1[2];
  v10 = (void *)a2[2];
  a1[2] = (uint64_t)v10;
  v11 = v10;

  v12 = (void *)a1[3];
  v13 = (void *)a2[3];
  v14 = v13;
  a1[3] = (uint64_t)v13;

  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t *assignWithTake for NXSession.ResponseMessageRaw(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_22DEA2F04(v6, v4);
      goto LABEL_6;
    }
    sub_22DEC7738((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = (void *)a1[3];
  a1[3] = a2[3];

  return a1;
}

uint64_t getEnumTagSinglePayload for NXSession.ResponseMessageRaw(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXSession.ResponseMessageRaw(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXSession.ResponseMessageRaw()
{
  return &type metadata for NXSession.ResponseMessageRaw;
}

ValueMetadata *type metadata accessor for NXSession.Command.CodingKeys()
{
  return &type metadata for NXSession.Command.CodingKeys;
}

uint64_t _s5Nexus9NXSessionC7CommandO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22DEC846C + 4 * byte_22DEFEDA7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22DEC848C + 4 * byte_22DEFEDAC[v4]))();
}

_BYTE *sub_22DEC846C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22DEC848C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEC8494(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEC849C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEC84A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEC84AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NXSession.Command.ConnectionCodingKeys()
{
  return &type metadata for NXSession.Command.ConnectionCodingKeys;
}

unint64_t sub_22DEC84CC()
{
  unint64_t result;

  result = qword_255DCEDC0[0];
  if (!qword_255DCEDC0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF248, &type metadata for NXSession.Command.ConnectionCodingKeys);
    atomic_store(result, qword_255DCEDC0);
  }
  return result;
}

unint64_t sub_22DEC8514()
{
  unint64_t result;

  result = qword_255DCEFD0[0];
  if (!qword_255DCEFD0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF300, &type metadata for NXSession.Command.CodingKeys);
    atomic_store(result, qword_255DCEFD0);
  }
  return result;
}

uint64_t sub_22DEC8558()
{
  return sub_22DEC37B0(&qword_255DC6CA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CUTrafficFlags, (uint64_t)&unk_22DF01580);
}

uint64_t sub_22DEC8588()
{
  return sub_22DEC37B0(&qword_255DC6CA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CUTrafficFlags, (uint64_t)&unk_22DF01550);
}

uint64_t sub_22DEC85B8()
{
  return sub_22DEC37B0(&qword_255DC6CB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CUTrafficFlags, (uint64_t)&unk_22DEFF330);
}

uint64_t sub_22DEC85E8()
{
  return sub_22DEC37B0(&qword_255DC6CB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CUTrafficFlags, (uint64_t)&unk_22DF015B0);
}

unint64_t sub_22DEC861C()
{
  unint64_t result;

  result = qword_255DCF2E0;
  if (!qword_255DCF2E0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF1B8, &type metadata for NXSession.Command.ConnectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCF2E0);
  }
  return result;
}

unint64_t sub_22DEC8664()
{
  unint64_t result;

  result = qword_255DCF2E8[0];
  if (!qword_255DCF2E8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF1E0, &type metadata for NXSession.Command.ConnectionCodingKeys);
    atomic_store(result, qword_255DCF2E8);
  }
  return result;
}

unint64_t sub_22DEC86AC()
{
  unint64_t result;

  result = qword_255DCF370;
  if (!qword_255DCF370)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF270, &type metadata for NXSession.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCF370);
  }
  return result;
}

unint64_t sub_22DEC86F4()
{
  unint64_t result;

  result = qword_255DCF378;
  if (!qword_255DCF378)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF298, &type metadata for NXSession.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCF378);
  }
  return result;
}

uint64_t sub_22DEC8738(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x697463656E6E6F63 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22DEC87C4()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_22DEC87E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for NXSession.ResponseSendItem(0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_22DEFAD64();
  __break(1u);
  return result;
}

uint64_t sub_22DEC88F8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_22DEC8930()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6CC0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DEC8994(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  id v8;
  id v10;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6CC0);
  if (a4)
  {
    v8 = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6CC0);
    return sub_22DEFAA94();
  }
  else
  {
    sub_22DEA5084(a1, a2);
    v10 = a3;
    v11 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6CC0);
    return sub_22DEFAAA0();
  }
}

_QWORD *sub_22DEC8A58(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;
  id v5;

  v2 = a1[2];
  v3 = a1[3];
  v4 = (void *)a1[4];
  swift_bridgeObjectRetain();
  sub_22DEA5084(v2, v3);
  v5 = v4;
  return a1;
}

_QWORD *sub_22DEC8AA0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = (void *)a1[4];
  swift_bridgeObjectRelease();
  sub_22DEA326C(v2, v3);

  return a1;
}

uint64_t sub_22DEC8AE8()
{
  return objectdestroy_27Tm();
}

uint64_t sub_22DEC8AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22DECA82C;
  return sub_22DEB9594((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_22DEC8B3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22DECA82C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255DC6CD8 + dword_255DC6CD8))(a1, v4);
}

uint64_t sub_22DEC8BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NXSession.ResponseSendItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DEC8BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NXSession.ResponseSendItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DEC8C2C()
{
  return objectdestroy_27Tm();
}

uint64_t objectdestroy_27Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEC8C6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22DECA82C;
  v6[6] = v5;
  v6[7] = v4;
  v6[5] = a1;
  return swift_task_switch();
}

uint64_t sub_22DEC8CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22DECA82C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255DC6D40 + dword_255DC6D40))(a1, v4);
}

uint64_t sub_22DEC8D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22DEAF808(a1, a2, a4, a5);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_22DEC8D74(uint64_t a1, uint64_t a2)
{
  return sub_22DEAFD58(a1, a2);
}

uint64_t sub_22DEC8D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_22DEAFE58(a1, a2, a4, a5, a6);
}

uint64_t sub_22DEC8D90()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_22DEC8DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_22DEB0038(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_22DEC8DBC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14[2];
  __int128 v15;
  void *v16;

  v1 = v0[3];
  v13 = v0[2];
  v2 = v0[5];
  v3 = v0[6];
  v4 = (void *)sub_22DEFA95C();
  if (qword_255DCE6B0 != -1)
    swift_once();
  v5 = sub_22DEFA674();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DCE6B8);
  swift_bridgeObjectRetain_n();
  v6 = sub_22DEFA65C();
  v7 = sub_22DEFABA8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14[0] = v9;
    *(_DWORD *)v8 = 136446210;
    swift_bridgeObjectRetain();
    sub_22DE8C348(v13, v1, v14);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DE7A000, v6, v7, "CUMessageSession send: id=%{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v9, -1, -1);
    MEMORY[0x22E321E0C](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_255DCE6D0 != -1)
    swift_once();
  v10 = 779316575;
  if (!byte_255DCE6D8)
    v10 = 0;
  v14[0] = v10;
  v14[1] = qword_255DCE6E0;
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  v15 = xmmword_22DEFF4B0;
  v16 = v4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v13;
  *(_QWORD *)(v11 + 24) = v1;
  *(_QWORD *)(v11 + 32) = v2;
  *(_QWORD *)(v11 + 40) = v3;
  swift_bridgeObjectRetain();
  v12 = v4;
  swift_retain();
  sub_22DEB1500((uint64_t)v14, (uint64_t)sub_22DEC933C, (char *)v11);
  swift_bridgeObjectRelease();
  swift_release();
  sub_22DEA326C(0, 0xF000000000000000);

}

uint64_t sub_22DEC92E0()
{
  return swift_deallocObject();
}

uint64_t sub_22DEC92F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_22DEC9310()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_22DEC933C(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_22DEB0FB4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

unint64_t sub_22DEC9348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DC6D60;
  if (!qword_255DC6D60)
  {
    v1 = sub_22DEC9F48(255, (unint64_t *)&qword_255DC6038);
    result = MEMORY[0x22E321D70](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_255DC6D60);
  }
  return result;
}

uint64_t sub_22DEC93A0()
{
  return swift_release();
}

uint64_t sub_22DEC93A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  if (qword_255DCE6B0 != -1)
    swift_once();
  v3 = sub_22DEFA674();
  __swift_project_value_buffer(v3, (uint64_t)qword_255DCE6B8);
  swift_bridgeObjectRetain_n();
  v4 = sub_22DEFA65C();
  v5 = sub_22DEFABA8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_bridgeObjectRetain();
    v15 = sub_22DE8C348(v1, v2, &v13);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DE7A000, v4, v5, "CUMessageSession deregister: id=%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v7, -1, -1);
    MEMORY[0x22E321E0C](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_255DCE6D0 != -1)
    swift_once();
  v8 = 779316575;
  if (!byte_255DCE6D8)
    v8 = 0;
  v13 = v8;
  v14 = qword_255DCE6E0;
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  v9 = v13;
  v10 = v14;
  swift_beginAccess();
  v11 = sub_22DEC3C7C(v9, v10);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_22DE87604(v11);
}

uint64_t sub_22DEC9610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22DEAFB94(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_22DEC9618(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v1[3];
  v19 = v1[2];
  v5 = v1[4];
  v4 = v1[5];
  if (qword_255DCE6B0 != -1)
    swift_once();
  v6 = sub_22DEFA674();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DCE6B8);
  swift_bridgeObjectRetain_n();
  v7 = sub_22DEFA65C();
  v8 = sub_22DEFABA8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v18 = v5;
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    v22 = sub_22DE8C348(v19, v3, &v20);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DE7A000, v7, v8, "CUMessageSession register: id=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    v11 = v10;
    v5 = v18;
    MEMORY[0x22E321E0C](v11, -1, -1);
    MEMORY[0x22E321E0C](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_255DCE6D0 != -1)
    swift_once();
  v12 = 779316575;
  if (!byte_255DCE6D8)
    v12 = 0;
  v20 = v12;
  v21 = qword_255DCE6E0;
  swift_bridgeObjectRetain();
  sub_22DEFAA10();
  v13 = v20;
  v14 = v21;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v5;
  *(_QWORD *)(v15 + 24) = v4;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0x8000000000000000;
  sub_22DEC58DC((uint64_t)sub_22DEC98DC, v15, v13, v14, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 88) = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_22DEC98DC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_22DEB00F8(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), uint64_t))(v3 + 16));
}

uint64_t sub_22DEC98E4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(int *, uint64_t *, uint64_t *);
  uint64_t v6;
  uint64_t v7;
  int v8;

  v4 = *(uint64_t (**)(int *, uint64_t *, uint64_t *))(v3 + 16);
  v8 = a1;
  v6 = a3;
  v7 = a2;
  return v4(&v8, &v7, &v6);
}

unint64_t sub_22DEC9920()
{
  unint64_t result;

  result = qword_255DC6D78;
  if (!qword_255DC6D78)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXEndpoint, &type metadata for NXEndpoint);
    atomic_store(result, (unint64_t *)&qword_255DC6D78);
  }
  return result;
}

uint64_t sub_22DEC9964()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DEC998C(void *a1)
{
  uint64_t v1;

  return sub_22DEBC6C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_22DEC9994()
{
  return objectdestroy_98Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_22DEC99A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_22DECA82C;
  *(_QWORD *)(v5 + 128) = v4;
  *(_OWORD *)(v5 + 112) = v6;
  *(_QWORD *)(v5 + 104) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEC9A1C(uint64_t a1)
{
  return sub_22DEBEC08(a1);
}

uint64_t objectdestroy_90Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEC9A54(uint64_t a1)
{
  return sub_22DEBF810(a1);
}

uint64_t sub_22DEC9A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22DEFA764();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DEC9AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA764() - 8) + 80);
  v3 = v0 + ((v2 + 48) & ~v2);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_22DECA82C;
  *(_QWORD *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 64) = v5;
  return swift_task_switch();
}

uint64_t sub_22DEC9B60()
{
  return objectdestroy_98Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_98Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  a1(*(_QWORD *)(v1 + 48));
  return swift_deallocObject();
}

uint64_t sub_22DEC9BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_22DECA82C;
  *(_QWORD *)(v3 + 80) = v2;
  *(_OWORD *)(v3 + 64) = v4;
  return swift_task_switch();
}

uint64_t sub_22DEC9C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22DEC9CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(_QWORD *)(v0 + v5);
  v8 = v0 + v3;
  v9 = (uint64_t *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v12;
  *v12 = v1;
  v12[1] = sub_22DECA82C;
  return sub_22DEC0780((uint64_t)v12, v13, v14, v8, v6, v7, v10, v11);
}

uint64_t sub_22DEC9D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_22DECA82C;
  return sub_22DEC10BC((uint64_t)v8, v9, v10, v5, v6, v7);
}

uint64_t sub_22DEC9E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22DEFA59C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DEC9EBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA59C() - 8) + 80);
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[7];
  v7 = (uint64_t)v0 + ((v2 + 64) & ~v2);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_22DEC23C8;
  return sub_22DEB6800((uint64_t)v8, v9, v10, v3, v4, v5, v6, v7);
}

uint64_t sub_22DEC9F48(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x22E321E0CLL);
  return result;
}

uint64_t sub_22DEC9FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NXSession.ResponseSendItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DEC9FF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DECA01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22DEB0930(a1, a2, a3, a4, *(void (**)(uint64_t *, uint64_t *, _QWORD *))(v4 + 16));
}

uint64_t sub_22DECA024(uint64_t a1)
{
  uint64_t v1;

  return sub_22DEB09B8(a1, *(void (**)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_22DECA034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E60);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DECA0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E60);
  v6 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (a3)
  {
    if (qword_255DCE6B0 != -1)
      swift_once();
    v7 = sub_22DEFA674();
    __swift_project_value_buffer(v7, (uint64_t)qword_255DCE6B8);
    swift_bridgeObjectRetain_n();
    v8 = sub_22DEFA65C();
    v9 = sub_22DEFABA8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v19 = v11;
      *(_DWORD *)v10 = 136446210;
      swift_bridgeObjectRetain();
      sub_22DE8C348(v6, v5, &v19);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22DE7A000, v8, v9, "CUMessageSession response: id=%{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v11, -1, -1);
      MEMORY[0x22E321E0C](v10, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v19 = sub_22DEFA95C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E60);
    return sub_22DEFAAA0();
  }
  else
  {
    if (qword_255DCE6B0 != -1)
      swift_once();
    v12 = sub_22DEFA674();
    __swift_project_value_buffer(v12, (uint64_t)qword_255DCE6B8);
    swift_bridgeObjectRetain_n();
    v13 = sub_22DEFA65C();
    v14 = sub_22DEFAB9C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v19 = v16;
      *(_DWORD *)v15 = 136446466;
      swift_bridgeObjectRetain();
      sub_22DE8C348(v6, v5, &v19);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 1024;
      sub_22DEFAC2C();
      _os_log_impl(&dword_22DE7A000, v13, v14, "### CUMessageSession request failed: id=%{public}s, errorCode=%d", (uint8_t *)v15, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v16, -1, -1);
      MEMORY[0x22E321E0C](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_22DEFA9E0();
    v18 = objc_allocWithZone((Class)sub_22DEFA62C());
    v19 = sub_22DEFA614();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6E60);
    return sub_22DEFAA94();
  }
}

uint64_t sub_22DECA4AC(unsigned int *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v3 + 16))(*a1, *a2, *a3);
}

uint64_t sub_22DECA4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22DECA520(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xEFu)
    sub_22DEC377C(a1, a2, a3);
}

uint64_t sub_22DECA534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  sub_22DE809FC(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_QWORD *)(v0 + v4 + 16), *(_QWORD *)(v0 + v4 + 24), *(_QWORD *)(v0 + v4 + 32), *(_QWORD *)(v0 + v4 + 40), *(_BYTE *)(v0 + v4 + 48));
  return swift_deallocObject();
}

uint64_t sub_22DECA600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = v0 + v3;
  v8 = *(_QWORD *)(v0 + v5);
  v9 = v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_22DECA82C;
  return sub_22DEBD4F8((uint64_t)v10, v11, v12, v7, v6, v8, v9);
}

uint64_t objectdestroy_139Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DECA750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DC6DF0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_22DECA82C;
  return sub_22DEBDE84((uint64_t)v8, v9, v10, v5, v6, v7);
}

uint64_t sub_22DECA7E8(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t static NXOperationParameters.restartable.getter()
{
  return 0;
}

uint64_t sub_22DECA888()
{
  return static NXOperationParameters.decode(data:context:)();
}

uint64_t static NXOperationParameters.decode(data:context:)()
{
  return sub_22DECA8EC();
}

uint64_t sub_22DECA8B0()
{
  return NXOperationParameters.encode(context:)();
}

uint64_t NXOperationParameters.encode(context:)()
{
  return sub_22DECA998();
}

uint64_t static NXOperationEventMessage.decode(data:context:)()
{
  return sub_22DECA8EC();
}

uint64_t sub_22DECA8EC()
{
  sub_22DEFA4A0();
  swift_allocObject();
  sub_22DEFA494();
  sub_22DEFA488();
  return swift_release();
}

uint64_t NXOperationEventMessage.encode(context:)()
{
  return sub_22DECA998();
}

uint64_t sub_22DECA998()
{
  uint64_t v0;

  sub_22DEFA4C4();
  swift_allocObject();
  sub_22DEFA4B8();
  v0 = sub_22DEFA4AC();
  swift_release();
  return v0;
}

uint64_t sub_22DECAA24()
{
  return static NXOperationHandler.operationName.getter();
}

uint64_t static NXOperationHandler.operationName.getter()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
}

double sub_22DECAAB4@<D0>(uint64_t a1@<X8>)
{
  return NXOperationHandler.operationHandlerContext.getter(a1);
}

double NXOperationHandler.operationHandlerContext.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_22DECAAD8(uint64_t a1)
{
  return sub_22DE8731C(a1, &qword_255DC6EC0);
}

uint64_t NXOperationHandler.operationHandlerContext.setter(uint64_t a1)
{
  return sub_22DE8731C(a1, &qword_255DC6EC0);
}

uint64_t (*sub_22DECAB10(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = NXOperationHandler.operationHandlerContext.modify(v2);
  return sub_22DECAB4C;
}

void (*NXOperationHandler.operationHandlerContext.modify(_QWORD *a1))(uint64_t *a1)
{
  _OWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  *v2 = 0u;
  v2[1] = 0u;
  *((_QWORD *)v2 + 4) = 0;
  return sub_22DECAB90;
}

void sub_22DECAB90(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_22DE8731C(*a1, &qword_255DC6EC0);
  free(v1);
}

uint64_t sub_22DECABC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v14;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *v14 = v7;
  v14[1] = sub_22DEC23C8;
  v14[7] = a4;
  v14[8] = v6;
  v14[5] = a3;
  v14[6] = a6;
  v14[3] = a2;
  v14[4] = a5;
  v14[2] = a1;
  return swift_task_switch();
}

uint64_t NXOperationHandler.sendRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22DECAC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  __int128 v7;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  v4 = *(_OWORD *)(v0 + 56);
  v7 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 56) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  swift_getAssociatedTypeWitness();
  *v5 = v0;
  v5[1] = sub_22DECAD64;
  return sub_22DEFAE78();
}

uint64_t sub_22DECAD64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22DECADD8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DECAE0C(uint64_t a1, void (*a2)(id *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return NXOperationHandler.sendRequest<A>(_:responseHandler:)(a1, a2, a3, a6, a4, a7, a5);
}

uint64_t NXOperationHandler.sendRequest<A>(_:responseHandler:)(uint64_t a1, void (*a2)(id *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void (*v15)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(void *, unint64_t, char), _QWORD *);
  void (*v20)(id *);
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(id *);
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[56];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;

  v34 = a2;
  v32 = a1;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v12 = sub_22DEFAF08();
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (id *)((char *)&v30 - v13);
  v15 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a6 + 88);
  v30 = a4;
  v15(&v44, a4, a6);
  if (*((_QWORD *)&v45 + 1))
  {
    v31 = a3;
    sub_22DEA2EEC(&v44, (uint64_t)v52);
    v16 = v53;
    v17 = v54;
    __swift_project_boxed_opaque_existential_1(v52, v53);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    if (v18)
    {
      v19 = (void (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(void *, unint64_t, char), _QWORD *))v18;
      v36 = 0u;
      v37 = 0u;
      v35 = 0u;
      LOBYTE(v38) = -1;
      memset(v43, 0, 48);
      v43[48] = -1;
      NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v35, (uint64_t)v43, 0, 0, (uint64_t)&v44);
      v39 = v48;
      v40 = v49;
      v41 = v50;
      v42 = v51;
      v35 = v44;
      v36 = v45;
      v37 = v46;
      v38 = v47;
      v22 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(a7 + 72))(&v35, a5, a7);
      v33 = v23;
      sub_22DE80B6C((uint64_t)&v44);
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 56))(a5, a7);
      v26 = v25;
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = v30;
      v27[3] = a5;
      v27[4] = a6;
      v27[5] = a7;
      v27[6] = v34;
      v27[7] = v31;
      swift_retain();
      v28 = v33;
      v19(v24, v26, v22, v33, sub_22DECCE9C, v27);
      swift_bridgeObjectRelease();
      swift_release();
      sub_22DE87604((uint64_t)v19);
      sub_22DEA2F04(v22, v28);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  }
  else
  {
    sub_22DE8731C((uint64_t)&v44, &qword_255DC6EC0);
  }
  v21 = v33;
  v20 = v34;
  type metadata accessor for NXError();
  LOBYTE(v44) = 6;
  *v14 = NXError.__allocating_init(_:_:_:)((uint64_t)&v44, 0xD000000000000018, 0x800000022DF03350, 0);
  swift_storeEnumTagMultiPayload();
  v20(v14);
  return (*(uint64_t (**)(id *, uint64_t))(v21 + 8))(v14, v12);
}

uint64_t sub_22DECB1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return NXOperationHandler.start(parameterData:completionHandler:)(a1, a2, a3, a4, a5, a6);
}

uint64_t NXOperationHandler.start(parameterData:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[56];
  _OWORD v29[8];
  uint64_t v30;

  v19 = a4;
  v18 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v17 - v12;
  v21 = 0u;
  v22 = 0u;
  v20 = 0u;
  LOBYTE(v23) = -1;
  memset(v28, 0, 48);
  v28[48] = -1;
  NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v20, (uint64_t)v28, 0, 0, (uint64_t)v29);
  v24 = v29[4];
  v25 = v29[5];
  v26 = v29[6];
  v27 = v29[7];
  v20 = v29[0];
  v21 = v29[1];
  v22 = v29[2];
  v23 = v29[3];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = v30;
  (*(void (**)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(a1, a2, &v20, AssociatedTypeWitness, AssociatedConformanceWitness);
  result = sub_22DE80B6C((uint64_t)v29);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40))(v13, v18, v19, a5, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_22DECB36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return NXOperationHandler.update(parameterData:completionHandler:)(a1, a2, a3, a4, a5, a6);
}

uint64_t NXOperationHandler.update(parameterData:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[56];
  _OWORD v29[8];
  uint64_t v30;

  v19 = a4;
  v18 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v17 - v12;
  v21 = 0u;
  v22 = 0u;
  v20 = 0u;
  LOBYTE(v23) = -1;
  memset(v28, 0, 48);
  v28[48] = -1;
  NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v20, (uint64_t)v28, 0, 0, (uint64_t)v29);
  v24 = v29[4];
  v25 = v29[5];
  v26 = v29[6];
  v27 = v29[7];
  v20 = v29[0];
  v21 = v29[1];
  v22 = v29[2];
  v23 = v29[3];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = v30;
  (*(void (**)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(a1, a2, &v20, AssociatedTypeWitness, AssociatedConformanceWitness);
  result = sub_22DE80B6C((uint64_t)v29);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 48))(v13, v18, v19, a5, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  }
  return result;
}

void (*NXOperationHandler.reportEvent(_:)(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *)
{
  uint64_t v3;
  char v4;
  void (*result)(uint64_t *);
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = (void (*)(uint64_t *))(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  if (result)
  {
    v6 = (uint64_t)result;
    v7 = v3;
    v8 = v4;
    result(&v7);
    return (void (*)(uint64_t *))sub_22DE87604(v6);
  }
  return result;
}

uint64_t NXOperationHandler.reportProviderEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void (*v4)(uint64_t, unint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v6)(__int128 *, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[64];
  _OWORD v20[9];

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 112))(a2, a3);
  if (result)
  {
    v4 = (void (*)(uint64_t, unint64_t))result;
    v12 = 0u;
    v13 = 0u;
    v11 = 0u;
    LOBYTE(v14) = -1;
    memset(v19, 0, 48);
    v19[48] = -1;
    NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v11, (uint64_t)v19, 0, 0, (uint64_t)v20);
    v15 = v20[4];
    v16 = v20[5];
    v17 = v20[6];
    v18 = v20[7];
    v11 = v20[0];
    v12 = v20[1];
    v13 = v20[2];
    v14 = v20[3];
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v6 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
    v7 = swift_checkMetadataState();
    v8 = v6(&v11, v7, AssociatedConformanceWitness);
    v10 = v9;
    sub_22DE80B6C((uint64_t)v20);
    v4(v8, v10);
    sub_22DE87604((uint64_t)v4);
    return sub_22DEA2F04(v8, v10);
  }
  return result;
}

uint64_t sub_22DECB7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  _QWORD v19[2];

  v19[0] = a3;
  v19[1] = a2;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v12 = sub_22DEFAAAC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v19 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v19 - v14, a1, v12);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a4;
  *((_QWORD *)v17 + 3) = a5;
  *((_QWORD *)v17 + 4) = a6;
  *((_QWORD *)v17 + 5) = a7;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], v15, v12);
  (*(void (**)(_QWORD, uint64_t (*)(uint64_t), char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 144))(v19[0], sub_22DECD8FC, v17, a5, a7, a4, a6);
  return swift_release();
}

uint64_t sub_22DECB934(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22DEFAF08();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_22DEFAA94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_22DEFAAA0();
  }
}

uint64_t sub_22DECBA94(void *a1, unint64_t a2, char a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  unint64_t v19;
  uint64_t AssociatedConformanceWitness;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[64];
  _OWORD v42[9];

  v31 = a2;
  v32 = a1;
  v30 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v10 = sub_22DEFAF08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v26 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v26 - v16;
  if ((a3 & 1) != 0)
  {
    v22 = v32;
    *v14 = v32;
    swift_storeEnumTagMultiPayload();
    v23 = v22;
    a4(v14);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    v26 = v15;
    v27 = v11;
    v28 = v10;
    v29 = a5;
    v34 = 0u;
    v35 = 0u;
    v33 = 0u;
    LOBYTE(v36) = -1;
    memset(v41, 0, 48);
    v41[48] = -1;
    v19 = v31;
    v18 = v32;
    sub_22DEA5098((uint64_t)v32, v31);
    NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v33, (uint64_t)v41, 0, 0, (uint64_t)v42);
    v37 = v42[4];
    v38 = v42[5];
    v39 = v42[6];
    v40 = v42[7];
    v33 = v42[0];
    v34 = v42[1];
    v35 = v42[2];
    v36 = v42[3];
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(id, unint64_t, __int128 *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v18, v19, &v33, AssociatedTypeWitness, AssociatedConformanceWitness);
    sub_22DE80B6C((uint64_t)v42);
    v24 = v26;
    (*(void (**)(_QWORD *, char *, uint64_t))(v26 + 16))(v14, v17, AssociatedTypeWitness);
    v25 = v28;
    swift_storeEnumTagMultiPayload();
    a4(v14);
    sub_22DEA574C(v32, v31, 0);
    (*(void (**)(_QWORD *, uint64_t))(v27 + 8))(v14, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, AssociatedTypeWitness);
  }
}

uint64_t NXAsyncOperationHandler.start(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22DECBF04(a1, a2, a3, a4, a5, (uint64_t)&unk_24F9A81C0, (uint64_t)&unk_255DC6ED8);
}

uint64_t sub_22DECBD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v8[2] = a6;
  v8[3] = a7;
  v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v14 + 16) + *(_QWORD *)(v14 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  v8[4] = v11;
  *v11 = v8;
  v11[1] = sub_22DECBDF0;
  return v13(a5, a8);
}

uint64_t sub_22DECBDF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DECBE54()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DECBE88()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);
  id v3;

  v1 = *(void **)(v0 + 40);
  v2 = *(void (**)(void *))(v0 + 16);
  v3 = v1;
  v2(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t NXAsyncOperationHandler.update(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22DECBF04(a1, a2, a3, a4, a5, (uint64_t)&unk_24F9A81E8, (uint64_t)&unk_255DC6EE8);
}

uint64_t sub_22DECBF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a3;
  v27 = a7;
  v24[1] = a6;
  v25 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)v24 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, AssociatedTypeWitness);
  v19 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  *((_QWORD *)v20 + 4) = a4;
  *((_QWORD *)v20 + 5) = a5;
  *((_QWORD *)v20 + 6) = v24[2];
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v20[v19], v14, AssociatedTypeWitness);
  v21 = &v20[(v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8];
  v22 = v26;
  *(_QWORD *)v21 = v25;
  *((_QWORD *)v21 + 1) = v22;
  swift_unknownObjectRetain();
  swift_retain();
  sub_22DEB34C8((uint64_t)v17, v27, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_22DECC0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v8[2] = a6;
  v8[3] = a7;
  v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v14 + 24) + *(_QWORD *)(v14 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  v8[4] = v11;
  *v11 = v8;
  v11[1] = sub_22DECC124;
  return v13(a5, a8);
}

uint64_t sub_22DECC124()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t NXAsyncOperationHandler.cancel(completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = v4;
  v13[7] = a1;
  v13[8] = a2;
  swift_unknownObjectRetain();
  swift_retain();
  sub_22DEB34C8((uint64_t)v11, (uint64_t)&unk_255DC6EF8, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_22DECC278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  v8[2] = a5;
  v8[3] = a6;
  v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a8 + 32) + *(_QWORD *)(a8 + 32));
  v11 = (_QWORD *)swift_task_alloc();
  v8[4] = v11;
  *v11 = v8;
  v11[1] = sub_22DECC124;
  return v13(a7, a8);
}

uint64_t sub_22DECC2EC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DE90090;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DE875A4(v4);
}

uint64_t sub_22DECC374(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DE90090;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_22DE875A4(v3);
  return sub_22DE87604(v8);
}

uint64_t NXIndirectOperationHandler.eventHandler.getter()
{
  uint64_t v0;

  v0 = sub_22DECD214();
  sub_22DE875A4(v0);
  return v0;
}

uint64_t NXIndirectOperationHandler.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_22DE87604(v5);
}

uint64_t (*NXIndirectOperationHandler.eventHandler.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t NXIndirectOperationHandler.operationHandlerContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_22DECD244(v1 + 32, a1);
}

uint64_t NXIndirectOperationHandler.operationHandlerContext.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  sub_22DECD28C(a1, v1 + 32);
  return swift_endAccess();
}

uint64_t (*NXIndirectOperationHandler.operationHandlerContext.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22DECC5B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD *)(v3 + 80);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DECD834;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22DE875A4(v4);
}

uint64_t sub_22DECC638(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DECD804;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v7 + 72) = v6;
  *(_QWORD *)(v7 + 80) = v5;
  sub_22DE875A4(v3);
  return sub_22DE87604(v8);
}

uint64_t NXIndirectOperationHandler.providerEventDataHandler.getter()
{
  uint64_t v0;

  v0 = sub_22DECD2D4();
  sub_22DE875A4(v0);
  return v0;
}

uint64_t NXIndirectOperationHandler.providerEventDataHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return sub_22DE87604(v5);
}

uint64_t (*NXIndirectOperationHandler.providerEventDataHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t NXIndirectOperationHandler.operationUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_255DD46D0;
  v4 = sub_22DEFA59C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NXIndirectOperationHandler.__allocating_init(operationUUID:startHandler:updateHandler:cancelHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_OWORD *)(v14 + 48) = 0u;
  *(_OWORD *)(v14 + 64) = 0u;
  *(_QWORD *)(v14 + 80) = 0;
  v15 = v14 + qword_255DD46D0;
  v16 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a1, v16);
  v17 = (_QWORD *)(v14 + qword_255DCF400);
  *v17 = a2;
  v17[1] = a3;
  v18 = (_QWORD *)(v14 + qword_255DCF408);
  *v18 = a4;
  v18[1] = a5;
  v19 = (_QWORD *)(v14 + qword_255DCF410);
  *v19 = a6;
  v19[1] = a7;
  return v14;
}

uint64_t NXIndirectOperationHandler.init(operationUUID:startHandler:updateHandler:cancelHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  *(_QWORD *)(v7 + 80) = 0;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  v15 = v7 + qword_255DD46D0;
  v16 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a1, v16);
  v17 = (_QWORD *)(v7 + qword_255DCF400);
  *v17 = a2;
  v17[1] = a3;
  v18 = (_QWORD *)(v7 + qword_255DCF408);
  *v18 = a4;
  v18[1] = a5;
  v19 = (_QWORD *)(v7 + qword_255DCF410);
  *v19 = a6;
  v19[1] = a7;
  return v7;
}

uint64_t NXIndirectOperationHandler.start(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DECC9B8(a1, a2, a3, &qword_255DCF400);
}

uint64_t NXIndirectOperationHandler.update(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DECC9B8(a1, a2, a3, &qword_255DCF408);
}

uint64_t sub_22DECC9B8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + *a4);
  swift_retain();
  v8(v4, a1, a2, a3);
  return swift_release();
}

uint64_t NXIndirectOperationHandler.cancel(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + qword_255DCF410);
  swift_retain();
  v5(v2, a1, a2);
  return swift_release();
}

uint64_t NXIndirectOperationHandler.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22DE87604(*(_QWORD *)(v0 + 16));
  sub_22DE8731C(v0 + 32, &qword_255DC6EC0);
  sub_22DE87604(*(_QWORD *)(v0 + 72));
  v1 = v0 + qword_255DD46D0;
  v2 = sub_22DEFA59C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t NXIndirectOperationHandler.__deallocating_deinit()
{
  NXIndirectOperationHandler.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22DECCB4C()
{
  return static NXOperationHandler.operationName.getter();
}

uint64_t sub_22DECCB64()
{
  return _s5Nexus18NXOperationHandlerPAAE13operationNameSSvg_0();
}

uint64_t sub_22DECCB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return NXIndirectOperationHandler.start(parameters:completionHandler:)(a1, a2, a3);
}

uint64_t sub_22DECCB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return NXIndirectOperationHandler.update(parameters:completionHandler:)(a1, a2, a3);
}

uint64_t sub_22DECCB98()
{
  uint64_t v0;

  v0 = sub_22DECD214();
  sub_22DE875A4(v0);
  return v0;
}

uint64_t (*sub_22DECCBCC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = NXIndirectOperationHandler.eventHandler.modify();
  return sub_22DECAB4C;
}

uint64_t (*sub_22DECCC18(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = NXIndirectOperationHandler.operationHandlerContext.modify();
  return sub_22DECAB4C;
}

uint64_t sub_22DECCC5C()
{
  uint64_t v0;

  v0 = sub_22DECD2D4();
  sub_22DE875A4(v0);
  return v0;
}

uint64_t (*sub_22DECCC90(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = NXIndirectOperationHandler.providerEventDataHandler.modify();
  return sub_22DECAB4C;
}

void sub_22DECCCD4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_22DECCD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v13;
  _QWORD *v14;

  v13 = *v6;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *v14 = v7;
  v14[1] = sub_22DECA82C;
  v14[7] = a4;
  v14[8] = v6;
  v14[5] = a3;
  v14[6] = a6;
  v14[3] = a2;
  v14[4] = v13;
  v14[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22DECCD98(uint64_t a1, void (*a2)(id *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;

  return NXOperationHandler.sendRequest<A>(_:responseHandler:)(a1, a2, a3, *v7, a4, a7, a5);
}

uint64_t sub_22DECCDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;

  return NXOperationHandler.start(parameterData:completionHandler:)(a1, a2, a3, a4, *v6, a6);
}

uint64_t sub_22DECCDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;

  return NXOperationHandler.update(parameterData:completionHandler:)(a1, a2, a3, a4, *v6, a6);
}

void (*sub_22DECCDDC(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *)
{
  uint64_t *v3;

  return NXOperationHandler.reportEvent(_:)(a1, *v3, a3);
}

uint64_t sub_22DECCDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return NXOperationHandler.reportProviderEvent(_:)(a1, *v3, a3);
}

uint64_t _s5Nexus18NXOperationHandlerPAAE13operationNameSSvg_0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_22DECCE68(uint64_t a1)
{
  uint64_t *v1;

  return sub_22DECB7E0(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_22DECCE78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DECCE9C(void *a1, unint64_t a2, char a3)
{
  uint64_t v3;

  return sub_22DECBA94(a1, a2, a3 & 1, *(void (**)(_QWORD *))(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 24));
}

uint64_t sub_22DECCEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8;
  v7 = v0 + v5;
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v0 + v6);
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)v8 = v1;
  *(_QWORD *)(v8 + 8) = sub_22DEC23C8;
  *(_OWORD *)(v8 + 16) = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 32) = v10;
  *v10 = v8;
  v10[1] = sub_22DECBDF0;
  return v12(v7, v2, v3);
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DECD054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8;
  v7 = v0 + v5;
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v0 + v6);
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)v8 = v1;
  *(_QWORD *)(v8 + 8) = sub_22DECA82C;
  *(_OWORD *)(v8 + 16) = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 32) = v10;
  *v10 = v8;
  v10[1] = sub_22DECC124;
  return v12(v7, v2, v3);
}

uint64_t sub_22DECD140()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DECD174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_22DECA82C;
  *(_OWORD *)(v4 + 16) = v5;
  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 32) + *(_QWORD *)(v3 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v6;
  *v6 = v4;
  v6[1] = sub_22DECC124;
  return v8(v2, v3);
}

uint64_t sub_22DECD214()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_22DECD244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DECD28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DECD2D4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 72);
}

uint64_t sub_22DECD304(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_22DECD30C()
{
  return 16;
}

__n128 sub_22DECD318(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22DECD324()
{
  return 16;
}

__n128 sub_22DECD330(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22DECD33C()
{
  return 16;
}

__n128 sub_22DECD348(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of NXOperationHandlerContext.sendRequestHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NXOperationHandlerContext.sendRequestHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of NXOperationHandlerContext.sendRequestHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static NXOperationParameters.operationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static NXOperationParameters.restartable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static NXOperationParameters.decode(data:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of NXOperationParameters.encode(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of static NXOperationEventMessage.decode(data:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of NXOperationEventMessage.encode(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of static NXOperationHandler.operationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NXOperationHandler.operationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NXOperationHandler.start(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of NXOperationHandler.update(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of NXOperationHandler.cancel(completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of NXOperationHandler.eventHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of NXOperationHandler.eventHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of NXOperationHandler.eventHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of NXOperationHandler.operationHandlerContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of NXOperationHandler.operationHandlerContext.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of NXOperationHandler.operationHandlerContext.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of NXOperationHandler.providerEventDataHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of NXOperationHandler.providerEventDataHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of NXOperationHandler.providerEventDataHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of NXOperationHandler.sendRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 136)
                                                                                     + *(_QWORD *)(a6 + 136));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22DEC23C8;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of NXOperationHandler.sendRequest<A>(_:responseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 144))();
}

uint64_t dispatch thunk of NXOperationHandler.start(parameterData:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 152))();
}

uint64_t dispatch thunk of NXOperationHandler.update(parameterData:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 160))();
}

uint64_t dispatch thunk of NXOperationHandler.reportEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of NXOperationHandler.reportProviderEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of NXAsyncOperationHandler.start(parameters:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22DECA82C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of NXAsyncOperationHandler.update(parameters:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22DECA82C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of NXAsyncOperationHandler.cancel()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22DECA82C;
  return v7(a1, a2);
}

uint64_t sub_22DECD6B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DEFA59C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for NXIndirectOperationHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXIndirectOperationHandler);
}

uint64_t method lookup function for NXIndirectOperationHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXIndirectOperationHandler.__allocating_init(operationUUID:startHandler:updateHandler:cancelHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of NXOperationDataHandler.start(parameterData:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of NXOperationDataHandler.update(parameterData:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of NXOperationDataHandler.cancel(completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of NXOperationDataHandler.eventHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of NXOperationDataHandler.eventHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of NXOperationDataHandler.providerEventDataHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of NXOperationDataHandler.providerEventDataHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of NXOperationDataHandler.providerEventDataHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of NXOperationDataHandler.sendRequestHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of NXOperationDataHandler.sendRequestHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of NXOperationDataHandler.sendRequestHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_22DECD7E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DECD804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_22DECD834(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_22DECD85C()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v1 = sub_22DEFAAAC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DECD8FC(uint64_t a1)
{
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v2 = sub_22DEFAAAC();
  return sub_22DECB934(a1, v2);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E321D1C](a1, v6, a5);
}

uint64_t sub_22DECD9CC()
{
  uint64_t v0;

  v0 = sub_22DEFA674();
  __swift_allocate_value_buffer(v0, qword_255DCF528);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DCF528);
  sub_22DEF4E10();
  swift_bridgeObjectRetain();
  return sub_22DEFA668();
}

uint64_t sub_22DECDA50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 72);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_22DE80988(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22DECDA74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  __int128 v11;

  v11 = *(_OWORD *)(a3 + a2 - 16);
  v5 = *a1;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 88);
  if (v6)
  {
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = v11;
    *(_QWORD *)(v8 + 32) = v6;
    *(_QWORD *)(v8 + 40) = v7;
    v9 = sub_22DED581C;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)())v8;
  return sub_22DE875A4(v6);
}

uint64_t sub_22DECDB10(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;

  v5 = *a1;
  v6 = a1[1];
  if (*a1)
  {
    v7 = a4 + a3;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_22DED581C;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = *a2;
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 80);
  *(_QWORD *)(v10 + 80) = v9;
  *(_QWORD *)(v10 + 88) = v8;
  sub_22DE875A4(v5);
  return sub_22DE87604(v11);
}

uint64_t NXOperationClient.eventHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 80);
  sub_22DE875A4(v1);
  return v1;
}

uint64_t NXOperationClient.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return sub_22DE87604(v5);
}

uint64_t (*NXOperationClient.eventHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t NXOperationClient.idsServiceID.getter()
{
  uint64_t v0;

  v0 = sub_22DED2E7C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_22DECDCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 112);
  v6 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return sub_22DEA326C(v5, v6);
}

uint64_t (*sub_22DECDD24())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t NXOperationClient.logEvents.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t NXOperationClient.logEvents.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 128) = a1;
  return result;
}

uint64_t (*NXOperationClient.logEvents.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22DECDE08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t sub_22DECDE10()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t NXOperationClient.__allocating_init(endpoint:idsServiceID:operationName:restartable:dispatchQueue:xpcEndpoint:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  NXOperationClient.init(endpoint:idsServiceID:operationName:restartable:dispatchQueue:xpcEndpoint:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

_QWORD *NXOperationClient.init(endpoint:idsServiceID:operationName:restartable:dispatchQueue:xpcEndpoint:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  id v19;
  __int128 v21;
  __int128 v22;

  v9 = v8;
  v13 = *v8;
  v21 = a1[1];
  v22 = *a1;
  v14 = *((_QWORD *)a1 + 4);
  v15 = *((_QWORD *)a1 + 5);
  v16 = *((_BYTE *)a1 + 48);
  v9[10] = 0;
  v9[11] = 0;
  *((_OWORD *)v9 + 7) = xmmword_22DEFF4B0;
  *((_BYTE *)v9 + 128) = 1;
  v9[17] = CUNextID64();
  sub_22DEFA59C();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), v18);
  sub_22DEFAB18();
  sub_22DE8D808(&qword_255DC66C8, v17, MEMORY[0x24BDCEA88]);
  v9[22] = sub_22DEFA950();
  v9[2] = a7;
  *(_OWORD *)(v9 + 3) = v22;
  *(_OWORD *)(v9 + 5) = v21;
  v9[7] = v14;
  v9[8] = v15;
  *((_BYTE *)v9 + 72) = v16;
  v9[12] = a2;
  v9[13] = a3;
  v9[18] = a4;
  v9[19] = a5;
  *((_BYTE *)v9 + 160) = a6;
  type metadata accessor for NXXPCClient();
  v19 = a7;
  v9[21] = NXXPCClient.__allocating_init(dispatchQueue:xpcEndpoint:)((uint64_t)a7, a8);
  return v9;
}

uint64_t *NXOperationClient.__allocating_init(operationName:restartable:reuseClient:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t *v8;

  swift_allocObject();
  v8 = sub_22DED2EC8(a1, a2, a3, a4);
  swift_release();
  return v8;
}

uint64_t *NXOperationClient.init(operationName:restartable:reuseClient:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t *v4;

  v4 = sub_22DED2EC8(a1, a2, a3, a4);
  swift_release();
  return v4;
}

uint64_t NXOperationClient.__allocating_init(endpoint:idsServiceID:operationName:restartable:xpcClient:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  NXOperationClient.init(endpoint:idsServiceID:operationName:restartable:xpcClient:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t *NXOperationClient.init(endpoint:idsServiceID:operationName:restartable:xpcClient:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  void *v17;
  id v18;
  __int128 v20;
  __int128 v21;

  v11 = *v7;
  v20 = a1[1];
  v21 = *a1;
  v12 = *((_QWORD *)a1 + 4);
  v13 = *((_QWORD *)a1 + 5);
  v14 = *((_BYTE *)a1 + 48);
  v7[10] = 0;
  v7[11] = 0;
  *((_OWORD *)v7 + 7) = xmmword_22DEFF4B0;
  *((_BYTE *)v7 + 128) = 1;
  v7[17] = CUNextID64();
  sub_22DEFA59C();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(v11 + 80), *(_QWORD *)(v11 + 88), v16);
  sub_22DEFAB18();
  sub_22DE8D808(&qword_255DC66C8, v15, MEMORY[0x24BDCEA88]);
  v7[22] = sub_22DEFA950();
  v17 = *(void **)(a7 + 16);
  v7[2] = (uint64_t)v17;
  *(_OWORD *)(v7 + 3) = v21;
  *(_OWORD *)(v7 + 5) = v20;
  v7[7] = v12;
  v7[8] = v13;
  *((_BYTE *)v7 + 72) = v14;
  v7[12] = a2;
  v7[13] = a3;
  v7[18] = a4;
  v7[19] = a5;
  *((_BYTE *)v7 + 160) = a6;
  v7[21] = a7;
  v18 = v17;
  return v7;
}

uint64_t NXOperationClient.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_255DCF520 != -1)
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DCF528);
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFAB90();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DE7A000, v3, v4, "deinit", v5, 2u);
    MEMORY[0x22E321E0C](v5, -1, -1);
  }

  sub_22DE963A0(v1, (uint64_t)&off_24F9A86B8, 0, (void (*)(void))nullsub_1, 0);
  sub_22DE809FC(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
  sub_22DE87604(*(_QWORD *)(v1 + 80));
  swift_bridgeObjectRelease();
  sub_22DEA326C(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t NXOperationClient.__deallocating_deinit()
{
  NXOperationClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t NXOperationClient.start(parameters:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_22DECE3C0()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_22DECE45C;
  return sub_22DEFAE78();
}

uint64_t sub_22DECE45C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DECE4C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DECE4D4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t NXOperationClient.start(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DECE754(a1, a2, a3, (uint64_t)&unk_24F9A85B0, (uint64_t)sub_22DED304C, (uint64_t)&block_descriptor_3);
}

uint64_t NXOperationClient.update(parameters:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_22DECE53C()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_22DECE5D8;
  return sub_22DEFAE78();
}

uint64_t sub_22DECE5D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DECE644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  a6(a3, a5, v14);
  return swift_release();
}

uint64_t NXOperationClient.update(parameters:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DECE754(a1, a2, a3, (uint64_t)&unk_24F9A8600, (uint64_t)sub_22DED365C, (uint64_t)&block_descriptor_10);
}

uint64_t sub_22DECE754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v31 = a5;
  v32 = a6;
  v28[1] = a4;
  v29 = a2;
  v7 = v6;
  v30 = a3;
  v9 = *v6;
  v34 = sub_22DEFA914();
  v37 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DEFA92C();
  v35 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v9 + 80);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v7[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v20 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v21 = (v18 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = v16;
  *((_QWORD *)v22 + 3) = *(_QWORD *)(v9 + 88);
  *((_QWORD *)v22 + 4) = v7;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v22[v20], v19, v16);
  v23 = &v22[v21];
  v24 = v30;
  *(_QWORD *)v23 = v29;
  *((_QWORD *)v23 + 1) = v24;
  aBlock[4] = v31;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = v32;
  v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_22DEFA920();
  v38 = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE8CA18();
  v26 = v34;
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v15, v11, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v26);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
  return swift_release();
}

uint64_t NXOperationClient.cancel()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_22DECE9E0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_22DECEA5C;
  return sub_22DEFAE78();
}

uint64_t sub_22DECEA5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DECEAC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DECEACC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  NXOperationClient.cancel(completionHandler:)((uint64_t)sub_22DED5A40, v6);
  return swift_release();
}

uint64_t NXOperationClient.cancel(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_22DEFA914();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DEFA92C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v3 + 16);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_22DED3BC0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = &block_descriptor_18;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_22DEFA920();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE8CA18();
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_22DECED90(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[2];
  unint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85[3];
  uint64_t v86[4];

  v5 = v4;
  v82 = a2;
  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 88), a4);
  v7 = sub_22DEFAB18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v84 = (char *)v66 - v9;
  v10 = sub_22DEFA59C();
  v81 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v74 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v83 = (char *)v66 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = sub_22DEFAC20();
  v78 = *(_QWORD *)(v15 - 8);
  v79 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v77 = (char *)v66 - v19;
  if (qword_255DCF520 != -1)
LABEL_38:
    swift_once();
  v20 = sub_22DEFA674();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_255DCF528);
  swift_retain();
  v73 = v21;
  v22 = sub_22DEFA65C();
  v23 = sub_22DEFABA8();
  v24 = os_log_type_enabled(v22, v23);
  v80 = v18;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v71 = swift_slowAlloc();
    v86[0] = v71;
    *(_DWORD *)v25 = 136315394;
    *(_QWORD *)&v69 = v25 + 4;
    v76 = (_QWORD *)v10;
    v72 = a1;
    v26 = TupleTypeMetadata2;
    v27 = v8;
    v28 = v7;
    v30 = v5[18];
    v29 = v5[19];
    swift_bridgeObjectRetain();
    v85[0] = sub_22DE8C348(v30, v29, v86);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    v85[0] = v5[17];
    v7 = v28;
    v8 = v27;
    TupleTypeMetadata2 = v26;
    a1 = v72;
    v10 = (uint64_t)v76;
    sub_22DEFAC2C();
    swift_release();
    _os_log_impl(&dword_22DE7A000, v22, v23, "Cancel: operationName=%s, operationID=%llu", (uint8_t *)v25, 0x16u);
    v31 = MEMORY[0x24BEE4AD8];
    v32 = v71;
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v32, -1, -1);
    MEMORY[0x22E321E0C](v25, -1, -1);

  }
  else
  {

    swift_release();
    v31 = MEMORY[0x24BEE4AD8];
  }
  sub_22DE963A0((uint64_t)v5, (uint64_t)&off_24F9A86B8, 1, (void (*)(void))a1, v82);
  v66[1] = v5 + 22;
  swift_beginAccess();
  v33 = v5[22];
  v34 = *(_QWORD *)(v33 + 64);
  v67 = v33 + 64;
  v35 = 1 << *(_BYTE *)(v33 + 32);
  v36 = -1;
  if (v35 < 64)
    v36 = ~(-1 << v35);
  a1 = v36 & v34;
  v71 = (unint64_t)(v35 + 63) >> 6;
  v66[0] = v71 - 1;
  v72 = v33;
  swift_bridgeObjectRetain();
  v37 = 0;
  *(_QWORD *)&v38 = 134218242;
  v69 = v38;
  v68 = v31 + 8;
  v75 = TupleTypeMetadata2;
  v76 = v5;
  v18 = v80;
  v39 = v81;
  v70 = v8;
  while (1)
  {
    if (a1)
    {
      v42 = __clz(__rbit64(a1));
      a1 &= a1 - 1;
      v82 = v37;
      v43 = v42 | (v37 << 6);
      goto LABEL_12;
    }
    v46 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v46 >= v71)
    {
      v82 = v37;
LABEL_18:
      a1 = 0;
      v45 = 1;
      goto LABEL_19;
    }
    v47 = *(_QWORD *)(v67 + 8 * v46);
    if (v47)
      goto LABEL_16;
    v63 = v37 + 2;
    if (v37 + 2 < v71)
    {
      v47 = *(_QWORD *)(v67 + 8 * v63);
      if (v47)
      {
        v46 = v37 + 2;
        goto LABEL_16;
      }
      v64 = v37 + 3;
      if (v64 < v71)
      {
        v47 = *(_QWORD *)(v67 + 8 * v64);
        if (!v47)
        {
          while (1)
          {
            v46 = v64 + 1;
            if (__OFADD__(v64, 1))
              goto LABEL_37;
            if (v46 >= v71)
            {
              a1 = 0;
              v45 = 1;
              v82 = v66[0];
              goto LABEL_19;
            }
            v47 = *(_QWORD *)(v67 + 8 * v46);
            ++v64;
            if (v47)
              goto LABEL_16;
          }
        }
        v46 = v64;
LABEL_16:
        a1 = (v47 - 1) & v47;
        v43 = __clz(__rbit64(v47)) + (v46 << 6);
        v82 = v46;
LABEL_12:
        v44 = v72;
        (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v18, *(_QWORD *)(v72 + 48) + *(_QWORD *)(v39 + 72) * v43, v10);
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(&v18[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v44 + 56) + *(_QWORD *)(v8 + 72) * v43, v7);
        v45 = 0;
        goto LABEL_19;
      }
      v82 = v63;
      goto LABEL_18;
    }
    a1 = 0;
    v45 = 1;
    v82 = v37 + 1;
LABEL_19:
    v48 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v18, v45, 1, TupleTypeMetadata2);
    v49 = v77;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v18, v79);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v49, 1, TupleTypeMetadata2) == 1)
      break;
    v50 = v49;
    v51 = &v49[*(int *)(TupleTypeMetadata2 + 48)];
    v52 = v83;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v83, v50, v10);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v84, v51, v7);
    v53 = v74;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v74, v52, v10);
    swift_retain();
    v54 = sub_22DEFA65C();
    v55 = sub_22DEFABA8();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v57 = v7;
      v58 = swift_slowAlloc();
      v85[0] = v58;
      *(_DWORD *)v56 = v69;
      *(_QWORD *)(v56 + 4) = v5[17];
      swift_release();
      *(_WORD *)(v56 + 12) = 2080;
      sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v59 = sub_22DEFAE3C();
      *(_QWORD *)(v56 + 14) = sub_22DE8C348(v59, v60, v85);
      swift_bridgeObjectRelease();
      v40 = *(void (**)(char *, uint64_t))(v81 + 8);
      v40(v53, v10);
      _os_log_impl(&dword_22DE7A000, v54, v55, "Async events cancel: operationID=%llu, context=%s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      v61 = v58;
      v7 = v57;
      v8 = v70;
      MEMORY[0x22E321E0C](v61, -1, -1);
      v62 = v56;
      v39 = v81;
      MEMORY[0x22E321E0C](v62, -1, -1);
    }
    else
    {
      swift_release();
      v40 = *(void (**)(char *, uint64_t))(v39 + 8);
      v40(v53, v10);
    }

    v41 = v84;
    sub_22DEFAB0C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v41, v7);
    v40(v83, v10);
    TupleTypeMetadata2 = v75;
    v5 = v76;
    v18 = v80;
    v37 = v82;
  }
  swift_release();
  swift_beginAccess();
  sub_22DE8D808(&qword_255DC66C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22DEFA98C();
  sub_22DEFA980();
  return swift_endAccess();
}

uint64_t NXOperationClient.events.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  type metadata accessor for NXOperationClient.UnifiedEvent(255, v5, v6, a4);
  v7 = sub_22DEFAAF4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v14[-v8];
  v10 = swift_allocObject();
  swift_weakInit();
  v15 = v5;
  v16 = v6;
  v17 = v10;
  swift_checkMetadataState();
  v11 = *MEMORY[0x24BEE6A10];
  v12 = sub_22DEFAAF4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v9, v11, v12);
  sub_22DEFAB3C();
  return swift_release();
}

uint64_t sub_22DECF694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v25 = a1;
  v6 = sub_22DEFA914();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DEFA92C();
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NXOperationClient.UnifiedEvent(255, a3, a4, v12);
  v13 = sub_22DEFAB18();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v24 - v15;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    v24[1] = *(_QWORD *)(result + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v25, v13);
    v19 = *(unsigned __int8 *)(v14 + 80);
    v25 = v7;
    v20 = (v19 + 40) & ~v19;
    v21 = (char *)swift_allocObject();
    *((_QWORD *)v21 + 2) = a3;
    *((_QWORD *)v21 + 3) = a4;
    *((_QWORD *)v21 + 4) = v18;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v20], v16, v13);
    aBlock[4] = sub_22DED5904;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE87E38;
    aBlock[3] = &block_descriptor_34;
    v22 = _Block_copy(aBlock);
    swift_retain();
    sub_22DEFA920();
    v29 = MEMORY[0x24BEE4AF8];
    sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
    sub_22DE8CA18();
    v23 = v28;
    sub_22DEFAC5C();
    MEMORY[0x22E321590](0, v11, v23, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v6);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_22DECF938(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];

  v43 = a2;
  v5 = *(_QWORD *)(*a1 + 80);
  v49 = *(_QWORD *)(*a1 + 88);
  v50 = v5;
  type metadata accessor for NXOperationClient.UnifiedEvent(255, v5, v49, a4);
  v48 = sub_22DEFAB18();
  v6 = sub_22DEFAC20();
  MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)&v39 - v7;
  v8 = sub_22DEFA59C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v39 - v13;
  v46 = v15;
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v39 - v16;
  sub_22DEFA590();
  if (qword_255DCF520 != -1)
    swift_once();
  v18 = sub_22DEFA674();
  __swift_project_value_buffer(v18, (uint64_t)qword_255DCF528);
  v44 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v44(v14, v17, v8);
  swift_retain();
  v19 = sub_22DEFA65C();
  v20 = sub_22DEFABA8();
  v21 = os_log_type_enabled(v19, v20);
  v41 = a1;
  v42 = v9;
  if (v21)
  {
    v22 = v9;
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v39 = v24;
    *(_DWORD *)v23 = 134218242;
    v51 = a1[17];
    v52[0] = v24;
    sub_22DEFAC2C();
    swift_release();
    *(_WORD *)(v23 + 12) = 2080;
    sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v25 = sub_22DEFAE3C();
    v51 = sub_22DE8C348(v25, v26, v52);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    v40 = *(void (**)(char *, uint64_t))(v22 + 8);
    v40(v14, v8);
    _os_log_impl(&dword_22DE7A000, v19, v20, "Async events start: operationID=%llu, context=%s", (uint8_t *)v23, 0x16u);
    v27 = v39;
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v27, -1, -1);
    MEMORY[0x22E321E0C](v23, -1, -1);
  }
  else
  {
    swift_release();
    v40 = *(void (**)(char *, uint64_t))(v9 + 8);
    v40(v14, v8);
  }

  v28 = v47;
  v29 = v44;
  v44(v47, v17, v8);
  v30 = v48;
  v31 = *(_QWORD *)(v48 - 8);
  v32 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v45, v43, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
  swift_beginAccess();
  sub_22DE8D808(&qword_255DC66C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22DEFA98C();
  sub_22DEFA9A4();
  swift_endAccess();
  v33 = swift_allocObject();
  swift_weakInit();
  v29(v28, v17, v8);
  v34 = v42;
  v35 = (*(unsigned __int8 *)(v42 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v36 = (char *)swift_allocObject();
  v37 = v49;
  *((_QWORD *)v36 + 2) = v50;
  *((_QWORD *)v36 + 3) = v37;
  *((_QWORD *)v36 + 4) = v33;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v36[v35], v28, v8);
  sub_22DEFAAE8();
  return ((uint64_t (*)(char *, uint64_t))v40)(v17, v8);
}

uint64_t sub_22DECFDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v22 = a3;
  v23 = a4;
  v5 = sub_22DEFA914();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_22DEFA92C();
  v8 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DEFA59C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v21[1] = *(_QWORD *)(result + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v11);
    v17 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v18 = (char *)swift_allocObject();
    v19 = v23;
    *((_QWORD *)v18 + 2) = v22;
    *((_QWORD *)v18 + 3) = v19;
    *((_QWORD *)v18 + 4) = v16;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v17], v14, v11);
    aBlock[4] = sub_22DED5A0C;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DE87E38;
    aBlock[3] = &block_descriptor_44;
    v20 = _Block_copy(aBlock);
    swift_retain();
    sub_22DEFA920();
    v26 = MEMORY[0x24BEE4AF8];
    sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
    sub_22DE8CA18();
    sub_22DEFAC5C();
    MEMORY[0x22E321590](0, v10, v7, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_22DED002C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34[3];

  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(*a1 + 80), *(_QWORD *)(*a1 + 88), a4);
  v6 = sub_22DEFAB18();
  v7 = sub_22DEFAC20();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - v8;
  v10 = sub_22DEFA59C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v32 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - v14;
  if (qword_255DCF520 != -1)
    swift_once();
  v16 = sub_22DEFA674();
  __swift_project_value_buffer(v16, (uint64_t)qword_255DCF528);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v31(v15, a2, v10);
  swift_retain();
  v17 = sub_22DEFA65C();
  v18 = sub_22DEFABA8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v28 = a2;
    v20 = v19;
    v21 = swift_slowAlloc();
    v27 = v21;
    *(_DWORD *)v20 = 134218242;
    v33 = a1[17];
    v34[0] = v21;
    v29 = v9;
    sub_22DEFAC2C();
    swift_release();
    *(_WORD *)(v20 + 12) = 2080;
    v30 = v6;
    sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_22DEFAE3C();
    v33 = sub_22DE8C348(v22, v23, v34);
    v9 = v29;
    v6 = v30;
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    _os_log_impl(&dword_22DE7A000, v17, v18, "Async events stop: operationID=%llu, context=%s", (uint8_t *)v20, 0x16u);
    v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v24, -1, -1);
    v25 = v20;
    a2 = v28;
    MEMORY[0x22E321E0C](v25, -1, -1);
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  }

  v31(v32, a2, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v9, 1, 1, v6);
  swift_beginAccess();
  sub_22DE8D808(&qword_255DC66C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22DEFA98C();
  sub_22DEFA9A4();
  return swift_endAccess();
}

uint64_t sub_22DED0390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t TupleTypeMetadata2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  void (*v32)(char *);
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t result;
  int64_t v42;
  __int128 v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  id v61;
  int v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  int v77;
  char *v78;
  int v79;
  uint64_t v80;
  int64_t v81;
  int64_t v82;
  int64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  char *v90;
  int64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;

  v5 = v4;
  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(*v5 + 80), *(_QWORD *)(*v5 + 88), a4);
  v7 = sub_22DEFAB18();
  v8 = sub_22DEFAC20();
  MEMORY[0x24BDAC7A8](v8);
  v87 = (char *)&v83 - v9;
  v99 = sub_22DEFAADC();
  v98 = *(_QWORD *)(v99 - 8);
  v10 = MEMORY[0x24BDAC7A8](v99);
  v101 = (char *)&v83 - v11;
  v12 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v109 = (char *)&v83 - v13;
  v14 = sub_22DEFA59C();
  v108 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v86 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v83 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v83 - v19;
  v115 = v21;
  v116 = v7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v23 = sub_22DEFAC20();
  v106 = *(_QWORD *)(v23 - 8);
  v107 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v104 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v83 - v26;
  v103 = swift_checkMetadataState();
  v28 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v30 = (char *)&v83 - v29;
  v114 = *(id *)a1;
  v31 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  v32 = (void (*)(char *))v5[10];
  v105 = v27;
  v92 = v5;
  if (v32)
  {
    v33 = v114;
    *(_QWORD *)v30 = v114;
    v30[8] = v31;
    v34 = v103;
    swift_storeEnumTagMultiPayload();
    sub_22DE875A4((uint64_t)v32);
    v35 = v33;
    v5 = v92;
    sub_22DEA5FBC(v35, v31);
    v32(v30);
    sub_22DE87604((uint64_t)v32);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v34);
  }
  v95 = v31;
  v102 = v30;
  v85 = v5 + 22;
  swift_beginAccess();
  v36 = v5[22];
  v37 = *(_QWORD *)(v36 + 64);
  v84 = v36 + 64;
  v38 = 1 << *(_BYTE *)(v36 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & v37;
  v90 = &v119;
  v91 = (unint64_t)(v38 + 63) >> 6;
  v83 = v91 - 1;
  v93 = v36;
  result = swift_bridgeObjectRetain();
  v42 = 0;
  *(_QWORD *)&v43 = 134218498;
  v89 = v43;
  v88 = MEMORY[0x24BEE4AD8] + 8;
  v44 = v5;
  v45 = v108;
  v46 = v109;
  v100 = v12;
  v96 = v20;
  v111 = TupleTypeMetadata2;
  while (1)
  {
    if (v40)
    {
      v47 = v44;
      v112 = v42;
      v113 = (v40 - 1) & v40;
      v48 = __clz(__rbit64(v40)) | (v42 << 6);
      v49 = v115;
      goto LABEL_9;
    }
    v53 = v42 + 1;
    v49 = v115;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v53 < v91)
      break;
    v112 = v42;
LABEL_15:
    v113 = 0;
    v52 = 1;
LABEL_16:
    v51 = v104;
LABEL_17:
    v55 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v51, v52, 1, TupleTypeMetadata2);
    v56 = v105;
    (*(void (**)(void))(v106 + 32))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v56, 1, TupleTypeMetadata2) == 1)
      return swift_release();
    v57 = &v56[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v20, v56, v49);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v46, v57, v116);
    v58 = v20;
    if (qword_255DCF520 != -1)
      swift_once();
    v59 = sub_22DEFA674();
    __swift_project_value_buffer(v59, (uint64_t)qword_255DCF528);
    v60 = v97;
    v110 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v110(v97, v58, v49);
    v61 = v114;
    v62 = v95;
    sub_22DEA5FBC(v114, v95);
    sub_22DEA5FBC(v61, v62);
    swift_retain();
    v63 = sub_22DEFA65C();
    v64 = sub_22DEFAB90();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      v94 = v66;
      *(_DWORD *)v65 = v89;
      v67 = v44[17];
      v117 = v66;
      v118 = v67;
      sub_22DEFAC2C();
      swift_release();
      *(_WORD *)(v65 + 12) = 2080;
      sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v68 = sub_22DEFAE3C();
      v118 = sub_22DE8C348(v68, v69, &v117);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v70 = v49;
      v71 = *(void (**)(char *, uint64_t))(v45 + 8);
      v71(v60, v70);
      *(_WORD *)(v65 + 22) = 2080;
      v118 = (uint64_t)v114;
      v119 = v62;
      v72 = NXOperationEvent.description.getter();
      v118 = sub_22DE8C348(v72, v73, &v117);
      v44 = v92;
      v61 = v114;
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      sub_22DEA5FD0(v61, v62);
      sub_22DEA5FD0(v61, v62);
      _os_log_impl(&dword_22DE7A000, v63, v64, "Async events yield client: operationID=%llu, context=%s, event=%s", (uint8_t *)v65, 0x20u);
      v74 = v94;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v74, -1, -1);
      MEMORY[0x22E321E0C](v65, -1, -1);
    }
    else
    {
      swift_release();
      v75 = v49;
      v71 = *(void (**)(char *, uint64_t))(v45 + 8);
      v71(v60, v75);
      sub_22DEA5FD0(v61, v62);
      sub_22DEA5FD0(v61, v62);
    }

    v76 = v102;
    v77 = v62;
    *(_QWORD *)v102 = v61;
    v76[8] = v62;
    swift_storeEnumTagMultiPayload();
    sub_22DEA5FBC(v61, v62);
    v78 = v101;
    v46 = v109;
    sub_22DEFAB00();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v78, v99);
    v12 = v100;
    v20 = v96;
    v79 = v77;
    TupleTypeMetadata2 = v111;
    if (!v79)
    {
      v80 = v116;
      sub_22DEFAB0C();
      v110(v86, v20, v115);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v87, 1, 1, v80);
      swift_beginAccess();
      sub_22DE8D808(&qword_255DC66C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_22DEFA98C();
      TupleTypeMetadata2 = v111;
      sub_22DEFA9A4();
      swift_endAccess();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v46, v116);
    result = ((uint64_t (*)(char *, uint64_t))v71)(v20, v115);
    v45 = v108;
    v42 = v112;
    v40 = v113;
  }
  v54 = *(_QWORD *)(v84 + 8 * v53);
  if (v54)
    goto LABEL_13;
  v81 = v42 + 2;
  if (v42 + 2 >= v91)
  {
    v113 = 0;
    v52 = 1;
LABEL_29:
    v112 = v53;
    goto LABEL_16;
  }
  v54 = *(_QWORD *)(v84 + 8 * v81);
  if (v54)
  {
    v53 = v42 + 2;
    goto LABEL_13;
  }
  v82 = v42 + 3;
  if (v82 >= v91)
  {
    v112 = v81;
    goto LABEL_15;
  }
  v54 = *(_QWORD *)(v84 + 8 * v82);
  if (v54)
  {
    v53 = v82;
LABEL_13:
    v47 = v44;
    v112 = v53;
    v113 = (v54 - 1) & v54;
    v48 = __clz(__rbit64(v54)) + (v53 << 6);
LABEL_9:
    v50 = v93;
    v51 = v104;
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v104, *(_QWORD *)(v93 + 48) + *(_QWORD *)(v45 + 72) * v48, v49);
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(&v51[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v50 + 56) + *(_QWORD *)(v12 + 72) * v48, v116);
    v52 = 0;
    v44 = v47;
    goto LABEL_17;
  }
  while (1)
  {
    v53 = v82 + 1;
    if (__OFADD__(v82, 1))
      break;
    if (v53 >= v91)
    {
      v113 = 0;
      v52 = 1;
      v53 = v83;
      goto LABEL_29;
    }
    v54 = *(_QWORD *)(v84 + 8 * v53);
    ++v82;
    if (v54)
      goto LABEL_13;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_22DED0D94(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t AssociatedConformanceWitness;
  uint64_t v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unsigned __int8 *v50;
  void (*v51)(char *);
  char *v52;
  uint64_t v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int64_t v60;
  __int128 v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  int64_t v87;
  int64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  int64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121[6];
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  _QWORD v130[6];
  char v131;
  _OWORD v132[8];

  v116 = a2;
  v103 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  type metadata accessor for NXOperationClient.UnifiedEvent(255, v5, v6, a4);
  v98 = sub_22DEFAADC();
  v105 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v8 = (char *)&v94 - v7;
  v9 = sub_22DEFAB18();
  v118 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)&v94 - v10;
  v11 = sub_22DEFA59C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v101 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v94 - v15;
  v114 = v17;
  v119 = v9;
  v18 = v5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = sub_22DEFAC20();
  v109 = *(_QWORD *)(v20 - 8);
  v110 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v120 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v108 = (char *)&v94 - v23;
  v107 = swift_checkMetadataState();
  v97 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v106 = (char *)&v94 - v24;
  v100 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v113 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v27 = (char *)&v94 - v26;
  v104 = v4 + 128;
  swift_beginAccess();
  v28 = v4[128];
  v115 = v4;
  v102 = v8;
  if (v28 == 1)
  {
    *(_QWORD *)&v96 = v18;
    if (qword_255DCF520 != -1)
      swift_once();
    v29 = sub_22DEFA674();
    __swift_project_value_buffer(v29, (uint64_t)qword_255DCF528);
    swift_retain();
    v30 = sub_22DEFA65C();
    v31 = sub_22DEFABA8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      *(_QWORD *)&v132[0] = v33;
      *(_DWORD *)v32 = 136315394;
      v95 = v32 + 4;
      v111 = v27;
      v112 = AssociatedTypeWitness;
      v34 = *((_QWORD *)v115 + 18);
      v35 = *((_QWORD *)v115 + 19);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v122 = sub_22DE8C348(v34, v35, (uint64_t *)v132);
      sub_22DEFAC2C();
      AssociatedTypeWitness = v112;
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2048;
      *(_QWORD *)&v122 = *((_QWORD *)v115 + 17);
      v27 = v111;
      sub_22DEFAC2C();
      swift_release();
      _os_log_impl(&dword_22DE7A000, v30, v31, "Event: operationName=%s, operationID=%llu", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v33, -1, -1);
      v36 = v32;
      v8 = v102;
      MEMORY[0x22E321E0C](v36, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  v123 = 0u;
  v124 = 0u;
  v122 = 0u;
  LOBYTE(v125) = -1;
  memset(v130, 0, sizeof(v130));
  v131 = -1;
  NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v122, (uint64_t)v130, 0, 0, (uint64_t)v132);
  v126 = v132[4];
  v127 = v132[5];
  v128 = v132[6];
  v129 = v132[7];
  v122 = v132[0];
  v123 = v132[1];
  v124 = v132[2];
  v125 = v132[3];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, int64_t, __int128 *, uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v103, v116, &v122, AssociatedTypeWitness, AssociatedConformanceWitness);
  v111 = v27;
  v112 = AssociatedTypeWitness;
  sub_22DE80B6C((uint64_t)v132);
  v50 = v115;
  swift_beginAccess();
  v51 = (void (*)(char *))*((_QWORD *)v50 + 10);
  if (v51)
  {
    v52 = v106;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v106, v111, v112);
    v53 = v107;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v51(v52);
    sub_22DE87604((uint64_t)v51);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v52, v53);
  }
  v54 = v115;
  swift_beginAccess();
  v55 = *((_QWORD *)v54 + 22);
  v56 = *(_QWORD *)(v55 + 64);
  v97 = v55 + 64;
  v57 = 1 << *(_BYTE *)(v55 + 32);
  v58 = -1;
  if (v57 < 64)
    v58 = ~(-1 << v57);
  v59 = v58 & v56;
  v100 = (unint64_t)(v57 + 63) >> 6;
  v94 = v100 - 1;
  v103 = v55;
  swift_bridgeObjectRetain();
  v60 = 0;
  *(_QWORD *)&v61 = 134218242;
  v96 = v61;
  v95 = MEMORY[0x24BEE4AD8] + 8;
  v62 = (void *)v98;
  v63 = v114;
  v99 = TupleTypeMetadata2;
  while (1)
  {
    v67 = v120;
    if (v59)
    {
      v68 = __clz(__rbit64(v59));
      v59 &= v59 - 1;
      v116 = v60;
      v69 = v68 | (v60 << 6);
      goto LABEL_20;
    }
    v72 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      swift_once();
      v38 = sub_22DEFA674();
      __swift_project_value_buffer(v38, (uint64_t)qword_255DCF528);
      swift_retain_n();
      v39 = v62;
      v40 = v62;
      v41 = sub_22DEFA65C();
      v42 = sub_22DEFAB9C();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc();
        v44 = swift_slowAlloc();
        *(_QWORD *)&v122 = v44;
        *(_DWORD *)v43 = 136315650;
        v45 = *((_QWORD *)v115 + 18);
        v46 = *((_QWORD *)v115 + 19);
        swift_bridgeObjectRetain();
        v130[0] = sub_22DE8C348(v45, v46, (uint64_t *)&v122);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2048;
        v47 = *((_QWORD *)v115 + 17);
        swift_release();
        v130[0] = v47;
        sub_22DEFAC2C();
        swift_release();
        *(_WORD *)(v43 + 22) = 2080;
        swift_getErrorValue();
        v48 = sub_22DEFAEC0();
        v130[0] = sub_22DE8C348(v48, v49, (uint64_t *)&v122);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v41, v42, "### Event decode failed: operationName=%s, operationID=%llu,\nerror=%s", (uint8_t *)v43, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v44, -1, -1);
        MEMORY[0x22E321E0C](v43, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      type metadata accessor for NXError();
      v89 = v62;
      v90 = NXError.__allocating_init(_:)(v62);
      *(_QWORD *)&v122 = v90;
      BYTE8(v122) = 1;
      sub_22DED0390((uint64_t)&v122, v91, v92, v93);

      return;
    }
    if (v72 >= v100)
    {
      v116 = v60;
LABEL_26:
      v59 = 0;
      v71 = 1;
      goto LABEL_27;
    }
    v73 = *(_QWORD *)(v97 + 8 * v72);
    if (v73)
      goto LABEL_24;
    v87 = v60 + 2;
    if (v60 + 2 < v100)
      break;
    v59 = 0;
    v71 = 1;
    v116 = v60 + 1;
LABEL_27:
    v74 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v67, v71, 1, TupleTypeMetadata2);
    v75 = v108;
    (*(void (**)(void))(v109 + 32))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v75, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v112);
      return;
    }
    v76 = &v75[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v75, v63);
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v117, v76, v119);
    if (*v104 == 1)
    {
      v77 = v16;
      if (qword_255DCF520 != -1)
        swift_once();
      v78 = sub_22DEFA674();
      __swift_project_value_buffer(v78, (uint64_t)qword_255DCF528);
      v79 = v101;
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v101, v77, v63);
      swift_retain();
      v80 = sub_22DEFA65C();
      v81 = sub_22DEFAB90();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = swift_slowAlloc();
        v83 = swift_slowAlloc();
        v121[0] = v83;
        *(_DWORD *)v82 = v96;
        *(_QWORD *)(v82 + 4) = *((_QWORD *)v115 + 17);
        swift_release();
        *(_WORD *)(v82 + 12) = 2080;
        sub_22DE8D808(&qword_255DC66B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v84 = sub_22DEFAE3C();
        *(_QWORD *)(v82 + 14) = sub_22DE8C348(v84, v85, v121);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v79, v114);
        _os_log_impl(&dword_22DE7A000, v80, v81, "Async events yield provider: operationID=%llu, context=%s", (uint8_t *)v82, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v83, -1, -1);
        v86 = v82;
        v62 = (void *)v98;
        MEMORY[0x22E321E0C](v86, -1, -1);
      }
      else
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v79, v63);
      }

      v8 = v102;
      v16 = v77;
      TupleTypeMetadata2 = v99;
    }
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v106, v111, v112);
    swift_storeEnumTagMultiPayload();
    v64 = v119;
    v65 = v117;
    sub_22DEFAB00();
    (*(void (**)(char *, void *))(v105 + 8))(v8, v62);
    v66 = v64;
    v63 = v114;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v65, v66);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v63);
    v60 = v116;
  }
  v73 = *(_QWORD *)(v97 + 8 * v87);
  if (v73)
  {
    v72 = v60 + 2;
    goto LABEL_24;
  }
  v88 = v60 + 3;
  if (v88 >= v100)
  {
    v116 = v87;
    goto LABEL_26;
  }
  v73 = *(_QWORD *)(v97 + 8 * v88);
  if (v73)
  {
    v72 = v88;
LABEL_24:
    v59 = (v73 - 1) & v73;
    v69 = __clz(__rbit64(v73)) + (v72 << 6);
    v116 = v72;
LABEL_20:
    v70 = v103;
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v120, *(_QWORD *)(v103 + 48) + *(_QWORD *)(v12 + 72) * v69, v63);
    (*(void (**)(char *, unint64_t, uint64_t))(v118 + 16))(&v120[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v70 + 56) + *(_QWORD *)(v118 + 72) * v69, v119);
    v67 = v120;
    v71 = 0;
    goto LABEL_27;
  }
  while (1)
  {
    v72 = v88 + 1;
    if (__OFADD__(v88, 1))
      break;
    if (v72 >= v100)
    {
      v59 = 0;
      v71 = 1;
      v116 = v94;
      goto LABEL_27;
    }
    v73 = *(_QWORD *)(v97 + 8 * v72);
    ++v88;
    if (v73)
      goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_22DED1A24()
{
  uint64_t v0;

  v0 = sub_22DED2E7C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_22DED1A58()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_22DED2E84();
  sub_22DEA5084(v0, v1);
  return v0;
}

void (*sub_22DED1A8C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_22DECDD24();
  return sub_22DECCCD4;
}

uint64_t sub_22DED1AD4()
{
  uint64_t v0;

  v0 = sub_22DED2EB4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_22DED1B14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = a1;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_22DED1B54(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aEnded_4[8 * a1] == *(_QWORD *)&aEnded_4[8 * a2] && qword_22DEFFF50[a1] == qword_22DEFFF50[a2])
    v3 = 1;
  else
    v3 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_22DED1BD8()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DED1C40()
{
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DED1C80()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DED1CE4@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

uint64_t sub_22DED1CF0@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DED1CFC()
{
  sub_22DED3F08();
  return sub_22DEFAF44();
}

uint64_t sub_22DED1D24()
{
  sub_22DED3F08();
  return sub_22DEFAF50();
}

uint64_t sub_22DED1D4C@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

uint64_t sub_22DED1D58@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DED1D64()
{
  sub_22DED3E80();
  return sub_22DEFAF44();
}

uint64_t sub_22DED1D8C()
{
  sub_22DED3E80();
  return sub_22DEFAF50();
}

uint64_t NXOperationEvent.description.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unsigned __int8 v3;
  _QWORD v5[2];

  v1 = *(void **)v0;
  if (*(_BYTE *)(v0 + 8))
  {
    if (*(_BYTE *)(v0 + 8) == 1)
    {
      strcpy((char *)v5, "Error: ");
      v5[1] = 0xE700000000000000;
      sub_22DEA5FBC(v1, 1u);
      type metadata accessor for NXError();
      sub_22DE8D808((unint64_t *)&qword_255DC5ED0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
      sub_22DEFAEC0();
      sub_22DEFAA10();
      swift_bridgeObjectRelease();
      v2 = v1;
      v3 = 1;
LABEL_6:
      sub_22DEA5FD0(v2, v3);
      return v5[0];
    }
    return 0x6574726174736552;
  }
  else
  {
    if (v1)
    {
      strcpy((char *)v5, "Ended: error=");
      HIWORD(v5[1]) = -4864;
      sub_22DEA5FBC(v1, 0);
      sub_22DEA5FBC(v1, 0);
      type metadata accessor for NXError();
      sub_22DE8D808((unint64_t *)&qword_255DC5ED0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
      sub_22DEFAEC0();
      sub_22DEFAA10();
      swift_bridgeObjectRelease();
      sub_22DEA5FD0(v1, 0);
      v2 = v1;
      v3 = 0;
      goto LABEL_6;
    }
    return 0x73203A6465646E45;
  }
}

uint64_t sub_22DED1F60(char a1)
{
  return *(_QWORD *)&aEnded_5[8 * a1];
}

uint64_t sub_22DED1F80()
{
  char *v0;

  return sub_22DED1F60(*v0);
}

uint64_t sub_22DED1F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DED3F4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DED1FAC()
{
  sub_22DED3E3C();
  return sub_22DEFAF44();
}

uint64_t sub_22DED1FD4()
{
  sub_22DED3E3C();
  return sub_22DEFAF50();
}

uint64_t sub_22DED1FFC()
{
  sub_22DED3EC4();
  return sub_22DEFAF44();
}

uint64_t sub_22DED2024()
{
  sub_22DED3EC4();
  return sub_22DEFAF50();
}

void NXOperationEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  int v16;
  void *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7000);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7008);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7010);
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7018);
  v32 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)v2;
  v16 = *(unsigned __int8 *)(v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DED3E3C();
  sub_22DEFAF2C();
  if (v16)
  {
    if (v16 == 1)
    {
      LOBYTE(v34) = 2;
      sub_22DED3E80();
      v17 = v15;
      v18 = v15;
      v19 = v29;
      v20 = v33;
      sub_22DEFADE8();
      v34 = v18;
      type metadata accessor for NXError();
      sub_22DE8D808(&qword_255DC5EE0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
      v21 = v31;
      sub_22DEFAE30();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v21);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v20);
      sub_22DEA5FD0(v17, 1u);
    }
    else
    {
      LOBYTE(v34) = 1;
      sub_22DED3EC4();
      v24 = v33;
      sub_22DEFADE8();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v24);
    }
  }
  else
  {
    LOBYTE(v34) = 0;
    sub_22DED3F08();
    v22 = v15;
    v23 = v33;
    sub_22DEFADE8();
    v34 = v15;
    type metadata accessor for NXError();
    sub_22DE8D808(&qword_255DC5EE0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
    sub_22DEFAE00();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v23);
    sub_22DEA5FD0(v15, 0);
  }
}

uint64_t NXOperationEvent.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7030);
  v4 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v35 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7038);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7040);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7048);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_22DED3E3C();
  v17 = v40;
  sub_22DEFAF20();
  if (v17)
    goto LABEL_9;
  v31 = v9;
  v19 = v37;
  v18 = v38;
  v40 = v13;
  v20 = sub_22DEFADDC();
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v23 = sub_22DEFACBC();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v25 = &type metadata for NXOperationEvent;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
LABEL_9:
    v26 = (uint64_t)v39;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  if (*(_BYTE *)(v20 + 32))
  {
    if (*(_BYTE *)(v20 + 32) == 1)
    {
      LOBYTE(v41) = 1;
      sub_22DED3EC4();
      sub_22DEFAD7C();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
      v21 = 0;
      v22 = 2;
    }
    else
    {
      LOBYTE(v41) = 2;
      sub_22DED3E80();
      sub_22DEFAD7C();
      type metadata accessor for NXError();
      sub_22DE8D808(&qword_255DC5EF0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
      v28 = v34;
      sub_22DEFADD0();
      v29 = v40;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v12);
      v21 = v41;
      v22 = 1;
    }
  }
  else
  {
    LOBYTE(v41) = 0;
    sub_22DED3F08();
    sub_22DEFAD7C();
    type metadata accessor for NXError();
    sub_22DE8D808(&qword_255DC5EF0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, (uint64_t)&protocol conformance descriptor for NXError);
    sub_22DEFADA0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
    v22 = 0;
    v21 = v41;
  }
  v26 = (uint64_t)v39;
  v30 = v36;
  *v36 = v21;
  *((_BYTE *)v30 + 8) = v22;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_22DED28CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return NXOperationEvent.init(from:)(a1, a2);
}

void sub_22DED28E0(_QWORD *a1)
{
  NXOperationEvent.encode(to:)(a1);
}

uint64_t NXOperationEvent.init(xpcObject:)@<X0>(uint64_t a1@<X8>)
{
  Swift::String v2;
  Swift::String_optional v3;
  id v4;
  uint64_t result;
  char v6;
  id v7;
  _QWORD v8[2];
  char v9;

  swift_getObjectType();
  v2._countAndFlagsBits = 1701869940;
  v2._object = (void *)0xE400000000000000;
  v3 = OS_xpc_object.string(_:)(v2);
  if (v3.value._object)
  {
    if (v3.value._countAndFlagsBits == 0x6465646E65 && v3.value._object == (void *)0xE500000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      v4 = (id)CUXPCDecodeNSErrorIfNeeded();
      if (v4)
      {
        type metadata accessor for NXError();
        v4 = NXError.__allocating_init(_:)(v4);
      }
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v6 = 0;
      goto LABEL_8;
    }
    if (v3.value._countAndFlagsBits == 0x6574726174736572 && v3.value._object == (void *)0xE900000000000064
      || (sub_22DEFAE54() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v4 = 0;
      v6 = 2;
LABEL_8:
      *(_QWORD *)a1 = v4;
      *(_BYTE *)(a1 + 8) = v6;
      return result;
    }
    if (v3.value._countAndFlagsBits == 0x726F727265 && v3.value._object == (void *)0xE500000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      v7 = (id)CUXPCDecodeNSErrorIfNeeded();
      type metadata accessor for NXError();
      if (v7)
      {
        v4 = NXError.__allocating_init(_:)(v7);
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        v6 = 1;
      }
      else
      {
        v6 = 1;
        LOBYTE(v8[0]) = 1;
        v4 = NXError.__allocating_init(_:_:_:)((uint64_t)v8, 0xD000000000000019, 0x800000022DF03480, 0);
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
      }
      goto LABEL_8;
    }
    type metadata accessor for NXError();
    v9 = 2;
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    sub_22DEFAC98();
    sub_22DEFAA10();
    sub_22DEFAE48();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v9, 0, 0xE000000000000000, 0);
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for NXError();
    LOBYTE(v8[0]) = 2;
    NXError.__allocating_init(_:_:_:)((uint64_t)v8, 0xD000000000000012, 0x800000022DF03440, 0);
    swift_willThrow();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_22DED2C2C(char a1)
{
  return *(_QWORD *)&aEnded_4[8 * a1];
}

void *NXOperationEvent.xpcObjectRepresentation.getter()
{
  uint64_t v0;
  void *v1;
  int v2;
  xpc_object_t empty;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  empty = xpc_dictionary_create_empty();
  v4 = empty;
  if (v2)
  {
    if (v2 == 1)
    {
      v5 = v1;
      xpc_dictionary_set_string(v4, "type", "error");
      v6 = v5;
      v7 = (void *)sub_22DEFA524();
      sub_22DEA5FD0(v1, 1u);
      CUXPCEncodeNSErrorStd(v4, v7);

      sub_22DEA5FD0(v1, 1u);
    }
    else
    {
      xpc_dictionary_set_string(empty, "type", "restarted");
    }
  }
  else
  {
    v8 = v1;
    xpc_dictionary_set_string(v4, "type", "ended");
    if (v1)
    {
      v9 = v8;
      v10 = (void *)sub_22DEFA524();
      CUXPCEncodeNSErrorStd(v4, v10);
      sub_22DEA5FD0(v1, 0);

      sub_22DEA5FD0(v1, 0);
    }
  }
  return v4;
}

uint64_t sub_22DED2D60(char *a1, char *a2)
{
  return sub_22DED1B54(*a1, *a2);
}

uint64_t sub_22DED2D6C()
{
  return sub_22DED1BD8();
}

uint64_t sub_22DED2D74()
{
  return sub_22DED1C40();
}

uint64_t sub_22DED2D7C()
{
  return sub_22DED1C80();
}

uint64_t sub_22DED2D84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DED4088();
  *a1 = result;
  return result;
}

uint64_t sub_22DED2DB0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22DED2C2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22DED2DD8()
{
  char *v0;

  return sub_22DED2C2C(*v0);
}

uint64_t sub_22DED2DE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DED4088();
  *a1 = result;
  return result;
}

uint64_t sub_22DED2E04()
{
  sub_22DED583C();
  return sub_22DEFAF44();
}

uint64_t sub_22DED2E2C()
{
  sub_22DED583C();
  return sub_22DEFAF50();
}

uint64_t sub_22DED2E54@<X0>(uint64_t a1@<X8>)
{
  return NXOperationEvent.init(xpcObject:)(a1);
}

void *sub_22DED2E68()
{
  return NXOperationEvent.xpcObjectRepresentation.getter();
}

uint64_t sub_22DED2E7C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_22DED2E84()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 112);
}

uint64_t sub_22DED2EB4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t type metadata accessor for NXOperationClient.UnifiedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOperationClient.UnifiedEvent);
}

uint64_t *sub_22DED2EC8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  id v18;

  v6 = *v4;
  v4[10] = 0;
  v4[11] = 0;
  *((_OWORD *)v4 + 7) = xmmword_22DEFF4B0;
  *((_BYTE *)v4 + 128) = 1;
  v4[17] = CUNextID64();
  sub_22DEFA59C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v8);
  sub_22DEFAB18();
  sub_22DE8D808(&qword_255DC66C8, v7, MEMORY[0x24BDCEA88]);
  v4[22] = sub_22DEFA950();
  v9 = *(void **)(a4 + 32);
  v4[2] = (uint64_t)v9;
  v10 = *(_QWORD *)(a4 + 40);
  v11 = *(_QWORD *)(a4 + 48);
  v12 = *(_QWORD *)(a4 + 56);
  v13 = *(_QWORD *)(a4 + 64);
  v15 = *(_QWORD *)(a4 + 72);
  v14 = *(_QWORD *)(a4 + 80);
  v16 = *(_BYTE *)(a4 + 88);
  v4[3] = v10;
  v4[4] = v11;
  v4[5] = v12;
  v4[6] = v13;
  v4[7] = v15;
  v4[8] = v14;
  *((_BYTE *)v4 + 72) = v16;
  v17 = *(_QWORD *)(a4 + 120);
  v4[12] = *(_QWORD *)(a4 + 112);
  v4[13] = v17;
  v4[18] = a1;
  v4[19] = a2;
  *((_BYTE *)v4 + 160) = a3;
  v4[21] = *(_QWORD *)(a4 + 136);
  v18 = v9;
  sub_22DE80988(v10, v11, v12, v13, v15, v14, v16);
  swift_bridgeObjectRetain();
  swift_retain();
  return v4;
}

uint64_t sub_22DED3018(uint64_t a1)
{
  uint64_t v1;

  return sub_22DECE644(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_24F9A8D88, (uint64_t)sub_22DED5A40, (void (*)(uint64_t, uint64_t, uint64_t))NXOperationClient.start(parameters:completionHandler:));
}

uint64_t sub_22DED304C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[3];
  char v30;
  _OWORD v31[8];

  v1 = *(uint64_t **)(v0 + 32);
  v2 = (uint64_t *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  v3 = v2[1];
  v20 = *v2;
  v4 = *v1;
  if (qword_255DCF520 != -1)
    swift_once();
  v5 = sub_22DEFA674();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DCF528);
  swift_retain();
  v6 = sub_22DEFA65C();
  v7 = sub_22DEFABA8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_QWORD *)&v31[0] = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = v3;
    v11 = v1[18];
    v12 = v1[19];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v21 = sub_22DE8C348(v11, v12, (uint64_t *)v31);
    sub_22DEFAC2C();
    v3 = v10;
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    *(_QWORD *)&v21 = v1[17];
    sub_22DEFAC2C();
    swift_release();
    _os_log_impl(&dword_22DE7A000, v6, v7, "Start: operationName=%s, operationID=%llu", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v9, -1, -1);
    MEMORY[0x22E321E0C](v8, -1, -1);

  }
  else
  {

    swift_release();
  }
  v22 = 0u;
  v23 = 0u;
  v21 = 0u;
  LOBYTE(v24) = -1;
  memset(v29, 0, sizeof(v29));
  v30 = -1;
  NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v21, (uint64_t)v29, 0, 0, (uint64_t)v31);
  v25 = v31[4];
  v26 = v31[5];
  v27 = v31[6];
  v28 = v31[7];
  v21 = v31[0];
  v22 = v31[1];
  v23 = v31[2];
  v24 = v31[3];
  v13 = (*(uint64_t (**)(__int128 *, _QWORD))(*(_QWORD *)(v4 + 88) + 64))(&v21, *(_QWORD *)(v4 + 80));
  v15 = v14;
  sub_22DE80B6C((uint64_t)v31);
  swift_beginAccess();
  v16 = v1[14];
  v17 = v1[15];
  v1[14] = v13;
  v1[15] = v15;
  sub_22DEA5098(v13, v15);
  sub_22DEA326C(v16, v17);
  v18 = sub_22DE817CC();
  sub_22DE95A00((uint64_t)v1, (uint64_t)&off_24F9A86B8, v13, v15, v18 & 1, v20, v3);
  return sub_22DEA2F04(v13, v15);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_22DED359C(uint64_t a1)
{
  uint64_t v1;

  return sub_22DECE644(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_24F9A8D60, (uint64_t)sub_22DED5A40, (void (*)(uint64_t, uint64_t, uint64_t))NXOperationClient.update(parameters:completionHandler:));
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DED365C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[3];
  char v29;
  _OWORD v30[8];

  v1 = *(uint64_t **)(v0 + 32);
  v2 = (uint64_t *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  v3 = v2[1];
  v19 = *v2;
  v4 = *v1;
  if (qword_255DCF520 != -1)
    swift_once();
  v5 = sub_22DEFA674();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DCF528);
  swift_retain();
  v6 = sub_22DEFA65C();
  v7 = sub_22DEFABA8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_QWORD *)&v30[0] = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = v3;
    v11 = v1[18];
    v12 = v1[19];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v20 = sub_22DE8C348(v11, v12, (uint64_t *)v30);
    sub_22DEFAC2C();
    v3 = v10;
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    *(_QWORD *)&v20 = v1[17];
    sub_22DEFAC2C();
    swift_release();
    _os_log_impl(&dword_22DE7A000, v6, v7, "Update: operationName=%s, operationID=%llu", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v9, -1, -1);
    MEMORY[0x22E321E0C](v8, -1, -1);

  }
  else
  {

    swift_release();
  }
  v21 = 0u;
  v22 = 0u;
  v20 = 0u;
  LOBYTE(v23) = -1;
  memset(v28, 0, sizeof(v28));
  v29 = -1;
  NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)&v20, (uint64_t)v28, 0, 0, (uint64_t)v30);
  v24 = v30[4];
  v25 = v30[5];
  v26 = v30[6];
  v27 = v30[7];
  v20 = v30[0];
  v21 = v30[1];
  v22 = v30[2];
  v23 = v30[3];
  v13 = (*(uint64_t (**)(__int128 *, _QWORD))(*(_QWORD *)(v4 + 88) + 64))(&v20, *(_QWORD *)(v4 + 80));
  v15 = v14;
  sub_22DE80B6C((uint64_t)v30);
  swift_beginAccess();
  v16 = v1[14];
  v17 = v1[15];
  v1[14] = v13;
  v1[15] = v15;
  sub_22DEA5098(v13, v15);
  sub_22DEA326C(v16, v17);
  sub_22DE960CC((uint64_t)v1, (uint64_t)&off_24F9A86B8, v13, v15, v19, v3);
  return sub_22DEA2F04(v13, v15);
}

uint64_t sub_22DED3B8C(uint64_t a1)
{
  return sub_22DECEACC(a1);
}

uint64_t sub_22DED3B94()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DED3BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22DECED90(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), a3, a4);
}

uint64_t sub_22DED3BE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DED3C0C(uint64_t a1)
{
  uint64_t *v1;

  return sub_22DECF694(a1, v1[4], v1[2], v1[3]);
}

BOOL _s5Nexus16NXOperationEventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2;
  int v3;
  id v4;
  int v5;
  char v6;
  char v8;
  void *v10;
  unsigned __int8 v11;
  id v12;

  v2 = *(id *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(id *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a2 + 8))
      goto LABEL_14;
    if (v2)
    {
      if (v4)
      {
        type metadata accessor for NXError();
        sub_22DEA5FBC(v2, 0);
        sub_22DEA5FBC(v4, 0);
        sub_22DEA5FBC(v2, 0);
        sub_22DEA5FBC(v4, 0);
        sub_22DEA5FBC(v2, 0);
        v8 = sub_22DEFAC08();
        sub_22DEA5FD0(v2, 0);
        sub_22DEA5FD0(v4, 0);
        sub_22DEA5FD0(v4, 0);
        sub_22DEA5FD0(v2, 0);
        sub_22DEA5FD0(v2, 0);
        return (v8 & 1) != 0;
      }
      sub_22DEA5FBC(0, 0);
      sub_22DEA5FBC(0, 0);
      sub_22DEA5FBC(v2, 0);
    }
    else
    {
      v12 = v4;
      sub_22DEA5FBC(v4, 0);
      sub_22DEA5FBC(0, 0);
      sub_22DEA5FD0(0, 0);
      sub_22DEA5FD0(v4, 0);
      if (!v4)
        return 1;
    }
    sub_22DEA5FD0(v2, 0);
    v10 = v4;
    v11 = 0;
    goto LABEL_15;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
      sub_22DEA5FBC(v4, 1u);
      sub_22DEA5FBC(v2, 1u);
      v6 = sub_22DEFAC08();
      sub_22DEA5FD0(v2, 1u);
      sub_22DEA5FD0(v4, 1u);
      return v6 & 1;
    }
    goto LABEL_14;
  }
  if (v5 != 2 || v4 != 0)
  {
LABEL_14:
    sub_22DEA5FBC(*(id *)a2, *(_BYTE *)(a2 + 8));
    sub_22DEA5FBC(v2, v3);
    sub_22DEA5FD0(v2, v3);
    v10 = v4;
    v11 = v5;
LABEL_15:
    sub_22DEA5FD0(v10, v11);
    return 0;
  }
  sub_22DEA5FD0(*(id *)a1, 2u);
  sub_22DEA5FD0(0, 2u);
  return 1;
}

unint64_t sub_22DED3E3C()
{
  unint64_t result;

  result = qword_255DCF540;
  if (!qword_255DCF540)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFEAC, &type metadata for NXOperationEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DCF540);
  }
  return result;
}

unint64_t sub_22DED3E80()
{
  unint64_t result;

  result = qword_255DC7020;
  if (!qword_255DC7020)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF8CC, &type metadata for NXOperationEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7020);
  }
  return result;
}

unint64_t sub_22DED3EC4()
{
  unint64_t result;

  result = qword_255DCF548[0];
  if (!qword_255DCF548[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFE5C, &type metadata for NXOperationEvent.RestartedCodingKeys);
    atomic_store(result, qword_255DCF548);
  }
  return result;
}

unint64_t sub_22DED3F08()
{
  unint64_t result;

  result = qword_255DC7028;
  if (!qword_255DC7028)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF78C, &type metadata for NXOperationEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7028);
  }
  return result;
}

uint64_t sub_22DED3F4C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6465646E65 && a2 == 0xE500000000000000;
  if (v3 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574726174736572 && a2 == 0xE900000000000064 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_22DED4088()
{
  unint64_t v0;

  v0 = sub_22DEFAD70();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_22DED40D4()
{
  unint64_t result;

  result = qword_255DC7050;
  if (!qword_255DC7050)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF6EC, &type metadata for NXOperationEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7050);
  }
  return result;
}

unint64_t sub_22DED411C()
{
  unint64_t result;

  result = qword_255DC7058;
  if (!qword_255DC7058)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF804, &type metadata for NXOperationEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7058);
  }
  return result;
}

unint64_t sub_22DED4164()
{
  unint64_t result;

  result = qword_255DC7060;
  if (!qword_255DC7060)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF7DC, &type metadata for NXOperationEvent.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7060);
  }
  return result;
}

unint64_t sub_22DED41AC()
{
  unint64_t result;

  result = qword_255DC7068;
  if (!qword_255DC7068)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF82C, &type metadata for NXOperationEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7068);
  }
  return result;
}

unint64_t sub_22DED41F4()
{
  unint64_t result;

  result = qword_255DC7070;
  if (!qword_255DC7070)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF944, &type metadata for NXOperationEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7070);
  }
  return result;
}

unint64_t sub_22DED423C()
{
  unint64_t result;

  result = qword_255DC7078;
  if (!qword_255DC7078)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFF91C, &type metadata for NXOperationEvent.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7078);
  }
  return result;
}

unint64_t sub_22DED4284()
{
  unint64_t result;

  result = qword_255DC7080;
  if (!qword_255DC7080)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFA0C, &type metadata for NXOperationEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7080);
  }
  return result;
}

unint64_t sub_22DED42CC()
{
  unint64_t result;

  result = qword_255DC7088;
  if (!qword_255DC7088)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFB24, &type metadata for NXOperationEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7088);
  }
  return result;
}

unint64_t sub_22DED4314()
{
  unint64_t result;

  result = qword_255DC7090;
  if (!qword_255DC7090)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFAFC, &type metadata for NXOperationEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7090);
  }
  return result;
}

uint64_t sub_22DED4358()
{
  return 16;
}

__n128 sub_22DED4364(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22DED4370()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for NXOperationClient(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOperationClient);
}

uint64_t method lookup function for NXOperationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXOperationClient.__allocating_init(endpoint:idsServiceID:operationName:restartable:dispatchQueue:xpcEndpoint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of NXOperationClient.__allocating_init(operationName:restartable:reuseClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of NXOperationClient.__allocating_init(endpoint:idsServiceID:operationName:restartable:xpcClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_22DED4444()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22DED444C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_22DED44D0(char *a1, char **a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  char *v12;
  unsigned __int8 v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 9uLL)
    v6 = 9;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v10 = *((unsigned __int8 *)a2 + v6);
    if (v10 >= 2)
    {
      if (v6 <= 3)
        v11 = v6;
      else
        v11 = 4;
      __asm { BR              X13 }
    }
    if (v10 == 1)
    {
      (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      a1[v6] = 1;
    }
    else
    {
      v12 = *a2;
      v13 = *((_BYTE *)a2 + 8);
      sub_22DEA5FBC(v12, v13);
      *(_QWORD *)a1 = v12;
      a1[8] = v13;
      a1[v6] = 0;
    }
  }
  return a1;
}

void sub_22DED4624(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 9)
    v4 = 9;
  v5 = *(unsigned __int8 *)(a1 + v4);
  if (v5 >= 2)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X14 }
  }
  if (v5 == 1)
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  else
    sub_22DEA5FD0(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_22DED470C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  void *v10;
  unsigned __int8 v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 9uLL)
    v6 = 9;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v9 = 1;
  }
  else
  {
    v10 = *(void **)a2;
    v11 = *(_BYTE *)(a2 + 8);
    sub_22DEA5FBC(v10, v11);
    v9 = 0;
    *(_QWORD *)a1 = v10;
    *(_BYTE *)(a1 + 8) = v11;
  }
  *(_BYTE *)(a1 + v6) = v9;
  return a1;
}

uint64_t sub_22DED4820(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  void *v12;
  unsigned __int8 v13;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 9uLL)
      v6 = 9;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = *(unsigned __int8 *)(a1 + v6);
    if (v7 >= 2)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 == 1)
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    else
      sub_22DEA5FD0(*(id *)a1, *(_BYTE *)(a1 + 8));
    v9 = *(unsigned __int8 *)(a2 + v6);
    if (v9 >= 2)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v11 = 1;
    }
    else
    {
      v12 = *(void **)a2;
      v13 = *(_BYTE *)(a2 + 8);
      sub_22DEA5FBC(v12, v13);
      v11 = 0;
      *(_QWORD *)a1 = v12;
      *(_BYTE *)(a1 + 8) = v13;
    }
    *(_BYTE *)(a1 + v6) = v11;
  }
  return a1;
}

uint64_t sub_22DED49E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 9uLL)
    v6 = 9;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    v9 = 1;
  }
  else
  {
    v9 = 0;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  }
  *(_BYTE *)(a1 + v6) = v9;
  return a1;
}

uint64_t sub_22DED4AE8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 9uLL)
      v6 = 9;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = *(unsigned __int8 *)(a1 + v6);
    if (v7 >= 2)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 == 1)
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    else
      sub_22DEA5FD0(*(id *)a1, *(_BYTE *)(a1 + 8));
    v9 = *(unsigned __int8 *)(a2 + v6);
    if (v9 >= 2)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v11 = 1;
    }
    else
    {
      v11 = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    }
    *(_BYTE *)(a1 + v6) = v11;
  }
  return a1;
}

uint64_t sub_22DED4C9C(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = 9;
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) > 9uLL)
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_21:
      v12 = *(unsigned __int8 *)(a1 + v5);
      if (v12 >= 2)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_21;
LABEL_14:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  return (v11 + 255);
}

void sub_22DED4DE0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v6 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 9)
    v6 = 9;
  v7 = v6 + 1;
  if (a3 < 0xFF)
  {
    v8 = 0;
  }
  else if (v7 <= 3)
  {
    v10 = ((a3 + ~(-1 << (8 * v7)) - 254) >> (8 * v7)) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v11 = v9 & ~(-1 << (8 * v7));
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_22DED4FA8(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 9)
    v2 = 9;
  result = *(unsigned __int8 *)(a1 + v2);
  if (result >= 2)
  {
    if (v2 <= 3)
      v4 = v2;
    else
      v4 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void sub_22DED5068(_BYTE *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (a2 > 1)
  {
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t initializeWithCopy for NXOperationDataClientWeak(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for NXOperationDataClientWeak(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for NXOperationDataClientWeak(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for NXOperationDataClientWeak(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for NXOperationDataClientWeak(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NXOperationDataClientWeak(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXOperationDataClientWeak()
{
  return &type metadata for NXOperationDataClientWeak;
}

uint64_t initializeBufferWithCopyOfBuffer for NXOperationEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22DEA5FBC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for NXOperationEvent(uint64_t a1)
{
  sub_22DEA5FD0(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for NXOperationEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22DEA5FBC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_22DEA5FD0(v5, v6);
  return a1;
}

uint64_t assignWithTake for NXOperationEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_22DEA5FD0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXOperationEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXOperationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_22DED53F8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_22DED5410(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NXOperationEvent()
{
  return &type metadata for NXOperationEvent;
}

ValueMetadata *type metadata accessor for NXOperationEvent.EndedCodingKeys()
{
  return &type metadata for NXOperationEvent.EndedCodingKeys;
}

uint64_t _s5Nexus16NXOperationEventO15EndedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22DED548C + 4 * byte_22DEFF6BB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22DED54AC + 4 * byte_22DEFF6C0[v4]))();
}

_BYTE *sub_22DED548C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22DED54AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DED54B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DED54BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DED54C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DED54CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NXOperationEvent.ErrorCodingKeys()
{
  return &type metadata for NXOperationEvent.ErrorCodingKeys;
}

uint64_t storeEnumTagSinglePayload for NXOperationEvent.XPCKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22DED5534 + 4 * byte_22DEFF6CA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22DED5568 + 4 * byte_22DEFF6C5[v4]))();
}

uint64_t sub_22DED5568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DED5570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DED5578);
  return result;
}

uint64_t sub_22DED5584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DED558CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22DED5590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DED5598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXOperationEvent.XPCKeys()
{
  return &type metadata for NXOperationEvent.XPCKeys;
}

uint64_t storeEnumTagSinglePayload for NXOperationEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22DED5600 + 4 * byte_22DEFF6D4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22DED5634 + 4 * byte_22DEFF6CF[v4]))();
}

uint64_t sub_22DED5634(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DED563C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DED5644);
  return result;
}

uint64_t sub_22DED5650(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DED5658);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22DED565C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DED5664(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXOperationEvent.CodingKeys()
{
  return &type metadata for NXOperationEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for NXOperationEvent.RestartedCodingKeys()
{
  return &type metadata for NXOperationEvent.RestartedCodingKeys;
}

unint64_t sub_22DED5694()
{
  unint64_t result;

  result = qword_255DD0350[0];
  if (!qword_255DD0350[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFE34, &type metadata for NXOperationEvent.CodingKeys);
    atomic_store(result, qword_255DD0350);
  }
  return result;
}

unint64_t sub_22DED56DC()
{
  unint64_t result;

  result = qword_255DD0460;
  if (!qword_255DD0460)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFD54, &type metadata for NXOperationEvent.RestartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD0460);
  }
  return result;
}

unint64_t sub_22DED5724()
{
  unint64_t result;

  result = qword_255DD0468[0];
  if (!qword_255DD0468[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFD7C, &type metadata for NXOperationEvent.RestartedCodingKeys);
    atomic_store(result, qword_255DD0468);
  }
  return result;
}

unint64_t sub_22DED576C()
{
  unint64_t result;

  result = qword_255DD04F0;
  if (!qword_255DD04F0)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFDA4, &type metadata for NXOperationEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD04F0);
  }
  return result;
}

unint64_t sub_22DED57B4()
{
  unint64_t result;

  result = qword_255DD04F8[0];
  if (!qword_255DD04F8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFDCC, &type metadata for NXOperationEvent.CodingKeys);
    atomic_store(result, qword_255DD04F8);
  }
  return result;
}

uint64_t sub_22DED57F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DED581C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

unint64_t sub_22DED583C()
{
  unint64_t result;

  result = qword_255DC7098;
  if (!qword_255DC7098)
  {
    result = MEMORY[0x22E321D70](&unk_22DEFFAAC, &type metadata for NXOperationEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7098);
  }
  return result;
}

uint64_t sub_22DED5880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v5 = sub_22DEFAB18();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_22DED5904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for NXOperationClient.UnifiedEvent(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFAB18() - 8) + 80);
  return sub_22DECF938(*(_QWORD **)(v4 + 32), v4 + ((v5 + 40) & ~v5), v6, v7);
}

uint64_t sub_22DED5948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA59C() - 8) + 80);
  return sub_22DECFDA0(v0[4], (uint64_t)v0 + ((v3 + 40) & ~v3), v1, v2);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22DEFA59C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DED5A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA59C() - 8) + 80);
  return sub_22DED002C(*(_QWORD **)(v0 + 32), v0 + ((v1 + 40) & ~v1), v2, v3);
}

uint64_t objectdestroy_46Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DED5AB0(void *a1)
{
  id v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  if (!a1)
    return sub_22DEFAAA0();
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  return sub_22DEFAA94();
}

uint64_t sub_22DED5B58()
{
  uint64_t v0;

  v0 = sub_22DEFA674();
  __swift_allocate_value_buffer(v0, qword_255DD0588);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DD0588);
  sub_22DEF4E10();
  swift_bridgeObjectRetain();
  return sub_22DEFA668();
}

id NXClient.dispatchQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t NXClient.endpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_22DE80988(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22DED5C04@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 96);
  v5 = *(_QWORD *)(v3 + 104);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DE90090;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DE875A4(v4);
}

uint64_t sub_22DED5C8C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DE90090;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 96);
  *(_QWORD *)(v7 + 96) = v6;
  *(_QWORD *)(v7 + 104) = v5;
  sub_22DE875A4(v3);
  return sub_22DE87604(v8);
}

uint64_t NXClient.eventHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 96);
  sub_22DE875A4(v1);
  return v1;
}

uint64_t NXClient.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return sub_22DE87604(v5);
}

uint64_t (*NXClient.eventHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t NXClient.idsServiceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NXClient.xpcClient.getter()
{
  return swift_retain();
}

uint64_t NXClient.__allocating_init(reuseClient:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_22DED8FE0(a1);
  swift_release();
  return v2;
}

uint64_t NXClient.init(reuseClient:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_22DED8FE0(a1);
  swift_release();
  return v1;
}

uint64_t NXClient.__allocating_init(endpoint:dispatchQueue:idsServiceID:xpcEndpoint:)(__int128 *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  NXClient.init(endpoint:dispatchQueue:idsServiceID:xpcEndpoint:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t NXClient.init(endpoint:dispatchQueue:idsServiceID:xpcEndpoint:)(__int128 *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  __int128 v17;
  __int128 v18;

  v6 = v5;
  v17 = a1[1];
  v18 = *a1;
  v11 = *((_QWORD *)a1 + 4);
  v12 = *((_QWORD *)a1 + 5);
  v13 = *((_BYTE *)a1 + 48);
  *(_BYTE *)(v6 + 16) = 0;
  v14 = CUNextID64();
  *(_BYTE *)(v6 + 128) = 0;
  *(_QWORD *)(v6 + 96) = 0;
  *(_QWORD *)(v6 + 104) = 0;
  *(_QWORD *)(v6 + 24) = v14;
  *(_QWORD *)(v6 + 32) = a2;
  *(_OWORD *)(v6 + 40) = v18;
  *(_OWORD *)(v6 + 56) = v17;
  *(_QWORD *)(v6 + 72) = v11;
  *(_QWORD *)(v6 + 80) = v12;
  *(_BYTE *)(v6 + 88) = v13;
  *(_QWORD *)(v6 + 112) = a3;
  *(_QWORD *)(v6 + 120) = a4;
  type metadata accessor for NXXPCClient();
  v15 = a2;
  *(_QWORD *)(v6 + 136) = NXXPCClient.__allocating_init(dispatchQueue:xpcEndpoint:)((uint64_t)a2, a5);
  return v6;
}

uint64_t NXClient.__allocating_init(endpoint:idsServiceID:xpcClient:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  NXClient.init(endpoint:idsServiceID:xpcClient:)(a1, a2, a3, a4);
  return v8;
}

uint64_t NXClient.init(endpoint:idsServiceID:xpcClient:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  id v12;
  __int128 v14;
  __int128 v15;

  v14 = a1[1];
  v15 = *a1;
  v8 = *((_QWORD *)a1 + 4);
  v9 = *((_QWORD *)a1 + 5);
  v10 = *((_BYTE *)a1 + 48);
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = CUNextID64();
  *(_BYTE *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  v11 = *(void **)(a4 + 16);
  *(_QWORD *)(v4 + 32) = v11;
  *(_OWORD *)(v4 + 40) = v15;
  *(_OWORD *)(v4 + 56) = v14;
  *(_QWORD *)(v4 + 72) = v8;
  *(_QWORD *)(v4 + 80) = v9;
  *(_BYTE *)(v4 + 88) = v10;
  *(_QWORD *)(v4 + 112) = a2;
  *(_QWORD *)(v4 + 120) = a3;
  *(_QWORD *)(v4 + 136) = a4;
  v12 = v11;
  return v4;
}

uint64_t NXClient.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_255DD0580 != -1)
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DD0588);
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFAB90();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DE7A000, v3, v4, "deinit", v5, 2u);
    MEMORY[0x22E321E0C](v5, -1, -1);
  }

  sub_22DE92674(v1, 0, nullsub_1, 0);
  sub_22DE809FC(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88));
  sub_22DE87604(*(_QWORD *)(v1 + 96));
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t NXClient.__deallocating_deinit()
{
  NXClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t NXClient.description.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_BYTE *)(v0 + 88);
  sub_22DE80988(v2, v3, v4, v5, v6, v7, v8);
  sub_22DE8D848();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DE809FC(v2, v3, v4, v5, v6, v7, v8);
  return 0x4449746E65696C63;
}

Swift::Void __swiftcall NXClient.activate()()
{
  sub_22DEA7148((uint64_t)sub_22DED90A0, (uint64_t)&block_descriptor_4);
}

void sub_22DED639C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(uint64_t *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[2];
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
  {
    v1 = v0;
    *(_BYTE *)(v0 + 16) = 1;
    if ((*(_BYTE *)(v0 + 128) & 1) != 0)
    {
      LOBYTE(v29) = 8;
      type metadata accessor for NXError();
      v2 = NXError.__allocating_init(_:_:_:)((uint64_t)&v29, 0x6164696C61766E49, 0xEB00000000646574, 0);
      if (qword_255DD0580 != -1)
        swift_once();
      v3 = sub_22DEFA674();
      __swift_project_value_buffer(v3, (uint64_t)qword_255DD0588);
      swift_retain_n();
      v4 = v2;
      v5 = sub_22DEFA65C();
      v6 = sub_22DEFAB9C();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = swift_slowAlloc();
        v8 = swift_slowAlloc();
        v27[0] = v8;
        *(_DWORD *)v7 = 134218498;
        *(_QWORD *)&v29 = *(_QWORD *)(v1 + 24);
        sub_22DEFAC2C();
        *(_WORD *)(v7 + 12) = 2080;
        v9 = *(_BYTE *)(v1 + 88);
        v10 = *(_OWORD *)(v1 + 56);
        v29 = *(_OWORD *)(v1 + 40);
        v30 = v10;
        v31 = *(_OWORD *)(v1 + 72);
        v32 = v9;
        sub_22DE8D848();
        v11 = sub_22DEFAE3C();
        *(_QWORD *)&v29 = sub_22DE8C348(v11, v12, v27);
        sub_22DEFAC2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v7 + 22) = 2080;
        *(_QWORD *)&v29 = v4;
        sub_22DE8D808((unint64_t *)&qword_255DC5ED0, (uint64_t (*)(uint64_t))type metadata accessor for NXError, MEMORY[0x24BDD01A8]);
        v13 = sub_22DEFAEC0();
        *(_QWORD *)&v29 = sub_22DE8C348(v13, v14, v27);
        sub_22DEFAC2C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v5, v6, "### Activate failed: clientID=%llu), endpoint=%s, error=%s", (uint8_t *)v7, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v8, -1, -1);
        MEMORY[0x22E321E0C](v7, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      swift_beginAccess();
      v24 = *(void (**)(uint64_t *))(v1 + 96);
      if (v24)
      {
        v27[0] = (uint64_t)v4;
        v27[1] = 0;
        v28 = 0;
        v4 = v4;
        sub_22DE875A4((uint64_t)v24);
        v24(v27);
        sub_22DE87604((uint64_t)v24);

      }
      v25 = *(_QWORD *)(v1 + 96);
      *(_QWORD *)(v1 + 96) = 0;
      *(_QWORD *)(v1 + 104) = 0;
      sub_22DE87604(v25);
    }
    else
    {
      if (qword_255DD0580 != -1)
        swift_once();
      v15 = sub_22DEFA674();
      __swift_project_value_buffer(v15, (uint64_t)qword_255DD0588);
      swift_retain_n();
      v16 = sub_22DEFA65C();
      v17 = sub_22DEFABA8();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        v27[0] = v19;
        *(_DWORD *)v18 = 134218242;
        *(_QWORD *)&v29 = *(_QWORD *)(v0 + 24);
        sub_22DEFAC2C();
        *(_WORD *)(v18 + 12) = 2080;
        v20 = *(_BYTE *)(v0 + 88);
        v21 = *(_OWORD *)(v0 + 56);
        v29 = *(_OWORD *)(v0 + 40);
        v30 = v21;
        v31 = *(_OWORD *)(v0 + 72);
        v32 = v20;
        sub_22DE8D848();
        v22 = sub_22DEFAE3C();
        *(_QWORD *)&v29 = sub_22DE8C348(v22, v23, v27);
        sub_22DEFAC2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v16, v17, "Activate: clientID=%llu, endpoint=%s", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v19, -1, -1);
        MEMORY[0x22E321E0C](v18, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v26 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_22DE91954(v0, (uint64_t)sub_22DED99F8, v26);
      swift_release_n();
    }
  }
}

uint64_t sub_22DED68DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  void (*v6)(_QWORD *);
  _QWORD v7[2];
  char v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = swift_beginAccess();
  v6 = *(void (**)(_QWORD *))(v1 + 96);
  if (v6)
  {
    v7[0] = v2;
    v7[1] = v3;
    v8 = v4;
    swift_retain();
    v6(v7);
    return sub_22DE87604((uint64_t)v6);
  }
  return result;
}

Swift::Void __swiftcall NXClient.invalidate()()
{
  sub_22DEA7148((uint64_t)sub_22DED90BC, (uint64_t)&block_descriptor_3_1);
}

uint64_t NXClient.sendRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22DED698C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  swift_getAssociatedTypeWitness();
  *v5 = v0;
  v5[1] = sub_22DED6A68;
  return sub_22DEFAE78();
}

uint64_t sub_22DED6A68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22DED6ADC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DED6B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v9 = sub_22DEFAAAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - v11, a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, v12, v9);
  NXClient.sendRequest<A>(_:responseHandler:)(a3, (uint64_t)sub_22DEDA044, v14, a4, a5);
  return swift_release();
}

uint64_t NXClient.sendRequest<A>(_:responseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v6 = v5;
  v27 = a5;
  v28 = a2;
  v29 = a3;
  v9 = sub_22DEFA914();
  v33 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DEFA92C();
  v31 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a4 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(v6 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, a4);
  v19 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject();
  v22 = v27;
  *((_QWORD *)v21 + 2) = a4;
  *((_QWORD *)v21 + 3) = v22;
  *((_QWORD *)v21 + 4) = v6;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v21[v19], v18, a4);
  v23 = &v21[v20];
  v24 = v29;
  *(_QWORD *)v23 = v28;
  *((_QWORD *)v23 + 1) = v24;
  aBlock[4] = sub_22DED93A0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = &block_descriptor_8;
  v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_22DEFA920();
  v34 = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE8CA18();
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v15, v11, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  return swift_release();
}

uint64_t sub_22DED6EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a2;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v10 = sub_22DEFAF08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v32 = (char *)&v30 - v12;
  sub_22DED639C();
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 56);
  v36 = a1;
  v14 = v13(a4, a5);
  v16 = v15;
  v37 = *(_QWORD *)(v5 + 24);
  if (qword_255DD0580 != -1)
    swift_once();
  v17 = sub_22DEFA674();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_255DD0588);
  swift_bridgeObjectRetain_n();
  v35 = v18;
  v19 = sub_22DEFA65C();
  v20 = sub_22DEFABA8();
  v21 = os_log_type_enabled(v19, v20);
  v33 = v11;
  v34 = v10;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v31 = a3;
    v23 = v22;
    v24 = swift_slowAlloc();
    v40 = v24;
    *(_DWORD *)v23 = 136315394;
    swift_bridgeObjectRetain();
    v39 = sub_22DE8C348(v14, v16, &v40);
    v30 = a5;
    sub_22DEFAC2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2048;
    v25 = v37;
    v39 = v37;
    a5 = v30;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v19, v20, "Send request: requestName=%s, clientID=%llu", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v24, -1, -1);
    v26 = v23;
    a3 = v31;
    MEMORY[0x22E321E0C](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v25 = v37;
  }
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a4;
  v27[3] = a5;
  v27[4] = v14;
  v27[5] = v16;
  v28 = v38;
  v27[6] = v25;
  v27[7] = v28;
  v27[8] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22DE96FD0(v36, v25, (uint64_t)sub_22DED9F94, (uint64_t)v27, a4, a5);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DED73F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a4;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v11 = sub_22DEFAF08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (void **)((char *)&v34 - v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v34 - v13, a1, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = *v14;
    if (qword_255DD0580 != -1)
      swift_once();
    v16 = sub_22DEFA674();
    __swift_project_value_buffer(v16, (uint64_t)qword_255DD0588);
    swift_bridgeObjectRetain();
    v17 = v15;
    swift_bridgeObjectRetain();
    v18 = v15;
    v19 = sub_22DEFA65C();
    v20 = sub_22DEFAB9C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v35 = a6;
      v22 = v21;
      v23 = swift_slowAlloc();
      v37 = a1;
      v24 = v23;
      v39 = v23;
      *(_DWORD *)v22 = 136315650;
      swift_bridgeObjectRetain();
      v38 = sub_22DE8C348(a2, a3, &v39);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2048;
      v38 = v36;
      sub_22DEFAC2C();
      *(_WORD *)(v22 + 22) = 2080;
      swift_getErrorValue();
      v25 = sub_22DEFAEC0();
      v38 = sub_22DE8C348(v25, v26, &v39);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, v19, v20, "### Send request failed: requestName=%s, clientID=%llu, error=%s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      v27 = v24;
      a1 = v37;
      MEMORY[0x22E321E0C](v27, -1, -1);
      MEMORY[0x22E321E0C](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v37 = a1;
    if (qword_255DD0580 != -1)
      swift_once();
    v28 = sub_22DEFA674();
    __swift_project_value_buffer(v28, (uint64_t)qword_255DD0588);
    swift_bridgeObjectRetain_n();
    v29 = sub_22DEFA65C();
    v30 = sub_22DEFABA8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v39 = v34;
      *(_DWORD *)v31 = 136315394;
      v35 = a6;
      swift_bridgeObjectRetain();
      v38 = sub_22DE8C348(a2, a3, &v39);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2048;
      v38 = v36;
      sub_22DEFAC2C();
      _os_log_impl(&dword_22DE7A000, v29, v30, "Received response: requestName=%s, clientID=%llu", (uint8_t *)v31, 0x16u);
      v32 = v34;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v32, -1, -1);
      MEMORY[0x22E321E0C](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a1 = v37;
    (*(void (**)(void **, uint64_t))(v12 + 8))(v14, v11);
  }
  return a5(a1);
}

uint64_t NXClient.tryPassword(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22DED78EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_22DED799C;
  return sub_22DEFAE78();
}

uint64_t sub_22DED799C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DED7A08()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DED7A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  NXClient.tryPassword(_:completionHandler:)(a3, a4, (uint64_t)sub_22DED5AB0, v11);
  return swift_release();
}

uint64_t NXClient.tryPassword(_:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_22DEFA914();
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22DEFA92C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v5 + 32);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v5;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a4;
  aBlock[4] = sub_22DED9434;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DE87E38;
  aBlock[3] = &block_descriptor_16;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22DEFA920();
  v22 = MEMORY[0x24BEE4AF8];
  sub_22DE8D808((unint64_t *)&unk_255DC6480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC61E8);
  sub_22DE8CA18();
  sub_22DEFAC5C();
  MEMORY[0x22E321590](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_22DED7D34()
{
  return NXClient.description.getter();
}

void NXClientEvent.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_22DED7D90()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  char v4[14];
  __int16 v5;

  if (!v1)
    return 0x73203A6465646E45;
  strcpy(v4, "Ended: error=");
  v5 = -4864;
  swift_getErrorValue();
  sub_22DEA4E94(v1, v0, v2);
  sub_22DEA4E94(v1, v0, v2);
  sub_22DEFAEC0();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEA4EB8(v1, v0, v2);
  sub_22DEA4EB8(v1, v0, v2);
  return *(_QWORD *)v4;
}

uint64_t NXClientEvent.init(xpcObject:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  Swift::String v3;
  Swift::String_optional v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  const char *v11;
  unint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  char v15;
  uint64_t (*v16)(uint64_t);
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  Swift::String_optional v21;
  char v22;

  swift_getObjectType();
  v3._countAndFlagsBits = 1701869940;
  v3._object = (void *)0xE400000000000000;
  v4 = OS_xpc_object.string(_:)(v3);
  if (v4.value._object)
  {
    if (v4.value._countAndFlagsBits == 0x64657472617473 && v4.value._object == (void *)0xE700000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v6 = 0;
      v7 = 0;
      v8 = 0x80;
LABEL_6:
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 16) = v8;
      return result;
    }
    if (v4.value._countAndFlagsBits == 0x6465646E65 && v4.value._object == (void *)0xE500000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      v6 = (uint64_t)(id)CUXPCDecodeNSErrorIfNeeded();
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v7 = 0;
      v8 = 0;
      goto LABEL_6;
    }
    if (v4.value._countAndFlagsBits == 0x726F727265 && v4.value._object == (void *)0xE500000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      v9 = (id)CUXPCDecodeNSErrorIfNeeded();
      if (v9)
      {
        v6 = (uint64_t)v9;
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        v7 = 0;
        v8 = 32;
        goto LABEL_6;
      }
      type metadata accessor for NXError();
      LOBYTE(v18) = 2;
      v10 = 0xD00000000000001ALL;
      v11 = "Client error without error";
    }
    else
    {
      if (v4.value._countAndFlagsBits == 0x6574726174736572 && v4.value._object == (void *)0xE900000000000064
        || (sub_22DEFAE54() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        v7 = 0;
        v8 = 0x80;
        v6 = 1;
        goto LABEL_6;
      }
      if (v4.value._countAndFlagsBits == 0xD000000000000015 && v4.value._object == (void *)0x800000022DF03500
        || (sub_22DEFAE54() & 1) != 0)
      {
        sub_22DEFA4A0();
        v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB268];
        sub_22DED95B0();
        sub_22DE8D808(&qword_255DC6680, v14, MEMORY[0x24BDCB230]);
        v21.value._countAndFlagsBits = default argument 1 of OS_xpc_object.object<A, B>(key:decoder:)();
        OS_xpc_object.object<A, B>(key:decoder:)((uint64_t)&type metadata for NXAuthenticationRequestInfo, (uint64_t)&v18);
        swift_release();
        if (v1)
          goto LABEL_21;
        v15 = v18;
        if (v18 != 2)
        {
          v17 = v20;
          v7 = v19;
          swift_bridgeObjectRelease();
          result = swift_unknownObjectRelease();
          v6 = v15 & 1;
          v8 = v17 | 0x40;
          goto LABEL_6;
        }
        type metadata accessor for NXError();
        LOBYTE(v18) = 2;
        v10 = 0xD00000000000001ELL;
        v11 = "No authentication request info";
      }
      else
      {
        if ((v4.value._countAndFlagsBits != 0xD000000000000017 || v4.value._object != (void *)0x800000022DF02B10)
          && (sub_22DEFAE54() & 1) == 0)
        {
          type metadata accessor for NXError();
          v22 = 2;
          v18 = 0;
          v19 = 0xE000000000000000;
          sub_22DEFAC98();
          sub_22DEFAA10();
          v21 = v4;
          sub_22DEFAE48();
          v10 = 0;
          v12 = 0xE000000000000000;
          v13 = &v22;
          goto LABEL_20;
        }
        sub_22DEFA4A0();
        v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB268];
        sub_22DEA95EC();
        sub_22DE8D808(&qword_255DC6680, v16, MEMORY[0x24BDCB230]);
        v21.value._countAndFlagsBits = default argument 1 of OS_xpc_object.object<A, B>(key:decoder:)();
        OS_xpc_object.object<A, B>(key:decoder:)((uint64_t)&type metadata for NXAuthenticationCompletedInfo, (uint64_t)&v18);
        if (v1)
        {
          swift_release();
          goto LABEL_21;
        }
        swift_release();
        v6 = v18;
        if (v18 != 1)
        {
          swift_bridgeObjectRelease();
          result = swift_unknownObjectRelease();
          v7 = 0;
          v8 = 96;
          goto LABEL_6;
        }
        type metadata accessor for NXError();
        LOBYTE(v18) = 2;
        v10 = 0xD000000000000020;
        v11 = "No authentication completed info";
      }
    }
    v12 = (unint64_t)(v11 - 32) | 0x8000000000000000;
    v13 = (char *)&v18;
LABEL_20:
    NXError.__allocating_init(_:_:_:)((uint64_t)v13, v10, v12, 0);
    swift_willThrow();
LABEL_21:
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  type metadata accessor for NXError();
  LOBYTE(v18) = 2;
  NXError.__allocating_init(_:_:_:)((uint64_t)&v18, 0xD000000000000019, 0x800000022DF03540, 0);
  swift_willThrow();
  return swift_unknownObjectRelease();
}

uint64_t sub_22DED8604(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22DED863C + 4 * byte_22DEFFF75[a1]))(0xD000000000000015, 0x800000022DF03500);
}

uint64_t sub_22DED863C()
{
  return 0x64657472617473;
}

uint64_t sub_22DED8654()
{
  return 0x6465646E65;
}

uint64_t sub_22DED8668()
{
  return 0x726F727265;
}

uint64_t sub_22DED867C()
{
  return 0x6574726174736572;
}

uint64_t sub_22DED8698()
{
  return 1701869940;
}

uint64_t sub_22DED86A8(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_22DED86C0()
{
  return 1868983913;
}

void NXClientEvent.xpcObjectRepresentation.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  xpc_dictionary_create_empty();
  __asm { BR              X10 }
}

void *sub_22DED8720(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void *v26;
  uint64_t v27;
  void *v28;
  unsigned __int8 v29;
  id v30;
  id v31;
  void *v32;

  v30 = v28;
  xpc_dictionary_set_string(v26, "type", "ended");
  if (v28)
  {
    v31 = v28;
    v32 = (void *)sub_22DEFA524();
    CUXPCEncodeNSErrorStd(v26, v32);
    sub_22DEA4EB8(v28, v27, v29);

    sub_22DEA4EB8(v28, v27, v29);
  }
  return v26;
}

uint64_t sub_22DED89E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22DED8A20 + 4 * byte_22DEFFF82[a1]))(0xD000000000000015, 0x800000022DF03500);
}

uint64_t sub_22DED8A20()
{
  return 0x64657472617473;
}

uint64_t sub_22DED8A38()
{
  return 0x6465646E65;
}

uint64_t sub_22DED8A4C()
{
  return 0x726F727265;
}

uint64_t sub_22DED8A60()
{
  return 0x6574726174736572;
}

uint64_t sub_22DED8A7C()
{
  return 1701869940;
}

uint64_t sub_22DED8A8C(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_22DED8AA4()
{
  return 1868983913;
}

void sub_22DED8AB4(char *a1)
{
  sub_22DED8AC0(*a1);
}

void sub_22DED8AC0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22DED8B0C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22DED8BBC + 4 * byte_22DEFFF92[a2]))(0x64657472617473);
}

uint64_t sub_22DED8BBC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64657472617473 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_22DED8CC8()
{
  char *v0;

  sub_22DED8DD0(0, *v0);
}

void sub_22DED8CD4(uint64_t a1)
{
  char *v1;

  sub_22DED8CDC(a1, *v1);
}

void sub_22DED8CDC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22DED8D20()
{
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

void sub_22DED8DC8(uint64_t a1)
{
  char *v1;

  sub_22DED8DD0(a1, *v1);
}

void sub_22DED8DD0(uint64_t a1, char a2)
{
  sub_22DEFAED8();
  __asm { BR              X10 }
}

uint64_t sub_22DED8E24()
{
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DED8EE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DED9638();
  *a1 = result;
  return result;
}

uint64_t sub_22DED8F14@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22DED8604(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22DED8F3C()
{
  unsigned __int8 *v0;

  return sub_22DED89E8(*v0);
}

uint64_t sub_22DED8F44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DED9638();
  *a1 = result;
  return result;
}

uint64_t sub_22DED8F68()
{
  sub_22DED9990();
  return sub_22DEFAF44();
}

uint64_t sub_22DED8F90()
{
  sub_22DED9990();
  return sub_22DEFAF50();
}

uint64_t sub_22DED8FB8@<X0>(uint64_t a1@<X8>)
{
  return NXClientEvent.init(xpcObject:)(a1);
}

void sub_22DED8FCC()
{
  NXClientEvent.xpcObjectRepresentation.getter();
}

uint64_t sub_22DED8FE0(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  id v12;

  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = CUNextID64();
  *(_BYTE *)(v1 + 128) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 104) = 0;
  v3 = *(void **)(a1 + 32);
  *(_QWORD *)(v1 + 32) = v3;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = v5;
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 64) = v7;
  *(_QWORD *)(v1 + 72) = v8;
  *(_QWORD *)(v1 + 80) = v9;
  *(_BYTE *)(v1 + 88) = v10;
  v11 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(v1 + 112) = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(v1 + 120) = v11;
  *(_QWORD *)(v1 + 136) = *(_QWORD *)(a1 + 136);
  v12 = v3;
  sub_22DE80988(v4, v5, v6, v7, v8, v9, v10);
  swift_bridgeObjectRetain();
  swift_retain();
  return v1;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_22DED90BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((*(_BYTE *)(v0 + 128) & 1) == 0)
  {
    *(_BYTE *)(v0 + 128) = 1;
    if (qword_255DD0580 != -1)
      swift_once();
    v1 = sub_22DEFA674();
    __swift_project_value_buffer(v1, (uint64_t)qword_255DD0588);
    swift_retain_n();
    v2 = sub_22DEFA65C();
    v3 = sub_22DEFABA8();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = swift_slowAlloc();
      v5 = swift_slowAlloc();
      v9 = v5;
      *(_DWORD *)v4 = 134218242;
      sub_22DEFAC2C();
      *(_WORD *)(v4 + 12) = 2080;
      sub_22DE8D848();
      v6 = sub_22DEFAE3C();
      sub_22DE8C348(v6, v7, &v9);
      sub_22DEFAC2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DE7A000, v2, v3, "Invalidate: clientID=%llu, endpoint=%s", (uint8_t *)v4, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v5, -1, -1);
      MEMORY[0x22E321E0C](v4, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v8 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_22DE92674(v0, 1, (uint64_t (*)(_QWORD))sub_22DEDA0CC, v8);
    swift_release_n();
  }
}

uint64_t sub_22DED9308(uint64_t a1)
{
  uint64_t *v1;

  return sub_22DED6B10(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_22DED9314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DED93A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_22DED6EC0(v0 + v3, *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DED93F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_22DED7A3C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_22DED9400()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DED9434()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  sub_22DED639C();
  if (qword_255DD0580 != -1)
    swift_once();
  v6 = sub_22DEFA674();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DD0588);
  v7 = sub_22DEFA65C();
  v8 = sub_22DEFABA8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_22DE7A000, v7, v8, "Try password", v9, 2u);
    MEMORY[0x22E321E0C](v9, -1, -1);
  }

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v4;
  *(_QWORD *)(v10 + 24) = v5;
  swift_retain();
  sub_22DE92E84(v1, v2, v3, (uint64_t)sub_22DE90090, v10);
  return swift_release();
}

unint64_t sub_22DED956C()
{
  unint64_t result;

  result = qword_255DC70B8;
  if (!qword_255DC70B8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationRequestInfo, &type metadata for NXAuthenticationRequestInfo);
    atomic_store(result, (unint64_t *)&qword_255DC70B8);
  }
  return result;
}

unint64_t sub_22DED95B0()
{
  unint64_t result;

  result = qword_255DC70C0;
  if (!qword_255DC70C0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationRequestInfo, &type metadata for NXAuthenticationRequestInfo);
    atomic_store(result, (unint64_t *)&qword_255DC70C0);
  }
  return result;
}

unint64_t sub_22DED95F4()
{
  unint64_t result;

  result = qword_255DC70C8;
  if (!qword_255DC70C8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationRequestInfo, &type metadata for NXAuthenticationRequestInfo);
    atomic_store(result, (unint64_t *)&qword_255DC70C8);
  }
  return result;
}

uint64_t sub_22DED9638()
{
  unint64_t v0;

  v0 = sub_22DEFAD70();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

unint64_t sub_22DED9684()
{
  unint64_t result;

  result = qword_255DC70D0;
  if (!qword_255DC70D0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00004, &type metadata for NXClientEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC70D0);
  }
  return result;
}

unint64_t sub_22DED96CC()
{
  unint64_t result;

  result = qword_255DC70D8;
  if (!qword_255DC70D8)
  {
    result = MEMORY[0x22E321D70](&unk_22DF0011C, &type metadata for NXClientEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC70D8);
  }
  return result;
}

unint64_t sub_22DED9714()
{
  unint64_t result;

  result = qword_255DC70E0;
  if (!qword_255DC70E0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF000F4, &type metadata for NXClientEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC70E0);
  }
  return result;
}

uint64_t type metadata accessor for NXClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for NXClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXClient.__allocating_init(reuseClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of NXClient.__allocating_init(endpoint:dispatchQueue:idsServiceID:xpcEndpoint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of NXClient.__allocating_init(endpoint:idsServiceID:xpcClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

void destroy for NXClientEvent(uint64_t a1)
{
  sub_22DEA4EB8(*(id *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Nexus13NXClientEventOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEA4E94(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NXClientEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEA4E94(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_22DEA4EB8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NXClientEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_22DEA4EB8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for NXClientEvent()
{
  return &type metadata for NXClientEvent;
}

uint64_t storeEnumTagSinglePayload for NXClientEvent.XPCKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22DED98EC + 4 * byte_22DEFFFAF[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22DED9920 + 4 * byte_22DEFFFAA[v4]))();
}

uint64_t sub_22DED9920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DED9928(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DED9930);
  return result;
}

uint64_t sub_22DED993C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DED9944);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22DED9948(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DED9950(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXClientEvent.XPCKeys()
{
  return &type metadata for NXClientEvent.XPCKeys;
}

uint64_t sub_22DED996C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_22DED9990()
{
  unint64_t result;

  result = qword_255DC71D0;
  if (!qword_255DC71D0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF000A4, &type metadata for NXClientEvent.XPCKeys);
    atomic_store(result, (unint64_t *)&qword_255DC71D0);
  }
  return result;
}

uint64_t sub_22DED99D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DED99F8(void *a1)
{
  uint64_t result;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t *);
  id v28;
  uint64_t v29;
  void (*v30)(uint64_t *);
  uint64_t v31[2];
  uint64_t v32;
  uint64_t v33[2];
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if (a1)
    {
      v4 = a1;
      if (qword_255DD0580 != -1)
        swift_once();
      v5 = sub_22DEFA674();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DD0588);
      swift_retain_n();
      v6 = a1;
      v7 = a1;
      v8 = sub_22DEFA65C();
      v9 = sub_22DEFAB9C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v33[0] = v11;
        *(_DWORD *)v10 = 134218498;
        *(_QWORD *)&v35 = *(_QWORD *)(v3 + 24);
        sub_22DEFAC2C();
        *(_WORD *)(v10 + 12) = 2080;
        v12 = *(_BYTE *)(v3 + 88);
        v13 = *(_OWORD *)(v3 + 56);
        v35 = *(_OWORD *)(v3 + 40);
        v36 = v13;
        v37 = *(_OWORD *)(v3 + 72);
        v38 = v12;
        sub_22DE8D848();
        v14 = sub_22DEFAE3C();
        *(_QWORD *)&v35 = sub_22DE8C348(v14, v15, v33);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v10 + 22) = 2080;
        swift_getErrorValue();
        v16 = sub_22DEFAEC0();
        *(_QWORD *)&v35 = sub_22DE8C348(v16, v17, v33);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v8, v9, "### Activate failed: clientID=%llu, endpoint=%s, error=%s", (uint8_t *)v10, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        MEMORY[0x22E321E0C](v10, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      swift_beginAccess();
      v27 = *(void (**)(uint64_t *))(v3 + 96);
      if (v27)
      {
        v33[0] = (uint64_t)a1;
        v33[1] = 0;
        v34 = 0;
        v28 = a1;
        sub_22DE875A4((uint64_t)v27);
        v27(v33);
        sub_22DE87604((uint64_t)v27);

      }
      v29 = *(_QWORD *)(v3 + 96);
      *(_QWORD *)(v3 + 96) = 0;
      *(_QWORD *)(v3 + 104) = 0;
    }
    else
    {
      if (qword_255DD0580 != -1)
        swift_once();
      v18 = sub_22DEFA674();
      __swift_project_value_buffer(v18, (uint64_t)qword_255DD0588);
      swift_retain_n();
      v19 = sub_22DEFA65C();
      v20 = sub_22DEFABA8();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v31[0] = v22;
        *(_DWORD *)v21 = 134218242;
        *(_QWORD *)&v35 = *(_QWORD *)(v3 + 24);
        sub_22DEFAC2C();
        *(_WORD *)(v21 + 12) = 2080;
        v23 = *(_BYTE *)(v3 + 88);
        v24 = *(_OWORD *)(v3 + 56);
        v35 = *(_OWORD *)(v3 + 40);
        v36 = v24;
        v37 = *(_OWORD *)(v3 + 72);
        v38 = v23;
        sub_22DE8D848();
        v25 = sub_22DEFAE3C();
        *(_QWORD *)&v35 = sub_22DE8C348(v25, v26, v31);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_22DE7A000, v19, v20, "Activated: clientID=%llu, endpoint=%s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v22, -1, -1);
        MEMORY[0x22E321E0C](v21, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      swift_beginAccess();
      v30 = *(void (**)(uint64_t *))(v3 + 96);
      if (!v30)
        return swift_release();
      v31[0] = 0;
      v31[1] = 0;
      LOBYTE(v32) = 0x80;
      swift_retain();
      v30(v31);
      v29 = (uint64_t)v30;
    }
    sub_22DE87604(v29);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DED9F04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DED9F68()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DED9F94(uint64_t a1)
{
  uint64_t v1;

  return sub_22DED73F4(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(uint64_t (**)(uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_22DED9FA8()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v1 = sub_22DEFAAAC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DEDA044(uint64_t a1)
{
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v2 = sub_22DEFAAAC();
  return sub_22DECB934(a1, v2);
}

uint64_t sub_22DEDA0CC(void *a1)
{
  uint64_t result;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t *);
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  uint64_t v34[2];
  char v35;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if (a1)
    {
      v4 = a1;
      if (qword_255DD0580 != -1)
        swift_once();
      v5 = sub_22DEFA674();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DD0588);
      swift_retain_n();
      v6 = a1;
      v7 = a1;
      v8 = sub_22DEFA65C();
      v9 = sub_22DEFAB9C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v34[0] = v11;
        *(_DWORD *)v10 = 134218498;
        *(_QWORD *)&v30 = *(_QWORD *)(v3 + 24);
        sub_22DEFAC2C();
        *(_WORD *)(v10 + 12) = 2080;
        v12 = *(_BYTE *)(v3 + 88);
        v13 = *(_OWORD *)(v3 + 56);
        v30 = *(_OWORD *)(v3 + 40);
        v31 = v13;
        v32 = *(_OWORD *)(v3 + 72);
        v33 = v12;
        sub_22DE8D848();
        v14 = sub_22DEFAE3C();
        sub_22DE8C348(v14, v15, v34);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v10 + 22) = 2080;
        swift_getErrorValue();
        v16 = sub_22DEFAEC0();
        *(_QWORD *)&v30 = sub_22DE8C348(v16, v17, v34);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v8, v9, "### Invalidate failed: clientID=%llu, endpoint=%s, error=%s", (uint8_t *)v10, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v11, -1, -1);
        MEMORY[0x22E321E0C](v10, -1, -1);

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_255DD0580 != -1)
        swift_once();
      v18 = sub_22DEFA674();
      __swift_project_value_buffer(v18, (uint64_t)qword_255DD0588);
      swift_retain_n();
      v19 = sub_22DEFA65C();
      v20 = sub_22DEFABA8();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v29 = v22;
        *(_DWORD *)v21 = 134218242;
        *(_QWORD *)&v30 = *(_QWORD *)(v3 + 24);
        sub_22DEFAC2C();
        *(_WORD *)(v21 + 12) = 2080;
        v23 = *(_BYTE *)(v3 + 88);
        v24 = *(_OWORD *)(v3 + 56);
        v30 = *(_OWORD *)(v3 + 40);
        v31 = v24;
        v32 = *(_OWORD *)(v3 + 72);
        v33 = v23;
        sub_22DE8D848();
        v25 = sub_22DEFAE3C();
        *(_QWORD *)&v30 = sub_22DE8C348(v25, v26, &v29);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_22DE7A000, v19, v20, "Invalidated: clientID=%llu, endpoint=%s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v22, -1, -1);
        MEMORY[0x22E321E0C](v21, -1, -1);
      }
      else
      {
        swift_release_n();
      }

    }
    swift_beginAccess();
    v27 = *(void (**)(uint64_t *))(v3 + 96);
    if (v27)
    {
      v34[0] = 0;
      v34[1] = 0;
      v35 = 0;
      swift_retain();
      v27(v34);
      sub_22DE87604((uint64_t)v27);
      v28 = *(_QWORD *)(v3 + 96);
    }
    else
    {
      v28 = 0;
    }
    *(_QWORD *)(v3 + 96) = 0;
    *(_QWORD *)(v3 + 104) = 0;
    sub_22DE87604(v28);
    return swift_release();
  }
  return result;
}

uint64_t sub_22DEDA5B8()
{
  return NXRequestMessage.context.getter();
}

uint64_t sub_22DEDA5D8()
{
  return static NXRequestMessage.decode(data:context:)();
}

uint64_t static NXRequestMessage.decode(data:context:)()
{
  return sub_22DECA8EC();
}

uint64_t sub_22DEDA600()
{
  return NXRequestMessage.encode(context:)();
}

uint64_t NXRequestMessage.encode(context:)()
{
  return sub_22DECA998();
}

double _s5Nexus16NXRequestMessagePAAE7contextAA16NXMessageContextVvg_0@<D0>(uint64_t a1@<X8>)
{
  double result;
  _OWORD v2[3];
  char v3;
  _OWORD v4[3];
  char v5;

  memset(v4, 0, sizeof(v4));
  v5 = -1;
  memset(v2, 0, sizeof(v2));
  v3 = -1;
  *(_QWORD *)&result = NXMessageContext.init(localEndpoint:remoteEndpoint:senderBundleID:)((uint64_t)v4, (uint64_t)v2, 0, 0, a1).n128_u64[0];
  return result;
}

uint64_t static NXResponseMessage.decode(data:context:)()
{
  return sub_22DECA8EC();
}

uint64_t NXResponseMessage.encode(context:)()
{
  return sub_22DECA998();
}

uint64_t sub_22DEDA6A4()
{
  sub_22DEDB794();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDA6CC()
{
  sub_22DEDB794();
  return sub_22DEFAF50();
}

uint64_t NXNoResponseMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC71D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEDB794();
  sub_22DEFAF2C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t NXNoResponseMessage.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_22DEDA7DC()
{
  sub_22DEFA4A0();
  swift_allocObject();
  sub_22DEFA494();
  sub_22DEDBB18();
  sub_22DEFA488();
  return swift_release();
}

uint64_t sub_22DEDA878()
{
  uint64_t v0;

  sub_22DEFA4C4();
  swift_allocObject();
  sub_22DEFA4B8();
  sub_22DEDBB5C();
  v0 = sub_22DEFA4AC();
  swift_release();
  return v0;
}

uint64_t sub_22DEDA8F4(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_22DEDA918(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC71D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEDB794();
  sub_22DEFAF2C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22DEDA9DC()
{
  return sub_22DEDB84C();
}

uint64_t NXRequestHandlerEx.requestName.getter()
{
  return sub_22DEDB84C();
}

uint64_t sub_22DEDAA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v15;
  *v15 = v8;
  v15[1] = sub_22DEC23C8;
  return NXRequestHandlerEx.handleRequest(name:data:context:)(a1, v16, v17, a4, a5, a6, a7, a8);
}

uint64_t NXRequestHandlerEx.handleRequest(name:data:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)(v9 + 312) = a8;
  *(_QWORD *)(v9 + 320) = v8;
  *(_QWORD *)(v9 + 296) = a6;
  *(_QWORD *)(v9 + 304) = a7;
  *(_QWORD *)(v9 + 280) = a4;
  *(_QWORD *)(v9 + 288) = a5;
  *(_QWORD *)(v9 + 272) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v9 + 328) = AssociatedTypeWitness;
  *(_QWORD *)(v9 + 336) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v9 + 344) = swift_task_alloc();
  v12 = a6[5];
  *(_OWORD *)(v9 + 80) = a6[4];
  *(_OWORD *)(v9 + 96) = v12;
  v13 = a6[7];
  *(_OWORD *)(v9 + 112) = a6[6];
  *(_OWORD *)(v9 + 128) = v13;
  v14 = a6[1];
  *(_OWORD *)(v9 + 16) = *a6;
  *(_OWORD *)(v9 + 32) = v14;
  v15 = a6[3];
  *(_OWORD *)(v9 + 48) = a6[2];
  *(_OWORD *)(v9 + 64) = v15;
  return swift_task_switch();
}

uint64_t sub_22DEDAB68()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t AssociatedConformanceWitness;
  int *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _QWORD *v16;
  int *v18;
  _OWORD v19[9];

  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 288);
  v2 = *(_OWORD **)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = v2[5];
  v19[4] = v2[4];
  v19[5] = v5;
  v6 = v2[7];
  v19[6] = v2[6];
  v19[7] = v6;
  v7 = v2[1];
  v19[0] = *v2;
  v19[1] = v7;
  v8 = v2[3];
  v19[2] = v2[2];
  v19[3] = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v4, v3, v19, v1, AssociatedConformanceWitness);
  v10 = (int *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 312) + 24))(*(_QWORD *)(v0 + 304));
  *(_QWORD *)(v0 + 352) = v11;
  v12 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v12;
  v13 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v13;
  v14 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 160) = v14;
  v15 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v15;
  v18 = (int *)((char *)v10 + *v10);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v16;
  *v16 = v0;
  v16[1] = sub_22DEDACB8;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t))v18)(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 344), v0 + 144);
}

uint64_t sub_22DEDACB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEDAD2C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEDAD74()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t (*NXAsyncRequestHandler.handler.getter(uint64_t a1, uint64_t a2))(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22DEDB830;
}

uint64_t sub_22DEDAE7C(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  v43 = a7;
  v40 = a5;
  v44 = a3;
  v45 = a4;
  v42 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v39 = AssociatedTypeWitness;
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v38 - v13;
  v15 = *(_QWORD *)(a6 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v20;
  v21 = a2[5];
  v50 = a2[4];
  v51 = v21;
  v22 = a2[7];
  v52 = a2[6];
  v53 = v22;
  v23 = a2[1];
  v46 = *a2;
  v47 = v23;
  v24 = a2[3];
  v48 = a2[2];
  v49 = v24;
  v25 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v40, a6);
  v26 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v42, AssociatedTypeWitness);
  v27 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v28 = (v16 + v27 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v29 = (char *)swift_allocObject();
  *((_QWORD *)v29 + 2) = 0;
  *((_QWORD *)v29 + 3) = 0;
  v30 = v43;
  *((_QWORD *)v29 + 4) = a6;
  *((_QWORD *)v29 + 5) = v30;
  v31 = v45;
  *((_QWORD *)v29 + 6) = v44;
  *((_QWORD *)v29 + 7) = v31;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v29[v27], v17, a6);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v29[v28], v26, v39);
  v32 = &v29[(v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8];
  v33 = v51;
  *((_OWORD *)v32 + 4) = v50;
  *((_OWORD *)v32 + 5) = v33;
  v34 = v53;
  *((_OWORD *)v32 + 6) = v52;
  *((_OWORD *)v32 + 7) = v34;
  v35 = v47;
  *(_OWORD *)v32 = v46;
  *((_OWORD *)v32 + 1) = v35;
  v36 = v49;
  *((_OWORD *)v32 + 2) = v48;
  *((_OWORD *)v32 + 3) = v36;
  swift_retain();
  sub_22DE80C44((uint64_t)&v46);
  sub_22DEB34C8((uint64_t)v41, (uint64_t)&unk_255DC7210, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_22DEDB0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[23] = v11;
  v8[24] = v12;
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v9 = sub_22DEFAF08();
  v8[25] = v9;
  v8[26] = *(_QWORD *)(v9 - 8);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEDB1F8()
{
  uint64_t v0;
  __int128 *v1;
  int *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  int *v12;

  v1 = *(__int128 **)(v0 + 176);
  v2 = (int *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 192) + 16))(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(v0 + 232) = v3;
  v4 = v1[3];
  v6 = *v1;
  v5 = v1[1];
  *(_OWORD *)(v0 + 48) = v1[2];
  *(_OWORD *)(v0 + 64) = v4;
  *(_OWORD *)(v0 + 16) = v6;
  *(_OWORD *)(v0 + 32) = v5;
  v7 = v1[7];
  v9 = v1[4];
  v8 = v1[5];
  *(_OWORD *)(v0 + 112) = v1[6];
  *(_OWORD *)(v0 + 128) = v7;
  *(_OWORD *)(v0 + 80) = v9;
  *(_OWORD *)(v0 + 96) = v8;
  v12 = (int *)((char *)v2 + *v2);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v10;
  *v10 = v0;
  v10[1] = sub_22DEDB2A4;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t))v12)(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 168), v0 + 16);
}

uint64_t sub_22DEDB2A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEDB310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(void (**)(uint64_t))(v0 + 144);
  swift_storeEnumTagMultiPayload();
  v4(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEDB38C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *);
  id v6;

  v1 = *(void **)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD **)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(void (**)(_QWORD *))(v0 + 144);
  *v2 = v1;
  swift_storeEnumTagMultiPayload();
  v6 = v1;
  v5(v2);

  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22DEDB420()
{
  NXRequestHandler.options.getter();
}

uint64_t sub_22DEDB438()
{
  return sub_22DEDB84C();
}

uint64_t NXRequestHandler.requestName.getter()
{
  return sub_22DEDB84C();
}

uint64_t sub_22DEDB490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22DEDB8C8(a3, a4, a5, a6, a7, a8, a9);
}

uint64_t NXRequestHandler.handleRequestName(_:requestData:context:responseDataHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22DEDB8C8(a3, a4, a5, a6, a7, a8, a9);
}

void sub_22DEDB4F8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  id v14;
  id v15;
  void (*v16)(void);
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  _OWORD v26[8];

  v25[0] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)v25 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC66E0);
  v10 = sub_22DEFAF08();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (id *)((char *)v25 - v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v25 - v11, a1, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = *v12;
    v15 = *v12;
    ((void (*)(id, _QWORD, uint64_t))v25[0])(v14, 0, 1);

  }
  else
  {
    v16 = (void (*)(void))v25[0];
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v12, AssociatedTypeWitness);
    v17 = a4[5];
    v26[4] = a4[4];
    v26[5] = v17;
    v18 = a4[7];
    v26[6] = a4[6];
    v26[7] = v18;
    v19 = a4[1];
    v26[0] = *a4;
    v26[1] = v19;
    v20 = a4[3];
    v26[2] = a4[2];
    v26[3] = v20;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v22 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v26, AssociatedTypeWitness, AssociatedConformanceWitness);
    v24 = v23;
    v16();
    sub_22DEA2F04(v22, v24);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  }
}

uint64_t _s5Nexus16NXRequestMessagePAAE11requestNameSSvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

unint64_t sub_22DEDB794()
{
  unint64_t result;

  result = qword_255DD09A0[0];
  if (!qword_255DD09A0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF003BC, &type metadata for NXNoResponseMessage.CodingKeys);
    atomic_store(result, qword_255DD09A0);
  }
  return result;
}

uint64_t sub_22DEDB7D8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_22DEDB830(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_22DEDAE7C(a1, a2, a3, a4, v4 + ((v6 + 32) & ~v6), v5, *(_QWORD *)(v4 + 24));
}

uint64_t sub_22DEDB84C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_22DEDB8C8(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(char *, __int128 *, void (*)(uint64_t), uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v34 = a4;
  v35 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v32 - v13;
  v15 = a3[5];
  v50 = a3[4];
  v51 = v15;
  v16 = a3[7];
  v52 = a3[6];
  v53 = v16;
  v17 = a3[1];
  v46 = *a3;
  v47 = v17;
  v18 = a3[3];
  v48 = a3[2];
  v49 = v18;
  v33 = (void (*)(char *, __int128 *, void (*)(uint64_t), uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a7 + 32))(a6, a7);
  v54 = v19;
  v20 = a3[5];
  v42 = a3[4];
  v43 = v20;
  v21 = a3[7];
  v44 = a3[6];
  v45 = v21;
  v22 = a3[1];
  v38 = *a3;
  v39 = v22;
  v23 = a3[3];
  v40 = a3[2];
  v41 = v23;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v25 = v37;
  (*(void (**)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(a1, a2, &v38, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v25)
    return swift_release();
  v42 = v50;
  v43 = v51;
  v44 = v52;
  v45 = v53;
  v38 = v46;
  v39 = v47;
  v40 = v48;
  v41 = v49;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a6;
  *(_QWORD *)(v27 + 24) = a7;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v35;
  v28 = v51;
  *(_OWORD *)(v27 + 112) = v50;
  *(_OWORD *)(v27 + 128) = v28;
  v29 = v53;
  *(_OWORD *)(v27 + 144) = v52;
  *(_OWORD *)(v27 + 160) = v29;
  v30 = v47;
  *(_OWORD *)(v27 + 48) = v46;
  *(_OWORD *)(v27 + 64) = v30;
  v31 = v49;
  *(_OWORD *)(v27 + 80) = v48;
  *(_OWORD *)(v27 + 96) = v31;
  swift_retain();
  sub_22DE80C44((uint64_t)&v46);
  v33(v14, &v38, sub_22DEDBE3C, v27);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v14, AssociatedTypeWitness);
}

unint64_t sub_22DEDBAEC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22DEDBB18();
  result = sub_22DEDBB5C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22DEDBB18()
{
  unint64_t result;

  result = qword_255DC71E8;
  if (!qword_255DC71E8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXNoResponseMessage, &type metadata for NXNoResponseMessage);
    atomic_store(result, (unint64_t *)&qword_255DC71E8);
  }
  return result;
}

unint64_t sub_22DEDBB5C()
{
  unint64_t result;

  result = qword_255DC71F0;
  if (!qword_255DC71F0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXNoResponseMessage, &type metadata for NXNoResponseMessage);
    atomic_store(result, (unint64_t *)&qword_255DC71F0);
  }
  return result;
}

uint64_t dispatch thunk of static NXRequestMessage.requestName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NXRequestMessage.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of NXRequestMessage.requestName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of static NXRequestMessage.decode(data:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of NXRequestMessage.encode(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of NXResponseMessage.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static NXResponseMessage.decode(data:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of NXResponseMessage.encode(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

ValueMetadata *type metadata accessor for NXNoResponseMessage()
{
  return &type metadata for NXNoResponseMessage;
}

uint64_t dispatch thunk of NXRequestHandlerEx.handler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NXRequestHandlerEx.handleRequest(name:data:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 40) + *(_QWORD *)(a8 + 40));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22DEC23C8;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of NXAsyncRequestHandler.asyncHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NXRequestHandler.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NXRequestHandler.handler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NXRequestHandler.requestName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NXRequestHandler.handleRequestName(_:requestData:context:responseDataHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 48))(a1);
}

ValueMetadata *type metadata accessor for NXNoResponseMessage.CodingKeys()
{
  return &type metadata for NXNoResponseMessage.CodingKeys;
}

unint64_t sub_22DEDBD4C()
{
  unint64_t result;

  result = qword_255DD0C30;
  if (!qword_255DD0C30)
  {
    result = MEMORY[0x22E321D70](&unk_22DF0036C, &type metadata for NXNoResponseMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD0C30);
  }
  return result;
}

unint64_t sub_22DEDBD94()
{
  unint64_t result;

  result = qword_255DD0C38[0];
  if (!qword_255DD0C38[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00394, &type metadata for NXNoResponseMessage.CodingKeys);
    atomic_store(result, qword_255DD0C38);
  }
  return result;
}

uint64_t sub_22DEDBDD8()
{
  uint64_t v0;
  int v1;
  int v2;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255)
    sub_22DE809FC(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1);
  v2 = *(unsigned __int8 *)(v0 + 152);
  if (v2 != 255)
    sub_22DE809FC(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), v2);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22DEDBE3C(uint64_t a1)
{
  uint64_t v1;

  sub_22DEDB4F8(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (_OWORD *)(v1 + 48));
}

uint64_t sub_22DEDBE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);
  v9 = v0 + v8;
  v10 = *(unsigned __int8 *)(v0 + v8 + 48);
  if (v10 != 255)
    sub_22DE809FC(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), v10);
  v11 = *(unsigned __int8 *)(v9 + 104);
  if (v11 != 255)
    sub_22DE809FC(*(_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 64), *(_QWORD *)(v9 + 72), *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 96), v11);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22DEDBF70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0[4] - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v0[6];
  v8 = v0[7];
  v9 = (uint64_t)v0 + v3;
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v12;
  *v12 = v1;
  v12[1] = sub_22DEC23C8;
  return sub_22DEDB0E4((uint64_t)v12, v13, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_22DEDC054()
{
  return sub_22DEDC1B8();
}

uint64_t sub_22DEDC060()
{
  return sub_22DEFAA04();
}

uint64_t sub_22DEDC06C()
{
  return sub_22DEDC204();
}

uint64_t sub_22DEDC078@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

void sub_22DEDC084(_QWORD *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_22DEDC094()
{
  return 25705;
}

uint64_t sub_22DEDC0A0@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DEDC0AC()
{
  sub_22DEDE6BC();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDC0D4()
{
  sub_22DEDE6BC();
  return sub_22DEFAF50();
}

uint64_t sub_22DEDC0FC()
{
  return sub_22DEDC1B8();
}

uint64_t sub_22DEDC10C()
{
  return sub_22DEFAA04();
}

uint64_t sub_22DEDC11C()
{
  return sub_22DEDC204();
}

uint64_t sub_22DEDC12C@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

void sub_22DEDC138(_QWORD *a1@<X8>)
{
  *a1 = 1953722216;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_22DEDC14C()
{
  return 1953722216;
}

uint64_t sub_22DEDC15C@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DEDC168()
{
  sub_22DEDE634();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDC190()
{
  sub_22DEDE634();
  return sub_22DEFAF50();
}

uint64_t sub_22DEDC1B8()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEDC204()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEDC24C@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E748(a1);
}

uint64_t sub_22DEDC258@<X0>(BOOL *a1@<X8>)
{
  return sub_22DE7E7B8(a1);
}

uint64_t sub_22DEDC264()
{
  sub_22DEDE5F0();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDC28C()
{
  sub_22DEDE5F0();
  return sub_22DEFAF50();
}

void NXEndpoint.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_22DEDC308()
{
  sub_22DEFAA10();
  return 540693570;
}

uint64_t NXEndpoint.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (*((unsigned __int8 *)v0 + 48) > 4u)
    return 0x6C61636F4CLL;
  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void NXEndpoint.networkEndpoint(defaultPort:)()
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7218);
  MEMORY[0x24BDAC7A8](v1);
  __asm { BR              X10 }
}

uint64_t sub_22DEDC564()
{
  uint64_t v0;

  type metadata accessor for NXError();
  *(_BYTE *)(v0 - 69) = 6;
  NXError.__allocating_init(_:_:_:)(v0 - 69, 0xD000000000000022, 0x800000022DF036A0, 0);
  return swift_willThrow();
}

uint64_t sub_22DEDC7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void NXEndpoint.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_22DEDC868()
{
  sub_22DEFAEE4();
  return sub_22DEFAA04();
}

void sub_22DEDC940()
{
  sub_22DEFAEE4();
  JUMPOUT(0x22DEDC96CLL);
}

uint64_t sub_22DEDC984()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E69616D6F64;
  if (*v0 != 1)
    v1 = 0x6361667265746E69;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_22DEDC9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DEDF224(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DEDCA04()
{
  sub_22DEDE5AC();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDCA2C()
{
  sub_22DEDE5AC();
  return sub_22DEFAF50();
}

uint64_t sub_22DEDCA54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DEDCA78 + 4 * byte_22DF00422[*v0]))(29794, 0xE200000000000000);
}

uint64_t sub_22DEDCA78()
{
  return 0x6C61636F6CLL;
}

uint64_t sub_22DEDCA8C()
{
  return 28777;
}

uint64_t sub_22DEDCA94()
{
  return 7562345;
}

uint64_t sub_22DEDCAA4()
{
  return 0x72756F6A6E6F62;
}

uint64_t sub_22DEDCABC()
{
  return 7233902;
}

uint64_t sub_22DEDCACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DEDF384(a1, a2);
  *a3 = result;
  return result;
}

void sub_22DEDCAF0(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_22DEDCAFC()
{
  sub_22DEDE524();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDCB24()
{
  sub_22DEDE524();
  return sub_22DEFAF50();
}

uint64_t sub_22DEDCB4C()
{
  sub_22DEDE678();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDCB74()
{
  sub_22DEDE678();
  return sub_22DEFAF50();
}

uint64_t sub_22DEDCB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22DEFAE54();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22DEDCC18()
{
  sub_22DEDE568();
  return sub_22DEFAF44();
}

uint64_t sub_22DEDCC40()
{
  sub_22DEDE568();
  return sub_22DEFAF50();
}

void NXEndpoint.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[23];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7228);
  v16[14] = *(_QWORD *)(v3 - 8);
  v16[15] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v16[13] = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7230);
  v16[17] = *(_QWORD *)(v5 - 8);
  v16[18] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v16[16] = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7238);
  v16[11] = *(_QWORD *)(v7 - 8);
  v16[12] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v16[10] = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7240);
  v16[8] = *(_QWORD *)(v9 - 8);
  v16[9] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v16[7] = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7248);
  v16[5] = *(_QWORD *)(v11 - 8);
  v16[6] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7250);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7258);
  v16[21] = *(_QWORD *)(v13 - 8);
  v16[22] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = *(_QWORD *)(v1 + 8);
  v16[19] = *(_QWORD *)v1;
  v16[20] = v14;
  v16[4] = *(_QWORD *)(v1 + 16);
  v16[3] = *(_QWORD *)(v1 + 24);
  v16[2] = *(_QWORD *)(v1 + 32);
  v16[1] = *(_QWORD *)(v1 + 40);
  v15 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEDE524();
  sub_22DEFAF2C();
  __asm { BR              X9 }
}

uint64_t sub_22DEDCED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 89) = 0;
  sub_22DEDE6BC();
  v5 = *(_QWORD *)(v4 - 112);
  sub_22DEFADE8();
  sub_22DEFAE0C();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 8))(v2, v5);
}

void sub_22DEDD11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 72) = 1;
  sub_22DEDE678();
  v3 = *(_QWORD *)(v2 - 112);
  sub_22DEFADE8();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 248) + 8))(v1, *(_QWORD *)(v2 - 240));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v0, v3);
  JUMPOUT(0x22DEDD0F8);
}

uint64_t NXEndpoint.hashValue.getter()
{
  sub_22DEFAED8();
  NXEndpoint.hash(into:)();
  return sub_22DEFAEFC();
}

uint64_t NXEndpoint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;

  v31 = a2;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7278);
  v25[6] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v37 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7280);
  v5 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  v30 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7288);
  v25[5] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v36 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7290);
  v25[4] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v35 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7298);
  v25[7] = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC72A0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC72A8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_22DEDE524();
  v19 = v39;
  sub_22DEFAF20();
  if (!v19)
  {
    v25[2] = v13;
    v25[0] = v11;
    v25[1] = v10;
    v25[3] = 0;
    v39 = v15;
    v20 = sub_22DEFADDC();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v21 = sub_22DEFACBC();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
    *v23 = &type metadata for NXEndpoint;
    sub_22DEFAD88();
    sub_22DEFACB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v14);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_22DEDDB58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NXEndpoint.init(from:)(a1, a2);
}

void sub_22DEDDB6C(_QWORD *a1)
{
  NXEndpoint.encode(to:)(a1);
}

uint64_t sub_22DEDDB88()
{
  sub_22DEFAED8();
  NXEndpoint.hash(into:)();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEDDBE4()
{
  sub_22DEFAED8();
  NXEndpoint.hash(into:)();
  return sub_22DEFAEFC();
}

void _s5Nexus10NXEndpointO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_22DEDDC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (v8)
  {
    v15 = v6;
    v16 = v9;
    v27 = v6;
    v17 = v12;
    v28 = v12;
    v18 = v0;
    v19 = v3;
    v20 = v1;
    v21 = v2;
    sub_22DE80988(v7, v15, v11, v16, v0, v17, v8);
    sub_22DE80988(v21, v20, v30, v4, v10, v5, v19);
    sub_22DE809FC(v21, v20, v30, v4, v10, v5, v19);
    sub_22DE809FC(v7, v27, v11, v29, v18, v28, v8);
    v13 = 0;
  }
  else
  {
    v25 = v1;
    if (v2 == v7 && v1 == v6)
    {
      v13 = 1;
      v14 = v2;
    }
    else
    {
      v23 = v0;
      v14 = v2;
      v24 = sub_22DEFAE54();
      v0 = v23;
      v13 = v24;
    }
    v26 = v0;
    sub_22DE80988(v7, v6, v11, v9, v0, v12, 0);
    sub_22DE80988(v14, v25, v30, v4, v10, v5, 0);
    sub_22DE809FC(v14, v25, v30, v4, v10, v5, 0);
    sub_22DE809FC(v7, v6, v11, v29, v26, v12, 0);
  }
  return v13 & 1;
}

unint64_t sub_22DEDE524()
{
  unint64_t result;

  result = qword_255DD0CC0;
  if (!qword_255DD0CC0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00CF8, &type metadata for NXEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD0CC0);
  }
  return result;
}

unint64_t sub_22DEDE568()
{
  unint64_t result;

  result = qword_255DD0CC8;
  if (!qword_255DD0CC8)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00CA8, &type metadata for NXEndpoint.NanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD0CC8);
  }
  return result;
}

unint64_t sub_22DEDE5AC()
{
  unint64_t result;

  result = qword_255DD0CD0;
  if (!qword_255DD0CD0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00C58, &type metadata for NXEndpoint.BonjourCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD0CD0);
  }
  return result;
}

unint64_t sub_22DEDE5F0()
{
  unint64_t result;

  result = qword_255DC7260;
  if (!qword_255DC7260)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00778, &type metadata for NXEndpoint.IdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7260);
  }
  return result;
}

unint64_t sub_22DEDE634()
{
  unint64_t result;

  result = qword_255DC7268;
  if (!qword_255DC7268)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00638, &type metadata for NXEndpoint.IpCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7268);
  }
  return result;
}

unint64_t sub_22DEDE678()
{
  unint64_t result;

  result = qword_255DD0CD8[0];
  if (!qword_255DD0CD8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00C08, &type metadata for NXEndpoint.LocalCodingKeys);
    atomic_store(result, qword_255DD0CD8);
  }
  return result;
}

unint64_t sub_22DEDE6BC()
{
  unint64_t result;

  result = qword_255DC7270;
  if (!qword_255DC7270)
  {
    result = MEMORY[0x22E321D70](&unk_22DF004F8, &type metadata for NXEndpoint.BtCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC7270);
  }
  return result;
}

unint64_t sub_22DEDE704()
{
  unint64_t result;

  result = qword_255DC72B0;
  if (!qword_255DC72B0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00458, &type metadata for NXEndpoint.BtCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72B0);
  }
  return result;
}

unint64_t sub_22DEDE74C()
{
  unint64_t result;

  result = qword_255DC72B8;
  if (!qword_255DC72B8)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00570, &type metadata for NXEndpoint.BtCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72B8);
  }
  return result;
}

unint64_t sub_22DEDE794()
{
  unint64_t result;

  result = qword_255DC72C0;
  if (!qword_255DC72C0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00548, &type metadata for NXEndpoint.BtCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72C0);
  }
  return result;
}

unint64_t sub_22DEDE7DC()
{
  unint64_t result;

  result = qword_255DC72C8;
  if (!qword_255DC72C8)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00598, &type metadata for NXEndpoint.IpCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72C8);
  }
  return result;
}

unint64_t sub_22DEDE824()
{
  unint64_t result;

  result = qword_255DC72D0;
  if (!qword_255DC72D0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF006B0, &type metadata for NXEndpoint.IpCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72D0);
  }
  return result;
}

unint64_t sub_22DEDE86C()
{
  unint64_t result;

  result = qword_255DC72D8;
  if (!qword_255DC72D8)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00688, &type metadata for NXEndpoint.IpCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72D8);
  }
  return result;
}

unint64_t sub_22DEDE8B4()
{
  unint64_t result;

  result = qword_255DC72E0;
  if (!qword_255DC72E0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF006D8, &type metadata for NXEndpoint.IdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72E0);
  }
  return result;
}

unint64_t sub_22DEDE8FC()
{
  unint64_t result;

  result = qword_255DC72E8;
  if (!qword_255DC72E8)
  {
    result = MEMORY[0x22E321D70](&unk_22DF007F0, &type metadata for NXEndpoint.IdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72E8);
  }
  return result;
}

unint64_t sub_22DEDE944()
{
  unint64_t result;

  result = qword_255DC72F0;
  if (!qword_255DC72F0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF007C8, &type metadata for NXEndpoint.IdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DC72F0);
  }
  return result;
}

uint64_t destroy for NXEndpoint(uint64_t a1)
{
  return sub_22DE809FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for NXEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_22DE80988(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for NXEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_22DE80988(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_22DE809FC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NXEndpoint(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_22DE809FC(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXEndpoint(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NXEndpoint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_22DEDEBB4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 4u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_22DEDEBCC(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NXEndpoint()
{
  return &type metadata for NXEndpoint;
}

ValueMetadata *type metadata accessor for NXEndpoint.BtCodingKeys()
{
  return &type metadata for NXEndpoint.BtCodingKeys;
}

ValueMetadata *type metadata accessor for NXEndpoint.IpCodingKeys()
{
  return &type metadata for NXEndpoint.IpCodingKeys;
}

ValueMetadata *type metadata accessor for NXEndpoint.IdsCodingKeys()
{
  return &type metadata for NXEndpoint.IdsCodingKeys;
}

uint64_t getEnumTagSinglePayload for NXEndpoint.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXEndpoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_22DEDED14 + 4 * byte_22DF0043F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_22DEDED48 + 4 * byte_22DF0043A[v4]))();
}

uint64_t sub_22DEDED48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEDED50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEDED58);
  return result;
}

uint64_t sub_22DEDED64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEDED6CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_22DEDED70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEDED78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXEndpoint.CodingKeys()
{
  return &type metadata for NXEndpoint.CodingKeys;
}

ValueMetadata *type metadata accessor for NXEndpoint.LocalCodingKeys()
{
  return &type metadata for NXEndpoint.LocalCodingKeys;
}

uint64_t storeEnumTagSinglePayload for NXEndpoint.BonjourCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22DEDEDF0 + 4 * byte_22DF00449[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22DEDEE24 + 4 * byte_22DF00444[v4]))();
}

uint64_t sub_22DEDEE24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEDEE2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEDEE34);
  return result;
}

uint64_t sub_22DEDEE40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEDEE48);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22DEDEE4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEDEE54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXEndpoint.BonjourCodingKeys()
{
  return &type metadata for NXEndpoint.BonjourCodingKeys;
}

uint64_t _s5Nexus10NXEndpointO12BtCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22DEDEEB0 + 4 * byte_22DF0044E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22DEDEED0 + 4 * byte_22DF00453[v4]))();
}

_BYTE *sub_22DEDEEB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22DEDEED0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEDEED8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEDEEE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEDEEE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEDEEF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NXEndpoint.NanCodingKeys()
{
  return &type metadata for NXEndpoint.NanCodingKeys;
}

unint64_t sub_22DEDEF10()
{
  unint64_t result;

  result = qword_255DD1960[0];
  if (!qword_255DD1960[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00A20, &type metadata for NXEndpoint.NanCodingKeys);
    atomic_store(result, qword_255DD1960);
  }
  return result;
}

unint64_t sub_22DEDEF58()
{
  unint64_t result;

  result = qword_255DD1B70[0];
  if (!qword_255DD1B70[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00AD8, &type metadata for NXEndpoint.BonjourCodingKeys);
    atomic_store(result, qword_255DD1B70);
  }
  return result;
}

unint64_t sub_22DEDEFA0()
{
  unint64_t result;

  result = qword_255DD1E80[0];
  if (!qword_255DD1E80[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00BE0, &type metadata for NXEndpoint.CodingKeys);
    atomic_store(result, qword_255DD1E80);
  }
  return result;
}

unint64_t sub_22DEDEFE8()
{
  unint64_t result;

  result = qword_255DD1F90;
  if (!qword_255DD1F90)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00B00, &type metadata for NXEndpoint.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD1F90);
  }
  return result;
}

unint64_t sub_22DEDF030()
{
  unint64_t result;

  result = qword_255DD1F98[0];
  if (!qword_255DD1F98[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00B28, &type metadata for NXEndpoint.LocalCodingKeys);
    atomic_store(result, qword_255DD1F98);
  }
  return result;
}

unint64_t sub_22DEDF078()
{
  unint64_t result;

  result = qword_255DD2020;
  if (!qword_255DD2020)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00A48, &type metadata for NXEndpoint.BonjourCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD2020);
  }
  return result;
}

unint64_t sub_22DEDF0C0()
{
  unint64_t result;

  result = qword_255DD2028[0];
  if (!qword_255DD2028[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00A70, &type metadata for NXEndpoint.BonjourCodingKeys);
    atomic_store(result, qword_255DD2028);
  }
  return result;
}

unint64_t sub_22DEDF108()
{
  unint64_t result;

  result = qword_255DD20B0;
  if (!qword_255DD20B0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00990, &type metadata for NXEndpoint.NanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD20B0);
  }
  return result;
}

unint64_t sub_22DEDF150()
{
  unint64_t result;

  result = qword_255DD20B8[0];
  if (!qword_255DD20B8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF009B8, &type metadata for NXEndpoint.NanCodingKeys);
    atomic_store(result, qword_255DD20B8);
  }
  return result;
}

unint64_t sub_22DEDF198()
{
  unint64_t result;

  result = qword_255DD2140;
  if (!qword_255DD2140)
  {
    result = MEMORY[0x22E321D70](&unk_22DF00B50, &type metadata for NXEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD2140);
  }
  return result;
}

unint64_t sub_22DEDF1E0()
{
  unint64_t result;

  result = qword_255DD2148[0];
  if (!qword_255DD2148[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF00B78, &type metadata for NXEndpoint.CodingKeys);
    atomic_store(result, qword_255DD2148);
  }
  return result;
}

uint64_t sub_22DEDF224(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6361667265746E69 && a2 == 0xED0000656D614E65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_22DEDF384(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 29794 && a2 == 0xE200000000000000;
  if (v2 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 28777 && a2 == 0xE200000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7562345 && a2 == 0xE300000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72756F6A6E6F62 && a2 == 0xE700000000000000 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7233902 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_22DEDF5B0()
{
  uint64_t v0;

  v0 = sub_22DEFA674();
  __swift_allocate_value_buffer(v0, qword_255DD21D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DD21D8);
  sub_22DEF4E10();
  swift_bridgeObjectRetain();
  return sub_22DEFA668();
}

uint64_t NXConnection.unownedExecutor.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)NXEnvironmentValues.dispatchQueue.getter();
  v1 = sub_22DEFABFC();

  return v1;
}

uint64_t NXConnection._state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 56);
  return result;
}

uint64_t NXConnection._state.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 56) = v2;
  return result;
}

uint64_t (*NXConnection._state.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t NXConnection.__allocating_init(endpoint:configuration:environment:)(__int128 *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  NXConnection.init(endpoint:configuration:environment:)(a1, a2, a3);
  return v6;
}

uint64_t NXConnection.init(endpoint:configuration:environment:)(__int128 *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  __int128 v18;
  __int128 v19;

  v4 = v3;
  v18 = a1[1];
  v19 = *a1;
  v6 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a1 + 5);
  v8 = *((_BYTE *)a1 + 48);
  v9 = *(_BYTE *)(a2 + 8);
  v10 = *a3;
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 40) = sub_22DEFAF14();
  *(_QWORD *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 56) = 0;
  v11 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = v11;
  *(_QWORD *)(v4 + 80) = v11;
  *(_BYTE *)(v4 + 203) = 0;
  *(_QWORD *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 216) = 0;
  *(_DWORD *)(v4 + 220) = 0;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_OWORD *)(v4 + 129) = 0u;
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + 224) = 0;
  *(_QWORD *)(v4 + 232) = v12;
  *(_WORD *)(v4 + 256) = 0;
  *(_QWORD *)(v4 + 248) = 0;
  *(_QWORD *)(v4 + 240) = 0;
  *(_QWORD *)(v4 + 264) = 0;
  *(_QWORD *)(v4 + 272) = 0;
  *(_DWORD *)(v4 + 280) = 0;
  *(_BYTE *)(v4 + 284) = 1;
  *(_BYTE *)(v4 + 17) = 1;
  *(_QWORD *)(v4 + 20) = *(_QWORD *)a2;
  *(_BYTE *)(v4 + 28) = v9;
  v13 = NXEnvironmentValues.pairingPeerIdentity.getter();
  swift_beginAccess();
  v14 = *(void **)(v4 + 240);
  *(_QWORD *)(v4 + 240) = v13;

  v15 = NXEnvironmentValues.pairingSelfIdentity.getter();
  swift_beginAccess();
  v16 = *(void **)(v4 + 248);
  *(_QWORD *)(v4 + 248) = v15;

  *(_OWORD *)(v4 + 152) = v19;
  *(_OWORD *)(v4 + 168) = v18;
  *(_QWORD *)(v4 + 184) = v6;
  *(_QWORD *)(v4 + 192) = v7;
  *(_BYTE *)(v4 + 200) = v8;
  *(_QWORD *)(v4 + 32) = v10;
  swift_bridgeObjectRetain();
  *(_BYTE *)(v4 + 201) = NXEnvironmentValues.logFrames.getter() & 1;
  LOBYTE(v15) = NXEnvironmentValues.logMessages.getter();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v4 + 202) = v15 & 1;
  return v4;
}

uint64_t NXConnection.__allocating_init(networkConnection:configuration:environment:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  NXConnection.init(networkConnection:configuration:environment:)(a1, a2, a3);
  return v6;
}

uint64_t NXConnection.init(networkConnection:configuration:environment:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  v4 = v3;
  v7 = *(_BYTE *)(a2 + 8);
  v8 = *a3;
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 40) = sub_22DEFAF14();
  *(_QWORD *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 56) = 0;
  v9 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = v9;
  *(_QWORD *)(v4 + 80) = v9;
  *(_BYTE *)(v4 + 203) = 0;
  *(_QWORD *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 216) = 0;
  *(_DWORD *)(v4 + 220) = 0;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_OWORD *)(v4 + 129) = 0u;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + 224) = 0;
  *(_QWORD *)(v4 + 232) = v10;
  *(_WORD *)(v4 + 256) = 0;
  *(_QWORD *)(v4 + 248) = 0;
  *(_QWORD *)(v4 + 240) = 0;
  *(_QWORD *)(v4 + 264) = 0;
  *(_QWORD *)(v4 + 272) = 0;
  *(_DWORD *)(v4 + 280) = 0;
  *(_BYTE *)(v4 + 284) = 1;
  *(_BYTE *)(v4 + 17) = 0;
  *(_QWORD *)(v4 + 20) = *(_QWORD *)a2;
  *(_BYTE *)(v4 + 28) = v7;
  v11 = NXEnvironmentValues.pairingPeerIdentity.getter();
  swift_beginAccess();
  v12 = *(void **)(v4 + 240);
  *(_QWORD *)(v4 + 240) = v11;

  v13 = NXEnvironmentValues.pairingSelfIdentity.getter();
  swift_beginAccess();
  v14 = *(void **)(v4 + 248);
  *(_QWORD *)(v4 + 248) = v13;

  *(_OWORD *)(v4 + 184) = 0u;
  *(_OWORD *)(v4 + 168) = 0u;
  *(_OWORD *)(v4 + 152) = 0u;
  *(_BYTE *)(v4 + 200) = 5;
  *(_QWORD *)(v4 + 32) = v8;
  swift_bridgeObjectRetain();
  *(_BYTE *)(v4 + 201) = NXEnvironmentValues.logFrames.getter() & 1;
  LOBYTE(v13) = NXEnvironmentValues.logMessages.getter();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v4 + 202) = v13 & 1;
  *(_QWORD *)(v4 + 208) = a1;
  swift_release();
  return v4;
}

uint64_t NXConnection.deinit()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC72F8);
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v68 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7300);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7308);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v63 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7310);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v63 - v16;
  if (qword_255DD21D0 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v18 = sub_22DEFA674();
    __swift_project_value_buffer(v18, (uint64_t)qword_255DD21D8);
    v19 = sub_22DEFA65C();
    v20 = sub_22DEFAB90();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_22DE7A000, v19, v20, "deinit", v21, 2u);
      MEMORY[0x22E321E0C](v21, -1, -1);
    }

    swift_beginAccess();
    v22 = *(_QWORD *)(v1 + 72);
    v23 = *(_QWORD *)(v22 + 64);
    v64 = v1;
    v65 = v22 + 64;
    v24 = 1 << *(_BYTE *)(v22 + 32);
    v25 = -1;
    if (v24 < 64)
      v25 = ~(-1 << v24);
    v26 = v25 & v23;
    v66 = (unint64_t)(v24 + 63) >> 6;
    v67 = v22;
    v63 = v66 - 1;
    result = swift_bridgeObjectRetain();
    v1 = 0;
    if (!v26)
      break;
    while (1)
    {
      v28 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      v29 = v28 | (v1 << 6);
LABEL_10:
      v30 = *(_QWORD *)(v67 + 56);
      *(_QWORD *)v15 = *(_QWORD *)(*(_QWORD *)(v67 + 48) + 8 * v29);
      v31 = v30 + *(_QWORD *)(v5 + 72) * v29;
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7318);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&v15[*(int *)(v32 + 48)], v31, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v15, 0, 1, v32);
LABEL_29:
      sub_22DEA4DD0((uint64_t)v15, (uint64_t)v17, &qword_255DC7310);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7318);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v17, 1, v37) == 1)
        break;
      (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 32))(v7, &v17[*(int *)(v37 + 48)], v4);
      sub_22DEFAB0C();
      result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
      if (!v26)
        goto LABEL_11;
    }
    swift_release();
    v38 = v64;
    *(_QWORD *)(v64 + 72) = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v4 = *(_QWORD *)(v38 + 80);
    v39 = *(_QWORD *)(v4 + 64);
    v67 = v4 + 64;
    v40 = 1 << *(_BYTE *)(v4 + 32);
    v41 = -1;
    if (v40 < 64)
      v41 = ~(-1 << v40);
    v1 = v41 & v39;
    v17 = (char *)((unint64_t)(v40 + 63) >> 6);
    v66 = (int64_t)(v17 - 1);
    result = swift_bridgeObjectRetain();
    v5 = 0;
    v7 = &qword_255DC7308;
    if (v1)
    {
      while (1)
      {
        v46 = __clz(__rbit64(v1));
        v1 &= v1 - 1;
        v47 = v46 | (v5 << 6);
        v15 = v72;
LABEL_36:
        v48 = *(_QWORD *)(v4 + 56);
        *(_QWORD *)v15 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v47);
        v49 = v70;
        v50 = v48 + *(_QWORD *)(v70 + 72) * v47;
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
        v52 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
        v15 = v72;
        v52(&v72[*(int *)(v51 + 48)], v50, v71);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v15, 0, 1, v51);
LABEL_55:
        v57 = v69;
        sub_22DEA4DD0((uint64_t)v15, v69, &qword_255DC7308);
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v57, 1, v58) == 1)
          break;
        v42 = v57 + *(int *)(v58 + 48);
        v44 = v70;
        v43 = v71;
        v45 = v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v68, v42, v71);
        sub_22DEFAB0C();
        result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v43);
        if (!v1)
          goto LABEL_37;
      }
      swift_release();
      *(_QWORD *)(v38 + 80) = MEMORY[0x24BEE4B00];
      swift_bridgeObjectRelease();
      v59 = *(void **)(v38 + 88);
      if (v59)
      {
        objc_msgSend(v59, sel_invalidate);
        v60 = *(void **)(v38 + 88);
      }
      else
      {
        v60 = 0;
      }
      *(_QWORD *)(v38 + 88) = 0;

      if (*(_QWORD *)(v38 + 96))
      {
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
        sub_22DEFAB48();
        swift_release();
      }
      *(_QWORD *)(v38 + 96) = 0;
      swift_release();
      v61 = *(void **)(v38 + 112);
      if (v61)
      {
        objc_msgSend(v61, sel_invalidate);
        v62 = *(void **)(v38 + 112);
      }
      else
      {
        v62 = 0;
      }
      *(_QWORD *)(v38 + 112) = 0;

      if (*(_QWORD *)(v38 + 120))
      {
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
        sub_22DEFAB48();
        swift_release();
      }
      *(_QWORD *)(v38 + 120) = 0;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_22DE809FC(*(_QWORD *)(v38 + 152), *(_QWORD *)(v38 + 160), *(_QWORD *)(v38 + 168), *(_QWORD *)(v38 + 176), *(_QWORD *)(v38 + 184), *(_QWORD *)(v38 + 192), *(_BYTE *)(v38 + 200));
      swift_release();

      swift_bridgeObjectRelease();
      return v38;
    }
LABEL_37:
    v53 = v5 + 1;
    v15 = v72;
    if (!__OFADD__(v5, 1))
    {
      if (v53 < (uint64_t)v17)
      {
        v54 = *(_QWORD *)(v67 + 8 * v53);
        if (v54)
        {
LABEL_40:
          v1 = (v54 - 1) & v54;
          v47 = __clz(__rbit64(v54)) + (v53 << 6);
          v5 = v53;
          goto LABEL_36;
        }
        v55 = v5 + 2;
        ++v5;
        if (v53 + 1 < (uint64_t)v17)
        {
          v54 = *(_QWORD *)(v67 + 8 * v55);
          if (v54)
          {
LABEL_43:
            v53 = v55;
            goto LABEL_40;
          }
          v5 = v53 + 1;
          if (v53 + 2 < (uint64_t)v17)
          {
            v54 = *(_QWORD *)(v67 + 8 * (v53 + 2));
            if (v54)
            {
              v53 += 2;
              goto LABEL_40;
            }
            v55 = v53 + 3;
            v5 = v53 + 2;
            if (v53 + 3 < (uint64_t)v17)
            {
              v54 = *(_QWORD *)(v67 + 8 * v55);
              if (v54)
                goto LABEL_43;
              while (1)
              {
                v53 = v55 + 1;
                if (__OFADD__(v55, 1))
                  goto LABEL_71;
                if (v53 >= (uint64_t)v17)
                  break;
                v54 = *(_QWORD *)(v67 + 8 * v53);
                ++v55;
                if (v54)
                  goto LABEL_40;
              }
              v5 = v66;
            }
          }
        }
      }
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v15, 1, 1, v56);
      v1 = 0;
      goto LABEL_55;
    }
LABEL_68:
    __break(1u);
  }
LABEL_11:
  v33 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_68;
  }
  if (v33 >= v66)
    goto LABEL_28;
  v34 = *(_QWORD *)(v65 + 8 * v33);
  if (v34)
  {
LABEL_14:
    v26 = (v34 - 1) & v34;
    v29 = __clz(__rbit64(v34)) + (v33 << 6);
    v1 = v33;
    goto LABEL_10;
  }
  v35 = v1 + 2;
  ++v1;
  if (v33 + 1 >= v66)
    goto LABEL_28;
  v34 = *(_QWORD *)(v65 + 8 * v35);
  if (v34)
  {
LABEL_17:
    v33 = v35;
    goto LABEL_14;
  }
  v1 = v33 + 1;
  if (v33 + 2 >= v66)
    goto LABEL_28;
  v34 = *(_QWORD *)(v65 + 8 * (v33 + 2));
  if (v34)
  {
    v33 += 2;
    goto LABEL_14;
  }
  v35 = v33 + 3;
  v1 = v33 + 2;
  if (v33 + 3 >= v66)
  {
LABEL_28:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7318);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v15, 1, 1, v36);
    v26 = 0;
    goto LABEL_29;
  }
  v34 = *(_QWORD *)(v65 + 8 * v35);
  if (v34)
    goto LABEL_17;
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v66)
    {
      v1 = v63;
      goto LABEL_28;
    }
    v34 = *(_QWORD *)(v65 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_14;
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t NXConnection.__deallocating_deinit()
{
  NXConnection.deinit();
  return swift_deallocClassInstance();
}

BOOL static NXConnection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t NXConnection.hash(into:)()
{
  return sub_22DEFAEE4();
}

uint64_t NXConnection.asyncDescription.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[9] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7330);
  v1[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7338);
  v1[11] = swift_task_alloc();
  v2 = sub_22DEFA734();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  v3 = sub_22DEFA5B4();
  v1[15] = v3;
  v1[16] = *(_QWORD *)(v3 - 8);
  v1[17] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6D88, v4, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  sub_22DEFAA88();
  return swift_task_switch();
}

uint64_t sub_22DEE0530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 72);
  sub_22DEFA5A8();
  if (*(_QWORD *)(v1 + 208))
  {
    v3 = *(_QWORD *)(v0 + 104);
    v2 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 96);
    swift_retain();
    sub_22DEFA86C();
    sub_22DEFA6EC();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    sub_22DEFA9F8();
    swift_bridgeObjectRelease();
    swift_release();
    if (!*(_QWORD *)(v1 + 208))
      goto LABEL_10;
  }
  else
  {
    v24 = v1;
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v5 + 152);
    v7 = *(_QWORD *)(v5 + 160);
    v8 = *(_QWORD *)(v5 + 168);
    v9 = *(_QWORD *)(v5 + 176);
    v10 = *(_QWORD *)(v5 + 184);
    v11 = *(_QWORD *)(v5 + 192);
    v12 = *(_BYTE *)(v5 + 200);
    *(_QWORD *)(v0 + 16) = v6;
    *(_QWORD *)(v0 + 24) = v7;
    *(_QWORD *)(v0 + 32) = v8;
    *(_QWORD *)(v0 + 40) = v9;
    *(_QWORD *)(v0 + 48) = v10;
    *(_QWORD *)(v0 + 56) = v11;
    *(_BYTE *)(v0 + 64) = v12;
    sub_22DE80988(v6, v7, v8, v9, v10, v11, v12);
    sub_22DE8D848();
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    sub_22DE809FC(v6, v7, v8, v9, v10, v11, v12);
    sub_22DEFA9F8();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v24 + 208))
      goto LABEL_10;
  }
  v13 = *(_QWORD *)(v0 + 80);
  swift_retain();
  sub_22DEFA7DC();
  swift_release();
  v14 = sub_22DEFA8FC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22DE8731C(*(_QWORD *)(v0 + 80), &qword_255DC7330);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 80);
    v19 = *(_QWORD *)(v0 + 88);
    sub_22DEFA8F0();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1, v16) == 1)
    {
      sub_22DE8731C(*(_QWORD *)(v0 + 88), &qword_255DC7338);
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 96);
      v21 = *(_QWORD *)(v0 + 104);
      v22 = *(_QWORD *)(v0 + 88);
      sub_22DEFA6EC();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
      sub_22DEFAA10();
      swift_bridgeObjectRelease();
      sub_22DEFA9F8();
      swift_bridgeObjectRelease();
    }
  }
LABEL_10:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xE000000000000000);
}

uint64_t NXConnection.description.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_BYTE *)(v0 + 200);
  sub_22DE80988(v2, v3, v4, v5, v6, v7, v8);
  sub_22DE8D848();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DE809FC(v2, v3, v4, v5, v6, v7, v8);
  return 0x746E696F70646E65;
}

Swift::Void __swiftcall NXConnection.start()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  char *v21;
  int v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DD21D0 != -1)
    swift_once();
  v6 = sub_22DEFA674();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DD21D8);
  swift_retain_n();
  v7 = sub_22DEFA65C();
  v8 = sub_22DEFABA8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v21 = v5;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v20 = v11;
    *(_DWORD *)v10 = 136315138;
    v19[1] = v10 + 4;
    v12 = *((_DWORD *)v0 + 6);
    v13 = *((_BYTE *)v0 + 28);
    v24 = 0;
    v25 = 0xE000000000000000;
    v26 = v11;
    sub_22DEFAC98();
    sub_22DEFAA10();
    sub_22DEFABB4();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    sub_22DEFAA10();
    v22 = v12;
    v23 = v13;
    type metadata accessor for PairingSetupCodeType(0);
    sub_22DEC37B0(&qword_255DC7350, 255, (uint64_t (*)(uint64_t))type metadata accessor for PairingSetupCodeType, MEMORY[0x24BE29E70]);
    sub_22DEFAE48();
    v24 = sub_22DE8C348(v24, v25, &v26);
    sub_22DEFAC2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DE7A000, v7, v8, "start: %s", v10, 0xCu);
    v14 = v20;
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v14, -1, -1);
    v15 = v10;
    v5 = v21;
    MEMORY[0x22E321E0C](v15, -1, -1);

    if (!v1[6])
      goto LABEL_7;
  }
  else
  {

    swift_release_n();
    if (!v0[6])
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6930);
      v16 = sub_22DEFAAC4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
      v17 = swift_allocObject();
      swift_weakInit();
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v17;
      *(_QWORD *)(v18 + 24) = v2;
      v1[6] = sub_22DEFA5CC();
      swift_release();
    }
  }
  sub_22DEE1A88();
}

uint64_t sub_22DEE0C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[16] = a2;
  v3[17] = a3;
  v4 = sub_22DEFA5E4();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v5 = sub_22DEFA5F0();
  v3[22] = v5;
  v3[23] = *(_QWORD *)(v5 - 8);
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEE0D34()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;

  if ((sub_22DEFAB54() & 1) == 0)
  {
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    do
    {
      Strong = swift_weakLoadStrong();
      swift_release();
      if (!Strong)
        break;
      if (swift_weakLoadStrong())
      {
        v9 = *(_QWORD *)(v0 + 192);
        v10 = *(_QWORD *)(v0 + 160);
        v15 = *(_QWORD *)(v0 + 152);
        v11 = *(_QWORD *)(v0 + 144);
        swift_bridgeObjectRetain();
        swift_release();
        NXEnvironmentValues.clock.getter(v9);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 112) = sub_22DEFAF38();
        *(_QWORD *)(v0 + 120) = v12;
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 88) = 0;
        *(_BYTE *)(v0 + 104) = 1;
        sub_22DEC37B0(&qword_255DC6D90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D68], MEMORY[0x24BE29D80]);
        sub_22DEFAEA8();
        sub_22DEC37B0(&qword_255DC6D98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D40], MEMORY[0x24BE29D50]);
        sub_22DEFACD4();
        v13 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        *(_QWORD *)(v0 + 200) = v13;
        v13(v10, v11);
        v14 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 208) = v14;
        *v14 = v0;
        v14[1] = sub_22DEE10AC;
        return sub_22DEFAEB4();
      }
      if (qword_255DD21D0 != -1)
        swift_once();
      v3 = sub_22DEFA674();
      __swift_project_value_buffer(v3, (uint64_t)qword_255DD21D8);
      v4 = sub_22DEFA65C();
      v5 = sub_22DEFAB90();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_22DE7A000, v4, v5, "run periodic", v6, 2u);
        MEMORY[0x22E321E0C](v6, -1, -1);
      }

      v7 = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 224) = v7;
      if (v7)
      {
        sub_22DEC37B0(&qword_255DC6D88, v8, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
        sub_22DEFAA88();
        return swift_task_switch();
      }
    }
    while ((sub_22DEFAB54() & 1) == 0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEE10AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 200))(*(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 144));
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 192);
    v4 = *(_QWORD *)(v2 + 176);
    v5 = *(_QWORD *)(v2 + 184);
    (*(void (**)(_QWORD, _QWORD))(v2 + 200))(*(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 144));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_task_switch();
}

uint64_t sub_22DEE114C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v15;

  while (1)
  {
    if (qword_255DD21D0 != -1)
      swift_once();
    v1 = sub_22DEFA674();
    __swift_project_value_buffer(v1, (uint64_t)qword_255DD21D8);
    v2 = sub_22DEFA65C();
    v3 = sub_22DEFAB90();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_22DE7A000, v2, v3, "run periodic", v4, 2u);
      MEMORY[0x22E321E0C](v4, -1, -1);
    }

    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 224) = Strong;
    if (Strong)
      break;
    if ((sub_22DEFAB54() & 1) != 0 || (v7 = swift_weakLoadStrong(), swift_release(), !v7))
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (swift_weakLoadStrong())
    {
      v8 = *(_QWORD *)(v0 + 192);
      v9 = *(_QWORD *)(v0 + 160);
      v15 = *(_QWORD *)(v0 + 152);
      v10 = *(_QWORD *)(v0 + 144);
      swift_bridgeObjectRetain();
      swift_release();
      NXEnvironmentValues.clock.getter(v8);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 112) = sub_22DEFAF38();
      *(_QWORD *)(v0 + 120) = v11;
      *(_QWORD *)(v0 + 96) = 0;
      *(_QWORD *)(v0 + 88) = 0;
      *(_BYTE *)(v0 + 104) = 1;
      sub_22DEC37B0(&qword_255DC6D90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D68], MEMORY[0x24BE29D80]);
      sub_22DEFAEA8();
      sub_22DEC37B0(&qword_255DC6D98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D40], MEMORY[0x24BE29D50]);
      sub_22DEFACD4();
      v12 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      *(_QWORD *)(v0 + 200) = v12;
      v12(v9, v10);
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v13;
      *v13 = v0;
      v13[1] = sub_22DEE10AC;
      return sub_22DEFAEB4();
    }
  }
  sub_22DEC37B0(&qword_255DC6D88, v6, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  sub_22DEFAA88();
  return swift_task_switch();
}

uint64_t sub_22DEE1470()
{
  sub_22DEE1A88();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEE14B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;

  do
  {
    if ((sub_22DEFAB54() & 1) != 0 || (Strong = swift_weakLoadStrong(), swift_release(), !Strong))
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (swift_weakLoadStrong())
    {
      v9 = *(_QWORD *)(v0 + 192);
      v10 = *(_QWORD *)(v0 + 160);
      v15 = *(_QWORD *)(v0 + 152);
      v11 = *(_QWORD *)(v0 + 144);
      swift_bridgeObjectRetain();
      swift_release();
      NXEnvironmentValues.clock.getter(v9);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 112) = sub_22DEFAF38();
      *(_QWORD *)(v0 + 120) = v12;
      *(_QWORD *)(v0 + 96) = 0;
      *(_QWORD *)(v0 + 88) = 0;
      *(_BYTE *)(v0 + 104) = 1;
      sub_22DEC37B0(&qword_255DC6D90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D68], MEMORY[0x24BE29D80]);
      sub_22DEFAEA8();
      sub_22DEC37B0(&qword_255DC6D98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D40], MEMORY[0x24BE29D50]);
      sub_22DEFACD4();
      v13 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      *(_QWORD *)(v0 + 200) = v13;
      v13(v10, v11);
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v14;
      *v14 = v0;
      v14[1] = sub_22DEE10AC;
      return sub_22DEFAEB4();
    }
    if (qword_255DD21D0 != -1)
      swift_once();
    v4 = sub_22DEFA674();
    __swift_project_value_buffer(v4, (uint64_t)qword_255DD21D8);
    v5 = sub_22DEFA65C();
    v6 = sub_22DEFAB90();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_22DE7A000, v5, v6, "run periodic", v7, 2u);
      MEMORY[0x22E321E0C](v7, -1, -1);
    }

    v1 = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 224) = v1;
  }
  while (!v1);
  sub_22DEC37B0(&qword_255DC6D88, v2, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  sub_22DEFAA88();
  return swift_task_switch();
}

uint64_t sub_22DEE17DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_22DEFA5E4();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_22DEE1880()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_22DEFA5F0();
  sub_22DEC37B0(&qword_255DC6D90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D68], MEMORY[0x24BE29D80]);
  sub_22DEFAEA8();
  sub_22DEC37B0(&qword_255DC6D98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE29D40], MEMORY[0x24BE29D50]);
  sub_22DEFACD4();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_22DEE19A0;
  return sub_22DEFAEB4();
}

uint64_t sub_22DEE19A0()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22DEE1A4C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEE1A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  _DWORD v14[4];
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  char v33;

  v1 = sub_22DEFA674();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)v14 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v22 = (char *)v14 - v8;
  v21 = sub_22DEFA830();
  v20 = *(_QWORD *)(v21 - 8);
  v9 = MEMORY[0x24BDAC7A8](v21);
  v19 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v18 = (char *)v14 - v11;
  v32 = v0 + 56;
  result = swift_beginAccess();
  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
  {
    v29 = 0;
    v25 = v0 + 256;
    v16 = v0 + 232;
    v24 = &v33;
    v14[3] = *MEMORY[0x24BDE02F8];
    *(_QWORD *)&v13 = 136315394;
    v30 = v13;
    v28 = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v13 = 136315138;
    v15 = v13;
    v17 = 0x800000022DF03EC0;
    v27 = v2;
    v31 = v5;
    v26 = v1;
    __asm { BR              X9 }
  }
  return result;
}

Swift::Void __swiftcall NXConnection.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(id, uint64_t);
  id v12;
  char v13[24];

  v1 = v0;
  if (qword_255DD21D0 != -1)
    swift_once();
  v2 = sub_22DEFA674();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DD21D8);
  v3 = sub_22DEFA65C();
  v4 = sub_22DEFABA8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DE7A000, v3, v4, "cancel", v5, 2u);
    MEMORY[0x22E321E0C](v5, -1, -1);
  }

  *(_BYTE *)(v1 + 16) = 1;
  if (*(_QWORD *)(v1 + 208) && (*(_BYTE *)(v1 + 203) & 1) == 0)
  {
    *(_BYTE *)(v1 + 203) = 1;
    swift_retain();
    sub_22DEFA854();
    swift_release();
  }
  type metadata accessor for NXError();
  v13[0] = 22;
  v6 = NXError.__allocating_init(_:_:_:)((uint64_t)v13, 0xD000000000000013, 0x800000022DF037A0, 0);
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 232);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = v7 + 48;
    do
    {
      v10 = *(void **)(v9 - 16);
      v11 = *(void (**)(id, uint64_t))(v9 - 8);
      v9 += 24;
      v12 = v10;
      swift_retain();
      v11(v6, 1);

      swift_release();
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v1 + 232) = MEMORY[0x24BEE4AF8];

  swift_bridgeObjectRelease();
  sub_22DEE32B8();
}

uint64_t sub_22DEE32B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char v85[9];

  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC72F8);
  v84 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v82 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7308);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v83 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v74 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7300);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7310);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v74 - v16;
  if (*(_BYTE *)(v0 + 16) != 1)
    return result;
  if (*(_QWORD *)(v0 + 208))
    return result;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 232) + 16))
    return result;
  swift_beginAccess();
  v18 = *(_QWORD *)(v0 + 72);
  v19 = *(_QWORD *)(v18 + 64);
  v76 = v0;
  v77 = v18 + 64;
  v20 = 1 << *(_BYTE *)(v18 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v79 = (unint64_t)(v20 + 63) >> 6;
  v80 = v18;
  v75 = v79 - 1;
  result = swift_bridgeObjectRetain();
  v23 = 0;
  v81 = v6;
  v24 = (uint64_t *)&unk_255DC7318;
  if (!v22)
    goto LABEL_11;
LABEL_9:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
LABEL_10:
  v27 = *(_QWORD *)(v80 + 56);
  *(_QWORD *)v14 = *(_QWORD *)(*(_QWORD *)(v80 + 48) + 8 * v26);
  v28 = v27 + *(_QWORD *)(v8 + 72) * v26;
  v29 = v24;
  v30 = __swift_instantiateConcreteTypeFromMangledName(v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(&v14[*(int *)(v30 + 48)], v28, v7);
  v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v32 = v30;
  v24 = v29;
  v31(v14, 0, 1, v32);
  while (1)
  {
    sub_22DEA4DD0((uint64_t)v14, (uint64_t)v17, &qword_255DC7310);
    v37 = __swift_instantiateConcreteTypeFromMangledName(v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v17, 1, v37) == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v17[*(int *)(v37 + 48)], v7);
    sub_22DEFAB0C();
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v22)
      goto LABEL_9;
LABEL_11:
    v33 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    if (v33 < v79)
    {
      v34 = *(_QWORD *)(v77 + 8 * v33);
      if (v34)
        goto LABEL_14;
      v35 = v23 + 2;
      ++v23;
      if (v33 + 1 < v79)
      {
        v34 = *(_QWORD *)(v77 + 8 * v35);
        if (v34)
          goto LABEL_17;
        v23 = v33 + 1;
        if (v33 + 2 < v79)
        {
          v34 = *(_QWORD *)(v77 + 8 * (v33 + 2));
          if (v34)
          {
            v33 += 2;
            goto LABEL_14;
          }
          v35 = v33 + 3;
          v23 = v33 + 2;
          if (v33 + 3 < v79)
          {
            v34 = *(_QWORD *)(v77 + 8 * v35);
            if (v34)
            {
LABEL_17:
              v33 = v35;
LABEL_14:
              v22 = (v34 - 1) & v34;
              v26 = __clz(__rbit64(v34)) + (v33 << 6);
              v23 = v33;
              goto LABEL_10;
            }
            while (1)
            {
              v33 = v35 + 1;
              if (__OFADD__(v35, 1))
                goto LABEL_77;
              if (v33 >= v79)
                break;
              v34 = *(_QWORD *)(v77 + 8 * v33);
              ++v35;
              if (v34)
                goto LABEL_14;
            }
            v23 = v75;
          }
        }
      }
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(v24);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v14, 1, 1, v36);
    v22 = 0;
  }
  swift_release();
  v38 = v76;
  *(_QWORD *)(v76 + 72) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v39 = *(_QWORD *)(v38 + 80);
  v40 = *(_QWORD *)(v39 + 64);
  v80 = v39 + 64;
  v41 = 1 << *(_BYTE *)(v39 + 32);
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  v43 = v42 & v40;
  v44 = (unint64_t)(v41 + 63) >> 6;
  v79 = v44 - 1;
  result = swift_bridgeObjectRetain();
  v45 = 0;
  v46 = v78;
  v47 = v83;
  if (!v43)
    goto LABEL_37;
LABEL_35:
  v51 = __clz(__rbit64(v43));
  v43 &= v43 - 1;
  v52 = v51 | (v45 << 6);
  while (2)
  {
    v53 = *(_QWORD *)(v39 + 56);
    *v47 = *(_QWORD *)(*(_QWORD *)(v39 + 48) + 8 * v52);
    v54 = v84;
    v55 = v53 + *(_QWORD *)(v84 + 72) * v52;
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    v47 = v83;
    v57(&v83[*(int *)(v56 + 48)], v55, v46);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v47, 0, 1, v56);
    v58 = (uint64_t)v81;
    while (1)
    {
      sub_22DEA4DD0((uint64_t)v47, v58, &qword_255DC7308);
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v58, 1, v63) == 1)
      {
        swift_release();
        v64 = v76;
        *(_QWORD *)(v76 + 80) = MEMORY[0x24BEE4B00];
        swift_bridgeObjectRelease();
        v65 = *(void **)(v64 + 88);
        if (v65)
        {
          objc_msgSend(v65, sel_invalidate);
          v66 = *(void **)(v64 + 88);
        }
        else
        {
          v66 = 0;
        }
        *(_QWORD *)(v64 + 88) = 0;

        if (*(_QWORD *)(v64 + 96))
        {
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
          sub_22DEFAB48();
          swift_release();
        }
        *(_QWORD *)(v64 + 96) = 0;
        swift_release();
        v67 = *(void **)(v64 + 104);
        *(_QWORD *)(v64 + 104) = 0;

        *(_QWORD *)(v64 + 128) = 0;
        *(_QWORD *)(v64 + 136) = 0;
        swift_bridgeObjectRelease();
        v68 = *(void **)(v64 + 112);
        if (v68)
        {
          objc_msgSend(v68, sel_invalidate);
          v69 = *(void **)(v64 + 112);
        }
        else
        {
          v69 = 0;
        }
        *(_QWORD *)(v64 + 112) = 0;

        if (*(_QWORD *)(v64 + 120))
        {
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
          sub_22DEFAB48();
          swift_release();
        }
        *(_QWORD *)(v64 + 120) = 0;
        swift_release();
        v70 = *(void **)(v64 + 264);
        if (v70)
        {
          objc_msgSend(v70, sel_invalidate);
          v71 = *(void **)(v64 + 264);
        }
        else
        {
          v71 = 0;
        }
        *(_QWORD *)(v64 + 264) = 0;

        v72 = *(void **)(v64 + 224);
        *(_QWORD *)(v64 + 224) = 0;

        if (*(_BYTE *)(v64 + 257) == 1)
        {
          type metadata accessor for NXError();
          v85[0] = 8;
          v73 = NXError.__allocating_init(_:_:_:)((uint64_t)v85, 0x64656C65636E6143, 0xE800000000000000, 0);
          sub_22DEEECD0(0, v73);

        }
        if (*(_QWORD *)(v64 + 48))
        {
          swift_retain();
          sub_22DEFA5C0();
          swift_release();
        }
        *(_QWORD *)(v64 + 48) = 0;
        return swift_release();
      }
      v48 = v58 + *(int *)(v63 + 48);
      v49 = v84;
      v50 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v82, v48, v46);
      sub_22DEFAB0C();
      result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v50, v46);
      if (v43)
        goto LABEL_35;
LABEL_37:
      v59 = v45 + 1;
      if (__OFADD__(v45, 1))
        goto LABEL_76;
      v58 = (uint64_t)v81;
      if (v59 < v44)
      {
        v60 = *(_QWORD *)(v80 + 8 * v59);
        if (v60)
          goto LABEL_40;
        v61 = v45 + 2;
        ++v45;
        if (v59 + 1 < v44)
        {
          v60 = *(_QWORD *)(v80 + 8 * v61);
          if (v60)
            goto LABEL_43;
          v45 = v59 + 1;
          if (v59 + 2 < v44)
          {
            v60 = *(_QWORD *)(v80 + 8 * (v59 + 2));
            if (v60)
            {
              v59 += 2;
              goto LABEL_40;
            }
            v61 = v59 + 3;
            v45 = v59 + 2;
            if (v59 + 3 < v44)
              break;
          }
        }
      }
LABEL_54:
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v47, 1, 1, v62);
      v43 = 0;
    }
    v60 = *(_QWORD *)(v80 + 8 * v61);
    if (v60)
    {
LABEL_43:
      v59 = v61;
LABEL_40:
      v43 = (v60 - 1) & v60;
      v52 = __clz(__rbit64(v60)) + (v59 << 6);
      v45 = v59;
      continue;
    }
    break;
  }
  while (1)
  {
    v59 = v61 + 1;
    if (__OFADD__(v61, 1))
      break;
    if (v59 >= v44)
    {
      v45 = v79;
      goto LABEL_54;
    }
    v60 = *(_QWORD *)(v80 + 8 * v59);
    ++v61;
    if (v60)
      goto LABEL_40;
  }
LABEL_78:
  __break(1u);
  return result;
}

BOOL sub_22DEE3B38()
{
  _QWORD *v0;
  BOOL v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD v46[2];
  uint8_t *v47;
  uint64_t v48;
  __int128 aBlock;
  __int128 v50;
  __int128 v51;
  char v52;
  uint64_t v53;

  v2 = v0;
  v3 = *v0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)v0[8];
  if (v7)
  {
    v8 = v7;
    swift_willThrow();
  }
  else
  {
    v9 = v2[13];
    v1 = v9 != 0;
    if (!v9 && !v2[14])
    {
      if (qword_255DD21D0 != -1)
        swift_once();
      v10 = sub_22DEFA674();
      __swift_project_value_buffer(v10, (uint64_t)qword_255DD21D8);
      swift_retain_n();
      v11 = sub_22DEFA65C();
      v12 = sub_22DEFABA8();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v48 = swift_slowAlloc();
        v53 = v48;
        v47 = v13;
        *(_DWORD *)v13 = 136315138;
        v46[1] = v13 + 4;
        v14 = *((_BYTE *)v2 + 200);
        v15 = *(_OWORD *)(v2 + 21);
        aBlock = *(_OWORD *)(v2 + 19);
        v50 = v15;
        v51 = *(_OWORD *)(v2 + 23);
        v52 = v14;
        sub_22DE8D848();
        v16 = sub_22DEFAE3C();
        *(_QWORD *)&aBlock = sub_22DE8C348(v16, v17, &v53);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        swift_release_n();
        v18 = v47;
        _os_log_impl(&dword_22DE7A000, v11, v12, "NAN discover start: endpoint=%s", v47, 0xCu);
        v19 = v48;
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v19, -1, -1);
        MEMORY[0x22E321E0C](v18, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE297F0]), sel_init);
      v21 = (void *)v2[14];
      v2[14] = v20;
      v22 = v20;

      *(_QWORD *)&aBlock = v2[4];
      v23 = aBlock;
      v24 = (void *)NXEnvironmentValues.dispatchQueue.getter();
      objc_msgSend(v22, sel_setDispatchQueue_, v24);

      objc_msgSend(v22, sel_setControlFlags_, 1);
      *(_QWORD *)&aBlock = v23;
      NXEnvironmentValues.nanMockID.getter();
      if (v25)
      {
        v26 = (void *)sub_22DEFA9D4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v26 = 0;
      }
      objc_msgSend(v22, sel_setMockID_, v26);

      sub_22DEF4E40();
      swift_bridgeObjectRetain();
      v27 = (void *)sub_22DEFA9D4();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setServiceType_, v27);

      v28 = v22;
      v29 = swift_allocObject();
      swift_weakInit();
      v30 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = v29;
      *(_QWORD *)(v31 + 24) = v30;
      *(_QWORD *)&v51 = sub_22DEF4204;
      *((_QWORD *)&v51 + 1) = v31;
      v32 = MEMORY[0x24BDAC760];
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v50 = sub_22DEE7BB8;
      *((_QWORD *)&v50 + 1) = &block_descriptor_132;
      v33 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v28, sel_setEndpointFoundHandler_, v33);
      v34 = v33;
      v35 = v28;
      _Block_release(v34);
      v36 = swift_allocObject();
      swift_weakInit();
      v37 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = v36;
      *(_QWORD *)(v38 + 24) = v37;
      *(_QWORD *)&v51 = sub_22DEF4214;
      *((_QWORD *)&v51 + 1) = v38;
      *(_QWORD *)&aBlock = v32;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v50 = sub_22DEBCBA0;
      *((_QWORD *)&v50 + 1) = &block_descriptor_140;
      v39 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v35, sel_activateWithCompletion_, v39);
      _Block_release(v39);
      if (v2[15])
      {
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
        sub_22DEFAB48();
        swift_release();
      }
      v40 = sub_22DEFAAC4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v6, 1, 1, v40);
      v42 = sub_22DEC37B0(&qword_255DC6D88, v41, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
      v43 = (_QWORD *)swift_allocObject();
      v43[2] = v2;
      v43[3] = v42;
      v43[4] = v2;
      v43[5] = v3;
      swift_retain_n();
      v44 = sub_22DEE8290((uint64_t)v6, (uint64_t)&unk_255DC7688, (uint64_t)v43);

      v2[15] = v44;
      swift_release();
    }
  }
  return v1;
}

BOOL sub_22DEE40F0()
{
  _QWORD *v0;
  BOOL v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v2 = v0;
  v3 = *v0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)v0[8];
  if (v7)
  {
    v8 = v7;
    swift_willThrow();
  }
  else
  {
    v9 = v2[17];
    v1 = v9 != 0;
    if (!v9 && !v2[11])
    {
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE297E0]), sel_init);
      v11 = (void *)v2[11];
      v2[11] = v10;
      v12 = v10;

      objc_msgSend(v12, sel_setControlFlags_, 1);
      aBlock[0] = v2[4];
      v13 = (void *)NXEnvironmentValues.dispatchQueue.getter();
      objc_msgSend(v12, sel_setDispatchQueue_, v13);

      objc_msgSend(v12, sel_setPeerEndpoint_, v2[13]);
      objc_msgSend(v12, sel_setTrafficFlags_, *((unsigned int *)v2 + 5));
      v14 = swift_allocObject();
      swift_weakInit();
      v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v14;
      *(_QWORD *)(v16 + 24) = v15;
      aBlock[4] = sub_22DEF43D0;
      aBlock[5] = v16;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22DEBCBA0;
      aBlock[3] = &block_descriptor_168_0;
      v17 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v12, sel_activateWithCompletion_, v17);
      _Block_release(v17);
      if (v2[12])
      {
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
        sub_22DEFAB48();
        swift_release();
      }
      v18 = sub_22DEFAAC4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
      v20 = sub_22DEC37B0(&qword_255DC6D88, v19, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
      v21 = (_QWORD *)swift_allocObject();
      v21[2] = v2;
      v21[3] = v20;
      v21[4] = v2;
      v21[5] = v3;
      swift_retain_n();
      v22 = sub_22DEE8290((uint64_t)v6, (uint64_t)&unk_255DC76B8, (uint64_t)v21);

      v2[12] = v22;
      swift_release();
    }
  }
  return v1;
}

uint64_t sub_22DEE43E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, os_log_t, uint64_t);
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(char *, uint64_t);
  uint8_t *v61;
  unint64_t v62;
  os_log_t v63;
  uint64_t v64;
  os_log_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void (*v72)(char *, os_log_t, uint64_t);
  os_log_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[6];
  char v79;
  uint64_t v80;

  v2 = v1;
  v3 = v0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7330);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7338);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DEFA734();
  v11 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  v77 = v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v71 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v71 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v21);
  v75 = (char *)&v71 - v23;
  *(_BYTE *)(v0 + 144) = 0;
  *(_BYTE *)(v0 + 203) = 0;
  if (*(_QWORD *)(v0 + 208))
  {
    v24 = qword_255DD21D0;
    swift_retain_n();
    if (v24 != -1)
      swift_once();
    v25 = sub_22DEFA674();
    __swift_project_value_buffer(v25, (uint64_t)qword_255DD21D8);
    swift_retain_n();
    v26 = sub_22DEFA65C();
    v27 = sub_22DEFABA8();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      LODWORD(v72) = v27;
      v73 = v26;
      v74 = v2;
      v28 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v78[0] = v71;
      *(_DWORD *)v28 = 136315394;
      v29 = v75;
      sub_22DEFA86C();
      v30 = sub_22DEFA6EC();
      v32 = v31;
      v33 = v29;
      v34 = v76;
      v75 = *(char **)(v77 + 8);
      ((void (*)(char *, uint64_t))v75)(v33, v76);
      v80 = sub_22DE8C348(v30, v32, v78);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v28 + 12) = 2080;
      sub_22DEFA7DC();
      v35 = sub_22DEFA8FC();
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v6, 1, v35) == 1)
      {
        v37 = 7104878;
        v38 = &qword_255DC7330;
        v39 = (uint64_t)v6;
      }
      else
      {
        sub_22DEFA8F0();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v35);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v9, 1, v34) != 1)
        {
          v37 = sub_22DEFA6EC();
          v42 = v62;
          ((void (*)(char *, uint64_t))v75)(v9, v34);
          goto LABEL_20;
        }
        v37 = 7104878;
        v38 = &qword_255DC7338;
        v39 = (uint64_t)v9;
      }
      sub_22DE8731C(v39, v38);
      v42 = 0xE300000000000000;
LABEL_20:
      v80 = sub_22DE8C348(v37, v42, v78);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      swift_release_n();
      v63 = v73;
      _os_log_impl(&dword_22DE7A000, v73, (os_log_type_t)v72, "connection start: server, peer=%s, self=%s", (uint8_t *)v28, 0x16u);
      v64 = v71;
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v64, -1, -1);
      MEMORY[0x22E321E0C](v28, -1, -1);

      swift_release();
      goto LABEL_23;
    }
    swift_release_n();

  }
  else
  {
    v73 = v22;
    if (*(_QWORD *)(v0 + 136))
    {
      v78[0] = *(_QWORD *)(v0 + 32);
      swift_bridgeObjectRetain();
      NXEnvironmentValues.networkServerPort.getter();
      result = sub_22DEFA6E0();
      v41 = v1;
      if (v1)
        return result;
    }
    else
    {
      v43 = *(_QWORD *)(v0 + 152);
      v44 = *(_QWORD *)(v0 + 160);
      v45 = *(_QWORD *)(v0 + 168);
      v74 = *(_QWORD *)(v0 + 176);
      v46 = *(_QWORD *)(v0 + 184);
      v72 = *(void (**)(char *, os_log_t, uint64_t))(v0 + 192);
      LODWORD(v71) = *(unsigned __int8 *)(v0 + 200);
      v78[0] = v43;
      v78[1] = v44;
      v78[2] = v45;
      v78[3] = v74;
      v78[4] = v46;
      v78[5] = (uint64_t)v72;
      v79 = v71;
      v80 = *(_QWORD *)(v0 + 32);
      sub_22DE80988(v43, v44, v45, v74, v46, (uint64_t)v72, v71);
      NXEnvironmentValues.networkServerPort.getter();
      NXEndpoint.networkEndpoint(defaultPort:)();
      v47 = v45;
      v41 = v1;
      result = sub_22DE809FC(v43, v44, v47, v74, v46, (uint64_t)v72, v71);
      v20 = v17;
      if (v1)
        return result;
    }
    v48 = v77;
    v49 = v73;
    v50 = v20;
    v51 = v76;
    (*(void (**)(os_log_t, char *, uint64_t))(v77 + 32))(v73, v50, v76);
    if (qword_255DD21D0 != -1)
      swift_once();
    v74 = v41;
    v52 = sub_22DEFA674();
    __swift_project_value_buffer(v52, (uint64_t)qword_255DD21D8);
    v53 = *(void (**)(char *, os_log_t, uint64_t))(v48 + 16);
    v53(v14, v49, v51);
    v54 = sub_22DEFA65C();
    v55 = sub_22DEFABA8();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v78[0] = v57;
      *(_DWORD *)v56 = 136315138;
      v72 = v53;
      v58 = sub_22DEFA6EC();
      v80 = sub_22DE8C348(v58, v59, v78);
      v53 = v72;
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      v60 = *(void (**)(char *, uint64_t))(v77 + 8);
      v60(v14, v76);
      _os_log_impl(&dword_22DE7A000, v54, v55, "connection start: client, peer=%s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v57, -1, -1);
      v61 = v56;
      v51 = v76;
      MEMORY[0x22E321E0C](v61, -1, -1);
    }
    else
    {
      v60 = *(void (**)(char *, uint64_t))(v48 + 8);
      v60(v14, v51);
    }

    sub_22DEFA8E4();
    swift_allocObject();
    sub_22DEFA8D8();
    sub_22DEFA8B4();
    sub_22DEFA8A8();
    sub_22DEFA89C();
    sub_22DEFA8C0();
    sub_22DEFA8CC();
    v65 = v73;
    v53(v75, v73, v51);
    sub_22DEFA890();
    swift_retain();
    sub_22DEFA884();
    sub_22DEFA878();
    swift_allocObject();
    v66 = sub_22DEFA818();
    swift_release();
    v60((char *)v65, v51);
    *(_QWORD *)(v0 + 208) = v66;
    swift_retain();
    swift_release();
  }
LABEL_23:
  v67 = swift_allocObject();
  swift_weakInit();
  v68 = swift_allocObject();
  swift_weakInit();
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = v67;
  *(_QWORD *)(v69 + 24) = v68;
  swift_retain();
  swift_retain();
  sub_22DEFA80C();
  swift_release();
  swift_release();
  v78[0] = *(_QWORD *)(v3 + 32);
  v70 = (void *)NXEnvironmentValues.dispatchQueue.getter();
  sub_22DEFA83C();

  return swift_release();
}

void sub_22DEE4C50(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;

  v2 = v1;
  if (qword_255DD21D0 != -1)
    swift_once();
  v4 = sub_22DEFA674();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DD21D8);
  v5 = sub_22DEFA65C();
  v6 = sub_22DEFABA8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109120;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v5, v6, "pairing start: setup=%{BOOL}d", v7, 8u);
    MEMORY[0x22E321E0C](v7, -1, -1);
  }

  v8 = *(void **)(v2 + 64);
  *(_QWORD *)(v2 + 64) = 0;

  *(_BYTE *)(v2 + 256) = 0;
  *(_QWORD *)(v2 + 272) = mach_absolute_time();
  sub_22DEED228(a1 & 1);
}

uint64_t NXConnection._report(event:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t *v21;
  __int128 v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  unsigned __int8 v66;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7358);
  v54 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7300);
  v62 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7310);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (int64_t *)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v47 - v11;
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  v15 = *(_QWORD *)(v1 + 72);
  v16 = *(_QWORD *)(v15 + 64);
  v48 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v49 = (unint64_t)(v17 + 63) >> 6;
  v47 = v49 - 1;
  v53 = v15;
  result = swift_bridgeObjectRetain();
  v58 = 0;
  v21 = (uint64_t *)&unk_255DC7318;
  *(_QWORD *)&v22 = 134218242;
  v51 = v22;
  v50 = MEMORY[0x24BEE4AD8] + 8;
  v61 = v10;
  v52 = v3;
  v55 = v5;
  while (1)
  {
    if (v19)
    {
      v59 = (v19 - 1) & v19;
      v25 = __clz(__rbit64(v19)) | (v58 << 6);
LABEL_8:
      v26 = *(_QWORD *)(v53 + 56);
      *v10 = *(_QWORD *)(*(_QWORD *)(v53 + 48) + 8 * v25);
      v27 = v62;
      v28 = v26 + *(_QWORD *)(v62 + 72) * v25;
      v29 = __swift_instantiateConcreteTypeFromMangledName(v21);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
      v10 = v61;
      v30((char *)v61 + *(int *)(v29 + 48), v28, v5);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 0, 1, v29);
      v31 = v57;
      goto LABEL_27;
    }
    v32 = v58 + 1;
    if (__OFADD__(v58, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    v31 = v57;
    if (v32 < v49)
    {
      v33 = *(_QWORD *)(v48 + 8 * v32);
      if (v33)
        goto LABEL_12;
      v34 = v58 + 2;
      ++v58;
      if (v32 + 1 < v49)
      {
        v33 = *(_QWORD *)(v48 + 8 * v34);
        if (v33)
          goto LABEL_15;
        v58 = v32 + 1;
        if (v32 + 2 < v49)
        {
          v33 = *(_QWORD *)(v48 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          v34 = v32 + 3;
          v58 = v32 + 2;
          if (v32 + 3 < v49)
            break;
        }
      }
    }
LABEL_26:
    v35 = __swift_instantiateConcreteTypeFromMangledName(v21);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v10, 1, 1, v35);
    v59 = 0;
LABEL_27:
    sub_22DEA4DD0((uint64_t)v10, (uint64_t)v31, &qword_255DC7310);
    v36 = v21;
    v37 = __swift_instantiateConcreteTypeFromMangledName(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v31, 1, v37) == 1)
      return swift_release();
    v38 = *(_QWORD *)v31;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v60, &v31[*(int *)(v37 + 48)], v5);
    if (qword_255DD21D0 != -1)
      swift_once();
    v39 = sub_22DEFA674();
    __swift_project_value_buffer(v39, (uint64_t)qword_255DD21D8);
    sub_22DEC36C8(v12, v13, v14);
    sub_22DEC36C8(v12, v13, v14);
    v40 = sub_22DEFA65C();
    v41 = sub_22DEFABA8();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v63 = v43;
      v64 = v12;
      *(_DWORD *)v42 = v51;
      *(_QWORD *)(v42 + 4) = v38;
      *(_WORD *)(v42 + 12) = 2080;
      v65 = v13;
      v66 = v14;
      NXConnection.Event.description.getter();
      *(_QWORD *)(v42 + 14) = sub_22DE8C348(v44, v45, &v63);
      swift_bridgeObjectRelease();
      sub_22DEC377C(v12, v13, v14);
      sub_22DEC377C(v12, v13, v14);
      _os_log_impl(&dword_22DE7A000, v40, v41, "event monitor report: id=%llu, event={%s}", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v43, -1, -1);
      v46 = v42;
      v3 = v52;
      MEMORY[0x22E321E0C](v46, -1, -1);
    }
    else
    {
      sub_22DEC377C(v12, v13, v14);
      sub_22DEC377C(v12, v13, v14);
    }

    v10 = v61;
    v64 = v12;
    v65 = v13;
    v66 = v14;
    sub_22DEC36C8(v12, v13, v14);
    v5 = v55;
    v23 = v56;
    v24 = v60;
    sub_22DEFAB00();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v3);
    result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v24, v5);
    v21 = v36;
    v19 = v59;
  }
  v33 = *(_QWORD *)(v48 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v32 = v34;
LABEL_12:
    v58 = v32;
    v59 = (v33 - 1) & v33;
    v25 = __clz(__rbit64(v33)) + (v32 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v49)
    {
      v58 = v47;
      goto LABEL_26;
    }
    v33 = *(_QWORD *)(v48 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_12;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t NXConnection.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DEE53AC + 4 * byte_22DF00DDB[*v0]))(0x696C616974696E69, 0xEA0000000000657ALL);
}

uint64_t sub_22DEE53AC()
{
  return 0x6F637369446E616ELL;
}

uint64_t sub_22DEE53CC()
{
  return 0x53617461446E616ELL;
}

uint64_t sub_22DEE53F0()
{
  return 0x537463656E6E6F63;
}

uint64_t sub_22DEE5410()
{
  return 0x577463656E6E6F63;
}

uint64_t sub_22DEE5430()
{
  return 0x6972655672696170;
}

uint64_t sub_22DEE5468()
{
  return 0x7574655372696170;
}

uint64_t sub_22DEE54A0()
{
  return 0x7964616572;
}

uint64_t sub_22DEE54B4()
{
  return 0x69737365636F7270;
}

uint64_t sub_22DEE54CC()
{
  return 0x617453726F727265;
}

uint64_t sub_22DEE54E4()
{
  return 0x696157726F727265;
}

uint64_t sub_22DEE5500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = NXConnection.State.rawValue.getter();
  v2 = v1;
  if (v0 == NXConnection.State.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t NXConnection.perform(command:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)a1;
  *(_BYTE *)(v3 + 64) = *(_BYTE *)(a1 + 16);
  sub_22DEC37B0(&qword_255DC6D88, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  sub_22DEFAA88();
  return swift_task_switch();
}

uint64_t sub_22DEE5610()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  char v20;
  uint64_t (*v21)(void);
  uint64_t v23;
  _QWORD v24[2];
  char v25;

  if (qword_255DD21D0 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = sub_22DEFA674();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DD21D8);
  sub_22DEC34A8(v3, v2, v1);
  sub_22DEC34A8(v3, v2, v1);
  v5 = sub_22DEFA65C();
  v6 = sub_22DEFABA8();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_BYTE *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 56);
  if (v7)
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v11 = 136315138;
    v23 = v12;
    v24[0] = v10;
    v24[1] = v9;
    v25 = v8;
    v13 = NXConnection.Command.description.getter();
    *(_QWORD *)(v0 + 16) = sub_22DE8C348(v13, v14, &v23);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();
    sub_22DEC34B8(v10, v9, v8);
    sub_22DEC34B8(v10, v9, v8);
    _os_log_impl(&dword_22DE7A000, v5, v6, "perform command: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v12, -1, -1);
    MEMORY[0x22E321E0C](v11, -1, -1);
  }
  else
  {
    sub_22DEC34B8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
    sub_22DEC34B8(v10, v9, v8);
  }

  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {
    v15 = *(_QWORD *)(v0 + 40);
    LOBYTE(v24[0]) = *(_QWORD *)(v0 + 48);
    *(_DWORD *)(v15 + 280) = sub_22DE8043C((unsigned __int8 *)v24);
    *(_BYTE *)(v15 + 284) = 0;
    swift_beginAccess();
    LOBYTE(v24[0]) = *(_BYTE *)(v15 + 56);
    if (NXConnection.State.rawValue.getter() == 0x7574655372696170 && v16 == 0xED00007469615770)
    {
      swift_bridgeObjectRelease();
LABEL_13:
      sub_22DEE4C50(1);
      goto LABEL_14;
    }
    v20 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
      goto LABEL_13;
  }
  else
  {
    v17 = *(void **)(*(_QWORD *)(v0 + 40) + 264);
    if (!v17)
    {
      type metadata accessor for NXError();
      LOBYTE(v24[0]) = 11;
      NXError.__allocating_init(_:_:_:)((uint64_t)v24, 0xD000000000000012, 0x800000022DF037C0, 0);
      swift_willThrow();
      v21 = *(uint64_t (**)(void))(v0 + 8);
      return v21();
    }
    v18 = v17;
    v19 = (void *)sub_22DEFA9D4();
    objc_msgSend(v18, sel_tryPIN_, v19);

  }
LABEL_14:
  v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NXConnection.pairingTryPassword(_:)(Swift::String a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  char v5;

  v2 = *(void **)(v1 + 264);
  if (v2)
  {
    v3 = v2;
    v4 = (void *)sub_22DEFA9D4();
    objc_msgSend(v3, sel_tryPIN_, v4);

  }
  else
  {
    type metadata accessor for NXError();
    v5 = 11;
    NXError.__allocating_init(_:_:_:)((uint64_t)&v5, 0xD000000000000012, 0x800000022DF037C0, 0);
    swift_willThrow();
  }
}

unint64_t NXConnection.Command.description.getter()
{
  uint64_t v0;
  unint64_t v2;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v2 = 0xD00000000000001ALL;
    sub_22DEEFD2C();
  }
  else
  {
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v2 = 0xD000000000000018;
    sub_22DEEFD70();
  }
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22DEE5B34()
{
  sub_22DEF0714();
  return sub_22DEFAF44();
}

uint64_t sub_22DEE5B5C()
{
  sub_22DEF0714();
  return sub_22DEFAF50();
}

uint64_t sub_22DEE5B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22DEFAE54();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22DEE5C00()
{
  sub_22DEF068C();
  return sub_22DEFAF44();
}

uint64_t sub_22DEE5C28()
{
  sub_22DEF068C();
  return sub_22DEFAF50();
}

unint64_t sub_22DEE5C50()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0xD000000000000015;
}

uint64_t sub_22DEE5C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DEF1BC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22DEE5CB4()
{
  sub_22DEF0648();
  return sub_22DEFAF44();
}

uint64_t sub_22DEE5CDC()
{
  sub_22DEF0648();
  return sub_22DEFAF50();
}

uint64_t NXConnection.Command.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7378);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7380);
  v18 = *(_QWORD *)(v6 - 8);
  v19 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7388);
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *v1;
  v17 = v1[1];
  v12 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEF0648();
  sub_22DEFAF2C();
  if ((v12 & 1) != 0)
  {
    LOBYTE(v24) = 1;
    sub_22DEF068C();
    sub_22DEFADE8();
    LOBYTE(v24) = v22;
    sub_22DEF06D0();
    v13 = v21;
    sub_22DEFAE30();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v13);
  }
  else
  {
    LOBYTE(v24) = 0;
    sub_22DEF0714();
    sub_22DEFADE8();
    v24 = v22;
    v25 = v17;
    sub_22DEF0758();
    v14 = v19;
    sub_22DEFAE30();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v9);
}

uint64_t NXConnection.Command.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  _QWORD *v26;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73A0);
  v4 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v32 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v33 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73A8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73B0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_22DEF0648();
  v15 = v37;
  sub_22DEFAF20();
  if (!v15)
  {
    v29 = v7;
    v16 = v33;
    v37 = v11;
    v17 = sub_22DEFADDC();
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      v28 = *(unsigned __int8 *)(v17 + 32);
      if ((v28 & 1) != 0)
      {
        LOBYTE(v35) = 1;
        sub_22DEF068C();
        sub_22DEFAD7C();
        sub_22DEF079C();
        v18 = v31;
        sub_22DEFADD0();
        (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v16, v18);
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v13, v10);
        v19 = 0;
        v20 = v35;
      }
      else
      {
        LOBYTE(v35) = 0;
        sub_22DEF0714();
        sub_22DEFAD7C();
        sub_22DEF07E0();
        sub_22DEFADD0();
        v25 = v37;
        (*(void (**)(_BYTE *, uint64_t))(v29 + 8))(v9, v6);
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v25 + 8))(v13, v10);
        v20 = v35;
        v19 = v36;
      }
      v26 = v30;
      *v30 = v20;
      v26[1] = v19;
      *((_BYTE *)v26 + 16) = v28;
    }
    else
    {
      v21 = sub_22DEFACBC();
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC5FA8);
      *v23 = &type metadata for NXConnection.Command;
      sub_22DEFAD88();
      sub_22DEFACB0();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v13, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_22DEE6330@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return NXConnection.Command.init(from:)(a1, a2);
}

uint64_t sub_22DEE6344(_QWORD *a1)
{
  return NXConnection.Command.encode(to:)(a1);
}

uint64_t NXConnection.events.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73D0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7300);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v2 + 40);
  if (v15 == -1)
  {
    __break(1u);
  }
  else
  {
    v25[1] = a1;
    v26 = v12;
    *(_QWORD *)(v2 + 40) = v15 + 1;
    if (qword_255DD21D0 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v16 = sub_22DEFA674();
  __swift_project_value_buffer(v16, (uint64_t)qword_255DD21D8);
  v17 = sub_22DEFA65C();
  v18 = sub_22DEFAB84();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v25[0] = v2;
    v20 = v19;
    *(_DWORD *)v19 = 134217984;
    v27 = v15;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v17, v18, "event monitor start: id=%llu", v20, 0xCu);
    MEMORY[0x22E321E0C](v20, -1, -1);
  }

  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE6A10], v7);
  sub_22DEFAAD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v6, v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v11);
  swift_beginAccess();
  sub_22DE92048((uint64_t)v6, v15, &qword_255DC73C8, &qword_255DC7300, &qword_255DC75E0);
  swift_endAccess();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v15;
  sub_22DEFAAE8();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v11);
}

uint64_t sub_22DEE666C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch();
}

uint64_t sub_22DEE6688()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v2, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEE6744()
{
  uint64_t v0;

  sub_22DEE6788(*(_QWORD *)(v0 + 56));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEE6788(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD v11[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DD21D0 != -1)
    swift_once();
  v5 = sub_22DEFA674();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DD21D8);
  v6 = sub_22DEFA65C();
  v7 = sub_22DEFAB84();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    v11[1] = a1;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v6, v7, "event monitor cancel: id=%llu", v8, 0xCu);
    MEMORY[0x22E321E0C](v8, -1, -1);
  }

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7300);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  swift_beginAccess();
  sub_22DE92048((uint64_t)v4, a1, &qword_255DC73C8, &qword_255DC7300, &qword_255DC75E0);
  return swift_endAccess();
}

void NXConnection.Event.description.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_22DEE698C()
{
  sub_22DEFAC98();
  swift_bridgeObjectRelease();
  sub_22DEA95A8();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  return 0xD000000000000018;
}

uint64_t NXConnection.messages.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC72F8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v2 + 40);
  if (v15 == -1)
  {
    __break(1u);
  }
  else
  {
    v25[1] = a1;
    v26 = v12;
    *(_QWORD *)(v2 + 40) = v15 + 1;
    if (qword_255DD21D0 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v16 = sub_22DEFA674();
  __swift_project_value_buffer(v16, (uint64_t)qword_255DD21D8);
  v17 = sub_22DEFA65C();
  v18 = sub_22DEFAB84();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v25[0] = v2;
    v20 = v19;
    *(_DWORD *)v19 = 134217984;
    v27 = v15;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v17, v18, "message monitor start: id=%llu", v20, 0xCu);
    MEMORY[0x22E321E0C](v20, -1, -1);
  }

  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE6A10], v7);
  sub_22DEFAAD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v6, v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v11);
  swift_beginAccess();
  sub_22DE92048((uint64_t)v6, v15, &qword_255DC73D8, &qword_255DC72F8, &qword_255DC75C8);
  swift_endAccess();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v15;
  sub_22DEFAAE8();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v11);
}

uint64_t sub_22DEE6F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  v11[5] = a2;
  sub_22DEB3614((uint64_t)v8, a4, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_22DEE704C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch();
}

uint64_t sub_22DEE7068()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v2, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEE7124()
{
  uint64_t v0;

  sub_22DEE7168(*(_QWORD *)(v0 + 56));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEE7168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD v11[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DD21D0 != -1)
    swift_once();
  v5 = sub_22DEFA674();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DD21D8);
  v6 = sub_22DEFA65C();
  v7 = sub_22DEFAB84();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    v11[1] = a1;
    sub_22DEFAC2C();
    _os_log_impl(&dword_22DE7A000, v6, v7, "message monitor cancel: id=%llu", v8, 0xCu);
    MEMORY[0x22E321E0C](v8, -1, -1);
  }

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC72F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  swift_beginAccess();
  sub_22DE92048((uint64_t)v4, a1, &qword_255DC73D8, &qword_255DC72F8, &qword_255DC75C8);
  return swift_endAccess();
}

Swift::Void __swiftcall NXConnection._report(message:)(Nexus::NXConnection::Message message)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  id v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC73E8);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC72F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7308);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - v13;
  v15 = *(void **)message.content.super.isa;
  swift_beginAccess();
  v16 = *(_QWORD *)(v1 + 80);
  v17 = *(_QWORD *)(v16 + 64);
  v36 = v16 + 64;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v37 = (unint64_t)(v18 + 63) >> 6;
  v38 = v16;
  v35 = v37 - 1;
  swift_bridgeObjectRetain();
  v21 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v25 = v24 | (v21 << 6);
  while (2)
  {
    v26 = *(_QWORD *)(v38 + 56);
    *(_QWORD *)v12 = *(_QWORD *)(*(_QWORD *)(v38 + 48) + 8 * v25);
    v27 = v26 + *(_QWORD *)(v6 + 72) * v25;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(&v12[*(int *)(v28 + 48)], v27, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 0, 1, v28);
    while (1)
    {
      sub_22DEA4DD0((uint64_t)v12, (uint64_t)v14, &qword_255DC7308);
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v14, 1, v33) == 1)
      {
        swift_release();
        return;
      }
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v14[*(int *)(v33 + 48)], v5);
      v42 = v15;
      v22 = v15;
      v23 = v39;
      sub_22DEFAB00();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v41);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (v20)
        goto LABEL_6;
LABEL_8:
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v29 < v37)
      {
        v30 = *(_QWORD *)(v36 + 8 * v29);
        if (v30)
          goto LABEL_11;
        v31 = v21 + 2;
        ++v21;
        if (v29 + 1 < v37)
        {
          v30 = *(_QWORD *)(v36 + 8 * v31);
          if (v30)
            goto LABEL_14;
          v21 = v29 + 1;
          if (v29 + 2 < v37)
          {
            v30 = *(_QWORD *)(v36 + 8 * (v29 + 2));
            if (v30)
            {
              v29 += 2;
              goto LABEL_11;
            }
            v31 = v29 + 3;
            v21 = v29 + 2;
            if (v29 + 3 < v37)
              break;
          }
        }
      }
LABEL_25:
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7320);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 1, 1, v32);
      v20 = 0;
    }
    v30 = *(_QWORD *)(v36 + 8 * v31);
    if (v30)
    {
LABEL_14:
      v29 = v31;
LABEL_11:
      v20 = (v30 - 1) & v30;
      v25 = __clz(__rbit64(v30)) + (v29 << 6);
      v21 = v29;
      continue;
    }
    break;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v37)
    {
      v21 = v35;
      goto LABEL_25;
    }
    v30 = *(_QWORD *)(v36 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_22DEE76D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _BYTE v15[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v10 = swift_allocObject();
  swift_beginAccess();
  v11 = (void *)MEMORY[0x22E321ED8](a3 + 16);
  swift_unknownObjectWeakInit();

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v9;
  v12[5] = v10;
  v12[6] = a1;
  v13 = a1;
  sub_22DEB3614((uint64_t)v7, (uint64_t)&unk_255DC76A8, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_22DEE7850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a1;
  v6[10] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEE786C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 112) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 72) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEE7950()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;

  v1 = (void *)v0[14];
  if (v1)
  {
    v2 = *(void **)(v0[13] + 112);
    if (v2 && v1 == v2)
    {
      v4 = qword_255DD21D0;
      v5 = v1;
      if (v4 != -1)
        swift_once();
      v6 = (void *)v0[12];
      v7 = sub_22DEFA674();
      __swift_project_value_buffer(v7, (uint64_t)qword_255DD21D8);
      v8 = v6;
      v9 = sub_22DEFA65C();
      v10 = sub_22DEFABA8();
      v11 = os_log_type_enabled(v9, v10);
      v12 = (void *)v0[12];
      if (v11)
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v13 = 138412290;
        v0[8] = v12;
        v15 = v12;
        sub_22DEFAC2C();
        *v14 = v12;

        _os_log_impl(&dword_22DE7A000, v9, v10, "NAN discover found: endpoint=%@", v13, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6D20);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v14, -1, -1);
        MEMORY[0x22E321E0C](v13, -1, -1);
      }
      else
      {

      }
      v16 = v0[13];
      v17 = *(void **)(v16 + 104);
      *(_QWORD *)(v16 + 104) = v12;

      v18 = (void *)v0[12];
      if (*(_QWORD *)(v16 + 120))
      {
        v19 = v18;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
        sub_22DEFAB48();
        swift_release();
      }
      else
      {
        v20 = v18;
      }
      v21 = (void *)v0[14];
      *(_QWORD *)(v16 + 120) = 0;
      swift_release();
      sub_22DEE1A88();

      v1 = (void *)v0[14];
    }
  }
  swift_release();

  return swift_task_switch();
}

uint64_t sub_22DEE7B9C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 72) = *(_QWORD *)(v0 + 104) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22DEE7BB8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_22DEE7C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a1;
  v6[14] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEE7C24()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 136) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 120) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 144) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 104) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEE7D08()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  BOOL v5;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  uint64_t v21;

  v2 = v0[17];
  v1 = (void *)v0[18];
  if (v1)
  {
    v3 = (void *)v0[16];
    v4 = *(void **)(v2 + 112);
    v5 = v4 && v1 == v4;
    if (v5 && v3 != 0)
    {
      v7 = v1;
      v8 = v3;
      if (qword_255DD21D0 != -1)
        swift_once();
      v9 = sub_22DEFA674();
      __swift_project_value_buffer(v9, (uint64_t)qword_255DD21D8);
      v10 = v3;
      v11 = v3;
      v12 = sub_22DEFA65C();
      v13 = sub_22DEFAB9C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v21 = v15;
        *(_DWORD *)v14 = 136315138;
        swift_getErrorValue();
        v16 = sub_22DEFAEC0();
        v0[12] = sub_22DE8C348(v16, v17, &v21);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DE7A000, v12, v13, "### NAN subscriber start failed: error=%s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v15, -1, -1);
        MEMORY[0x22E321E0C](v14, -1, -1);
      }
      else
      {

      }
      v18 = (void *)v0[18];
      objc_msgSend(v18, sel_invalidate);

      v19 = *(void **)(v2 + 112);
      *(_QWORD *)(v2 + 112) = 0;

      v1 = (void *)v0[18];
    }
  }

  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEE7F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = sub_22DEFA5F0();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6D88, v6, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  v4[6] = sub_22DEFAA88();
  v4[7] = v7;
  return swift_task_switch();
}

uint64_t sub_22DEE7FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  NXEnvironmentValues.clock.getter(*(_QWORD *)(v0 + 40));
  v1 = sub_22DEFAF38();
  v3 = v2;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_255DC7670 + dword_255DC7670);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_22DEE8088;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_22DEE8088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_22DEE8110()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v9;

  if (qword_255DD21D0 != -1)
    swift_once();
  v1 = sub_22DEFA674();
  __swift_project_value_buffer(v1, (uint64_t)qword_255DD21D8);
  v2 = sub_22DEFA65C();
  v3 = sub_22DEFAB9C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_22DE7A000, v2, v3, "### NAN discover timeout", v4, 2u);
    MEMORY[0x22E321E0C](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  type metadata accessor for NXError();
  v9 = 18;
  v6 = NXError.__allocating_init(_:_:_:)((uint64_t)&v9, 0xD000000000000014, 0x800000022DF03DA0, 0);
  v7 = *(void **)(v5 + 64);
  *(_QWORD *)(v5 + 64) = v6;

  *(_QWORD *)(v5 + 120) = 0;
  swift_release();
  sub_22DEE1A88();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEE825C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEE8290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_22DEFAAC4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_22DEFAAB8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_22DE8731C(a1, &qword_255DC6918);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22DEFAA88();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_22DEE83C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  id v17;
  _BYTE v19[24];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v14 = swift_allocObject();
  swift_beginAccess();
  v15 = (void *)MEMORY[0x22E321ED8](a3 + 16);
  swift_unknownObjectWeakInit();

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v13;
  v16[5] = v14;
  v16[6] = a1;
  v17 = a1;
  sub_22DEB3614((uint64_t)v11, a6, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_22DEE8554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a1;
  v6[10] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEE8570()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 112) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 72) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEE8654()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  char v29;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(void **)(v0 + 112);
  if (v2)
  {
    v3 = *(void **)(v1 + 88);
    if (v3 && v2 == v3)
    {
      if (*(_QWORD *)(v1 + 96))
      {
        v5 = v2;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DC66E0);
        sub_22DEFAB48();
        swift_release();
      }
      else
      {
        v6 = v2;
      }
      v7 = *(_QWORD *)(v0 + 96);
      *(_QWORD *)(v1 + 96) = 0;
      swift_release();
      v8 = *(_QWORD **)(v0 + 104);
      v9 = *(void **)(v0 + 112);
      if (v7)
      {
        v10 = *(void **)(v0 + 96);
        v11 = v10;
        objc_msgSend(v9, sel_invalidate);
        v12 = *(void **)(v1 + 88);
        *(_QWORD *)(v1 + 88) = 0;

        type metadata accessor for NXError();
        v29 = 19;
        v13 = v10;
        v14 = NXError.__allocating_init(_:_:_:)((uint64_t)&v29, 0xD000000000000023, 0x800000022DF03DE0, v10);
        v15 = (void *)v8[8];
        v8[8] = v14;

        sub_22DEE1A88();
      }
      else
      {
        v16 = objc_msgSend(*(id *)(v0 + 112), sel_peerEndpointString);
        v17 = sub_22DEFA9E0();
        v19 = v18;

        v8[16] = v17;
        v8[17] = v19;
        swift_bridgeObjectRelease();
        if (qword_255DD21D0 != -1)
          swift_once();
        v20 = sub_22DEFA674();
        __swift_project_value_buffer(v20, (uint64_t)qword_255DD21D8);
        swift_retain_n();
        v21 = sub_22DEFA65C();
        v22 = sub_22DEFABA8();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          v24 = swift_slowAlloc();
          v28 = v24;
          *(_DWORD *)v23 = 136315138;
          if (v8[17])
          {
            v25 = v8[16];
            v26 = v8[17];
          }
          else
          {
            v26 = 0xE300000000000000;
            v25 = 7104878;
          }
          swift_bridgeObjectRetain();
          *(_QWORD *)(v0 + 64) = sub_22DE8C348(v25, v26, &v28);
          sub_22DEFAC2C();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_22DE7A000, v21, v22, "NAN data session started: peerAddress=%s", v23, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22E321E0C](v24, -1, -1);
          MEMORY[0x22E321E0C](v23, -1, -1);
        }
        else
        {
          swift_release_n();
        }

        sub_22DEE1A88();
      }

      v2 = *(void **)(v0 + 112);
    }
  }
  swift_release();

  return swift_task_switch();
}

uint64_t sub_22DEE8990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = sub_22DEFA5F0();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_22DEC37B0(&qword_255DC6D88, v6, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  v4[6] = sub_22DEFAA88();
  v4[7] = v7;
  return swift_task_switch();
}

uint64_t sub_22DEE8A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  NXEnvironmentValues.clock.getter(*(_QWORD *)(v0 + 40));
  v1 = sub_22DEFAF38();
  v3 = v2;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_255DC7670 + dword_255DC7670);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_22DEE8ACC;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_22DEE8ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_22DEE8B54()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v9;

  if (qword_255DD21D0 != -1)
    swift_once();
  v1 = sub_22DEFA674();
  __swift_project_value_buffer(v1, (uint64_t)qword_255DD21D8);
  v2 = sub_22DEFA65C();
  v3 = sub_22DEFAB9C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_22DE7A000, v2, v3, "### NAN data session timeout", v4, 2u);
    MEMORY[0x22E321E0C](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  type metadata accessor for NXError();
  v9 = 18;
  v6 = NXError.__allocating_init(_:_:_:)((uint64_t)&v9, 0xD00000000000001CLL, 0x800000022DF03DC0, 0);
  v7 = *(void **)(v5 + 64);
  *(_QWORD *)(v5 + 64) = v6;

  *(_QWORD *)(v5 + 96) = 0;
  swift_release();
  sub_22DEE1A88();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEE8CA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _BYTE v14[24];

  v2 = sub_22DEFA830();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v10 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = v9;
  *((_QWORD *)v12 + 5) = v10;
  (*(void (**)(char *, _BYTE *, uint64_t))(v3 + 32))(&v12[v11], &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  sub_22DEB3614((uint64_t)v7, (uint64_t)&unk_255DC76D8, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_22DEE8E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEE8EB0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
  {
    swift_beginAccess();
    *(_QWORD *)(v0 + 104) = swift_weakLoadStrong();
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v2, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEE8F94()
{
  uint64_t v0;

  sub_22DEE9004(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEE8FE8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 64) = *(_QWORD *)(v0 + 96) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEE9004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  char *v69;
  char *v70;
  void *v71;
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void (*v102)(char *, uint64_t);
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char v123;

  v117 = sub_22DEFA908();
  v4 = *(_QWORD *)(v117 - 8);
  v5 = MEMORY[0x24BDAC7A8](v117);
  v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v116 = (char *)&v110 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v110 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v112 = (char *)&v110 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7330);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7338);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22DEFA734();
  v21 = *(_QWORD *)(v20 - 8);
  v114 = v20;
  v115 = v21;
  MEMORY[0x24BDAC7A8](v20);
  v113 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_22DEFA830();
  v24 = *(_QWORD *)(v23 - 8);
  result = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = a1;
  if (a1)
  {
    v28 = *(_QWORD *)(v119 + 208);
    if (v28)
    {
      if (v118 == v28)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, a2, v23);
        v29 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v27, v23);
        if (v29 == *MEMORY[0x24BDE0310])
        {
          (*(void (**)(char *, uint64_t))(v24 + 96))(v27, v23);
          v31 = v116;
          v30 = v117;
          (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v116, v27, v117);
          v32 = qword_255DD21D0;
          swift_retain();
          if (v32 != -1)
            swift_once();
          v33 = sub_22DEFA674();
          __swift_project_value_buffer(v33, (uint64_t)qword_255DD21D8);
          v34 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
          v34(v7, v31, v30);
          swift_retain_n();
          v35 = sub_22DEFA65C();
          v36 = sub_22DEFABA8();
          if (os_log_type_enabled(v35, v36))
          {
            v37 = swift_slowAlloc();
            v112 = (char *)swift_slowAlloc();
            v121 = v112;
            *(_DWORD *)v37 = 136315394;
            v38 = v34;
            v39 = v113;
            sub_22DEFA86C();
            v40 = sub_22DEFA6EC();
            v42 = v41;
            v43 = v39;
            v34 = v38;
            (*(void (**)(char *, uint64_t))(v115 + 8))(v43, v114);
            v120 = sub_22DE8C348(v40, v42, (uint64_t *)&v121);
            sub_22DEFAC2C();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v37 + 12) = 2080;
            sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
            v44 = sub_22DEFAEC0();
            v120 = sub_22DE8C348(v44, v45, (uint64_t *)&v121);
            v31 = v116;
            sub_22DEFAC2C();
            swift_bridgeObjectRelease();
            v46 = *(void (**)(char *, uint64_t))(v4 + 8);
            v46(v7, v117);
            _os_log_impl(&dword_22DE7A000, v35, v36, "connection waiting: peer=%s, error=%s)", (uint8_t *)v37, 0x16u);
            v47 = v112;
            swift_arrayDestroy();
            MEMORY[0x22E321E0C](v47, -1, -1);
            v48 = v37;
            v30 = v117;
            MEMORY[0x22E321E0C](v48, -1, -1);
          }
          else
          {
            swift_release_n();
            v46 = *(void (**)(char *, uint64_t))(v4 + 8);
            v46(v7, v30);
          }

          type metadata accessor for NXError();
          sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
          v67 = (void *)swift_allocError();
          v34(v68, v31, v30);
          v69 = (char *)NXError.__allocating_init(_:)(v67);
          v121 = v69;
          v122 = 0;
          v123 = 0x80;
          NXConnection._report(event:)((uint64_t)&v121);

          v70 = v31;
LABEL_26:
          v46(v70, v30);
          goto LABEL_27;
        }
        if (v29 == *MEMORY[0x24BDE0308])
        {
          (*(void (**)(char *, uint64_t))(v24 + 96))(v27, v23);
          v49 = v4;
          v50 = v112;
          v30 = v117;
          (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v112, v27, v117);
          v51 = qword_255DD21D0;
          swift_retain();
          if (v51 != -1)
            swift_once();
          v52 = sub_22DEFA674();
          __swift_project_value_buffer(v52, (uint64_t)qword_255DD21D8);
          v116 = *(char **)(v4 + 16);
          ((void (*)(char *, char *, uint64_t))v116)(v12, v50, v30);
          swift_retain_n();
          v53 = sub_22DEFA65C();
          v54 = sub_22DEFAB9C();
          v55 = os_log_type_enabled(v53, v54);
          v56 = v119;
          v57 = v115;
          if (v55)
          {
            v58 = swift_slowAlloc();
            v111 = swift_slowAlloc();
            v121 = (char *)v111;
            *(_DWORD *)v58 = 136315394;
            v110 = v49;
            v59 = v113;
            sub_22DEFA86C();
            v60 = sub_22DEFA6EC();
            v62 = v61;
            (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v114);
            v120 = sub_22DE8C348(v60, v62, (uint64_t *)&v121);
            sub_22DEFAC2C();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v58 + 12) = 2080;
            sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
            v63 = sub_22DEFAEC0();
            v120 = sub_22DE8C348(v63, v64, (uint64_t *)&v121);
            v50 = v112;
            sub_22DEFAC2C();
            swift_bridgeObjectRelease();
            v46 = *(void (**)(char *, uint64_t))(v110 + 8);
            v46(v12, v117);
            _os_log_impl(&dword_22DE7A000, v53, v54, "### connection failed: peer=%s, error=%s", (uint8_t *)v58, 0x16u);
            v65 = v111;
            swift_arrayDestroy();
            MEMORY[0x22E321E0C](v65, -1, -1);
            v66 = v58;
            v30 = v117;
            MEMORY[0x22E321E0C](v66, -1, -1);
          }
          else
          {
            swift_release_n();
            v46 = *(void (**)(char *, uint64_t))(v49 + 8);
            v46(v12, v30);
          }

          type metadata accessor for NXError();
          LOBYTE(v121) = 19;
          sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
          v71 = (void *)swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v116)(v72, v50, v30);
          v73 = (char *)NXError.__allocating_init(_:_:_:)((uint64_t)&v121, 0xD000000000000011, 0x800000022DF03E10, v71);
          v74 = v73;
          if ((*(_BYTE *)(v56 + 144) & 1) == 0)
          {
            *(_BYTE *)(v56 + 144) = 1;
            v121 = v73;
            v122 = 0;
            v123 = 96;
            NXConnection._report(event:)((uint64_t)&v121);
          }
          if (*(_QWORD *)(v56 + 208) && (*(_BYTE *)(v56 + 203) & 1) == 0)
          {
            *(_BYTE *)(v56 + 203) = 1;
            swift_retain();
            sub_22DEFA854();
            swift_release();
          }
          sub_22DEE32B8();

          v70 = v50;
          goto LABEL_26;
        }
        if (v29 == *MEMORY[0x24BDE0300] || v29 == *MEMORY[0x24BDE0320])
        {
          swift_retain();
LABEL_27:
          sub_22DEE1A88();
          return swift_release();
        }
        if (v29 != *MEMORY[0x24BDE02F8])
        {
          if (v29 == *MEMORY[0x24BDE0318])
          {
            v92 = qword_255DD21D0;
            swift_retain();
            if (v92 != -1)
              swift_once();
            v93 = sub_22DEFA674();
            __swift_project_value_buffer(v93, (uint64_t)qword_255DD21D8);
            swift_retain_n();
            v94 = sub_22DEFA65C();
            v95 = sub_22DEFABA8();
            if (os_log_type_enabled(v94, v95))
            {
              v96 = (uint8_t *)swift_slowAlloc();
              v97 = swift_slowAlloc();
              v121 = (char *)v97;
              *(_DWORD *)v96 = 136315138;
              v98 = v113;
              sub_22DEFA86C();
              v99 = sub_22DEFA6EC();
              v101 = v100;
              (*(void (**)(char *, uint64_t))(v115 + 8))(v98, v114);
              v120 = sub_22DE8C348(v99, v101, (uint64_t *)&v121);
              sub_22DEFAC2C();
              swift_bridgeObjectRelease();
              swift_release_n();
              _os_log_impl(&dword_22DE7A000, v94, v95, "connection canceled: peer=%s", v96, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x22E321E0C](v97, -1, -1);
              MEMORY[0x22E321E0C](v96, -1, -1);
            }
            else
            {
              swift_release_n();
            }

            v104 = v119;
            *(_QWORD *)(v119 + 208) = 0;
            swift_release();
            if ((*(_BYTE *)(v104 + 144) & 1) == 0)
            {
              *(_BYTE *)(v104 + 144) = 1;
              v121 = 0;
              v122 = 0;
              v123 = 96;
              NXConnection._report(event:)((uint64_t)&v121);
            }
            if (*(_QWORD *)(v104 + 208) && (*(_BYTE *)(v104 + 203) & 1) == 0)
            {
              *(_BYTE *)(v104 + 203) = 1;
              swift_retain();
              sub_22DEFA854();
              swift_release();
            }
            sub_22DEE32B8();
          }
          else
          {
            v102 = *(void (**)(char *, uint64_t))(v24 + 8);
            swift_retain();
            v102(v27, v23);
          }
          goto LABEL_27;
        }
        v75 = qword_255DD21D0;
        swift_retain();
        if (v75 != -1)
          swift_once();
        v76 = sub_22DEFA674();
        __swift_project_value_buffer(v76, (uint64_t)qword_255DD21D8);
        swift_retain_n();
        v77 = sub_22DEFA65C();
        v78 = sub_22DEFABA8();
        if (!os_log_type_enabled(v77, (os_log_type_t)v78))
        {
          swift_release_n();
LABEL_54:

          if ((*(_BYTE *)(v119 + 216) & 1) == 0 && *(_QWORD *)(v119 + 208))
          {
            v107 = swift_allocObject();
            swift_weakInit();
            v108 = swift_allocObject();
            swift_weakInit();
            v109 = swift_allocObject();
            *(_QWORD *)(v109 + 16) = v107;
            *(_QWORD *)(v109 + 24) = v108;
            swift_retain();
            swift_retain();
            swift_retain();
            sub_22DEFA860();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
          goto LABEL_27;
        }
        LODWORD(v117) = v78;
        v79 = swift_slowAlloc();
        v116 = (char *)swift_slowAlloc();
        v121 = v116;
        *(_DWORD *)v79 = 136315394;
        v80 = v113;
        sub_22DEFA86C();
        v81 = sub_22DEFA6EC();
        v83 = v82;
        v84 = v115;
        v85 = v80;
        v86 = v114;
        v113 = *(char **)(v115 + 8);
        ((void (*)(char *, uint64_t))v113)(v85, v114);
        v120 = sub_22DE8C348(v81, v83, (uint64_t *)&v121);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v79 + 12) = 2080;
        sub_22DEFA7DC();
        v87 = sub_22DEFA8FC();
        v88 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v16, 1, v87) == 1)
        {
          v89 = 7104878;
          v90 = &qword_255DC7330;
          v91 = (uint64_t)v16;
        }
        else
        {
          sub_22DEFA8F0();
          (*(void (**)(char *, uint64_t))(v88 + 8))(v16, v87);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v19, 1, v86) != 1)
          {
            v89 = sub_22DEFA6EC();
            v103 = v105;
            ((void (*)(char *, uint64_t))v113)(v19, v86);
            goto LABEL_53;
          }
          v89 = 7104878;
          v90 = &qword_255DC7338;
          v91 = (uint64_t)v19;
        }
        sub_22DE8731C(v91, v90);
        v103 = 0xE300000000000000;
LABEL_53:
        v120 = sub_22DE8C348(v89, v103, (uint64_t *)&v121);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_22DE7A000, v77, (os_log_type_t)v117, "connection ready: peer=%s, self=%s", (uint8_t *)v79, 0x16u);
        v106 = v116;
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v106, -1, -1);
        MEMORY[0x22E321E0C](v79, -1, -1);
        goto LABEL_54;
      }
    }
  }
  return result;
}

uint64_t NXConnection.send(message:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[2] = v2;
  v3[3] = *a1;
  v3[4] = sub_22DEC37B0(&qword_255DC6D88, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
  v3[5] = sub_22DEFAA88();
  v3[6] = v4;
  return swift_task_switch();
}

uint64_t sub_22DEE9F40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_22DEE9FF0;
  return sub_22DEFAE78();
}

uint64_t sub_22DEE9FF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DEEA05C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, v5);
  NXConnection.send(message:completionHandler:)(&v13, (uint64_t)sub_22DEF31E0, v10);
  return swift_release();
}

uint64_t NXConnection.send(message:completionHandler:)(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char v15[24];

  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
  {
    type metadata accessor for NXError();
    v15[0] = 8;
    NXError.__allocating_init(_:_:_:)((uint64_t)v15, 0xD000000000000013, 0x800000022DF037A0, 0);
    return swift_willThrow();
  }
  else
  {
    v7 = *a1;
    v8 = (_QWORD *)(v3 + 232);
    swift_beginAccess();
    v9 = *(_QWORD **)(v3 + 232);
    v10 = v7;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v3 + 232) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_22DEEFC08(0, v9[2] + 1, 1, v9);
      *v8 = v9;
    }
    v13 = v9[2];
    v12 = v9[3];
    if (v13 >= v12 >> 1)
    {
      v9 = sub_22DEEFC08((_QWORD *)(v12 > 1), v13 + 1, 1, v9);
      *v8 = v9;
    }
    v9[2] = v13 + 1;
    v14 = &v9[3 * v13];
    v14[4] = v10;
    v14[5] = a2;
    v14[6] = a3;
    swift_endAccess();
    return sub_22DEE1A88();
  }
}

void sub_22DEEA2C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void (*v5)(id, uint64_t);
  void *v6;
  id NSData;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD v15[4];

  v2 = v1;
  v15[2] = *MEMORY[0x24BDAC8D0];
  v4 = sub_22DEFA800();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(void (**)(id, uint64_t))(a1 + 8);
  if (*(_QWORD *)(v2 + 208))
  {
    v6 = *(void **)a1;
    swift_retain();
    NSData = OPACKEncoderCreateNSData(v6);
    if (NSData)
    {
      v8 = NSData;
      sub_22DEFA56C();
      v10 = v9;

      __asm { BR              X11 }
    }
    type metadata accessor for NXError();
    LOBYTE(v14) = 2;
    sub_22DEFAC98();
    swift_bridgeObjectRelease();
    v15[0] = 0xD000000000000020;
    v15[1] = 0x800000022DF03EC0;
    sub_22DEFAE3C();
    sub_22DEFAA10();
    swift_bridgeObjectRelease();
    v11 = NXError.__allocating_init(_:_:_:)((uint64_t)&v14, 0xD000000000000020, 0x800000022DF03EC0, 0);
    swift_willThrow();
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    LOBYTE(v15[0]) = 12;
    v11 = NXError.__allocating_init(_:_:_:)((uint64_t)v15, 0xD00000000000001FLL, 0x800000022DF03CE0, 0);
    swift_willThrow();
  }
  type metadata accessor for NXError();
  LOBYTE(v15[0]) = 19;
  v12 = v11;
  v13 = NXError.__allocating_init(_:_:_:)((uint64_t)v15, 0x69616620646E6573, 0xEB0000000064656CLL, v11);
  v5(v13, 1);

}

uint64_t sub_22DEEAD80(uint64_t a1, uint64_t (*a2)(id, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v12;
  uint64_t v13;
  id v14;
  _BYTE v15[15];
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_22DEFA908();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DEF3EF0(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_22DE8731C((uint64_t)v6, &qword_255DC7630);
    return a2(0, 0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    type metadata accessor for NXError();
    v16 = 19;
    sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
    v12 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(v13, v10, v7);
    v14 = NXError.__allocating_init(_:_:_:)((uint64_t)&v16, 0x69616620646E6573, 0xEB0000000064656CLL, v12);
    a2(v14, 1);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_22DEEAF40(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v12;
  uint64_t v13;
  id v14;
  _BYTE v15[15];
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_22DEFA908();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DEF3EF0(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_22DE8731C((uint64_t)v6, &qword_255DC7630);
    return ((uint64_t (*)(_QWORD))a2)(0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    type metadata accessor for NXError();
    v16 = 19;
    sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
    v12 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(v13, v10, v7);
    v14 = NXError.__allocating_init(_:_:_:)((uint64_t)&v16, 0x69616620646E6573, 0xEB0000000064656CLL, v12);
    a2();

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_22DEEB0F8(uint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  int v19;

  v18 = a4;
  v19 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v14 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_22DEF3EF0(v18, (uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v7 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = v13;
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = a1;
  *(_QWORD *)(v16 + 56) = a2;
  *(_BYTE *)(v16 + 64) = v19;
  sub_22DEA4DD0((uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, &qword_255DC7630);
  sub_22DEA5084(a1, a2);
  sub_22DEB3614((uint64_t)v11, (uint64_t)&unk_255DC76E8, v16);
  return swift_release();
}

uint64_t sub_22DEEB308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[38] = a7;
  v7[39] = v9;
  v7[36] = a5;
  v7[37] = a6;
  v7[34] = a1;
  v7[35] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  v7[40] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEEB370()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 328) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 312);
    v3 = *(_QWORD *)(v0 + 320);
    swift_beginAccess();
    *(_QWORD *)(v0 + 336) = swift_weakLoadStrong();
    sub_22DEF3EF0(v2, v3);
    v4 = sub_22DEFA908();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
    v7 = *(_QWORD *)(v0 + 320);
    if (v6 == 1)
    {
      sub_22DE8731C(*(_QWORD *)(v0 + 320), &qword_255DC7630);
      v8 = 0;
    }
    else
    {
      sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
      v8 = swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v10, v7, v4);
    }
    *(_QWORD *)(v0 + 344) = v8;
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v11, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 272) = 1;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEEB51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v39;
  uint64_t v40[2];
  char v41;

  v1 = *(_QWORD *)(v0 + 336);
  if (!v1)
    goto LABEL_32;
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v2 + 208);
  if (!v3 || v1 != v3)
    goto LABEL_32;
  v5 = *(_QWORD *)(v0 + 304);
  *(_BYTE *)(v2 + 216) = 0;
  if (v5 >> 60 != 15)
  {
    v19 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 304);
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 328) + 201);
    swift_retain();
    sub_22DEA5084(v19, v20);
    if (v21 == 1)
    {
      if (qword_255DD21D0 != -1)
        swift_once();
      v22 = *(_QWORD *)(v0 + 296);
      v23 = *(_QWORD *)(v0 + 304);
      v24 = sub_22DEFA674();
      __swift_project_value_buffer(v24, (uint64_t)qword_255DD21D8);
      sub_22DEA5084(v22, v23);
      sub_22DEA5098(v22, v23);
      sub_22DEA5098(v22, v23);
      sub_22DEA5098(v22, v23);
      v25 = sub_22DEFA65C();
      v26 = sub_22DEFAB90();
      v27 = os_log_type_enabled(v25, v26);
      v29 = *(_QWORD *)(v0 + 296);
      v28 = *(_QWORD *)(v0 + 304);
      if (v27)
      {
        v30 = swift_slowAlloc();
        v40[0] = swift_slowAlloc();
        *(_DWORD *)v30 = 136315394;
        *(_QWORD *)(v0 + 152) = v29;
        *(_QWORD *)(v0 + 160) = v28;
        sub_22DEF3EAC();
        v31 = sub_22DEFAA34();
        *(_QWORD *)(v0 + 248) = sub_22DE8C348(v31, v32, v40);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        sub_22DEA326C(v29, v28);
        sub_22DEA326C(v29, v28);
        *(_WORD *)(v30 + 12) = 2048;
        __asm { BR              X9 }
      }
      sub_22DEA326C(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 304));
      sub_22DEA326C(v29, v28);
      sub_22DEA2F04(v29, v28);
      sub_22DEA2F04(v29, v28);

    }
    __asm { BR              X10 }
  }
  v6 = qword_255DD21D0;
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = *(void **)(v0 + 344);
  v8 = sub_22DEFA674();
  __swift_project_value_buffer(v8, (uint64_t)qword_255DD21D8);
  v9 = v7;
  v10 = v7;
  v11 = sub_22DEFA65C();
  v12 = sub_22DEFABA8();
  if (os_log_type_enabled(v11, v12))
  {
    v39 = v2;
    v13 = *(_QWORD *)(v0 + 344);
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v40[0] = v15;
    *(_DWORD *)v14 = 136315138;
    if (v13)
    {
      swift_getErrorValue();
      v16 = sub_22DEFAEC0();
      v18 = v17;
    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    *(_QWORD *)(v0 + 208) = sub_22DE8C348(v16, v18, v40);
    sub_22DEFAC2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DE7A000, v11, v12, "connection ended: during header, error=%s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E321E0C](v15, -1, -1);
    MEMORY[0x22E321E0C](v14, -1, -1);

    v2 = v39;
  }
  else
  {

  }
  v33 = *(_BYTE **)(v0 + 328);
  if ((v33[16] & 1) == 0)
  {
    v35 = *(void **)(v0 + 344);
    type metadata accessor for NXError();
    LOBYTE(v40[0]) = 19;
    v36 = v7;
    v34 = NXError.__allocating_init(_:_:_:)((uint64_t)v40, 0xD000000000000015, 0x800000022DF03E30, v35);
    v33 = *(_BYTE **)(v0 + 328);
    if ((v33[144] & 1) != 0)
      goto LABEL_27;
    goto LABEL_26;
  }
  v34 = 0;
  if ((v33[144] & 1) == 0)
  {
LABEL_26:
    v33[144] = 1;
    v40[0] = (uint64_t)v34;
    v40[1] = 0;
    v41 = 96;
    v37 = v34;
    NXConnection._report(event:)((uint64_t)v40);

    v33 = *(_BYTE **)(v0 + 328);
  }
LABEL_27:
  if (*(_QWORD *)(v2 + 208) && (v33[203] & 1) == 0)
  {
    v33[203] = 1;
    swift_retain();
    sub_22DEFA854();
    swift_release();
  }
  sub_22DEE32B8();
  swift_release();

LABEL_32:
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEEC288()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 272) = *(_QWORD *)(v0 + 328) == 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEEC2C8(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;

  v24 = a4;
  v25 = a2;
  v26 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v17 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_22DEF3EF0(v24, (uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (*(unsigned __int8 *)(v10 + 80) + 105) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = v16;
  *(_QWORD *)(v19 + 40) = v17;
  v20 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)a7;
  *(_OWORD *)(v19 + 64) = v20;
  *(_QWORD *)(v19 + 80) = *(_QWORD *)(a7 + 32);
  *(_QWORD *)(v19 + 88) = a1;
  v21 = v25;
  *(_QWORD *)(v19 + 96) = v25;
  *(_BYTE *)(v19 + 104) = v26;
  sub_22DEA4DD0((uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, &qword_255DC7630);
  sub_22DEF4880((uint64_t *)a7);
  sub_22DEA5084(a1, v21);
  sub_22DEB3614((uint64_t)v14, (uint64_t)&unk_255DC7700, v19);
  return swift_release();
}

uint64_t sub_22DEEC4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[13] = a8;
  v8[14] = v10;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v8[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  v8[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DEEC560()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 128) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 120);
    swift_beginAccess();
    *(_QWORD *)(v0 + 136) = swift_weakLoadStrong();
    sub_22DEF3EF0(v2, v3);
    v4 = sub_22DEFA908();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
    v7 = *(_QWORD *)(v0 + 120);
    if (v6 == 1)
    {
      sub_22DE8731C(*(_QWORD *)(v0 + 120), &qword_255DC7630);
      v8 = 0;
    }
    else
    {
      sub_22DEC37B0(&qword_255DC6DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDE0688], MEMORY[0x24BDE0698]);
      v8 = swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v10, v7, v4);
    }
    *(_QWORD *)(v0 + 144) = v8;
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v11, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEEC70C()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[18];
  sub_22DEF2618(v0[17], v0[11], v0[12], v0[13], v1);

  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEEC77C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 64) = *(_QWORD *)(v0 + 128) == 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22DEEC7BC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 224);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_22DEFA560();
    v4 = (void *)sub_22DEFA560();
    v13[0] = 0;
    v5 = objc_msgSend(v2, sel_decryptData_aadData_error_, v3, v4, v13);

    v6 = v13[0];
    if (v5)
    {
      v7 = sub_22DEFA56C();
      v9 = v8;

      sub_22DEA5098(v7, v9);
      NXConnection._networkProcessMessage(data:)(v7, v9);
      sub_22DEA2F04(v7, v9);
      sub_22DEA2F04(v7, v9);

    }
    else
    {
      v10 = v6;
      v11 = (void *)sub_22DEFA530();

      swift_willThrow();
      type metadata accessor for NXError();
      LOBYTE(v13[0]) = 21;
      v12 = v11;
      NXError.__allocating_init(_:_:_:)((uint64_t)v13, 0x2074707972636544, 0xEE0064656C696166, v11);
      swift_willThrow();

    }
  }
  else
  {
    type metadata accessor for NXError();
    LOBYTE(v13[0]) = 21;
    NXError.__allocating_init(_:_:_:)((uint64_t)v13, 0xD00000000000002FLL, 0x800000022DF03E90, 0);
    swift_willThrow();
  }
}

void NXConnection._networkProcessMessage(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  int v20;
  _OWORD v21[2];
  _OWORD v22[2];
  uint64_t v23;

  v3 = v2;
  v23 = *MEMORY[0x24BDAC8D0];
  v20 = 0;
  v6 = (void *)sub_22DEFA560();
  v7 = OPACKDecodeNSData(v6);

  if (v7)
  {
    sub_22DEFAC44();
    swift_unknownObjectRelease();
    sub_22DE8730C(v21, v22);
    sub_22DE83E80((uint64_t)v22, (uint64_t)v21);
    sub_22DEC9F48(0, &qword_255DC6E40);
    if (swift_dynamicCast())
    {
      if (*(_BYTE *)(v3 + 202) == 1)
      {
        v8 = qword_255DD21D0;
        v9 = v19;
        if (v8 != -1)
          swift_once();
        v10 = sub_22DEFA674();
        __swift_project_value_buffer(v10, (uint64_t)qword_255DD21D8);
        sub_22DEA5098(a1, a2);
        v11 = sub_22DEFA65C();
        v12 = sub_22DEFAB90();
        if (os_log_type_enabled(v11, v12))
        {
          *(_DWORD *)swift_slowAlloc() = 134217984;
          __asm { BR              X10 }
        }
        sub_22DEA2F04(a1, a2);

      }
      else
      {
        v18 = v19;
      }
      *(_QWORD *)&v21[0] = v19;
      NXConnection._report(message:)((Nexus::NXConnection::Message)v21);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
    else
    {
      type metadata accessor for NXError();
      LOBYTE(v21[0]) = 17;
      NXError.__allocating_init(_:_:_:)((uint64_t)v21, 0xD000000000000016, 0x800000022DF038C0, 0);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
  }
  else
  {
    LOBYTE(v19) = 17;
    *(_QWORD *)&v22[0] = 0;
    *((_QWORD *)&v22[0] + 1) = 0xE000000000000000;
    sub_22DEFAC98();
    sub_22DEFAA10();
    v13 = (id)CUPrintErrorCode();
    if (v13)
    {
      v14 = v13;
      v15 = sub_22DEFA9E0();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    type metadata accessor for NXError();
    *(_QWORD *)&v21[0] = v15;
    *((_QWORD *)&v21[0] + 1) = v17;
    sub_22DEFAE48();
    swift_bridgeObjectRelease();
    NXError.__allocating_init(_:_:_:)((uint64_t)&v19, *(uint64_t *)&v22[0], *((uint64_t *)&v22[0] + 1), 0);
    swift_willThrow();
  }
}

void sub_22DEECD68(uint64_t a1, unint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;

  v5 = v4;
  if (qword_255DD21D0 != -1)
    swift_once();
  v10 = sub_22DEFA674();
  __swift_project_value_buffer(v10, (uint64_t)qword_255DD21D8);
  sub_22DEA5098(a1, a2);
  v11 = sub_22DEFA65C();
  v12 = sub_22DEFAB84();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    *(_DWORD *)v13 = 67109632;
    sub_22DEFAC2C();
    *(_WORD *)(v13 + 8) = 1024;
    sub_22DEFAC2C();
    *(_WORD *)(v13 + 14) = 2048;
    __asm { BR              X10 }
  }
  sub_22DEA2F04(a1, a2);

  if ((a4 & 1) != 0)
  {
    if ((*(_BYTE *)(v5 + 17) & 1) != 0)
    {
      v16 = sub_22DEFA65C();
      v17 = sub_22DEFAB9C();
      if (!os_log_type_enabled(v16, v17))
        goto LABEL_15;
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = "### ignoring Pairing start received on client";
LABEL_14:
      _os_log_impl(&dword_22DE7A000, v16, v17, v19, v18, 2u);
      MEMORY[0x22E321E0C](v18, -1, -1);
      goto LABEL_15;
    }
    *(_QWORD *)(v5 + 272) = mach_absolute_time();
    sub_22DEED228(a3 & 1);
    v14 = *(void **)(v5 + 264);
    if (v14)
      goto LABEL_7;
LABEL_12:
    v16 = sub_22DEFA65C();
    v17 = sub_22DEFAB9C();
    if (!os_log_type_enabled(v16, v17))
      goto LABEL_15;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = "### pairing received data with no session";
    goto LABEL_14;
  }
  v14 = *(void **)(v5 + 264);
  if (!v14)
    goto LABEL_12;
LABEL_7:
  v15 = v14;
  v16 = sub_22DEFA560();
  objc_msgSend(v15, sel_receivedMessageData_, v16);

LABEL_15:
}

Nexus::NXConnection::Message __swiftcall NXConnection.Message.init(content:)(Nexus::NXConnection::Message content)
{
  Nexus::NXConnection::Message *v1;

  v1->content.super.isa = content.content.super.isa;
  return content;
}

void *NXConnection.customPeerIdentity.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 240);
  v2 = v1;
  return v1;
}

void NXConnection.customPeerIdentity.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 240);
  *(_QWORD *)(v1 + 240) = a1;

}

uint64_t (*NXConnection.customPeerIdentity.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void *NXConnection.customSelfIdentity.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 248);
  v2 = v1;
  return v1;
}

void NXConnection.customSelfIdentity.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 248);
  *(_QWORD *)(v1 + 248) = a1;

}

uint64_t (*NXConnection.customSelfIdentity.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_22DEED228(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;

  v2 = v1;
  v4 = *(void **)(v1 + 264);
  if (v4)
    objc_msgSend(v4, sel_invalidate);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE29808]), sel_init);
  v6 = *(void **)(v1 + 264);
  *(_QWORD *)(v2 + 264) = v5;
  v7 = v5;

  v35 = *(_QWORD *)(v2 + 32);
  v8 = (void *)NXEnvironmentValues.dispatchQueue.getter();
  objc_msgSend(v7, sel_setDispatchQueue_, v8, v35);

  objc_msgSend(v7, sel_setFlags_, 12);
  if (*(_BYTE *)(v2 + 284) == 1)
  {
    if (*(_BYTE *)(v2 + 28))
      v9 = 1;
    else
      v9 = *(unsigned int *)(v2 + 24);
  }
  else
  {
    v9 = *(unsigned int *)(v2 + 280);
  }
  objc_msgSend(v7, sel_setPinType_, v9);
  if (*(_BYTE *)(v2 + 17))
    v10 = 3;
  else
    v10 = 4;
  if (*(_BYTE *)(v2 + 17))
    v11 = 1;
  else
    v11 = 2;
  v12 = a1 & 1;
  if ((a1 & 1) != 0)
    v13 = v11;
  else
    v13 = v10;
  objc_msgSend(v7, sel_setSessionType_, v13);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v15;
  *(_BYTE *)(v16 + 32) = v12;
  v39 = sub_22DEF3354;
  v40 = v16;
  v17 = MEMORY[0x24BDAC760];
  v35 = MEMORY[0x24BDAC760];
  v36 = 1107296256;
  v37 = sub_22DEBCBA0;
  v38 = &block_descriptor_5;
  v18 = _Block_copy(&v35);
  swift_release();
  objc_msgSend(v7, sel_setCompletionHandler_, v18);
  _Block_release(v18);
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = v20;
  v39 = sub_22DEF3380;
  v40 = v21;
  v35 = v17;
  v36 = 1107296256;
  v37 = sub_22DEEDF54;
  v38 = &block_descriptor_50;
  v22 = _Block_copy(&v35);
  swift_release();
  objc_msgSend(v7, sel_setPromptForPINHandler_, v22);
  _Block_release(v22);
  v23 = swift_allocObject();
  swift_weakInit();
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v23;
  *(_QWORD *)(v25 + 24) = v24;
  v39 = sub_22DEF3390;
  v40 = v25;
  v35 = v17;
  v36 = 1107296256;
  v37 = sub_22DEEE4C8;
  v38 = &block_descriptor_58;
  v26 = _Block_copy(&v35);
  swift_release();
  objc_msgSend(v7, sel_setShowPINHandlerEx_, v26);
  _Block_release(v26);
  v27 = swift_allocObject();
  swift_weakInit();
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v27;
  *(_QWORD *)(v29 + 24) = v28;
  *(_BYTE *)(v29 + 32) = v12;
  v39 = sub_22DEF33A0;
  v40 = v29;
  v35 = v17;
  v36 = 1107296256;
  v37 = sub_22DEEEAB4;
  v38 = &block_descriptor_66;
  v30 = _Block_copy(&v35);
  swift_release();
  objc_msgSend(v7, sel_setSendMessageDataHandler_, v30);
  _Block_release(v30);
  v31 = swift_allocObject();
  swift_weakInit();
  v39 = sub_22DEF33AC;
  v40 = v31;
  v35 = v17;
  v36 = 1107296256;
  v37 = sub_22DEEEB30;
  v38 = &block_descriptor_70;
  v32 = _Block_copy(&v35);
  swift_release();
  objc_msgSend(v7, sel_setSignDataHandler_, v32);
  _Block_release(v32);
  v33 = swift_allocObject();
  swift_weakInit();
  v39 = sub_22DEF37DC;
  v40 = v33;
  v35 = v17;
  v36 = 1107296256;
  v37 = sub_22DEEEBFC;
  v38 = &block_descriptor_74;
  v34 = _Block_copy(&v35);
  swift_release();
  objc_msgSend(v7, sel_setVerifySignatureHandler_, v34);
  _Block_release(v34);
  objc_msgSend(v7, sel_activate);

}

uint64_t sub_22DEED744(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _BYTE v17[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v12 = swift_allocObject();
  swift_beginAccess();
  v13 = (void *)MEMORY[0x22E321ED8](a3 + 16);
  swift_unknownObjectWeakInit();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = v11;
  *(_QWORD *)(v14 + 40) = v12;
  *(_BYTE *)(v14 + 48) = a4;
  *(_QWORD *)(v14 + 56) = a1;
  v15 = a1;
  sub_22DEB3614((uint64_t)v9, (uint64_t)&unk_255DC7668, v14);
  return swift_release();
}

uint64_t sub_22DEED8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_BYTE *)(v7 + 112) = a6;
  *(_QWORD *)(v7 + 80) = a5;
  *(_QWORD *)(v7 + 88) = a7;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a4;
  return swift_task_switch();
}

uint64_t sub_22DEED8F4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 80) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 104) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEED9D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  BOOL v3;
  void *v4;
  char v5;
  id v6;

  v1 = *(void **)(v0 + 104);
  if (v1)
  {
    v2 = *(void **)(*(_QWORD *)(v0 + 96) + 264);
    if (v2)
      v3 = v1 == v2;
    else
      v3 = 0;
    if (v3)
    {
      v4 = *(void **)(v0 + 88);
      v5 = *(_BYTE *)(v0 + 112);
      v6 = v1;
      sub_22DEEECD0(v5, v4);

    }
  }
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEEDA60(int a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE v16[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v12 = swift_allocObject();
  swift_beginAccess();
  v13 = (void *)MEMORY[0x22E321ED8](a4 + 16);
  swift_unknownObjectWeakInit();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = v11;
  *(_QWORD *)(v14 + 40) = v12;
  *(_DWORD *)(v14 + 48) = a1;
  *(_DWORD *)(v14 + 52) = a2;
  sub_22DEB3614((uint64_t)v9, (uint64_t)&unk_255DC7658, v14);
  return swift_release();
}

uint64_t sub_22DEEDBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;

  *(_DWORD *)(v7 + 128) = a7;
  *(_DWORD *)(v7 + 84) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEEDC04()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 104) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 120) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 88) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEEDCE8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  void *v17;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    v2 = *(void **)(*(_QWORD *)(v0 + 112) + 264);
    if (v2 && v1 == v2)
    {
      v4 = *(_DWORD *)(v0 + 84);
      v5 = *(_DWORD *)(v0 + 128);
      NXAuthenticationType.init(setupCodeType:)((uint64_t)objc_msgSend(v1, sel_pinTypeActual), &v20);
      NXAuthenticationRequestInfo.init(type:incorrect:throttleTime:)((Nexus::NXAuthenticationType)&v20, v4 & 0x10000, (double)v5);
      v6 = v21;
      v7 = v22;
      v8 = v23;
      if (qword_255DD21D0 != -1)
        swift_once();
      v9 = sub_22DEFA674();
      __swift_project_value_buffer(v9, (uint64_t)qword_255DD21D8);
      v10 = sub_22DEFA65C();
      v11 = sub_22DEFABA8();
      if (os_log_type_enabled(v10, v11))
      {
        v19 = v8;
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v21 = v13;
        *(_DWORD *)v12 = 136315138;
        *(_QWORD *)(v0 + 72) = v7;
        *(_BYTE *)(v0 + 64) = v6;
        *(_BYTE *)(v0 + 80) = v19;
        sub_22DED956C();
        v14 = sub_22DEFAE3C();
        *(_QWORD *)(v0 + 64) = sub_22DE8C348(v14, v15, &v21);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v10, v11, "pairing prompt: %s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v13, -1, -1);
        v16 = v12;
        v8 = v19;
        MEMORY[0x22E321E0C](v16, -1, -1);
      }

      v17 = *(void **)(v0 + 120);
      *(_BYTE *)(*(_QWORD *)(v0 + 112) + 257) = 1;
      v21 = v6;
      v22 = v7;
      v23 = v8 | 0x20;
      NXConnection._report(event:)((uint64_t)&v21);

      v1 = *(void **)(v0 + 120);
    }
  }

  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEEDF38()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 88) = *(_QWORD *)(v0 + 112) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEEDF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_22DEEDF9C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _BYTE v18[24];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v14 = swift_allocObject();
  swift_beginAccess();
  v15 = (void *)MEMORY[0x22E321ED8](a5 + 16);
  swift_unknownObjectWeakInit();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = v13;
  *(_QWORD *)(v16 + 40) = v14;
  *(_DWORD *)(v16 + 48) = a1;
  *(_QWORD *)(v16 + 56) = a2;
  *(_QWORD *)(v16 + 64) = a3;
  swift_bridgeObjectRetain();
  sub_22DEB3614((uint64_t)v11, (uint64_t)&unk_255DC7648, v16);
  return swift_release();
}

uint64_t sub_22DEEE130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a4;
  v8[13] = a5;
  v8[11] = a1;
  return swift_task_switch();
}

uint64_t sub_22DEEE150()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 128) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 104) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 136) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 88) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEEE234()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  void *v18;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v1 = *(void **)(v0 + 136);
  if (v1)
  {
    v2 = *(void **)(*(_QWORD *)(v0 + 128) + 264);
    if (v2 && v1 == v2)
    {
      v4 = *(_QWORD *)(v0 + 112);
      v5 = *(void **)(v0 + 120);
      NXAuthenticationType.init(setupCodeType:)((uint64_t)objc_msgSend(v1, sel_pinTypeActual), &v21);
      swift_bridgeObjectRetain();
      v6._countAndFlagsBits = v4;
      v6._object = v5;
      NXAuthenticationPresentInfo.init(type:password:)((Nexus::NXAuthenticationType)&v21, v6);
      v8 = v22;
      v7 = v23;
      v9 = v24;
      if (qword_255DD21D0 != -1)
        swift_once();
      v10 = sub_22DEFA674();
      __swift_project_value_buffer(v10, (uint64_t)qword_255DD21D8);
      swift_bridgeObjectRetain_n();
      v11 = sub_22DEFA65C();
      v12 = sub_22DEFABA8();
      if (os_log_type_enabled(v11, v12))
      {
        v20 = v9;
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = swift_slowAlloc();
        v22 = v14;
        *(_DWORD *)v13 = 136315138;
        *(_QWORD *)(v0 + 72) = v7;
        *(_QWORD *)(v0 + 64) = v8;
        *(_BYTE *)(v0 + 80) = v20;
        sub_22DEA95A8();
        v15 = sub_22DEFAE3C();
        *(_QWORD *)(v0 + 64) = sub_22DE8C348(v15, v16, &v22);
        sub_22DEFAC2C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DE7A000, v11, v12, "pairing present: %s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E321E0C](v14, -1, -1);
        v17 = v13;
        v9 = v20;
        MEMORY[0x22E321E0C](v17, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v18 = *(void **)(v0 + 136);
      *(_BYTE *)(*(_QWORD *)(v0 + 128) + 257) = 1;
      v22 = v8;
      v23 = v7;
      v24 = v9;
      NXConnection._report(event:)((uint64_t)&v22);
      swift_bridgeObjectRelease();

      v1 = *(void **)(v0 + 136);
    }
  }

  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DEEE4AC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 88) = *(_QWORD *)(v0 + 128) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEEE4C8(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = sub_22DEFA9E0();
  v6 = v5;
  swift_retain();
  v3(a2, v4, v6);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEEE52C(int a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE v20[24];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_22DEFAAC4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v16 = swift_allocObject();
  swift_beginAccess();
  v17 = (void *)MEMORY[0x22E321ED8](a5 + 16);
  swift_unknownObjectWeakInit();

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  *(_QWORD *)(v18 + 32) = v15;
  *(_QWORD *)(v18 + 40) = v16;
  *(_BYTE *)(v18 + 48) = a6;
  *(_DWORD *)(v18 + 52) = a1;
  *(_QWORD *)(v18 + 56) = a2;
  *(_QWORD *)(v18 + 64) = a3;
  sub_22DEA5098(a2, a3);
  sub_22DEB3614((uint64_t)v13, (uint64_t)&unk_255DC75F0, v18);
  return swift_release();
}

uint64_t sub_22DEEE6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  *(_QWORD *)(v8 + 96) = a8;
  *(_QWORD *)(v8 + 104) = v10;
  *(_DWORD *)(v8 + 128) = a7;
  *(_BYTE *)(v8 + 132) = a6;
  *(_QWORD *)(v8 + 80) = a4;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEEE704()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 120) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 72) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEEE7E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v4;
  uint64_t v5;
  id v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    v2 = *(void **)(*(_QWORD *)(v0 + 112) + 264);
    if (v2 && v1 == v2)
    {
      v4 = *(_DWORD *)(v0 + 128);
      v5 = qword_255DD21D0;
      v6 = v1;
      if (v5 != -1)
        swift_once();
      v7 = v4 & 1;
      v8 = *(_QWORD *)(v0 + 96);
      v9 = *(_QWORD *)(v0 + 104);
      v10 = sub_22DEFA674();
      __swift_project_value_buffer(v10, (uint64_t)qword_255DD21D8);
      sub_22DEA5098(v8, v9);
      v11 = sub_22DEFA65C();
      v12 = sub_22DEFAB84();
      v13 = os_log_type_enabled(v11, v12);
      v14 = *(_QWORD *)(v0 + 104);
      if (v13)
      {
        v15 = *(unsigned __int8 *)(v0 + 132);
        v16 = v14 >> 62;
        v17 = swift_slowAlloc();
        *(_DWORD *)v17 = 67109632;
        *(_DWORD *)(v0 + 64) = v15;
        sub_22DEFAC2C();
        *(_WORD *)(v17 + 8) = 1024;
        *(_DWORD *)(v0 + 64) = v7;
        sub_22DEFAC2C();
        *(_WORD *)(v17 + 14) = 2048;
        __asm { BR              X10 }
      }
      sub_22DEA2F04(*(_QWORD *)(v0 + 96), v14);
      v18 = *(_QWORD *)(v0 + 112);
      v19 = *(void **)(v0 + 120);
      v21 = *(_QWORD *)(v0 + 96);
      v20 = *(_QWORD *)(v0 + 104);
      v22 = *(unsigned __int8 *)(v0 + 132);

      if (v7)
        v23 = 5;
      else
        v23 = 6;
      if (v7)
        v24 = 3;
      else
        v24 = 4;
      if (v22)
        v25 = v23;
      else
        v25 = v24;
      v26 = swift_allocObject();
      swift_weakInit();
      v27 = v19;
      sub_22DEF1DA4(v25, v21, v20, v18, v26, v27, v22);

      swift_release();
      v1 = *(void **)(v0 + 120);
    }
  }
  swift_release();

  return swift_task_switch();
}

uint64_t sub_22DEEEA98()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 72) = *(_QWORD *)(v0 + 112) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DEEEAB4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, uint64_t, unint64_t);
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(void (**)(uint64_t, uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v6 = a3;
  v7 = sub_22DEFA56C();
  v9 = v8;

  v5(a2, v7, v9);
  sub_22DEA2F04(v7, v9);
  return swift_release();
}

id sub_22DEEEB30(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t (*v7)(uint64_t, uint64_t, unint64_t, uint64_t);
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;

  v7 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v8 = a3;
  v9 = sub_22DEFA56C();
  v11 = v10;

  v12 = v7(a2, v9, v11, a4);
  v14 = v13;
  sub_22DEA2F04(v9, v11);
  swift_release();
  if (v14 >> 60 == 15)
  {
    v15 = 0;
  }
  else
  {
    v15 = (void *)sub_22DEFA560();
    sub_22DEA326C(v12, v14);
  }
  return v15;
}

uint64_t sub_22DEEEBFC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t (*v9)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t);
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v9 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v10 = a3;
  v11 = sub_22DEFA56C();
  v13 = v12;

  v14 = a4;
  v15 = sub_22DEFA56C();
  v17 = v16;

  LOBYTE(a5) = v9(a2, v11, v13, v15, v17, a5);
  sub_22DEA2F04(v15, v17);
  sub_22DEA2F04(v11, v13);
  swift_release();
  return a5 & 1;
}

uint64_t sub_22DEEECD0(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  char v34[9];
  id v35;
  uint64_t v36;
  char v37;
  _QWORD v38[2];

  v3 = v2;
  v38[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(void **)(v2 + 264);
  if (v6)
  {
    v7 = (void *)0xD000000000000017;
    if (a2)
    {
      v8 = v6;
      v9 = a2;
      swift_willThrow();
      v10 = a2;
LABEL_4:
      type metadata accessor for NXError();
      LOBYTE(v35) = 19;
      v11 = v10;
      v12 = NXError.__allocating_init(_:_:_:)((uint64_t)&v35, 0xD000000000000017, 0x800000022DF03D40, v10);

      v13 = *(void **)(v3 + 64);
      *(_QWORD *)(v3 + 64) = v12;

LABEL_5:
      if (*(_BYTE *)(v3 + 257) == 1 || !((a2 != 0) | a1 & 1))
      {
        *(_BYTE *)(v3 + 257) = 0;
        type metadata accessor for NXError();
        v14 = a2;
        v15 = NXError.__allocating_init(_:)(a2);
        NXAuthenticationCompletedInfo.init(error:)((uint64_t)v15, v38);
        v16 = (void *)v38[0];
        v35 = (id)v38[0];
        v36 = 0;
        v37 = 64;
        NXConnection._report(event:)((uint64_t)&v35);

      }
      return sub_22DEE1A88();
    }
    v21 = v6;
    v22 = (void *)sub_22DEFA9D4();
    v35 = 0;
    v23 = objc_msgSend(v21, sel_openStreamWithName_type_error_, v22, 2, &v35);

    v24 = v35;
    if (!v23)
    {
      v29 = v35;
      v10 = (void *)sub_22DEFA530();

      swift_willThrow();
      goto LABEL_4;
    }
    v25 = *(void **)(v3 + 224);
    *(_QWORD *)(v3 + 224) = v23;
    v26 = v24;
    v27 = v23;

    v28 = (unint64_t)objc_msgSend(v27, sel_authTagLength);
    if (HIDWORD(v28))
    {
      type metadata accessor for NXError();
      v34[0] = 1;
      v35 = 0;
      v36 = 0xE000000000000000;
      sub_22DEFAC98();
      swift_bridgeObjectRelease();
      v35 = (id)0xD000000000000019;
      v36 = 0x800000022DF03D60;
      v38[0] = objc_msgSend(v27, sel_authTagLength);
      sub_22DEFAE3C();
      sub_22DEFAA10();
      swift_bridgeObjectRelease();
      v10 = NXError.__allocating_init(_:_:_:)((uint64_t)v34, (uint64_t)v35, v36, 0);
      swift_willThrow();

      goto LABEL_4;
    }
    *(_DWORD *)(v3 + 220) = v28;
    *(_BYTE *)(v3 + 256) = 1;
    if (mach_absolute_time() >= *(_QWORD *)(v3 + 272))
    {
      v7 = (void *)UpTicksToMilliseconds();
      if (qword_255DD21D0 == -1)
        goto LABEL_20;
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_20:
    v30 = sub_22DEFA674();
    __swift_project_value_buffer(v30, (uint64_t)qword_255DD21D8);
    v31 = sub_22DEFA65C();
    v32 = sub_22DEFABA8();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      *(_DWORD *)v33 = 67109376;
      LODWORD(v35) = a1 & 1;
      sub_22DEFAC2C();
      *(_WORD *)(v33 + 8) = 2048;
      v35 = v7;
      sub_22DEFAC2C();
      _os_log_impl(&dword_22DE7A000, v31, v32, "pairing completed: setup=%{BOOL}d, duration=%llu ms", (uint8_t *)v33, 0x12u);
      MEMORY[0x22E321E0C](v33, -1, -1);

    }
    else
    {

    }
    goto LABEL_5;
  }
  if (*(_BYTE *)(v2 + 257) == 1 || !(a1 & 1 | (a2 != 0)))
  {
    *(_BYTE *)(v2 + 257) = 0;
    type metadata accessor for NXError();
    v18 = a2;
    v19 = NXError.__allocating_init(_:)(a2);
    NXAuthenticationCompletedInfo.init(error:)((uint64_t)v19, v38);
    v20 = (void *)v38[0];
    v35 = (id)v38[0];
    v36 = 0;
    v37 = 64;
    NXConnection._report(event:)((uint64_t)&v35);

  }
  return sub_22DEE1A88();
}

uint64_t sub_22DEEF164(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = v10;
  *(_QWORD *)(v12 + 40) = v11;
  *(_BYTE *)(v12 + 48) = a4;
  *(_QWORD *)(v12 + 56) = a1;
  v13 = a1;
  sub_22DEB3614((uint64_t)v8, (uint64_t)&unk_255DC7638, v12);
  return swift_release();
}

uint64_t sub_22DEEF2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[10] = a5;
  v7[11] = a7;
  v7[8] = a1;
  v7[9] = a4;
  return swift_task_switch();
}

uint64_t sub_22DEEF2E4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 80) + 16;
    swift_beginAccess();
    *(_QWORD *)(v0 + 104) = MEMORY[0x22E321ED8](v2);
    type metadata accessor for NXConnection();
    sub_22DEC37B0(&qword_255DC6D88, v3, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
    sub_22DEFAA88();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22DEEF3C8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  BOOL v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  char v12;

  v1 = v0[12];
  v2 = (void *)v0[13];
  if (v2)
  {
    v3 = *(void **)(v1 + 264);
    if (v3)
      v4 = v2 == v3;
    else
      v4 = 0;
    if (v4)
    {
      v5 = (void *)v0[11];
      if (v5)
      {
        type metadata accessor for NXError();
        v12 = 19;
        v6 = v5;
        v7 = v5;
        v8 = v2;
        v9 = NXError.__allocating_init(_:_:_:)((uint64_t)&v12, 0xD000000000000019, 0x800000022DF03D20, v5);
        v10 = *(void **)(v1 + 64);
        *(_QWORD *)(v1 + 64) = v9;

        sub_22DEE1A88();
      }
    }

  }
  swift_release();
  return swift_task_switch();
}

void NXConnection.Configuration.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static NXConnection.Configuration.default.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t NXConnection.Configuration.nanTrafficFlags.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t NXConnection.Configuration.nanTrafficFlags.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*NXConnection.Configuration.nanTrafficFlags.modify())()
{
  return nullsub_1;
}

unint64_t NXConnection.Configuration.passwordType.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t NXConnection.Configuration.passwordType.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  *(_BYTE *)(v1 + 8) = BYTE4(result) & 1;
  return result;
}

uint64_t (*NXConnection.Configuration.passwordType.modify())()
{
  return nullsub_1;
}

uint64_t NXConnection.Configuration.description.getter()
{
  sub_22DEFAC98();
  sub_22DEFAA10();
  sub_22DEFABB4();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DEFAA10();
  type metadata accessor for PairingSetupCodeType(0);
  sub_22DEC37B0(&qword_255DC7350, 255, (uint64_t (*)(uint64_t))type metadata accessor for PairingSetupCodeType, MEMORY[0x24BE29E70]);
  sub_22DEFAE48();
  return 0;
}

uint64_t NXConnection.Configuration.nanTrafficFlags(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;

  v3 = *(_DWORD *)(v2 + 4);
  v4 = *(_BYTE *)(v2 + 8);
  *(_DWORD *)a2 = result;
  *(_DWORD *)(a2 + 4) = v3;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t NXConnection.Configuration.passwordType(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;

  *(_DWORD *)a2 = *v2;
  *(_DWORD *)(a2 + 4) = result;
  *(_BYTE *)(a2 + 8) = BYTE4(result) & 1;
  return result;
}

uint64_t static NXConnection.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 4) != *(_DWORD *)(a2 + 4))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_22DEEF698(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    v2 = *(_BYTE *)(a2 + 8);
    if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    {
      if (*(_BYTE *)(a2 + 8))
        return 1;
    }
    else
    {
      if (*(_DWORD *)(a1 + 4) != *(_DWORD *)(a2 + 4))
        v2 = 1;
      if ((v2 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

id NXConnection.Message.content.getter()
{
  id *v0;

  return *v0;
}

uint64_t static NXConnection.Message.== infix(_:_:)()
{
  sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
  return sub_22DEFAC08() & 1;
}

uint64_t sub_22DEEF734()
{
  sub_22DEC9F48(0, (unint64_t *)&qword_255DC6038);
  return sub_22DEFAC08() & 1;
}

Nexus::NXConnection::State_optional __swiftcall NXConnection.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Nexus::NXConnection::State_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22DEFAD70();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_22DEEF7DC()
{
  return sub_22DEE5500();
}

uint64_t sub_22DEEF7E8()
{
  sub_22DEFAED8();
  NXConnection.State.rawValue.getter();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEEF84C()
{
  NXConnection.State.rawValue.getter();
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEEF89C()
{
  sub_22DEFAED8();
  NXConnection.State.rawValue.getter();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

Nexus::NXConnection::State_optional sub_22DEEF8FC(Swift::String *a1)
{
  return NXConnection.State.init(rawValue:)(*a1);
}

uint64_t sub_22DEEF908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NXConnection.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t NXConnection.hashValue.getter()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEEF970()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)NXEnvironmentValues.dispatchQueue.getter();
  v1 = sub_22DEFABFC();

  return v1;
}

uint64_t sub_22DEEF9C4()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v8 = *(_BYTE *)(*(_QWORD *)v0 + 200);
  sub_22DE80988(v2, v3, v4, v5, v6, v7, v8);
  sub_22DE8D848();
  sub_22DEFAE3C();
  sub_22DEFAA10();
  swift_bridgeObjectRelease();
  sub_22DE809FC(v2, v3, v4, v5, v6, v7, v8);
  return 0x746E696F70646E65;
}

BOOL sub_22DEEFAB4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22DEEFAC8()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEEFB0C()
{
  return sub_22DEFAEE4();
}

uint64_t sub_22DEEFB34()
{
  sub_22DEFAED8();
  sub_22DEFAEE4();
  return sub_22DEFAEFC();
}

uint64_t type metadata accessor for NXConnection()
{
  return objc_opt_self();
}

uint64_t sub_22DEEFB94()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DEEFBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_22DECA82C;
  return sub_22DEE0C9C((uint64_t)v4, v2, v3);
}

_QWORD *sub_22DEEFC08(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DC75B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_22DEF1CB0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_22DEEFD2C()
{
  unint64_t result;

  result = qword_255DC7368;
  if (!qword_255DC7368)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationConfiguration, &type metadata for NXAuthenticationConfiguration);
    atomic_store(result, (unint64_t *)&qword_255DC7368);
  }
  return result;
}

unint64_t sub_22DEEFD70()
{
  unint64_t result;

  result = qword_255DC7370;
  if (!qword_255DC7370)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationAttemptInfo, &type metadata for NXAuthenticationAttemptInfo);
    atomic_store(result, (unint64_t *)&qword_255DC7370);
  }
  return result;
}

_BYTE *sub_22DEEFDB4@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_22DEF118C(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_22DEF124C((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_22DEF12C4((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_22DEEFE28(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_22DEEFE8C
     + *((int *)qword_22DEF0030 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x24BDCDDE8])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_22DEEFE9C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_22DEA5098(v1, v0);
  sub_22DEFA554();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
}

uint64_t sub_22DEF0040(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_22DEFA4DC();
  if (!result || (result = sub_22DEFA4F4(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_22DEFA4E8();
      return sub_22DEFA554();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void _s5Nexus12NXConnectionC5EventO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22DEF0118()
{
  unsigned __int8 v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;
  char v7;
  _QWORD v9[2];
  char v10;
  _QWORD v11[2];
  unsigned __int8 v12;

  if (v2 >= 0x20)
  {
    swift_bridgeObjectRetain();
    sub_22DEC36C8(v4, v3, v2);
    sub_22DEC377C(v5, v1, v0);
    sub_22DEC377C(v4, v3, v2);
    v7 = 0;
  }
  else
  {
    v11[0] = v5;
    v11[1] = v1;
    v12 = v0;
    v9[0] = v4;
    v9[1] = v3;
    v10 = v2;
    sub_22DEC36C8(v4, v3, v2);
    sub_22DEC36C8(v5, v1, v0);
    sub_22DEC36C8(v5, v1, v0);
    sub_22DEC36C8(v4, v3, v2);
    static NXAuthenticationPresentInfo.== infix(_:_:)((uint64_t)v11, v9);
    v7 = v6;
    sub_22DEC377C(v5, v1, v0);
    sub_22DEC377C(v4, v3, v2);
    sub_22DEC377C(v4, v3, v2);
    sub_22DEC377C(v5, v1, v0);
  }
  return v7 & 1;
}

uint64_t _s5Nexus12NXConnectionC7CommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[2];
  _QWORD v15[2];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      LOBYTE(v15[0]) = *(_QWORD *)a1;
      LOBYTE(v14[0]) = v6;
      static NXAuthenticationConfiguration.== infix(_:_:)((char *)v15);
      v9 = v8;
      sub_22DEC34B8(v3, v2, 1);
      v10 = v6;
      v11 = v5;
      v12 = 1;
LABEL_8:
      sub_22DEC34B8(v10, v11, v12);
      return v9 & 1;
    }
  }
  else
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    {
      v15[0] = *(_QWORD *)a1;
      v15[1] = v2;
      v14[0] = v6;
      v14[1] = v5;
      sub_22DEC34A8(v6, v5, 0);
      sub_22DEC34A8(v3, v2, 0);
      sub_22DEC34A8(v3, v2, 0);
      sub_22DEC34A8(v6, v5, 0);
      v9 = static NXAuthenticationAttemptInfo.== infix(_:_:)(v15, v14);
      sub_22DEC34B8(v3, v2, 0);
      sub_22DEC34B8(v6, v5, 0);
      sub_22DEC34B8(v6, v5, 0);
      v10 = v3;
      v11 = v2;
      v12 = 0;
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
  }
  sub_22DEC34A8(v6, v5, v7);
  sub_22DEC34B8(v3, v2, v4);
  sub_22DEC34B8(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

unint64_t sub_22DEF0648()
{
  unint64_t result;

  result = qword_255DD21F0;
  if (!qword_255DD21F0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF01720, &type metadata for NXConnection.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD21F0);
  }
  return result;
}

unint64_t sub_22DEF068C()
{
  unint64_t result;

  result = qword_255DD21F8;
  if (!qword_255DD21F8)
  {
    result = MEMORY[0x22E321D70](&unk_22DF016D0, &type metadata for NXConnection.Command.AuthenticationConfigureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD21F8);
  }
  return result;
}

unint64_t sub_22DEF06D0()
{
  unint64_t result;

  result = qword_255DC7390;
  if (!qword_255DC7390)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationConfiguration, &type metadata for NXAuthenticationConfiguration);
    atomic_store(result, (unint64_t *)&qword_255DC7390);
  }
  return result;
}

unint64_t sub_22DEF0714()
{
  unint64_t result;

  result = qword_255DD2200[0];
  if (!qword_255DD2200[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF01680, &type metadata for NXConnection.Command.AuthenticationAttemptCodingKeys);
    atomic_store(result, qword_255DD2200);
  }
  return result;
}

unint64_t sub_22DEF0758()
{
  unint64_t result;

  result = qword_255DC7398;
  if (!qword_255DC7398)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationAttemptInfo, &type metadata for NXAuthenticationAttemptInfo);
    atomic_store(result, (unint64_t *)&qword_255DC7398);
  }
  return result;
}

unint64_t sub_22DEF079C()
{
  unint64_t result;

  result = qword_255DC73B8;
  if (!qword_255DC73B8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationConfiguration, &type metadata for NXAuthenticationConfiguration);
    atomic_store(result, (unint64_t *)&qword_255DC73B8);
  }
  return result;
}

unint64_t sub_22DEF07E0()
{
  unint64_t result;

  result = qword_255DC73C0;
  if (!qword_255DC73C0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXAuthenticationAttemptInfo, &type metadata for NXAuthenticationAttemptInfo);
    atomic_store(result, (unint64_t *)&qword_255DC73C0);
  }
  return result;
}

uint64_t sub_22DEF0824()
{
  uint64_t v0;

  return sub_22DEE6F28(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_24F9AA1E8, (uint64_t)&unk_255DC75D8);
}

uint64_t sub_22DEF084C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEF0870()
{
  uint64_t v0;

  return sub_22DEE6F28(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_24F9AA1C0, (uint64_t)&unk_255DC75C0);
}

uint64_t sub_22DEF0898(uint64_t a1)
{
  uint64_t v1;

  return sub_22DEEA05C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

id OPACKDecodeNSData(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = (id)OPACKDecodeData();

  return v2;
}

unint64_t sub_22DEF08E8()
{
  unint64_t result;

  result = qword_255DC73F8;
  if (!qword_255DC73F8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXConnection.State, &type metadata for NXConnection.State);
    atomic_store(result, (unint64_t *)&qword_255DC73F8);
  }
  return result;
}

uint64_t sub_22DEF092C(uint64_t a1, uint64_t a2)
{
  return sub_22DEC37B0(&qword_255DC7400, a2, (uint64_t (*)(uint64_t))type metadata accessor for NXConnection, (uint64_t)&protocol conformance descriptor for NXConnection);
}

uint64_t method lookup function for NXConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXConnection.__allocating_init(endpoint:configuration:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of NXConnection.__allocating_init(networkConnection:configuration:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t sub_22DEF0974(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22DEF097C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NXConnection.Command()
{
  return &type metadata for NXConnection.Command;
}

void destroy for NXConnection.Event(uint64_t a1)
{
  sub_22DEC377C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Nexus12NXConnectionC5EventOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEC36C8(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NXConnection.Event(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22DEC36C8(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_22DEC377C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NXConnection.Event(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_22DEC377C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NXConnection.Event(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 11);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 1) & 8 | (*(unsigned __int8 *)(a1 + 16) >> 5)) ^ 0xF;
  if (v3 >= 0xA)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NXConnection.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 11;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 16 * (((-a2 & 8) != 0) - 2 * a2);
    }
  }
  return result;
}

uint64_t sub_22DEF0B34(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 <= 0x9F)
    return v1 >> 5;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_22DEF0B50(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 0xF | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = -96;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXConnection.Event()
{
  return &type metadata for NXConnection.Event;
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for NXConnection.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NXConnection.Configuration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NXConnection.Configuration()
{
  return &type metadata for NXConnection.Configuration;
}

ValueMetadata *type metadata accessor for NXConnection.Message()
{
  return &type metadata for NXConnection.Message;
}

uint64_t getEnumTagSinglePayload for NXConnection.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXConnection.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_22DEF0CE8 + 4 * byte_22DF00E03[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_22DEF0D1C + 4 * byte_22DF00DFE[v4]))();
}

uint64_t sub_22DEF0D1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF0D24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEF0D2CLL);
  return result;
}

uint64_t sub_22DEF0D38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEF0D40);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_22DEF0D44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF0D4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXConnection.State()
{
  return &type metadata for NXConnection.State;
}

ValueMetadata *type metadata accessor for NXConnection.SendItem()
{
  return &type metadata for NXConnection.SendItem;
}

uint64_t storeEnumTagSinglePayload for NXConnection.Command.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DEF0DD4 + 4 * byte_22DF00E0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DEF0E08 + 4 * byte_22DF00E08[v4]))();
}

uint64_t sub_22DEF0E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF0E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEF0E18);
  return result;
}

uint64_t sub_22DEF0E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEF0E2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DEF0E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF0E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXConnection.Command.CodingKeys()
{
  return &type metadata for NXConnection.Command.CodingKeys;
}

ValueMetadata *type metadata accessor for NXConnection.Command.AuthenticationAttemptCodingKeys()
{
  return &type metadata for NXConnection.Command.AuthenticationAttemptCodingKeys;
}

uint64_t _s5Nexus12NXConnectionC7CommandO31AuthenticationAttemptCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22DEF0EA8 + 4 * byte_22DF00E12[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22DEF0EC8 + 4 * byte_22DF00E17[v4]))();
}

_BYTE *sub_22DEF0EA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22DEF0EC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEF0ED0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEF0ED8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEF0EE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEF0EE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NXConnection.Command.AuthenticationConfigureCodingKeys()
{
  return &type metadata for NXConnection.Command.AuthenticationConfigureCodingKeys;
}

unint64_t sub_22DEF0F08()
{
  unint64_t result;

  result = qword_255DD2B10[0];
  if (!qword_255DD2B10[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF013B8, &type metadata for NXConnection.Command.AuthenticationConfigureCodingKeys);
    atomic_store(result, qword_255DD2B10);
  }
  return result;
}

unint64_t sub_22DEF0F50()
{
  unint64_t result;

  result = qword_255DD2D20[0];
  if (!qword_255DD2D20[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF01470, &type metadata for NXConnection.Command.AuthenticationAttemptCodingKeys);
    atomic_store(result, qword_255DD2D20);
  }
  return result;
}

unint64_t sub_22DEF0F98()
{
  unint64_t result;

  result = qword_255DD2F30[0];
  if (!qword_255DD2F30[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF01528, &type metadata for NXConnection.Command.CodingKeys);
    atomic_store(result, qword_255DD2F30);
  }
  return result;
}

unint64_t sub_22DEF0FE0()
{
  unint64_t result;

  result = qword_255DD31C0;
  if (!qword_255DD31C0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF013E0, &type metadata for NXConnection.Command.AuthenticationAttemptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD31C0);
  }
  return result;
}

unint64_t sub_22DEF1028()
{
  unint64_t result;

  result = qword_255DD31C8[0];
  if (!qword_255DD31C8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF01408, &type metadata for NXConnection.Command.AuthenticationAttemptCodingKeys);
    atomic_store(result, qword_255DD31C8);
  }
  return result;
}

unint64_t sub_22DEF1070()
{
  unint64_t result;

  result = qword_255DD3250;
  if (!qword_255DD3250)
  {
    result = MEMORY[0x22E321D70](&unk_22DF01328, &type metadata for NXConnection.Command.AuthenticationConfigureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD3250);
  }
  return result;
}

unint64_t sub_22DEF10B8()
{
  unint64_t result;

  result = qword_255DD3258[0];
  if (!qword_255DD3258[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF01350, &type metadata for NXConnection.Command.AuthenticationConfigureCodingKeys);
    atomic_store(result, qword_255DD3258);
  }
  return result;
}

unint64_t sub_22DEF1100()
{
  unint64_t result;

  result = qword_255DD32E0;
  if (!qword_255DD32E0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF01498, &type metadata for NXConnection.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD32E0);
  }
  return result;
}

unint64_t sub_22DEF1148()
{
  unint64_t result;

  result = qword_255DD32E8[0];
  if (!qword_255DD32E8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF014C0, &type metadata for NXConnection.Command.CodingKeys);
    atomic_store(result, qword_255DD32E8);
  }
  return result;
}

uint64_t sub_22DEF118C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_22DEF124C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_22DEFA500();
  swift_allocObject();
  result = sub_22DEFA4D0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_22DEFA548();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_22DEF12C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_22DEFA500();
  swift_allocObject();
  result = sub_22DEFA4D0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_22DEF1344(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(id, uint64_t), uint64_t a6)
{
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v21;

  v11 = sub_22DEFA800();
  MEMORY[0x24BDAC7A8](v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  if (*(_QWORD *)(a3 + 208))
    __asm { BR              X10 }
  type metadata accessor for NXError();
  LOBYTE(v21) = 12;
  v13 = a4;
  swift_retain();
  v14 = NXError.__allocating_init(_:_:_:)((uint64_t)&v21, 0xD00000000000001FLL, 0x800000022DF03CE0, 0);
  swift_willThrow();
  type metadata accessor for NXError();
  LOBYTE(v21) = 19;
  v15 = v14;
  v16 = NXError.__allocating_init(_:_:_:)((uint64_t)&v21, 0x69616620646E6573, 0xEB0000000064656CLL, v14);
  LOBYTE(v21) = 19;
  v17 = v16;
  v18 = v16;
  v19 = NXError.__allocating_init(_:_:_:)((uint64_t)&v21, 0x69616620646E6573, 0xEB0000000064656CLL, v16);
  a5(v19, 1);

  return swift_release();
}

uint64_t sub_22DEF1904()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_22DEA2F04(v3, v2);
  if (__OFSUB__(HIDWORD(v3), (_DWORD)v3))
  {
    __break(1u);
    JUMPOUT(0x22DEF1B00);
  }
  v6 = *(_QWORD *)(v5 - 176);
  *(_QWORD *)(v5 - 152) = HIDWORD(v3) - (int)v3;
  sub_22DEFAC2C();
  sub_22DEA2F04(v3, v2);
  v7 = *(NSObject **)(v5 - 200);
  _os_log_impl(&dword_22DE7A000, v7, (os_log_type_t)*(_DWORD *)(v5 - 204), "send frame: header=<%s>, body=<%s>, size=%ld", v4, 0x20u);
  v8 = *(_QWORD *)(v5 - 216);
  swift_arrayDestroy();
  MEMORY[0x22E321E0C](v8, -1, -1);
  MEMORY[0x22E321E0C](v4, -1, -1);

  v9 = *(_QWORD *)(v5 - 112);
  v10 = *(_QWORD *)(v5 - 104);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_22DEF4B00;
  *(_QWORD *)(v11 + 24) = v0;
  *v1 = sub_22DEF4D9C;
  v1[1] = (uint64_t (*)(uint64_t))v11;
  v12 = *(_QWORD *)(v5 - 168);
  (*(void (**)(uint64_t (**)(uint64_t), _QWORD, uint64_t))(v12 + 104))(v1, *MEMORY[0x24BDE01C8], v6);
  sub_22DEFA7F4();
  sub_22DEA5098(v9, v10);
  swift_retain();
  sub_22DEFA7E8();
  sub_22DEFA824();
  swift_release();
  sub_22DEA2F04(v9, v10);
  swift_release();
  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v12 + 8))(v1, v6);
  sub_22DEA2F04(*(_QWORD *)(v5 - 112), *(_QWORD *)(v5 - 104));
  return swift_release();
}

uint64_t sub_22DEF1924()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  sub_22DEA2F04(v3, v2);
  v8 = v6 - v7;
  if (__OFSUB__(v6, v7))
    __break(1u);
  v9 = *(_QWORD *)(v5 - 176);
  *(_QWORD *)(v5 - 152) = v8;
  sub_22DEFAC2C();
  sub_22DEA2F04(v3, v2);
  v10 = *(NSObject **)(v5 - 200);
  _os_log_impl(&dword_22DE7A000, v10, (os_log_type_t)*(_DWORD *)(v5 - 204), "send frame: header=<%s>, body=<%s>, size=%ld", v4, 0x20u);
  v11 = *(_QWORD *)(v5 - 216);
  swift_arrayDestroy();
  MEMORY[0x22E321E0C](v11, -1, -1);
  MEMORY[0x22E321E0C](v4, -1, -1);

  v12 = *(_QWORD *)(v5 - 112);
  v13 = *(_QWORD *)(v5 - 104);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_22DEF4B00;
  *(_QWORD *)(v14 + 24) = v0;
  *v1 = sub_22DEF4D9C;
  v1[1] = (uint64_t (*)(uint64_t))v14;
  v15 = *(_QWORD *)(v5 - 168);
  (*(void (**)(uint64_t (**)(uint64_t), _QWORD, uint64_t))(v15 + 104))(v1, *MEMORY[0x24BDE01C8], v9);
  sub_22DEFA7F4();
  sub_22DEA5098(v12, v13);
  swift_retain();
  sub_22DEFA7E8();
  sub_22DEFA824();
  swift_release();
  sub_22DEA2F04(v12, v13);
  swift_release();
  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v15 + 8))(v1, v9);
  sub_22DEA2F04(*(_QWORD *)(v5 - 112), *(_QWORD *)(v5 - 104));
  return swift_release();
}

void sub_22DEF1940()
{
  unint64_t v0;
  uint64_t v1;

  sub_22DEA2F04(v1, v0);
  JUMPOUT(0x22DEF1950);
}

uint64_t sub_22DEF1B20(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7610);
  v10 = sub_22DEF3E68(&qword_255DC7618, MEMORY[0x24BDCFBE0]);
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_22DEEFDB4(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_22DEF1BC8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000022DF03BC0 || (sub_22DEFAE54() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000022DF03BE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_22DEFAE54();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22DEF1CB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22DEFAD64();
  __break(1u);
  return result;
}

uint64_t sub_22DEF1DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD v28[5];
  uint64_t v30;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC6918);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22DEFA800();
  v28[3] = *(_QWORD *)(v15 - 8);
  v28[4] = v15;
  MEMORY[0x24BDAC7A8](v15);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  *(_BYTE *)(v16 + 32) = a7;
  if (*(_QWORD *)(a4 + 208))
    __asm { BR              X10 }
  type metadata accessor for NXError();
  LOBYTE(v30) = 12;
  swift_retain();
  v17 = a6;
  v18 = NXError.__allocating_init(_:_:_:)((uint64_t)&v30, 0xD00000000000001FLL, 0x800000022DF03CE0, 0);
  swift_willThrow();
  v19 = a7 & 1;
  type metadata accessor for NXError();
  LOBYTE(v30) = 19;
  v20 = v18;
  v21 = NXError.__allocating_init(_:_:_:)((uint64_t)&v30, 0x69616620646E6573, 0xEB0000000064656CLL, v18);
  v22 = sub_22DEFAAC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
  v23 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v25 + 24) = 0;
  *(_QWORD *)(v25 + 32) = v23;
  *(_QWORD *)(v25 + 40) = v24;
  *(_BYTE *)(v25 + 48) = v19;
  *(_QWORD *)(v25 + 56) = v21;
  v26 = v21;
  sub_22DEB3614((uint64_t)v14, (uint64_t)&unk_255DC7600, v25);
  swift_release();

  return swift_release();
}

void sub_22DEF2618(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  const char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint32_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  __int128 v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  int v65;
  uint64_t v66;
  unint64_t v67;

  if (!a1)
    return;
  v6 = v5;
  v7 = *(_QWORD *)(v5 + 208);
  if (!v7 || a1 != v7)
    return;
  *(_BYTE *)(v5 + 216) = 0;
  if (a4 >> 60 == 15)
  {
    v11 = qword_255DD21D0;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = sub_22DEFA674();
    __swift_project_value_buffer(v12, (uint64_t)qword_255DD21D8);
    v13 = a5;
    v14 = a5;
    v15 = sub_22DEFA65C();
    v16 = sub_22DEFABA8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v62 = v18;
      *(_DWORD *)v17 = 136315138;
      if (a5)
      {
        swift_getErrorValue();
        v19 = sub_22DEFAEC0();
        v21 = v20;
      }
      else
      {
        v21 = 0xE300000000000000;
        v19 = 7104878;
      }
      v55 = sub_22DE8C348(v19, v21, &v62);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DE7A000, v15, v16, "connection ended: during body, error=%s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E321E0C](v18, -1, -1);
      MEMORY[0x22E321E0C](v17, -1, -1);
    }
    else
    {

    }
    if ((*(_BYTE *)(v6 + 16) & 1) != 0)
    {
      v31 = 0;
      if ((*(_BYTE *)(v6 + 144) & 1) != 0)
        goto LABEL_27;
    }
    else
    {
      type metadata accessor for NXError();
      LOBYTE(v62) = 19;
      v32 = a5;
      v31 = NXError.__allocating_init(_:_:_:)((uint64_t)&v62, 0xD000000000000013, 0x800000022DF03E70, a5);
      if ((*(_BYTE *)(v6 + 144) & 1) != 0)
      {
LABEL_27:
        if (*(_QWORD *)(v6 + 208))
        {
          if ((*(_BYTE *)(v6 + 203) & 1) == 0)
          {
            *(_BYTE *)(v6 + 203) = 1;
            swift_retain();
            sub_22DEFA854();
            swift_release();
          }
        }
        sub_22DEE32B8();
        swift_release();

        return;
      }
    }
    *(_BYTE *)(v6 + 144) = 1;
    v62 = (uint64_t)v31;
    v63 = 0;
    v64 = 96;
    v33 = v31;
    NXConnection._report(event:)((uint64_t)&v62);

    goto LABEL_27;
  }
  v24 = *(unsigned __int8 *)(v5 + 201);
  swift_retain();
  sub_22DEA5084(a3, a4);
  if (v24 == 1)
  {
    if (qword_255DD21D0 != -1)
      swift_once();
    v25 = sub_22DEFA674();
    __swift_project_value_buffer(v25, (uint64_t)qword_255DD21D8);
    sub_22DEA5084(a3, a4);
    sub_22DEA5098(a3, a4);
    sub_22DEA5098(a3, a4);
    sub_22DEA5098(a3, a4);
    v26 = sub_22DEFA65C();
    v27 = sub_22DEFAB90();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      *(_DWORD *)v28 = 136315394;
      v62 = a3;
      v63 = a4;
      sub_22DEF3EAC();
      v29 = sub_22DEFAA34();
      v62 = sub_22DE8C348(v29, v30, &v55);
      sub_22DEFAC2C();
      swift_bridgeObjectRelease();
      sub_22DEA326C(a3, a4);
      sub_22DEA326C(a3, a4);
      *(_WORD *)(v28 + 12) = 2048;
      __asm { BR              X9 }
    }
    sub_22DEA326C(a3, a4);
    sub_22DEA326C(a3, a4);
    sub_22DEA2F04(a3, a4);
    sub_22DEA2F04(a3, a4);

  }
  v61 = *(_OWORD *)(a2 + 24);
  v35 = *(_QWORD *)a2;
  v34 = *(_QWORD *)(a2 + 8);
  v55 = *(_QWORD *)a2;
  v56 = v34;
  v57 = *(_BYTE *)(a2 + 16);
  v36 = *(_DWORD *)(a2 + 20);
  v58 = v36;
  v59 = a3;
  v60 = a4;
  sub_22DEA5084(a3, a4);
  sub_22DEF4880((uint64_t *)a2);
  sub_22DEF4A4C((uint64_t)&v61);
  switch(v57)
  {
    case 0:
      if (qword_255DD21D0 != -1)
        swift_once();
      v37 = sub_22DEFA674();
      __swift_project_value_buffer(v37, (uint64_t)qword_255DD21D8);
      v38 = sub_22DEFA65C();
      v39 = sub_22DEFABA8();
      if (!os_log_type_enabled(v38, v39))
        goto LABEL_41;
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      v41 = "received invalid frame";
      v42 = v38;
      v43 = v39;
      v44 = v40;
      v45 = 2;
      goto LABEL_40;
    case 1:
      v62 = v35;
      v63 = v34;
      v64 = 1;
      v65 = v36;
      v66 = a3;
      v67 = a4;
      sub_22DEA5098(v35, v34);
      sub_22DEA5098(a3, a4);
      sub_22DEEC7BC();
      sub_22DEA2F04(v35, v34);
      sub_22DEA2F04(a3, a4);
      break;
    case 2:
      NXConnection._networkProcessMessage(data:)(a3, a4);
      break;
    case 3:
      sub_22DEA5098(a3, a4);
      v48 = a3;
      v49 = a4;
      v50 = 0;
      goto LABEL_47;
    case 4:
      sub_22DEA5098(a3, a4);
      v48 = a3;
      v49 = a4;
      v50 = 0;
      goto LABEL_49;
    case 5:
      sub_22DEA5098(a3, a4);
      v48 = a3;
      v49 = a4;
      v50 = 1;
LABEL_47:
      v51 = 1;
      goto LABEL_50;
    case 6:
      sub_22DEA5098(a3, a4);
      v48 = a3;
      v49 = a4;
      v50 = 1;
LABEL_49:
      v51 = 0;
LABEL_50:
      sub_22DEECD68(v48, v49, v50, v51);
      sub_22DEA326C(a3, a4);
      break;
    default:
      if (qword_255DD21D0 != -1)
        swift_once();
      v46 = sub_22DEFA674();
      __swift_project_value_buffer(v46, (uint64_t)qword_255DD21D8);
      v38 = sub_22DEFA65C();
      v47 = sub_22DEFABA8();
      if (os_log_type_enabled(v38, v47))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v40 = 16777472;
        swift_beginAccess();
        sub_22DEFAC2C();
        v41 = "received unsupported frame: frameType=%hhu";
        v42 = v38;
        v43 = v47;
        v44 = v40;
        v45 = 5;
LABEL_40:
        _os_log_impl(&dword_22DE7A000, v42, v43, v41, v44, v45);
        MEMORY[0x22E321E0C](v40, -1, -1);
      }
LABEL_41:

      break;
  }
  if ((*(_BYTE *)(v6 + 216) & 1) == 0 && *(_QWORD *)(v6 + 208))
  {
    v52 = swift_allocObject();
    swift_weakInit();
    v53 = swift_allocObject();
    swift_weakInit();
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = v52;
    *(_QWORD *)(v54 + 24) = v53;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22DEFA860();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_22DEA2F04(v55, v56);
  sub_22DEA2F04(v59, v60);
  sub_22DEA326C(a3, a4);
  swift_release();
}

uint64_t sub_22DEF317C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DEF31E0(void *a1, char a2)
{
  id v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  if ((a2 & 1) == 0)
    return sub_22DEFAAA0();
  v5 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC70A0);
  return sub_22DEFAA94();
}

uint64_t sub_22DEF3268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22DECA82C;
  v6[6] = v5;
  v6[7] = v4;
  v6[5] = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF32DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22DECA82C;
  v6[6] = v5;
  v6[7] = v4;
  v6[5] = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF334C()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF3354(void *a1)
{
  uint64_t v1;

  return sub_22DEED744(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_22DEF3378()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF3380(int a1, int a2)
{
  uint64_t v2;

  return sub_22DEEDA60(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_22DEF3388()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF3390(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_22DEEDF9C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_22DEF3398()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF33A0(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return sub_22DEEE52C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32));
}

_QWORD *sub_22DEF33AC(int a1, uint64_t a2, unint64_t a3, _QWORD *a4)
{
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v26[6];
  char v27[24];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    swift_beginAccess();
    v10 = *(void **)(v9 + 248);
    if (v10)
    {
      v11 = v10;
      v12 = (void *)sub_22DEFA560();
      v26[0] = 0;
      v13 = objc_msgSend(v11, sel_signData_error_, v12, v26);

      v14 = v26[0];
      if (v13)
      {
        a4 = (_QWORD *)sub_22DEFA56C();

LABEL_14:
        swift_release();
        return a4;
      }
      v22 = v14;
      v15 = (void *)sub_22DEFA530();

      swift_willThrow();
      if (!v15)
        goto LABEL_14;
    }
    else
    {
      type metadata accessor for NXError();
      LOBYTE(v26[0]) = 2;
      v15 = NXError.__allocating_init(_:_:_:)((uint64_t)v26, 0xD000000000000010, 0x800000022DF03CC0, 0);
      swift_willThrow();
      if (!v15)
        goto LABEL_14;
    }
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    v27[0] = 8;
    v15 = NXError.__allocating_init(_:_:_:)((uint64_t)v27, 0, 0, 0);
    swift_willThrow();
  }
  if (qword_255DD21D0 != -1)
    swift_once();
  v16 = sub_22DEFA674();
  __swift_project_value_buffer(v16, (uint64_t)qword_255DD21D8);
  sub_22DE817CC();
  sub_22DE817CC();
  v17 = v15;
  v18 = v15;
  sub_22DEA5098(a2, a3);
  v19 = sub_22DEFA65C();
  v20 = sub_22DEFAB9C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v26[4] = (id)swift_slowAlloc();
    *(_DWORD *)v21 = 67109634;
    LODWORD(v26[0]) = a1;
    sub_22DEFAC2C();
    *(_WORD *)(v21 + 8) = 2048;
    __asm { BR              X10 }
  }
  sub_22DEA2F04(a2, a3);

  if (a4)
  {
    v23 = (void *)sub_22DEFA524();
    v24 = v23;
    *a4 = v23;

    return 0;
  }
  else
  {

  }
  return a4;
}

uint64_t sub_22DEF37DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, _QWORD *a6)
{
  uint64_t Strong;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;
  void *v17;
  unsigned int v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _DWORD *v26;
  void *v27;
  id v28;
  id v30;
  id v31[6];
  char v32[24];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v12 = Strong;
    swift_beginAccess();
    v13 = *(void **)(v12 + 240);
    if (v13)
    {
      v14 = a6;
      v15 = v13;
      v16 = (void *)sub_22DEFA560();
      v17 = (void *)sub_22DEFA560();
      v31[0] = 0;
      v18 = objc_msgSend(v15, sel_verifySignature_data_error_, v16, v17, v31);

      if (v18)
      {
        v19 = v31[0];

LABEL_16:
        swift_release();
        return 1;
      }
      v30 = v31[0];
      v20 = (void *)sub_22DEFA530();

      swift_willThrow();
      a6 = v14;
      if (!v20)
        goto LABEL_16;
    }
    else
    {
      type metadata accessor for NXError();
      LOBYTE(v31[0]) = 2;
      v20 = NXError.__allocating_init(_:_:_:)((uint64_t)v31, 0xD000000000000010, 0x800000022DF03CA0, 0);
      swift_willThrow();
      if (!v20)
        goto LABEL_16;
    }
    swift_release();
  }
  else
  {
    type metadata accessor for NXError();
    v32[0] = 8;
    v20 = NXError.__allocating_init(_:_:_:)((uint64_t)v32, 0, 0, 0);
    swift_willThrow();
  }
  if (qword_255DD21D0 != -1)
    swift_once();
  v21 = sub_22DEFA674();
  __swift_project_value_buffer(v21, (uint64_t)qword_255DD21D8);
  v22 = v20;
  v23 = v20;
  sub_22DEA5098(a2, a3);
  sub_22DEA5098(a4, a5);
  v24 = sub_22DEFA65C();
  v25 = sub_22DEFAB9C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (_DWORD *)swift_slowAlloc();
    v31[4] = (id)swift_slowAlloc();
    *v26 = 134218498;
    __asm { BR              X10 }
  }
  sub_22DEA2F04(a2, a3);
  sub_22DEA2F04(a4, a5);

  if (a6)
  {
    v27 = (void *)sub_22DEFA524();
    v28 = v27;
    *a6 = v27;
  }

  return 0;
}

uint64_t sub_22DEF3C9C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_22DEA2F04(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_22DEF3CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_BYTE *)(v1 + 48);
  v5 = *(_DWORD *)(v1 + 52);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_22DECA82C;
  *(_QWORD *)(v8 + 96) = v6;
  *(_QWORD *)(v8 + 104) = v7;
  *(_DWORD *)(v8 + 128) = v5;
  *(_BYTE *)(v8 + 132) = v4;
  *(_OWORD *)(v8 + 80) = v9;
  *(_QWORD *)(v8 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF3D68()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22DEF3D94(void *a1)
{
  uint64_t v1;

  return sub_22DEEF164(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_22DEF3DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 56);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_22DECA82C;
  *(_QWORD *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 64) = a1;
  return swift_task_switch();
}

unint64_t sub_22DEF3E1C()
{
  unint64_t result;

  result = qword_255DC7608;
  if (!qword_255DC7608)
  {
    result = MEMORY[0x22E321D70](MEMORY[0x24BEE4540], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_255DC7608);
  }
  return result;
}

uint64_t sub_22DEF3E60(uint64_t a1)
{
  uint64_t v1;

  return sub_22DEEAF40(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_22DEF3E68(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC7610);
    result = MEMORY[0x22E321D70](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DEF3EAC()
{
  unint64_t result;

  result = qword_255DC7628;
  if (!qword_255DC7628)
  {
    result = MEMORY[0x22E321D70](MEMORY[0x24BDCDE28], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255DC7628);
  }
  return result;
}

uint64_t sub_22DEF3EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DEF3F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 56);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_22DEC23C8;
  *(_QWORD *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF3FB4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22DEF3FF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_22DECA82C;
  *(_QWORD *)(v6 + 112) = v4;
  *(_QWORD *)(v6 + 120) = v5;
  *(_OWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF4068()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEF409C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_DWORD *)(v1 + 48);
  v5 = *(_DWORD *)(v1 + 52);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_22DECA82C;
  *(_DWORD *)(v6 + 128) = v5;
  *(_DWORD *)(v6 + 84) = v4;
  *(_OWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 88) = a1;
  return swift_task_switch();
}

uint64_t objectdestroy_88Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22DEF4158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_BYTE *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_22DECA82C;
  *(_QWORD *)(v6 + 88) = v5;
  *(_BYTE *)(v6 + 112) = v4;
  *(_OWORD *)(v6 + 72) = v7;
  *(_QWORD *)(v6 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF41D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DEF41FC()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF4204(void *a1)
{
  uint64_t v1;

  return sub_22DEE76D4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_22DEF420C()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF4214(void *a1)
{
  uint64_t v1;

  return sub_22DEE83C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_24F9AA508, (uint64_t)&unk_24F9AA5F8, (uint64_t)&unk_255DC7698);
}

uint64_t sub_22DEF4248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22DEC23C8;
  return sub_22DEE7F4C((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_22DEF429C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_22DECA82C;
  *(_QWORD *)(v5 + 128) = v4;
  *(_OWORD *)(v5 + 112) = v6;
  *(_QWORD *)(v5 + 104) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF4314()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22DEF4350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_22DECA82C;
  *(_QWORD *)(v5 + 96) = v4;
  *(_OWORD *)(v5 + 80) = v6;
  *(_QWORD *)(v5 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF43C8()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF43D0(void *a1)
{
  uint64_t v1;

  return sub_22DEE83C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_24F9AA648, (uint64_t)&unk_24F9AA6E8, (uint64_t)&unk_255DC76C8);
}

uint64_t objectdestroy_23Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEF4430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22DECA82C;
  return sub_22DEE8990((uint64_t)v3, v4, v5, v2);
}

uint64_t objectdestroy_150Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22DEF44C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_22DECA82C;
  *(_QWORD *)(v5 + 96) = v4;
  *(_OWORD *)(v5 + 80) = v6;
  *(_QWORD *)(v5 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF4538()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF4540(uint64_t a1)
{
  return sub_22DEE8CA0(a1);
}

uint64_t sub_22DEF4548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22DEFA830();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DEF45CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DEFA830() - 8) + 80);
  v5 = v1 + ((v4 + 48) & ~v4);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_22DECA82C;
  *(_QWORD *)(v6 + 88) = v5;
  *(_OWORD *)(v6 + 72) = v7;
  *(_QWORD *)(v6 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_22DEF465C()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF4664(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  return sub_22DEEB0F8(a1, a2, a4, a5);
}

uint64_t sub_22DEF4678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630) - 8) + 80);
  v2 = (v1 + 65) & ~v1;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v3 = *(_QWORD *)(v0 + 56);
  if (v3 >> 60 != 15)
    sub_22DEA2F04(*(_QWORD *)(v0 + 48), v3);
  v4 = sub_22DEFA908();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  return swift_deallocObject();
}

uint64_t sub_22DEF4740(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_22DECA82C;
  return sub_22DEEB308(a1, v9, v10, v4, v5, v6, v7);
}

unint64_t sub_22DEF47E0()
{
  unint64_t result;

  result = qword_255DC76F0;
  if (!qword_255DC76F0)
  {
    result = MEMORY[0x22E321D70](MEMORY[0x24BDCDE40], MEMORY[0x24BDCDDE8]);
    atomic_store(result, &qword_255DC76F0);
  }
  return result;
}

uint64_t sub_22DEF4824()
{
  return objectdestroy_41Tm();
}

uint64_t sub_22DEF482C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_22DEA2F04(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_22DEA2F04(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_22DEF4868(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;

  return sub_22DEEC2C8(a1, a2, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v5 + 32);
}

uint64_t *sub_22DEF4880(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[3];
  v3 = a1[4];
  sub_22DEA5098(*a1, a1[1]);
  sub_22DEA5098(v2, v3);
  return a1;
}

uint64_t sub_22DEF48C4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630) - 8) + 80);
  v2 = (v1 + 105) & ~v1;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_22DEA2F04(*((_QWORD *)v0 + 6), *((_QWORD *)v0 + 7));
  sub_22DEA2F04(*((_QWORD *)v0 + 9), *((_QWORD *)v0 + 10));
  v3 = *((_QWORD *)v0 + 12);
  if (v3 >> 60 != 15)
    sub_22DEA2F04(*((_QWORD *)v0 + 11), v3);
  v4 = sub_22DEFA908();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(&v0[v2], 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v2], v4);
  return swift_deallocObject();
}

uint64_t sub_22DEF499C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7630);
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[11];
  v7 = v1[12];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_22DECA82C;
  return sub_22DEEC4F4(a1, v9, v10, v4, v5, (uint64_t)(v1 + 6), v6, v7);
}

uint64_t sub_22DEF4A4C(uint64_t a1)
{
  sub_22DEA2F04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_22DEF4A78()
{
  return objectdestroy_41Tm();
}

uint64_t objectdestroy_41Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id OPACKEncoderCreateNSData(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = (id)MEMORY[0x22E321974]();

  return v2;
}

void sub_22DEF4B00(void *a1)
{
  uint64_t v1;
  void (*v2)(id, uint64_t);
  id v4;
  id v5;
  id v6;
  char v7;

  v2 = *(void (**)(id, uint64_t))(v1 + 24);
  if (a1)
  {
    type metadata accessor for NXError();
    v7 = 19;
    v4 = a1;
    v5 = a1;
    v6 = NXError.__allocating_init(_:_:_:)((uint64_t)&v7, 0x69616620646E6573, 0xEB0000000064656CLL, a1);
    v2(v6, 1);

  }
  else
  {
    v2(0, 0);
  }
}

uint64_t sub_22DEF4BC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_229Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEF4C18(uint64_t a1)
{
  uint64_t v1;

  return sub_22DEEAD80(a1, *(uint64_t (**)(id, uint64_t))(v1 + 24));
}

uint64_t initializeBufferWithCopyOfBuffer for NXConnection.SendMessageDetails(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for NXConnection.SendMessageDetails(id *a1)
{

  return swift_release();
}

uint64_t _s5Nexus12NXConnectionC18SendMessageDetailsVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s5Nexus12NXConnectionC18SendMessageDetailsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NXConnection.SendMessageDetails()
{
  return &type metadata for NXConnection.SendMessageDetails;
}

const char *sub_22DEF4DA4()
{
  return "_nexus._tcp";
}

uint64_t static NXConstants.bonjourServiceType.getter()
{
  return 0x5F2E737578656E5FLL;
}

unint64_t static NXConstants.daemonBundleID.getter()
{
  return 0xD000000000000010;
}

uint64_t static NXConstants.entitlementMain.getter()
{
  return 0x6C7070612E6D6F63;
}

void *sub_22DEF4E10()
{
  return &unk_22DF01840;
}

uint64_t static NXConstants.logSubsystem.getter()
{
  return 0x6C7070612E6D6F63;
}

void *sub_22DEF4E40()
{
  return &unk_22DF01850;
}

uint64_t static NXConstants.nanServiceType.getter()
{
  return 0x6C7070612E6D6F63;
}

void *sub_22DEF4E70()
{
  return &unk_22DF01860;
}

uint64_t static NXConstants.networkListenerPort.getter()
{
  return 33000;
}

unint64_t static NXConstants.prefsChangedNotificaiton.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static NXConstants.prefsDomain.getter()
{
  return 0x6C7070612E6D6F63;
}

unint64_t static NXConstants.setupServiceType.getter()
{
  return 0xD000000000000015;
}

void *sub_22DEF4EE0()
{
  return &unk_24F9AAB08;
}

unint64_t static NXConstants.xpcEventStreamName.getter()
{
  return 0xD000000000000016;
}

void *sub_22DEF4F08()
{
  return &unk_22DF01868;
}

uint64_t static NXConstants.xpcServiceName.getter()
{
  return 0x6C7070612E6D6F63;
}

uint64_t NXEndpoint.init(xpcObject:)@<X0>(uint64_t a1@<X8>)
{
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String_optional v5;
  void *object;
  uint64_t result;
  uint64_t countAndFlagsBits;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  const char *v15;
  unint64_t v16;
  char *v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String_optional v29;
  _QWORD v30[2];
  char v31;

  v2._countAndFlagsBits = 1701869940;
  v2._object = (void *)0xE400000000000000;
  v3 = OS_xpc_object.string(_:)(v2);
  if (!v3.value._object)
  {
    type metadata accessor for NXError();
    LOBYTE(v30[0]) = 2;
    NXError.__allocating_init(_:_:_:)((uint64_t)v30, 0xD000000000000015, 0x800000022DF04230, 0);
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  if ((v3.value._countAndFlagsBits != 29794 || v3.value._object != (void *)0xE200000000000000)
    && (sub_22DEFAE54() & 1) == 0)
  {
    if (v3.value._countAndFlagsBits == 0x6C61636F6CLL && v3.value._object == (void *)0xE500000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      countAndFlagsBits = 0;
      object = 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 5;
      goto LABEL_16;
    }
    if (v3.value._countAndFlagsBits == 28777 && v3.value._object == (void *)0xE200000000000000
      || (sub_22DEFAE54() & 1) != 0)
    {
      v18._countAndFlagsBits = 1953722216;
      v18._object = (void *)0xE400000000000000;
      v19 = OS_xpc_object.string(_:)(v18);
      if (v19.value._object)
      {
        object = v19.value._object;
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        countAndFlagsBits = v19.value._countAndFlagsBits;
        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = 1;
        goto LABEL_16;
      }
      type metadata accessor for NXError();
      LOBYTE(v30[0]) = 2;
      v14 = 0xD000000000000018;
      v15 = "Endpoint without IP host";
    }
    else if (v3.value._countAndFlagsBits == 7562345 && v3.value._object == (void *)0xE300000000000000
           || (sub_22DEFAE54() & 1) != 0)
    {
      v20._countAndFlagsBits = 25705;
      v20._object = (void *)0xE200000000000000;
      v21 = OS_xpc_object.string(_:)(v20);
      if (v21.value._object)
      {
        object = v21.value._object;
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        countAndFlagsBits = v21.value._countAndFlagsBits;
        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = 2;
        goto LABEL_16;
      }
      type metadata accessor for NXError();
      LOBYTE(v30[0]) = 2;
      v14 = 0xD00000000000001ELL;
      v15 = "Endpoint without IDS device ID";
    }
    else
    {
      if ((v3.value._countAndFlagsBits != 0x72756F6A6E6F62 || v3.value._object != (void *)0xE700000000000000)
        && (sub_22DEFAE54() & 1) == 0)
      {
        if (v3.value._countAndFlagsBits == 7233902 && v3.value._object == (void *)0xE300000000000000
          || (sub_22DEFAE54() & 1) != 0)
        {
          v28._countAndFlagsBits = 25705;
          v28._object = (void *)0xE200000000000000;
          v29 = OS_xpc_object.string(_:)(v28);
          if (v29.value._object)
          {
            object = v29.value._object;
            swift_bridgeObjectRelease();
            result = swift_unknownObjectRelease();
            countAndFlagsBits = v29.value._countAndFlagsBits;
            v9 = 0;
            v10 = 0;
            v11 = 0;
            v12 = 0;
            v13 = 4;
            goto LABEL_16;
          }
          type metadata accessor for NXError();
          LOBYTE(v30[0]) = 2;
          v16 = 0x800000022DF04270;
          v17 = (char *)v30;
          v14 = 0xD000000000000017;
        }
        else
        {
          type metadata accessor for NXError();
          v31 = 2;
          v30[0] = 0;
          v30[1] = 0xE000000000000000;
          sub_22DEFAC98();
          sub_22DEFAA10();
          sub_22DEFAE48();
          v14 = 0;
          v16 = 0xE000000000000000;
          v17 = &v31;
        }
        goto LABEL_10;
      }
      v22._countAndFlagsBits = 1701667182;
      v22._object = (void *)0xE400000000000000;
      v23 = OS_xpc_object.string(_:)(v22);
      if (v23.value._object)
      {
        object = v23.value._object;
        v24._countAndFlagsBits = 0x6E69616D6F64;
        v24._object = (void *)0xE600000000000000;
        v25 = OS_xpc_object.string(_:)(v24);
        v9 = v25.value._countAndFlagsBits;
        v10 = v25.value._object;
        v26._countAndFlagsBits = 0x6361667265746E69;
        v26._object = (void *)0xED0000656D614E65;
        v27 = OS_xpc_object.string(_:)(v26);
        v11 = v27.value._countAndFlagsBits;
        v12 = v27.value._object;
        swift_bridgeObjectRelease();
        result = swift_unknownObjectRelease();
        countAndFlagsBits = v23.value._countAndFlagsBits;
        v13 = 3;
        goto LABEL_16;
      }
      type metadata accessor for NXError();
      LOBYTE(v30[0]) = 2;
      v14 = 0xD00000000000001DLL;
      v15 = "Endpoint without Bonjour name";
    }
LABEL_9:
    v16 = (unint64_t)(v15 - 32) | 0x8000000000000000;
    v17 = (char *)v30;
LABEL_10:
    NXError.__allocating_init(_:_:_:)((uint64_t)v17, v14, v16, 0);
    swift_willThrow();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  v4._countAndFlagsBits = 25705;
  v4._object = (void *)0xE200000000000000;
  v5 = OS_xpc_object.string(_:)(v4);
  if (!v5.value._object)
  {
    type metadata accessor for NXError();
    LOBYTE(v30[0]) = 2;
    v14 = 0xD000000000000024;
    v15 = "Endpoint without Bluetooth device ID";
    goto LABEL_9;
  }
  object = v5.value._object;
  swift_bridgeObjectRelease();
  result = swift_unknownObjectRelease();
  countAndFlagsBits = v5.value._countAndFlagsBits;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
LABEL_16:
  *(_QWORD *)a1 = countAndFlagsBits;
  *(_QWORD *)(a1 + 8) = object;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v12;
  *(_BYTE *)(a1 + 48) = v13;
  return result;
}

uint64_t sub_22DEF54E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DEF5518 + 4 * byte_22DF017B0[a1]))(0x72756F6A6E6F62, 0xE700000000000000);
}

uint64_t sub_22DEF5518()
{
  return 29794;
}

uint64_t sub_22DEF5524()
{
  return 0x6E69616D6F64;
}

uint64_t sub_22DEF5538()
{
  return 1953722216;
}

uint64_t sub_22DEF5548()
{
  return 25705;
}

uint64_t sub_22DEF5554()
{
  return 7562345;
}

uint64_t sub_22DEF5564()
{
  return 0x6361667265746E69;
}

uint64_t sub_22DEF5588()
{
  return 28777;
}

uint64_t sub_22DEF5594()
{
  return 0x6C61636F6CLL;
}

uint64_t sub_22DEF55A8()
{
  return 1701667182;
}

uint64_t sub_22DEF55B8()
{
  return 7233902;
}

uint64_t sub_22DEF55C8()
{
  return 1701869940;
}

Swift::String_optional __swiftcall OS_xpc_object.string(_:)(Swift::String a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  const char *string;
  Swift::String_optional result;

  v2 = MEMORY[0x22E322064]();
  if (v2 == sub_22DEFA6A4()
    && (v5 = sub_22DEFA9EC(), string = xpc_dictionary_get_string(v1, (const char *)(v5 + 32)), swift_release(), string))
  {
    v3 = sub_22DEFAA1C();
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

uint64_t NXEndpoint.init(xpcDictionary:key:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  xpc_object_t v6;
  uint64_t result;
  char v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[3];
  char v12;

  v5 = sub_22DEFA9EC();
  swift_bridgeObjectRelease();
  v6 = xpc_dictionary_get_dictionary(a1, (const char *)(v5 + 32));
  swift_release();
  if (v6)
  {
    NXEndpoint.init(xpcObject:)((uint64_t)v11);
    result = swift_unknownObjectRelease();
    if (!v2)
    {
      v8 = v12;
      v9 = v11[1];
      v10 = v11[2];
      *(_OWORD *)a2 = v11[0];
      *(_OWORD *)(a2 + 16) = v9;
      *(_OWORD *)(a2 + 32) = v10;
      *(_BYTE *)(a2 + 48) = v8;
    }
  }
  else
  {
    type metadata accessor for NXError();
    LOBYTE(v11[0]) = 2;
    NXError.__allocating_init(_:_:_:)((uint64_t)v11, 0xD00000000000001ALL, 0x800000022DF04320, 0);
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  return result;
}

void NXEndpoint.xpcObjectRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  xpc_dictionary_create_empty();
  __asm { BR              X9 }
}

void *sub_22DEF57B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  const char *v21;

  xpc_dictionary_set_string(v20, "type", "bt");
  v21 = (const char *)(sub_22DEFA9EC() + 32);
  xpc_dictionary_set_string(v20, "id", v21);
  swift_release();
  return v20;
}

void sub_22DEF5910()
{
  void *v0;

  xpc_dictionary_set_string(v0, "type", "local");
  JUMPOUT(0x22DEF58ECLL);
}

uint64_t sub_22DEF592C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_22DEF54E4(*a1);
  v5 = v4;
  if (v3 == sub_22DEF54E4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22DEF59B4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0xD000000000000014;
  if (v2)
    v4 = 0x800000022DF040E0;
  else
    v4 = 0x800000022DF04100;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0xD000000000000014;
  if ((a2 & 1) != 0)
    v6 = 0x800000022DF04100;
  else
    v6 = 0x800000022DF040E0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_22DEF5A5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_22DEFAE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_22DEF5AF4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22DEFAED8();
  sub_22DEF54E4(v1);
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEF5B54()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEF5BD8()
{
  unsigned __int8 *v0;

  sub_22DEF54E4(*v0);
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEF5C18()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22DEFAED8();
  sub_22DEF54E4(v1);
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEF5C74()
{
  sub_22DEFAED8();
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEF5CF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DEF8F34();
  *a1 = result;
  return result;
}

uint64_t sub_22DEF5D20@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22DEF54E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22DEF5D48@<X0>(uint64_t a1@<X8>)
{
  return NXEndpoint.init(xpcObject:)(a1);
}

void sub_22DEF5D5C()
{
  NXEndpoint.xpcObjectRepresentation.getter();
}

Nexus::NXKey_optional __swiftcall NXKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  Nexus::NXKey_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_22DEFAE6C();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 2;
  switch(v3)
  {
    case 0:
      goto LABEL_3;
    case 1:
      v5 = 1;
LABEL_3:
      v6 = v5;
      break;
    case 2:
      break;
    case 3:
      v6 = 3;
      break;
    case 4:
      v6 = 4;
      break;
    case 5:
      v6 = 5;
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    default:
      v6 = 20;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t NXKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DEF5EB4 + 4 * byte_22DF017D6[*v0]))(0x4449746E65696C63, 0xE800000000000000);
}

unint64_t sub_22DEF5EB4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_22DEF5ED4()
{
  return 0x746E696F70646E65;
}

uint64_t sub_22DEF5EE8()
{
  return 0x746E657665;
}

uint64_t sub_22DEF5EFC()
{
  return 0x746144746E657665;
}

uint64_t sub_22DEF5F18()
{
  return 0x6976726553736469;
}

uint64_t sub_22DEF5F38()
{
  return 0x436567617373656DLL;
}

uint64_t sub_22DEF5F5C()
{
  return 1701080941;
}

uint64_t sub_22DEF5F6C()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_22DEF5FF0()
{
  return 0x64726F7773736170;
}

uint64_t sub_22DEF6004()
{
  return 0x4474736575716572;
}

uint64_t sub_22DEF6024()
{
  return 0x4E74736575716572;
}

uint64_t sub_22DEF6044()
{
  return 0x4E74736575716572;
}

uint64_t sub_22DEF6064()
{
  return 0x5474736575716572;
}

uint64_t sub_22DEF6088()
{
  return 0x65736E6F70736572;
}

uint64_t sub_22DEF60A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22DEF5A5C(*a1, *a2, NXKey.rawValue.getter) & 1;
}

uint64_t sub_22DEF60D0(uint64_t a1, uint64_t a2)
{
  return sub_22DEF669C(a1, a2, (void (*)(uint64_t))NXKey.rawValue.getter);
}

uint64_t sub_22DEF60DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DEF6710(a1, a2, a3, (void (*)(void))NXKey.rawValue.getter);
}

uint64_t sub_22DEF60E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DEF676C(a1, a2, a3, (void (*)(uint64_t))NXKey.rawValue.getter);
}

Nexus::NXKey_optional sub_22DEF60F4(Swift::String *a1)
{
  return NXKey.init(rawValue:)(*a1);
}

uint64_t sub_22DEF6100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NXKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t static NXOperationEvent.decode(data:)()
{
  sub_22DEFA4A0();
  swift_allocObject();
  sub_22DEFA494();
  sub_22DEF8F7C();
  sub_22DEFA488();
  return swift_release();
}

uint64_t NXOperationEvent.encode()()
{
  uint64_t v0;

  sub_22DEFA4C4();
  swift_allocObject();
  sub_22DEFA4B8();
  sub_22DEF8FC0();
  v0 = sub_22DEFA4AC();
  swift_release();
  return v0;
}

Nexus::NXPrefKey_optional __swiftcall NXPrefKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  Nexus::NXPrefKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22DEFAD70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static NXPrefKey.allCases.getter()
{
  return &unk_24F9AAEA8;
}

unint64_t NXPrefKey.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0xD000000000000014;
}

uint64_t sub_22DEF62F8(char *a1, char *a2)
{
  return sub_22DEF59B4(*a1, *a2);
}

uint64_t sub_22DEF6304()
{
  return sub_22DEF5B54();
}

uint64_t sub_22DEF630C()
{
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEF636C()
{
  return sub_22DEF5C74();
}

Nexus::NXPrefKey_optional sub_22DEF6374(Swift::String *a1)
{
  return NXPrefKey.init(rawValue:)(*a1);
}

void sub_22DEF6380(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000010;
  else
    v2 = 0xD000000000000014;
  v3 = 0x800000022DF040E0;
  if (*v1)
    v3 = 0x800000022DF04100;
  *a1 = v2;
  a1[1] = v3;
}

void sub_22DEF63C4(_QWORD *a1@<X8>)
{
  *a1 = &unk_24F9AAED0;
}

Nexus::NXRequestType_optional __swiftcall NXRequestType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Nexus::NXRequestType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22DEFAE6C();
  result.value = swift_bridgeObjectRelease();
  v5 = 19;
  if (v3 < 0x13)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NXRequestType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22DEF6470 + 4 * byte_22DF017EA[*v0]))(0x7453746E65696C63, 0xEB00000000747261);
}

uint64_t sub_22DEF6470()
{
  return 0x7645746E65696C63;
}

uint64_t sub_22DEF65DC()
{
  return 0x7265766F63736964;
}

uint64_t sub_22DEF6648()
{
  return 0x7773736150797274;
}

uint64_t sub_22DEF6668(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22DEF5A5C(*a1, *a2, NXRequestType.rawValue.getter) & 1;
}

uint64_t sub_22DEF6690(uint64_t a1, uint64_t a2)
{
  return sub_22DEF669C(a1, a2, (void (*)(uint64_t))NXRequestType.rawValue.getter);
}

uint64_t sub_22DEF669C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_22DEFAED8();
  a3(v4);
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

uint64_t sub_22DEF6704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DEF6710(a1, a2, a3, (void (*)(void))NXRequestType.rawValue.getter);
}

uint64_t sub_22DEF6710(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_22DEFAA04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DEF6760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DEF676C(a1, a2, a3, (void (*)(uint64_t))NXRequestType.rawValue.getter);
}

uint64_t sub_22DEF676C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_22DEFAED8();
  a4(v5);
  sub_22DEFAA04();
  swift_bridgeObjectRelease();
  return sub_22DEFAEFC();
}

Nexus::NXRequestType_optional sub_22DEF67D0(Swift::String *a1)
{
  return NXRequestType.init(rawValue:)(*a1);
}

uint64_t sub_22DEF67DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NXRequestType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t static NXXPCCodable.decode(xpcDict:key:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  xpc_object_t v9;
  char v11;

  v8 = sub_22DEFA9EC();
  v9 = xpc_dictionary_get_value(a1, (const char *)(v8 + 32));
  swift_release();
  if (v9)
    return (*(uint64_t (**)(xpc_object_t, uint64_t, uint64_t))(a5 + 8))(v9, a4, a5);
  type metadata accessor for NXError();
  v11 = 2;
  NXError.__allocating_init(_:_:_:)((uint64_t)&v11, 0xD000000000000014, 0x800000022DF04340, 0);
  return swift_willThrow();
}

uint64_t NXXPCCodable.encode(xpcDict:key:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  void *v8;
  uint64_t v9;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  if (!v5)
  {
    v8 = (void *)result;
    v9 = sub_22DEFA9EC();
    xpc_dictionary_set_value(a1, (const char *)(v9 + 32), v8);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t OS_xpc_object.data(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v3;
  _BYTE *data;
  size_t v5[2];

  v5[1] = *MEMORY[0x24BDAC8D0];
  v1 = MEMORY[0x22E322064](v0);
  if (v1 == sub_22DEFA6A4()
    && (v5[0] = 0,
        v3 = sub_22DEFA9EC(),
        data = xpc_dictionary_get_data(v0, (const char *)(v3 + 32), v5),
        swift_release(),
        data))
  {
    return sub_22DEF9004(data, v5[0]);
  }
  else
  {
    return 0;
  }
}

uint64_t default argument 1 of OS_xpc_object.object<A, B>(key:decoder:)()
{
  sub_22DEFA4A0();
  swift_allocObject();
  return sub_22DEFA494();
}

uint64_t OS_xpc_object.object<A, B>(key:decoder:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;

  v5 = OS_xpc_object.data(_:)();
  if (v6 >> 60 == 15)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1, a1);
  v8 = v5;
  v9 = v6;
  sub_22DEFA6C8();
  result = sub_22DEA326C(v8, v9);
  if (!v2)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 0, 1, a1);
  return result;
}

uint64_t default argument 2 of OS_xpc_object.setObject<A>(_:key:encoder:)()
{
  sub_22DEFA4C4();
  swift_allocObject();
  return sub_22DEFA4B8();
}

uint64_t OS_xpc_object.setObject<A>(_:key:encoder:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_22DEFA6D4();
  if (!v2)
  {
    v4 = (void *)sub_22DEFA53C();
    sub_22DEA2F04(v6, v7);
    v5 = sub_22DEFA9EC();
    xpc_dictionary_set_value(v1, (const char *)(v5 + 32), v4);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

Swift::Double __swiftcall OS_xpc_object.double(_:)(Swift::String a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  double v5;

  v2 = MEMORY[0x22E322064]();
  if (v2 != sub_22DEFA6A4())
    return NAN;
  v4 = sub_22DEFA9EC();
  v5 = xpc_dictionary_get_double(v1, (const char *)(v4 + 32));
  swift_release();
  return v5;
}

uint64_t default argument 1 of OS_xpc_object.stringArray(_:skipBadValues:)()
{
  return 0;
}

Swift::OpaquePointer_optional __swiftcall OS_xpc_object.stringArray(_:skipBadValues:)(Swift::String _, Swift::Bool skipBadValues)
{
  void *v2;
  uint64_t v4;
  xpc_object_t v5;
  Swift::Bool v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BOOL4 v10;
  char isEscapingClosureAtFileLocation;
  void *v12;
  _QWORD aBlock[6];
  void *v14;
  Swift::OpaquePointer_optional result;

  v4 = sub_22DEFA9EC();
  v5 = xpc_dictionary_get_array(v2, (const char *)(v4 + 32));
  swift_release();
  if (v5)
  {
    v14 = (void *)MEMORY[0x24BEE4AF8];
    v7 = swift_allocObject();
    *(_BYTE *)(v7 + 16) = skipBadValues;
    *(_QWORD *)(v7 + 24) = &v14;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = sub_22DEF90C0;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_22DEF9198;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DEF6E70;
    aBlock[3] = &block_descriptor_6;
    v9 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v10 = xpc_array_apply(v5, v9);
    swift_unknownObjectRelease();
    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    v12 = (void *)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
      goto LABEL_7;
    }
    v5 = v14;
    swift_release();
    if (!v10)
    {
      swift_bridgeObjectRelease();
      v5 = 0;
    }
  }
  v12 = v5;
LABEL_7:
  result.value._rawValue = v12;
  result.is_nil = v6;
  return result;
}

uint64_t sub_22DEF6E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

Swift::UInt64 __swiftcall OS_xpc_object.uint64(_:)(Swift::String a1)
{
  void *v1;
  uint64_t v2;
  Swift::UInt64 v3;
  uint64_t v4;
  xpc_object_t v5;
  uint64_t v6;
  uint64_t value;

  v2 = MEMORY[0x22E322064]();
  if (v2 == sub_22DEFA6A4())
  {
    v4 = sub_22DEFA9EC();
    v5 = xpc_dictionary_get_value(v1, (const char *)(v4 + 32));
    swift_release();
    if (v5)
    {
      v6 = MEMORY[0x22E322064](v5);
      if (sub_22DEFA68C() == v6)
      {
        value = xpc_uint64_get_value(v5);
      }
      else
      {
        if (sub_22DEFA680() != v6)
        {
          v3 = 0;
LABEL_10:
          swift_unknownObjectRelease();
          return v3;
        }
        value = xpc_int64_get_value(v5);
      }
      v3 = value;
      goto LABEL_10;
    }
  }
  return 0;
}

uint64_t OS_xpc_object.uuid(_:)@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  sub_22DEFA9EC();
  v2 = (id)CUXPCObjectGetUUID();
  swift_release();
  if (v2)
  {
    sub_22DEFA584();

    v3 = sub_22DEFA59C();
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a1;
    v6 = 0;
  }
  else
  {
    v3 = sub_22DEFA59C();
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a1;
    v6 = 1;
  }
  return v4(v5, v6, 1, v3);
}

uint64_t OS_xpc_object.setUUID(_:key:)()
{
  void *v0;

  v0 = (void *)sub_22DEFA578();
  sub_22DEFA9EC();
  CUXPCObjectSetUUID();

  return swift_release();
}

uint64_t static NXDiagnosticShowRequestMessage.requestName.getter()
{
  return 0x74736F6E67616964;
}

uint64_t sub_22DEF70B4()
{
  sub_22DEF91D4();
  return sub_22DEFAF44();
}

uint64_t sub_22DEF70DC()
{
  sub_22DEF91D4();
  return sub_22DEFAF50();
}

uint64_t NXDiagnosticShowRequestMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7780);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEF91D4();
  sub_22DEFAF2C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t NXDiagnosticShowRequestMessage.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_22DEF71EC()
{
  return 0x74736F6E67616964;
}

uint64_t sub_22DEF7218(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7780);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEF91D4();
  sub_22DEFAF2C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t NXDiagnosticShowResponseMessage.output.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Nexus::NXDiagnosticShowResponseMessage __swiftcall NXDiagnosticShowResponseMessage.init(output:)(Nexus::NXDiagnosticShowResponseMessage output)
{
  Nexus::NXDiagnosticShowResponseMessage *v1;

  *v1 = output;
  return output;
}

uint64_t sub_22DEF7310()
{
  return 0x74757074756FLL;
}

uint64_t sub_22DEF7324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74757074756FLL && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22DEFAE54();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22DEF73B0()
{
  sub_22DEF9218();
  return sub_22DEFAF44();
}

uint64_t sub_22DEF73D8()
{
  sub_22DEF9218();
  return sub_22DEFAF50();
}

uint64_t NXDiagnosticShowResponseMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7788);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEF9218();
  sub_22DEFAF2C();
  sub_22DEFAE0C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t NXDiagnosticShowResponseMessage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7790);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEF9218();
  sub_22DEFAF20();
  if (!v2)
  {
    v9 = sub_22DEFADAC();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_22DEF760C()
{
  return static NXResponseMessage.decode(data:context:)();
}

uint64_t sub_22DEF7620()
{
  return NXResponseMessage.encode(context:)();
}

uint64_t sub_22DEF7634@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return NXDiagnosticShowResponseMessage.init(from:)(a1, a2);
}

uint64_t sub_22DEF7648(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DC7788);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DEF9218();
  sub_22DEFAF2C();
  sub_22DEFAE0C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t NXDiagnosticShowRequestHandler.handler.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t NXDiagnosticShowRequestHandler.init(handler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t (*sub_22DEF776C())()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  v1 = v0[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_retain();
  return sub_22DE90090;
}

uint64_t sub_22DEF77C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return NXRequestHandler.handleRequestName(_:requestData:context:responseDataHandler:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t NXOrderedDictionary.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  NXOrderedDictionary.init()();
  return v0;
}

_QWORD *NXOrderedDictionary.init()()
{
  _QWORD *v0;
  uint64_t v1;

  type metadata accessor for NXOrderedDictionary.Node(0, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), *(_QWORD *)(*v0 + 96));
  v1 = sub_22DEFA950();
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  return v0;
}

uint64_t sub_22DEF787C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(*v2 + 88);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v15 + 96);
  type metadata accessor for NXOrderedDictionary.Node(0, v11, v5, v22);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v23 = a1;
  v16(v14, a1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  v17 = v2[4];
  swift_retain();
  v18 = sub_22DEF7A6C((uint64_t)v14, (uint64_t)v9, v17, 0);
  v19 = v18;
  if (!v2[3])
  {
    v2[3] = v18;
    swift_retain();
    v20 = v2[4];
    if (!v20)
      goto LABEL_5;
    goto LABEL_3;
  }
  v20 = v2[4];
  if (v20)
  {
LABEL_3:
    *(_QWORD *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 128)) = v19;
    swift_retain();
    swift_release();
  }
LABEL_5:
  v2[4] = v19;
  swift_retain();
  swift_release();
  v16(v14, v23, v11);
  v24 = v19;
  swift_beginAccess();
  sub_22DEFA98C();
  swift_retain();
  sub_22DEFA9A4();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_22DEF7A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = swift_allocObject();
  v9 = *(_QWORD *)v8;
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 120)) = 0;
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 128)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 80) - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 104), a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 88) - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112), a2);
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 120)) = a3;
  swift_release();
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 128)) = a4;
  swift_release();
  return v8;
}

uint64_t sub_22DEF7B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t **v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;

  v3 = *v1;
  swift_beginAccess();
  v4 = v3[11];
  type metadata accessor for NXOrderedDictionary.Node(255, v3[10], v4, v3[12]);
  sub_22DEFA98C();
  sub_22DEFA974();
  swift_endAccess();
  if (v14)
  {
    v5 = v1[3];
    if (v5 && v5 == v14)
    {
      v1[3] = *(uint64_t **)((char *)v14 + *(_QWORD *)(*v14 + 128));
      swift_retain();
      swift_release();
    }
    v6 = v1[4];
    if (v6 && v6 == v14)
    {
      v1[4] = *(uint64_t **)((char *)v14 + *(_QWORD *)(*v14 + 120));
      swift_retain();
      swift_release();
    }
    v7 = *v14;
    v8 = *(_QWORD *)(*v14 + 120);
    v9 = *(uint64_t *)((char *)v14 + v8);
    if (v9)
    {
      *(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 128)) = *(uint64_t *)((char *)v14 + *(_QWORD *)(v7 + 128));
      swift_retain();
      swift_release();
      v7 = *v14;
    }
    v10 = *(uint64_t *)((char *)v14 + *(_QWORD *)(v7 + 128));
    if (v10)
    {
      *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 120)) = *(uint64_t *)((char *)v14 + v8);
      swift_retain();
      swift_release();
      v7 = *v14;
    }
    v11 = *(_QWORD *)(v4 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, (uint64_t)v14 + *(_QWORD *)(v7 + 112), v4);
    swift_release();
    v12 = 0;
  }
  else
  {
    v11 = *(_QWORD *)(v4 - 8);
    v12 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, v12, 1, v4);
}

uint64_t sub_22DEF7CF8()
{
  uint64_t **v0;
  uint64_t *v1;

  v1 = *v0;
  swift_beginAccess();
  type metadata accessor for NXOrderedDictionary.Node(255, v1[10], v1[11], v1[12]);
  sub_22DEFA98C();
  sub_22DEFA980();
  swift_endAccess();
  v0[3] = 0;
  swift_release();
  v0[4] = 0;
  return swift_release();
}

uint64_t sub_22DEF7D94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(**(_QWORD **)a1 + 232))(a2);
}

uint64_t sub_22DEF7DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v7 = *(_QWORD *)(a4 + a3 - 24);
  v8 = sub_22DEFAC20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v17 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v17 - v13, a3, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  return (*(uint64_t (**)(char *, char *))(**(_QWORD **)a2 + 240))(v12, v14);
}

uint64_t sub_22DEF7EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = (_QWORD *)*v2;
  swift_beginAccess();
  v6 = v2[2];
  v8 = v5[10];
  v7 = v5[11];
  v9 = v5[12];
  v10 = type metadata accessor for NXOrderedDictionary.Node(0, v8, v7, v9);
  swift_bridgeObjectRetain();
  MEMORY[0x22E321350](&v13, a1, v6, v8, v10, v9);
  swift_bridgeObjectRelease();
  if (!v13)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
  v11 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, v13 + *(_QWORD *)(*(_QWORD *)v13 + 112), v7);
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v7);
}

uint64_t sub_22DEF7FA8(char *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  v22 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 88);
  v6 = sub_22DEFAC20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v22 - v12;
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v23 = a1;
  v17(v13, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v5) == 1)
  {
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v13, v6);
    v19 = v22;
    (*(void (**)(uint64_t))(*v2 + 216))(v22);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(v19);
    v18(v23, v6);
    return ((uint64_t (*)(char *, uint64_t))v18)(v10, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v5);
    v21 = v22;
    (*(void (**)(uint64_t, char *))(*v2 + 208))(v22, v16);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(v21);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v5);
  }
}

void (*sub_22DEF8168(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;

  v5 = malloc(0x48uLL);
  *a1 = v5;
  *v5 = v2;
  v6 = *v2;
  v7 = sub_22DEFAC20();
  v5[1] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[2] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[3] = malloc(v9);
  v10 = malloc(v9);
  v5[4] = v10;
  v11 = *(_QWORD *)(v6 + 80);
  v5[5] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[6] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v5[7] = malloc(v13);
  v5[8] = malloc(v13);
  (*(void (**)(void))(v12 + 16))();
  sub_22DEF7EA4(a2, (uint64_t)v10);
  return sub_22DEF8244;
}

void sub_22DEF8244(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = v2[6];
    v8 = (char *)v2[3];
    v7 = (char *)v2[4];
    v9 = v2[1];
    v10 = v2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v3, v4, v5);
    sub_22DEF7FA8(v8, (uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    v8 = (char *)v2[3];
    v7 = (char *)v2[4];
    sub_22DEF7FA8(v7, (uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v7);
  free(v8);
  free(v2);
}

uint64_t sub_22DEF8318()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_22DEF8398@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_retain();
}

uint64_t NXOrderedDictionary.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *v2;
  if (*v2)
  {
    *v2 = *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 128));
    v5 = *(_QWORD *)(a1 + 16);
    v6 = *(_QWORD *)(a1 + 24);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v8 = a2 + *(int *)(TupleTypeMetadata2 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v4 + *(_QWORD *)(*(_QWORD *)v4 + 112), v6);
    swift_retain();
    swift_release();
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56);
    v10 = a2;
    v11 = 0;
    v12 = TupleTypeMetadata2;
  }
  else
  {
    v12 = swift_getTupleTypeMetadata2();
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v10 = a2;
    v11 = 1;
  }
  return v9(v10, v11, 1, v12);
}

uint64_t sub_22DEF84B8()
{
  uint64_t v0;

  (*(void (**)(void))(**(_QWORD **)v0 + 256))();
  return swift_release();
}

uint64_t sub_22DEF84E4()
{
  return 0;
}

uint64_t sub_22DEF84EC()
{
  return 2;
}

uint64_t sub_22DEF84F4(uint64_t *a1)
{
  uint64_t v1;

  type metadata accessor for NXOrderedDictionary(0, a1[10], a1[11], a1[12]);
  v1 = sub_22DEF9274();
  swift_release();
  return v1;
}

void sub_22DEF8540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for NXOrderedDictionary(0, a4[10], a4[11], a4[12]);
  JUMPOUT(0x22E3213F8);
}

uint64_t sub_22DEF859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for NXOrderedDictionary(0, a4[10], a4[11], a4[12]);
  return sub_22DEFAA4C();
}

uint64_t sub_22DEF860C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t sub_22DEF861C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t NXOrderedSet.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  NXOrderedSet.init()(v0, v1, v2, v3);
  return v0;
}

_QWORD *NXOrderedSet.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  type metadata accessor for NXOrderedSet.Node(0, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 88), a4);
  v5 = sub_22DEFA950();
  v4[3] = 0;
  v4[4] = 0;
  v4[2] = v5;
  return v4;
}

uint64_t sub_22DEF86B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_BYTE *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  uint64_t v16;

  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NXOrderedSet.Node(0, v3, *(_QWORD *)(v7 + 88), v8);
  v9 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
  v9(v6, a1, v3);
  v10 = v1[4];
  swift_retain();
  v11 = sub_22DEF8850((uint64_t)v6, v10, 0);
  v12 = v11;
  if (!v1[3])
  {
    v1[3] = v11;
    swift_retain();
    v13 = v1[4];
    if (!v13)
      goto LABEL_5;
    goto LABEL_3;
  }
  v13 = v1[4];
  if (v13)
  {
LABEL_3:
    *(_QWORD *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 112)) = v12;
    swift_retain();
    swift_release();
  }
LABEL_5:
  v1[4] = v12;
  swift_retain();
  swift_release();
  v9(v6, a1, v3);
  v16 = v12;
  swift_beginAccess();
  sub_22DEFA98C();
  swift_retain();
  sub_22DEFA9A4();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_22DEF8850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  v7 = *(_QWORD *)v6;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 104)) = 0;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 112)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 96), a1);
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 104)) = a2;
  swift_release();
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 112)) = a3;
  swift_release();
  return v6;
}

BOOL sub_22DEF88F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v11;

  v1 = *v0;
  swift_beginAccess();
  type metadata accessor for NXOrderedSet.Node(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  sub_22DEFA98C();
  sub_22DEFA974();
  swift_endAccess();
  if (v11)
  {
    v3 = (uint64_t *)v0[3];
    if (v3 && v3 == v11)
    {
      v0[3] = *(uint64_t *)((char *)v11 + *(_QWORD *)(*v11 + 112));
      swift_retain();
      swift_release();
    }
    v4 = (uint64_t *)v0[4];
    if (v4 && v4 == v11)
    {
      v0[4] = *(uint64_t *)((char *)v11 + *(_QWORD *)(*v11 + 104));
      swift_retain();
      swift_release();
    }
    v5 = *v11;
    v6 = *(_QWORD *)(*v11 + 104);
    v7 = *(uint64_t *)((char *)v11 + v6);
    if (v7)
    {
      *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 112)) = *(uint64_t *)((char *)v11 + *(_QWORD *)(v5 + 112));
      swift_retain();
      swift_release();
      v5 = *v11;
    }
    v8 = *(uint64_t *)((char *)v11 + *(_QWORD *)(v5 + 112));
    if (v8)
    {
      v9 = *(uint64_t *)((char *)v11 + v6);
      swift_retain();
      swift_retain();
      swift_release();
      *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 104)) = v9;
      swift_release();
    }
    swift_release();
  }
  return v11 != 0;
}

uint64_t sub_22DEF8A74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  type metadata accessor for NXOrderedSet.Node(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  sub_22DEFA98C();
  sub_22DEFA980();
  swift_endAccess();
  v0[3] = 0;
  swift_release();
  v0[4] = 0;
  return swift_release();
}

uint64_t sub_22DEF8B0C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t NXOrderedSet.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *v2;
  if (*v2)
  {
    *v2 = *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
    v5 = *(_QWORD *)(a1 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, v4 + *(_QWORD *)(*(_QWORD *)v4 + 96), v5);
    swift_retain();
    swift_release();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v8 = a2;
    v9 = 0;
    v10 = v5;
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 16);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

uint64_t _s5Nexus19NXOrderedDictionaryCfd_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t NXOrderedSet.__deallocating_deinit()
{
  NXOrderedSet.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22DEF8C64()
{
  uint64_t v0;

  (*(void (**)(void))(**(_QWORD **)v0 + 224))();
  return swift_release();
}

uint64_t sub_22DEF8C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for NXOrderedSet(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  v4 = sub_22DEF9274();
  swift_release();
  return v4;
}

void sub_22DEF8CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for NXOrderedSet(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  JUMPOUT(0x22E3213F8);
}

uint64_t sub_22DEF8D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for NXOrderedSet(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  return sub_22DEFAA4C();
}

uint64_t NXRequestDataHandlerRegistration.requestName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NXRequestDataHandlerRegistration.clientLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NXRequestDataHandlerRegistration.handler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t _s5Nexus34NXOperationDataHandlerRegistrationV13operationName11clientLabel0F7CreatorACSS_SSAA0bcD0_pSS_10Foundation4UUIDVtKctcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

char *sub_22DEF8E34(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DC7880);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22DEF8F34()
{
  unint64_t v0;

  v0 = sub_22DEFAD70();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

unint64_t sub_22DEF8F7C()
{
  unint64_t result;

  result = qword_255DC7710;
  if (!qword_255DC7710)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXOperationEvent, &type metadata for NXOperationEvent);
    atomic_store(result, (unint64_t *)&qword_255DC7710);
  }
  return result;
}

unint64_t sub_22DEF8FC0()
{
  unint64_t result;

  result = qword_255DC7718;
  if (!qword_255DC7718)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXOperationEvent, &type metadata for NXOperationEvent);
    atomic_store(result, (unint64_t *)&qword_255DC7718);
  }
  return result;
}

uint64_t sub_22DEF9004(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_22DEF118C(__src, &__src[a2]);
  sub_22DEFA500();
  swift_allocObject();
  sub_22DEFA4D0();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_22DEFA548();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_22DEF90B0()
{
  return swift_deallocObject();
}

uint64_t sub_22DEF90C0(int a1, xpc_object_t xstring)
{
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  char *v12;

  v3 = *(unsigned __int8 *)(v2 + 16);
  v4 = *(char ***)(v2 + 24);
  if (xpc_string_get_string_ptr(xstring))
  {
    v5 = sub_22DEFAA1C();
    v7 = v6;
    v8 = *v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v4 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_22DEF8E34(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      *v4 = v8;
    }
    v11 = *((_QWORD *)v8 + 2);
    v10 = *((_QWORD *)v8 + 3);
    if (v11 >= v10 >> 1)
    {
      v8 = sub_22DEF8E34((char *)(v10 > 1), v11 + 1, 1, v8);
      *v4 = v8;
    }
    *((_QWORD *)v8 + 2) = v11 + 1;
    v12 = &v8[16 * v11];
    *((_QWORD *)v12 + 4) = v5;
    *((_QWORD *)v12 + 5) = v7;
    return 1;
  }
  return v3;
}

uint64_t sub_22DEF9188()
{
  return swift_deallocObject();
}

uint64_t sub_22DEF9198()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

unint64_t sub_22DEF91D4()
{
  unint64_t result;

  result = qword_255DD3390;
  if (!qword_255DD3390)
  {
    result = MEMORY[0x22E321D70](&unk_22DF021C4, &type metadata for NXDiagnosticShowRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD3390);
  }
  return result;
}

unint64_t sub_22DEF9218()
{
  unint64_t result;

  result = qword_255DD3398[0];
  if (!qword_255DD3398[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF02174, &type metadata for NXDiagnosticShowResponseMessage.CodingKeys);
    atomic_store(result, qword_255DD3398);
  }
  return result;
}

uint64_t type metadata accessor for NXOrderedDictionary.Node(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOrderedDictionary.Node);
}

uint64_t type metadata accessor for NXOrderedSet.Node(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOrderedSet.Node);
}

unint64_t sub_22DEF927C()
{
  unint64_t result;

  result = qword_255DC7798;
  if (!qword_255DC7798)
  {
    result = MEMORY[0x22E321D70](&unk_22DF01880, &_s14descr24F9ABB61O7XPCKeysON);
    atomic_store(result, (unint64_t *)&qword_255DC7798);
  }
  return result;
}

unint64_t sub_22DEF92C4()
{
  unint64_t result;

  result = qword_255DC77A0;
  if (!qword_255DC77A0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXKey, &type metadata for NXKey);
    atomic_store(result, (unint64_t *)&qword_255DC77A0);
  }
  return result;
}

unint64_t sub_22DEF930C()
{
  unint64_t result;

  result = qword_255DC77A8;
  if (!qword_255DC77A8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXPrefKey, &type metadata for NXPrefKey);
    atomic_store(result, (unint64_t *)&qword_255DC77A8);
  }
  return result;
}

unint64_t sub_22DEF9354()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DC77B0;
  if (!qword_255DC77B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DC77B8);
    result = MEMORY[0x22E321D70](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255DC77B0);
  }
  return result;
}

unint64_t sub_22DEF93A4()
{
  unint64_t result;

  result = qword_255DC77C0;
  if (!qword_255DC77C0)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXRequestType, &type metadata for NXRequestType);
    atomic_store(result, (unint64_t *)&qword_255DC77C0);
  }
  return result;
}

unint64_t sub_22DEF93EC()
{
  unint64_t result;

  result = qword_255DC77C8;
  if (!qword_255DC77C8)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiagnosticShowResponseMessage, &type metadata for NXDiagnosticShowResponseMessage);
    atomic_store(result, (unint64_t *)&qword_255DC77C8);
  }
  return result;
}

uint64_t sub_22DEF9430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DEF94E0(a1, a2, a3, (uint64_t (*)(void))sub_22DEF9444, (uint64_t (*)(void))sub_22DEF9488);
}

unint64_t sub_22DEF9444()
{
  unint64_t result;

  result = qword_255DC7820;
  if (!qword_255DC7820)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiagnosticShowRequestMessage, &type metadata for NXDiagnosticShowRequestMessage);
    atomic_store(result, (unint64_t *)&qword_255DC7820);
  }
  return result;
}

unint64_t sub_22DEF9488()
{
  unint64_t result;

  result = qword_255DC7828;
  if (!qword_255DC7828)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiagnosticShowRequestMessage, &type metadata for NXDiagnosticShowRequestMessage);
    atomic_store(result, (unint64_t *)&qword_255DC7828);
  }
  return result;
}

uint64_t sub_22DEF94CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22DEF94E0(a1, a2, a3, (uint64_t (*)(void))sub_22DEF9510, (uint64_t (*)(void))sub_22DEF9554);
}

uint64_t sub_22DEF94E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22DEF9510()
{
  unint64_t result;

  result = qword_255DC7830;
  if (!qword_255DC7830)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiagnosticShowResponseMessage, &type metadata for NXDiagnosticShowResponseMessage);
    atomic_store(result, (unint64_t *)&qword_255DC7830);
  }
  return result;
}

unint64_t sub_22DEF9554()
{
  unint64_t result;

  result = qword_255DC7838;
  if (!qword_255DC7838)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiagnosticShowResponseMessage, &type metadata for NXDiagnosticShowResponseMessage);
    atomic_store(result, (unint64_t *)&qword_255DC7838);
  }
  return result;
}

unint64_t sub_22DEF959C()
{
  unint64_t result;

  result = qword_255DC7840;
  if (!qword_255DC7840)
  {
    result = MEMORY[0x22E321D70](&protocol conformance descriptor for NXDiagnosticShowRequestMessage, &type metadata for NXDiagnosticShowRequestMessage);
    atomic_store(result, (unint64_t *)&qword_255DC7840);
  }
  return result;
}

void sub_22DEF95E0()
{
  JUMPOUT(0x22E321D70);
}

void sub_22DEF95F0()
{
  JUMPOUT(0x22E321D70);
}

uint64_t sub_22DEF9600()
{
  return 24;
}

__n128 sub_22DEF960C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for NXConstants()
{
  return &type metadata for NXConstants;
}

uint64_t _s14descr24F9ABB61O7XPCKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14descr24F9ABB61O7XPCKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_22DEF970C + 4 * byte_22DF01802[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_22DEF9740 + 4 * byte_22DF017FD[v4]))();
}

uint64_t sub_22DEF9740(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF9748(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEF9750);
  return result;
}

uint64_t sub_22DEF975C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEF9764);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_22DEF9768(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF9770(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr24F9ABB61O7XPCKeysOMa()
{
  return &_s14descr24F9ABB61O7XPCKeysON;
}

uint64_t getEnumTagSinglePayload for NXKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_22DEF9868 + 4 * byte_22DF0180C[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_22DEF989C + 4 * byte_22DF01807[v4]))();
}

uint64_t sub_22DEF989C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF98A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEF98ACLL);
  return result;
}

uint64_t sub_22DEF98B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEF98C0);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_22DEF98C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF98CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXKey()
{
  return &type metadata for NXKey;
}

uint64_t storeEnumTagSinglePayload for NXPrefKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DEF9934 + 4 * byte_22DF01816[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DEF9968 + 4 * byte_22DF01811[v4]))();
}

uint64_t sub_22DEF9968(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF9970(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEF9978);
  return result;
}

uint64_t sub_22DEF9984(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEF998CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DEF9990(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF9998(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXPrefKey()
{
  return &type metadata for NXPrefKey;
}

uint64_t getEnumTagSinglePayload for NXRequestType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NXRequestType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_22DEF9A90 + 4 * byte_22DF01820[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_22DEF9AC4 + 4 * byte_22DF0181B[v4]))();
}

uint64_t sub_22DEF9AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF9ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DEF9AD4);
  return result;
}

uint64_t sub_22DEF9AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DEF9AE8);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_22DEF9AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DEF9AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NXRequestType()
{
  return &type metadata for NXRequestType;
}

uint64_t dispatch thunk of NXXPCCodable.init(xpcObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of NXXPCCodable.xpcObjectRepresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for NXDiagnosticShowRequestMessage()
{
  return &type metadata for NXDiagnosticShowRequestMessage;
}

ValueMetadata *type metadata accessor for NXDiagnosticShowResponseMessage()
{
  return &type metadata for NXDiagnosticShowResponseMessage;
}

_QWORD *initializeBufferWithCopyOfBuffer for NXDiagnosticShowRequestHandler(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for NXDiagnosticShowRequestHandler()
{
  return swift_release();
}

_QWORD *assignWithCopy for NXDiagnosticShowRequestHandler(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for NXDiagnosticShowRequestHandler(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NXDiagnosticShowRequestHandler(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NXDiagnosticShowRequestHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXDiagnosticShowRequestHandler()
{
  return &type metadata for NXDiagnosticShowRequestHandler;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for NXOperationDataHandlerRegistration()
{
  return &type metadata for NXOperationDataHandlerRegistration;
}

uint64_t sub_22DEF9CCC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for NXOrderedDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOrderedDictionary);
}

uint64_t method lookup function for NXOrderedDictionary()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXOrderedDictionary.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of NXOrderedDictionary.append(key:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of NXOrderedDictionary.remove(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of NXOrderedDictionary.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of NXOrderedDictionary.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of NXOrderedDictionary.subscript.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of NXOrderedDictionary.subscript.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of NXOrderedDictionary.makeIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t sub_22DEF9D90()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_22DEF9E2C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for NXOrderedDictionary.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOrderedDictionary.Iterator);
}

uint64_t sub_22DEF9E48()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for NXOrderedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOrderedSet);
}

uint64_t method lookup function for NXOrderedSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NXOrderedSet.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of NXOrderedSet.append(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of NXOrderedSet.remove(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of NXOrderedSet.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of NXOrderedSet.makeIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_22DEF9EE8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_22DEF9F64(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_22DEF9F90()
{
  return swift_release();
}

_QWORD *sub_22DEF9F98(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_22DEF9FD0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for NXOrderedSet.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NXOrderedSet.Iterator);
}

uint64_t _s5Nexus34NXOperationDataHandlerRegistrationVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t _s5Nexus34NXOperationDataHandlerRegistrationVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *_s5Nexus34NXOperationDataHandlerRegistrationVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s5Nexus34NXOperationDataHandlerRegistrationVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t _s5Nexus34NXOperationDataHandlerRegistrationVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_22DEFA1C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NXRequestDataHandlerRegistration()
{
  return &type metadata for NXRequestDataHandlerRegistration;
}

uint64_t storeEnumTagSinglePayload for NXDiagnosticShowResponseMessage.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22DEFA264 + 4 * byte_22DF01825[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22DEFA284 + 4 * byte_22DF0182A[v4]))();
}

_BYTE *sub_22DEFA264(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22DEFA284(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEFA28C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEFA294(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22DEFA29C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22DEFA2A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NXDiagnosticShowResponseMessage.CodingKeys()
{
  return &type metadata for NXDiagnosticShowResponseMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for NXDiagnosticShowRequestMessage.CodingKeys()
{
  return &type metadata for NXDiagnosticShowRequestMessage.CodingKeys;
}

unint64_t sub_22DEFA2D4()
{
  unint64_t result;

  result = qword_255DD44A0[0];
  if (!qword_255DD44A0[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF0214C, &type metadata for NXDiagnosticShowResponseMessage.CodingKeys);
    atomic_store(result, qword_255DD44A0);
  }
  return result;
}

unint64_t sub_22DEFA31C()
{
  unint64_t result;

  result = qword_255DD45B0;
  if (!qword_255DD45B0)
  {
    result = MEMORY[0x22E321D70](&unk_22DF020BC, &type metadata for NXDiagnosticShowResponseMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD45B0);
  }
  return result;
}

unint64_t sub_22DEFA364()
{
  unint64_t result;

  result = qword_255DD45B8[0];
  if (!qword_255DD45B8[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF020E4, &type metadata for NXDiagnosticShowResponseMessage.CodingKeys);
    atomic_store(result, qword_255DD45B8);
  }
  return result;
}

unint64_t sub_22DEFA3AC()
{
  unint64_t result;

  result = qword_255DD4640;
  if (!qword_255DD4640)
  {
    result = MEMORY[0x22E321D70](&unk_22DF0206C, &type metadata for NXDiagnosticShowRequestMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DD4640);
  }
  return result;
}

unint64_t sub_22DEFA3F4()
{
  unint64_t result;

  result = qword_255DD4648[0];
  if (!qword_255DD4648[0])
  {
    result = MEMORY[0x22E321D70](&unk_22DF02094, &type metadata for NXDiagnosticShowRequestMessage.CodingKeys);
    atomic_store(result, qword_255DD4648);
  }
  return result;
}

uint64_t sub_22DEFA438()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DEFA488()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_22DEFA494()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_22DEFA4A0()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_22DEFA4AC()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_22DEFA4B8()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_22DEFA4C4()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_22DEFA4D0()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_22DEFA4DC()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_22DEFA4E8()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_22DEFA4F4()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_22DEFA500()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_22DEFA50C()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_22DEFA518()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_22DEFA524()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_22DEFA530()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_22DEFA53C()
{
  return MEMORY[0x24BE29C38]();
}

uint64_t sub_22DEFA548()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_22DEFA554()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_22DEFA560()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_22DEFA56C()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_22DEFA578()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_22DEFA584()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_22DEFA590()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_22DEFA59C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_22DEFA5A8()
{
  return MEMORY[0x24BE29C68]();
}

uint64_t sub_22DEFA5B4()
{
  return MEMORY[0x24BE29C80]();
}

uint64_t sub_22DEFA5C0()
{
  return MEMORY[0x24BE29CC8]();
}

uint64_t sub_22DEFA5CC()
{
  return MEMORY[0x24BE29CD0]();
}

uint64_t sub_22DEFA5D8()
{
  return MEMORY[0x24BE29CF8]();
}

uint64_t sub_22DEFA5E4()
{
  return MEMORY[0x24BE29D40]();
}

uint64_t sub_22DEFA5F0()
{
  return MEMORY[0x24BE29D68]();
}

uint64_t sub_22DEFA5FC()
{
  return MEMORY[0x24BE29D90]();
}

uint64_t sub_22DEFA608()
{
  return MEMORY[0x24BE29DA8]();
}

uint64_t sub_22DEFA614()
{
  return MEMORY[0x24BE29DB8]();
}

uint64_t sub_22DEFA620()
{
  return MEMORY[0x24BE29DC0]();
}

uint64_t sub_22DEFA62C()
{
  return MEMORY[0x24BE29DD0]();
}

uint64_t sub_22DEFA638()
{
  return MEMORY[0x24BE29DE8]();
}

uint64_t sub_22DEFA644()
{
  return MEMORY[0x24BE29E00]();
}

uint64_t sub_22DEFA650()
{
  return MEMORY[0x24BE29E10]();
}

uint64_t sub_22DEFA65C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_22DEFA668()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_22DEFA674()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_22DEFA680()
{
  return MEMORY[0x24BEE6478]();
}

uint64_t sub_22DEFA68C()
{
  return MEMORY[0x24BEE6490]();
}

uint64_t sub_22DEFA698()
{
  return MEMORY[0x24BEE6498]();
}

uint64_t sub_22DEFA6A4()
{
  return MEMORY[0x24BEE64B8]();
}

uint64_t sub_22DEFA6B0()
{
  return MEMORY[0x24BEE64C8]();
}

uint64_t sub_22DEFA6BC()
{
  return MEMORY[0x24BEE64D8]();
}

uint64_t sub_22DEFA6C8()
{
  return MEMORY[0x24BDB9BF0]();
}

uint64_t sub_22DEFA6D4()
{
  return MEMORY[0x24BDB9C08]();
}

uint64_t sub_22DEFA6E0()
{
  return MEMORY[0x24BE29E28]();
}

uint64_t sub_22DEFA6EC()
{
  return MEMORY[0x24BDDFEB0]();
}

uint64_t sub_22DEFA6F8()
{
  return MEMORY[0x24BDDFEF8]();
}

uint64_t sub_22DEFA704()
{
  return MEMORY[0x24BDDFF00]();
}

uint64_t sub_22DEFA710()
{
  return MEMORY[0x24BDDFF08]();
}

uint64_t sub_22DEFA71C()
{
  return MEMORY[0x24BDDFF18]();
}

uint64_t sub_22DEFA728()
{
  return MEMORY[0x24BDDFF20]();
}

uint64_t sub_22DEFA734()
{
  return MEMORY[0x24BDDFF68]();
}

uint64_t sub_22DEFA740()
{
  return MEMORY[0x24BDDFF90]();
}

uint64_t sub_22DEFA74C()
{
  return MEMORY[0x24BDDFF98]();
}

uint64_t sub_22DEFA758()
{
  return MEMORY[0x24BDDFFA8]();
}

uint64_t sub_22DEFA764()
{
  return MEMORY[0x24BDDFFD8]();
}

uint64_t sub_22DEFA770()
{
  return MEMORY[0x24BDDFFE8]();
}

uint64_t sub_22DEFA77C()
{
  return MEMORY[0x24BDDFFF0]();
}

uint64_t sub_22DEFA788()
{
  return MEMORY[0x24BDDFFF8]();
}

uint64_t sub_22DEFA794()
{
  return MEMORY[0x24BDE0008]();
}

uint64_t sub_22DEFA7A0()
{
  return MEMORY[0x24BDE0010]();
}

uint64_t sub_22DEFA7AC()
{
  return MEMORY[0x24BDE0028]();
}

uint64_t sub_22DEFA7B8()
{
  return MEMORY[0x24BDE0030]();
}

uint64_t sub_22DEFA7C4()
{
  return MEMORY[0x24BDE0100]();
}

uint64_t sub_22DEFA7D0()
{
  return MEMORY[0x24BDE0110]();
}

uint64_t sub_22DEFA7DC()
{
  return MEMORY[0x24BDE0160]();
}

uint64_t sub_22DEFA7E8()
{
  return MEMORY[0x24BDE0190]();
}

uint64_t sub_22DEFA7F4()
{
  return MEMORY[0x24BDE01B8]();
}

uint64_t sub_22DEFA800()
{
  return MEMORY[0x24BDE01D0]();
}

uint64_t sub_22DEFA80C()
{
  return MEMORY[0x24BDE01F0]();
}

uint64_t sub_22DEFA818()
{
  return MEMORY[0x24BDE02E0]();
}

uint64_t sub_22DEFA824()
{
  return MEMORY[0x24BDE02E8]();
}

uint64_t sub_22DEFA830()
{
  return MEMORY[0x24BDE0328]();
}

uint64_t sub_22DEFA83C()
{
  return MEMORY[0x24BDE0340]();
}

uint64_t sub_22DEFA848()
{
  return MEMORY[0x24BDE0348]();
}

uint64_t sub_22DEFA854()
{
  return MEMORY[0x24BDE0350]();
}

uint64_t sub_22DEFA860()
{
  return MEMORY[0x24BDE0358]();
}

uint64_t sub_22DEFA86C()
{
  return MEMORY[0x24BDE0360]();
}

uint64_t sub_22DEFA878()
{
  return MEMORY[0x24BDE0378]();
}

uint64_t sub_22DEFA884()
{
  return MEMORY[0x24BDE03E0]();
}

uint64_t sub_22DEFA890()
{
  return MEMORY[0x24BDE03F0]();
}

uint64_t sub_22DEFA89C()
{
  return MEMORY[0x24BDE0458]();
}

uint64_t sub_22DEFA8A8()
{
  return MEMORY[0x24BDE0470]();
}

uint64_t sub_22DEFA8B4()
{
  return MEMORY[0x24BDE0478]();
}

uint64_t sub_22DEFA8C0()
{
  return MEMORY[0x24BDE0488]();
}

uint64_t sub_22DEFA8CC()
{
  return MEMORY[0x24BDE0498]();
}

uint64_t sub_22DEFA8D8()
{
  return MEMORY[0x24BDE04A0]();
}

uint64_t sub_22DEFA8E4()
{
  return MEMORY[0x24BDE04A8]();
}

uint64_t sub_22DEFA8F0()
{
  return MEMORY[0x24BDE05F8]();
}

uint64_t sub_22DEFA8FC()
{
  return MEMORY[0x24BDE0660]();
}

uint64_t sub_22DEFA908()
{
  return MEMORY[0x24BDE0688]();
}

uint64_t sub_22DEFA914()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_22DEFA920()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_22DEFA92C()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_22DEFA938()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_22DEFA944()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_22DEFA950()
{
  return MEMORY[0x24BEE01A8]();
}

uint64_t sub_22DEFA95C()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_22DEFA968()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_22DEFA974()
{
  return MEMORY[0x24BEE0278]();
}

uint64_t sub_22DEFA980()
{
  return MEMORY[0x24BEE0458]();
}

uint64_t sub_22DEFA98C()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_22DEFA998()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_22DEFA9A4()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_22DEFA9B0()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_22DEFA9BC()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_22DEFA9C8()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_22DEFA9D4()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_22DEFA9E0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_22DEFA9EC()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_22DEFA9F8()
{
  return MEMORY[0x24BE29E38]();
}

uint64_t sub_22DEFAA04()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_22DEFAA10()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_22DEFAA1C()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_22DEFAA28()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_22DEFAA34()
{
  return MEMORY[0x24BE29E40]();
}

uint64_t sub_22DEFAA40()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_22DEFAA4C()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_22DEFAA58()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_22DEFAA64()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_22DEFAA70()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_22DEFAA7C()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_22DEFAA88()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_22DEFAA94()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_22DEFAAA0()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_22DEFAAAC()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_22DEFAAB8()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_22DEFAAC4()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_22DEFAAD0()
{
  return MEMORY[0x24BEE69A8]();
}

uint64_t sub_22DEFAADC()
{
  return MEMORY[0x24BEE69E8]();
}

uint64_t sub_22DEFAAE8()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_22DEFAAF4()
{
  return MEMORY[0x24BEE6A18]();
}

uint64_t sub_22DEFAB00()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_22DEFAB0C()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_22DEFAB18()
{
  return MEMORY[0x24BEE6A40]();
}

uint64_t sub_22DEFAB24()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_22DEFAB30()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_22DEFAB3C()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_22DEFAB48()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_22DEFAB54()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_22DEFAB60()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_22DEFAB6C()
{
  return MEMORY[0x24BDCFDF8]();
}

uint64_t sub_22DEFAB78()
{
  return MEMORY[0x24BE29E48]();
}

uint64_t sub_22DEFAB84()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_22DEFAB90()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_22DEFAB9C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_22DEFABA8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_22DEFABB4()
{
  return MEMORY[0x24BE29E50]();
}

uint64_t sub_22DEFABC0()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_22DEFABCC()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_22DEFABD8()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_22DEFABE4()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_22DEFABF0()
{
  return MEMORY[0x24BE29E80]();
}

uint64_t sub_22DEFABFC()
{
  return MEMORY[0x24BEE59A0]();
}

uint64_t sub_22DEFAC08()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_22DEFAC14()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_22DEFAC20()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_22DEFAC2C()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_22DEFAC38()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_22DEFAC44()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_22DEFAC50()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_22DEFAC5C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_22DEFAC68()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_22DEFAC74()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_22DEFAC80()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_22DEFAC8C()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_22DEFAC98()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_22DEFACA4()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_22DEFACB0()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_22DEFACBC()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_22DEFACC8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_22DEFACD4()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_22DEFACE0()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_22DEFACEC()
{
  return MEMORY[0x24BE29E88]();
}

uint64_t sub_22DEFACF8()
{
  return MEMORY[0x24BE29E90]();
}

uint64_t sub_22DEFAD04()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_22DEFAD10()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_22DEFAD1C()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_22DEFAD28()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_22DEFAD34()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_22DEFAD40()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_22DEFAD4C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_22DEFAD58()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_22DEFAD64()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_22DEFAD70()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_22DEFAD7C()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_22DEFAD88()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_22DEFAD94()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_22DEFADA0()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_22DEFADAC()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_22DEFADB8()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_22DEFADC4()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_22DEFADD0()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_22DEFADDC()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_22DEFADE8()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_22DEFADF4()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_22DEFAE00()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_22DEFAE0C()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_22DEFAE18()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_22DEFAE24()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_22DEFAE30()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_22DEFAE3C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_22DEFAE48()
{
  return MEMORY[0x24BE29EA8]();
}

uint64_t sub_22DEFAE54()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_22DEFAE60()
{
  return MEMORY[0x24BEE3D38]();
}

uint64_t sub_22DEFAE6C()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_22DEFAE78()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_22DEFAE84()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_22DEFAE90()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_22DEFAE9C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_22DEFAEA8()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_22DEFAEB4()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_22DEFAEC0()
{
  return MEMORY[0x24BE29EC8]();
}

uint64_t sub_22DEFAECC()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_22DEFAED8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_22DEFAEE4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_22DEFAEF0()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_22DEFAEFC()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_22DEFAF08()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_22DEFAF14()
{
  return MEMORY[0x24BE29ED8]();
}

uint64_t sub_22DEFAF20()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_22DEFAF2C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_22DEFAF38()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_22DEFAF44()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_22DEFAF50()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t CUNextID64()
{
  return MEMORY[0x24BE29178]();
}

uint64_t CUPrintErrorCode()
{
  return MEMORY[0x24BE291A0]();
}

uint64_t CUPrintNSError()
{
  return MEMORY[0x24BE291D8]();
}

uint64_t CUXPCDecodeNSErrorIfNeeded()
{
  return MEMORY[0x24BE29250]();
}

uint64_t CUXPCEncodeNSError()
{
  return MEMORY[0x24BE29298]();
}

uint64_t CUXPCObjectGetUUID()
{
  return MEMORY[0x24BE292B0]();
}

uint64_t CUXPCObjectSetUUID()
{
  return MEMORY[0x24BE292B8]();
}

uint64_t OPACKDecodeData()
{
  return MEMORY[0x24BE29870]();
}

uint64_t OPACKEncoderCreateData()
{
  return MEMORY[0x24BE29880]();
}

uint64_t UpTicksToMilliseconds()
{
  return MEMORY[0x24BE29AF0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x24BDAEB30]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x24BEE7250]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x24BEE4FB8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x24BEE4FC0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x24BEE4FE0]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x24BEE4FE8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x24BDB0638](xarray, applier);
}

xpc_object_t xpc_array_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x24BDB0648]();
}

void xpc_array_set_string(xpc_object_t xarray, size_t index, const char *string)
{
  MEMORY[0x24BDB06C0](xarray, index, string);
}

void xpc_connection_activate(xpc_connection_t connection)
{
  MEMORY[0x24BDB0710](connection);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x24BDB0718](connection);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x24BDB0738](endpoint);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x24BDB0740](name, targetq, flags);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x24BDB07A8](connection, message);
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
  MEMORY[0x24BDB07B0](connection, message, replyq, handler);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x24BDB07C8](connection, handler);
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
  MEMORY[0x24BDB07E8](connection, targetq);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x24BDB08D0]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x24BDB08D8](original);
}

uint64_t xpc_dictionary_expects_reply()
{
  return MEMORY[0x24BDB08E8]();
}

xpc_object_t xpc_dictionary_get_array(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x24BDB08F8](xdict, key);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return (const void *)MEMORY[0x24BDB0918](xdict, key, length);
}

xpc_object_t xpc_dictionary_get_dictionary(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x24BDB0928](xdict, key);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  double result;

  MEMORY[0x24BDB0930](xdict, key);
  return result;
}

xpc_connection_t xpc_dictionary_get_remote_connection(xpc_object_t xdict)
{
  return (xpc_connection_t)MEMORY[0x24BDB0948](xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x24BDB0950](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x24BDB0968](xdict, key);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x24BDB09C8](xdict, key, string);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x24BDB09D0](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x24BDB09E0](xdict, key, value);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x24BDB0A88](xint);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x24BDB0B58](stream, targetq, handler);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x24BDB0BA8](xstring);
}

