uint64_t sub_1B15B6638(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    sub_1B16B9740();
  return swift_retain();
}

uint64_t destroy for JSONSchemaView(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  int v17;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = (int *)type metadata accessor for JSONSchema(0);
  v5 = a1 + v4[6];
  v6 = sub_1B16B87C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = sub_1B16B7BE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v4[8];
  v10 = sub_1B16B7AE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v11 = a1 + a2[11];
  sub_1B13D6584(0, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  LODWORD(v7) = swift_getEnumCaseMultiPayload();
  swift_release();
  if ((_DWORD)v7 == 1)
  {
    swift_release();
    sub_1B15B4A64(0);
    v13 = v11 + *(int *)(v12 + 32);
    v14 = sub_1B16B9074();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  swift_release();
  result = swift_release();
  v16 = a1 + a2[13];
  v17 = *(unsigned __int8 *)(v16 + 24);
  if (v17 != 255)
    result = sub_1B15B6064(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), v17 & 1);
  if (*(_QWORD *)(a1 + a2[14]))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for JSONSchemaView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v64;
  char *v65;
  _QWORD *v66;
  char *v67;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  v10 = (int *)type metadata accessor for JSONSchema(0);
  v11 = v10[6];
  v64 = (char *)a2 + v11;
  v65 = (char *)a1 + v11;
  v12 = sub_1B16B87C8();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  swift_retain();
  v13(v65, v64, v12);
  v14 = a3;
  v15 = v10[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1B16B7BE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = v10[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1B16B7AE4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *v24 = *v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  v26 = a3[7];
  v27 = a3[8];
  v28 = (char *)a1 + v26;
  v29 = (char *)a2 + v26;
  *v28 = *v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  v30 = (char *)a1 + v27;
  v31 = (char *)a2 + v27;
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  v32 = a3[9];
  v33 = a3[10];
  v34 = (char *)a1 + v32;
  v35 = (char *)a2 + v32;
  *v34 = *v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  v36 = (_QWORD *)((char *)a1 + v33);
  v37 = (_QWORD *)((char *)a2 + v33);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v36[2] = v37[2];
  v39 = a3[11];
  v66 = (_QWORD *)((char *)a1 + v39);
  v40 = (_QWORD *)((char *)a2 + v39);
  sub_1B13D6584(0, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B16B9740();
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v66 = *v40;
  if (EnumCaseMultiPayload == 1)
  {
    v66[1] = v40[1];
    sub_1B15B4A64(0);
    v43 = *(int *)(v42 + 32);
    v67 = (char *)v66 + v43;
    v44 = (char *)v40 + v43;
    v45 = sub_1B16B9074();
    v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
    swift_retain();
    swift_retain();
    v46(v67, v44, v45);
    v14 = a3;
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v47 = v14[12];
  v48 = v14[13];
  v49 = (_QWORD *)((char *)a1 + v47);
  v50 = (_QWORD *)((char *)a2 + v47);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = (char *)a1 + v48;
  v53 = (char *)a2 + v48;
  v54 = *((unsigned __int8 *)a2 + v48 + 24);
  swift_retain();
  swift_retain();
  if (v54 == 255)
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_OWORD *)(v52 + 9) = *(_OWORD *)(v53 + 9);
  }
  else
  {
    v55 = v54 & 1;
    v56 = *(_QWORD *)v53;
    v57 = *((_QWORD *)v53 + 1);
    v58 = *((_QWORD *)v53 + 2);
    sub_1B15B6638(v56, v57, v58, v55);
    *(_QWORD *)v52 = v56;
    *((_QWORD *)v52 + 1) = v57;
    *((_QWORD *)v52 + 2) = v58;
    v52[24] = v55;
  }
  v59 = v14[14];
  v60 = (_QWORD *)((char *)a1 + v59);
  v61 = (_QWORD *)((char *)a2 + v59);
  if (*v61)
  {
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
  }
  return a1;
}

_QWORD *assignWithCopy for JSONSchemaView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  int v51;
  __int128 v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v74;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  v6 = (int *)type metadata accessor for JSONSchema(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B16B87C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1B16B7BE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1B16B7AE4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_retain();
  swift_release();
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *v23 = *v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_retain();
  swift_release();
  v25 = a3[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *v26 = *v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_retain();
  swift_release();
  v28 = a3[9];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *v29 = *v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_retain();
  swift_release();
  v31 = a3[10];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (char *)a2 + v31;
  *v32 = *(_QWORD *)((char *)a2 + v31);
  v32[1] = *(_QWORD *)((char *)a2 + v31 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v32[2] = *((_QWORD *)v33 + 2);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v34 = a3[11];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0];
    sub_1B15B8F64((uint64_t)a1 + v34, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
    sub_1B13D6584(0, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, v37);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v35 = *v36;
    if (EnumCaseMultiPayload == 1)
    {
      v35[1] = v36[1];
      sub_1B15B4A64(0);
      v40 = *(int *)(v39 + 32);
      v41 = (char *)v35 + v40;
      v74 = (char *)v36 + v40;
      v42 = sub_1B16B9074();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      swift_retain();
      swift_retain();
      v43(v41, v74, v42);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v44 = a3[12];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  *(_QWORD *)((char *)a1 + v44) = *(_QWORD *)((char *)a2 + v44);
  swift_retain();
  swift_release();
  *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
  swift_retain();
  swift_release();
  v47 = a3[13];
  v48 = (uint64_t)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = *((unsigned __int8 *)a1 + v47 + 24);
  v51 = *((unsigned __int8 *)a2 + v47 + 24);
  if (v50 == 255)
  {
    if (v51 == 255)
    {
      v53 = *(_OWORD *)v49;
      *(_OWORD *)(v48 + 9) = *(_OWORD *)(v49 + 9);
      *(_OWORD *)v48 = v53;
    }
    else
    {
      v62 = v51 & 1;
      v63 = *(_QWORD *)v49;
      v64 = *((_QWORD *)v49 + 1);
      v65 = *((_QWORD *)v49 + 2);
      sub_1B15B6638(v63, v64, v65, v51 & 1);
      *(_QWORD *)v48 = v63;
      *(_QWORD *)(v48 + 8) = v64;
      *(_QWORD *)(v48 + 16) = v65;
      *(_BYTE *)(v48 + 24) = v62;
    }
  }
  else if (v51 == 255)
  {
    sub_1B15B70E8(v48);
    v52 = *(_OWORD *)(v49 + 9);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 9) = v52;
  }
  else
  {
    v54 = v51 & 1;
    v55 = *(_QWORD *)v49;
    v56 = *((_QWORD *)v49 + 1);
    v57 = *((_QWORD *)v49 + 2);
    sub_1B15B6638(v55, v56, v57, v51 & 1);
    v58 = *(_QWORD *)v48;
    v59 = *(_QWORD *)(v48 + 8);
    v60 = *(_QWORD *)(v48 + 16);
    v61 = *(_BYTE *)(v48 + 24);
    *(_QWORD *)v48 = v55;
    *(_QWORD *)(v48 + 8) = v56;
    *(_QWORD *)(v48 + 16) = v57;
    *(_BYTE *)(v48 + 24) = v54;
    sub_1B15B6064(v58, v59, v60, v61);
  }
  v66 = a3[14];
  v67 = (_QWORD *)((char *)a1 + v66);
  v68 = (_QWORD *)((char *)a2 + v66);
  v69 = *(_QWORD *)((char *)a1 + v66);
  v70 = *v68;
  if (!v69)
  {
    if (v70)
    {
      v72 = v68[1];
      *v67 = v70;
      v67[1] = v72;
      swift_retain();
      return a1;
    }
LABEL_19:
    *(_OWORD *)v67 = *(_OWORD *)v68;
    return a1;
  }
  if (!v70)
  {
    swift_release();
    goto LABEL_19;
  }
  v71 = v68[1];
  *v67 = v70;
  v67[1] = v71;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1B15B70E8(uint64_t a1)
{
  sub_1B15B7B94(a1);
  return a1;
}

_QWORD *initializeWithTake for JSONSchemaView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  memcpy(a1, a2, 0x50uLL);
  a1[10] = a2[10];
  v6 = (int *)type metadata accessor for JSONSchema(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B16B87C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1B16B7BE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v6[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1B16B7AE4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v20 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  v21 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  v24 = a3[11];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  sub_1B13D6584(0, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  v28 = v27;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = v26[1];
    *v25 = *v26;
    v25[1] = v29;
    sub_1B15B4A64(0);
    v31 = *(int *)(v30 + 32);
    v32 = (char *)v25 + v31;
    v33 = (char *)v26 + v31;
    v34 = sub_1B16B9074();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  v35 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  v36 = (_OWORD *)((char *)a1 + v35);
  v37 = (_OWORD *)((char *)a2 + v35);
  *v36 = *v37;
  *(_OWORD *)((char *)v36 + 9) = *(_OWORD *)((char *)v37 + 9);
  v38 = a3[14];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = *v40;
  if (*v40)
  {
    v42 = v40[1];
    *v39 = v41;
    v39[1] = v42;
  }
  else
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
  }
  return a1;
}

_QWORD *assignWithTake for JSONSchemaView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_release();
  v11 = (int *)type metadata accessor for JSONSchema(0);
  v12 = v11[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1B16B87C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1B16B7BE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = v11[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_1B16B7AE4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *v25 = *v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_release();
  v27 = a3[7];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  *v28 = *v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_release();
  v30 = a3[8];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *v31 = *v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_release();
  v33 = a3[9];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *v34 = *v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_release();
  v36 = a3[10];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)((char *)a2 + v36 + 8);
  *v37 = *(_QWORD *)((char *)a2 + v36);
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v37[2] = *((_QWORD *)v38 + 2);
  swift_release();
  if (a1 != a2)
  {
    v40 = a3[11];
    v41 = (_QWORD *)((char *)a1 + v40);
    v42 = (_QWORD *)((char *)a2 + v40);
    v43 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0];
    sub_1B15B8F64((uint64_t)a1 + v40, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
    sub_1B13D6584(0, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, v43);
    v45 = v44;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v46 = v42[1];
      *v41 = *v42;
      v41[1] = v46;
      sub_1B15B4A64(0);
      v48 = *(int *)(v47 + 32);
      v49 = (char *)v41 + v48;
      v50 = (char *)v42 + v48;
      v51 = sub_1B16B9074();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
  }
  v52 = a3[12];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  *(_QWORD *)((char *)a1 + v52) = *(_QWORD *)((char *)a2 + v52);
  swift_release();
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  swift_release();
  v55 = a3[13];
  v56 = (uint64_t)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = *((unsigned __int8 *)a1 + v55 + 24);
  if (v58 == 255)
    goto LABEL_8;
  v59 = v57[24];
  if (v59 == 255)
  {
    sub_1B15B70E8(v56);
LABEL_8:
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *(_OWORD *)(v56 + 9) = *(_OWORD *)(v57 + 9);
    goto LABEL_10;
  }
  v60 = v58 & 1;
  v61 = *((_QWORD *)v57 + 2);
  v62 = *(_QWORD *)v56;
  v63 = *(_QWORD *)(v56 + 8);
  v64 = *(_QWORD *)(v56 + 16);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_QWORD *)(v56 + 16) = v61;
  *(_BYTE *)(v56 + 24) = v59 & 1;
  sub_1B15B6064(v62, v63, v64, v60);
LABEL_10:
  v65 = a3[14];
  v66 = (_QWORD *)((char *)a1 + v65);
  v67 = (_QWORD *)((char *)a2 + v65);
  v68 = *(_QWORD *)((char *)a1 + v65);
  v69 = *v67;
  if (!v68)
  {
    if (v69)
    {
      v71 = v67[1];
      *v66 = v69;
      v66[1] = v71;
      return a1;
    }
LABEL_16:
    *(_OWORD *)v66 = *(_OWORD *)v67;
    return a1;
  }
  if (!v69)
  {
    swift_release();
    goto LABEL_16;
  }
  v70 = v67[1];
  *v66 = v69;
  v66[1] = v70;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONSchemaView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B15B76F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v6 = OUTLINED_FUNCTION_25_33();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_41_1(v6, &qword_1EEF34758, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87E8]);
    v7 = v11;
    v8 = a1 + *(int *)(a3 + 44);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONSchemaView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B15B77AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = OUTLINED_FUNCTION_25_33();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = (a2 - 1);
      return result;
    }
    OUTLINED_FUNCTION_41_1(result, &qword_1EEF34758, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87E8]);
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 44);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void sub_1B15B7858()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for JSONSchema(319);
  if (v0 <= 0x3F)
  {
    sub_1B13D6584(319, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for JSONSchemaView.JSONSaveMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15B7970 + 4 * byte_1B16D527D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15B79A4 + 4 * byte_1B16D5278[v4]))();
}

uint64_t sub_1B15B79A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15B79AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15B79B4);
  return result;
}

uint64_t sub_1B15B79C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15B79C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15B79CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15B79D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for JSONSchemaView.JSONSaveMode()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B15B79EC()
{
  sub_1B15B5CE4(255);
  sub_1B13D6584(255, &qword_1EEF34730, (uint64_t (*)(uint64_t))sub_1B15B610C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
  sub_1B15B5B34(255);
  sub_1B15B5E78(255);
  sub_1B15B5278(255);
  sub_1B15B5C64();
  sub_1B15B4AC0();
  sub_1B15B5EA8(255, &qword_1EEF34600, (void (*)(uint64_t))sub_1B15B5340);
  sub_1B13B13B4(&qword_1EEF346C0, (uint64_t (*)(uint64_t))sub_1B15B4AC0, MEMORY[0x1E0CDD950]);
  sub_1B15B5ADC();
  OUTLINED_FUNCTION_23_33();
  sub_1B13B13B4(&qword_1EEF346E0, (uint64_t (*)(uint64_t))sub_1B15B5C64, MEMORY[0x1E0CD8558]);
  OUTLINED_FUNCTION_23_33();
  sub_1B15B5F40(&qword_1EEF34710, sub_1B15B5E78, (uint64_t)sub_1B15B5FA0, MEMORY[0x1E0CE0798]);
  OUTLINED_FUNCTION_23_33();
  sub_1B15B61E4();
  return OUTLINED_FUNCTION_23_33();
}

uint64_t sub_1B15B7B94(uint64_t a1)
{
  return sub_1B15B6064(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1B15B7BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B15B6638(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_1B15B7C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B15B6638(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1B15B6064(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1B15B7C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1B15B6064(v5, v7, v6, v8);
  return a1;
}

void type metadata accessor for JSONSchemaView.SaveConfiguration()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B15B7CC8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B15B7D00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B15B7D64(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_1B15B7E00(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_1B15B7E64(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B15B7EA4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for JSONSchemaView.ShowJSONButtonsView()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B15B7EFC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B15B7F0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34818)
  {
    sub_1B15B585C(255, &qword_1EEF34688, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
    v0 = sub_1B16B9560();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34818);
  }
}

uint64_t sub_1B15B7F8C()
{
  uint64_t v0;

  return sub_1B15B48BC(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1B15B7FCC()
{
  uint64_t v0;

  return sub_1B15B48BC(*(uint64_t **)(v0 + 16));
}

void sub_1B15B800C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF34820)
  {
    sub_1B15B7F0C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF34820);
  }
}

uint64_t sub_1B15B8070()
{
  return sub_1B15B4998();
}

uint64_t sub_1B15B8078(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t objectdestroy_13Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15B80E0()
{
  return sub_1B15B4854();
}

uint64_t sub_1B15B80E8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_7_68();
  sub_1B15B6064(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  OUTLINED_FUNCTION_29_26();
  OUTLINED_FUNCTION_49_16();
  OUTLINED_FUNCTION_47_21();
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_45_16();
  OUTLINED_FUNCTION_20_27();
  OUTLINED_FUNCTION_25_33();
  v2 = OUTLINED_FUNCTION_10_54();
  OUTLINED_FUNCTION_99(v2);
  v3 = OUTLINED_FUNCTION_18_38();
  OUTLINED_FUNCTION_99(v3);
  v4 = OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_2_99(v4);
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_16_44();
  OUTLINED_FUNCTION_42_20();
  OUTLINED_FUNCTION_55_15();
  OUTLINED_FUNCTION_41_1(v5, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  OUTLINED_FUNCTION_24_27();
  OUTLINED_FUNCTION_26_29();
  if (v1 == 1)
  {
    OUTLINED_FUNCTION_22_30();
    v6 = OUTLINED_FUNCTION_8_63();
    OUTLINED_FUNCTION_2_99(v6);
  }
  OUTLINED_FUNCTION_9_61();
  OUTLINED_FUNCTION_22_30();
  OUTLINED_FUNCTION_19_41();
  if (!v8)
    OUTLINED_FUNCTION_15_35(v7);
  OUTLINED_FUNCTION_30_28();
  if (v9)
    OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_41_21();
  return OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1B15B81F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_68();
  return sub_1B15B4544(*(void (**)())(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

void sub_1B15B8228(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_127_0(a1, a2, a3);
  OUTLINED_FUNCTION_1_12(v3);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15B8254()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_7_68();
  OUTLINED_FUNCTION_44_1(v0);
  return sub_1B15B44CC();
}

void sub_1B15B8270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1B15B5EA8(255, &qword_1EEF34700, (void (*)(uint64_t))type metadata accessor for JSONSchemaView);
    v7 = a3(a1, v6, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_31();
}

void sub_1B15B82DC()
{
  uint64_t *v0;

  sub_1B15B3AF4(v0[2], v0[3], v0[4]);
}

void sub_1B15B82E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_127_0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15B831C()
{
  uint64_t v0;

  sub_1B15B37D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1B15B8328(uint64_t a1)
{
  OUTLINED_FUNCTION_7_68();
  OUTLINED_FUNCTION_59_11();
  sub_1B15B391C(a1);
}

uint64_t sub_1B15B8358(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_1B15B6638(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_1B15B8370(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_1B15B6064(result, a2, a3, a4 & 1);
  return result;
}

uint64_t objectdestroy_28Tm()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_7_68();
  swift_release();
  OUTLINED_FUNCTION_29_26();
  OUTLINED_FUNCTION_49_16();
  OUTLINED_FUNCTION_47_21();
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_45_16();
  OUTLINED_FUNCTION_20_27();
  OUTLINED_FUNCTION_25_33();
  v1 = OUTLINED_FUNCTION_10_54();
  OUTLINED_FUNCTION_99(v1);
  v2 = OUTLINED_FUNCTION_18_38();
  OUTLINED_FUNCTION_99(v2);
  v3 = OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_2_99(v3);
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_16_44();
  OUTLINED_FUNCTION_42_20();
  OUTLINED_FUNCTION_55_15();
  OUTLINED_FUNCTION_41_1(v4, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  OUTLINED_FUNCTION_24_27();
  OUTLINED_FUNCTION_26_29();
  if (v0 == 1)
  {
    OUTLINED_FUNCTION_22_30();
    v5 = OUTLINED_FUNCTION_8_63();
    OUTLINED_FUNCTION_2_99(v5);
  }
  OUTLINED_FUNCTION_9_61();
  OUTLINED_FUNCTION_22_30();
  OUTLINED_FUNCTION_19_41();
  if (!v7)
    OUTLINED_FUNCTION_15_35(v6);
  OUTLINED_FUNCTION_30_28();
  if (v8)
    OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_41_21();
  return OUTLINED_FUNCTION_1_2();
}

void sub_1B15B8498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_7_68();
  OUTLINED_FUNCTION_59_11();
  sub_1B15B3C50(a1, a2, a3);
}

double sub_1B15B84E8@<D0>(uint64_t a1@<X8>)
{
  return sub_1B15B322C(a1);
}

uint64_t sub_1B15B84F0()
{
  return sub_1B15B248C();
}

uint64_t sub_1B15B84F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B15B2508(*(_QWORD *)(v1 + 16), a1);
}

void sub_1B15B8500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1B15B53B0(255);
    v7 = v6;
    sub_1B15B585C(255, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B15B8580@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B15B2A3C(a1, a2);
}

uint64_t sub_1B15B859C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return sub_1B16B9740();
}

uint64_t sub_1B15B85AC(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if ((a3 & 1) != 0)
    return a4();
  else
    return swift_bridgeObjectRelease();
}

void sub_1B15B85BC(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_1B15B2A80(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1B15B85C8()
{
  return sub_1B15B2E98();
}

uint64_t sub_1B15B85D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B15B2F00(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1B15B85DC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_7_68();
  OUTLINED_FUNCTION_21_32();
  OUTLINED_FUNCTION_49_16();
  OUTLINED_FUNCTION_47_21();
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_45_16();
  OUTLINED_FUNCTION_20_27();
  OUTLINED_FUNCTION_25_33();
  v1 = OUTLINED_FUNCTION_10_54();
  OUTLINED_FUNCTION_99(v1);
  v2 = OUTLINED_FUNCTION_18_38();
  OUTLINED_FUNCTION_99(v2);
  v3 = OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_2_99(v3);
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_16_44();
  OUTLINED_FUNCTION_42_20();
  OUTLINED_FUNCTION_55_15();
  OUTLINED_FUNCTION_41_1(v4, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  OUTLINED_FUNCTION_24_27();
  OUTLINED_FUNCTION_26_29();
  if (v0 == 1)
  {
    OUTLINED_FUNCTION_22_30();
    v5 = OUTLINED_FUNCTION_8_63();
    OUTLINED_FUNCTION_2_99(v5);
  }
  OUTLINED_FUNCTION_9_61();
  OUTLINED_FUNCTION_22_30();
  OUTLINED_FUNCTION_19_41();
  if (!v7)
    OUTLINED_FUNCTION_15_35(v6);
  OUTLINED_FUNCTION_30_28();
  if (v8)
    OUTLINED_FUNCTION_37_1();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_1_2();
}

void sub_1B15B86E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_7_68() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1B15B3030(v0 + v2, *v3, v3[1]);
}

unint64_t sub_1B15B8728()
{
  unint64_t result;

  result = qword_1EEF34850;
  if (!qword_1EEF34850)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D19F0, &type metadata for SchemaViewValue);
    atomic_store(result, (unint64_t *)&qword_1EEF34850);
  }
  return result;
}

unint64_t sub_1B15B8764()
{
  unint64_t result;

  result = qword_1EEF34858;
  if (!qword_1EEF34858)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DADE0, &unk_1E632B528);
    atomic_store(result, (unint64_t *)&qword_1EEF34858);
  }
  return result;
}

unint64_t sub_1B15B87A0()
{
  unint64_t result;

  result = qword_1EEF34860;
  if (!qword_1EEF34860)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DF614, &type metadata for JSObjectValueView);
    atomic_store(result, (unint64_t *)&qword_1EEF34860);
  }
  return result;
}

uint64_t sub_1B15B87DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_retain();
  if ((a9 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    sub_1B16B9740();
  }
  return swift_retain();
}

unint64_t sub_1B15B8848()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF34868;
  if (!qword_1EEF34868)
  {
    sub_1B15B5174();
    v2 = v1;
    v3[0] = sub_1B15B88B0();
    v3[1] = sub_1B15B89B0();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF34868);
  }
  return result;
}

unint64_t sub_1B15B88B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF34870;
  if (!qword_1EEF34870)
  {
    sub_1B15B585C(255, &qword_1EEF345D8, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1E632B6D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1B15B8938();
    v3[1] = sub_1B15B8974();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF34870);
  }
  return result;
}

unint64_t sub_1B15B8938()
{
  unint64_t result;

  result = qword_1EEF34878;
  if (!qword_1EEF34878)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16CFB44, &type metadata for JSArrayValueView);
    atomic_store(result, (unint64_t *)&qword_1EEF34878);
  }
  return result;
}

unint64_t sub_1B15B8974()
{
  unint64_t result;

  result = qword_1EEF34880;
  if (!qword_1EEF34880)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DACF0, &unk_1E632B6D8);
    atomic_store(result, (unint64_t *)&qword_1EEF34880);
  }
  return result;
}

unint64_t sub_1B15B89B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF34888;
  if (!qword_1EEF34888)
  {
    sub_1B15B585C(255, &qword_1EEF345E0, (uint64_t)&unk_1E632B648, (uint64_t)&unk_1E632B5B8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1B15B8A38();
    v3[1] = sub_1B15B8A74();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF34888);
  }
  return result;
}

unint64_t sub_1B15B8A38()
{
  unint64_t result;

  result = qword_1EEF34890;
  if (!qword_1EEF34890)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DAD40, &unk_1E632B648);
    atomic_store(result, (unint64_t *)&qword_1EEF34890);
  }
  return result;
}

unint64_t sub_1B15B8A74()
{
  unint64_t result;

  result = qword_1EEF34898;
  if (!qword_1EEF34898)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DAD90, &unk_1E632B5B8);
    atomic_store(result, (unint64_t *)&qword_1EEF34898);
  }
  return result;
}

unint64_t sub_1B15B8AB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF348A0;
  if (!qword_1EEF348A0)
  {
    sub_1B15B585C(255, &qword_1EEF345E8, (uint64_t)&unk_1E632B528, (uint64_t)&type metadata for JSObjectValueView, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1B15B8764();
    v3[1] = sub_1B15B87A0();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF348A0);
  }
  return result;
}

uint64_t sub_1B15B8B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_release();
  if ((a9 & 1) == 0)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1B15B8BB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    return sub_1B16B9740();
  }
  return result;
}

uint64_t sub_1B15B8C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_retain();
  if ((a9 & 1) != 0)
  {
    swift_retain();
    swift_retain();
    sub_1B16B9740();
  }
  return swift_retain();
}

uint64_t sub_1B15B8C7C()
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B16B9740();
  return swift_retain();
}

uint64_t sub_1B15B8CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, int a12, char a13, int a14, char a15, uint64_t (*a16)(void))
{
  int v17;

  if ((a11 & 1) != 0)
    return a16();
  else
    return sub_1B15B8D24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10 & 1, v17, a13, a14, a15);
}

uint64_t sub_1B15B8D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, int a11, char a12, int a13, char a14)
{
  uint64_t (**v14)(void);

  v14 = (uint64_t (**)(void))&a12;
  if ((a10 & 1) != 0)
    v14 = (uint64_t (**)(void))&a14;
  return (*v14)();
}

uint64_t sub_1B15B8D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_release();
  if ((a9 & 1) != 0)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1B15B8DC4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B15B8E18(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B15B8E78()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15B8EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B15B1E54(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1B15B8EA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF348B0)
  {
    sub_1B13D6584(255, &qword_1EEF34548, (uint64_t (*)(uint64_t))sub_1B15B4C98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    v0 = sub_1B16B8FA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF348B0);
  }
}

void sub_1B15B8F24(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;

  sub_1B13D6584(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_1_12(v4);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15B8F64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;

  OUTLINED_FUNCTION_41_1(a1, a2, a3, a4);
  OUTLINED_FUNCTION_20_1(v4);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15B8F8C()
{
  OUTLINED_FUNCTION_7_68();
  return sub_1B15B2330();
}

unint64_t sub_1B15B8FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF348C0;
  if (!qword_1EEF348C0)
  {
    sub_1B13D6584(255, &qword_1EEF348C8, (uint64_t (*)(uint64_t))sub_1B15B800C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CE0680], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF348C0);
  }
  return result;
}

id ContentInsetable<>.ts_adjustContentInset(to:padding:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  void *v7;
  double MinX;
  id result;
  double v16;
  CGRect v17;

  objc_msgSend(a1, sel_layoutFrame);
  MinX = CGRectGetMinX(v17);
  result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  if (v16 != MinX + a5)
  {
    (*(void (**)(uint64_t, uint64_t, double, double, double, double))(a3 + 16))(a2, a3, a4 + 0.0, MinX + a5, a6 + 0.0, MinX + a7);
    return objc_msgSend(v7, sel_setNeedsLayout);
  }
  return result;
}

uint64_t dispatch thunk of ContentInsetable.contentInset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContentInsetable.contentInset.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContentInsetable.contentInset.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1B15B9130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  sub_1B145D468();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4, v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1B13D91C8((unint64_t *)&qword_1ED17A5F8, MEMORY[0x1E0DB4A80]);
  result = sub_1B16B9E84();
  if (__OFSUB__(result, a1))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v11 = (uint64_t (*)(uint64_t, uint64_t))((result - a1) & ~((result - a1) >> 63));
  OUTLINED_FUNCTION_6_85();
  OUTLINED_FUNCTION_14_42();
  sub_1B16B9E90();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v1, v5);
  if ((v14 & 1) != 0)
  {
    OUTLINED_FUNCTION_14_42();
    OUTLINED_FUNCTION_10_1();
  }
  else
  {
    v12 = v13;
    OUTLINED_FUNCTION_10_1();
    v16 = v12;
  }
  result = OUTLINED_FUNCTION_6_85();
  if (v16 >= v15)
  {
    v13 = v15;
    v14 = v16;
    sub_1B16B9F98();
    return v11(v2, v5);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1B15B9294(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  sub_1B16B9740();
  v5 = sub_1B16BA76C();
  result = swift_bridgeObjectRelease();
LABEL_4:
  if (__OFSUB__(v5, v3))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v6 = (v5 - v3) & ~((v5 - v3) >> 63);
  if (v4)
  {
    sub_1B16B9740();
    v7 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = sub_1B1455EA4(0, v6, v7);
  if ((v8 & 1) != 0)
    v9 = v7;
  else
    v9 = result;
  if (v9 < 0)
    goto LABEL_28;
  if (v4)
  {
    sub_1B16B9740();
    v11 = sub_1B16BA76C();
    result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
LABEL_30:
      __break(1u);
      return result;
    }
    sub_1B16B9740();
    v10 = sub_1B16BA76C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if ((v2 & 0xC000000000000001) != 0 && v9)
  {
    type metadata accessor for SwipeActionView();
    v12 = 0;
    do
    {
      v13 = v12 + 1;
      sub_1B16BA5BC();
      v12 = v13;
    }
    while (v9 != v13);
  }
  if (!v4)
    return v2 & 0xFFFFFFFFFFFFFF8;
  sub_1B16B9740();
  v14 = sub_1B16BA778();
  swift_bridgeObjectRelease_n();
  return v14;
}

uint64_t sub_1B15B9480(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  sub_1B16B9740();
  while (1)
  {
    v15 = v2;
    if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
    {
      swift_retain();
      v3 = sub_1B16BA76C();
      swift_bridgeObjectRelease();
      swift_release();
      if (v3 < -1)
        __break(1u);
      v4 = v3 / 2;
    }
    else
    {
      v3 = *(_QWORD *)(v2 + 16);
      swift_bridgeObjectRelease();
      v4 = (unint64_t)v3 >> 1;
    }
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v6 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        if ((v15 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x1B5E1DF60](v5, v15);
          v10 = (id)MEMORY[0x1B5E1DF60](v3 - (v5 + 1), v15);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v7 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v7)
            goto LABEL_34;
          v8 = *(id *)(v15 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v7)
            goto LABEL_37;
          v9 = (uint64_t)v8;
          v10 = *(id *)(v15 + 32 + 8 * v1);
        }
        v11 = v10;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_1B162F424(v15);
        }
        v12 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v12 + 32) = v11;
        sub_1B16B9B78();
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_1B162F424(v15);
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;

        *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x20) = v9;
        sub_1B16B9B78();
      }
      v5 = v6;
      if (v4 == v6)
        return v15;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    sub_1B148C91C(v1);
    v2 = v14;
  }
}

id sub_1B15B968C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id result;

  v2 = OUTLINED_FUNCTION_2_0(a1, sel_layoutMargins);
  result = OUTLINED_FUNCTION_2_0((uint64_t)v2, sel_layoutMargins);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews) >> 62)
  {
    OUTLINED_FUNCTION_49();
    OUTLINED_FUNCTION_47_4();
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B15B9754(id result)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated) != (result & 1))
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_feedbackGenerator), sel_selectionChanged);
  return result;
}

id sub_1B15B9788(char a1)
{
  uint64_t v1;
  void *v2;

  v2 = (void *)*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated) = a1;
  return sub_1B15B9754(v2);
}

uint64_t sub_1B15B97A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  BOOL v3;
  unint64_t v4;
  void *v5;
  id v6;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge) & 1) == 0)
  {
    if (v1 >> 62)
    {
      OUTLINED_FUNCTION_49();
      v2 = sub_1B16BA76C();
      if (!v2)
        goto LABEL_13;
    }
    else
    {
      v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_49();
      if (!v2)
        goto LABEL_13;
    }
    sub_1B13C6B9C(0, (v1 & 0xC000000000000001) == 0, v1);
    if ((v1 & 0xC000000000000001) == 0)
    {
      v5 = *(void **)(v1 + 32);
      goto LABEL_11;
    }
    v8 = 0;
LABEL_21:
    v6 = (id)MEMORY[0x1B5E1DF60](v8, v1);
    goto LABEL_12;
  }
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_49();
    v2 = sub_1B16BA76C();
    if (!v2)
      goto LABEL_13;
    goto LABEL_4;
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_49();
  if (v2)
  {
LABEL_4:
    v3 = __OFSUB__(v2, 1);
    v4 = v2 - 1;
    if (v3)
    {
      __break(1u);
    }
    else
    {
      sub_1B13C6B9C(v4, (v1 & 0xC000000000000001) == 0, v1);
      if ((v1 & 0xC000000000000001) == 0)
      {
        v5 = *(void **)(v1 + 8 * v4 + 32);
LABEL_11:
        v6 = v5;
LABEL_12:
        v2 = (uint64_t)v6;
        goto LABEL_13;
      }
    }
    v8 = v4;
    goto LABEL_21;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B15B98CC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews);
  if (v1 >> 62)
  {
    sub_1B16B9740();
    v2 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 2)
    return MEMORY[0x1E0DEE9D8];
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge);
  sub_1B16B9740();
  if ((v3 & 1) != 0)
    v4 = sub_1B15B9294(1, v1);
  else
    v4 = sub_1B14E2564(1, v1);
  return sub_1B14DEE3C(v4, v5, v6, v7);
}

uint64_t sub_1B15B9980(uint64_t a1, char a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  char v10;
  uint64_t v11;
  _BYTE *v12;
  objc_class *v13;
  char *v14;
  void *v15;
  void *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  _BYTE *v26;
  id v27;
  double v28;
  objc_super *v29;
  SEL v30;
  char *v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t result;
  uint64_t i;
  id v38;
  void *v39;
  id v40;
  id v41;
  double v42;
  SEL v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  char *v51;
  char v52;
  _QWORD v53[2];
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v5 = v4;
  swift_getObjectType();
  v10 = a2 & 1;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_presentation] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold] = 0x4032000000000000;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v52 = a2 & 1;
    v61 = MEMORY[0x1E0DEE9D8];
    v12 = v5;
    sub_1B16BA640();
    v13 = (objc_class *)type metadata accessor for SwipeActionView();
    v14 = (char *)(a1 + 48);
    do
    {
      v16 = (void *)*((_QWORD *)v14 - 1);
      v17 = *v14;
      v18 = v14[1];
      v19 = *((_QWORD *)v14 + 1);
      v20 = *((_QWORD *)v14 + 2);
      v21 = *((_QWORD *)v14 + 3);
      v22 = *((_QWORD *)v14 + 6);
      v53[0] = *((_QWORD *)v14 - 2);
      v15 = (void *)v53[0];
      v53[1] = v16;
      v54 = v17;
      v55 = v18;
      v56 = v19;
      v57 = v20;
      v58 = v21;
      v59 = *((_OWORD *)v14 + 2);
      v60 = v22;
      objc_allocWithZone(v13);
      v23 = v15;
      v24 = v16;
      OUTLINED_FUNCTION_36();
      sub_1B16B9740();
      swift_retain();
      sub_1B15962B0((uint64_t)v53, a3);
      sub_1B16BA61C();
      sub_1B16BA64C();
      sub_1B16BA658();
      sub_1B16BA628();
      v14 += 72;
      --v11;
    }
    while (v11);
    v25 = v61;
    swift_bridgeObjectRelease();
    v10 = v52;
  }
  else
  {
    v26 = v5;
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews] = v25;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge] = v10;
  *(double *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_minimumSwipeActionAreaWidth] = a4;
  *(double *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViewWidth] = a3;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled] = 0;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated] = 0;
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C60]), sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_feedbackGenerator] = v27;

  v28 = OUTLINED_FUNCTION_8_1();
  v31 = (char *)objc_msgSendSuper2(v29, v30, v28);
  v32 = v31;
  v33 = *(_QWORD *)&v31[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews];
  if (v33 >> 62)
  {
    v51 = v31;
    OUTLINED_FUNCTION_36();
    result = OUTLINED_FUNCTION_47_4();
    v34 = result;
    if (!result)
      goto LABEL_14;
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    v35 = v31;
    result = OUTLINED_FUNCTION_36();
    if (!v34)
      goto LABEL_14;
  }
  if (v34 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v34; ++i)
  {
    if ((v33 & 0xC000000000000001) != 0)
      v38 = (id)MEMORY[0x1B5E1DF60](i, v33);
    else
      v38 = *(id *)(v33 + 8 * i + 32);
    v39 = v38;
    objc_msgSend(v32, sel_addSubview_, v38);

  }
LABEL_14:
  swift_bridgeObjectRelease();
  v40 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v41 = v32;
  v42 = OUTLINED_FUNCTION_8_1();
  v44 = objc_msgSend(v40, v43, v42);
  objc_msgSend(v41, sel_setMaskView_, v44);

  v46 = OUTLINED_FUNCTION_32_0(v45, sel_maskView);
  if (v46)
  {
    v47 = v46;
    v48 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    OUTLINED_FUNCTION_3_82(v47, sel_setBackgroundColor_);

  }
  v49 = OUTLINED_FUNCTION_32_0((uint64_t)v46, sel_maskView);
  if (v49)
  {
    v50 = v49;
    objc_msgSend(v49, sel_setAutoresizingMask_, 16);

  }
  return (uint64_t)v41;
}

void sub_1B15B9D30()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_presentation] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold] = 0x4032000000000000;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15B9DC4()
{
  void *v0;
  char v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  OUTLINED_FUNCTION_16_45();
  if (v1 && (OUTLINED_FUNCTION_16_45(), v1))
    sub_1B15B9E24();
  else
    sub_1B15B9F94();
}

void sub_1B15B9E24()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  CGRect v22;

  v21 = (id)sub_1B15B97A0();
  if (v21)
  {
    v1 = objc_msgSend(v0, sel_maskView);
    if (v1)
    {
      v2 = v1;
      v3 = objc_msgSend(v1, sel_layer);
      v4 = objc_msgSend(v3, sel_presentationLayer);

      if (v4)
      {
        objc_msgSend(v4, sel_frame);
        v6 = v5;
        v8 = v7;
        v10 = v9;
        v12 = v11;

      }
      else
      {
        objc_msgSend(v2, sel_frame);
        v6 = v13;
        v8 = v14;
        v10 = v15;
        v12 = v16;
      }
      sub_1B15BB23C((uint64_t)v0, v6, v8, v10, v12);
      v18 = v17;
      v19 = *(double *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViewWidth];
      v20 = v21;
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v20, sel_setFrame_, v18, 0.0, v19, CGRectGetHeight(v22));

    }
  }
}

id sub_1B15B9F94()
{
  char *v0;
  id v1;
  unint64_t v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  id result;
  double v9;
  double v10;
  double v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  double Width;
  double v20;
  uint64_t v21;
  double v22;
  id v23;
  void *v24;
  CGRect v25;
  CGRect v26;

  v1 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews];
  sub_1B16B9740();
  if (v1)
    v2 = sub_1B15B9480(v2);
  objc_msgSend(v0, sel_layoutMargins);
  v4 = v3;
  v5 = objc_msgSend(v0, sel_layoutMargins);
  v7 = v6;
  result = sub_1B15B968C((uint64_t)v5);
  v10 = v9;
  v11 = *(double *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViewWidth];
  v12 = v2 >> 62;
  if (v2 >> 62)
  {
    sub_1B16B9740();
    v13 = sub_1B16BA76C();
    result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  v14 = (v10 - (v4 + v7) - v11 * (double)v13) / (double)(v13 + 1);
  if ((v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge] & 1) == 0)
  {
    result = objc_msgSend(v0, sel_layoutMargins);
    v17 = v14 + v16;
    if (!v12)
      goto LABEL_14;
LABEL_10:
    sub_1B16B9740();
    v18 = sub_1B16BA76C();
    result = (id)swift_bridgeObjectRelease();
    if (v18)
      goto LABEL_15;
    return (id)swift_bridgeObjectRelease();
  }
  if (v12)
  {
    sub_1B16B9740();
    v15 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v25);
  result = objc_msgSend(v0, sel_layoutMargins);
  v17 = Width - v20 - v14 * (double)v15 - v11 * (double)v15;
  if (v12)
    goto LABEL_10;
LABEL_14:
  v18 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v18)
    return (id)swift_bridgeObjectRelease();
LABEL_15:
  if (v18 >= 1)
  {
    v21 = 0;
    v22 = v11 + v14;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x1B5E1DF60](v21, v2);
      else
        v23 = *(id *)(v2 + 8 * v21 + 32);
      v24 = v23;
      ++v21;
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v24, sel_setFrame_, v17, 0.0, v11, CGRectGetHeight(v26));

      v17 = v22 + v17;
    }
    while (v18 != v21);
    return (id)swift_bridgeObjectRelease();
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_1B15BA240(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  unsigned __int8 *v5;
  uint64_t v11;
  double v12;
  id v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  int v22;
  double v23;
  uint64_t v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  double v32;
  id v33;
  SEL v34;
  void *v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  OUTLINED_FUNCTION_2_0((uint64_t)a1, sel_bounds);
  if (CGRectGetWidth(v40) <= 0.0)
    goto LABEL_13;
  sub_1B15BAED0(v5, a2, a3, a4, a5);
  OUTLINED_FUNCTION_2_0(v11, sel_bounds);
  CGRectGetHeight(v41);
  v12 = OUTLINED_FUNCTION_12_46();
  sub_1B15BAED0(v13, v12, v14, v15, v16);
  OUTLINED_FUNCTION_2_0(v17, sel_bounds);
  CGRectGetHeight(v42);
  v18 = OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled;
  if (v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled] != 1)
    goto LABEL_7;
  OUTLINED_FUNCTION_16_45();
  if (v19 && (v43.origin.x = OUTLINED_FUNCTION_3_96(), CGRectGetWidth(v43) == 0.0))
  {
    sub_1B15BA478();
    v20 = 1;
  }
  else
  {
LABEL_7:
    v20 = 0;
  }
  v21 = OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated;
  v22 = v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated];
  v23 = OUTLINED_FUNCTION_12_46();
  sub_1B15BA5BC(v24, v23, v25, v26, v27);
  if (v5[v18] == 1)
  {
    v28 = v5[v21];
    if (((v20 | v22 ^ v28 ^ 1) & 1) == 0)
      v28 = sub_1B15BA940(v28);
  }
  v29 = OUTLINED_FUNCTION_2_0(v28, sel_maskView);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v29, sel_layer);
    v32 = OUTLINED_FUNCTION_3_96();
    objc_msgSend(v33, v34, v32);

    sub_1B15BB4CC(0x73646E756F62, 0xE600000000000000, a1);
    v35 = (void *)sub_1B16BA1B4();
    OUTLINED_FUNCTION_3_82(a1, sel_setFromValue_);

    OUTLINED_FUNCTION_3_96();
    v36 = (void *)sub_1B16BA1B4();
    OUTLINED_FUNCTION_3_82(a1, sel_setToValue_);

    v39 = OUTLINED_FUNCTION_2_0(v37, sel_layer);
    sub_1B16238F8((uint64_t)a1, 0x79656B5F6D696E61, 0xE800000000000000, v39);

    OUTLINED_FUNCTION_13_47();
  }
  else
  {
LABEL_13:
    OUTLINED_FUNCTION_13_47();
  }
}

void sub_1B15BA478()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t i;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  v0 = sub_1B15B98CC();
  if (!(v0 >> 62))
  {
    v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v1)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    v5 = (void *)sub_1B15B97A0();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    v7 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
    v8 = v5;
    v9 = sub_1B15BB418(1, (uint64_t)sub_1B15BB540, v6, 0.1);
    objc_msgSend(v9, sel_startAnimation);

    return;
  }
  v1 = sub_1B16BA76C();
  if (!v1)
    goto LABEL_9;
LABEL_3:
  if (v1 >= 1)
  {
    for (i = 0; i != v1; ++i)
    {
      if ((v0 & 0xC000000000000001) != 0)
        v3 = (id)MEMORY[0x1B5E1DF60](i, v0);
      else
        v3 = *(id *)(v0 + 8 * i + 32);
      v4 = v3;
      objc_msgSend(v3, sel_setAlpha_, 0.0);

    }
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1B15BA5BC(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  char *v5;
  id v10;
  char v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  double Height;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  char v30;
  double v31;
  uint64_t v32;
  double v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  id v43;
  id v44;
  CGFloat v45;
  id v46;
  void *v47;
  double v48;
  CGFloat v49;
  CGRect v50;
  CGRect v51;

  OUTLINED_FUNCTION_2_0(a1, sel_bounds);
  if (CGRectGetWidth(v50) <= 0.0)
  {
LABEL_19:
    OUTLINED_FUNCTION_4_83();
    return;
  }
  v10 = objc_msgSend(v5, sel_layoutIfNeeded);
  v11 = v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge];
  v12 = OUTLINED_FUNCTION_2_0((uint64_t)v10, sel_maskView);
  v13 = v12;
  if ((v11 & 1) != 0)
  {
    if (!v12)
      goto LABEL_8;
    v14 = OUTLINED_FUNCTION_32_0((uint64_t)v12, sel_layer);

    objc_msgSend(v14, sel_setAnchorPoint_, 1.0, 0.5);
  }
  else
  {
    if (!v12)
      goto LABEL_8;
    v14 = OUTLINED_FUNCTION_32_0((uint64_t)v12, sel_layer);

    objc_msgSend(v14, sel_setAnchorPoint_, 0.0, 0.5);
  }

LABEL_8:
  v49 = a5;
  sub_1B15BAED0(v5, a2, a3, a4, a5);
  v16 = v15;
  v18 = v17;
  OUTLINED_FUNCTION_2_0(v19, sel_bounds);
  Height = CGRectGetHeight(v51);
  v22 = OUTLINED_FUNCTION_2_0(v21, sel_maskView);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_layer);
    objc_msgSend(v24, sel_setFrame_, v16, 0.0, v18, Height);

  }
  if (v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled] == 1)
  {
    v48 = OUTLINED_FUNCTION_0_137();
    v25 = OUTLINED_FUNCTION_0_137();
    sub_1B15B968C(v26);
    v27 = OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold;
    v29 = v28 + *(double *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold];
    if (v29 < v25
      || (OUTLINED_FUNCTION_16_45(), v30)
      && v48 != 0.0
      && (v31 = OUTLINED_FUNCTION_0_137(), sub_1B15B968C(v32), v31 < v33 + *(double *)&v5[v27] + 10.0))
    {
      sub_1B15B9788(v29 < v25);
    }
  }
  if ((v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_presentation] & 1) != 0
    || (v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated] & 1) != 0)
  {
    goto LABEL_19;
  }
  v34 = *(_QWORD *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews];
  if (v34 >> 62)
  {
    OUTLINED_FUNCTION_49();
    v35 = OUTLINED_FUNCTION_47_4();
    if (v35)
      goto LABEL_22;
LABEL_35:
    OUTLINED_FUNCTION_4_83();
    swift_bridgeObjectRelease();
    return;
  }
  v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_49();
  if (!v35)
    goto LABEL_35;
LABEL_22:
  if (v35 >= 1)
  {
    v36 = 0;
    while (1)
    {
      v37 = (v34 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1B5E1DF60](v36, v34)
          : *(id *)(v34 + 8 * v36 + 32);
      v38 = v37;
      v39 = a2;
      v40 = a3;
      v41 = a4;
      v42 = v49;
      if ((v11 & 1) != 0)
        break;
      CGRectGetMinX(*(CGRect *)&v39);
      OUTLINED_FUNCTION_5_81();
      v46 = OUTLINED_FUNCTION_8_64();
      v44 = v46;
      if (Height >= v18)
        goto LABEL_32;
      sub_1B15BAB94(v46, 1, 1.0, 0.0);
      v47 = v44;
LABEL_34:
      ++v36;

      if (v35 == v36)
        goto LABEL_35;
    }
    CGRectGetMaxX(*(CGRect *)&v39);
    OUTLINED_FUNCTION_5_81();
    v43 = OUTLINED_FUNCTION_8_64();
    v44 = v43;
    if (v18 >= Height)
    {
LABEL_32:
      v43 = v44;
      v45 = 0.85;
    }
    else
    {
      v45 = 1.0;
    }
    sub_1B15BAB94(v43, 1, v45, 0.0);
    v47 = v38;
    v38 = v44;
    goto LABEL_34;
  }
  __break(1u);
}

unint64_t sub_1B15BA940(char a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  id v11;
  void *v12;
  double v13;
  unint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = a1;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
  v5 = 1.0;
  v6 = sub_1B15BB36C((uint64_t)sub_1B15BB5A4, v3, 0.4, 1.0);
  objc_msgSend(v6, sel_startAnimation);

  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_BYTE *)(v8 + 24) = a1;
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
  v10 = 0.1;
  v11 = sub_1B15BB418(1, (uint64_t)sub_1B15BB5B0, v8, 0.1);
  v12 = v11;
  if ((a1 & 1) != 0)
  {
    v10 = 0.0;
    v13 = 0.85;
  }
  else
  {
    v13 = 1.0;
  }
  if ((a1 & 1) == 0)
    v5 = 0.85;
  objc_msgSend(v11, sel_startAnimationAfterDelay_, v10);

  result = sub_1B15B98CC();
  v15 = result;
  if (!(result >> 62))
  {
    v16 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_8;
    return swift_bridgeObjectRelease();
  }
  result = sub_1B16BA76C();
  v16 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_8:
  if (v16 >= 1)
  {
    v17 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v18 = (char *)MEMORY[0x1B5E1DF60](v17, v15);
      else
        v18 = (char *)*(id *)(v15 + 8 * v17 + 32);
      v19 = v18;
      ++v17;
      v20 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
      v21 = *(id *)&v18[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
      sub_1B15BAB94(v21, 0, v5, 0.0);

      v22 = *(id *)&v19[v20];
      sub_1B15BAB94(v22, 1, v13, v10);

    }
    while (v16 != v17);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1B15BAB94(void *a1, char a2, CGFloat a3, double a4)
{
  uint64_t v9;
  id v10;
  id v11;
  CGAffineTransform v12;

  objc_msgSend(a1, sel_transform);
  objc_msgSend(a1, sel_transform);
  if (v12.a != a3 || v12.d != a3)
  {
    if ((a2 & 1) != 0)
    {
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = a1;
      *(CGFloat *)(v9 + 24) = a3;
      objc_allocWithZone(MEMORY[0x1E0DC3F38]);
      v10 = a1;
      v11 = sub_1B15BB298((uint64_t)sub_1B15BB5E0, v9, 0.25, 0.33, 0.0, 0.2, 1.0);
      objc_msgSend(v11, sel_startAnimationAfterDelay_, a4);

    }
    else
    {
      CGAffineTransformMakeScale(&v12, a3, a3);
      objc_msgSend(a1, sel_setTransform_, &v12);
    }
  }
}

void sub_1B15BACE0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for SwipeActionContainerView()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SwipeActionContainerView.PinningEdge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15BADBC + 4 * byte_1B16D5565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15BADF0 + 4 * byte_1B16D5560[v4]))();
}

uint64_t sub_1B15BADF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15BADF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15BAE00);
  return result;
}

uint64_t sub_1B15BAE0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15BAE14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15BAE18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15BAE20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SwipeActionContainerView.PinningEdge()
{
  return &type metadata for SwipeActionContainerView.PinningEdge;
}

unint64_t sub_1B15BAE40()
{
  unint64_t result;

  result = qword_1EEF34940;
  if (!qword_1EEF34940)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D55D8, &type metadata for SwipeActionContainerView.PinningEdge);
    atomic_store(result, (unint64_t *)&qword_1EEF34940);
  }
  return result;
}

id sub_1B15BAE7C(void *a1, CGFloat a2)
{
  CGAffineTransform v4;

  CGAffineTransformMakeScale(&v4, a2, a2);
  return objc_msgSend(a1, sel_setTransform_, &v4);
}

void sub_1B15BAED0(id a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  if ((*((_BYTE *)a1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge) & 1) != 0)
  {
    objc_msgSend(a1, sel_bounds);
    CGRectGetMaxX(v10);
    v11.origin.x = a2;
    v11.origin.y = a3;
    v11.size.width = a4;
    v11.size.height = a5;
    CGRectGetMaxX(v11);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMaxX(v12);
    objc_msgSend(a1, sel_bounds);
    CGRectGetWidth(v13);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMaxX(v17);
  }
  else
  {
    CGRectGetMinX(*(CGRect *)&a2);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMinX(v14);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMinX(v15);
    objc_msgSend(a1, sel_bounds);
    CGRectGetWidth(v16);
  }
}

void sub_1B15BB0C4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1B5E1F2F8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if ((a2 & 1) != 0)
      sub_1B15B9E24();
    else
      sub_1B15B9F94();

  }
}

unint64_t sub_1B15BB124(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t result;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  id v10;
  void *v11;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  if (result)
  {
    v5 = (void *)result;
    result = sub_1B15B98CC();
    v6 = result;
    if (result >> 62)
    {
      result = sub_1B16BA76C();
      v7 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        v8 = 0;
        if ((a2 & 1) != 0)
          v9 = 0.0;
        else
          v9 = 1.0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
            v10 = (id)MEMORY[0x1B5E1DF60](v8, v6);
          else
            v10 = *(id *)(v6 + 8 * v8 + 32);
          v11 = v10;
          ++v8;
          objc_msgSend(v10, sel_setAlpha_, v9);

        }
        while (v7 != v8);
      }
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B15BB23C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge) & 1) != 0)
    CGRectGetMinX(*(CGRect *)&a2);
  else
    CGRectGetMaxX(*(CGRect *)&a2);
}

id sub_1B15BB298(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  void *v7;
  void *v13;
  id v14;
  _QWORD v16[6];

  if (a1)
  {
    v16[4] = a1;
    v16[5] = a2;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1B13F00E4;
    v16[3] = &block_descriptor_16_2;
    v13 = _Block_copy(v16);
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  v14 = objc_msgSend(v7, sel_initWithDuration_controlPoint1_controlPoint2_animations_, v13, a3, a4, a5, a6, a7);
  _Block_release(v13);
  return v14;
}

id sub_1B15BB36C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v4;
  void *v7;
  id v8;
  _QWORD v10[6];

  if (a1)
  {
    v10[4] = a1;
    v10[5] = a2;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1B13F00E4;
    v10[3] = &block_descriptor_19_2;
    v7 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v4, sel_initWithDuration_dampingRatio_animations_, v7, a3, a4);
  _Block_release(v7);
  return v8;
}

id sub_1B15BB418(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  void *v4;
  void *v7;
  id v8;
  _QWORD v10[6];

  if (a2)
  {
    v10[4] = a2;
    v10[5] = a3;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1B13F00E4;
    v10[3] = &block_descriptor_53;
    v7 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v4, sel_initWithDuration_curve_animations_, a1, v7, a4);
  _Block_release(v7);
  return v8;
}

void sub_1B15BB4CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1B16B983C();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setKeyPath_, v4);

}

uint64_t sub_1B15BB51C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B15BB540()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 16);
  if (result)
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  return result;
}

uint64_t sub_1B15BB55C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15BB580()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B15BB5A4()
{
  uint64_t v0;

  sub_1B15BB0C4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_1B15BB5B0()
{
  uint64_t v0;

  return sub_1B15BB124(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1B15BB5BC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B15BB5E0()
{
  uint64_t v0;

  return sub_1B15BAE7C(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

void sub_1B15BB600(uint64_t a1@<X8>)
{
  sub_1B15BB624((unint64_t *)&unk_1ED17D850, (void (*)(__int128 *, _BYTE *))sub_1B13C06D0, a1);
}

void sub_1B15BB624(unint64_t *a1@<X0>, void (*a2)(__int128 *, _BYTE *)@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  id v34;
  _BYTE v35[40];

  OUTLINED_FUNCTION_10((uint64_t)a1, (unint64_t *)&qword_1ED183800);
  sub_1B13D5DBC(0, a1);
  v8 = v3;
  v9 = OUTLINED_FUNCTION_13_48();
  if (!(_DWORD)v9)
  {
    OUTLINED_FUNCTION_10_55(v9, v10, v11, v12, v13, v14, v15, v16, v28, (uint64_t)a2, v31, v32, v33);
    v17 = v4;
    v18 = objc_msgSend(v17, sel_parentViewController);

    if (!v18)
    {
LABEL_5:
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    }
    while (1)
    {
      v34 = v18;
      v19 = v18;
      v20 = OUTLINED_FUNCTION_13_48();
      if ((v20 & 1) != 0)
        break;
      OUTLINED_FUNCTION_10_55(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33);
      v18 = objc_msgSend(v4, sel_parentViewController);

      if (!v18)
        goto LABEL_5;
    }

    a2 = (void (*)(__int128 *, _BYTE *))v30;
  }
  a2(&v31, v35);
  a2((__int128 *)v35, (_BYTE *)a3);
}

uint64_t sub_1B15BB754(uint64_t a1)
{
  return sub_1B13FCF48(a1, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_delegates, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_respondsToSelectorCache, (uint64_t (*)(_QWORD, _QWORD))sub_1B15BEFCC);
}

uint64_t sub_1B15BB770(uint64_t a1)
{
  return sub_1B13FCF48(a1, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_delegates, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_respondsToSelectorCache, (uint64_t (*)(_QWORD, _QWORD))sub_1B15BF014);
}

uint64_t sub_1B15BB78C(uint64_t result, char a2, id a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((a2 & 1) == 0)
  {
    v5 = result;
    result = (uint64_t)objc_msgSend(a3, sel_respondsToSelector_, result);
    if ((result & 1) != 0)
    {
      sub_1B1481CA8();
      v6 = *(_QWORD *)(*a4 + 16);
      result = sub_1B1481D38(v6);
      v7 = *a4;
      *(_QWORD *)(v7 + 16) = v6 + 1;
      *(_QWORD *)(v7 + 8 * v6 + 32) = v5;
      *a4 = v7;
    }
  }
  return result;
}

id sub_1B15BB800()
{
  void *v0;

  return objc_msgSend(v0, sel_navigationItem);
}

Swift::Void __swiftcall MastheadViewControllerType.relayout()()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 128))(0);
}

double MastheadViewController.contentHeight.getter()
{
  uint64_t v0;
  CGRect v2;

  objc_msgSend(*(id *)(v0 + qword_1ED180250), sel_frame);
  return CGRectGetHeight(v2);
}

uint64_t MastheadViewController.pluginPinningEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + qword_1ED185F88);
  OUTLINED_FUNCTION_13();
  return *v1;
}

uint64_t MastheadViewController.pluginPinningEnabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + qword_1ED185F88);
  result = OUTLINED_FUNCTION_13();
  *v3 = a1;
  return result;
}

void MastheadViewController.pluginPinningEnabled.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void MastheadViewController.viewProvider.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1B13E2FE4(v1 + qword_1ED1865A0, a1);
}

void sub_1B15BB944(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v5;
  id v6;
  void *v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  __int16 v13;
  __int16 v14;

  if (!a1)
    goto LABEL_8;
  v5 = a1;
  v6 = objc_msgSend(a2, sel_tabBarController);
  if (!v6)
  {

LABEL_8:
    v14 = 0;
    *(_OWORD *)a3 = xmmword_1B16D2540;
    goto LABEL_9;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel__uip_sidebar);
  v9 = objc_msgSend(v8, sel__isVisible);

  LODWORD(v8) = v5[OBJC_IVAR____TtC5TeaUI33FloatingTabBarNavigationTitleView_layout];
  sub_1B14A95D4();
  v11 = v10;

  v12 = v5[OBJC_IVAR____TtC5TeaUI33FloatingTabBarNavigationTitleView_showExpandedHeight];
  if ((_DWORD)v8)
    v13 = 256;
  else
    v13 = 0;
  v14 = v13 | v12;
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v11;
LABEL_9:
  *(_WORD *)(a3 + 16) = v14;
}

id sub_1B15BBA3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1ED184A20;
  v2 = *(void **)(v0 + qword_1ED184A20);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1ED184A20);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1B15BBABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = qword_1ED17DF18;
  if (*(_QWORD *)(v0 + qword_1ED17DF18))
  {
    v2 = *(_QWORD *)(v0 + qword_1ED17DF18);
  }
  else
  {
    v3 = v0;
    type metadata accessor for PluginManager();
    swift_allocObject();
    PluginManager.init(enableReuseLayoutSuppression:)(0);
    v2 = v4;
    *(_QWORD *)(v3 + v1) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t MastheadViewController.plugin.getter()
{
  OUTLINED_FUNCTION_13();
  return swift_retain();
}

uint64_t sub_1B15BBB7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + qword_1ED17DF20);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1B15BBBD0()
{
  uint64_t v0;

  v0 = swift_retain();
  return MastheadViewController.plugin.setter(v0);
}

uint64_t MastheadViewController.plugin.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1ED17DF20);
  OUTLINED_FUNCTION_13();
  *v3 = a1;
  OUTLINED_FUNCTION_51();
  swift_release();
  sub_1B15BBC5C();
  return OUTLINED_FUNCTION_0_9();
}

uint64_t sub_1B15BBC5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (*v6)(_QWORD *, _UNKNOWN **);
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  double Width;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  CGRect v17;

  v1 = v0;
  v2 = *v0;
  v3 = *MEMORY[0x1E0DEEDD8];
  v4 = sub_1B15BBABC();
  v5 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  swift_release();

  if (!v5)
  {
    v6 = *(void (**)(_QWORD *, _UNKNOWN **))(*(_QWORD *)sub_1B15BBABC() + 120);
    v7 = v0;
    v6(v0, &protocol witness table for MastheadViewController<A>);
    swift_release();
  }
  sub_1B15BBABC();
  sub_1B149C2E8();
  swift_release();
  v8 = (_QWORD **)((char *)v0 + qword_1ED17DF20);
  swift_beginAccess();
  v9 = *v8;
  if (!*v8)
    return sub_1B15BC03C(0);
  swift_retain();
  sub_1B15BBABC();
  sub_1B149B6AC(v9);
  v10 = v3 & v2;
  swift_release();
  swift_beginAccess();
  v9[6] = &protocol witness table for MastheadViewController<A>;
  swift_unknownObjectWeakAssign();
  v11 = *(void **)((char *)v1 + qword_1ED187598);
  objc_msgSend(*(id *)((char *)v1 + qword_1ED180250), sel_bounds);
  Width = CGRectGetWidth(v17);
  sub_1B15BC084();
  objc_msgSend(v11, sel_setFrame_, 0.0, 0.0, Width, v13);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = *(_QWORD *)(v10 + 80);
  v15[3] = *(_QWORD *)(v10 + 88);
  v15[4] = v14;
  swift_retain();
  sub_1B151C548((uint64_t)sub_1B15BF008, (uint64_t)v15);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B15BC03C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_1ED17DF10) = a1;
  swift_retain();
  swift_release();
  sub_1B15BC3D8();
  return swift_release();
}

double sub_1B15BC084()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1ED17DF10);
  if (v1)
    return *(double *)(v1 + 56);
  else
    return 0.0;
}

uint64_t sub_1B15BC0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  if (result)
  {
    v5 = result;
    if (qword_1ED17D7E8 != -1)
      swift_once();
    v6 = sub_1B16B8BC4();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED1903D8);
    swift_retain_n();
    v7 = sub_1B16B8BAC();
    v8 = sub_1B16BA034();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14 = v10;
      *(_DWORD *)v9 = 136315138;
      type metadata accessor for CGSize(0);
      v11 = sub_1B16B98B4();
      sub_1B13E208C(v11, v12, &v14);
      sub_1B16BA34C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B139E000, v7, v8, "Masthead initialized our plugin, size=%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v10, -1, -1);
      MEMORY[0x1B5E1F1FC](v9, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v13 = swift_retain();
    sub_1B15BC03C(v13);
    objc_msgSend(*(id *)(v5 + qword_1ED187598), sel_setFrame_, 0.0, 0.0, *(double *)(a1 + 56), *(double *)(a1 + 64));
    PluginModel.viewController.getter();
  }
  return result;
}

void MastheadViewController.plugin.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15BC3AC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B15BBC5C();
  OUTLINED_FUNCTION_0_0();
}

id sub_1B15BC3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BOOL8 v7;

  v1 = qword_1ED17DF10;
  v2 = *(_QWORD *)(v0 + qword_1ED17DF10);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    v4 = sub_1B16B9740();
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  v5 = (_QWORD *)(v0 + qword_1ED1875A8);
  *v5 = v3;
  v5[1] = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v0 + v1);
  if (v6)
    v7 = *(double *)(v6 + 64) == 0.0;
  else
    v7 = 0;
  return objc_msgSend(*(id *)(v0 + qword_1ED187598), sel_setHidden_, v7);
}

id MastheadViewController.pluginView.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED187598);
}

void sub_1B15BC474()
{
  MastheadViewController.relayout(shouldBustLayoutCache:)(0);
}

void sub_1B15BC47C(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + qword_1ED180260);
  *(_QWORD *)(v1 + qword_1ED180260) = a1;
  v3 = a1;

  sub_1B15BC474();
}

void MastheadViewController.__allocating_init(rootViewController:viewProvider:miniMastheadViewProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  MastheadViewController.init(rootViewController:viewProvider:miniMastheadViewProvider:)(a1, a2, a3);
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B15BC500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();

    sub_1B145B198();
    sub_1B16B8300();
    return swift_release();
  }
  return result;
}

void MastheadViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0_0();
}

void MastheadViewController.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  _BYTE v16[224];

  v1 = v0;
  v0[qword_1ED185F88] = 1;
  v2 = qword_1ED180250;
  v3 = objc_allocWithZone((Class)OUTLINED_FUNCTION_62_12());
  *(_QWORD *)&v1[v2] = OUTLINED_FUNCTION_0_5(v3, sel_initWithFrame_);
  v4 = qword_1ED186598;
  v5 = objc_allocWithZone((Class)type metadata accessor for BlurStatusBarView());
  *(_QWORD *)&v1[v4] = OUTLINED_FUNCTION_0_5(v5, sel_initWithFrame_);
  v6 = &v1[qword_1ED180270];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v7 = &v1[qword_1ED180298];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v8 = (uint64_t)&v1[qword_1ED1865B0];
  sub_1B15BEAEC(v16);
  OUTLINED_FUNCTION_0_138((uint64_t)v16, v8);
  OUTLINED_FUNCTION_0_138((uint64_t)v16, (uint64_t)&v1[qword_1ED1865C0]);
  v9 = qword_1ED180278;
  sub_1B13C5C9C(0, &qword_1ED17E240, (uint64_t)&type metadata for NavigationItemStyle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  OUTLINED_FUNCTION_29_0();
  *(_QWORD *)&v1[v9] = sub_1B16B82D0();
  v10 = qword_1ED180288;
  type metadata accessor for MastheadNavigationItemStyleProvider();
  *(_QWORD *)&v1[v10] = OUTLINED_FUNCTION_25();
  *(_QWORD *)&v1[qword_1ED184A20] = 0;
  *(_QWORD *)&v1[qword_1ED17DF18] = 0;
  *(_QWORD *)&v1[qword_1ED17DF20] = 0;
  *(_QWORD *)&v1[qword_1ED17DF10] = 0;
  v11 = &v1[qword_1ED1875A8];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = qword_1ED187598;
  *(_QWORD *)&v1[v12] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_);
  v13 = qword_1ED180260;
  v14 = objc_allocWithZone((Class)OUTLINED_FUNCTION_63_10());
  *(_QWORD *)&v1[v13] = OUTLINED_FUNCTION_27_32();
  v15 = &v1[qword_1ED184A10];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15BC8C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  MastheadViewController.init(coder:)();
}

void MastheadViewController.__deallocating_deinit()
{
  void *v0;
  objc_class *v1;
  id v2;
  objc_super v3;

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC44D0], 0);

  v3.receiver = v0;
  v3.super_class = v1;
  objc_msgSendSuper2(&v3, sel_dealloc);
  OUTLINED_FUNCTION_44();
}

void sub_1B15BC958(void *a1)
{
  id v1;

  v1 = a1;
  MastheadViewController.__deallocating_deinit();
}

void sub_1B15BC97C(uint64_t a1)
{
  _BYTE v2[224];
  _BYTE v3[224];

  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED1865A0);
  sub_1B13C0E50(a1 + qword_1ED180238, &qword_1ED181880, (uint64_t)&unk_1ED181878, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);
  OUTLINED_FUNCTION_43(qword_1ED180250);
  OUTLINED_FUNCTION_43(qword_1ED186598);
  sub_1B13F77F4(a1 + qword_1ED180270);
  sub_1B13C0E50(a1 + qword_1ED180298, qword_1ED180C18, (uint64_t)&unk_1ED180C10, (uint64_t)&protocol descriptor for MastheadViewAnimatorType);
  OUTLINED_FUNCTION_37_22(a1 + qword_1ED1865B0, (uint64_t)v2, (unint64_t *)&unk_1ED17C728);
  sub_1B15BEAF4((uint64_t)v2);
  OUTLINED_FUNCTION_37_22(a1 + qword_1ED1865C0, (uint64_t)v3, (unint64_t *)&unk_1ED17C728);
  sub_1B15BEAF4((uint64_t)v3);
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_43(qword_1ED184A20);
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_24_6();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43(qword_1ED187598);
  OUTLINED_FUNCTION_43(qword_1ED180260);
}

Swift::Void __swiftcall MastheadViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v2;
  _BOOL8 v3;
  objc_super v4;

  v3 = a1;
  v4.receiver = v1;
  v4.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, v3);
  OUTLINED_FUNCTION_52_20(&v1[qword_1ED1865A0]);

  OUTLINED_FUNCTION_44();
}

void sub_1B15BCB68(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  MastheadViewController.viewWillAppear(_:)(a3);

}

void sub_1B15BCBA8(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  _BOOL4 v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  void *v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  CGRect v56;
  CGRect v57;

  v2 = v1;
  v55 = *(_OWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  sub_1B13F939C(0);
  v5 = *(double *)(a1 + 56);
  v4 = *(double *)(a1 + 64);
  v6 = *(void **)((char *)v1 + qword_1ED187598);
  objc_msgSend(v6, sel_frame);
  if (v5 == v8 && v4 == v7)
  {
    v11 = objc_msgSend(v1, sel_view);
    if (!v11)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
    v12 = v11;
    objc_msgSend(v11, sel_bounds);
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;

    v56.origin.x = v14;
    v56.origin.y = v16;
    v56.size.width = v18;
    v56.size.height = v20;
    v10 = v5 != CGRectGetWidth(v56);
  }
  else
  {
    v10 = 1;
  }
  v21 = *(void **)(a1 + 40);
  v22 = (void *)objc_opt_self();
  v23 = v21;
  v24 = objc_msgSend(v22, sel_sharedApplication);
  v25 = objc_msgSend(v24, sel_preferredContentSizeCategory);

  v26 = sub_1B16B9860();
  v28 = v27;
  v29 = sub_1B16B9860();
  if (v26 == v29 && v28 == v30)
  {
    swift_bridgeObjectRelease_n();

  }
  else
  {
    v32 = sub_1B16BA910(v26, v28, v29, v30, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v32 & 1) == 0)
    {
      if (qword_1ED17D7E8 != -1)
        swift_once();
      v33 = sub_1B16B8BC4();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED1903D8);
      v34 = sub_1B16B8BAC();
      v35 = sub_1B16BA034();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        _os_log_impl(&dword_1B139E000, v34, v35, "Masthead plugin now needsRelayout due to content size change", v36, 2u);
        MEMORY[0x1B5E1F1FC](v36, -1, -1);
      }

      objc_msgSend(v6, (SEL)&stru_1E63583C8);
      v38 = v37;
      v40 = v39;
      v42 = v41;
      v43 = objc_msgSend(v2, sel_view);
      if (v43)
      {
        v44 = v43;
        objc_msgSend(v43, (SEL)&stru_1E63583C8);
        v46 = v45;
        v48 = v47;
        v50 = v49;
        v52 = v51;

        v57.origin.x = v46;
        v57.origin.y = v48;
        v57.size.width = v50;
        v57.size.height = v52;
        objc_msgSend(v6, sel_setBounds_, v38, v40, v42, CGRectGetHeight(v57));
LABEL_21:
        v53 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = v55;
        *(_QWORD *)(v54 + 32) = v53;
        *(_QWORD *)(v54 + 40) = a1;
        swift_retain();
        swift_retain();
        sub_1B151C814((uint64_t)sub_1B15BEF60, v54);
        swift_release();
        swift_release();
        return;
      }
      goto LABEL_24;
    }
  }
  if (v10)
    goto LABEL_21;
}

uint64_t sub_1B15BCF84(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = MastheadViewController.preferredStatusBarStyle.getter();

  return v2;
}

uint64_t MastheadViewController.preferredStatusBarStyle.getter()
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;

  sub_1B16B82DC();
  sub_1B13DB3F4(v1, v2, v3, v4, v5, v6);
  sub_1B13DB3F4(v7, v8, v9, v10, v11, v12);
  return v13;
}

Swift::Void __swiftcall MastheadViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  objc_super v9;

  isa = a1.value.super.isa;
  v9.receiver = v1;
  v9.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v9, sel_traitCollectionDidChange_, isa);
  v3 = MastheadViewController.navigationItem.getter();
  v4 = OUTLINED_FUNCTION_2_0((uint64_t)v3, sel_traitCollection);
  v5 = (void *)sub_1B145A3EC((uint64_t)v4);

  objc_msgSend(v3, sel_setTitleView_, v5);
  v7 = OUTLINED_FUNCTION_2_0(v6, sel_view);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_setNeedsLayout);

    OUTLINED_FUNCTION_44();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B15BD0FC(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  UITraitCollection_optional v8;

  v5 = a3;
  v6 = a1;
  v8.is_nil = (char)v6;
  v7 = v6;
  v8.value.super.isa = (Class)a3;
  MastheadViewController.traitCollectionDidChange(_:)(v8);

}

void __swiftcall MastheadViewController.contentScrollView()(UIScrollView_optional *__return_ptr retstr)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  char v4;

  (*(void (**)(void **__return_ptr, _QWORD))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x58) + 16))(&v3, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50));
  v2 = v3;
  if (v4 == 1)
  {
    if (!ScrollViewProxyManager.currentScrollView.getter())
      sub_1B15BBA3C();
    sub_1B13FBF14(v2, 1);
  }
}

id sub_1B15BD204(void *a1)
{
  id v1;
  UIScrollView_optional *v2;
  void *v3;
  void *v4;

  v1 = a1;
  MastheadViewController.contentScrollView()(v2);
  v4 = v3;

  return v4;
}

Swift::Void __swiftcall MastheadViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  _BOOL8 v5;
  _BOOL8 v6;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)OUTLINED_FUNCTION_4();
  v5 = _;
  v6 = animated;
  objc_msgSendSuper2(&v7, sel_setEditing_animated_, v5, v6);
  objc_msgSend(*(id *)&v2[qword_1ED180248], sel_setEditing_animated_, v5, v6);
  OUTLINED_FUNCTION_44();
}

void sub_1B15BD29C(void *a1, uint64_t a2, Swift::Bool a3, Swift::Bool a4)
{
  id v6;

  v6 = a1;
  MastheadViewController.setEditing(_:animated:)(a3, a4);

}

Swift::Void __swiftcall MastheadViewController.scrollViewWillBeginDragging(_:)(UIScrollView *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[328];

  v3 = v1 + qword_1ED180298;
  OUTLINED_FUNCTION_13();
  if (*(_QWORD *)(v3 + 24))
  {
    sub_1B15BD348(a1, (uint64_t)v4);
    sub_1B15BEDC8((uint64_t)v4);
  }
}

uint64_t sub_1B15BD348@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGFloat Height;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  _BYTE v30[40];
  _BYTE __src[224];
  CGRect v32;
  CGRect v33;

  v3 = v2;
  objc_msgSend(a1, sel_contentOffset);
  v6 = *(void **)&v2[qword_1ED180250];
  objc_msgSend(v6, sel_frame);
  CGRectGetMaxY(v32);
  v7 = *(_QWORD *)&v2[qword_1ED1865A0 + 24];
  v8 = *(_QWORD *)&v2[qword_1ED1865A0 + 32];
  __swift_project_boxed_opaque_existential_1(&v2[qword_1ED1865A0], v7);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  objc_msgSend(v9, sel_frame);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v33.origin.x = v11;
  v33.origin.y = v13;
  v33.size.width = v15;
  v33.size.height = v17;
  Height = CGRectGetHeight(v33);
  sub_1B15BE510((uint64_t)v3, a1);
  v20 = v19;
  sub_1B15BE288();
  v21 = objc_msgSend(a1, sel_contentOffset);
  v23 = v22;
  MastheadViewController.layoutOptions.getter((uint64_t)v21, (uint64_t)__src);
  sub_1B15BC084();
  v25 = v24;
  v26 = &v3[qword_1ED185F88];
  swift_beginAccess();
  LOBYTE(v7) = *v26;
  v27 = a1;
  v28 = v6;
  sub_1B15BE58C(v3, (uint64_t)v30);
  memcpy((void *)a2, __src, 0xDAuLL);
  *(_QWORD *)(a2 + 224) = 0;
  *(CGFloat *)(a2 + 232) = Height;
  *(_QWORD *)(a2 + 240) = v23;
  *(_QWORD *)(a2 + 248) = v20;
  *(_QWORD *)(a2 + 256) = v27;
  *(_QWORD *)(a2 + 264) = v28;
  *(_QWORD *)(a2 + 272) = v25;
  *(_BYTE *)(a2 + 280) = v7;
  return sub_1B1496E88((uint64_t)v30, a2 + 288);
}

void sub_1B15BD4F4(void *a1, uint64_t a2, void *a3)
{
  UIScrollView *v4;
  id v5;

  v4 = a3;
  v5 = a1;
  MastheadViewController.scrollViewWillBeginDragging(_:)(v4);

}

void sub_1B15BD548()
{
  MastheadViewController.relayout(shouldBustLayoutCache:)(1);
}

void sub_1B15BD550(void *a1)
{
  id v1;

  v1 = a1;
  sub_1B15BD548();

}

void MastheadViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;

  v4 = v3;
  if (a2)
  {
    sub_1B16B983C();
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v3, a3);

  OUTLINED_FUNCTION_31();
}

void MastheadViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B15BD614(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  if (a3)
    sub_1B16B9860();
  v5 = a4;
  MastheadViewController.init(nibName:bundle:)();
}

id sub_1B15BD638()
{
  return MastheadViewController.pluginView.getter();
}

void sub_1B15BD658(id *a1)
{
  MastheadViewController.displayOptions.setter(*a1);
}

void MastheadViewController.displayOptions.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  char v4;

  v2 = *(void **)(v1 + qword_1ED180260);
  OUTLINED_FUNCTION_63_10();
  v3 = v2;
  v4 = sub_1B16BA214();

  if ((v4 & 1) != 0)
  else
    sub_1B15BC47C(a1);
}

void MastheadViewController.displayOptions.modify(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = MastheadViewController.displayOptions.getter();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15BD730(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    MastheadViewController.displayOptions.setter(v3);

  }
  else
  {
    MastheadViewController.displayOptions.setter(v2);
    OUTLINED_FUNCTION_7();
  }
}

Swift::Void __swiftcall MastheadViewController.setMastheadHidden(_:)(Swift::Bool a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + qword_1ED180250), sel_setHidden_, a1);
  sub_1B13F939C(0);
}

uint64_t (*sub_1B15BD7B8(id **a1))()
{
  id *v2;
  void *v3;

  v2 = (id *)malloc(0x28uLL);
  *a1 = v2;
  MastheadViewController.displayOptions.modify(v2);
  v2[4] = v3;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B15BD804(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  MastheadViewController.pluginPinningEnabled.modify();
  v2[4] = v3;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B15BD854(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  MastheadViewController.plugin.modify((uint64_t)v2);
  v2[4] = v3;
  return sub_1B13C6B28;
}

#error "1B15BD908: call analysis failed (funcsize=24)"

#error "1B15BD96C: call analysis failed (funcsize=24)"

void MastheadViewController.cardViewAnimationCoordinator(_:willTransitionTo:usingTimingParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  void (*v36)(uint64_t, char *, uint64_t, uint64_t, uint64_t);
  id v37;

  OUTLINED_FUNCTION_53_3();
  a22 = v24;
  a23 = v25;
  v27 = v26;
  v29 = v28;
  v31 = *v30;
  v32 = *(void **)(v23 + qword_1ED180248);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)v32))
  {
    v34 = v33;
    ObjectType = swift_getObjectType();
    a13 = v31;
    v36 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v34 + 32);
    v37 = v32;
    v36(v29, &a13, v27, ObjectType, v34);

  }
  OUTLINED_FUNCTION_18_1();
}

#error "1B15BDA64: call analysis failed (funcsize=24)"

void MastheadViewController.cardViewAnimationCoordinator(_:didDragTo:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, double);
  id v9;

  v6 = *(void **)(v2 + qword_1ED180248);
  OUTLINED_FUNCTION_4();
  if (OUTLINED_FUNCTION_35_19())
  {
    v7 = OUTLINED_FUNCTION_11_47();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v3 + 48);
    v9 = v6;
    v8(a1, v7, v3, a2);

  }
}

Swift::Void __swiftcall MastheadViewController.proxy(to:)(UIScrollView *to)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  sub_1B15BB624(&qword_1ED17D660, (void (*)(__int128 *, _BYTE *))sub_1B13C06D0, (uint64_t)&v19);
  if (v21)
  {
    OUTLINED_FUNCTION_56_15(v4, v5, v6, v7, v8, v9, v10, v11, v19, v20, v21, v22, v23[0]);
    v12 = v24;
    v13 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(UIScrollView *, uint64_t, uint64_t))(v13 + 8))(to, v12, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    sub_1B13C0E50((uint64_t)&v19, &qword_1ED17D818, (uint64_t)&qword_1ED17D660, (uint64_t)&protocol descriptor for GutterViewProxying);
  }
  sub_1B13B0AB8(to, v23);
  v14 = v1 + qword_1ED180270;
  OUTLINED_FUNCTION_13();
  sub_1B13FCE8C((uint64_t)v23, v14);
  swift_endAccess();
  v15 = objc_msgSend(*(id *)(v2 + qword_1ED180248), sel_view);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_layoutIfNeeded);

    sub_1B13F939C(1);
    v18 = OUTLINED_FUNCTION_32_0(v17, sel_view);
    if (v18)
    {

      OUTLINED_FUNCTION_44_16();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void MastheadViewController<>.identifier.getter()
{
  sub_1B16B81B0();
  OUTLINED_FUNCTION_7();
}

void sub_1B15BDCE8()
{
  MastheadViewController<>.identifier.getter();
}

void MastheadViewController<>.tabBarNavigationBarVisiblity.getter(uint64_t a1)
{
  _QWORD *v1;

  (*(void (**)(_QWORD, uint64_t))(a1 + 16))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50), a1);
  OUTLINED_FUNCTION_7();
}

void sub_1B15BDD5C(uint64_t a1, uint64_t a2)
{
  MastheadViewController<>.tabBarNavigationBarVisiblity.getter(*(_QWORD *)(a2 - 8));
}

void MastheadViewController<>.tabBarSplitViewPresentation(for:)(char a1, uint64_t a2)
{
  _QWORD *v2;

  (*(void (**)(_QWORD, _QWORD, uint64_t))(a2 + 8))(a1 & 1, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50), a2);
  OUTLINED_FUNCTION_7();
}

void sub_1B15BDDD4(char a1, uint64_t a2, uint64_t a3)
{
  MastheadViewController<>.tabBarSplitViewPresentation(for:)(a1 & 1, *(_QWORD *)(a3 - 8));
}

id MastheadViewController.responder.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED180248);
}

void MastheadViewController.plugin(_:didResizePluginModel:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = (uint64_t *)(v2 + qword_1ED17DF20);
  OUTLINED_FUNCTION_13();
  v7 = *v6;
  if (*v6
    && ((v8 = *(_QWORD *)(v7 + 16), v5 == v8) ? (v9 = v4 == *(_QWORD *)(v7 + 24)) : (v9 = 0),
        v9 || (sub_1B16BA910(v5, v4, v8) & 1) != 0))
  {
    if (qword_1ED17D7E8 != -1)
      swift_once();
    v10 = sub_1B16B8BC4();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED1903D8);
    swift_retain_n();
    OUTLINED_FUNCTION_51();
    v11 = sub_1B16B8BAC();
    v12 = sub_1B16BA058();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = OUTLINED_FUNCTION_11_3();
      v26 = OUTLINED_FUNCTION_11_3();
      *(_DWORD *)v13 = 136315394;
      v14 = sub_1B16B9740();
      *(_QWORD *)&v25 = OUTLINED_FUNCTION_69_13(v14, v15, &v26);
      sub_1B16BA34C();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_0_9();
      *(_WORD *)(v13 + 12) = 2080;
      v25 = *(_OWORD *)(a2 + 56);
      type metadata accessor for CGSize(0);
      v16 = sub_1B16B98B4();
      *(_QWORD *)&v25 = sub_1B13E208C(v16, v17, &v26);
      sub_1B16BA34C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_12();
      _os_log_impl(&dword_1B139E000, v11, v12, "Requesting a relayout for plugin, identifier=%s, newSize=%s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3_29();
    }
    OUTLINED_FUNCTION_0_9();
    OUTLINED_FUNCTION_71_12();

    v24 = swift_retain();
    sub_1B15BC03C(v24);
    sub_1B15BCBA8(a2);
  }
  else
  {
    if (qword_1ED17D7E8 != -1)
      swift_once();
    v18 = sub_1B16B8BC4();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED1903D8);
    OUTLINED_FUNCTION_51();
    v19 = sub_1B16B8BAC();
    v20 = sub_1B16BA040();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)OUTLINED_FUNCTION_11_3();
      *(_QWORD *)&v25 = OUTLINED_FUNCTION_11_3();
      *(_DWORD *)v21 = 136315138;
      v22 = sub_1B16B9740();
      v26 = OUTLINED_FUNCTION_69_13(v22, v23, (uint64_t *)&v25);
      sub_1B16BA34C();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_0_9();
      _os_log_impl(&dword_1B139E000, v19, v20, "Unexpected resize request from plugin identifier=%s", v21, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3_29();
    }
    OUTLINED_FUNCTION_0_9();

  }
  OUTLINED_FUNCTION_44_16();
}

uint64_t MastheadViewController.canShowStatusBanner.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  id v6;
  char v7;

  v2 = *(void **)(v0 + qword_1ED180248);
  OUTLINED_FUNCTION_45_17();
  result = dynamic_cast_existential_1_conditional((uint64_t)v2);
  if (result)
  {
    v4 = OUTLINED_FUNCTION_16_7();
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
    v6 = v2;
    v7 = v5(v4, v1);

    return v7 & 1;
  }
  return result;
}

Swift::Void __swiftcall MastheadViewController.onStatusBannerTap()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  id v5;

  v2 = *(void **)(v0 + qword_1ED180248);
  OUTLINED_FUNCTION_45_17();
  if (dynamic_cast_existential_1_conditional((uint64_t)v2))
  {
    v3 = OUTLINED_FUNCTION_16_7();
    v4 = *(void (**)(uint64_t))(v1 + 24);
    v5 = v2;
    v4(v3);

  }
}

void sub_1B15BE288()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  char *v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  double v18;
  id v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v14 = MastheadViewController.scrollView.getter();
  objc_opt_self();
  v1 = (void *)swift_dynamicCastObjCClass();
  if (!v1)
  {

    return;
  }
  v19 = objc_msgSend(v1, sel_collectionViewLayout);
  sub_1B13A1818(0, (unint64_t *)&qword_1ED1855C0);
  sub_1B13D5DBC(0, (unint64_t *)&qword_1ED185170);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;

    sub_1B13C0E50((uint64_t)&v15, &qword_1EEF342F0, (uint64_t)&qword_1ED185170, (uint64_t)&protocol descriptor for MastheadDyamicAwareObserver);
    return;
  }
  sub_1B13C06D0(&v15, (uint64_t)v20);
  sub_1B13FD158((uint64_t)&v0[qword_1ED180238], (uint64_t)&v15);
  v2 = *((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v3 = v17;
    __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
    v4 = objc_msgSend(v0, sel_view);
    if (!v4)
    {
      __break(1u);
      return;
    }
    v5 = v4;
    v6 = objc_msgSend(v4, sel_traitCollection);

    v7 = (*(double (**)(id, uint64_t, uint64_t))(v3 + 48))(v6, v2, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
  }
  else
  {
    sub_1B13C0E50((uint64_t)&v15, &qword_1ED181880, (uint64_t)&unk_1ED181878, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);
    v7 = 0.0;
  }
  v8 = &v0[qword_1ED185F88];
  swift_beginAccess();
  v9 = 0.0;
  if (*v8 == 1)
  {
    sub_1B15BC084();
    v9 = v10;
  }
  v11 = v21;
  v12 = v22;
  v13 = __swift_project_boxed_opaque_existential_1(v20, v21);
  MastheadViewController.layoutOptions.getter((uint64_t)v13, (uint64_t)&v15);
  sub_1B15BEC38((uint64_t)&v15);
  (*(void (**)(uint64_t, uint64_t, double))(v12 + 16))(v11, v12, v7 + v9 + v18);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

void sub_1B15BE510(uint64_t a1, void *a2)
{
  _BYTE *v3;
  char v4;

  v3 = MastheadViewController.displayOptions.getter();
  v4 = v3[OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode + 8];

  if ((v4 & 1) == 0)
    objc_msgSend(a2, sel_contentOffset);
}

void sub_1B15BE58C(char *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = *(void **)&a1[qword_1ED180248];
  v5 = objc_msgSend(v4, sel_navigationItem);
  v6 = objc_msgSend(v5, sel_searchController);

  v7 = 0;
  if (v6 && (v8 = objc_msgSend(a1, sel_navigationController)) != 0)
  {
    v9 = v8;
    objc_msgSend(v8, sel__expectedContentInsetDeltaForViewController_, v4);
    v7 = v10;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v17 = 0;
  }
  else
  {
    v17 = 1;
    v12 = 0;
    v14 = 0;
    v16 = 0;
  }
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v16;
  *(_BYTE *)(a2 + 32) = v17;
}

void sub_1B15BE684()
{
  char *v0;
  double *v1;
  char *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  UIScrollView *v27;
  CGRect v28;

  v1 = (double *)&v0[qword_1ED184A10];
  if ((v0[qword_1ED184A10 + 16] & 1) == 0)
  {
    v2 = v0;
    v3 = v1[1];
    sub_1B15BC084();
    if (v4 > 0.0)
    {
      v27 = (UIScrollView *)MastheadViewController.scrollView.getter();
      -[UIScrollView adjustedContentInset](v27, sel_adjustedContentInset);
      v6 = v5;
      v7 = objc_msgSend(v0, sel_view);
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v7, sel_safeAreaInsets);
        v10 = v9;

        v11 = v6 + v10;
        v12 = *(_QWORD *)&v2[qword_1ED1865A0 + 24];
        v13 = *(_QWORD *)&v2[qword_1ED1865A0 + 32];
        __swift_project_boxed_opaque_existential_1(&v2[qword_1ED1865A0], v12);
        v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
        objc_msgSend(v14, sel_frame);
        v16 = v15;
        v18 = v17;
        v20 = v19;
        v22 = v21;

        v28.origin.x = v16;
        v28.origin.y = v18;
        v28.size.width = v20;
        v28.size.height = v22;
        v23 = -(v11 - CGRectGetMaxY(v28));
        if (v3 <= v23)
          v24 = v3;
        else
          v24 = v23;
        -[UIScrollView setContentOffset:animated:](v27, sel_setContentOffset_animated_, 0, 0.0, v24);
        -[UIScrollView contentOffset](v27, sel_contentOffset);
        *(_QWORD *)v1 = v25;
        *((_QWORD *)v1 + 1) = v26;
        *((_BYTE *)v1 + 16) = 0;
        MastheadViewController.scrollViewDidScroll(_:)(v27);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1B15BE824(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;

  v3 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  if (result)
  {
    v5 = result;
    v6 = swift_retain();
    sub_1B15BC03C(v6);
    if (qword_1ED17D7E8 != -1)
      swift_once();
    v7 = sub_1B16B8BC4();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1903D8);
    swift_retain_n();
    v8 = sub_1B16B8BAC();
    v9 = sub_1B16BA034();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v15 = v11;
      *(_DWORD *)v10 = 136315138;
      v14 = *(_OWORD *)(a1 + 56);
      type metadata accessor for CGSize(0);
      v12 = sub_1B16B98B4();
      *(_QWORD *)&v14 = sub_1B13E208C(v12, v13, &v15);
      sub_1B16BA34C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B139E000, v8, v9, "Masthead plugin performed relayout, newSize=%s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v11, -1, -1);
      MEMORY[0x1B5E1F1FC](v10, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    objc_msgSend(*(id *)(v5 + qword_1ED187598), sel_setFrame_, 0.0, 0.0, *(double *)(a1 + 56), *(double *)(a1 + 64), v14, v15);
    PluginModel.viewController.getter();
  }
  return result;
}

void sub_1B15BEAEC(void *a1)
{
  bzero(a1, 0xDAuLL);
}

uint64_t sub_1B15BEAF4(uint64_t a1)
{
  sub_1B13F9A74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(void **)(a1 + 184));
  return a1;
}

uint64_t sub_1B15BEB6C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15BEB90(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15BC500(a1, *(_QWORD *)(v1 + 32));
}

void sub_1B15BEB9C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1B13C5C9C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15BEBF0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1B15BEC08(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 184);
  v3 = *(id *)(a1 + 64);
  v4 = v2;
  return a1;
}

uint64_t sub_1B15BEC38(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 64);

  return a1;
}

uint64_t sub_1B15BEC68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 232);
  v18 = *(_QWORD *)(a1 + 224);
  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 248);
  v5 = *(_QWORD *)(a1 + 256);
  v6 = *(_QWORD *)(a1 + 264);
  v7 = *(_QWORD *)(a1 + 272);
  v8 = *(_QWORD *)(a1 + 280);
  v16 = *(_OWORD *)(a1 + 304);
  v17 = *(_OWORD *)(a1 + 288);
  v14 = *(_OWORD *)(a1 + 336);
  v15 = *(_OWORD *)(a1 + 320);
  v12 = *(_OWORD *)(a1 + 368);
  v13 = *(_OWORD *)(a1 + 352);
  v10 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 384);
  sub_1B13F9A74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(void **)(a1 + 184));
  sub_1B13F9A74(v18, v2, v3, v4, v5, v6, v7, v8, (void *)v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((void **)&v10 + 1));
  return a1;
}

uint64_t sub_1B15BEDC8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(a1 + 64);
  v3 = *(void **)(a1 + 184);
  v4 = *(void **)(a1 + 256);

  return a1;
}

uint64_t sub_1B15BEE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for <> MastheadViewController<A>, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1B15BEE60(id *a1@<X8>)
{
  *a1 = MastheadViewController.displayOptions.getter();
  OUTLINED_FUNCTION_0_0();
}

uint64_t dispatch thunk of MastheadViewControllerType.updateMastheadViewScrollBehavior()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MastheadViewControllerType.displayOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MastheadViewControllerType.displayOptions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MastheadViewControllerType.displayOptions.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginPinningEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginPinningEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginPinningEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MastheadViewControllerType.plugin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MastheadViewControllerType.plugin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MastheadViewControllerType.plugin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of MastheadViewControllerType.scrollView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of MastheadViewControllerType.navigationItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of MastheadViewControllerType.contentHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of MastheadViewControllerType.setMastheadHidden(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of MastheadViewControllerType.relayout(shouldBustLayoutCache:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of MastheadViewControllerType.viewProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of MastheadViewControllerType.layoutOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t method lookup function for MastheadViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MastheadViewController.__allocating_init(rootViewController:viewProvider:miniMastheadViewProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_1B15BEF34()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15BEF60(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15BE824(a1, *(_QWORD *)(v1 + 32));
}

void sub_1B15BEF6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED186E70)
  {
    sub_1B145E2E4();
    v0 = sub_1B16BA70C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED186E70);
  }
}

uint64_t sub_1B15BEFCC(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1B15BB78C(a1, a2, *(id *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_1B15BEFE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15BF008(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15BC0A8(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1B15BF014(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1B15BB78C(a1, a2, *(id *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t ProcessedImageRequest.__allocating_init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v9;
  uint64_t v10;

  v9 = a4 & 1;
  v10 = swift_allocObject();
  ProcessedImageRequest.init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(a1, a2, a3, v9, a5);
  return v10;
}

uint64_t ProcessedImageRequest.assetHandles.getter()
{
  return sub_1B16B9740();
}

uint64_t ProcessedImageRequest.cacheIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1B16B9740();
  return v1;
}

uint64_t ProcessedImageRequest.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ProcessedImageRequest.imageRenderingMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t ProcessedImageRequest.init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  char v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = a4 & 1;
  sub_1B14EB214();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
  *(_QWORD *)(inited + 32) = 0x6567616D69;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_1B13B4DC0((uint64_t)a1, inited + 48);
  sub_1B14EB2CC();
  *(_QWORD *)(v5 + 16) = sub_1B16B9728();
  v12 = sub_1B15BF1E0(a2, a3, v10, a1);
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)(v5 + 24) = v12;
  *(_QWORD *)(v5 + 32) = v14;
  *(_QWORD *)(v5 + 40) = a2;
  *(_QWORD *)(v5 + 48) = a3;
  *(_BYTE *)(v5 + 56) = v10;
  *(_QWORD *)(v5 + 64) = a5;
  return v5;
}

uint64_t sub_1B15BF1E0(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;

  sub_1B15BF31C(a1, a2, a3 & 1);
  v5 = a4[3];
  v6 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  type metadata accessor for RenderingMode(0);
  sub_1B16BA6B8();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16BA8B0();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B15BF31C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return 0x64657A69736E75;
  type metadata accessor for CGSize(0);
  sub_1B16BA6B8();
  return 0;
}

uint64_t ProcessedImageRequest.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProcessedImageRequest.__deallocating_deinit()
{
  ProcessedImageRequest.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15BF3CC()
{
  return ProcessedImageRequest.assetHandles.getter();
}

uint64_t sub_1B15BF3EC()
{
  return ProcessedImageRequest.cacheIdentifier.getter();
}

uint64_t dispatch thunk of ProcessedImageRequestType.assetHandles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProcessedImageRequestType.cacheIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for ProcessedImageRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProcessedImageRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProcessedImageRequest.__allocating_init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 112))(a1, a2, a3, a4 & 1);
}

void KeyCommandScrollExclusionProvider.invalidator.getter()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B15BF47C()
{
  OUTLINED_FUNCTION_48();
}

void KeyCommandScrollExclusionProvider.invalidator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_24_8();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_90();
}

void KeyCommandScrollExclusionProvider.invalidator.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_23_6();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B15BF508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_31();
}

void KeyCommandScrollExclusionProvider.delegate.getter()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B15BF54C()
{
  OUTLINED_FUNCTION_48();
}

void KeyCommandScrollExclusionProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_24_8();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_90();
}

void KeyCommandScrollExclusionProvider.delegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_23_6();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B15BF5D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_31();
}

void sub_1B15BF5F4()
{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_16_17();
  *(_QWORD *)(v2 + 40) = v3;
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_24_5();
  }
  else
  {
    OUTLINED_FUNCTION_24_5();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_10_2(v0);
}

uint64_t KeyCommandScrollExclusionProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  KeyCommandScrollExclusionProvider.init()();
  return v0;
}

uint64_t KeyCommandScrollExclusionProvider.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 40) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t KeyCommandScrollExclusionProvider.register(in:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_7();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v1 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_21_4(v1);
  OUTLINED_FUNCTION_6_86();
  OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_7();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v2 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_21_4(v2);
  OUTLINED_FUNCTION_12_47();
  sub_1B144849C();
  OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_59();
  swift_release();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_7();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v3 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_21_4(v3);
  OUTLINED_FUNCTION_6_86();
  OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_59();
  swift_release();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_7();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(_QWORD *)(OUTLINED_FUNCTION_0_12() + 16) = v0;
  sub_1B144849C();
  OUTLINED_FUNCTION_3_31();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_7();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v4 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_21_4(v4);
  OUTLINED_FUNCTION_12_47();
  sub_1B144849C();
  OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_59();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_7();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(_QWORD *)(OUTLINED_FUNCTION_0_12() + 16) = v0;
  sub_1B144849C();
  OUTLINED_FUNCTION_3_31();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B15BF960()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15BF984()
{
  uint64_t v0;

  return sub_1B15BF9A8(*(_QWORD *)(v0 + 16), MEMORY[0x1E0DC4E30], 0);
}

uint64_t sub_1B15BF9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;

  v5 = swift_unownedRetainStrong() + 32;
  OUTLINED_FUNCTION_13();
  if (!MEMORY[0x1B5E1F2F8](v5))
    return OUTLINED_FUNCTION_0_9();
  v6 = *(_QWORD *)(a1 + 40);
  OUTLINED_FUNCTION_0_9();
  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_4_7();
  v8 = sub_1B16B9860();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, v8, v9, a3, ObjectType, v6);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_0_9();
  return swift_bridgeObjectRelease();
}

uint64_t KeyCommandScrollExclusionProvider.deinit()
{
  uint64_t v0;

  sub_1B13C076C(v0 + 16);
  sub_1B13C076C(v0 + 32);
  return v0;
}

uint64_t KeyCommandScrollExclusionProvider.__deallocating_deinit()
{
  uint64_t v0;

  sub_1B13C076C(v0 + 16);
  sub_1B13C076C(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1B15BFAD0()
{
  uint64_t v0;

  return sub_1B15BF9A8(*(_QWORD *)(v0 + 16), MEMORY[0x1E0DC4E30], 0x80000);
}

uint64_t sub_1B15BFAF4()
{
  uint64_t v0;

  return sub_1B15BF9A8(*(_QWORD *)(v0 + 16), MEMORY[0x1E0DC4E30], 0x100000);
}

uint64_t sub_1B15BFB18()
{
  uint64_t v0;

  return sub_1B15BF9A8(*(_QWORD *)(v0 + 16), MEMORY[0x1E0DC4D90], 0);
}

uint64_t sub_1B15BFB3C()
{
  uint64_t v0;

  return sub_1B15BF9A8(*(_QWORD *)(v0 + 16), MEMORY[0x1E0DC4D90], 0x80000);
}

uint64_t sub_1B15BFB60()
{
  uint64_t v0;

  return sub_1B15BF9A8(*(_QWORD *)(v0 + 16), MEMORY[0x1E0DC4D90], 0x100000);
}

uint64_t dispatch thunk of KeyCommandScrollExclusionProviderDelegate.keyCommandScrollExclusionProvider(_:handleKeyCommand:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for KeyCommandScrollExclusionProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for KeyCommandScrollExclusionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyCommandScrollExclusionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void ShineImageRendererPipelineProcessor.__allocating_init(rendererEnvironment:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1B13C06D0(a1, v2 + 16);
  OUTLINED_FUNCTION_0_0();
}

uint64_t ShineImageRendererPipelineProcessor.init(rendererEnvironment:)(__int128 *a1)
{
  uint64_t v1;

  sub_1B13C06D0(a1, v1 + 16);
  return v1;
}

uint64_t ShineImageRendererPipelineProcessor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ShineImageRendererPipelineProcessor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for ShineImageRendererPipelineProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShineImageRendererPipelineProcessor.__allocating_init(rendererEnvironment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t Route.activity.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Route.context.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_100();
  return v0;
}

uint64_t Route.setup.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_100();
  return v0;
}

uint64_t Route.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1405FC4(v2 + *(int *)(a1 + 44), a2);
}

uint64_t sub_1B15BFD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17;
  void (*v18)();
  uint64_t v19;
  uint64_t v20;
  int *v21;
  void (**v22)();
  uint64_t v23;
  void (*v24)(_QWORD *);
  uint64_t v25;
  uint64_t (**v26)(uint64_t);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(a9, a1, a7);
  if (a2)
  {
    v17 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = a3;
    v18 = sub_1B13CC340;
  }
  else
  {
    v17 = 0;
    v18 = (void (*)())nullsub_1;
  }
  v19 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v17;
  v21 = (int *)type metadata accessor for Route(0, a7, a8, v20);
  v22 = (void (**)())(a9 + v21[9]);
  *v22 = sub_1B13CC340;
  v22[1] = (void (*)())v19;
  if (a4)
  {
    v23 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)(v23 + 16) = a4;
    *(_QWORD *)(v23 + 24) = a5;
    v24 = sub_1B15C07D8;
  }
  else
  {
    v23 = 0;
    v24 = (void (*)(_QWORD *))nullsub_1;
  }
  v25 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = v23;
  v26 = (uint64_t (**)(uint64_t))(a9 + v21[10]);
  *v26 = sub_1B149D034;
  v26[1] = (uint64_t (*)(uint64_t))v25;
  return sub_1B13F77B0(a6, a9 + v21[11]);
}

void Route.replacing<A>(activity:)(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[32];

  MEMORY[0x1E0C80A78](a1, a1);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v12 + 16))(v11);
  v13 = a2[10];
  v14 = (uint64_t *)(v5 + a2[9]);
  v15 = *v14;
  v16 = v14[1];
  v17 = *(_QWORD *)(v5 + v13);
  v18 = *(_QWORD *)(v5 + v13 + 8);
  sub_1B1405FC4(v5 + a2[11], (uint64_t)v19);
  swift_retain();
  swift_retain();
  sub_1B15BFD08((uint64_t)v11, v15, v16, v17, v18, (uint64_t)v19, a3, a4, a5);
  OUTLINED_FUNCTION_47();
}

void Route.addingContext(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[32];

  v5 = v4;
  v28 = a1;
  v29 = a2;
  v30 = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 + 16);
  MEMORY[0x1E0C80A78](v9, v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v5, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v5, a3);
  v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  v20 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(v19 + 16) = v12;
  *(_QWORD *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v17, v10, a3);
  v21 = (_QWORD *)(v19 + v18);
  v22 = v29;
  *v21 = v28;
  v21[1] = v22;
  v23 = *(int *)(a3 + 44);
  v24 = (uint64_t *)(v5 + *(int *)(a3 + 40));
  v25 = *v24;
  v26 = v24[1];
  sub_1B1405FC4(v5 + v23, (uint64_t)v31);
  swift_retain();
  swift_retain();
  sub_1B15BFD08((uint64_t)v15, (uint64_t)sub_1B15C01A8, v19, v25, v26, (uint64_t)v31, v12, v20, v30);
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15C0084(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;

  v9 = type metadata accessor for Route(0, a5, a6, a4);
  (*(void (**)(uint64_t))(a2 + *(int *)(v9 + 36)))(a1);
  return a3(a1);
}

uint64_t sub_1B15C00E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for Route(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = v4
     + ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v7, v5);
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  v8 = v7 + *(int *)(v6 + 44);
  if (*(_QWORD *)(v8 + 24))
    __swift_destroy_boxed_opaque_existential_1(v8);
  OUTLINED_FUNCTION_37_1();
  return swift_deallocObject();
}

uint64_t sub_1B15C01A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(type metadata accessor for Route(0, v6, v7, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v4 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1B15C0084(a1, v4 + v9, *(uint64_t (**)(uint64_t))v10, *(_QWORD *)(v10 + 8), v6, v7);
}

uint64_t *sub_1B15C0218(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    v17 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_QWORD *)(v17 + 24);
    swift_retain();
    swift_retain();
    if (v18 < 0xFFFFFFFF)
    {
      v19 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v19;
    }
    else
    {
      *(_QWORD *)(v16 + 24) = v18;
      (**(void (***)(unint64_t, unint64_t, unint64_t))(v18 - 8))(v16, v17, v18);
    }
  }
  return v4;
}

unint64_t sub_1B15C034C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  result = (((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

uint64_t sub_1B15C03C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 24);
  swift_retain();
  swift_retain();
  if (v15 < 0xFFFFFFFF)
  {
    v16 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v16;
  }
  else
  {
    *(_QWORD *)(v13 + 24) = v15;
    (**(void (***)(unint64_t, unint64_t, unint64_t))(v15 - 8))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1B15C0494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  v13 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 24);
  if (*(_QWORD *)(v13 + 24) < 0xFFFFFFFFuLL)
  {
    if (v15 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(v13 + 24) = v15;
      (**(void (***)(unint64_t, unint64_t))(v15 - 8))(v13, ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
      return a1;
    }
LABEL_7:
    v16 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v16;
    return a1;
  }
  if (v15 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(v13);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)v13, (uint64_t *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1B15C05A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t sub_1B15C061C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v10 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  *v10 = *(_OWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v12 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_1(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *(_OWORD *)v12 = *v13;
  *(_OWORD *)(v12 + 16) = v14;
  return a1;
}

uint64_t sub_1B15C06CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 32) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B15C0758 + 4 * byte_1B16D59C8[v11]))();
  }
}

void sub_1B15C07D8(_QWORD *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 16))(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15C07F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15C0828(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  CGRect v41;
  CGRect v42;

  v12 = sub_1B16B7D60();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED17E140, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)v36 - v20;
  v40 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a1 + 16);
  v36[1] = a1;
  if (v22)
  {
    v23 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v24 = *(_QWORD *)(v13 + 72);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    sub_1B16B9740();
    v37 = v24;
    v38 = a2;
    while (1)
    {
      v39(v21, v23, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v12) == 1)
        goto LABEL_16;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v21, v12);
      v25 = *(_QWORD *)(a2 + 1136);
      if (*(_QWORD *)(v25 + 16))
      {
        v26 = sub_1B1426900();
        if ((v27 & 1) != 0)
        {
          v28 = *(id *)(*(_QWORD *)(v25 + 56) + 8 * v26);
          objc_msgSend(v28, sel_frame);
          v42.origin.x = v29;
          v42.origin.y = v30;
          v42.size.width = v31;
          v42.size.height = v32;
          v41.origin.x = a3;
          v41.origin.y = a4;
          v41.size.width = a5;
          v41.size.height = a6;
          if (CGRectIntersectsRect(v41, v42))
          {
            v33 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
            MEMORY[0x1B5E1D4C8](v33);
            if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1B16B9BCC();
            sub_1B16B9C08();
            sub_1B16B9B78();
            v24 = v37;
            a2 = v38;
            goto LABEL_12;
          }

          a2 = v38;
        }
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
LABEL_12:
      v23 += v24;
      if (!--v22)
        goto LABEL_15;
    }
  }
  sub_1B16B9740();
LABEL_15:
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v12);
LABEL_16:
  swift_bridgeObjectRelease();
  v34 = v40;
  sub_1B1448694(a2);
  return v34;
}

uint64_t sub_1B15C0AC0()
{
  sub_1B16B9740();
  sub_1B16B98FC();
  swift_bridgeObjectRelease();
  return sub_1B16BAA6C();
}

BOOL sub_1B15C0B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  char v9;
  _BOOL8 result;

  if (a1 == a3 && a2 == a4)
    return a5 == a6;
  v9 = sub_1B16BA910(a1, a2, a3);
  result = 0;
  if ((v9 & 1) != 0)
    return a5 == a6;
  return result;
}

uint64_t sub_1B15C0B74()
{
  sub_1B16BAA48();
  sub_1B16B9740();
  sub_1B16B98FC();
  swift_bridgeObjectRelease();
  sub_1B16BAA6C();
  return sub_1B16BAA78();
}

uint64_t sub_1B15C0BF0()
{
  return sub_1B15C0B74();
}

uint64_t sub_1B15C0BFC()
{
  return sub_1B15C0AC0();
}

uint64_t sub_1B15C0C08()
{
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_67_1();
  sub_1B16B98FC();
  swift_bridgeObjectRelease();
  sub_1B16BAA6C();
  return OUTLINED_FUNCTION_115();
}

BOOL sub_1B15C0C6C(uint64_t a1, uint64_t a2)
{
  return sub_1B15C0B2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t BlueprintLayoutCollectionInvalidator.__allocating_init(layoutCollectionProvider:impressionTracking:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_25();
  BlueprintLayoutCollectionInvalidator.init(layoutCollectionProvider:impressionTracking:)(a1, a2, a3);
  return v6;
}

uint64_t BlueprintLayoutCollectionInvalidator.invalidate(collectionView:newSize:resizingIdentifier:resizingGroupIdentifier:animator:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];
  _QWORD v36[147];
  _BYTE v37[525];
  _BYTE v38[1184];

  v12 = sub_1B16B95D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  OUTLINED_FUNCTION_4_84();
  v15 = sub_1B16B9620();
  v34 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_77();
  v33 = v19 - v18;
  sub_1B16B82DC();
  memcpy(v38, v36, 0x498uLL);
  memcpy(v37, &v38[568], sizeof(v37));
  sub_1B1424D1C((uint64_t)&v38[568]);
  sub_1B1448694((uint64_t)v38);
  if (!a5)
    return sub_1B1417ADC((uint64_t)&v38[568]);
  v28 = v13;
  if (v38[569])
  {
    if (v38[569] == 1)
      v20 = &v38[624];
    else
      v20 = &v38[656];
  }
  else
  {
    v20 = &v38[576];
  }
  v22 = *(_QWORD *)v20;
  v23 = OUTLINED_FUNCTION_25();
  swift_weakInit();
  v24 = OUTLINED_FUNCTION_25();
  swift_unknownObjectWeakInit();
  sub_1B15C1568(a8, (uint64_t)v35);
  v25 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v25 + 16) = v23;
  *(_QWORD *)(v25 + 24) = v24;
  memcpy((void *)(v25 + 32), v37, 0x20DuLL);
  *(_QWORD *)(v25 + 560) = a4;
  *(_QWORD *)(v25 + 568) = a5;
  *(_QWORD *)(v25 + 576) = v22;
  *(double *)(v25 + 584) = a1;
  *(double *)(v25 + 592) = a2;
  *(_QWORD *)(v25 + 600) = a6;
  *(_QWORD *)(v25 + 608) = a7;
  sub_1B15C1640((uint64_t)v35, v25 + 616);
  v36[4] = sub_1B15C167C;
  v36[5] = v25;
  v36[0] = MEMORY[0x1E0C809B0];
  v36[1] = 1107296256;
  v36[2] = sub_1B13F00E4;
  v36[3] = &block_descriptor_54;
  v26 = _Block_copy(v36);
  sub_1B1424D1C((uint64_t)&v38[568]);
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_184();
  swift_retain();
  swift_retain();
  sub_1B16B95F0();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED183708, v27, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B13FF59C((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v27);
  sub_1B16BA448();
  sub_1B16BA094();
  _Block_release(v26);
  sub_1B1417ADC((uint64_t)&v38[568]);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v8, v12);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v15);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B15C104C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15C1070()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B15C1094(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  id v23;
  double v24;
  double *v25;
  double *v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  char v31;
  char v32;
  BOOL v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _BYTE v46[48];
  _QWORD __dst[147];
  double __src[147];
  uint64_t v49[148];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v21 = Strong;
    swift_beginAccess();
    v22 = MEMORY[0x1B5E1F2F8](a5 + 16);
    if (!v22)
    {
      swift_release();
      return;
    }
    v23 = (id)v22;
    dispatch_group_enter(*(dispatch_group_t *)(v21 + 72));
    swift_retain();
    sub_1B16B8090();
    swift_release();
    sub_1B16B82DC();
    if (BYTE1(__src[71]) == 1)
      v24 = __src[78];
    else
      v24 = __src[82];
    if (!BYTE1(__src[71]))
      v24 = __src[72];
    v25 = (double *)(a6 + 56);
    if (*(_BYTE *)(a6 + 1) != 1)
      v25 = (double *)(a6 + 88);
    if (*(_BYTE *)(a6 + 1))
      v26 = v25;
    else
      v26 = (double *)(a6 + 8);
    if (v24 != *v26)
      goto LABEL_30;
    v45 = a11;
    swift_beginAccess();
    v27 = *(_QWORD *)(v21 + 24);
    sub_1B16B9740();
    v28 = COERCE_DOUBLE(sub_1B146AE44(a1, a7, a8, v27));
    v30 = v29;
    v32 = v31;
    swift_endAccess();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0 || (v28 == a2 ? (v33 = v30 == a3) : (v33 = 0), !v33))
    {
      swift_beginAccess();
      sub_1B16B9740();
      sub_1B148A890(a2, a3, a1);
      swift_endAccess();
      swift_bridgeObjectRelease();
      if (a10)
      {
        if (BYTE1(__src[71]) == 1)
          v34 = __src[78];
        else
          v34 = __src[82];
        if (BYTE1(__src[71]))
          v35 = v34;
        else
          v35 = __src[72];
        swift_beginAccess();
        v36 = *(_QWORD *)(v21 + 32);
        v37 = *(_QWORD *)(v36 + 16);
        swift_bridgeObjectRetain_n();
        if (v37 && (v38 = sub_1B148C108(v35), (v39 & 1) != 0))
        {
          v40 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v38);
          sub_1B16B9740();
        }
        else
        {
          v40 = MEMORY[0x1E0DEE9E8];
        }
        swift_bridgeObjectRelease();
        __dst[0] = v40;
        swift_endAccess();
        sub_1B16B9740();
        sub_1B14274DC(v49, a7, a8);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_1B148A830(v35);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      memcpy(__dst, __src, sizeof(__dst));
      sub_1B142B070(__dst, v49);
      sub_1B1404978();
      v41 = sub_1B16BA0DC();
      sub_1B15C1568(v45, (uint64_t)v46);
      v42 = (_QWORD *)swift_allocObject();
      v42[2] = v21;
      v42[3] = v23;
      memcpy(v42 + 4, __src, 0x498uLL);
      memcpy(v42 + 151, v49, 0x498uLL);
      sub_1B15C1640((uint64_t)v46, (uint64_t)(v42 + 298));
      v43 = swift_allocObject();
      *(_QWORD *)(v43 + 16) = sub_1B15C6368;
      *(_QWORD *)(v43 + 24) = v42;
      __dst[4] = sub_1B140AA30;
      __dst[5] = v43;
      __dst[0] = MEMORY[0x1E0C809B0];
      __dst[1] = 1107296256;
      __dst[2] = sub_1B140AA14;
      __dst[3] = &block_descriptor_15_0;
      v44 = _Block_copy(__dst);
      swift_retain();
      v23 = v23;
      sub_1B1448894((uint64_t)__src);
      sub_1B1448894((uint64_t)v49);
      swift_retain();
      swift_release();
      dispatch_sync((dispatch_queue_t)v41, v44);

      _Block_release(v44);
      LOBYTE(v41) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v41 & 1) != 0)
      {
        __break(1u);
        return;
      }
      swift_retain();
      sub_1B16B809C();
      swift_release();
      sub_1B1448694((uint64_t)v49);
      sub_1B1448694((uint64_t)__src);
      swift_release();
    }
    else
    {
LABEL_30:
      dispatch_group_leave(*(dispatch_group_t *)(v21 + 72));
      swift_retain();
      sub_1B16B809C();
      swift_release();
      sub_1B1448694((uint64_t)__src);
    }
    swift_release();

  }
}

uint64_t sub_1B15C1568(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BlueprintLayoutCollectionInvalidatorAnimator(a2, a1);
  return a2;
}

uint64_t sub_1B15C15A4()
{
  uint64_t v0;
  id *v1;
  int v2;

  OUTLINED_FUNCTION_1_1();
  swift_release();

  sub_1B14262CC(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_BYTE *)(v0 + 280));
  sub_1B14262CC(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), *(_BYTE *)(v0 + 304));
  sub_1B14262CC(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320), *(_BYTE *)(v0 + 328));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (id *)(v0 + 616);
  v2 = *(unsigned __int8 *)(v0 + 656);
  if (v2 == 2)
  {

  }
  else if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1B15C1640(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

void sub_1B15C167C()
{
  uint64_t v0;

  sub_1B15C1094(*(double *)(v0 + 576), *(double *)(v0 + 584), *(double *)(v0 + 592), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32, *(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 608), v0 + 616);
}

void sub_1B15C16A8(uint64_t a1, void *a2, void *__src, const void *a4)
{
  id v7;
  _BYTE *v8;
  uint64_t ObjectType;
  uint64_t v10;
  id v11;
  id v12;
  _BYTE v13[1176];
  _BYTE v14[1184];

  memcpy(v14, __src, 0x498uLL);
  memcpy(v13, a4, sizeof(v13));
  v7 = sub_1B15C18B8(a2, v14, (uint64_t)v13);
  v8 = (_BYTE *)(*(_QWORD *)(a1 + 40) + 16);
  swift_beginAccess();
  *v8 = 1;
  memcpy(v14, a4, 0x498uLL);
  swift_retain();
  sub_1B16B82B8();
  swift_release();
  if (v7)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x1E0C80A78](ObjectType, v10);
    v11 = v7;
    BlueprintImpressionTracking.performWithoutImpressions(block:)();
    *v8 = 0;
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));

  }
  else
  {
    v12 = objc_msgSend(a2, sel_collectionViewLayout);
    objc_msgSend(v12, sel_invalidateLayout);

    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    BlueprintLayoutCollectionInvalidatorAnimator.animate(animations:completion:)();
    swift_release_n();
    swift_release_n();
  }
}

id sub_1B15C18B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  unint64_t v51;
  char v52;
  double v53;
  void *v54;
  void (*v55)(char *, uint64_t);
  id v56;
  double v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[1176];
  CGRect v66;
  CGRect v67;

  v6 = sub_1B16B7D60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v65, a2, sizeof(v65));
  v11 = *(_QWORD *)(a3 + 1136);
  objc_msgSend(a1, sel_adjustedContentInset);
  v13 = v12;
  objc_msgSend(a1, sel_contentOffset);
  v15 = v14;
  v16 = objc_msgSend(a1, sel_bounds);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = sub_1B141C380((uint64_t)v16);
  v27 = UIEdgeInsetsInsetRect(v18, v20, v22, v24, v25, v26);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  objc_msgSend(a1, sel_safeAreaInsets);
  v36 = UIEdgeInsetsInsetRect(v27, v29, v31, v33, v34, v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = objc_msgSend(a1, sel_indexPathsForVisibleItems);
  v44 = sub_1B16B9B54();

  sub_1B1448894((uint64_t)v65);
  v45 = sub_1B15C0828(v44, (uint64_t)v65, v36, v38, v40, v42);
  swift_bridgeObjectRelease();
  if (v45 < 0 || (v45 & 0x4000000000000000) != 0)
  {
    v59 = sub_1B16B9740();
    sub_1B148C928(v59);
    v46 = v60;
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = v45 & 0xFFFFFFFFFFFFFF8;
    sub_1B16B9740();
  }
  v64 = v46;
  sub_1B15C3F4C(&v64, sub_1B15C4818);
  swift_bridgeObjectRelease();
  v47 = v64;
  if ((v64 & 0x8000000000000000) == 0 && (v64 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v64 + 16))
      goto LABEL_7;
LABEL_17:
    swift_release();
    return 0;
  }
  sub_1B16B9740();
  v61 = sub_1B16BA76C();
  swift_release();
  if (!v61)
    goto LABEL_17;
LABEL_7:
  sub_1B13C6B9C(0, (v47 & 0xC000000000000001) == 0, v47);
  if ((v47 & 0xC000000000000001) != 0)
    v48 = (id)MEMORY[0x1B5E1DF60](0, v47);
  else
    v48 = *(id *)(v47 + 32);
  v49 = v48;
  swift_release();
  v50 = objc_msgSend(v49, sel_indexPath);
  sub_1B16B7D0C();

  if (!*(_QWORD *)(v11 + 16) || (v51 = sub_1B1426900(), (v52 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

    return 0;
  }
  v53 = v13 + v15;
  v54 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v51);
  v55 = *(void (**)(char *, uint64_t))(v7 + 8);
  v56 = v54;
  v55(v10, v6);
  objc_msgSend(v49, sel_frame);
  v57 = v53 - CGRectGetMinY(v66);
  objc_msgSend(v56, sel_frame);
  if (v57 - (v53 - CGRectGetMinY(v67)) == 0.0)
  {

    return 0;
  }
  v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3630]), sel_init);
  objc_msgSend(v58, sel_contentOffsetAdjustment);
  objc_msgSend(v58, sel_setContentOffsetAdjustment_);

  return v58;
}

id sub_1B15C1C70(void *a1, uint64_t a2)
{
  id v4;

  v4 = objc_msgSend(a1, sel_collectionViewLayout);
  objc_msgSend(v4, sel_invalidateLayoutWithContext_, a2);

  return objc_msgSend(a1, sel_layoutIfNeeded);
}

void sub_1B15C1CD0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1B5E1F2F8](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_layoutIfNeeded);

  }
}

void sub_1B15C1D28()
{
  uint64_t Strong;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = *(_QWORD *)(Strong + 40);
    swift_retain();
    swift_release();
    swift_beginAccess();
    *(_BYTE *)(v1 + 16) = 0;
    swift_release();
  }
  swift_beginAccess();
  v2 = swift_weakLoadStrong();
  if (v2)
  {
    v3 = *(id *)(v2 + 72);
    swift_release();
    dispatch_group_leave(v3);

  }
}

uint64_t sub_1B15C1DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  sub_1B16B9740();
  sub_1B13FD970(a1, a2, a3);
  LOBYTE(a3) = v6;
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_1B15C1E44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  char *v25;
  uint64_t v26;
  double v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  double v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  double v65;
  double v66;
  char v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  double v73;
  double v74;
  char v75;
  char v76;
  BOOL v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  unint64_t v87;
  char v88;
  char v89;
  unint64_t v90;
  char v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t i;
  int64_t v115;
  unint64_t v116;
  int64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  void *v123;
  uint64_t v124;
  char v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  unint64_t j;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  double v140;
  double v141;
  unint64_t v142;
  char v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  CGFloat v147;
  double v148;
  CGFloat v149;
  double v150;
  double v151;
  char v152;
  double v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  double v161;
  uint64_t v162;
  __int128 v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  double v167;
  double v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  unint64_t v172;
  char v173;
  unint64_t v174;
  char v175;
  unint64_t v176;
  char v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  char v189;
  unint64_t v190;
  unint64_t v191;
  char v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  unint64_t v203;
  char v204;
  unint64_t v205;
  char v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  unint64_t v212;
  char v213;
  unint64_t v214;
  char v215;
  char v216;
  unint64_t v217;
  char v218;
  _QWORD *v219;
  void *v220;
  uint64_t v221;
  uint64_t v222;
  double v223;
  double MaxX;
  double v225;
  double MaxY;
  double v227;
  uint64_t result;
  __int128 v229;
  void *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  double v235;
  uint64_t v236;
  unint64_t v237;
  unint64_t v238;
  char *v239;
  uint64_t v240;
  int64_t v241;
  uint64_t v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246[66];
  _QWORD v247[20];
  _QWORD *v248;
  _QWORD v249[21];
  _BYTE v250[527];
  _QWORD v251[147];
  _BYTE v252[536];
  CGRect v253;
  CGRect v254;
  CGRect v255;

  v230 = a2;
  v3 = sub_1B16B7D60();
  v240 = *(_QWORD *)(v3 - 8);
  v241 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v239 = (char *)&v229 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_BYTE *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v234 = *(_QWORD *)(a1 + 32);
  memcpy(v252, (const void *)(a1 + 568), 0x20DuLL);
  v8 = (void *)objc_opt_self();
  sub_1B1424D1C((uint64_t)v252);
  sub_1B1424D1C((uint64_t)v252);
  v9 = sub_1B142A1BC(objc_msgSend(v8, sel_mainBundle));
  if (v10)
  {
    if (v9 == 0xD000000000000010 && v10 == 0x80000001B16E7C10)
      v11 = 1;
    else
      v11 = sub_1B16BA910(v9, v10, 0xD000000000000010, 0x80000001B16E7C10, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  memcpy(&v251[5], v252, 0x20DuLL);
  memcpy(&v250[2], v252, 0x20DuLL);
  v251[1] = 0;
  v251[0] = 0;
  LOBYTE(v251[2]) = v6;
  v251[3] = MEMORY[0x1E0DEE9D8];
  v251[4] = MEMORY[0x1E0DEE9E0];
  BYTE5(v251[70]) = v6;
  memcpy((char *)&v251[70] + 6, v250, 0x20FuLL);
  BYTE5(v251[136]) = v6;
  BYTE6(v251[136]) = v11 & 1;
  v251[137] = MEMORY[0x1E0DEE9E0];
  v251[138] = MEMORY[0x1E0DEE9E0];
  v251[139] = MEMORY[0x1E0DEE9E0];
  v251[140] = MEMORY[0x1E0DEE9E0];
  v251[141] = MEMORY[0x1E0DEE9E0];
  v251[142] = MEMORY[0x1E0DEE9E0];
  v251[143] = MEMORY[0x1E0DEE9E0];
  v251[144] = MEMORY[0x1E0DEE9E0];
  v251[145] = MEMORY[0x1E0DEE9E0];
  v251[146] = MEMORY[0x1E0DEE9E0];
  if ((v7 & 0x8000000000000000) != 0 || (v7 & 0x4000000000000000) != 0)
    goto LABEL_85;
  v12 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n();
LABEL_11:
  v246[0] = v12;
  sub_1B15C3F4C(v246, sub_1B15C3FC8);
  swift_bridgeObjectRelease();
  v13 = v246[0];
  if (v246[0] < 0 || (v246[0] & 0x4000000000000000) != 0)
  {
    sub_1B16B9740();
    *(double *)&v14 = COERCE_DOUBLE(sub_1B16BA76C());
    swift_release();
    if (*(double *)&v14 != 0.0)
      goto LABEL_14;
  }
  else
  {
    v14 = *(uint64_t *)(v246[0] + 16);
    if (*(double *)&v14 != 0.0)
    {
LABEL_14:
      v15 = v13 & 0xC000000000000001;
      v16 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v17 = 0.0;
      v18 = 4;
      v242 = MEMORY[0x1E0DEE9B8] + 8;
      v19 = MEMORY[0x1E0DEE9E0];
      v236 = v13;
      v237 = MEMORY[0x1E0DEE9E0];
      v231 = MEMORY[0x1E0DEE9E0];
      v235 = *(double *)&v14;
      v238 = v13 & 0xC000000000000001;
      while (1)
      {
        v7 = v18 - 4;
        if (v15)
          v20 = (char *)MEMORY[0x1B5E1DF60](v18 - 4, v13);
        else
          v20 = (char *)*(id *)(v13 + 8 * v18);
        v21 = v20;
        v22 = v18 - 3;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          swift_bridgeObjectRetain_n();
          sub_1B148C928(v7);
          v12 = v106;
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        objc_msgSend(v20, sel_copy);
        sub_1B16BA3AC();
        swift_unknownObjectRelease();
        type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
        if (swift_dynamicCast())
        {
          v244 = v18 - 3;
          v245 = v19;
          v23 = (char *)v249[0];
          v24 = objc_msgSend(v21, sel_indexPath);
          v25 = v239;
          sub_1B16B7D0C();

          v26 = sub_1B16B7D48();
          (*(void (**)(char *, int64_t))(v240 + 8))(v25, v241);
          v27 = v17;
          if (v16[2])
          {
            v28 = sub_1B1425D68(v26);
            v27 = v17;
            if ((v29 & 1) != 0)
              v27 = *(double *)(v16[7] + 8 * v28);
          }
          swift_isUniquelyReferenced_nonNull_native();
          v246[0] = (uint64_t)v16;
          v30 = v26;
          v7 = (unint64_t)v16;
          v31 = sub_1B1425D68(v26);
          if (__OFADD__(v16[2], (v32 & 1) == 0))
            goto LABEL_81;
          v33 = v31;
          v34 = v32;
          sub_1B15C607C(0, &qword_1EEF31C80);
          v7 = (unint64_t)v246;
          v35 = sub_1B16BA6E8();
          v19 = v245;
          if ((v35 & 1) != 0)
          {
            v7 = v246[0];
            v36 = sub_1B1425D68(v30);
            if ((v34 & 1) != (v37 & 1))
              goto LABEL_219;
            v33 = v36;
          }
          v16 = (_QWORD *)v246[0];
          if ((v34 & 1) != 0)
          {
            *(double *)(*(_QWORD *)(v246[0] + 56) + 8 * v33) = v27;
          }
          else
          {
            *(_QWORD *)(v246[0] + 8 * (v33 >> 6) + 64) |= 1 << v33;
            *(_QWORD *)(v16[6] + 8 * v33) = v30;
            *(double *)(v16[7] + 8 * v33) = v27;
            v38 = v16[2];
            v39 = __OFADD__(v38, 1);
            v40 = v38 + 1;
            if (v39)
              goto LABEL_82;
            v16[2] = v40;
          }
          swift_bridgeObjectRelease();
          v41 = OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_originalFrame;
          v42 = (double *)&v21[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_originalFrame];
          v22 = v244;
          if ((v21[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_originalFrame + 32] & 1) != 0)
          {
            objc_msgSend(v21, sel_frame);
            v44 = v43;
            v46 = v45;
            v48 = v47;
            v50 = v49;
            v41 = OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_originalFrame;
          }
          else
          {
            v48 = v42[2];
            v50 = v42[3];
            v44 = *v42;
            v46 = v42[1];
          }
          v51 = (double *)&v23[v41];
          *v51 = v44;
          v51[1] = v46;
          v51[2] = v48;
          v51[3] = v50;
          *((_BYTE *)v51 + 32) = 0;
          objc_msgSend(v21, sel_frame);
          v52 = &v23[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_previousFrame];
          *(_QWORD *)v52 = v53;
          *((_QWORD *)v52 + 1) = v54;
          *((_QWORD *)v52 + 2) = v55;
          *((_QWORD *)v52 + 3) = v56;
          v52[32] = 0;
          v57 = objc_msgSend(v21, sel_representedElementCategory);
          if (!v57)
          {
            v243 = v16;
            memcpy(v246, v252, 0x20DuLL);
            sub_1B1424D1C((uint64_t)v252);
            sub_1B15C340C((uint64_t)v21, v246);
            v66 = v65;
            v68 = v67;
            sub_1B1417ADC((uint64_t)v252);
            if ((v68 & 1) != 0)
            {
              objc_msgSend(v23, sel_setFrame_, v44, v17 + v46, v48, v50);
              BlueprintLayoutCollection.add(layoutAttributes:)(v23);

              v16 = v243;
              v19 = v245;
              goto LABEL_54;
            }
            v69 = (uint64_t *)&v21[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_resizingGroupIdentifier];
            v70 = *(_QWORD *)&v21[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_resizingGroupIdentifier
                                + 8];
            v71 = v17;
            if (v70)
            {
              v72 = *v69;
              sub_1B16B9740();
              sub_1B13A92D8(v72, v70, v231);
              v74 = v73;
              v76 = v75;
              swift_bridgeObjectRelease();
              v71 = v74;
              v77 = (v76 & 1) == 0;
              v22 = v244;
              if (!v77)
                v71 = v17;
            }
            objc_msgSend(v23, sel_setFrame_, v44, v46 + v71, v48, v66);
            BlueprintLayoutCollection.add(layoutAttributes:)(v23);
            v253.origin.x = v44;
            v253.origin.y = v46;
            v253.size.width = v48;
            v253.size.height = v50;
            v78 = v66 - CGRectGetHeight(v253);
            v79 = v69[1];
            if (!v79)
            {
              v96 = v245;
              v97 = 0.0;
              v16 = v243;
              if (*(_QWORD *)(v245 + 16))
              {
                v98 = sub_1B1425D68(v30);
                *(double *)&v14 = v235;
                if ((v99 & 1) != 0)
                  v97 = *(double *)(*(_QWORD *)(v96 + 56) + 8 * v98);
              }
              else
              {
                *(double *)&v14 = v235;
              }
              swift_isUniquelyReferenced_nonNull_native();
              v246[0] = v96;
              sub_1B14CD450(v30, v78 + v97);
              v19 = v246[0];

              swift_bridgeObjectRelease();
              v17 = v17 + v78;
              goto LABEL_55;
            }
            v80 = *v69;
            sub_1B16B9740();
            v81 = v231;
            sub_1B13A92D8(v80, v79, v231);
            v16 = v243;
            if ((v82 & 1) == 0)
            {

              swift_bridgeObjectRelease();
              v22 = v244;
              v19 = v245;
              goto LABEL_40;
            }
            swift_isUniquelyReferenced_nonNull_native();
            v246[0] = v81;
            sub_1B14CD388(v17);
            v100 = v246[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v101 = v245;
            v102 = *(_QWORD *)(v245 + 16);
            v103 = 0.0;
            v231 = v100;
            if (v102)
            {
              v104 = sub_1B1425D68(v30);
              *(double *)&v14 = v235;
              v22 = v244;
              if ((v105 & 1) != 0)
                v103 = *(double *)(*(_QWORD *)(v101 + 56) + 8 * v104);
            }
            else
            {
              *(double *)&v14 = v235;
              v22 = v244;
            }
            swift_isUniquelyReferenced_nonNull_native();
            v246[0] = v101;
            sub_1B14CD450(v30, v78 + v103);
            v19 = v246[0];

            swift_bridgeObjectRelease();
            v17 = v17 + v78;
            v13 = v236;
LABEL_41:
            v15 = v238;
            goto LABEL_68;
          }
          v58 = v17 + v46;
          if (v57 != (id)2)
          {
            if (v57 != (id)1)
            {

LABEL_54:
              *(double *)&v14 = v235;
LABEL_55:
              v15 = v238;
              v13 = v236;
              goto LABEL_68;
            }
            objc_msgSend(v23, sel_setFrame_, v44, v58, v48, v50);
            v59 = v21;
            v60 = sub_1B15C5F30(v59);
            if (!v61)
              goto LABEL_218;
            BlueprintLayoutCollection.add(supplementaryLayoutAttributes:for:)(v23, v60, v61);
            swift_bridgeObjectRelease();

LABEL_40:
            *(double *)&v14 = v235;
            v13 = v236;
            goto LABEL_41;
          }
          objc_msgSend(v23, sel_setFrame_, v44, v58, v48, v50);
          v62 = v237;
          if (*(_QWORD *)(v237 + 16))
          {
            sub_1B1425D68(v30);
            v63 = MEMORY[0x1E0DEE9D8];
            if ((v64 & 1) != 0)
              v63 = sub_1B16B9740();
          }
          else
          {
            v63 = MEMORY[0x1E0DEE9D8];
          }
          v243 = v16;
          v246[0] = v63;
          v83 = v23;
          MEMORY[0x1B5E1D4C8]();
          if (*(_QWORD *)((v246[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v246[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B16B9BCC();
          v233 = v83;
          sub_1B16B9C08();
          sub_1B16B9B78();
          v84 = v246[0];
          swift_isUniquelyReferenced_nonNull_native();
          v7 = v62;
          v249[0] = v62;
          v85 = sub_1B1425D68(v30);
          if (__OFADD__(*(_QWORD *)(v62 + 16), (v86 & 1) == 0))
            goto LABEL_83;
          v87 = v85;
          v88 = v86;
          sub_1B15C600C(0, (unint64_t *)&qword_1ED186F30, &qword_1ED1836D8, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintLayoutCollectionLayoutAttributes);
          v7 = (unint64_t)v249;
          v89 = sub_1B16BA6E8();
          v19 = v245;
          v15 = v238;
          if ((v89 & 1) != 0)
          {
            v7 = v249[0];
            v90 = sub_1B1425D68(v30);
            if ((v88 & 1) != (v91 & 1))
              goto LABEL_219;
            v87 = v90;
          }
          v92 = (_QWORD *)v249[0];
          v237 = v249[0];
          if ((v88 & 1) != 0)
          {
            v93 = *(_QWORD *)(v249[0] + 56);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v93 + 8 * v87) = v84;
          }
          else
          {
            *(_QWORD *)(v249[0] + 8 * (v87 >> 6) + 64) |= 1 << v87;
            *(_QWORD *)(v92[6] + 8 * v87) = v30;
            *(_QWORD *)(v92[7] + 8 * v87) = v84;
            v94 = v92[2];
            v39 = __OFADD__(v94, 1);
            v95 = v94 + 1;
            if (v39)
              goto LABEL_84;
            v92[2] = v95;
          }

          swift_bridgeObjectRelease();
          v16 = v243;
          v22 = v244;
          *(double *)&v14 = v235;
          v13 = v236;
        }
        else
        {

        }
LABEL_68:
        ++v18;
        if (v22 == v14)
          goto LABEL_88;
      }
    }
  }
  v16 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v19 = MEMORY[0x1E0DEE9E0];
  v237 = MEMORY[0x1E0DEE9E0];
  v231 = MEMORY[0x1E0DEE9E0];
LABEL_88:
  swift_release();
  v107 = *(_QWORD *)(v237 + 64);
  v240 = v237 + 64;
  v108 = 1 << *(_BYTE *)(v237 + 32);
  v109 = -1;
  if (v108 < 64)
    v109 = ~(-1 << v108);
  v110 = v109 & v107;
  v241 = (unint64_t)(v108 + 63) >> 6;
  sub_1B16B9740();
  v111 = 0;
  v243 = v16;
  v245 = v19;
  if (!v110)
    goto LABEL_92;
LABEL_91:
  v112 = __clz(__rbit64(v110));
  v113 = (v110 - 1) & v110;
  for (i = v112 | (v111 << 6); ; i = __clz(__rbit64(v116)) + (v111 << 6))
  {
    v242 = v113;
    v244 = v111;
    v118 = *(_QWORD *)(*(_QWORD *)(v237 + 48) + 8 * i);
    v119 = *(_QWORD *)(*(_QWORD *)(v237 + 56) + 8 * i);
    if (v119 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v120 = sub_1B16BA76C();
      swift_bridgeObjectRelease();
      if (v120)
      {
LABEL_108:
        v121 = 4;
        while (1)
        {
          v122 = (v119 & 0xC000000000000001) != 0
               ? (id)MEMORY[0x1B5E1DF60](v121 - 4, v119)
               : *(id *)(v119 + 8 * v121);
          v123 = v122;
          v124 = v121 - 3;
          if (__OFADD__(v121 - 4, 1))
            break;
          if (*(_QWORD *)(v19 + 16))
          {
            sub_1B1425D68(v118);
            if ((v125 & 1) != 0)
            {
              objc_msgSend(v123, sel_frame);
              objc_msgSend(v123, sel_setFrame_);
            }
          }
          v126 = v123;
          v127 = sub_1B15C5F30(v126);
          if (!v128)
            goto LABEL_216;
          BlueprintLayoutCollection.add(decorationLayoutAttributes:for:)((char *)v126, v127, v128);

          swift_bridgeObjectRelease();
          ++v121;
          v19 = v245;
          if (v124 == v120)
            goto LABEL_118;
        }
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
        goto LABEL_214;
      }
    }
    else
    {
      v120 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1B16B9740();
      if (v120)
        goto LABEL_108;
    }
LABEL_118:
    swift_bridgeObjectRelease();
    v16 = v243;
    v111 = v244;
    v110 = v242;
    if (v242)
      goto LABEL_91;
LABEL_92:
    v115 = v111 + 1;
    if (__OFADD__(v111, 1))
      goto LABEL_211;
    if (v115 >= v241)
    {
LABEL_122:
      swift_release();
      v129 = *(_QWORD *)(v234 + 64);
      v232 = v234 + 64;
      v130 = 1 << *(_BYTE *)(v234 + 32);
      v131 = -1;
      if (v130 < 64)
        v131 = ~(-1 << v130);
      v132 = v131 & v129;
      v233 = (char *)((unint64_t)(v130 + 63) >> 6);
      sub_1B16B9740();
      v133 = 0;
      if (!v132)
        goto LABEL_126;
LABEL_125:
      v238 = (v132 - 1) & v132;
      v239 = v133;
      for (j = __clz(__rbit64(v132)) | ((_QWORD)v133 << 6); ; j = __clz(__rbit64(v136)) + (v137 << 6))
      {
        v139 = *(_QWORD *)(*(_QWORD *)(v234 + 48) + 8 * j);
        memcpy(v246, (const void *)(*(_QWORD *)(v234 + 56) + 160 * j), 0xA0uLL);
        v140 = 0.0;
        v141 = 0.0;
        if (v16[2])
        {
          v142 = sub_1B1425D68(v139);
          if ((v143 & 1) != 0)
            v141 = *(double *)(v16[7] + 8 * v142);
        }
        v144 = *(_QWORD *)(v19 + 16);
        v244 = v139;
        if (v144)
        {
          v145 = sub_1B1425D68(v139);
          if ((v146 & 1) != 0)
            v140 = *(double *)(*(_QWORD *)(v19 + 56) + 8 * v145);
        }
        v147 = *(double *)&v246[10];
        v148 = *(double *)&v246[11];
        v149 = *(double *)&v246[12];
        v150 = *(double *)&v246[13];
        v151 = *(double *)&v246[15];
        v240 = v246[14];
        v241 = v246[16];
        v242 = v246[17];
        v152 = v246[18];
        v153 = v141 + *(double *)&v246[15];
        if (LOBYTE(v246[18]))
          v154 = *(double *)&v246[15];
        else
          v154 = v141 + *(double *)&v246[15];
        v155 = v246[19];
        v156 = *(_QWORD *)(v246[19] + 16);
        if (v156)
        {
          v235 = v154;
          v236 = v246[12];
          sub_1B15C5FA4((uint64_t)v246);
          v249[0] = MEMORY[0x1E0DEE9D8];
          sub_1B16B9740();
          sub_1B1490EE4(0, v156, 0);
          v157 = 0;
          v158 = v249[0];
          v159 = *(_QWORD *)(v249[0] + 16);
          v160 = 32 * v159;
          do
          {
            v162 = *(_QWORD *)(v155 + v157 + 32);
            v161 = *(double *)(v155 + v157 + 40);
            v163 = *(_OWORD *)(v155 + v157 + 48);
            v249[0] = v158;
            v164 = *(_QWORD *)(v158 + 24);
            v165 = v159 + 1;
            if (v159 >= v164 >> 1)
            {
              v229 = v163;
              sub_1B1490EE4(v164 > 1, v159 + 1, 1);
              v163 = v229;
              v158 = v249[0];
            }
            *(_QWORD *)(v158 + 16) = v165;
            v166 = v158 + v160 + v157;
            *(_QWORD *)(v166 + 32) = v162;
            *(double *)(v166 + 40) = v141 + v161;
            *(_OWORD *)(v166 + 48) = v163;
            v157 += 32;
            v159 = v165;
            --v156;
          }
          while (v156);
          swift_bridgeObjectRelease();
          v153 = v141 + v151;
          v149 = *(double *)&v236;
          v154 = v235;
        }
        else
        {
          sub_1B15C5FA4((uint64_t)v246);
          v158 = MEMORY[0x1E0DEE9D8];
        }
        v167 = v141 + v148;
        v168 = v140 + v150;
        sub_1B16B9740();
        sub_1B15C5FD8((uint64_t)v246);
        *(CGFloat *)v249 = v147;
        *(double *)&v249[1] = v167;
        *(CGFloat *)&v249[2] = v149;
        *(double *)&v249[3] = v168;
        v249[4] = v240;
        *(double *)&v249[5] = v154;
        v249[6] = v241;
        v249[7] = v242;
        LOBYTE(v249[8]) = v152;
        v249[9] = v158;
        *(CGFloat *)&v249[10] = v147;
        *(double *)&v249[11] = v148;
        *(CGFloat *)&v249[12] = v149;
        *(double *)&v249[13] = v150;
        v249[14] = v240;
        *(double *)&v249[15] = v151;
        v249[16] = v241;
        v249[17] = v242;
        LOBYTE(v249[18]) = v152;
        v249[19] = v155;
        v169 = v251[139];
        v170 = v244;
        if (*(_QWORD *)(v251[139] + 16))
        {
          sub_1B1425D68(v244);
          if ((v171 & 1) != 0)
            goto LABEL_217;
        }
        swift_isUniquelyReferenced_nonNull_native();
        v247[0] = v169;
        v251[139] = 0x8000000000000000;
        v172 = sub_1B1425D68(v170);
        if (__OFADD__(*(_QWORD *)(v169 + 16), (v173 & 1) == 0))
          goto LABEL_204;
        v174 = v172;
        v175 = v173;
        sub_1B148AB4C();
        if ((sub_1B16BA6E8() & 1) != 0)
        {
          v176 = sub_1B1425D68(v244);
          if ((v175 & 1) != (v177 & 1))
            goto LABEL_219;
          v174 = v176;
        }
        v178 = (_QWORD *)v247[0];
        if ((v175 & 1) != 0)
        {
          v179 = *(_QWORD *)(v247[0] + 56) + 32 * v174;
          *(CGFloat *)v179 = v147;
          *(double *)(v179 + 8) = v167;
          *(CGFloat *)(v179 + 16) = v149;
          *(double *)(v179 + 24) = v168;
        }
        else
        {
          *(_QWORD *)(v247[0] + 8 * (v174 >> 6) + 64) |= 1 << v174;
          *(_QWORD *)(v178[6] + 8 * v174) = v244;
          v180 = v178[7] + 32 * v174;
          *(CGFloat *)v180 = v147;
          *(double *)(v180 + 8) = v167;
          *(CGFloat *)(v180 + 16) = v149;
          *(double *)(v180 + 24) = v168;
          v181 = v178[2];
          v39 = __OFADD__(v181, 1);
          v182 = v181 + 1;
          if (v39)
            goto LABEL_207;
          v178[2] = v182;
        }
        v251[139] = v178;
        swift_bridgeObjectRelease();
        v183 = v251[140];
        if ((v152 & 1) != 0)
        {
          v184 = v244;
          sub_1B1425D68(v244);
          if ((v185 & 1) == 0)
            goto LABEL_179;
          swift_isUniquelyReferenced_nonNull_native();
          v247[0] = v183;
          v251[140] = 0x8000000000000000;
          sub_1B16BA6E8();
          v186 = v247[0];
          type metadata accessor for CGRect(0);
          sub_1B16BA700();
          v251[140] = v186;
        }
        else
        {
          swift_isUniquelyReferenced_nonNull_native();
          v247[0] = v183;
          v251[140] = 0x8000000000000000;
          v184 = v244;
          v187 = sub_1B1425D68(v244);
          v189 = v188;
          if (__OFADD__(*(_QWORD *)(v183 + 16), (v188 & 1) == 0))
            goto LABEL_208;
          v190 = v187;
          if ((sub_1B16BA6E8() & 1) != 0)
          {
            v191 = sub_1B1425D68(v184);
            if ((v189 & 1) != (v192 & 1))
              goto LABEL_219;
            v190 = v191;
          }
          v193 = (_QWORD *)v247[0];
          if ((v189 & 1) != 0)
          {
            v194 = *(_QWORD *)(v247[0] + 56) + 32 * v190;
            *(_QWORD *)v194 = v240;
            *(double *)(v194 + 8) = v153;
            v195 = v242;
            *(_QWORD *)(v194 + 16) = v241;
            *(_QWORD *)(v194 + 24) = v195;
          }
          else
          {
            *(_QWORD *)(v247[0] + 8 * (v190 >> 6) + 64) |= 1 << v190;
            *(_QWORD *)(v193[6] + 8 * v190) = v184;
            v196 = v193[7] + 32 * v190;
            *(_QWORD *)v196 = v240;
            *(double *)(v196 + 8) = v153;
            v197 = v242;
            *(_QWORD *)(v196 + 16) = v241;
            *(_QWORD *)(v196 + 24) = v197;
            v198 = v193[2];
            v39 = __OFADD__(v198, 1);
            v199 = v198 + 1;
            if (v39)
              goto LABEL_213;
            v193[2] = v199;
          }
          v251[140] = v193;
        }
        swift_bridgeObjectRelease();
LABEL_179:
        sub_1B16B9740();
        v200 = v251[141];
        swift_isUniquelyReferenced_nonNull_native();
        v247[0] = v200;
        v251[141] = 0x8000000000000000;
        v201 = sub_1B1425D68(v184);
        if (__OFADD__(*(_QWORD *)(v200 + 16), (v202 & 1) == 0))
          goto LABEL_205;
        v203 = v201;
        v204 = v202;
        sub_1B15C600C(0, (unint64_t *)&qword_1ED186F38, (unint64_t *)&unk_1ED183740, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
        if ((sub_1B16BA6E8() & 1) != 0)
        {
          v205 = sub_1B1425D68(v184);
          if ((v204 & 1) != (v206 & 1))
            goto LABEL_219;
          v203 = v205;
        }
        v207 = (_QWORD *)v247[0];
        if ((v204 & 1) != 0)
        {
          v208 = *(_QWORD *)(v247[0] + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v208 + 8 * v203) = v158;
        }
        else
        {
          *(_QWORD *)(v247[0] + 8 * (v203 >> 6) + 64) |= 1 << v203;
          *(_QWORD *)(v207[6] + 8 * v203) = v184;
          *(_QWORD *)(v207[7] + 8 * v203) = v158;
          v209 = v207[2];
          v39 = __OFADD__(v209, 1);
          v210 = v209 + 1;
          if (v39)
            goto LABEL_209;
          v207[2] = v210;
        }
        v251[141] = v207;
        swift_bridgeObjectRelease();
        sub_1B15C5FA4((uint64_t)v249);
        v211 = (_QWORD *)v251[4];
        swift_isUniquelyReferenced_nonNull_native();
        v248 = v211;
        v251[4] = 0x8000000000000000;
        v212 = sub_1B1425D68(v184);
        if (__OFADD__(v211[2], (v213 & 1) == 0))
          goto LABEL_206;
        v214 = v212;
        v215 = v213;
        sub_1B15C607C(0, &qword_1ED186020);
        v216 = sub_1B16BA6E8();
        v19 = v245;
        if ((v216 & 1) != 0)
        {
          v217 = sub_1B1425D68(v184);
          if ((v215 & 1) != (v218 & 1))
            goto LABEL_219;
          v214 = v217;
        }
        if ((v215 & 1) != 0)
        {
          v219 = v248;
          v220 = (void *)(v248[7] + 160 * v214);
          memcpy(v247, v220, sizeof(v247));
          sub_1B15C5FD8((uint64_t)v247);
          memcpy(v220, v249, 0xA0uLL);
        }
        else
        {
          v219 = v248;
          v248[(v214 >> 6) + 8] |= 1 << v214;
          *(_QWORD *)(v219[6] + 8 * v214) = v184;
          memcpy((void *)(v219[7] + 160 * v214), v249, 0xA0uLL);
          v221 = v219[2];
          v39 = __OFADD__(v221, 1);
          v222 = v221 + 1;
          if (v39)
            goto LABEL_210;
          v219[2] = v222;
        }
        v251[4] = v219;
        swift_bridgeObjectRelease();
        v223 = *(double *)v251;
        v254.origin.x = v147;
        v254.origin.y = v167;
        v254.size.width = v149;
        v254.size.height = v168;
        MaxX = CGRectGetMaxX(v254);
        if (v223 <= MaxX)
          v223 = MaxX;
        v225 = *(double *)&v251[1];
        v255.origin.x = v147;
        v255.origin.y = v167;
        v255.size.width = v149;
        v255.size.height = v168;
        MaxY = CGRectGetMaxY(v255);
        sub_1B15C5FD8((uint64_t)v249);
        if (v225 > MaxY)
          v227 = v225;
        else
          v227 = MaxY;
        *(double *)v251 = v223;
        *(double *)&v251[1] = v227;
        v16 = v243;
        v132 = v238;
        v133 = v239;
        if (v238)
          goto LABEL_125;
LABEL_126:
        v135 = (uint64_t)(v133 + 1);
        if (__OFADD__(v133, 1))
          goto LABEL_212;
        if (v135 >= (uint64_t)v233)
        {
LABEL_202:
          swift_release();
          memcpy(v230, v251, 0x498uLL);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v136 = *(_QWORD *)(v232 + 8 * v135);
        v137 = (uint64_t)(v133 + 1);
        if (!v136)
        {
          v137 = (uint64_t)(v133 + 2);
          if ((uint64_t)(v133 + 2) >= (uint64_t)v233)
            goto LABEL_202;
          v136 = *(_QWORD *)(v232 + 8 * v137);
          if (!v136)
          {
            v137 = (uint64_t)(v133 + 3);
            if ((uint64_t)(v133 + 3) >= (uint64_t)v233)
              goto LABEL_202;
            v136 = *(_QWORD *)(v232 + 8 * v137);
            if (!v136)
            {
              v138 = v133 + 4;
              if ((uint64_t)(v133 + 4) >= (uint64_t)v233)
                goto LABEL_202;
              v136 = *(_QWORD *)(v232 + 8 * (_QWORD)v138);
              if (!v136)
              {
                while (1)
                {
                  v137 = (uint64_t)(v138 + 1);
                  if (__OFADD__(v138, 1))
                    goto LABEL_215;
                  if (v137 >= (uint64_t)v233)
                    goto LABEL_202;
                  v136 = *(_QWORD *)(v232 + 8 * v137);
                  ++v138;
                  if (v136)
                    goto LABEL_139;
                }
              }
              v137 = (uint64_t)(v133 + 4);
            }
          }
        }
LABEL_139:
        v238 = (v136 - 1) & v136;
        v239 = (char *)v137;
      }
    }
    v116 = *(_QWORD *)(v240 + 8 * v115);
    ++v111;
    if (!v116)
    {
      v111 = v115 + 1;
      if (v115 + 1 >= v241)
        goto LABEL_122;
      v116 = *(_QWORD *)(v240 + 8 * v111);
      if (!v116)
      {
        v111 = v115 + 2;
        if (v115 + 2 >= v241)
          goto LABEL_122;
        v116 = *(_QWORD *)(v240 + 8 * v111);
        if (!v116)
          break;
      }
    }
LABEL_105:
    v113 = (v116 - 1) & v116;
  }
  v117 = v115 + 3;
  if (v117 >= v241)
    goto LABEL_122;
  v116 = *(_QWORD *)(v240 + 8 * v117);
  if (v116)
  {
    v111 = v117;
    goto LABEL_105;
  }
  while (1)
  {
    v111 = v117 + 1;
    if (__OFADD__(v117, 1))
      break;
    if (v111 >= v241)
      goto LABEL_122;
    v116 = *(_QWORD *)(v240 + 8 * v111);
    ++v117;
    if (v116)
      goto LABEL_105;
  }
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  sub_1B16BA9B8();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1B15C340C(uint64_t a1, const void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double __dst[66];

  memcpy(__dst, a2, 0x20DuLL);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_resizingIdentifier + 8);
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_resizingIdentifier);
  v6 = __dst[7];
  if (BYTE1(__dst[0]) == 1)
    v7 = __dst[7];
  else
    v7 = __dst[11];
  if (BYTE1(__dst[0]))
    v8 = v7;
  else
    v8 = __dst[1];
  v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_resizingGroupIdentifier);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_resizingGroupIdentifier + 8);
  if (v10)
  {
    v11 = *v9;
    if (BYTE1(__dst[0]) != 1)
      v6 = __dst[11];
    if (BYTE1(__dst[0]))
      v12 = v6;
    else
      v12 = __dst[1];
    swift_beginAccess();
    v13 = *(_QWORD *)(v2 + 32);
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B146AE10(v12, v11, v10, v13);
    if (v14)
    {
      v15 = v14;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1424D1C((uint64_t)__dst);
      swift_retain();
      sub_1B15C3640(v15, (uint64_t)__dst, v2, 0.0, 0.0);
      v17 = v16;
      swift_bridgeObjectRelease();
      return v17;
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v20 = *(_QWORD *)(v2 + 24);
      sub_1B16B9740();
      v18 = sub_1B146AE44(v8, v5, v4, v20);
      swift_endAccess();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_beginAccess();
    v19 = *(_QWORD *)(v2 + 24);
    sub_1B16B9740();
    v18 = sub_1B146AE44(v8, v5, v4, v19);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_1B15C3640(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  double *v11;
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  double *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  double v23;
  uint64_t v24;
  int64_t v25;
  double *v26;
  double *v27;

  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v10 = (uint64_t *)(a3 + 24);
  v25 = (unint64_t)(v7 + 63) >> 6;
  v27 = (double *)(a2 + 88);
  v26 = (double *)(a2 + 56);
  v11 = (double *)(a2 + 8);
  result = sub_1B16B9740();
  v13 = 0;
  while (v9)
  {
    v9 &= v9 - 1;
LABEL_22:
    v17 = v11;
    if (*(_BYTE *)(a2 + 1))
    {
      v17 = v27;
      if (*(_BYTE *)(a2 + 1) == 1)
        v17 = v26;
    }
    v18 = *v17;
    swift_beginAccess();
    v19 = *v10;
    v20 = *(_QWORD *)(*v10 + 16);
    sub_1B16B9740();
    if (v20 && (v21 = sub_1B148C108(v18), (v22 & 1) != 0))
    {
      v23 = *(double *)(*(_QWORD *)(v19 + 56) + 16 * v21 + 8);
      swift_endAccess();
      result = swift_bridgeObjectRelease();
      if (v23 >= a5)
        a5 = v23;
    }
    else
    {
      swift_endAccess();
      result = swift_bridgeObjectRelease();
    }
  }
  v14 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v14 >= v25)
    goto LABEL_30;
  v15 = *(_QWORD *)(v24 + 8 * v14);
  ++v13;
  if (v15)
    goto LABEL_21;
  v13 = v14 + 1;
  if (v14 + 1 >= v25)
    goto LABEL_30;
  v15 = *(_QWORD *)(v24 + 8 * v13);
  if (v15)
    goto LABEL_21;
  v13 = v14 + 2;
  if (v14 + 2 >= v25)
    goto LABEL_30;
  v15 = *(_QWORD *)(v24 + 8 * v13);
  if (v15)
    goto LABEL_21;
  v13 = v14 + 3;
  if (v14 + 3 >= v25)
    goto LABEL_30;
  v15 = *(_QWORD *)(v24 + 8 * v13);
  if (v15)
  {
LABEL_21:
    v9 = (v15 - 1) & v15;
    goto LABEL_22;
  }
  v16 = v14 + 4;
  if (v16 >= v25)
  {
LABEL_30:
    swift_release();
    sub_1B1417ADC(a2);
    return swift_release();
  }
  v15 = *(_QWORD *)(v24 + 8 * v16);
  if (v15)
  {
    v13 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v13 >= v25)
      goto LABEL_30;
    v15 = *(_QWORD *)(v24 + 8 * v13);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t BlueprintLayoutCollectionInvalidator.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t BlueprintLayoutCollectionInvalidator.__deallocating_deinit()
{
  BlueprintLayoutCollectionInvalidator.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for BlueprintLayoutCollectionInvalidator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionInvalidator.__allocating_init(layoutCollectionProvider:impressionTracking:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionInvalidatorKey()
{
  return &type metadata for BlueprintLayoutCollectionInvalidatorKey;
}

unint64_t sub_1B15C3950()
{
  unint64_t result;

  result = qword_1EEF34948;
  if (!qword_1EEF34948)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D5AC8, &type metadata for BlueprintLayoutCollectionInvalidatorKey);
    atomic_store(result, (unint64_t *)&qword_1EEF34948);
  }
  return result;
}

unint64_t sub_1B15C398C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  unint64_t v10;
  unint64_t result;
  uint64_t v12;

  OUTLINED_FUNCTION_125();
  sub_1B16B9740();
  sub_1B16B98FC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_140();
  OUTLINED_FUNCTION_115();
  v10 = OUTLINED_FUNCTION_2_101();
  result = OUTLINED_FUNCTION_1_117(v10);
  *(_QWORD *)v12 = a1;
  *(_QWORD *)(v12 + 8) = a2;
  *(double *)(v12 + 16) = a5;
  *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result) = a3;
  ++*(_QWORD *)(a4 + 16);
  return result;
}

unint64_t sub_1B15C3A30(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  unint64_t v12;
  unint64_t result;
  uint64_t v14;
  double *v15;

  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_67_1();
  sub_1B16B98FC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_140();
  OUTLINED_FUNCTION_115();
  v12 = OUTLINED_FUNCTION_2_101();
  result = OUTLINED_FUNCTION_1_117(v12);
  *(_QWORD *)v14 = a1;
  *(_QWORD *)(v14 + 8) = a2;
  *(double *)(v14 + 16) = a4;
  v15 = (double *)(*(_QWORD *)(a3 + 56) + 16 * result);
  *v15 = a5;
  v15[1] = a6;
  ++*(_QWORD *)(a3 + 16);
  return result;
}

void sub_1B15C3AD8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;

  if (!a3)
  {
LABEL_35:
    swift_release();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return;
  sub_1B14CA65C();
  v6 = OUTLINED_FUNCTION_14_45();
  v7 = v6;
  v27 = a2;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = v6 + 56;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v13 >= v27)
      goto LABEL_35;
    v14 = a1[v13];
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v27)
        goto LABEL_35;
      v14 = a1[v9];
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v27)
          goto LABEL_35;
        v14 = a1[v9];
        if (!v14)
          break;
      }
    }
LABEL_23:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    sub_1B16BAA48();
    OUTLINED_FUNCTION_184();
    sub_1B16B98FC();
    v19 = sub_1B16BAA78() & ~(-1 << *(_BYTE *)(v7 + 32));
    if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_100_0();
      while (++v22 != v23 || (v21 & 1) == 0)
      {
        v24 = v22 == v23;
        if (v22 == v23)
          v22 = 0;
        v21 |= v24;
        if (*(_QWORD *)(v10 + 8 * v22) != -1)
        {
          OUTLINED_FUNCTION_97();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_105_0();
LABEL_33:
    *(_QWORD *)(v10 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v25 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    *v25 = v17;
    v25[1] = v18;
    OUTLINED_FUNCTION_12_48();
    if (v26)
      goto LABEL_38;
  }
  v15 = v13 + 3;
  if (v15 >= v27)
    goto LABEL_35;
  v14 = a1[v15];
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v27)
      goto LABEL_35;
    v14 = a1[v9];
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

void sub_1B15C3D24(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  _QWORD *v26;
  char v27;

  if (!a3)
  {
LABEL_35:
    swift_release();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return;
  sub_1B15C60CC();
  v7 = OUTLINED_FUNCTION_14_45();
  v8 = v7;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = v7 + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= a2)
      goto LABEL_35;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= a2)
        goto LABEL_35;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= a2)
          goto LABEL_35;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_0_140();
    OUTLINED_FUNCTION_0_140();
    v20 = OUTLINED_FUNCTION_115() & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_100_0();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        v25 = v23 == v24;
        if (v23 == v24)
          v23 = 0;
        v22 |= v25;
        if (*(_QWORD *)(v11 + 8 * v23) != -1)
        {
          OUTLINED_FUNCTION_97();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_105_0();
LABEL_33:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v26 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    *v26 = v18;
    v26[1] = v19;
    OUTLINED_FUNCTION_12_48();
    if (v27)
      goto LABEL_38;
  }
  v16 = v14 + 3;
  if (v16 >= a2)
    goto LABEL_35;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= a2)
      goto LABEL_35;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1B15C3F4C(uint64_t *a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _QWORD v8[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1B140DC4C();
  v6 = *(_QWORD *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return sub_1B16BA628();
}

void sub_1B15C3FC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  double MinY;
  double v18;
  uint64_t v19;
  double MinX;
  double v24;
  _BOOL4 v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  double v34;
  double v35;
  uint64_t v36;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  double v59;
  double v60;
  uint64_t v61;
  double v65;
  double v66;
  double v67;
  double v68;
  void *v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t *v116;
  uint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  unint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  _BOOL4 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void **v141;
  uint64_t v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;

  v3 = a1[1];
  v4 = sub_1B16BA8A4();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1B15C4F10(0, v3, 1, a1);
      return;
    }
    goto LABEL_138;
  }
  v5 = v4;
  sub_1B16B6D6C(v3 / 2);
  v141 = v6;
  v142 = v7;
  v136 = v3;
  v134 = a1;
  if (v3 <= 0)
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v71 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
    if (v71 < 2)
    {
LABEL_114:
      swift_bridgeObjectRelease();
      if (v136 >= -1)
      {
        *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1B16B9B78();
        swift_bridgeObjectRelease();
        return;
      }
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      return;
    }
    v125 = *v134;
    while (1)
    {
      v126 = v71 - 2;
      if (v71 < 2)
        break;
      if (!v125)
        goto LABEL_147;
      v127 = v10[2 * v126 + 4];
      v128 = v10[2 * v71 + 3];
      sub_1B15C5158((void **)(v125 + 8 * v127), (id *)(v125 + 8 * v10[2 * v71 + 2]), v125 + 8 * v128, v141);
      if (v1)
        goto LABEL_100;
      if (v128 < v127)
        goto LABEL_133;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B165CA7C();
        v10 = v131;
      }
      if (v126 >= v10[2])
        goto LABEL_134;
      v129 = &v10[2 * v126 + 4];
      *v129 = v127;
      v129[1] = v128;
      v130 = v10[2];
      if (v71 > v130)
        goto LABEL_135;
      memmove(&v10[2 * v71 + 2], &v10[2 * v71 + 4], 16 * (v130 - v71));
      v10[2] = v130 - 1;
      v71 = v130 - 1;
      if (v130 <= 2)
        goto LABEL_114;
    }
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  v135 = v5;
  v8 = 0;
  v9 = *a1;
  v133 = *a1 - 8;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v11 = &selRef_configurationWithScale_;
  while (1)
  {
    v12 = v8;
    v13 = v8 + 1;
    v139 = v8;
    if (v8 + 1 >= v3)
      goto LABEL_26;
    v14 = *(void **)(v9 + 8 * v8);
    v15 = *(id *)(v9 + 8 * v13);
    v16 = v14;
    objc_msgSend(v15, v11[51]);
    MinY = CGRectGetMinY(v143);
    objc_msgSend(v16, v11[51]);
    v18 = CGRectGetMinY(v144);
    objc_msgSend(v15, v11[51]);
    v13 = v12 + 2;
    if (MinY == v18)
    {
      MinX = CGRectGetMinX(*(CGRect *)&v19);
      objc_msgSend(v16, v11[51]);
      v24 = CGRectGetMinX(v145);

      v25 = MinX <= v24;
    }
    else
    {
      v26 = CGRectGetMinY(*(CGRect *)&v19);
      objc_msgSend(v16, v11[51]);
      v27 = CGRectGetMinY(v146);

      v25 = v26 < v27;
    }
    v137 = v25;
    if (v13 >= v3)
      goto LABEL_18;
    v28 = v12;
    while (1)
    {
      v29 = v13;
      v30 = v9 + 8 * v28;
      v31 = *(void **)(v30 + 8);
      v32 = *(id *)(v30 + 16);
      v33 = v31;
      objc_msgSend(v32, v11[51]);
      v34 = CGRectGetMinY(v147);
      objc_msgSend(v33, v11[51]);
      v35 = CGRectGetMinY(v148);
      objc_msgSend(v32, v11[51]);
      if (v34 == v35)
      {
        v40 = CGRectGetMinX(*(CGRect *)&v36);
        objc_msgSend(v33, v11[51]);
        v41 = CGRectGetMinX(v149);

        if (((v137 ^ (v40 > v41)) & 1) == 0)
        {
          v13 = v29;
          goto LABEL_17;
        }
        goto LABEL_14;
      }
      v42 = CGRectGetMinY(*(CGRect *)&v36);
      objc_msgSend(v33, v11[51]);
      v43 = CGRectGetMinY(v150);

      if (v137 == v42 >= v43)
        break;
LABEL_14:
      v13 = v29 + 1;
      v44 = v28 + 1;
      v45 = v28 + 3;
      ++v28;
      if (v45 >= v3)
      {
        v13 = v44 + 2;
        goto LABEL_17;
      }
    }
    v13 = v28 + 2;
LABEL_17:
    v12 = v139;
LABEL_18:
    if (v137)
    {
      if (v13 >= v12)
      {
        if (v12 < v13)
        {
          v46 = (uint64_t *)(v133 + 8 * v13);
          v47 = v13;
          v48 = v12;
          v49 = (uint64_t *)(v9 + 8 * v12);
          do
          {
            if (v48 != --v47)
            {
              if (!v9)
                goto LABEL_146;
              v50 = *v49;
              *v49 = *v46;
              *v46 = v50;
            }
            ++v48;
            --v46;
            ++v49;
          }
          while (v48 < v47);
        }
        goto LABEL_26;
      }
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
LABEL_26:
    if (v13 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v13, v12))
      goto LABEL_137;
    if (v13 - v12 >= v135)
      goto LABEL_47;
    if (__OFADD__(v12, v135))
      goto LABEL_141;
    if (v12 + v135 >= v3)
      v51 = v3;
    else
      v51 = v12 + v135;
    if (v51 < v12)
    {
LABEL_142:
      __break(1u);
      goto LABEL_143;
    }
    if (v13 == v51)
      goto LABEL_47;
    v132 = v10;
    v52 = v133 + 8 * v13;
    v138 = v51;
    while (2)
    {
      v53 = *(void **)(v9 + 8 * v13);
      v54 = v52;
      while (2)
      {
        v55 = v13;
        v56 = *(void **)v54;
        v57 = v53;
        v58 = v56;
        objc_msgSend(v57, v11[51]);
        v59 = CGRectGetMinY(v151);
        objc_msgSend(v58, v11[51]);
        v60 = CGRectGetMinY(v152);
        objc_msgSend(v57, v11[51]);
        if (v59 == v60)
        {
          v65 = CGRectGetMinX(*(CGRect *)&v61);
          objc_msgSend(v58, v11[51]);
          v66 = CGRectGetMinX(v153);

          if (v65 > v66)
            goto LABEL_44;
LABEL_41:
          if (!v9)
            goto LABEL_144;
          v13 = v55;
          v69 = *(void **)v54;
          v53 = *(void **)(v54 + 8);
          *(_QWORD *)v54 = v53;
          *(_QWORD *)(v54 + 8) = v69;
          v54 -= 8;
          if (v55 == ++v12)
            goto LABEL_45;
          continue;
        }
        break;
      }
      v67 = CGRectGetMinY(*(CGRect *)&v61);
      objc_msgSend(v58, v11[51]);
      v68 = CGRectGetMinY(v154);

      if (v67 < v68)
        goto LABEL_41;
LABEL_44:
      v13 = v55;
LABEL_45:
      ++v13;
      v52 += 8;
      v12 = v139;
      if (v13 != v138)
        continue;
      break;
    }
    v13 = v138;
    v10 = v132;
LABEL_47:
    if (v13 < v12)
      goto LABEL_136;
    v140 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B165C99C();
      v10 = v123;
    }
    v70 = v10[2];
    v71 = v70 + 1;
    if (v70 >= v10[3] >> 1)
    {
      sub_1B165C99C();
      v10 = v124;
    }
    v10[2] = v71;
    v72 = v10 + 4;
    v73 = &v10[2 * v70 + 4];
    *v73 = v12;
    v73[1] = v13;
    if (v70)
      break;
    v71 = 1;
LABEL_95:
    v3 = v136;
    v8 = v140;
    if (v140 >= v136)
      goto LABEL_103;
  }
  while (1)
  {
    v74 = v71 - 1;
    if (v71 >= 4)
    {
      v79 = &v72[2 * v71];
      v80 = *(v79 - 8);
      v81 = *(v79 - 7);
      v85 = __OFSUB__(v81, v80);
      v82 = v81 - v80;
      if (v85)
        goto LABEL_121;
      v84 = *(v79 - 6);
      v83 = *(v79 - 5);
      v85 = __OFSUB__(v83, v84);
      v77 = v83 - v84;
      v78 = v85;
      if (v85)
        goto LABEL_122;
      v86 = v71 - 2;
      v87 = &v72[2 * v71 - 4];
      v89 = *v87;
      v88 = v87[1];
      v85 = __OFSUB__(v88, v89);
      v90 = v88 - v89;
      if (v85)
        goto LABEL_123;
      v85 = __OFADD__(v77, v90);
      v91 = v77 + v90;
      if (v85)
        goto LABEL_125;
      if (v91 >= v82)
      {
        v109 = &v72[2 * v74];
        v111 = *v109;
        v110 = v109[1];
        v85 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v85)
          goto LABEL_131;
        v102 = v77 < v112;
        goto LABEL_84;
      }
    }
    else
    {
      if (v71 != 3)
      {
        v103 = v10[4];
        v104 = v10[5];
        v85 = __OFSUB__(v104, v103);
        v96 = v104 - v103;
        v97 = v85;
        goto LABEL_78;
      }
      v76 = v10[4];
      v75 = v10[5];
      v85 = __OFSUB__(v75, v76);
      v77 = v75 - v76;
      v78 = v85;
    }
    if ((v78 & 1) != 0)
      goto LABEL_124;
    v86 = v71 - 2;
    v92 = &v72[2 * v71 - 4];
    v94 = *v92;
    v93 = v92[1];
    v95 = __OFSUB__(v93, v94);
    v96 = v93 - v94;
    v97 = v95;
    if (v95)
      goto LABEL_126;
    v98 = &v72[2 * v74];
    v100 = *v98;
    v99 = v98[1];
    v85 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v85)
      goto LABEL_128;
    if (__OFADD__(v96, v101))
      goto LABEL_130;
    if (v96 + v101 >= v77)
    {
      v102 = v77 < v101;
LABEL_84:
      if (v102)
        v74 = v86;
      goto LABEL_86;
    }
LABEL_78:
    if ((v97 & 1) != 0)
      goto LABEL_127;
    v105 = &v72[2 * v74];
    v107 = *v105;
    v106 = v105[1];
    v85 = __OFSUB__(v106, v107);
    v108 = v106 - v107;
    if (v85)
      goto LABEL_129;
    if (v108 < v96)
      goto LABEL_95;
LABEL_86:
    v113 = v74 - 1;
    if (v74 - 1 >= v71)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    v114 = v9;
    if (!v9)
      goto LABEL_145;
    v115 = v10;
    v116 = &v72[2 * v113];
    v117 = *v116;
    v118 = v74;
    v119 = &v72[2 * v74];
    v120 = v119[1];
    v121 = v114;
    sub_1B15C5158((void **)(v114 + 8 * *v116), (id *)(v114 + 8 * *v119), v114 + 8 * v120, v141);
    if (v1)
      break;
    if (v120 < v117)
      goto LABEL_118;
    if (v118 > v115[2])
      goto LABEL_119;
    *v116 = v117;
    v72[2 * v113 + 1] = v120;
    v122 = v115[2];
    if (v118 >= v122)
      goto LABEL_120;
    v10 = v115;
    v71 = v122 - 1;
    memmove(v119, v119 + 2, 16 * (v122 - 1 - v118));
    v115[2] = v122 - 1;
    v9 = v121;
    v11 = &selRef_configurationWithScale_;
    if (v122 <= 2)
      goto LABEL_95;
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v136 < -1)
    goto LABEL_139;
  *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1B16B9B78();
  swift_bridgeObjectRelease();
}

void sub_1B15C4818(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  double MinY;
  double v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  double v41;
  double v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  char v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void **v115;
  uint64_t v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;

  v3 = a1[1];
  v4 = sub_1B16BA8A4();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_127;
    if (v3)
      sub_1B15C5064(0, v3, 1, a1);
    return;
  }
  v5 = v4;
  sub_1B16B6D6C(v3 / 2);
  v115 = v6;
  v116 = v7;
  v111 = v3;
  v109 = a1;
  if (v3 <= 0)
    goto LABEL_91;
  v110 = v5;
  v8 = 0;
  v9 = *a1;
  v108 = *a1 - 8;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v11 = &selRef_configurationWithScale_;
  while (1)
  {
    v12 = v8;
    v13 = v8 + 1;
    v113 = v8;
    if (v8 + 1 < v3)
    {
      v14 = *(void **)(v9 + 8 * v8);
      v15 = *(id *)(v9 + 8 * v13);
      v16 = v14;
      objc_msgSend(v15, v11[51]);
      MinY = CGRectGetMinY(v117);
      objc_msgSend(v16, v11[51]);
      v18 = CGRectGetMinY(v118);

      v13 = v12 + 2;
      if (v12 + 2 < v3)
      {
        v19 = v12;
        v20 = v10;
        while (1)
        {
          v21 = v9 + 8 * v19;
          v22 = *(void **)(v21 + 8);
          v23 = *(id *)(v21 + 16);
          v24 = v22;
          objc_msgSend(v23, sel_frame);
          v25 = CGRectGetMinY(v119);
          objc_msgSend(v24, sel_frame);
          v26 = CGRectGetMinY(v120);

          if (MinY < v18 == v25 >= v26)
            break;
          v27 = v19 + 3;
          ++v19;
          if (v27 >= v3)
          {
            v13 = v3;
            goto LABEL_11;
          }
        }
        v13 = v19 + 2;
LABEL_11:
        v10 = v20;
        v11 = &selRef_configurationWithScale_;
        v12 = v113;
      }
      if (MinY < v18)
      {
        if (v13 < v12)
          goto LABEL_128;
        if (v12 < v13)
        {
          v28 = (uint64_t *)(v108 + 8 * v13);
          v29 = v13;
          v30 = v12;
          v31 = (uint64_t *)(v9 + 8 * v12);
          do
          {
            if (v30 != --v29)
            {
              if (!v9)
                goto LABEL_134;
              v32 = *v31;
              *v31 = *v28;
              *v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
      }
    }
    if (v13 < v3)
    {
      if (__OFSUB__(v13, v12))
        goto LABEL_126;
      if (v13 - v12 < v110)
      {
        if (__OFADD__(v12, v110))
          goto LABEL_129;
        if (v12 + v110 >= v3)
          v33 = v3;
        else
          v33 = v12 + v110;
        if (v33 < v12)
        {
LABEL_130:
          __break(1u);
          goto LABEL_131;
        }
        if (v13 != v33)
        {
          v107 = v10;
          v34 = v108 + 8 * v13;
          v112 = v33;
          do
          {
            v35 = *(void **)(v9 + 8 * v13);
            v36 = v12;
            v37 = v34;
            do
            {
              v38 = *(void **)v37;
              v39 = v35;
              v40 = v38;
              objc_msgSend(v39, v11[51]);
              v41 = CGRectGetMinY(v121);
              objc_msgSend(v40, v11[51]);
              v42 = CGRectGetMinY(v122);

              if (v41 >= v42)
                break;
              if (!v9)
                goto LABEL_132;
              v43 = *(void **)v37;
              v35 = *(void **)(v37 + 8);
              *(_QWORD *)v37 = v35;
              *(_QWORD *)(v37 + 8) = v43;
              v37 -= 8;
              ++v36;
            }
            while (v13 != v36);
            ++v13;
            v34 += 8;
            v12 = v113;
          }
          while (v13 != v112);
          v13 = v112;
          v10 = v107;
        }
      }
    }
    if (v13 < v12)
      goto LABEL_125;
    v114 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B165C99C();
      v10 = v96;
    }
    v44 = v10[2];
    v45 = v44 + 1;
    if (v44 >= v10[3] >> 1)
    {
      sub_1B165C99C();
      v10 = v97;
    }
    v10[2] = v45;
    v46 = v10 + 4;
    v47 = &v10[2 * v44 + 4];
    *v47 = v12;
    v47[1] = v114;
    if (v44)
      break;
    v45 = 1;
LABEL_84:
    v3 = v111;
    v8 = v114;
    if (v114 >= v111)
      goto LABEL_92;
  }
  while (1)
  {
    v48 = v45 - 1;
    if (v45 >= 4)
    {
      v53 = &v46[2 * v45];
      v54 = *(v53 - 8);
      v55 = *(v53 - 7);
      v59 = __OFSUB__(v55, v54);
      v56 = v55 - v54;
      if (v59)
        goto LABEL_110;
      v58 = *(v53 - 6);
      v57 = *(v53 - 5);
      v59 = __OFSUB__(v57, v58);
      v51 = v57 - v58;
      v52 = v59;
      if (v59)
        goto LABEL_111;
      v60 = v45 - 2;
      v61 = &v46[2 * v45 - 4];
      v63 = *v61;
      v62 = v61[1];
      v59 = __OFSUB__(v62, v63);
      v64 = v62 - v63;
      if (v59)
        goto LABEL_112;
      v59 = __OFADD__(v51, v64);
      v65 = v51 + v64;
      if (v59)
        goto LABEL_114;
      if (v65 >= v56)
      {
        v83 = &v46[2 * v48];
        v85 = *v83;
        v84 = v83[1];
        v59 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v59)
          goto LABEL_120;
        v76 = v51 < v86;
        goto LABEL_73;
      }
    }
    else
    {
      if (v45 != 3)
      {
        v77 = v10[4];
        v78 = v10[5];
        v59 = __OFSUB__(v78, v77);
        v70 = v78 - v77;
        v71 = v59;
        goto LABEL_67;
      }
      v50 = v10[4];
      v49 = v10[5];
      v59 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      v52 = v59;
    }
    if ((v52 & 1) != 0)
      goto LABEL_113;
    v60 = v45 - 2;
    v66 = &v46[2 * v45 - 4];
    v68 = *v66;
    v67 = v66[1];
    v69 = __OFSUB__(v67, v68);
    v70 = v67 - v68;
    v71 = v69;
    if (v69)
      goto LABEL_115;
    v72 = &v46[2 * v48];
    v74 = *v72;
    v73 = v72[1];
    v59 = __OFSUB__(v73, v74);
    v75 = v73 - v74;
    if (v59)
      goto LABEL_117;
    if (__OFADD__(v70, v75))
      goto LABEL_119;
    if (v70 + v75 >= v51)
    {
      v76 = v51 < v75;
LABEL_73:
      if (v76)
        v48 = v60;
      goto LABEL_75;
    }
LABEL_67:
    if ((v71 & 1) != 0)
      goto LABEL_116;
    v79 = &v46[2 * v48];
    v81 = *v79;
    v80 = v79[1];
    v59 = __OFSUB__(v80, v81);
    v82 = v80 - v81;
    if (v59)
      goto LABEL_118;
    if (v82 < v70)
      goto LABEL_84;
LABEL_75:
    v87 = v48 - 1;
    if (v48 - 1 >= v45)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    v88 = v9;
    if (!v9)
      goto LABEL_133;
    v89 = v10;
    v90 = &v46[2 * v87];
    v91 = *v90;
    v92 = &v46[2 * v48];
    v93 = v92[1];
    v94 = v88;
    sub_1B15C5448((void **)(v88 + 8 * *v90), (id *)(v88 + 8 * *v92), v88 + 8 * v93, v115);
    if (v1)
      break;
    if (v93 < v91)
      goto LABEL_107;
    if (v48 > v89[2])
      goto LABEL_108;
    *v90 = v91;
    v46[2 * v87 + 1] = v93;
    v95 = v89[2];
    if (v48 >= v95)
      goto LABEL_109;
    v10 = v89;
    v45 = v95 - 1;
    memmove(&v46[2 * v48], v92 + 2, 16 * (v95 - 1 - v48));
    v89[2] = v95 - 1;
    v9 = v94;
    v11 = &selRef_configurationWithScale_;
    if (v95 <= 2)
      goto LABEL_84;
  }
LABEL_89:
  swift_bridgeObjectRelease();
  if (v111 >= -1)
    goto LABEL_104;
  __break(1u);
LABEL_91:
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v45 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_92:
  v98 = v10;
  if (v45 >= 2)
  {
    v99 = *v109;
    while (1)
    {
      v100 = v45 - 2;
      if (v45 < 2)
        break;
      if (!v99)
        goto LABEL_135;
      v101 = v98;
      v102 = v98[2 * v100 + 4];
      v103 = v98[2 * v45 + 3];
      sub_1B15C5448((void **)(v99 + 8 * v102), (id *)(v99 + 8 * v98[2 * v45 + 2]), v99 + 8 * v103, v115);
      if (v1)
        goto LABEL_89;
      if (v103 < v102)
        goto LABEL_122;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B165CA7C();
        v101 = v106;
      }
      if (v100 >= v101[2])
        goto LABEL_123;
      v104 = &v101[2 * v100 + 4];
      *v104 = v102;
      v104[1] = v103;
      v105 = v101[2];
      if (v45 > v105)
        goto LABEL_124;
      memmove(&v101[2 * v45 + 2], &v101[2 * v45 + 4], 16 * (v105 - v45));
      v98 = v101;
      v101[2] = v105 - 1;
      v45 = v105 - 1;
      if (v105 <= 2)
        goto LABEL_103;
    }
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
LABEL_103:
  swift_bridgeObjectRelease();
  if (v111 >= -1)
  {
LABEL_104:
    *(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1B16B9B78();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
}

void sub_1B15C4F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  double MinY;
  double v15;
  uint64_t v16;
  double MinX;
  double v21;
  double v22;
  double v23;
  void *v24;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v8 = *(void **)(v6 + 8 * v4);
      v9 = a1;
      v10 = v7;
      do
      {
        v11 = *(void **)v10;
        v12 = v8;
        v13 = v11;
        objc_msgSend(v12, sel_frame);
        MinY = CGRectGetMinY(v26);
        objc_msgSend(v13, sel_frame);
        v15 = CGRectGetMinY(v27);
        objc_msgSend(v12, sel_frame);
        if (MinY == v15)
        {
          MinX = CGRectGetMinX(*(CGRect *)&v16);
          objc_msgSend(v13, sel_frame);
          v21 = CGRectGetMinX(v28);

          if (MinX > v21)
            break;
        }
        else
        {
          v22 = CGRectGetMinY(*(CGRect *)&v16);
          objc_msgSend(v13, sel_frame);
          v23 = CGRectGetMinY(v29);

          if (v22 >= v23)
            break;
        }
        if (!v6)
        {
          __break(1u);
          return;
        }
        v24 = *(void **)v10;
        v8 = *(void **)(v10 + 8);
        *(_QWORD *)v10 = v8;
        *(_QWORD *)(v10 + 8) = v24;
        v10 -= 8;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v7 += 8;
      if (v4 != a2)
        continue;
      break;
    }
  }
}

void sub_1B15C5064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  double MinY;
  double v15;
  void *v16;
  CGRect v18;
  CGRect v19;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v8 = *(void **)(v6 + 8 * v4);
      v9 = a1;
      v10 = v7;
      do
      {
        v11 = *(void **)v10;
        v12 = v8;
        v13 = v11;
        objc_msgSend(v12, sel_frame);
        MinY = CGRectGetMinY(v18);
        objc_msgSend(v13, sel_frame);
        v15 = CGRectGetMinY(v19);

        if (MinY >= v15)
          break;
        if (!v6)
        {
          __break(1u);
          return;
        }
        v16 = *(void **)v10;
        v8 = *(void **)(v10 + 8);
        *(_QWORD *)v10 = v8;
        *(_QWORD *)(v10 + 8) = v16;
        v10 -= 8;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v7 += 8;
      if (v4 != a2)
        continue;
      break;
    }
  }
}

uint64_t sub_1B15C5158(void **a1, id *a2, unint64_t a3, void **a4)
{
  void **v4;
  id *v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v14;
  id v15;
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  double v23;
  double v24;
  void **v25;
  BOOL v26;
  double v27;
  double v28;
  void **v30;
  id *v32;
  void *v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  double MinY;
  double v39;
  uint64_t v40;
  double MinX;
  double v45;
  BOOL v46;
  double v47;
  double v48;
  BOOL v49;
  id *v52;
  unint64_t v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1B1455714(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v30 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      v12 = &v4[v11];
      goto LABEL_44;
    }
    v32 = (id *)(a3 - 8);
    v12 = v30;
    while (1)
    {
      v52 = v32 + 1;
      v53 = (unint64_t)v12;
      v33 = *--v12;
      v34 = v6 - 1;
      v35 = *(v6 - 1);
      v36 = v33;
      v37 = v35;
      objc_msgSend(v36, sel_frame);
      MinY = CGRectGetMinY(v58);
      objc_msgSend(v37, sel_frame);
      v39 = CGRectGetMinY(v59);
      objc_msgSend(v36, sel_frame);
      if (MinY == v39)
      {
        MinX = CGRectGetMinX(*(CGRect *)&v40);
        objc_msgSend(v37, sel_frame);
        v45 = CGRectGetMinX(v60);

        if (MinX > v45)
          goto LABEL_28;
      }
      else
      {
        v47 = CGRectGetMinY(*(CGRect *)&v40);
        objc_msgSend(v37, sel_frame);
        v48 = CGRectGetMinY(v61);

        if (v47 >= v48)
        {
LABEL_28:
          v46 = v52 != (id *)v53 || (unint64_t)v32 >= v53;
          v34 = v12;
          if (!v46)
            goto LABEL_40;
          goto LABEL_39;
        }
      }
      v49 = v52 != v6 || v32 >= v6;
      --v6;
      v12 = (void **)v53;
      if (!v49)
        goto LABEL_40;
LABEL_39:
      *v32 = *v34;
LABEL_40:
      --v32;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_44;
    }
  }
  sub_1B1455714(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    do
    {
      v14 = *v4;
      v15 = *v6;
      v16 = v14;
      objc_msgSend(v15, sel_frame);
      v17 = CGRectGetMinY(v54);
      objc_msgSend(v16, sel_frame);
      v18 = CGRectGetMinY(v55);
      objc_msgSend(v15, sel_frame);
      if (v17 == v18)
      {
        v23 = CGRectGetMinX(*(CGRect *)&v19);
        objc_msgSend(v16, sel_frame);
        v24 = CGRectGetMinX(v56);

        if (v23 > v24)
          goto LABEL_8;
      }
      else
      {
        v27 = CGRectGetMinY(*(CGRect *)&v19);
        objc_msgSend(v16, sel_frame);
        v28 = CGRectGetMinY(v57);

        if (v27 >= v28)
        {
LABEL_8:
          v25 = v4;
          v26 = v7 == v4++;
          if (v26)
            goto LABEL_14;
LABEL_13:
          *v7 = *v25;
          goto LABEL_14;
        }
      }
      v25 = v6;
      v26 = v7 == v6++;
      if (!v26)
        goto LABEL_13;
LABEL_14:
      ++v7;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_44:
  sub_1B1455714(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_1B15C5448(void **a1, id *a2, unint64_t a3, void **a4)
{
  void **v4;
  id *v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v14;
  id v15;
  id v16;
  double v17;
  double v18;
  void **v19;
  BOOL v20;
  void **v22;
  id *v24;
  unint64_t v25;
  void *v26;
  id *v27;
  void *v28;
  id v29;
  id v30;
  double MinY;
  double v32;
  BOOL v33;
  void **v36;
  id *v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1B1455714(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v22 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      v12 = &v4[v11];
    }
    else
    {
      v24 = (id *)(a3 - 8);
      v12 = v22;
      v36 = v4;
      do
      {
        v37 = v24 + 1;
        v25 = (unint64_t)v12;
        v26 = *--v12;
        v27 = v6 - 1;
        v28 = *(v6 - 1);
        v29 = v26;
        v30 = v28;
        objc_msgSend(v29, sel_frame);
        MinY = CGRectGetMinY(v40);
        objc_msgSend(v30, sel_frame);
        v32 = CGRectGetMinY(v41);

        if (MinY >= v32)
        {
          v33 = v37 != (id *)v25 || (unint64_t)v24 >= v25;
          v27 = v12;
        }
        else
        {
          v33 = v37 != v6 || v24 >= v6;
          --v6;
          v12 = (void **)v25;
        }
        v4 = v36;
        if (v33)
          *v24 = *v27;
        --v24;
      }
      while (v6 > v7 && v12 > v36);
    }
  }
  else
  {
    sub_1B1455714(a1, a2 - a1, a4);
    v12 = &v4[v9];
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        v14 = *v4;
        v15 = *v6;
        v16 = v14;
        objc_msgSend(v15, sel_frame);
        v17 = CGRectGetMinY(v38);
        objc_msgSend(v16, sel_frame);
        v18 = CGRectGetMinY(v39);

        if (v17 < v18)
          break;
        v19 = v4;
        v20 = v7 == v4++;
        if (!v20)
          goto LABEL_11;
LABEL_12:
        ++v7;
        if (v4 >= v12 || (unint64_t)v6 >= a3)
          goto LABEL_17;
      }
      v19 = v6;
      v20 = v7 == v6++;
      if (v20)
        goto LABEL_12;
LABEL_11:
      *v7 = *v19;
      goto LABEL_12;
    }
LABEL_17:
    v6 = v7;
  }
  sub_1B1455714(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_1B15C5680(uint64_t isStackAllocationSafe, uint64_t (*a2)(_QWORD, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2);
    v9 = (_QWORD *)((char *)v13 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1B142ABFC(0, v8, v9);
    v10 = sub_1B15C57FC((uint64_t)v9, v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_1B142ABFC(0, v8, v11);
    a3 = sub_1B15C57FC((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1B5E1F1FC](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1B15C57FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, double, double, double))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  double *v16;
  double v17;
  uint64_t v18;
  double v19;
  double *v20;
  double v21;
  double v22;
  char v23;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v26 = (uint64_t *)result;
  v27 = 0;
  v6 = 0;
  v28 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_20;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return sub_1B142AA64(v26, a2, v27, a3);
    v14 = *(_QWORD *)(v28 + 8 * v13);
    ++v6;
    if (!v14)
    {
      v6 = v13 + 1;
      if (v13 + 1 >= v10)
        return sub_1B142AA64(v26, a2, v27, a3);
      v14 = *(_QWORD *)(v28 + 8 * v6);
      if (!v14)
      {
        v6 = v13 + 2;
        if (v13 + 2 >= v10)
          return sub_1B142AA64(v26, a2, v27, a3);
        v14 = *(_QWORD *)(v28 + 8 * v6);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_20:
    v16 = (double *)(*(_QWORD *)(a3 + 48) + 24 * v12);
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = v16[2];
    v20 = (double *)(*(_QWORD *)(a3 + 56) + 16 * v12);
    v21 = *v20;
    v22 = v20[1];
    sub_1B16B9740();
    v23 = a4(*(_QWORD *)&v17, v18, v19, v21, v22);
    result = swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      *(uint64_t *)((char *)v26 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
        return sub_1B142AA64(v26, a2, v27, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return sub_1B142AA64(v26, a2, v27, a3);
  v14 = *(_QWORD *)(v28 + 8 * v15);
  if (v14)
  {
    v6 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v6 >= v10)
      return sub_1B142AA64(v26, a2, v27, a3);
    v14 = *(_QWORD *)(v28 + 8 * v6);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1B15C59F4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  unint64_t i;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  int64_t v67;

  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v36 = 0;
    v64 = a3 + 56;
    v65 = 0;
    v37 = 1 << *(_BYTE *)(a3 + 32);
    if (v37 < 64)
      v38 = ~(-1 << v37);
    else
      v38 = -1;
    v39 = v38 & *(_QWORD *)(a3 + 56);
    v67 = (unint64_t)(v37 + 63) >> 6;
    v40 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v39)
        {
          v41 = __clz(__rbit64(v39));
          v39 &= v39 - 1;
          v42 = v41 | (v36 << 6);
        }
        else
        {
          v43 = v36 + 1;
          if (__OFADD__(v36, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v43 >= v67)
            goto LABEL_79;
          v44 = *(_QWORD *)(v64 + 8 * v43);
          ++v36;
          if (!v44)
          {
            v36 = v43 + 1;
            if (v43 + 1 >= v67)
              goto LABEL_79;
            v44 = *(_QWORD *)(v64 + 8 * v36);
            if (!v44)
            {
              v36 = v43 + 2;
              if (v43 + 2 >= v67)
                goto LABEL_79;
              v44 = *(_QWORD *)(v64 + 8 * v36);
              if (!v44)
              {
                v45 = v43 + 3;
                if (v45 >= v67)
                  goto LABEL_79;
                v44 = *(_QWORD *)(v64 + 8 * v45);
                if (!v44)
                {
                  while (1)
                  {
                    v36 = v45 + 1;
                    if (__OFADD__(v45, 1))
                      goto LABEL_85;
                    if (v36 >= v67)
                      break;
                    v44 = *(_QWORD *)(v64 + 8 * v36);
                    ++v45;
                    if (v44)
                      goto LABEL_61;
                  }
LABEL_79:
                  swift_retain();
                  sub_1B15C3AD8(a1, a2, v65, v5);
                  return;
                }
                v36 = v45;
              }
            }
          }
LABEL_61:
          v39 = (v44 - 1) & v44;
          v42 = __clz(__rbit64(v44)) + (v36 << 6);
        }
        v46 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v42);
        v48 = *v46;
        v47 = v46[1];
        sub_1B16BAA48();
        sub_1B16B9740();
        sub_1B16B98FC();
        v49 = sub_1B16BAA78();
        v50 = -1 << *(_BYTE *)(v4 + 32);
        v51 = v49 & ~v50;
        if (((*(_QWORD *)(v40 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0)
          break;
LABEL_78:
        swift_bridgeObjectRelease();
        v5 = a3;
        v4 = a4;
      }
      v52 = *(_QWORD *)(a4 + 48);
      v53 = (_QWORD *)(v52 + 16 * v51);
      v54 = v53[1];
      v55 = *v53 == v48 && v54 == v47;
      if (!v55 && (sub_1B16BA910(*v53, v54, v48, v47, 0) & 1) == 0)
      {
        v56 = ~v50;
        do
        {
          v51 = (v51 + 1) & v56;
          if (((*(_QWORD *)(v40 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
            goto LABEL_78;
          v57 = (_QWORD *)(v52 + 16 * v51);
          v58 = v57[1];
          v59 = *v57 == v48 && v58 == v47;
        }
        while (!v59 && (sub_1B16BA910(*v57, v58, v48, v47, 0) & 1) == 0);
      }
      swift_bridgeObjectRelease();
      *(unint64_t *)((char *)a1 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
      v35 = __OFADD__(v65++, 1);
      v5 = a3;
      v4 = a4;
      if (v35)
        goto LABEL_83;
    }
  }
  v6 = 0;
  v62 = a4 + 56;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v63 = (unint64_t)(v7 + 63) >> 6;
  v65 = 0;
  v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v66 = v6;
      v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v63)
      goto LABEL_79;
    v14 = *(_QWORD *)(v62 + 8 * v13);
    v15 = v6 + 1;
    if (!v14)
    {
      v15 = v6 + 2;
      if (v6 + 2 >= v63)
        goto LABEL_79;
      v14 = *(_QWORD *)(v62 + 8 * v15);
      if (!v14)
      {
        v15 = v6 + 3;
        if (v6 + 3 >= v63)
          goto LABEL_79;
        v14 = *(_QWORD *)(v62 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v66 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1B16BAA48();
    sub_1B16B9740();
    sub_1B16B98FC();
    v20 = sub_1B16BAA78();
    v21 = -1 << *(_BYTE *)(v5 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    v24 = 1 << v22;
    if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) == 0)
      goto LABEL_36;
    v25 = *(_QWORD *)(a3 + 48);
    v26 = (_QWORD *)(v25 + 16 * v22);
    v27 = v26[1];
    v28 = *v26 == v19 && v27 == v18;
    if (v28 || (sub_1B16BA910(*v26, v27, v19, v18, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      v6 = v66;
      v5 = a3;
      a1[v23] |= v24;
      v35 = __OFADD__(v65++, 1);
      v4 = a4;
      if (v35)
        goto LABEL_82;
    }
    else
    {
      v29 = ~v21;
      for (i = v22 + 1; ; i = v31 + 1)
      {
        v31 = i & v29;
        if (((*(_QWORD *)(v10 + (((i & v29) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v29)) & 1) == 0)
          break;
        v32 = (_QWORD *)(v25 + 16 * v31);
        v33 = v32[1];
        v34 = *v32 == v19 && v33 == v18;
        if (v34 || (sub_1B16BA910(*v32, v33, v19, v18, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v23 = v31 >> 6;
          v24 = 1 << v31;
          goto LABEL_38;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
      v6 = v66;
      v5 = a3;
      v4 = a4;
    }
  }
  v16 = v6 + 4;
  if (v6 + 4 >= v63)
    goto LABEL_79;
  v14 = *(_QWORD *)(v62 + 8 * v16);
  if (v14)
  {
    v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v63)
      goto LABEL_79;
    v14 = *(_QWORD *)(v62 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_21;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

uint64_t sub_1B15C5F30(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_representedElementKind);

  if (!v2)
    return 0;
  v3 = sub_1B16B9860();

  return v3;
}

uint64_t sub_1B15C5F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B15C1DF0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1B15C5FA4(uint64_t a1)
{
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t sub_1B15C5FD8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1B15C600C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1B13DE5B0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = sub_1B16BA70C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1B15C607C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1B16BA70C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1B15C60CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF31D90)
  {
    type metadata accessor for CGSize(255);
    sub_1B13B13B4(&qword_1EEF31D98, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x1E0C9B9F8]);
    v0 = sub_1B16BA55C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF31D90);
  }
}

uint64_t sub_1B15C6144()
{
  uint64_t v0;
  id *v1;
  int v2;

  OUTLINED_FUNCTION_1_1();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B14262CC(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312), *(_BYTE *)(v0 + 320));
  sub_1B14262CC(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336), *(_BYTE *)(v0 + 344));
  sub_1B14262CC(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), *(_BYTE *)(v0 + 368));

  sub_1B14262CC(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 840), *(_BYTE *)(v0 + 848));
  sub_1B14262CC(*(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 864), *(_BYTE *)(v0 + 872));
  sub_1B14262CC(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 888), *(_BYTE *)(v0 + 896));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B14262CC(*(_QWORD *)(v0 + 1480), *(_QWORD *)(v0 + 1488), *(_BYTE *)(v0 + 1496));
  sub_1B14262CC(*(_QWORD *)(v0 + 1504), *(_QWORD *)(v0 + 1512), *(_BYTE *)(v0 + 1520));
  sub_1B14262CC(*(_QWORD *)(v0 + 1528), *(_QWORD *)(v0 + 1536), *(_BYTE *)(v0 + 1544));

  sub_1B14262CC(*(_QWORD *)(v0 + 2008), *(_QWORD *)(v0 + 2016), *(_BYTE *)(v0 + 2024));
  sub_1B14262CC(*(_QWORD *)(v0 + 2032), *(_QWORD *)(v0 + 2040), *(_BYTE *)(v0 + 2048));
  sub_1B14262CC(*(_QWORD *)(v0 + 2056), *(_QWORD *)(v0 + 2064), *(_BYTE *)(v0 + 2072));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (id *)(v0 + 2384);
  v2 = *(unsigned __int8 *)(v0 + 2424);
  if (v2 == 2)
  {

  }
  else if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  return swift_deallocObject();
}

void sub_1B15C6368()
{
  uint64_t v0;

  sub_1B15C16A8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (void *)(v0 + 32), (const void *)(v0 + 1208));
}

uint64_t sub_1B15C637C()
{
  return swift_deallocObject();
}

void sub_1B15C638C()
{
  uint64_t v0;

  sub_1B15C1CD0(v0);
}

void sub_1B15C6394()
{
  sub_1B15C1D28();
}

id sub_1B15C639C()
{
  uint64_t v0;

  return sub_1B15C1C70(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t UIDeviceOrientation.description.getter(uint64_t a1)
{
  unint64_t result;

  result = 0x6E776F4465636166;
  switch(a1)
  {
    case 0:
      result = 0x6E776F6E6B6E75;
      break;
    case 1:
      result = 0x7469617274726F70;
      break;
    case 2:
      result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      result = 0x70616373646E616CLL;
      break;
    case 5:
      result = 0x705565636166;
      break;
    case 6:
      return result;
    default:
      result = 0x446E776F6E6B6E75;
      break;
  }
  return result;
}

unint64_t sub_1B15C649C()
{
  uint64_t *v0;

  return UIDeviceOrientation.description.getter(*v0);
}

uint64_t ShortcutItemHandlerPattern.predicate.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B13C4AEC(*v0);
  return v1;
}

uint64_t ShortcutItemHandlerPattern.init(predicate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShortcutItemHandlerPattern()
{
  return &type metadata for ShortcutItemHandlerPattern;
}

BOOL static FlowOption.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;

  v2 = *(double *)a2;
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) != 1)
      return v3 == 2 && *(_QWORD *)&v2 == 0;
    if (v3 != 1)
      return 0;
  }
  else if (*(_BYTE *)(a2 + 8))
  {
    return 0;
  }
  return *(double *)a1 == v2;
}

ValueMetadata *type metadata accessor for FlowOption()
{
  return &type metadata for FlowOption;
}

double sub_1B15C6558(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  v2 = (double *)(a1 + 40);
  result = 0.0;
  do
  {
    if (!*(_BYTE *)v2)
      result = result + *(v2 - 1);
    v2 += 2;
    --v1;
  }
  while (v1);
  return result;
}

double sub_1B15C6590(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  v2 = (double *)(a1 + 40);
  result = 0.0;
  do
  {
    if (*(_BYTE *)v2 == 1)
      result = result + *(v2 - 1);
    v2 += 2;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t type metadata accessor for FlowBlueprintLayoutCollectionSectionSolver()
{
  return objc_opt_self();
}

double sub_1B15C65EC(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  double v5;
  double *v6;
  double *v7;
  double v8;
  double v9;
  BOOL v10;
  double v11;

  v2 = v1;
  OUTLINED_FUNCTION_57();
  if ((*(_BYTE *)(v2 + 56) & 1) != 0)
  {
    v4 = a1[2];
    v5 = OUTLINED_FUNCTION_0_62();
    v6 = (double *)(v2 + 120);
    if (*(_BYTE *)(v2 + 65) != 1)
      v6 = (double *)(v2 + 152);
    if (*(_BYTE *)(v2 + 65))
      v7 = v6;
    else
      v7 = (double *)(v2 + 72);
    if (*v7 < v4 + v5)
    {
      v4 = 0.0;
      if (!sub_1B158E80C())
        sub_1B15C6558(*(_QWORD *)(v2 + 592));
    }
  }
  else
  {
    v8 = a1[3];
    if (*(double *)(v2 + 160) >= v8 + OUTLINED_FUNCTION_6_2())
    {
      v4 = a1[2];
    }
    else
    {
      v9 = a1[9];
      v10 = sub_1B158E80C();
      v11 = 0.0;
      if (!v10)
        v11 = sub_1B15C6590(*(_QWORD *)(v2 + 592));
      v4 = a1[2] + v9 + v11;
    }
  }
  OUTLINED_FUNCTION_0_62();
  OUTLINED_FUNCTION_6_2();
  return v4;
}

void sub_1B15C6708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned int v4;
  CGRect v5;
  CGRect v6;

  v1 = *(_QWORD *)(v0 + 592);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (unsigned __int8 *)(v1 + 40);
    while (1)
    {
      v4 = *v3;
      v3 += 16;
      if (v4 > 1)
        break;
      if (!--v2)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    if (*(_BYTE *)(v0 + 65) == 1)
    {
      v5.origin.x = OUTLINED_FUNCTION_1_8();
      CGRectGetWidth(v5);
      v6.origin.x = OUTLINED_FUNCTION_1_8();
      CGRectGetHeight(v6);
    }
  }
  OUTLINED_FUNCTION_1_8();
}

uint64_t sub_1B15C67A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CGFloat MinY;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  CGFloat MinX;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  double MaxX;
  double v42;
  double v43;
  uint64_t v44;
  double v45;
  double MaxY;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v1 = v0;
  OUTLINED_FUNCTION_57();
  v3 = v2;
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    v52.origin.x = OUTLINED_FUNCTION_54();
    MinY = CGRectGetMinY(v52);
    v5 = *(double *)(v3 + 24);
    if (v5 >= MinY)
    {
      OUTLINED_FUNCTION_0_141();
      v21 = v40;
    }
    else
    {
      v6 = *(double *)(v3 + 16);
      type metadata accessor for BlueprintLayoutCollectionSectionCursor();
      swift_initStackObject();
      OUTLINED_FUNCTION_3_98();
      v21 = sub_1B1424044(v6, v5, v15, v16, v17, v18, v19, v20, v7, v8, v9, v10, v11, v12, v13, v14, v50, v51);
      OUTLINED_FUNCTION_0_141();
      OUTLINED_FUNCTION_45();
      OUTLINED_FUNCTION_6_88();
      OUTLINED_FUNCTION_9_63();
    }
    v54.origin.x = OUTLINED_FUNCTION_54();
    MaxX = CGRectGetMaxX(v54);
    v42 = MaxX + sub_1B15C6590(*(_QWORD *)(v1 + 592));
    v43 = *(double *)(v21 + 24);
  }
  else
  {
    v53.origin.x = OUTLINED_FUNCTION_54();
    MinX = CGRectGetMinX(v53);
    v23 = *(double *)(v3 + 16);
    if (v23 >= MinX)
    {
      OUTLINED_FUNCTION_0_141();
      v39 = v44;
    }
    else
    {
      v24 = *(double *)(v3 + 24);
      type metadata accessor for BlueprintLayoutCollectionSectionCursor();
      swift_initStackObject();
      OUTLINED_FUNCTION_3_98();
      v39 = sub_1B1424044(v23, v24, v33, v34, v35, v36, v37, v38, v25, v26, v27, v28, v29, v30, v31, v32, v50, v51);
      OUTLINED_FUNCTION_0_141();
      OUTLINED_FUNCTION_45();
      OUTLINED_FUNCTION_6_88();
      OUTLINED_FUNCTION_9_63();
    }
    v45 = *(double *)(v39 + 16);
    v55.origin.x = OUTLINED_FUNCTION_54();
    MaxY = CGRectGetMaxY(v55);
    v43 = MaxY + sub_1B15C6558(*(_QWORD *)(v1 + 592));
    v42 = v45;
  }
  sub_1B158E9F0(v42, v43);
  v48 = v47;
  OUTLINED_FUNCTION_45();
  return v48;
}

double sub_1B15C690C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double MaxY;
  double MaxX;
  double result;

  if ((*(_BYTE *)(v4 + 56) & 1) != 0)
  {
    MaxY = CGRectGetMaxY(*(CGRect *)&a1);
    MaxX = 0.0;
  }
  else
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&a1);
    MaxY = 0.0;
  }
  *(_QWORD *)&result = sub_1B158E9F0(MaxX, MaxY).n128_u64[0];
  return result;
}

double sub_1B15C6950(double *a1)
{
  return sub_1B15C65EC(a1);
}

void sub_1B15C6970()
{
  sub_1B15C6708();
}

uint64_t sub_1B15C6990()
{
  return sub_1B15C67A8();
}

double sub_1B15C69B0(double a1, double a2, double a3, double a4)
{
  return sub_1B15C690C(a1, a2, a3, a4);
}

uint64_t sub_1B15C69D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  return nullsub_1(a1, a2, a3, a4, a5);
}

_QWORD *static StateCommandOptions.default<A>()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;

  OUTLINED_FUNCTION_2_102();
  result = (_QWORD *)OUTLINED_FUNCTION_25();
  result[2] = v3;
  result[3] = v2;
  result[4] = v1;
  result[5] = v0;
  *(_QWORD *)v4 = sub_1B15C6BD4;
  *(_QWORD *)(v4 + 8) = result;
  *(_BYTE *)(v4 + 16) = 0;
  return result;
}

uint64_t StateCommandOptions.init(default:block:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr);
  uint64_t result;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_2_102();
  v5(&v8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v3, v0);
  v7 = v8;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = v1;
  *(_BYTE *)(v4 + 16) = v7;
  return result;
}

uint64_t sub_1B15C6A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *);
  char v17;
  uint64_t result;
  uint64_t v19;
  _BYTE *v20;

  v20 = a3;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_1B16BA328();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v19 - v10;
  v12 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v9, v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(char *))v3;
  v17 = *(_BYTE *)(v3 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, a1, v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    *v20 = v17;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, v5);
    v16(v15);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v5);
  }
  return result;
}

uint64_t sub_1B15C6BC8()
{
  return OUTLINED_FUNCTION_5_6();
}

void sub_1B15C6BD4(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void StateCommandOptions<>.init(off:on:)(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  v6 = OUTLINED_FUNCTION_25();
  *(_BYTE *)(v6 + 16) = v5;
  *(_BYTE *)(v6 + 17) = v4;
  v7 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v7 + 16) = sub_1B15C6C54;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)a3 = sub_1B15C6C6C;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = v4;
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B15C6C48()
{
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_1B15C6C54@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = 16;
  if ((result & 1) == 0)
    v3 = 17;
  *a2 = *(_BYTE *)(v2 + v3);
  return result;
}

uint64_t sub_1B15C6C6C(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void StateCommandOptions<>.init(_:)(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = OUTLINED_FUNCTION_25();
  *(_BYTE *)(v4 + 16) = v3;
  v5 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v5 + 16) = sub_1B145C458;
  *(_QWORD *)(v5 + 24) = v4;
  *(_QWORD *)a2 = sub_1B15C6E70;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v3;
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B15C6CF4()
{
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_1B15C6D00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15C6D28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ButtonToolbarItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ButtonToolbarItemConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonToolbarItemConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonToolbarItemConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for StateCommandOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateCommandOptions);
}

void ShineImageRequest.StaticModel.preparation.getter(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(unsigned __int8 *)(v1 + 24) - 1 < 2;
}

uint64_t ShineImageRequest.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1B16B9740();
  return v1;
}

uint64_t ShineImageRequest.shineOptions.getter()
{
  return swift_retain();
}

id ShineImageRequest.shineColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

double ShineImageRequest.bounds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double ShineImageRequest.offset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

id ShineImageRequest.staticModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(void **)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 120);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_1B13D2504(v2, v3, v4, v5);
}

void ShineImageRequest.context.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 121);
}

uint64_t ShineImageRequest.__allocating_init(shineOptions:shineColor:bounds:offset:whenStatic:)(uint64_t a1, void *a2, uint64_t *a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v18;

  v18 = swift_allocObject();
  ShineImageRequest.init(shineOptions:shineColor:bounds:offset:whenStatic:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v18;
}

BOOL static ShineImageRequest.StaticModel.Preparation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ShineImageRequest.StaticModel.Preparation.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t ShineImageRequest.StaticModel.Preparation.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B15C704C()
{
  unint64_t result;

  result = qword_1EEF34A08;
  if (!qword_1EEF34A08)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ShineImageRequest.StaticModel.Preparation, &type metadata for ShineImageRequest.StaticModel.Preparation);
    atomic_store(result, (unint64_t *)&qword_1EEF34A08);
  }
  return result;
}

uint64_t sub_1B15C7088()
{
  return ShineImageRequest.identifier.getter();
}

uint64_t method lookup function for ShineImageRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShineImageRequest.__allocating_init(shineOptions:shineColor:bounds:offset:whenStatic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void destroy for ShineImageRequest.StaticModel(uint64_t a1)
{
  sub_1B13D2544(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for ShineImageRequest.StaticModel(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B13D2504(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ShineImageRequest.StaticModel(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B13D2504(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1B13D2544(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ShineImageRequest.StaticModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1B13D2544(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShineImageRequest.StaticModel(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShineImageRequest.StaticModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B15C726C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t storeEnumTagSinglePayload for ShineImageRequest.StaticModel.Preparation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15C72D0 + 4 * byte_1B16D5C95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15C7304 + 4 * byte_1B16D5C90[v4]))();
}

uint64_t sub_1B15C7304(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15C730C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15C7314);
  return result;
}

uint64_t sub_1B15C7320(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15C7328);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15C732C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15C7334(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShineImageRequest.StaticModel.Preparation()
{
  return &type metadata for ShineImageRequest.StaticModel.Preparation;
}

void ToolbarTemplateItem.init(item:identifier:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 1;
  OUTLINED_FUNCTION_31();
}

void ToolbarTemplateItem.init<A>(item:toolTip:visibility:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  char v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v10);
  ToolbarTemplateItem.init<A>(item:toolTip:label:visibility:)((uint64_t)v9, a3, (uint64_t)&v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  v11 = v13;
  *(_OWORD *)a4 = v12;
  *(_BYTE *)(a4 + 16) = v11;
  OUTLINED_FUNCTION_27();
}

void ToolbarTemplateItem.init<A>(item:toolTip:label:visibility:)(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_0();
  v6 = sub_1B16B81B0();
  v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = 1;
  OUTLINED_FUNCTION_67();
}

void ToolbarTemplateItem.init<A>(item:style:toolTip:visibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[2];
  __n128 v20;
  unsigned __int8 v21;

  v19[1] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v14 = (char *)v19 - v13;
  v15 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v12, v16);
  v18 = (char *)v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, a2, AssociatedTypeWitness);
  ToolbarTemplateItem.init<A>(item:style:toolTip:label:visibility:)((uint64_t)v18, (uint64_t)v14, a6, (uint64_t)&v20);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, a6);
  OUTLINED_FUNCTION_6_89(v21, v20);
}

void ToolbarTemplateItem.init<A>(item:style:toolTip:label:visibility:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_0();
  v8 = sub_1B16B81B0();
  v10 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v10;
  *(_BYTE *)(a4 + 16) = 1;
  OUTLINED_FUNCTION_27();
}

void ToolbarTemplateItem.init<A>(command:style:toolTip:visibility:)(uint64_t a1, __int128 *a2)
{
  char v2;
  __int128 v3;
  char v4;
  __n128 v5;
  unsigned __int8 v6;

  v2 = *((_BYTE *)a2 + 16);
  v3 = *a2;
  v4 = v2;
  ToolbarTemplateItem.init<A>(command:style:toolTip:label:visibility:)((uint64_t)&v3, 0, (uint64_t)&v5);
  OUTLINED_FUNCTION_6_89(v6, v5);
}

void ToolbarTemplateItem.init<A>(command:style:toolTip:label:visibility:)(uint64_t a1@<X1>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B14AF284(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  OUTLINED_FUNCTION_3_99();
  OUTLINED_FUNCTION_107();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 0;
  OUTLINED_FUNCTION_31();
}

void ToolbarTemplateItem.init<A, B>(command:style:toolTip:visibility:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 v4;
  unsigned __int8 v5;

  OUTLINED_FUNCTION_0_143();
  ToolbarTemplateItem.init<A, B>(command:style:toolTip:label:visibility:)(v0, v1, v2, v3);
  OUTLINED_FUNCTION_6_89(v5, v4);
  OUTLINED_FUNCTION_2_71();
}

void ToolbarTemplateItem.init<A, B>(command:style:toolTip:label:visibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_119(a1, a2, a3, a4);
  OUTLINED_FUNCTION_8_67();
  swift_release();
  sub_1B14AF284(*(void **)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  OUTLINED_FUNCTION_3_99();
  OUTLINED_FUNCTION_107();
  *(_QWORD *)v6 = v5;
  *(_QWORD *)(v6 + 8) = v4;
  *(_BYTE *)(v6 + 16) = 0;
  OUTLINED_FUNCTION_67();
}

void ToolbarTemplateItem.init<A, B>(command:image:toolTip:visibility:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 v4;
  unsigned __int8 v5;

  OUTLINED_FUNCTION_0_143();
  ToolbarTemplateItem.init<A, B>(command:image:toolTip:label:visibility:)(v0, v1, v2, v3);
  OUTLINED_FUNCTION_6_89(v5, v4);
  OUTLINED_FUNCTION_2_71();
}

void ToolbarTemplateItem.init<A, B>(command:image:toolTip:label:visibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_119(a1, a2, a3, a4);
  OUTLINED_FUNCTION_8_67();
  swift_release();
  v6 = *(_QWORD *)(v4 + 8);

  swift_release();
  OUTLINED_FUNCTION_3_99();
  OUTLINED_FUNCTION_107();
  *(_QWORD *)v5 = v4;
  *(_QWORD *)(v5 + 8) = v6;
  *(_BYTE *)(v5 + 16) = 0;
  OUTLINED_FUNCTION_67();
}

uint64_t sub_1B15C7874(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ToolbarTemplateItem.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_150_2();
  return v1;
}

uint64_t destroy for ToolbarTemplateItem()
{
  return sub_1B158BE68();
}

uint64_t _s5TeaUI19ToolbarTemplateItemOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_150_2();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ToolbarTemplateItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_150_2();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B158BE68();
  return a1;
}

uint64_t assignWithTake for ToolbarTemplateItem(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B158BE68();
  return a1;
}

uint64_t getEnumTagSinglePayload for TabBarSplitViewPresentation.BarItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TabBarSplitViewPresentation.BarItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for ToolbarTemplateItem.StaticItem()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for ToolbarTemplateItem.CommandTemplateItem()
{
  OUTLINED_FUNCTION_11_0();
}

_QWORD *_s5TeaUI19ToolbarTemplateItemO19CommandTemplateItemVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  OUTLINED_FUNCTION_7_0();
  return a1;
}

void type metadata accessor for ToolbarTemplateItem.TemplateItem()
{
  OUTLINED_FUNCTION_11_0();
}

id ShineBlend.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v11 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v11;
  return sub_1B13C9BA0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t ShineBlend.blendModeBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1B13C4AEC(v1);
  return v1;
}

uint64_t ShineBlend.alphaBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_retain();
  return v1;
}

void ShineBlend.init(color:blendMode:alphaBlock:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  v31 = a1[5];
  v32 = a1[4];
  v29 = a1[7];
  v30 = a1[6];
  v28 = a1[8];
  v27 = *((_BYTE *)a1 + 72);
  if ((a2 & 0x100000000) != 0)
  {
    v14 = 0;
    v13 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v15 = 0;
    v16 = sub_1B15C7C8C;
    goto LABEL_6;
  }
  v12 = a2;
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = v12;
  v14 = sub_1B15C7CCC;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v15 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v16 = sub_1B14558B0;
LABEL_6:
  v17 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  *a5 = v8;
  a5[1] = v9;
  a5[2] = v10;
  a5[3] = v11;
  a5[4] = v32;
  a5[5] = v31;
  OUTLINED_FUNCTION_2_104(v17, v18, v19, v20, v21, v22, v23, v24, v26, v27, v28, v29, v30);
  a5[10] = v14;
  a5[11] = v13;
  a5[12] = sub_1B14558A8;
  a5[13] = v25;
  OUTLINED_FUNCTION_20();
}

void sub_1B15C7C8C(_QWORD *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1B15C7C98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15C7CBC()
{
  return swift_deallocObject();
}

uint64_t sub_1B15C7CCC()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

double sub_1B15C7CD4(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(double *__return_ptr, uint64_t *);
  double v4;
  uint64_t v5;

  v2 = *(void (**)(double *__return_ptr, uint64_t *))(v1 + 16);
  v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t initializeWithCopy for ShineBlend(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a2 + 64);
  v17 = *(_BYTE *)(a2 + 72);
  sub_1B13C9BA0(*(void **)a2, v5, v6, v7, v8, v9, v10, v11, v16, v17);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v16;
  *(_BYTE *)(a1 + 72) = v17;
  v12 = *(_QWORD *)(a2 + 80);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 88) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShineBlend(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v27 = *(_QWORD *)(a2 + 64);
  v28 = *(_BYTE *)(a2 + 72);
  sub_1B13C9BA0(*(void **)a2, v5, v6, v7, v8, v9, v10, v11, v27, v28);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v27;
  *(_BYTE *)(a1 + 72) = v28;
  sub_1B13C9B68(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v22)
    {
      v24 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v22;
      *(_QWORD *)(a1 + 88) = v24;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_7;
  }
  v23 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 88) = v23;
  swift_retain();
  swift_release();
LABEL_8:
  v25 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v25;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t assignWithTake for ShineBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_BYTE *)(a1 + 72);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = v5;
  sub_1B13C9B68(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  v18 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v18)
    {
      v20 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v18;
      *(_QWORD *)(a1 + 88) = v20;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  v19 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v18;
  *(_QWORD *)(a1 + 88) = v19;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShineBlend(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for ShineBlend(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 104) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 48) = 2 * -a2;
      *(_BYTE *)(a1 + 72) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

double sub_1B15C80E8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_50();
  return *(double *)v0;
}

uint64_t sub_1B15C811C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  OUTLINED_FUNCTION_57();
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI16TouchInsetsLabel_touchInsets);
  result = swift_beginAccess();
  *v5 = v4;
  v5[1] = v3;
  v5[2] = v2;
  v5[3] = v1;
  return result;
}

uint64_t (*sub_1B15C8178())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1B15C81BC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_1B15C80E8();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

uint64_t sub_1B15C81E8()
{
  return sub_1B15C811C();
}

BOOL sub_1B15C8210(CGFloat a1, CGFloat a2)
{
  double *v2;
  void *v3;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGPoint v15;
  CGRect v16;

  objc_msgSend(v3, sel_bounds);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_0_50();
  v16.origin.x = UIEdgeInsetsInsetRect(v7, v9, v11, v13, *v2, v2[1]);
  v15.x = a1;
  v15.y = a2;
  return CGRectContainsPoint(v16, v15);
}

id TouchInsetsLabel.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id TouchInsetsLabel.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t v5;

  OUTLINED_FUNCTION_57();
  v5 = OUTLINED_FUNCTION_2_105(OBJC_IVAR____TtC5TeaUI16TouchInsetsLabel_touchInsets);
  v1 = OUTLINED_FUNCTION_54();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

uint64_t type metadata accessor for TouchInsetsLabel()
{
  return objc_opt_self();
}

id TouchInsetsLabel.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TouchInsetsLabel.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_2_105(OBJC_IVAR____TtC5TeaUI16TouchInsetsLabel_touchInsets);
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id TouchInsetsLabel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TouchInsetsLabel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for TouchInsetsLabel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TouchInsetsLabel.touchInsets.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TouchInsetsLabel.touchInsets.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TouchInsetsLabel.touchInsets.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

void BlockBarButtonItem.__allocating_init(barButtonSystemItem:actionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;

  v5 = (char *)objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithBarButtonSystemItem_target_action_, a1, 0, sel_barButtonItemPressedWithSender_);
  OUTLINED_FUNCTION_5_83(v5, sel_setTarget_);
  v6 = &v5[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler];
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler];
  *(_QWORD *)v6 = a2;
  *((_QWORD *)v6 + 1) = a3;
  sub_1B13B9100(v7);

  OUTLINED_FUNCTION_31();
}

uint64_t static BlockBarButtonItem.backBarButtonIdentifier.getter()
{
  return 0x61622E6975616574;
}

uint64_t static BlockBarButtonItem.doneBarButtonIdentifier.getter()
{
  return 0x6F642E6975616574;
}

uint64_t sub_1B15C85CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1B16B9740();
  return sub_1B13A25C4(v1, v2);
}

uint64_t sub_1B15C8608()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_50();
  v1 = *v0;
  sub_1B16B9740();
  return v1;
}

void sub_1B15C8648()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15C8684()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_0_50();
  return *v0;
}

uint64_t sub_1B15C86B4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_shouldRecolor);
  result = OUTLINED_FUNCTION_13();
  *v3 = a1;
  return result;
}

void sub_1B15C86F8()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlockBarButtonItem.__allocating_init(title:style:actionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  void *v5;
  id v6;
  char *v7;

  if (a2)
  {
    v5 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(v3), sel_initWithTitle_style_target_action_, v5, a3, 0, sel_barButtonItemPressedWithSender_);

  v7 = (char *)v6;
  OUTLINED_FUNCTION_5_83(v7, sel_setTarget_);
  OUTLINED_FUNCTION_10_57((uint64_t *)&v7[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler]);

  OUTLINED_FUNCTION_67();
}

void BlockBarButtonItem.__allocating_init(image:style:actionHandler:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v4;

  v4 = objc_msgSend(OUTLINED_FUNCTION_9_64(v2), sel_initWithImage_style_target_action_, a1, a2, 0, sel_barButtonItemPressedWithSender_);
  OUTLINED_FUNCTION_5_83(v4, sel_setTarget_);

  OUTLINED_FUNCTION_6_90(OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler);
  OUTLINED_FUNCTION_31();
}

void BlockBarButtonItem.__allocating_init(image:landscapeImagePhone:style:actionHandler:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  char *v6;

  v6 = (char *)objc_msgSend(OUTLINED_FUNCTION_9_64(v3), sel_initWithImage_landscapeImagePhone_style_target_action_, a1, a2, a3, 0, sel_barButtonItemPressedWithSender_);
  OUTLINED_FUNCTION_5_83(v6, sel_setTarget_);

  OUTLINED_FUNCTION_10_57((uint64_t *)&v6[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler]);
  OUTLINED_FUNCTION_67();
}

void BlockBarButtonItem.__allocating_init(customView:actionHandler:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  void *v5;
  id v6;
  char *v7;
  id v8;

  v3 = (char *)objc_msgSend(OUTLINED_FUNCTION_9_64(v1), sel_init);
  v4 = sub_1B15C89D0(a1);
  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v3, sel_barButtonItemPressedWithSender_, 64);
  v5 = *(void **)&v3[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_customContentView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_customContentView] = a1;
  v6 = a1;

  v7 = v3;
  v8 = v4;
  objc_msgSend(v7, sel_setCustomView_, v8);

  OUTLINED_FUNCTION_6_90(OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler);
  OUTLINED_FUNCTION_67();
}

id sub_1B15C89D0(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = (id)v2;
    v4 = a1;
  }
  else
  {
    objc_msgSend(a1, sel_frame);
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, v5, v6, v7, v8);
    objc_msgSend(a1, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(v3, sel_addSubview_, a1);
  }
  return v3;
}

uint64_t sub_1B15C8A9C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t result;

  v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler);
  if (v1)
  {
    swift_retain();
    v1(v0);
    return sub_1B13B9100((uint64_t)v1);
  }
  return result;
}

uint64_t sub_1B15C8BB0()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for BlockBarButtonItem();
  v1 = objc_msgSendSuper2(&v8, sel_accessibilityLabel);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1B16B9860();

  }
  else
  {
    v4 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_customContentView];
    if (v4)
    {
      v5 = sub_1B163109C(v4);
      if (v6)
        return v5;
      else
        return 0;
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

void sub_1B15C8CB8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_super v4;

  if (a2)
  {
    v3 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for BlockBarButtonItem();
  objc_msgSendSuper2(&v4, sel_setAccessibilityLabel_, v3);

}

id BlockBarButtonItem.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

id BlockBarButtonItem.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);

  return v2;
}

void BlockBarButtonItem.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  objc_super v15;

  v3 = sub_1B16B7BE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)&v1[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_identifier];
  v9 = v1;
  sub_1B16B7BD4();
  v10 = sub_1B16B7BBC();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  *v8 = v10;
  v8[1] = v12;
  v9[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_shouldRecolor] = 0;
  v13 = &v9[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_actionHandler];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5TeaUI18BlockBarButtonItem_customContentView] = 0;

  v14 = (objc_class *)type metadata accessor for BlockBarButtonItem();
  v15.receiver = v9;
  v15.super_class = v14;
  objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_27();
}

id BlockBarButtonItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlockBarButtonItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B15C8F14()
{
  return sub_1B15C8608();
}

void sub_1B15C8F34(Swift::OpaquePointer a1)
{
  BlockBarButtonItem.recolor(with:)(a1);
}

void sub_1B15C8F54(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1B15C8608();
  a1[1] = v2;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15C8F7C(_BYTE *a1@<X8>)
{
  *a1 = sub_1B15C8684() & 1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15C8FA4(char *a1)
{
  sub_1B15C86B4(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t method lookup function for BlockBarButtonItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlockBarButtonItem.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BlockBarButtonItem.identifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BlockBarButtonItem.identifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BlockBarButtonItem.shouldRecolor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BlockBarButtonItem.shouldRecolor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BlockBarButtonItem.shouldRecolor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

CGPoint __swiftcall CardViewLayoutOptions.cardOrigin(for:in:layoutMargins:)(TeaUI::CardViewPresentationState a1, __C::CGRect in, UIEdgeInsets layoutMargins)
{
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  double Height;
  double v15;
  double v16;
  double v17;
  CGPoint result;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;

  v19 = *(_BYTE *)a1;
  v4 = *v3;
  v5 = *((_BYTE *)v3 + 8);
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  v8 = v3[4];
  v9 = *((_BYTE *)v3 + 40);
  v10 = v3[6];
  v11 = *((_BYTE *)v3 + 56);
  v12 = v3[8];
  v13 = *((_BYTE *)v3 + 72);
  Height = CGRectGetHeight((CGRect)in);
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v26 = v9;
  v27 = v10;
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v20 = v19;
  CardViewLayoutOptions.cardHeight(for:in:layoutMargins:)((uint64_t)&v20);
  v16 = Height - v15;
  v17 = 0.0;
  result.y = v16;
  result.x = v17;
  return result;
}

uint64_t static CardViewLayoutOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t result;

  if (qword_1ED17B640 != -1)
    result = swift_once();
  v2 = byte_1ED17AA08;
  v3 = qword_1ED17AA10;
  v4 = byte_1ED17AA18;
  v5 = qword_1ED17AA20;
  v6 = byte_1ED17AA28;
  v7 = qword_1ED17AA30;
  v8 = byte_1ED17AA38;
  v9 = qword_1ED17AA40;
  v10 = byte_1ED17AA48;
  *(_QWORD *)a1 = qword_1ED17AA00;
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = v10;
  return result;
}

uint64_t getEnumTagSinglePayload for CardViewLayoutOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 73))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for CardViewLayoutOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CardViewLayoutOptions.Snap(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for CardViewLayoutOptions.Snap(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1B15C9374(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_1B15C9380(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

char *sub_1B15C9390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  objc_class *ObjectType;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  void *v19;
  char *v20;
  id v21;
  objc_super v23;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v15 = v6;
  *(_QWORD *)&v6[v13] = objc_msgSend(v14, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_data] = a1;
  v16 = &v15[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_onKeyboardWillChange];
  *(_QWORD *)v16 = a2;
  *((_QWORD *)v16 + 1) = a3;
  v17 = &v15[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_onDone];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  swift_retain();
  swift_retain();

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, 0, 0);
  v19 = *(void **)&v18[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView];
  v20 = v18;
  v21 = v19;
  objc_msgSend(v21, sel_setDataSource_, v20);

  swift_release();
  swift_release();
  return v20;
}

void sub_1B15C94E0()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15C9590()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD v23[4];
  objc_super v24;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_4();
  v24.receiver = v0;
  v24.super_class = v2;
  objc_msgSendSuper2(&v24, sel_viewDidLoad);
  v3 = objc_msgSend(v0, sel_navigationItem);
  v4 = OUTLINED_FUNCTION_32_0((uint64_t)v3, sel_navigationItem);
  sub_1B152A798(v4);
  if (!v6)
  {
    v5 = 0x4120676E69727453;
    v6 = 0xEC00000079617272;
  }
  sub_1B152A7FC(v5, v6, v3);

  v7 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView];
  type metadata accessor for TextFieldTableViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)OUTLINED_FUNCTION_11_5();
  objc_msgSend(v7, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v9);

  v11 = OUTLINED_FUNCTION_32_0(v10, sel_view);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_addSubview_, v7);

    sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838D0);
    v13 = sub_1B13AB3B4();
    v23[3] = v2;
    v23[0] = v1;
    v14 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v15 = v1;
    sub_1B152A5B0(v13, 0, v23, (uint64_t)sel_doAdd);
    v17 = (void *)v16;
    v18 = OUTLINED_FUNCTION_32_0(v16, sel_navigationItem);
    sub_1B1426CBC();
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1B16C95D0;
    *(_QWORD *)(v19 + 32) = v17;
    v23[0] = v19;
    sub_1B16B9B78();
    v20 = v23[0];
    v21 = v17;
    sub_1B15CA6A0(v20, 0, v18);

    v22 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    objc_msgSend(v22, sel_addObserver_selector_name_object_, v15, sel_keyboardWillChangeFrameWithNotification_, *MEMORY[0x1E0DC4FD8], 0);

  }
  else
  {
    __break(1u);
  }
}

id sub_1B15C9818(char a1)
{
  char *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1 & 1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView], sel_reloadData);
}

uint64_t sub_1B15C98B0(char a1)
{
  char *v1;
  void (*v3)(uint64_t);
  uint64_t v4;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v6, sel_viewWillDisappear_, a1 & 1);
  objc_msgSend(v1, sel_becomeFirstResponder);
  objc_msgSend(v1, sel_resignFirstResponder);
  v3 = *(void (**)(uint64_t))&v1[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_onDone];
  OUTLINED_FUNCTION_0_20();
  v4 = sub_1B16B9740();
  v3(v4);
  return swift_bridgeObjectRelease();
}

id sub_1B15C9994()
{
  char *v0;
  void *v1;
  id result;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v12, sel_viewDidLayoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView];
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    return objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B15C9A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_3_12();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI25StringArrayViewController_data);
  OUTLINED_FUNCTION_13();
  sub_1B1481C9C();
  v8 = *(_QWORD *)(*v7 + 16);
  sub_1B1481D20(v8);
  v9 = *v7;
  *(_QWORD *)(v9 + 16) = v8 + 1;
  v10 = v9 + 16 * v8;
  *(_QWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 40) = 0xE000000000000000;
  swift_endAccess();
  v11 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView);
  objc_msgSend(v11, sel_reloadData);
  MEMORY[0x1B5E1B6A4](*(_QWORD *)(*v7 + 16) - 1, 0);
  v12 = (void *)sub_1B16B7CDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v13 = objc_msgSend(v11, sel_cellForRowAtIndexPath_, v12);

  if (v13)
  {
    v15 = OUTLINED_FUNCTION_32_0(v14, sel_ts_editableTextField);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, sel_becomeFirstResponder);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1B15C9C18(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1
                                                    + OBJC_IVAR____TtC5TeaUI25StringArrayViewController_onKeyboardWillChange))(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI25StringArrayViewController_tableView));
}

uint64_t sub_1B15C9CF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI25StringArrayViewController_data;
  OUTLINED_FUNCTION_0_20();
  return *(_QWORD *)(*(_QWORD *)v1 + 16);
}

id sub_1B15C9D48(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id result;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v3 = v2;
  v6 = OUTLINED_FUNCTION_3_12();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  v10 = (void *)OUTLINED_FUNCTION_11_5();
  v11 = (void *)sub_1B16B7CDC();
  v12 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v10, v11);

  type metadata accessor for TextFieldTableViewCell();
  v13 = (void *)swift_dynamicCastClassUnconditional();
  result = OUTLINED_FUNCTION_109((uint64_t)objc_msgSend(v13, sel_setSelectionStyle_, 0), sel_ts_editableTextField);
  if (!result)
    goto LABEL_12;
  v15 = result;
  v16 = sub_1B16B7D24();
  v32[1] = v3;
  v17 = v3 + OBJC_IVAR____TtC5TeaUI25StringArrayViewController_data;
  result = (id)OUTLINED_FUNCTION_13();
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v16 >= *(_QWORD *)(*(_QWORD *)v17 + 16))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v18 = *(_QWORD *)v17 + 16 * v16;
  v19 = *(_QWORD *)(v18 + 32);
  v20 = *(_QWORD *)(v18 + 40);
  sub_1B16B9740();
  sub_1B152A78C(v19, v20, v15);

  result = OUTLINED_FUNCTION_109(v21, sel_ts_editableTextField);
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v22 = result;
  objc_msgSend(result, sel_setEnabled_, 1);

  v24 = OUTLINED_FUNCTION_109(v23, sel_textLabel);
  if (v24)
  {
    v25 = v24;
    v32[3] = 0x206D657449;
    v32[4] = 0xE500000000000000;
    v32[2] = sub_1B16B7D24();
    sub_1B16BA8B0();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    sub_1B152A78C(0x206D657449, 0xE500000000000000, v25);

  }
  v26 = OUTLINED_FUNCTION_109((uint64_t)v24, sel_textLabel);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v27, sel_setTextColor_, v28);

  }
  v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v30 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v31 + v30, (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  sub_1B1561824((uint64_t)sub_1B15CA654, v31);
  swift_release();
  return v13;
}

void sub_1B15CA070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1B5E1F2F8](v5);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = sub_1B16B7D24();
    v9 = &v7[OBJC_IVAR____TtC5TeaUI25StringArrayViewController_data];
    swift_beginAccess();
    v10 = *(_QWORD *)v9;
    sub_1B16B9740();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v9 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v8 & 0x8000000000000000) == 0)
        goto LABEL_4;
    }
    else
    {
      sub_1B162F464();
      v10 = v13;
      *(_QWORD *)v9 = v13;
      if ((v8 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v8 < *(_QWORD *)(v10 + 16))
        {
          v12 = v10 + 16 * v8;
          *(_QWORD *)(v12 + 32) = a1;
          *(_QWORD *)(v12 + 40) = a2;
          swift_endAccess();

          swift_bridgeObjectRelease();
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
}

id sub_1B15CA21C(id result, uint64_t a2, uint64_t a3)
{
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;

  if (a2 == 1)
  {
    v4 = result;
    v5 = sub_1B16B7D24();
    OUTLINED_FUNCTION_13();
    sub_1B162DF04(v5);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1B15CA56C();
    v6 = OUTLINED_FUNCTION_3_12();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1B16C51D0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a3, v6);
    v10 = (void *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_deleteRowsAtIndexPaths_withRowAnimation_, v10, 0);

    return objc_msgSend(v4, sel_reloadData);
  }
  return result;
}

unint64_t sub_1B15CA40C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI25StringArrayViewController_data;
  OUTLINED_FUNCTION_0_20();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    return 0xD000000000000015;
  else
    return 0;
}

void sub_1B15CA4AC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for StringArrayViewController()
{
  return objc_opt_self();
}

void sub_1B15CA56C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED183950)
  {
    sub_1B16B7D60();
    v0 = sub_1B16BA8BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED183950);
  }
}

uint64_t sub_1B15CA5C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15CA5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_3_12();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1B15CA654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_3_12();
  sub_1B15CA070(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1B15CA6A0(uint64_t a1, char a2, void *a3)
{
  id v5;

  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1837E0);
  v5 = (id)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setRightBarButtonItems_animated_, v5, a2 & 1);

}

void sub_1B15CA720(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  OUTLINED_FUNCTION_32();
  v4 = a2;
  v3();
  OUTLINED_FUNCTION_45();

}

uint64_t sub_1B15CA768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  OUTLINED_FUNCTION_13();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B14297B8(a1, (uint64_t)&v29);
    if (!swift_dynamicCast())
      return swift_release();
    if ((*(_BYTE *)(a4 + 33) & 1) == 0)
    {
      v27 = a6;
      v28 = a7;
      if (qword_1ED1889D8 != -1)
        swift_once();
      v25 = (void *)qword_1ED1904B8;
      sub_1B13E6FA8();
      v14 = OUTLINED_FUNCTION_25();
      *(_OWORD *)(v14 + 16) = xmmword_1B16C6D10;
      v15 = *(_QWORD *)(a4 + 16);
      v16 = *(_QWORD *)(a4 + 24);
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      v17 = sub_1B140493C();
      *(_QWORD *)(v14 + 64) = v17;
      *(_QWORD *)(v14 + 32) = v15;
      *(_QWORD *)(v14 + 40) = v16;
      v29 = 0;
      v30 = 0xE000000000000000;
      v26 = v25;
      sub_1B16B9740();
      sub_1B16BA6B8();
      v18 = v29;
      v19 = v30;
      v20 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 104) = v17;
      *(_QWORD *)(v14 + 72) = v18;
      *(_QWORD *)(v14 + 80) = v19;
      v29 = 0;
      v30 = 0xE000000000000000;
      sub_1B16BA6B8();
      v21 = v29;
      v22 = v30;
      *(_QWORD *)(v14 + 136) = v20;
      *(_QWORD *)(v14 + 144) = v17;
      *(_QWORD *)(v14 + 112) = v21;
      *(_QWORD *)(v14 + 120) = v22;
      sub_1B16BA058();
      sub_1B16B8B58();

      swift_bridgeObjectRelease();
      a6 = v27;
      a7 = v28;
    }
    v23 = swift_retain();
    sub_1B15CB570(v23, a4, a2, a5, a6, a7);
    swift_release();
    if (a2)
    {
      v24 = swift_retain();
      sub_1B15CB49C(v24, a4, 0, a2);
      return swift_release_n();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_1B15CA9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;

  v9 = *a5;
  sub_1B13ECA5C(0, qword_1ED179620, (void (*)(uint64_t))type metadata accessor for CopyCommandContext);
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v33 - v16;
  v18 = type metadata accessor for CopyCommandContext();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1B14297B8(a1, (uint64_t)&v38);
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v18);
      sub_1B15CB684();
      if ((*(_BYTE *)(a4 + 33) & 1) == 0)
      {
        v35 = v9;
        v36 = a2;
        if (qword_1ED1889D8 != -1)
          swift_once();
        v34 = (id)qword_1ED1904B8;
        sub_1B13E6FA8();
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1B16C6D10;
        v23 = *(_QWORD *)(a4 + 16);
        v24 = *(_QWORD *)(a4 + 24);
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
        v25 = sub_1B140493C();
        *(_QWORD *)(v22 + 64) = v25;
        *(_QWORD *)(v22 + 32) = v23;
        *(_QWORD *)(v22 + 40) = v24;
        v38 = 0;
        v39 = 0xE000000000000000;
        v34 = v34;
        sub_1B16B9740();
        sub_1B16BA6B8();
        v26 = v38;
        v27 = v39;
        v28 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v22 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v22 + 104) = v25;
        *(_QWORD *)(v22 + 72) = v26;
        *(_QWORD *)(v22 + 80) = v27;
        v38 = 0;
        v39 = 0xE000000000000000;
        v37 = a5;
        sub_1B16BA6B8();
        v29 = v38;
        v30 = v39;
        *(_QWORD *)(v22 + 136) = v28;
        *(_QWORD *)(v22 + 144) = v25;
        *(_QWORD *)(v22 + 112) = v29;
        *(_QWORD *)(v22 + 120) = v30;
        sub_1B16BA058();
        v31 = v34;
        sub_1B16B8B58();

        swift_bridgeObjectRelease();
        a2 = v36;
      }
      swift_retain();
      sub_1B15CB6F0();
      swift_release();
      if (a2)
      {
        sub_1B14AFBA0((uint64_t)v21, (uint64_t)v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
        v32 = swift_retain();
        sub_1B15CB80C(v32, a4, (uint64_t)v14, a2);
        swift_release_n();
        sub_1B15CB6B8((uint64_t)v14, qword_1ED179620, (void (*)(uint64_t))type metadata accessor for CopyCommandContext);
        sub_1B14AFDBC((uint64_t)v21);
      }
      else
      {
        sub_1B14AFDBC((uint64_t)v21);
        swift_release();
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v18);
      swift_release();
      sub_1B15CB6B8((uint64_t)v17, qword_1ED179620, (void (*)(uint64_t))type metadata accessor for CopyCommandContext);
    }
  }
}

uint64_t sub_1B15CAD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    sub_1B14297B8(a1, (uint64_t)&v26);
    v9 = MEMORY[0x1E0DEA968];
    if (!swift_dynamicCast() || !v25)
      goto LABEL_10;
    v10 = v24;
    if ((*(_BYTE *)(a4 + 33) & 1) == 0)
    {
      v23 = a2;
      if (qword_1ED1889D8 != -1)
        swift_once();
      v21 = (void *)qword_1ED1904B8;
      sub_1B13E6FA8();
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1B16C6D10;
      v12 = *(_QWORD *)(a4 + 16);
      v13 = *(_QWORD *)(a4 + 24);
      *(_QWORD *)(v11 + 56) = v9;
      v14 = sub_1B140493C();
      *(_QWORD *)(v11 + 64) = v14;
      *(_QWORD *)(v11 + 32) = v12;
      *(_QWORD *)(v11 + 40) = v13;
      v26 = 0;
      v27 = 0xE000000000000000;
      v22 = v21;
      sub_1B16B9740();
      sub_1B16BA6B8();
      v15 = v26;
      v16 = v27;
      *(_QWORD *)(v11 + 96) = v9;
      *(_QWORD *)(v11 + 104) = v14;
      *(_QWORD *)(v11 + 72) = v15;
      *(_QWORD *)(v11 + 80) = v16;
      v26 = 0;
      v27 = 0xE000000000000000;
      sub_1B16BA6B8();
      v17 = v26;
      v18 = v27;
      *(_QWORD *)(v11 + 136) = v9;
      *(_QWORD *)(v11 + 144) = v14;
      *(_QWORD *)(v11 + 112) = v17;
      *(_QWORD *)(v11 + 120) = v18;
      sub_1B16BA058();
      sub_1B16B8B58();

      v10 = v24;
      swift_bridgeObjectRelease();
      a2 = v23;
    }
    v19 = (void *)objc_opt_self();
    swift_retain();
    v20 = objc_msgSend(v19, sel_generalPasteboard);
    sub_1B15CB3B0(v10, v25, v20);
    swift_release();

    if (a2)
    {
      swift_retain();
      sub_1B16B9740();
      sub_1B15CB9CC(v8, a4, v10, v25, a2);
      swift_bridgeObjectRelease_n();
      return swift_release_n();
    }
    else
    {
LABEL_10:
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B15CB018(uint64_t a1)
{
  uint64_t result;
  _BYTE v3[32];

  OUTLINED_FUNCTION_13();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B14297B8(a1, (uint64_t)v3);
    if (swift_dynamicCast())
    {
      swift_release();
      return 1;
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  return result;
}

BOOL sub_1B15CB0C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  _BOOL8 v16;
  _BYTE v19[32];

  sub_1B13ECA5C(0, (unint64_t *)&qword_1ED188A30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = &v19[-v4 - 8];
  sub_1B13ECA5C(0, qword_1ED179620, (void (*)(uint64_t))type metadata accessor for CopyCommandContext);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = &v19[-v8 - 8];
  v10 = type metadata accessor for CopyCommandContext();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return 0;
  sub_1B14297B8(a1, (uint64_t)v19);
  if (!swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
    swift_release();
    sub_1B15CB6B8((uint64_t)v9, qword_1ED179620, (void (*)(uint64_t))type metadata accessor for CopyCommandContext);
    return 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  sub_1B15CB684();
  v14 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1B15CB95C();
  v15 = sub_1B16B7AE4();
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v15) != 1;
  sub_1B15CB6B8((uint64_t)v5, (unint64_t *)&qword_1ED188A30, v14);
  swift_release();
  sub_1B14AFDBC((uint64_t)v13);
  return v16;
}

uint64_t sub_1B15CB2D4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[32];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B14297B8(a1, (uint64_t)v4);
    if (swift_dynamicCast())
    {
      swift_release();
      if (v3)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1B15CB38C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1B15CB3B0(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;

  v4 = (void *)sub_1B16B983C();
  objc_msgSend(a3, sel_setString_, v4);
  OUTLINED_FUNCTION_1_5(v4);
}

void sub_1B15CB3EC(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;

  v4 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setString_, v4);
  OUTLINED_FUNCTION_1_5(v4);
}

uint64_t sub_1B15CB434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1B15CA768(a1, a2, a3, a4, *a5, (uint64_t)sub_1B14B6D08, (uint64_t)&block_descriptor_55);
}

uint64_t sub_1B15CB460(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B15CB434(a1, a2, v2[2], v2[3], v2 + 4);
}

uint64_t sub_1B15CB46C(uint64_t a1)
{
  return sub_1B15CB018(a1) & 1;
}

uint64_t sub_1B15CB48C(uint64_t a1)
{
  return sub_1B15CB46C(a1);
}

uint64_t sub_1B15CB49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(uint64_t, _QWORD *);
  _QWORD v8[6];

  v8[0] = a1;
  v8[1] = &protocol witness table for CommandCenter;
  sub_1B15CB684();
  v6 = *(void (**)(uint64_t, _QWORD *))(a4 + 136);
  swift_unknownObjectRetain();
  v6(a2, v8);
  return sub_1B1496F4C((uint64_t)v8);
}

uint64_t sub_1B15CB534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1B15CA768(a1, a2, a3, a4, *a5, (uint64_t)sub_1B14B6D08, (uint64_t)&block_descriptor_18_3);
}

uint64_t sub_1B15CB560(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B15CB534(a1, a2, v2[2], v2[3], v2 + 4);
}

void sub_1B15CB570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3BD0]), sel_init);
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v12[4] = a5;
  v12[5] = 0;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1B15CA720;
  v12[3] = a6;
  v10 = _Block_copy(v12);
  v11 = v8;
  objc_msgSend(v9, sel_requestSceneSessionActivation_userActivity_options_errorHandler_, 0, 0, v11, v10);
  _Block_release(v10);

}

void sub_1B15CB650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD **a5)
{
  sub_1B15CA9C4(a1, a2, a3, a4, *a5);
}

void sub_1B15CB65C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B15CB650(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (_QWORD **)(v2 + 32));
}

BOOL sub_1B15CB668(uint64_t a1)
{
  return sub_1B15CB0C0(a1);
}

BOOL sub_1B15CB674(uint64_t a1)
{
  return sub_1B15CB668(a1);
}

void sub_1B15CB684()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_120_0();
  v2 = v1(v0);
  OUTLINED_FUNCTION_127(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15CB6B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1B13ECA5C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15CB6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  sub_1B13ECA5C(0, (unint64_t *)&qword_1ED188A30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = (char *)&v9 - v2;
  sub_1B15CB95C();
  v4 = sub_1B16B7AE4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    sub_1B15CB6B8((uint64_t)v3, (unint64_t *)&qword_1ED188A30, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    v5 = sub_1B16B7A60();
    v7 = v6;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    v8 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
    sub_1B15CB3EC(v5, v7, v8);

  }
}

uint64_t sub_1B15CB80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t, _QWORD *);
  __int128 v14;
  __int128 v15;
  _QWORD v16[6];

  sub_1B13ECA5C(0, qword_1ED179620, (void (*)(uint64_t))type metadata accessor for CopyCommandContext);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v14 - v9;
  sub_1B15CB95C();
  v11 = type metadata accessor for CopyCommandContext();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_1B15CB6B8((uint64_t)v10, qword_1ED179620, (void (*)(uint64_t))type metadata accessor for CopyCommandContext);
    v14 = 0u;
    v15 = 0u;
  }
  else
  {
    *((_QWORD *)&v15 + 1) = v11;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v14);
    sub_1B15CB684();
  }
  v16[0] = a1;
  v16[1] = &protocol witness table for CommandCenter;
  sub_1B15CB684();
  v12 = *(void (**)(uint64_t, _QWORD *))(a4 + 136);
  swift_unknownObjectRetain();
  v12(a2, v16);
  return sub_1B1496F4C((uint64_t)v16);
}

void sub_1B15CB95C()
{
  uint64_t v0;
  unint64_t *v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_120_0();
  sub_1B13ECA5C(v0, v1, v2);
  OUTLINED_FUNCTION_127(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15CB998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B15CAD58(a1, a2, a3, a4);
}

uint64_t sub_1B15CB9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B15CB998(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1B15CB9B0(uint64_t a1)
{
  return sub_1B15CB2D4(a1);
}

uint64_t sub_1B15CB9BC(uint64_t a1)
{
  return sub_1B15CB9B0(a1);
}

uint64_t sub_1B15CB9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v7)(uint64_t, _QWORD *);
  _QWORD v9[6];

  v9[0] = a1;
  v9[1] = &protocol witness table for CommandCenter;
  sub_1B15CB684();
  v7 = *(void (**)(uint64_t, _QWORD *))(a5 + 136);
  sub_1B16B9740();
  swift_retain();
  v7(a2, v9);
  return sub_1B1496F4C((uint64_t)v9);
}

Swift::Void __swiftcall SeparatorView.clearSelections()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected);
  OUTLINED_FUNCTION_13();
  *v1 = 0;
  OUTLINED_FUNCTION_7_71();
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_isHighlighted);
  OUTLINED_FUNCTION_13();
  *v2 = 0;
  OUTLINED_FUNCTION_7_71();
}

void SeparatorView.isSelected.setter(char a1)
{
  sub_1B15CBB14(a1, &OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected);
}

void SeparatorView.isHighlighted.setter(char a1)
{
  sub_1B15CBB14(a1, &OBJC_IVAR____TtC5TeaUI13SeparatorView_isHighlighted);
}

void sub_1B15CBB14(char a1, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v4;

  v4 = (_BYTE *)(v2 + *a2);
  OUTLINED_FUNCTION_13();
  *v4 = a1;
  OUTLINED_FUNCTION_7_71();
  OUTLINED_FUNCTION_90();
}

BOOL static SeparatorView.LayoutStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void SeparatorView.LayoutStyle.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

void SeparatorView.layoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_layoutStyle);
  OUTLINED_FUNCTION_13();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

void SeparatorView.layoutStyle.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_layoutStyle);
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  OUTLINED_FUNCTION_90();
}

void SeparatorView.layoutStyle.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void SeparatorView.visibilityStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_visibilityStyle);
  OUTLINED_FUNCTION_13();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B15CBCA8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_visibilityStyle);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B15CBCF8(char *a1)
{
  char v1;

  v1 = *a1;
  SeparatorView.visibilityStyle.setter(&v1);
}

void SeparatorView.visibilityStyle.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_visibilityStyle);
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  sub_1B15CBD70();
  OUTLINED_FUNCTION_90();
}

void sub_1B15CBD70()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  void *v3;
  id v4;
  objc_super v5;
  objc_super v6;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtC5TeaUI13SeparatorView_visibilityStyle];
  swift_beginAccess();
  if ((*v2 & 1) != 0)
  {
    v7.receiver = v0;
    v7.super_class = ObjectType;
    objc_msgSendSuper2(&v7, sel_setHidden_, 0);
    v3 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI13SeparatorView__backgroundColor];
    v6.receiver = v0;
    v6.super_class = ObjectType;
    v4 = v3;
    objc_msgSendSuper2(&v6, sel_setBackgroundColor_, v4);
    sub_1B15CC4A0();

  }
  else
  {
    v5.receiver = v0;
    v5.super_class = ObjectType;
    objc_msgSendSuper2(&v5, sel_setHidden_, 1);
  }
}

void SeparatorView.backgroundColor.setter(void *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v3, sel_setBackgroundColor_, a1);
  sub_1B15CC4A0();

  OUTLINED_FUNCTION_7();
}

void SeparatorView.visibilityStyle.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15CBEB8(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B15CBD70();
  OUTLINED_FUNCTION_0_0();
}

void SeparatorView.isHighlighted.getter()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B15CBF1C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_isHighlighted);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B15CBF6C()
{
  sub_1B15CC094(&OBJC_IVAR____TtC5TeaUI13SeparatorView_isHighlighted);
}

void SeparatorView.isHighlighted.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15CBFB8(uint64_t a1, char a2)
{
  sub_1B15CBFC4(a1, a2);
}

void sub_1B15CBFC4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    OUTLINED_FUNCTION_7_71();
}

void SeparatorView.isSelected.getter()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B15CC038@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B15CC088()
{
  sub_1B15CC094(&OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected);
}

void sub_1B15CC094(_QWORD *a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  int v5;
  char *v6;
  void *v7;
  id v8;
  objc_super v9;
  objc_super v10;
  objc_super v11;

  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  v4 = &v1[*a1];
  OUTLINED_FUNCTION_13();
  v5 = *v4;
  v6 = &v1[OBJC_IVAR____TtC5TeaUI13SeparatorView_visibilityStyle];
  OUTLINED_FUNCTION_13();
  if (v5 == 1)
  {
    if (*v6)
    {
      v9.receiver = v1;
      v9.super_class = v3;
      objc_msgSendSuper2(&v9, sel_setHidden_, 1);
    }
  }
  else if (*v6)
  {
    v11.receiver = v1;
    v11.super_class = v3;
    objc_msgSendSuper2(&v11, sel_setHidden_, 0);
    v7 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI13SeparatorView__backgroundColor];
    v10.receiver = v1;
    v10.super_class = v3;
    v8 = v7;
    OUTLINED_FUNCTION_9_65(&v10, sel_setBackgroundColor_);
    sub_1B15CC4A0();

  }
}

void SeparatorView.isSelected.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15CC1BC(uint64_t a1, char a2)
{
  sub_1B15CBFC4(a1, a2);
}

void SeparatorView.hidesOnSelection.getter()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_48();
}

void SeparatorView.hidesOnSelection.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_hidesOnSelection);
  OUTLINED_FUNCTION_13();
  *v3 = a1;
  OUTLINED_FUNCTION_48();
}

void SeparatorView.hidesOnSelection.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id SeparatorView.isHidden.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_isHidden);
}

void SeparatorView.isHidden.setter(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v3, sel_setHidden_, a1 & 1);
  OUTLINED_FUNCTION_7();
}

void SeparatorView.isHidden.modify()
{
  objc_super **v0;
  void *v1;
  objc_super *v2;
  uint64_t v3;

  v2 = (objc_super *)OUTLINED_FUNCTION_10_58();
  *v0 = v2;
  v2[3].receiver = v1;
  v3 = OUTLINED_FUNCTION_4();
  v2[3].super_class = (Class)v3;
  v2->receiver = v1;
  v2->super_class = (Class)v3;
  LOBYTE(v2[4].receiver) = -[objc_super isHidden](v2, sel_isHidden);
  OUTLINED_FUNCTION_31();
}

void sub_1B15CC3A4(objc_super **a1, char a2)
{
  objc_super *v2;
  uint64_t receiver_low;
  objc_class *super_class;
  id receiver;
  objc_super *v6;
  objc_super *v7;

  v2 = *a1;
  receiver_low = LOBYTE((*a1)[4].receiver);
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v6[1].receiver = receiver;
    v7 = v6 + 1;
  }
  else
  {
    v6[2].receiver = receiver;
    v7 = v6 + 2;
  }
  v7->super_class = super_class;
  -[objc_super setHidden:](v7, sel_setHidden_, receiver_low);
  free(v2);
}

id SeparatorView.backgroundColor.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_backgroundColor);
}

void sub_1B15CC4A0()
{
  char *v0;
  objc_class *ObjectType;
  id v2;
  void *v3;
  id v4;
  void *v5;
  objc_super v6;
  objc_super v7;
  double v8[2];

  v8[1] = *(double *)MEMORY[0x1E0C80C00];
  ObjectType = (objc_class *)swift_getObjectType();
  v7.super_class = ObjectType;
  v8[0] = 0.0;
  v7.receiver = v0;
  v2 = objc_msgSendSuper2(&v7, sel_backgroundColor);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_getRed_green_blue_alpha_, 0, 0, 0, v8);

    if (v8[0] != 0.0)
    {
      v6.receiver = v0;
      v6.super_class = ObjectType;
      v4 = objc_msgSendSuper2(&v6, sel_backgroundColor, v8[0]);
      v5 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI13SeparatorView__backgroundColor];
      *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI13SeparatorView__backgroundColor] = v4;

    }
  }
}

void SeparatorView.backgroundColor.modify()
{
  objc_super **v0;
  objc_class *v1;
  objc_super *v2;
  uint64_t v3;

  v2 = (objc_super *)OUTLINED_FUNCTION_10_58();
  *v0 = v2;
  v2[3].super_class = v1;
  v3 = OUTLINED_FUNCTION_4();
  v2[4].receiver = (id)v3;
  v2->receiver = v1;
  v2->super_class = (Class)v3;
  v2[3].receiver = -[objc_super backgroundColor](v2, sel_backgroundColor);
  OUTLINED_FUNCTION_31();
}

void sub_1B15CC5DC(objc_super **a1, char a2)
{
  objc_super *v2;
  id receiver;
  objc_class *v4;
  Class super_class;

  v2 = *a1;
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v4 = (objc_class *)(*a1)[4].receiver;
  if ((a2 & 1) != 0)
  {
    v2[1].receiver = super_class;
    v2[1].super_class = v4;
    OUTLINED_FUNCTION_9_65(v2 + 1, sel_setBackgroundColor_);

  }
  else
  {
    v2[2].receiver = super_class;
    v2[2].super_class = v4;
    OUTLINED_FUNCTION_9_65(v2 + 2, sel_setBackgroundColor_);

    sub_1B15CC4A0();
  }
  free(v2);
}

void SeparatorView.thickness.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_thickness;
  OUTLINED_FUNCTION_13();
  v4 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_BYTE *)(a1 + 8) = v4;
  OUTLINED_FUNCTION_48();
}

void SeparatorView.thickness.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = v1 + OBJC_IVAR____TtC5TeaUI13SeparatorView_thickness;
  OUTLINED_FUNCTION_13();
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  OUTLINED_FUNCTION_90();
}

void SeparatorView.thickness.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id SeparatorView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

void SeparatorView.init(frame:)()
{
  uint64_t v0;
  objc_class *v1;
  uint64_t v2;
  double v3;
  objc_super *v4;
  SEL v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  objc_super v10;
  uint64_t v11;
  objc_class *v12;

  OUTLINED_FUNCTION_57();
  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_layoutStyle) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_visibilityStyle) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_isHighlighted) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_hidesOnSelection) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView__backgroundColor) = 0;
  v2 = v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_thickness;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  v11 = v0;
  v12 = v1;
  v3 = OUTLINED_FUNCTION_54();
  v6 = objc_msgSendSuper2(v4, v5, v3);
  v7 = qword_1ED184A88;
  v8 = v6;
  if (v7 != -1)
    swift_once();
  v10.receiver = v8;
  v10.super_class = v1;
  v9 = (id)qword_1ED1838B0;
  OUTLINED_FUNCTION_9_65(&v10, sel_setBackgroundColor_);
  sub_1B15CC4A0();

  OUTLINED_FUNCTION_12_49();
}

id SeparatorView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SeparatorView.init(coder:)()
{
  _BYTE *v0;
  char *v1;

  v0[OBJC_IVAR____TtC5TeaUI13SeparatorView_layoutStyle] = 0;
  v0[OBJC_IVAR____TtC5TeaUI13SeparatorView_visibilityStyle] = 1;
  v0[OBJC_IVAR____TtC5TeaUI13SeparatorView_isHighlighted] = 0;
  v0[OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected] = 0;
  v0[OBJC_IVAR____TtC5TeaUI13SeparatorView_hidesOnSelection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI13SeparatorView__backgroundColor] = 0;
  v1 = &v0[OBJC_IVAR____TtC5TeaUI13SeparatorView_thickness];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;

  sub_1B16BA724();
  __break(1u);
}

__C::CGRect __swiftcall SeparatorView.makeFrame(in:insets:anchor:)(__C::CGRect in, UIEdgeInsets insets, TeaUI::SeparatorView::Anchor anchor)
{
  char *v3;
  double left;
  double top;
  double height;
  double width;
  double x;
  int v9;
  double *v10;
  double v11;
  char v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  __C::CGRect result;

  left = insets.left;
  top = insets.top;
  height = in.size.height;
  width = in.size.width;
  x = in.origin.x;
  v9 = *(unsigned __int8 *)anchor;
  v10 = (double *)&v3[OBJC_IVAR____TtC5TeaUI13SeparatorView_thickness];
  OUTLINED_FUNCTION_13();
  v11 = *v10;
  v12 = *((_BYTE *)v10 + 8);
  v13 = objc_msgSend(v3, sel_traitCollection);
  v14 = v13;
  if ((v12 & 1) != 0)
  {
    sub_1B15CCB18(v13);
    v16 = v15;

    v11 = 1.0 / v16;
  }
  else
  {

  }
  v17 = 0.0;
  if (v9)
    v17 = height - v11;
  v18 = UIEdgeInsetsInsetRect(x, v17, width, v11, top, left);
  result.size.height = v21;
  result.size.width = v20;
  result.origin.y = v19;
  result.origin.x = v18;
  return result;
}

void _s5TeaUI13SeparatorViewC15VisibilityStyleO9hashValueSivg_0()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_159();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_12_49();
}

void sub_1B15CCAE4()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_159();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_12_49();
}

void sub_1B15CCB18(void *a1)
{
  double v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  id v7;

  objc_msgSend(a1, sel_displayScale);
  if (v2 == 0.0)
  {
    v3 = (void *)objc_opt_self();
    v4 = objc_msgSend(v3, sel_mainScreen);
    objc_msgSend(v4, sel_scale);
    v6 = v5;

    if (v6 != 0.0)
    {
      v7 = objc_msgSend(v3, sel_mainScreen);
      objc_msgSend(v7, sel_scale);

    }
  }
  else
  {
    objc_msgSend(a1, sel_displayScale);
  }
}

id SeparatorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall SeparatorView.prepareForReuse()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  char v3;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_thickness;
  OUTLINED_FUNCTION_13();
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI13SeparatorView_layoutStyle);
  OUTLINED_FUNCTION_13();
  *v2 = 0;
  v3 = 1;
  SeparatorView.visibilityStyle.setter(&v3);
  SeparatorView.clearSelections()();
}

void sub_1B15CCCAC()
{
  SeparatorView.prepareForReuse()();
}

unint64_t sub_1B15CCCD0()
{
  unint64_t result;

  result = qword_1EEF34AE0;
  if (!qword_1EEF34AE0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for SeparatorView.VisibilityStyle, &type metadata for SeparatorView.VisibilityStyle);
    atomic_store(result, (unint64_t *)&qword_1EEF34AE0);
  }
  return result;
}

unint64_t sub_1B15CCD10()
{
  unint64_t result;

  result = qword_1EEF34AE8;
  if (!qword_1EEF34AE8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for SeparatorView.LayoutStyle, &type metadata for SeparatorView.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1EEF34AE8);
  }
  return result;
}

unint64_t sub_1B15CCD50()
{
  unint64_t result;

  result = qword_1EEF34AF0;
  if (!qword_1EEF34AF0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for SeparatorView.Anchor, &type metadata for SeparatorView.Anchor);
    atomic_store(result, (unint64_t *)&qword_1EEF34AF0);
  }
  return result;
}

void sub_1B15CCD98(char *a1)
{
  SeparatorView.isHighlighted.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15CCDBC(char *a1)
{
  SeparatorView.isSelected.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t dispatch thunk of SeparatorViewIndexOffsetProviderType.indexOffset(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SeparatorViewProviderType.separator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void type metadata accessor for SeparatorView.VisibilityStyle()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for SeparatorView.LayoutStyle()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t _s5TeaUI13SeparatorViewC11LayoutStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15CCE54 + 4 * byte_1B16D6025[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15CCE88 + 4 * byte_1B16D6020[v4]))();
}

uint64_t sub_1B15CCE88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15CCE90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15CCE98);
  return result;
}

uint64_t sub_1B15CCEA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15CCEACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15CCEB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15CCEB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SeparatorView.Anchor()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for SeparatorView.Thickness()
{
  OUTLINED_FUNCTION_11_0();
}

BOOL static Commands.Dock.Animation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void Commands.Dock.Animation.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

uint64_t Commands.Dock.Animation.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t static Commands.Dock.hide.getter()
{
  return sub_1B13A3A8C(&qword_1ED185548);
}

uint64_t static Commands.Dock.show.getter()
{
  return sub_1B13A3A8C(&qword_1ED185560);
}

uint64_t static Commands.Dock.showExpanded.getter()
{
  return sub_1B13A3A8C(&qword_1ED185538);
}

unint64_t sub_1B15CCFD0()
{
  unint64_t result;

  result = qword_1EEF34AF8;
  if (!qword_1EEF34AF8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for Commands.Dock.Animation, &type metadata for Commands.Dock.Animation);
    atomic_store(result, (unint64_t *)&qword_1EEF34AF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.Dock()
{
  return &type metadata for Commands.Dock;
}

uint64_t _s4DockV9AnimationOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15CD068 + 4 * byte_1B16D624D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15CD09C + 4 * byte_1B16D6248[v4]))();
}

uint64_t sub_1B15CD09C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15CD0A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15CD0ACLL);
  return result;
}

uint64_t sub_1B15CD0B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15CD0C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15CD0C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15CD0CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BlueprintManualImpressionView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_1B16B7D60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_1B15CD19C();
    *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1B15CD19C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF34B00)
  {
    sub_1B16B7D60();
    sub_1B15CD208();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF34B00);
  }
}

void sub_1B15CD208()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34B08)
  {
    sub_1B15069EC();
    v0 = sub_1B16B884C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34B08);
  }
}

uint64_t destroy for BlueprintManualImpressionView(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B16B7D60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  sub_1B15CD19C();
  return swift_release();
}

uint64_t initializeWithCopy for BlueprintManualImpressionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1B16B7D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  sub_1B15CD19C();
  *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for BlueprintManualImpressionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_1B15CD3CC(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1B16B7D60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    sub_1B15CD19C();
    *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B15CD3CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BlueprintManualImpressionView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for BlueprintManualImpressionView()
{
  uint64_t result;

  result = qword_1EEF34B80;
  if (!qword_1EEF34B80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithTake for BlueprintManualImpressionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1B16B7D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  sub_1B15CD19C();
  *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for BlueprintManualImpressionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_1B15CD3CC(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1B16B7D60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    sub_1B15CD19C();
    *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B15CD560()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t *v5;

  result = sub_1B16B7D60();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4 = &v3;
    swift_getTupleTypeLayout2();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of BlueprintManualImpressionViewsProvidingType.sessionView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintManualImpressionViewsProvidingType.impressionViews.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id sub_1B15CD614(uint64_t a1, uint64_t a2, double a3)
{
  void *v3;
  void *v4;
  id v8;

  v4 = v3;
  sub_1B1456B40(0, (unint64_t *)&qword_1ED17E070, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Debounce);
  swift_allocObject();
  sub_1B150DA60(a1, a2, a3);
  sub_1B15CDC20();
  swift_allocObject();
  swift_retain();
  sub_1B16B881C();
  swift_retain();
  sub_1B16B8378();
  swift_release();
  v8 = v4;
  swift_release();
  return v8;
}

void DebounceQueue.__allocating_init(timeInterval:clearOnDequeue:dequeueBlock:)()
{
  OUTLINED_FUNCTION_1_121();
  swift_allocObject();
  DebounceQueue.init(timeInterval:clearOnDequeue:dequeueBlock:)();
  OUTLINED_FUNCTION_0_125();
}

uint64_t DebounceQueue.enqueue<A>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B16B81B0();
  sub_1B15CD7A8(a1, v2, v3);
  return swift_bridgeObjectRelease();
}

void sub_1B15CD7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char v13;
  char v14;
  id v15;
  id v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _BYTE v21[24];
  uint64_t v22;

  v4 = v3;
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v12 = *(_QWORD *)(v4 + 16);
  sub_1B16B9740();
  sub_1B13FD970(a2, a3, v12);
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    swift_beginAccess();
    sub_1B16B9740();
    sub_1B14274DC(&v22, a2, a3);
    swift_endAccess();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    swift_beginAccess();
    sub_1B16B9C68();
    sub_1B16B9C2C();
    swift_endAccess();
    v15 = *(id *)(v4 + 32);
    v16 = sub_1B14AEB58();

    v17 = *(double *)(v4 + 40);
    v18 = swift_allocObject();
    swift_weakInit();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v8;
    *(_QWORD *)(v19 + 24) = v18;
    v20 = sub_1B15CD614((uint64_t)sub_1B15CDC18, v19, v17);

    swift_release();
    _s5TeaUI6ActionC7triggeryyF_0();

  }
}

uint64_t DebounceQueue.enqueue(_:keyPath:)(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  swift_getAtKeyPath();
  sub_1B15CD7A8(a1, v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B15CD9DC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_beginAccess();
    v2 = sub_1B16B9C68();
    MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF50], v2);
    if ((sub_1B16B9F44() & 1) == 0)
    {
      v3 = *(void (**)(uint64_t))(v1 + 56);
      swift_retain();
      v4 = sub_1B16B9740();
      v3(v4);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B15CDABC(v1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B15CDABC(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  OUTLINED_FUNCTION_0();
  sub_1B16B9C68();
  sub_1B16B9C5C();
  result = swift_endAccess();
  if (*(_BYTE *)(a1 + 48) == 1)
  {
    swift_beginAccess();
    *(_QWORD *)(a1 + 16) = MEMORY[0x1E0DEE9E8];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t DebounceQueue.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t DebounceQueue.__deallocating_deinit()
{
  DebounceQueue.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for DebounceQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebounceQueue.__allocating_init(timeInterval:clearOnDequeue:dequeueBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1B15CDBD0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15CDBF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15CDC18()
{
  return sub_1B15CD9DC();
}

void sub_1B15CDC20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17E270)
  {
    sub_1B13F2900();
    v0 = sub_1B16B8834();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED17E270);
  }
}

id sub_1B15CDC74(void *a1)
{
  char *v1;
  objc_class *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI23SwipeActionSnapshotView_view] = a1;
  if (a1)
  {
    objc_msgSend(a1, sel_frame);
  }
  else
  {
    v6 = 0.0;
    v7 = 0.0;
    v4 = 0.0;
    v5 = 0.0;
  }
  v11.receiver = v1;
  v11.super_class = v3;
  v8 = objc_msgSendSuper2(&v11, sel_initWithFrame_, v4, v5, v6, v7);
  v9 = v8;
  if (a1)
  {
    objc_msgSend(v8, sel_addSubview_, a1);

  }
  return v9;
}

void sub_1B15CDD14()
{
  sub_1B16BA724();
  __break(1u);
}

id sub_1B15CDD78()
{
  char *v0;
  id result;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)OUTLINED_FUNCTION_4();
  result = objc_msgSendSuper2(&v3, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI23SwipeActionSnapshotView_view];
  if (v2)
  {
    objc_msgSend(v0, sel_bounds);
    return objc_msgSend(v2, sel_setFrame_);
  }
  return result;
}

void sub_1B15CDE14()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for SwipeActionSnapshotView()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of ReuseIdentifiable.reuseIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReuseIdentifiable.reuseIdentifier.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ReuseIdentifiable.reuseIdentifier.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t SnapBlueprintBookmarkOptions.snapToItems.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaUI::SnapBlueprintBookmarkOptions __swiftcall SnapBlueprintBookmarkOptions.init(snapToItems:)(TeaUI::SnapBlueprintBookmarkOptions snapToItems)
{
  TeaUI::SnapBlueprintBookmarkOptions *v1;

  v1->snapToItems = snapToItems.snapToItems;
  return snapToItems;
}

uint64_t SnapBlueprintBookmarkOptions.adjust(indexPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = v2;
  v6 = *v3;
  if (*v3)
  {
    sub_1B16B7D3C();
    if (v6 < 0)
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_4_88();
      if (v7)
      {
        sub_1B16B7D48();
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_9:
    JUMPOUT(0x1B5E1B6BCLL);
  }
  v8 = OUTLINED_FUNCTION_3_12();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
}

void SnapBlueprintBookmarkApplicator.__allocating_init(blueprintLayoutProvider:blueprintViewProvider:snapBlueprintBookmarkOptionsFactory:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  swift_allocObject();
  SnapBlueprintBookmarkApplicator.init(blueprintLayoutProvider:blueprintViewProvider:snapBlueprintBookmarkOptionsFactory:)(a1, a2, a3);
  OUTLINED_FUNCTION_31();
}

void SnapBlueprintBookmarkApplicator.init(blueprintLayoutProvider:blueprintViewProvider:snapBlueprintBookmarkOptionsFactory:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 80) - 8) + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112), a1);
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 120)) = a2;
  sub_1B13C06D0(a3, v3 + *(_QWORD *)(*(_QWORD *)v3 + 128));
  OUTLINED_FUNCTION_31();
}

uint64_t SnapBlueprintBookmarkApplicator.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  return v0;
}

uint64_t SnapBlueprintBookmarkApplicator.__deallocating_deinit()
{
  SnapBlueprintBookmarkApplicator.deinit();
  return swift_deallocClassInstance();
}

uint64_t SnapBlueprintBookmarkApplicator.supportedBookmark.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_3_12();
  __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
  type metadata accessor for BlueprintBookmark();
  return swift_storeEnumTagMultiPayload();
}

double SnapBlueprintBookmarkApplicator.prepare(bookmark:context:)@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void SnapBlueprintBookmarkApplicator.apply(bookmark:context:preparedContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[213];
  _BYTE v17[136];

  v3 = v2;
  v16[8] = a1;
  v5 = *v3;
  v6 = OUTLINED_FUNCTION_3_12();
  v16[5] = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v16[7] = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v10);
  v16[4] = (char *)v16 - v11;
  sub_1B140E634(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1B15CE428);
  v16[6] = v5;
  OUTLINED_FUNCTION_1_122();
  v12 = OUTLINED_FUNCTION_75();
  v13 = OUTLINED_FUNCTION_75();
  v14 = OUTLINED_FUNCTION_41();
  v15 = OUTLINED_FUNCTION_41();
  v16[76] = v12;
  v16[77] = v13;
  v16[78] = v14;
  v16[79] = v15;
  type metadata accessor for BlueprintLayout();
}

void sub_1B15CE1D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  void *v23;
  char v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v27;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayout<A, B>, a1);
  v9 = sub_1B16B9F44();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8);
  v10(v1 + 1136, a1);
  if ((v9 & 1) == 0)
  {
    *(_QWORD *)(v1 + 24) = v3;
    v11 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
    v13 = v11[3];
    v12 = v11[4];
    v14 = __swift_project_boxed_opaque_existential_1(v11, v13);
    *(_QWORD *)(v1 + 8) = v4;
    *(_QWORD *)(v1 + 16) = v14;
    OUTLINED_FUNCTION_1_122();
    memcpy((void *)(v1 + 608), (const void *)(v1 + 1136), 0x20DuLL);
    sub_1B1424D1C(v1 + 608);
    *(_QWORD *)v1 = v10;
    v10(v1 + 1136, a1);
    memcpy((void *)(v1 + 72), (const void *)(v1 + 608), 0x20DuLL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v1 + 72, v13, v12);
    sub_1B1417ADC(v1 + 608);
    v15 = *(_QWORD *)(v1 + 600);
    v16 = *(_QWORD *)(v1 + 56);
    sub_1B15CE470(*(_QWORD *)(v1 + 64), v7 - 216, v16);
    if (v15)
    {
      sub_1B16B7D3C();
      v17 = *(_QWORD *)(v1 + 24);
      if (v15 < 0)
      {
        __break(1u);
LABEL_11:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_4_88();
      if (!v18)
        goto LABEL_11;
      v19 = sub_1B16B7D48();
      v20 = *(_QWORD *)(v1 + 32);
      MEMORY[0x1B5E1B6BC](v16, v19);
      v21 = *(_QWORD *)(v1 + 40);
    }
    else
    {
      v20 = *(_QWORD *)(v1 + 32);
      v21 = *(_QWORD *)(v1 + 40);
      v17 = *(_QWORD *)(v1 + 24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v16, v17);
    }
    v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    *(_QWORD *)(v1 + 64) = v22;
    v22(v16, v17);
    v23 = (void *)(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 48) + 104) + 56))(*(_QWORD *)(*(_QWORD *)(v1 + 48) + 88), *(_QWORD *)(*(_QWORD *)(v1 + 48) + 104));
    BlueprintLayoutProviderType.layoutBlueprint.getter(v5, v6);
    v24 = *(_BYTE *)(v1 + 1661);
    (*(void (**)(uint64_t, uint64_t))v1)(v1 + 1136, a1);
    *(_BYTE *)(v1 + 72) = v24;
    swift_getAssociatedTypeWitness();
    v25 = OUTLINED_FUNCTION_41();
    v26 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 200);
    v27 = swift_checkMetadataState();
    v26(v20, v1 + 72, 0, v27, v25);

    (*(void (**)(uint64_t, uint64_t))(v1 + 64))(v20, v17);
  }
}

void sub_1B15CE428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED185FA0)
  {
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED185FA0);
  }
}

uint64_t sub_1B15CE470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[16];
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for BlueprintBookmark();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B14107A8();
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v12, v15);
  v18 = &v28[-v17];
  MEMORY[0x1E0C80A78](v16, v19);
  v21 = &v28[-v20];
  sub_1B140B98C(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload())
  {
    v22 = (uint64_t (*)(_QWORD))type metadata accessor for BlueprintBookmark;
    v23 = (uint64_t)v9;
  }
  else
  {
    sub_1B140E634((uint64_t)v9, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1B14107A8);
    sub_1B140E634((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1B14107A8);
    v24 = sub_1B16B7D60();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v24) != 1)
      return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a3, v18, v24);
    v22 = (uint64_t (*)(_QWORD))sub_1B14107A8;
    v23 = (uint64_t)v18;
  }
  sub_1B1406858(v23, v22);
  sub_1B140E634(a2, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_1B15CE428);
  if (sub_1B1507B58((uint64_t)v30) == 1)
  {
    v25 = sub_1B16B7D60();
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v25);
LABEL_8:
    MEMORY[0x1B5E1B6A4](0, 0);
    return sub_1B1406858((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B14107A8);
  }
  v32 = v31;
  v29 = v31;
  swift_bridgeObjectRetain_n();
  sub_1B15CE7F0(&v29);
  sub_1B15CE870((uint64_t)&v32);
  sub_1B141C47C(v29);
  swift_release();
  v26 = sub_1B16B7D60();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v26) == 1)
    goto LABEL_8;
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a3, v14, v26);
}

uint64_t sub_1B15CE6EC@<X0>(uint64_t a1@<X8>)
{
  return SnapBlueprintBookmarkApplicator.supportedBookmark.getter(a1);
}

double sub_1B15CE700@<D0>(_OWORD *a1@<X8>)
{
  return SnapBlueprintBookmarkApplicator.prepare(bookmark:context:)(a1);
}

void sub_1B15CE714(uint64_t a1, uint64_t a2)
{
  SnapBlueprintBookmarkApplicator.apply(bookmark:context:preparedContext:)(a1, a2);
}

ValueMetadata *type metadata accessor for SnapBlueprintBookmarkOptions()
{
  return &type metadata for SnapBlueprintBookmarkOptions;
}

uint64_t dispatch thunk of SnapBlueprintBookmarkOptionsFactoryType.makeOptions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B15CE74C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for SnapBlueprintBookmarkApplicator()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t method lookup function for SnapBlueprintBookmarkApplicator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SnapBlueprintBookmarkApplicator.__allocating_init(blueprintLayoutProvider:blueprintViewProvider:snapBlueprintBookmarkOptionsFactory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1B15CE7F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v2 = *(_QWORD *)(sub_1B16B7D60() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B165CAF0(v3, v4, v5);
    v3 = v6;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v8[1] = v7;
  sub_1B15CE898(v8);
  *a1 = v3;
}

uint64_t sub_1B15CE870(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1B15CE898(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  void (*v67)(char *, unint64_t, uint64_t);
  char *v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  unint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  char *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  unint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  _QWORD *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;

  v147 = sub_1B16B7D60();
  v152 = *(_QWORD **)(v147 - 8);
  v4 = MEMORY[0x1E0C80A78](v147, v3);
  v137 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v149 = (char *)&v131 - v8;
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v144 = (char *)&v131 - v11;
  MEMORY[0x1E0C80A78](v10, v12);
  v146 = (char *)&v131 - v13;
  v148 = a1;
  v14 = a1[1];
  v15 = sub_1B16BA8A4();
  if (v15 >= v14)
  {
    if ((v14 & 0x8000000000000000) == 0)
    {
      if (v14)
        sub_1B15CF24C(0, v14, 1, v148);
      return;
    }
    goto LABEL_139;
  }
  v16 = v15;
  v140 = v1;
  v133 = sub_1B16B6B28(v14 / 2);
  v134 = v14;
  v139 = v17;
  if (v14 <= 0)
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v70 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
    if (v70 < 2)
    {
LABEL_114:
      swift_bridgeObjectRelease();
      if (v134 >= -1)
      {
        *(_QWORD *)(v133 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_144;
    }
    v123 = (char *)*v148;
    while (1)
    {
      v124 = v70 - 2;
      if (v70 < 2)
        break;
      if (!v123)
        goto LABEL_148;
      v125 = v19[2 * v124 + 4];
      v126 = v19[2 * v70 + 3];
      v127 = v140;
      sub_1B15CF49C((unint64_t)&v123[v152[9] * v125], (unint64_t)&v123[v152[9] * v19[2 * v70 + 2]], (unint64_t)&v123[v152[9] * v126], v139);
      v140 = v127;
      if (v127)
        goto LABEL_100;
      if (v126 < v125)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B165CA7C();
        v19 = v130;
      }
      if (v124 >= v19[2])
        goto LABEL_135;
      v128 = &v19[2 * v124 + 4];
      *v128 = v125;
      v128[1] = v126;
      v129 = v19[2];
      if (v70 > v129)
        goto LABEL_136;
      memmove(&v19[2 * v70 + 2], &v19[2 * v70 + 4], 16 * (v129 - v70));
      v19[2] = v129 - 1;
      v70 = v129 - 1;
      if (v129 <= 2)
        goto LABEL_114;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    return;
  }
  v132 = v16;
  v18 = 0;
  v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v20 = (uint64_t)v18;
    v21 = v18 + 1;
    if ((uint64_t)(v18 + 1) >= v14)
    {
      v32 = (uint64_t)(v18 + 1);
      v39 = v147;
      v23 = v148;
    }
    else
    {
      v22 = v147;
      v23 = v148;
      v24 = (char *)*v148;
      v25 = v152[9];
      v151 = v25;
      v141 = v24;
      v26 = (void (*)(char *, char *, uint64_t))v152[2];
      v26(v146, &v24[v25 * (_QWORD)v21], v147);
      v27 = &v24[v25 * v20];
      v150 = v14;
      v28 = v144;
      v26(v144, v27, v22);
      v143 = sub_1B15CF8DC();
      LODWORD(v145) = sub_1B16B980C();
      v29 = (void (*)(char *, uint64_t))v152[1];
      v30 = v28;
      v31 = v141;
      v14 = v150;
      v29(v30, v22);
      v29(v146, v22);
      v138 = v20;
      v32 = v20 + 2;
      if (v20 + 2 < v14)
      {
        v135 = v19;
        v142 = v151 * (_QWORD)v21;
        v33 = v151 * v32;
        while (1)
        {
          v34 = v32;
          v36 = v146;
          v35 = v147;
          v26(v146, &v31[v33], v147);
          v37 = v144;
          v26(v144, &v31[v142], v35);
          v38 = sub_1B16B980C();
          v29(v37, v35);
          v29(v36, v35);
          if (((v145 ^ v38) & 1) != 0)
            break;
          v32 = v34 + 1;
          v31 += v151;
          if (v34 + 1 >= v150)
          {
            v14 = v150;
            v32 = v150;
            v19 = v135;
            v23 = v148;
            goto LABEL_12;
          }
        }
        v19 = v135;
        v23 = v148;
        v32 = v34;
        v14 = v150;
      }
LABEL_12:
      v39 = v147;
      v20 = v138;
      if ((v145 & 1) != 0)
      {
        if (v32 < v138)
          goto LABEL_141;
        if (v138 < v32)
        {
          v135 = v19;
          v40 = 0;
          v41 = v151;
          v42 = v151 * (v32 - 1);
          v43 = v32 * v151;
          v44 = v138;
          v45 = v138 * v151;
          do
          {
            if (v44 != v32 + v40 - 1)
            {
              v46 = v141;
              if (!v141)
                goto LABEL_147;
              v47 = v32;
              v48 = &v141[v45];
              v143 = (unint64_t)&v141[v42];
              v49 = v147;
              v145 = (char *)v152[4];
              ((void (*)(char *, char *, uint64_t))v145)(v137, &v141[v45], v147);
              if (v45 < v42 || v48 >= &v46[v43])
              {
                v51 = v143;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v51 = v143;
                if (v45 != v42)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(unint64_t, char *, uint64_t))v145)(v51, v137, v49);
              v23 = v148;
              v32 = v47;
              v41 = v151;
            }
            ++v44;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v45 += v41;
          }
          while (v44 < v32 + v40);
          v19 = v135;
          v39 = v147;
          v20 = v138;
          v14 = v150;
        }
      }
    }
    if (v32 < v14)
    {
      if (__OFSUB__(v32, v20))
        goto LABEL_138;
      if (v32 - v20 < v132)
      {
        if (__OFADD__(v20, v132))
          goto LABEL_142;
        if (v20 + v132 >= v14)
          v52 = v14;
        else
          v52 = v20 + v132;
        if (v52 < v20)
          goto LABEL_143;
        if (v32 != v52)
        {
          v138 = v20;
          v135 = v19;
          v136 = v52;
          v53 = v152[9];
          v141 = (char *)v152[2];
          v142 = v53;
          v151 = v53 * (v32 - 1);
          v54 = v32 * v53;
          do
          {
            v55 = 0;
            v56 = v138;
            v145 = (char *)v32;
            v143 = v54;
            while (1)
            {
              v150 = v56;
              v57 = *v23;
              v58 = v54 + v55 + *v23;
              v59 = v23;
              v60 = v146;
              v61 = (void (*)(char *, uint64_t, uint64_t))v141;
              ((void (*)(char *, unint64_t, uint64_t))v141)(v146, v58, v39);
              v62 = v39;
              v63 = v144;
              v61(v144, v151 + v55 + v57, v62);
              sub_1B15CF8DC();
              LOBYTE(v57) = sub_1B16B980C();
              v64 = (void (*)(char *, uint64_t))v152[1];
              v64(v63, v62);
              v64(v60, v62);
              if ((v57 & 1) == 0)
                break;
              v65 = *v59;
              if (!*v59)
                goto LABEL_145;
              v54 = v143;
              v66 = (char *)(v65 + v151 + v55);
              v67 = (void (*)(char *, unint64_t, uint64_t))v152[4];
              v39 = v147;
              v67(v149, v65 + v143 + v55, v147);
              swift_arrayInitWithTakeFrontToBack();
              v67(v66, (unint64_t)v149, v39);
              v55 -= v142;
              v56 = v150 + 1;
              v68 = v145;
              v23 = v148;
              if (v145 == (char *)(v150 + 1))
                goto LABEL_45;
            }
            v39 = v147;
            v68 = v145;
            v23 = v59;
            v54 = v143;
LABEL_45:
            v32 = (uint64_t)(v68 + 1);
            v151 += v142;
            v54 += v142;
          }
          while (v32 != v136);
          v32 = v136;
          v19 = v135;
          v20 = v138;
        }
      }
    }
    if (v32 < v20)
      goto LABEL_137;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B165C99C();
      v19 = v121;
    }
    v69 = v19[2];
    v70 = v69 + 1;
    if (v69 >= v19[3] >> 1)
    {
      sub_1B165C99C();
      v19 = v122;
    }
    v19[2] = v70;
    v71 = v19 + 4;
    v72 = &v19[2 * v69 + 4];
    *v72 = v20;
    v72[1] = v32;
    v145 = (char *)v32;
    if (v69)
      break;
    v70 = 1;
LABEL_95:
    v14 = v148[1];
    v18 = v145;
    if ((uint64_t)v145 >= v14)
      goto LABEL_103;
  }
  while (1)
  {
    v73 = v70 - 1;
    if (v70 >= 4)
    {
      v78 = &v71[2 * v70];
      v79 = *(v78 - 8);
      v80 = *(v78 - 7);
      v84 = __OFSUB__(v80, v79);
      v81 = v80 - v79;
      if (v84)
        goto LABEL_122;
      v83 = *(v78 - 6);
      v82 = *(v78 - 5);
      v84 = __OFSUB__(v82, v83);
      v76 = v82 - v83;
      v77 = v84;
      if (v84)
        goto LABEL_123;
      v85 = v70 - 2;
      v86 = &v71[2 * v70 - 4];
      v88 = *v86;
      v87 = v86[1];
      v84 = __OFSUB__(v87, v88);
      v89 = v87 - v88;
      if (v84)
        goto LABEL_124;
      v84 = __OFADD__(v76, v89);
      v90 = v76 + v89;
      if (v84)
        goto LABEL_126;
      if (v90 >= v81)
      {
        v108 = &v71[2 * v73];
        v110 = *v108;
        v109 = v108[1];
        v84 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v84)
          goto LABEL_132;
        v101 = v76 < v111;
        goto LABEL_84;
      }
    }
    else
    {
      if (v70 != 3)
      {
        v102 = v19[4];
        v103 = v19[5];
        v84 = __OFSUB__(v103, v102);
        v95 = v103 - v102;
        v96 = v84;
        goto LABEL_78;
      }
      v75 = v19[4];
      v74 = v19[5];
      v84 = __OFSUB__(v74, v75);
      v76 = v74 - v75;
      v77 = v84;
    }
    if ((v77 & 1) != 0)
      goto LABEL_125;
    v85 = v70 - 2;
    v91 = &v71[2 * v70 - 4];
    v93 = *v91;
    v92 = v91[1];
    v94 = __OFSUB__(v92, v93);
    v95 = v92 - v93;
    v96 = v94;
    if (v94)
      goto LABEL_127;
    v97 = &v71[2 * v73];
    v99 = *v97;
    v98 = v97[1];
    v84 = __OFSUB__(v98, v99);
    v100 = v98 - v99;
    if (v84)
      goto LABEL_129;
    if (__OFADD__(v95, v100))
      goto LABEL_131;
    if (v95 + v100 >= v76)
    {
      v101 = v76 < v100;
LABEL_84:
      if (v101)
        v73 = v85;
      goto LABEL_86;
    }
LABEL_78:
    if ((v96 & 1) != 0)
      goto LABEL_128;
    v104 = &v71[2 * v73];
    v106 = *v104;
    v105 = v104[1];
    v84 = __OFSUB__(v105, v106);
    v107 = v105 - v106;
    if (v84)
      goto LABEL_130;
    if (v107 < v95)
      goto LABEL_95;
LABEL_86:
    v112 = v73 - 1;
    if (v73 - 1 >= v70)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!*v148)
      goto LABEL_146;
    v113 = v19;
    v114 = &v71[2 * v112];
    v115 = *v114;
    v116 = &v71[2 * v73];
    v117 = v116[1];
    v118 = v140;
    sub_1B15CF49C(*v148 + v152[9] * *v114, *v148 + v152[9] * *v116, *v148 + v152[9] * v117, v139);
    if (v118)
      break;
    if (v117 < v115)
      goto LABEL_119;
    if (v73 > v113[2])
      goto LABEL_120;
    v119 = v113;
    *v114 = v115;
    v71[2 * v112 + 1] = v117;
    v120 = v113[2];
    if (v73 >= v120)
      goto LABEL_121;
    v19 = v119;
    v140 = 0;
    v70 = v120 - 1;
    memmove(&v71[2 * v73], v116 + 2, 16 * (v120 - 1 - v73));
    v19[2] = v120 - 1;
    if (v120 <= 2)
      goto LABEL_95;
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v134 < -1)
    goto LABEL_140;
  *(_QWORD *)(v133 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1B15CF24C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  _QWORD *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  v31 = a1;
  v7 = sub_1B16B7D60();
  v39 = *(_QWORD **)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v38 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9, v11);
  v35 = (char *)&v29 - v13;
  result = MEMORY[0x1E0C80A78](v12, v14);
  v34 = (char *)&v29 - v16;
  v37 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v17 = v39[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v39[2];
    v33 = a4;
    v41 = v17 * (v37 - 1);
    v36 = v17;
    v40 = v17 * v37;
    while (2)
    {
      v18 = 0;
      v19 = v31;
      do
      {
        v20 = *a4;
        v21 = v34;
        v22 = v32;
        v32(v34, v40 + v18 + *a4, v7);
        v23 = v35;
        v22(v35, v41 + v18 + v20, v7);
        sub_1B15CF8DC();
        LOBYTE(v20) = sub_1B16B980C();
        v24 = (void (*)(char *, uint64_t))v39[1];
        v25 = v23;
        a4 = v33;
        v24(v25, v7);
        result = ((uint64_t (*)(char *, uint64_t))v24)(v21, v7);
        if ((v20 & 1) == 0)
          break;
        v26 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v27 = v26 + v41 + v18;
        v28 = (void (*)(char *, uint64_t, uint64_t))v39[4];
        v28(v38, v26 + v40 + v18, v7);
        swift_arrayInitWithTakeFrontToBack();
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v38, v7);
        v18 -= v36;
        ++v19;
      }
      while (v37 != v19);
      v41 += v36;
      v40 += v36;
      if (++v37 != v30)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1B15CF49C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v28;
  uint64_t v29;
  void (*v31)(char *);
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *);
  unint64_t v35;
  char *v36;
  void (*v37)(char *, unint64_t, uint64_t);
  char *v38;
  void (*v39)(char *, uint64_t);
  BOOL v40;
  BOOL v41;
  unint64_t v42;
  char *v44;
  unint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  char *v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  unint64_t v50;
  unint64_t v52;
  int64_t v55;
  uint64_t v57;
  void (*v58)(char *);
  uint64_t v59;
  unint64_t v60;
  void (*v61)(char *, unint64_t, uint64_t);
  unint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;

  v9 = sub_1B16B7D60();
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v65 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11, v13);
  v64 = (char *)&v57 - v15;
  v66 = v16;
  v17 = *(_QWORD *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1)
    goto LABEL_79;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1)
    goto LABEL_80;
  v67 = a1;
  v60 = a4;
  v22 = v18 / v17;
  v23 = v20 / v17;
  v63 = v17;
  if (v18 / v17 >= v20 / v17)
  {
    v28 = a2;
    v25 = v60;
    result = sub_1B14D1D78(a2, v20 / v17, v60);
    v29 = v23 * v17;
    v26 = v25 + v23 * v17;
    if (v29 < 1 || v67 >= a2)
      goto LABEL_73;
    v59 = -v17;
    v31 = *(void (**)(char *))(v66 + 16);
    v57 = v4;
    v58 = v31;
    while (1)
    {
      v32 = a3;
      v34 = v58;
      v33 = v59;
      v35 = a3 + v59;
      v36 = v64;
      v62 = v26 + v59;
      v58(v64);
      v37 = (void (*)(char *, unint64_t, uint64_t))(v28 + v33);
      v38 = v65;
      v61 = v37;
      v34(v65);
      sub_1B15CF8DC();
      LOBYTE(v34) = sub_1B16B980C();
      v39 = *(void (**)(char *, uint64_t))(v66 + 8);
      v39(v38, v9);
      result = ((uint64_t (*)(char *, uint64_t))v39)(v36, v9);
      if ((v34 & 1) != 0)
      {
        v40 = v32 < v28 || v35 >= v28;
        a3 = v35;
        if (!v40)
        {
          v25 = v60;
          if (v32 == v28)
          {
            v28 = (unint64_t)v61;
          }
          else
          {
            v28 = (unint64_t)v61;
            result = swift_arrayInitWithTakeBackToFront();
          }
          goto LABEL_41;
        }
        v28 = (unint64_t)v61;
      }
      else
      {
        v41 = v32 < v26 || v35 >= v26;
        a3 = v35;
        if (!v41)
        {
          v42 = v67;
          if (v32 == v26)
          {
            v26 = v62;
          }
          else
          {
            v26 = v62;
            result = swift_arrayInitWithTakeBackToFront();
          }
          v25 = v60;
          v17 = v63;
          goto LABEL_44;
        }
        v26 = v62;
      }
      result = swift_arrayInitWithTakeFrontToBack();
      v25 = v60;
LABEL_41:
      v17 = v63;
      v42 = v67;
LABEL_44:
      if (v26 <= v25 || v28 <= v42)
        goto LABEL_73;
    }
  }
  v24 = v67;
  v25 = v60;
  result = sub_1B14D1D78(v67, v18 / v17, v60);
  v26 = v25 + v22 * v17;
  if (v22 * v17 < 1 || a2 >= a3)
  {
    v28 = v24;
  }
  else
  {
    v57 = v4;
    v61 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
    v62 = a3;
    v44 = v64;
    do
    {
      v45 = v26;
      v46 = v61;
      v61(v44, a2, v9);
      v47 = v65;
      v46(v65, v25, v9);
      sub_1B15CF8DC();
      v48 = a2;
      LOBYTE(v46) = sub_1B16B980C();
      v49 = *(void (**)(char *, uint64_t))(v66 + 8);
      v49(v47, v9);
      result = ((uint64_t (*)(char *, uint64_t))v49)(v44, v9);
      if ((v46 & 1) != 0)
      {
        a2 = v48 + v17;
        v50 = v67;
        if (v67 < v48 || v67 >= a2)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v67 != v48)
        {
          result = swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v52 = v25 + v17;
        v50 = v67;
        if (v67 < v25 || v67 >= v52)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v67 != v25)
        {
          result = swift_arrayInitWithTakeBackToFront();
        }
        a2 = v48;
        v25 = v52;
        v17 = v63;
      }
      v26 = v45;
      v67 = v50 + v17;
    }
    while (v25 < v45 && a2 < v62);
    v28 = v67;
  }
LABEL_73:
  v55 = v26 - v25;
  if (v17 != -1 || v55 != 0x8000000000000000)
  {
    sub_1B14D1D78(v25, v55 / v17, v28);
    return 1;
  }
LABEL_81:
  __break(1u);
  return result;
}

unint64_t sub_1B15CF8DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF34C68;
  if (!qword_1EEF34C68)
  {
    v1 = sub_1B16B7D60();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB1678], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF34C68);
  }
  return result;
}

void BlueprintLayoutCollectionInvalidatorAnimator.animate(animations:completion:)()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_1B15C1568(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

void sub_1B15CF978()
{
  uint64_t v0;
  const void *v1;
  const void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;

  v3 = (void *)objc_opt_self();
  v4 = MEMORY[0x1E0C809B0];
  OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F00E4, MEMORY[0x1E0C809B0], 1107296256, v6, v8);
  OUTLINED_FUNCTION_2_107();
  swift_release();
  v5 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v0;
  OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F8544, v4, 1107296256, v7, v9);
  OUTLINED_FUNCTION_3_100();
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_delay_options_animations_completion_, v11, v2, v1, v10, 0.0);
  _Block_release(v1);
  _Block_release(v2);
}

uint64_t sub_1B15CFCA0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15CFCCC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

uint64_t sub_1B15CFD04()
{
  return swift_deallocObject();
}

uint64_t sub_1B15CFD14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionInvalidatorAnimatorType.animate(animations:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

void destroy for BlueprintLayoutCollectionInvalidatorAnimator(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3)
    v1 = *(_DWORD *)a1 + 3;
  if (v1 == 2)
  {

  }
  else if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
}

uint64_t initializeWithCopy for BlueprintLayoutCollectionInvalidatorAnimator(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  void *v4;
  id v5;
  __int128 v6;
  __int128 v7;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    v4 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 2;
    v5 = v4;
  }
  else if (v3 == 1)
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutCollectionInvalidatorAnimator(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 2;
      v7 = v6;
    }
    else if (v5 == 1)
    {
      v8 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v8 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v9 = *a2;
      v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      *(_OWORD *)a1 = *a2;
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for BlueprintLayoutCollectionInvalidatorAnimator(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 2;
    }
    else
    {
      if (v5 != 1)
      {
        if (v5)
        {
          v8 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v8;
          *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_BYTE *)(a1 + 40) = 0;
        }
        return a1;
      }
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v6 = 1;
    }
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionInvalidatorAnimator()
{
  return &type metadata for BlueprintLayoutCollectionInvalidatorAnimator;
}

unint64_t _NSRange.range(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t result;
  char v9;

  if (sub_1B16B7814() == a3)
    return 0;
  OUTLINED_FUNCTION_0_145();
  if ((v3 & 1) != 0)
    return 0;
  OUTLINED_FUNCTION_0_145();
  if ((v4 & 1) != 0)
    return 0;
  sub_1B16B9740();
  v5 = OUTLINED_FUNCTION_1_123();
  if ((v6 & 1) != 0)
    return 0;
  v7 = v5;
  sub_1B16B9740();
  result = OUTLINED_FUNCTION_1_123();
  if ((v9 & 1) != 0)
    return 0;
  if (result >> 14 >= v7 >> 14)
    return v7;
  __break(1u);
  return result;
}

uint64_t destroy for BlueprintAnimatorContext(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t initializeWithCopy for BlueprintAnimatorContext(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for BlueprintAnimatorContext(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for BlueprintAnimatorContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintAnimatorContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BlueprintAnimatorContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

double sub_1B15D0300(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintAnimatorContext()
{
  return &type metadata for BlueprintAnimatorContext;
}

uint64_t dispatch thunk of BlueprintAnimatorType.animate(context:animation:applyUpdates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of BlueprintAnimatorType.animationCancelled(context:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t initializeBufferWithCopyOfBuffer for MastheadScrollView(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1B15D0390(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1B15D0390(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_retain();
  else
    return a1;
}

void destroy for MastheadScrollView(uint64_t a1)
{
  sub_1B13FBF14(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for MastheadScrollView(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1B15D0390(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1B13FBF14(v5, v6);
  return a1;
}

uint64_t assignWithTake for MastheadScrollView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1B13FBF14(v5, v6);
  return a1;
}

uint64_t dispatch thunk of BlueprintViewDragDelegateType.register(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlueprintViewDragDelegateType.registerDrop(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BlueprintViewDragDelegateType.registerDiffableDropDelegate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t LabelBarButtonItem.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_identifier);
  OUTLINED_FUNCTION_13();
  v2 = *v1;
  sub_1B16B9740();
  return v2;
}

uint64_t LabelBarButtonItem.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_identifier);
  OUTLINED_FUNCTION_13();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void LabelBarButtonItem.identifier.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id LabelBarButtonItem.attributedText.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label), sel_attributedText);
}

void sub_1B15D0564(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  LabelBarButtonItem.attributedText.setter(v1);
}

void LabelBarButtonItem.attributedText.modify(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label), sel_attributedText);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D05DC(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    LabelBarButtonItem.attributedText.setter(v2);
    OUTLINED_FUNCTION_1_5(v3);
  }
  else
  {
    LabelBarButtonItem.attributedText.setter(*a1);
    OUTLINED_FUNCTION_7();
  }
}

uint64_t LabelBarButtonItem.text.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label), sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B16B9860();

  return v3;
}

void sub_1B15D068C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1B16B9740();
  LabelBarButtonItem.text.setter(v1, v2);
}

void LabelBarButtonItem.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label);
  if (a2)
  {
    v4 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_setText_, v4);

  v5 = OUTLINED_FUNCTION_2_0((uint64_t)objc_msgSend(v3, sel_sizeToFit), sel_customView);
  if (v5)
  {
    v6 = v5;
    LabelBarButtonItem.text.getter();
    if (v7)
    {
      v8 = (void *)sub_1B16B983C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v6, sel_setLargeContentTitle_, v8);

    OUTLINED_FUNCTION_29_3(v8);
  }
}

void LabelBarButtonItem.text.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = LabelBarButtonItem.text.getter();
  a1[1] = v3;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D07D8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_1B16B9740();
    OUTLINED_FUNCTION_9_66();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_9_66();
  }
}

id LabelBarButtonItem.font.getter()
{
  return sub_1B15D08F4((SEL *)&selRef_font);
}

void sub_1B15D0834(id *a1)
{
  LabelBarButtonItem.font.setter(*a1);
}

void LabelBarButtonItem.font.setter(void *a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label);
  objc_msgSend(v2, sel_setFont_, a1);
  objc_msgSend(v2, sel_sizeToFit);
  OUTLINED_FUNCTION_1_5(a1);
}

void LabelBarButtonItem.font.modify(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = LabelBarButtonItem.font.getter();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D08DC(void **a1, char a2)
{
  sub_1B15D09CC(a1, a2, (void (*)(void))LabelBarButtonItem.font.setter);
}

id LabelBarButtonItem.textColor.getter()
{
  return sub_1B15D08F4((SEL *)&selRef_textColor);
}

id sub_1B15D08F4(SEL *a1)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label), *a1);
  if (!result)
    __break(1u);
  return result;
}

void sub_1B15D092C(id *a1)
{
  LabelBarButtonItem.textColor.setter(*a1);
}

void LabelBarButtonItem.textColor.setter(void *a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label), sel_setTextColor_, a1);

}

void LabelBarButtonItem.textColor.modify(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = LabelBarButtonItem.textColor.getter();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D09C0(void **a1, char a2)
{
  sub_1B15D09CC(a1, a2, (void (*)(void))LabelBarButtonItem.textColor.setter);
}

void sub_1B15D09CC(void **a1, char a2, void (*a3)(void))
{
  void *v4;
  id v5;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    a3();
    OUTLINED_FUNCTION_1_5(v5);
  }
  else
  {
    ((void (*)(void *))a3)(v4);
    OUTLINED_FUNCTION_7();
  }
}

id LabelBarButtonItem.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id LabelBarButtonItem.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LabelBarButtonItem.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1B16B7BE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)&v1[OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_identifier];
  sub_1B16B7BD4();
  v8 = sub_1B16B7BBC();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *v7 = v8;
  v7[1] = v10;
  v11 = OBJC_IVAR____TtC5TeaUI18LabelBarButtonItem_label;
  *(_QWORD *)&v1[v11] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_);

  sub_1B16BA724();
  __break(1u);
}

id LabelBarButtonItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B15D0C00()
{
  return LabelBarButtonItem.identifier.getter();
}

void sub_1B15D0C20()
{
  id *v0;

  OUTLINED_FUNCTION_101();
  *v0 = LabelBarButtonItem.attributedText.getter();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D0C44()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101();
  *v0 = LabelBarButtonItem.text.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D0C68()
{
  id *v0;

  OUTLINED_FUNCTION_101();
  *v0 = LabelBarButtonItem.font.getter();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D0C8C()
{
  id *v0;

  OUTLINED_FUNCTION_101();
  *v0 = LabelBarButtonItem.textColor.getter();
  OUTLINED_FUNCTION_0_0();
}

uint64_t Move.from.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_22_1(a1, a2);
}

uint64_t Move.from.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_33_22(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*Move.from.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  return nullsub_1;
}

uint64_t Move.to.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_22_1(a1, a2);
}

uint64_t Move.to.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_33_22(v2 + *(int *)(a2 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*Move.to.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  return nullsub_1;
}

uint64_t Move.init(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);

  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v12(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for Move(0, a3, a4, v9) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v10, a2, a3);
}

void static Move.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t);
  void (*v38)(char *, uint64_t);

  OUTLINED_FUNCTION_6();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v29 = type metadata accessor for Move(0, v27, v28, v28);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29, v31);
  OUTLINED_FUNCTION_123_1();
  MEMORY[0x1E0C80A78](v32, v33);
  v35 = (char *)&a9 - v34;
  v36 = OUTLINED_FUNCTION_70_14();
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v37(v35, v26, v29);
  v37(v20, v24, v29);
  if ((v36 & 1) != 0)
    OUTLINED_FUNCTION_70_14();
  v38 = *(void (**)(char *, uint64_t))(v30 + 8);
  v38(v20, v29);
  v38(v35, v29);
  OUTLINED_FUNCTION_47();
}

void sub_1B15D0E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  static Move.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t Diff.deletedIndices.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_10_59();
  v0 = OUTLINED_FUNCTION_12_50();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t (*Diff.deletedIndices.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  return nullsub_1;
}

uint64_t Diff.insertedIndices.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_124();
  OUTLINED_FUNCTION_10_59();
  v0 = OUTLINED_FUNCTION_12_50();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t (*Diff.insertedIndices.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

uint64_t Diff.updatedIndices.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_124();
  OUTLINED_FUNCTION_10_59();
  v0 = OUTLINED_FUNCTION_12_50();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t (*Diff.updatedIndices.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

uint64_t Diff.updatedSectionDescriptorIndices.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_124();
  OUTLINED_FUNCTION_10_59();
  v0 = OUTLINED_FUNCTION_12_50();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t (*Diff.updatedSectionDescriptorIndices.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

void Diff.movedIndices.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_124() + 32);
  OUTLINED_FUNCTION_31_26();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_31();
}

uint64_t (*Diff.movedIndices.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

void Diff.deletedIndexPaths.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_124() + 36);
  OUTLINED_FUNCTION_31_26();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_31();
}

uint64_t (*Diff.deletedIndexPaths.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

void Diff.insertedIndexPaths.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_124() + 40);
  OUTLINED_FUNCTION_31_26();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_31();
}

uint64_t (*Diff.insertedIndexPaths.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

void Diff.updatedIndexPaths.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_124() + 44);
  OUTLINED_FUNCTION_31_26();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_31();
}

uint64_t (*Diff.updatedIndexPaths.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

void Diff.deferredUpdatedIndexPaths.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_124() + 48);
  OUTLINED_FUNCTION_31_26();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_31();
}

uint64_t (*Diff.deferredUpdatedIndexPaths.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

void Diff.movedIndexPaths.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_124() + 52);
  OUTLINED_FUNCTION_31_26();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_31();
}

uint64_t (*Diff.movedIndexPaths.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  OUTLINED_FUNCTION_1_124();
  return nullsub_1;
}

void Diff.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v30 = v2;
  sub_1B1409038(0, &qword_1ED1855F8, (uint64_t (*)(uint64_t))sub_1B1510AB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16D6660;
  strcpy((char *)(inited + 32), "deletedIndices");
  *(_BYTE *)(inited + 47) = -18;
  v4 = OUTLINED_FUNCTION_10_59();
  *(_QWORD *)(inited + 72) = v4;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(inited + 48));
  OUTLINED_FUNCTION_49_17(v5, v1);
  *(_QWORD *)(inited + 80) = 0x6465747265736E69;
  *(_QWORD *)(inited + 88) = 0xEF73656369646E49;
  v6 = (int *)OUTLINED_FUNCTION_1_124();
  v7 = v1 + v6[5];
  *(_QWORD *)(inited + 120) = v4;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(inited + 96));
  OUTLINED_FUNCTION_49_17(v8, v7);
  strcpy((char *)(inited + 128), "updatedIndices");
  *(_BYTE *)(inited + 143) = -18;
  v9 = v1 + v6[6];
  *(_QWORD *)(inited + 168) = v4;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(inited + 144));
  OUTLINED_FUNCTION_49_17(v10, v9);
  *(_QWORD *)(inited + 176) = 0xD00000000000001FLL;
  *(_QWORD *)(inited + 184) = 0x80000001B16F0530;
  v11 = v1 + v6[7];
  *(_QWORD *)(inited + 216) = v4;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(inited + 192));
  v13 = OUTLINED_FUNCTION_49_17(v12, v11);
  strcpy((char *)(inited + 224), "movedIndices");
  *(_BYTE *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  v14 = *(_QWORD *)(v1 + v6[8]);
  OUTLINED_FUNCTION_36_17(v13, &qword_1EEF34C80, (uint64_t (*)(uint64_t))sub_1B15D159C);
  *(_QWORD *)(inited + 240) = v14;
  *(_QWORD *)(inited + 264) = v15;
  *(_QWORD *)(inited + 272) = 0xD000000000000011;
  OUTLINED_FUNCTION_50_17();
  *(_QWORD *)(inited + 280) = v16;
  v17 = *(_QWORD *)(v1 + v6[9]);
  OUTLINED_FUNCTION_36_17(v18, &qword_1EEF32CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
  *(_QWORD *)(inited + 288) = v17;
  *(_QWORD *)(inited + 312) = v19;
  *(_QWORD *)(inited + 320) = 0xD000000000000012;
  OUTLINED_FUNCTION_50_17();
  *(_QWORD *)(inited + 328) = v20;
  *(_QWORD *)(inited + 336) = *(_QWORD *)(v1 + v6[10]);
  *(_QWORD *)(inited + 360) = v21;
  *(_QWORD *)(inited + 368) = 0xD000000000000011;
  OUTLINED_FUNCTION_50_17();
  *(_QWORD *)(inited + 376) = v22;
  *(_QWORD *)(inited + 384) = *(_QWORD *)(v1 + v6[11]);
  *(_QWORD *)(inited + 408) = v23;
  *(_QWORD *)(inited + 416) = 0xD000000000000019;
  OUTLINED_FUNCTION_50_17();
  *(_QWORD *)(inited + 424) = v24;
  *(_QWORD *)(inited + 432) = *(_QWORD *)(v1 + v6[12]);
  *(_QWORD *)(inited + 456) = v25;
  *(_QWORD *)(inited + 464) = 0x646E496465766F6DLL;
  *(_QWORD *)(inited + 472) = 0xEF73687461507865;
  v26 = *(_QWORD *)(v1 + v6[13]);
  OUTLINED_FUNCTION_36_17(v25, &qword_1EEF34C88, (uint64_t (*)(uint64_t))sub_1B140A844);
  *(_QWORD *)(inited + 504) = v27;
  *(_QWORD *)(inited + 480) = v26;
  sub_1B16B9740();
  sub_1B16B9740();
  OUTLINED_FUNCTION_184();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9728();
  sub_1B15D15EC(0);
  v30[3] = v28;
  sub_1B13B13B4(qword_1EEF34C98, (uint64_t (*)(uint64_t))sub_1B15D15EC, MEMORY[0x1E0DB3C80]);
  v30[4] = v29;
  __swift_allocate_boxed_opaque_existential_0Tm(v30);
  sub_1B16B83A8();
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15D14C0()
{
  sub_1B13B13B4(&qword_1ED182F30, (uint64_t (*)(uint64_t))type metadata accessor for Diff, (uint64_t)&protocol conformance descriptor for Diff);
  return sub_1B16B839C();
}

uint64_t sub_1B15D1500@<X0>(char *a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  v6 = *(_QWORD *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a2(v6, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
  *a3 = result;
  return result;
}

void sub_1B15D159C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED179880)
  {
    v4 = type metadata accessor for Move(0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB438], a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED179880);
  }
}

void sub_1B15D15EC(uint64_t a1)
{
  sub_1B1409038(a1, &qword_1EEF34C90, (uint64_t (*)(uint64_t))type metadata accessor for Diff, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3C70]);
}

uint64_t *sub_1B15D1608(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  v12 = (v11 & v10) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
  }
  return v4;
}

uint64_t sub_1B15D16BC(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_1B15D1724(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1B15D1790(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1B15D17FC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1B15D1868(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_1B15D18D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B15D1994 + 4 * byte_1B16D6670[(v8 - 1)]))();
}

uint64_t dispatch thunk of BlueprintDiffType.updatedIndices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintDiffType.updatedSectionDescriptorIndices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BlueprintDiffType.movedIndices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of BlueprintDiffType.deletedIndexPaths.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BlueprintDiffType.insertedIndexPaths.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of BlueprintDiffType.updatedIndexPaths.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of BlueprintDiffType.movedIndexPaths.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of BlueprintDiffType.deferredUpdatedIndexPaths.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DiffType.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DiffType.build(in:oldIndex:newIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t assignWithCopy for Diff(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B16B7CB8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Diff(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B16B7CB8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v8 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for Diff(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B16B7CB8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Diff()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B15D1D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_10_59();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Diff()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B15D1DE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_10_59();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
    OUTLINED_FUNCTION_31();
  }
}

uint64_t sub_1B15D1E48@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B15D1500(a1, *(uint64_t (**)(uint64_t, char *))(v2 + 40), a2);
}

uint64_t BlueprintIntegator.sectionCollapsibleStateManager.getter()
{
  OUTLINED_FUNCTION_13();
  return swift_retain();
}

uint64_t BlueprintIntegator.sectionCollapsibleStateManager.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v1 + 144) = a1;
  return swift_release();
}

void BlueprintIntegator.sectionCollapsibleStateManager.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintIntegator.__allocating_init(viewProvider:app:blueprintBookmarkManager:blueprintAnimatorManager:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_25();
  BlueprintIntegator.init(viewProvider:app:blueprintBookmarkManager:blueprintAnimatorManager:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_67();
}

void BlueprintIntegator.__allocating_init<A, B, C, D, E>(diffableDataSourceProvider:viewProvider:app:blueprintBookmarkManager:blueprintAnimatorManager:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_25();
  BlueprintIntegator.init<A, B, C, D, E>(diffableDataSourceProvider:viewProvider:app:blueprintBookmarkManager:blueprintAnimatorManager:)(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_67();
}

void BlueprintIntegator.init<A, B, C, D, E>(diffableDataSourceProvider:viewProvider:app:blueprintBookmarkManager:blueprintAnimatorManager:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v9 = *v5;
  v5[18] = 0;
  v5[2] = a2;
  sub_1B13C06D0(a3, (uint64_t)(v5 + 8));
  sub_1B13BC100(a5, (uint64_t)(v5 + 13), &qword_1ED1817B8, &qword_1ED1817B0);
  sub_1B13BC100(a4, (uint64_t)(v5 + 3), qword_1ED1817C8, &qword_1ED1817C0);
  v10 = (_QWORD *)OUTLINED_FUNCTION_25();
  v11 = *(_QWORD *)(v9 + 96);
  v10[2] = v11;
  v12 = *(_QWORD *)(v9 + 120);
  v10[3] = v12;
  v10[4] = a1;
  v5[19] = (uint64_t)sub_1B15D20C8;
  v5[20] = (uint64_t)v10;
  v13 = (_QWORD *)OUTLINED_FUNCTION_25();
  v13[2] = v11;
  v13[3] = v12;
  v13[4] = a1;
  v5[21] = (uint64_t)sub_1B15D20E4;
  v5[22] = (uint64_t)v13;
  swift_retain();
  OUTLINED_FUNCTION_67();
}

uint64_t sub_1B15D20A4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B15D20C8()
{
  BlueprintCompositionalListDiffableDataSourceProvider.applySnapshot(from:response:animated:applyBookmark:)();
}

void sub_1B15D20DC()
{
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15D20E4()
{
  BlueprintCompositionalListDiffableDataSourceProvider.applyReloadSnapshot(from:)();
}

void sub_1B15D20F8()
{
  OUTLINED_FUNCTION_0_0();
}

uint64_t BlueprintIntegator.validate(update:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD v21[2];
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v24 = a1;
  v3 = *v1;
  v4 = sub_1B16B9650();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (_QWORD *)((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B1404978();
  *v8 = sub_1B16BA0DC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4);
  v9 = sub_1B16B9674();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    v11 = *(_QWORD *)(v3 + 96);
    v12 = *(_QWORD *)(v3 + 120);
    v21[0] = *(_QWORD *)(v12 + 56);
    v21[1] = v2;
    v13 = (void *)((uint64_t (*)(uint64_t, uint64_t))v21[0])(v11, v12);
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v15 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 208);
    v16 = swift_checkMetadataState();
    v17 = v15(v16, AssociatedConformanceWitness);

    if (v17)
    {
      if (BlueprintCollectionViewLayoutTransition.isTransitioning.getter(v18))
      {
        sub_1B154F5F8();
        swift_allocError();
        *(_QWORD *)v19 = 0xD000000000000025;
        *(_QWORD *)(v19 + 8) = 0x80000001B16F06D0;
        *(_BYTE *)(v19 + 16) = 1;
        swift_willThrow();
        return swift_release();
      }
      swift_release();
    }
    v20 = *(_OWORD *)(v3 + 104);
    v22 = *(_OWORD *)(v3 + 80);
    v23 = v20;
    type metadata accessor for BlueprintPipelineUpdate();
  }
  __break(1u);
  return result;
}

void BlueprintIntegator.integrate(update:completion:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_25_37();
}

void sub_1B15D2380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;

  v13 = *(_QWORD *)(a1 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v16 = (char *)&a9 - v15;
  v17 = sub_1B16B9650();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (uint64_t *)((char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B1404978();
  *v21 = sub_1B16BA0DC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v18 + 104))(v21, *MEMORY[0x1E0DEF740], v17);
  v22 = sub_1B16B9674();
  (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v21, v17);
  if ((v22 & 1) != 0)
  {
    v23 = v9[11];
    v24 = v9[12];
    __swift_project_boxed_opaque_existential_1(v9 + 8, v23);
    (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
    if ((*(_BYTE *)(v11 - 81) & 1) == 0)
      goto LABEL_5;
    v25 = (void *)objc_opt_self();
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 16))(v16, *(_QWORD *)(v11 - 160), a1);
    v26 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v27 = (v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = (char *)swift_allocObject();
    v29 = *(_QWORD *)(v11 - 192);
    *((_QWORD *)v28 + 2) = *(_QWORD *)(v11 - 184);
    *((_QWORD *)v28 + 3) = v29;
    v30 = *(_QWORD *)(v11 - 168);
    *((_QWORD *)v28 + 4) = *(_QWORD *)(v10 + 96);
    *((_QWORD *)v28 + 5) = v30;
    *((_QWORD *)v28 + 6) = *(_QWORD *)(v11 - 176);
    *((_QWORD *)v28 + 7) = *(_QWORD *)(v10 + 120);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v28[v26], v16, a1);
    *(_QWORD *)&v28[v27] = v9;
    v31 = &v28[(v27 + 15) & 0xFFFFFFFFFFFFFFF8];
    v32 = *(_QWORD *)(v11 - 144);
    *(_QWORD *)v31 = *(_QWORD *)(v11 - 152);
    *((_QWORD *)v31 + 1) = v32;
    v33 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v33 + 16) = sub_1B15D4600;
    *(_QWORD *)(v33 + 24) = v28;
    *(_QWORD *)(v11 - 104) = sub_1B140AA30;
    *(_QWORD *)(v11 - 96) = v33;
    *(_QWORD *)(v11 - 136) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v11 - 128) = 1107296256;
    *(_QWORD *)(v11 - 120) = sub_1B140AA14;
    *(_QWORD *)(v11 - 112) = &block_descriptor_57;
    v34 = _Block_copy((const void *)(v11 - 136));
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v25, sel_performWithoutAnimation_, v34);
    _Block_release(v34);
    LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v32 & 1) != 0)
    {
      __break(1u);
LABEL_5:
      sub_1B15D2610();
    }
    OUTLINED_FUNCTION_47();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B15D2610()
{
  type metadata accessor for Blueprint();
}

void sub_1B15D2664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v9[12] = *(_QWORD *)(a1 - 8);
  v15 = MEMORY[0x1E0C80A78](a1, a1);
  v9[2] = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v17);
  v9[11] = (char *)&a9 - v18;
  v9[13] = v19;
  v20 = sub_1B16BA328();
  v9[9] = *(_QWORD *)(v20 - 8);
  v9[10] = v20;
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v9[7] = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v24);
  v9[8] = (char *)&a9 - v25;
  sub_1B13F834C(0, &qword_1ED17EF98, (void (*)(uint64_t))type metadata accessor for BlueprintBookmark);
  MEMORY[0x1E0C80A78](v26, v27);
  v9[6] = (char *)&a9 - v28;
  *(_QWORD *)(v14 - 176) = v13;
  *(_QWORD *)(v14 - 168) = v12;
  *(_QWORD *)(v14 - 160) = v11;
  *(_QWORD *)(v14 - 152) = v10;
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

void sub_1B15D2774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = sub_1B16BA328();
  v9[4] = *(_QWORD *)(v15 - 8);
  v9[5] = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v9[3] = (char *)&a9 - v17;
  v9[16] = v13;
  v9[17] = v12;
  *(_QWORD *)(v14 - 176) = v13;
  *(_QWORD *)(v14 - 168) = v12;
  v9[18] = v11;
  v9[19] = v10;
  *(_QWORD *)(v14 - 160) = v11;
  *(_QWORD *)(v14 - 152) = v10;
  type metadata accessor for BlueprintPipelineUpdate();
}

uint64_t sub_1B15D27D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  int EnumCaseMultiPayload;

  v9[24] = a1;
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v9[1] = (char *)&a9 - v15;
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  v9[20] = (char *)&a9 - v24;
  MEMORY[0x1E0C80A78](v23, v25);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v9[21] = v10;
  v27((char *)&a9 - v28, v10, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1B15D28EC + dword_1B15D4194[EnumCaseMultiPayload]))();
}

uint64_t sub_1B15D28FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD, uint64_t);
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v0[14] = v1;
  v8 = v3[1];
  *(_OWORD *)(v7 - 176) = *v3;
  *(_OWORD *)(v7 - 160) = v8;
  *(_OWORD *)(v7 - 144) = v3[2];
  sub_1B13F76FC(v0[25] + 104, (uint64_t)(v0 + 42), &qword_1ED1817B8, &qword_1ED1817B0);
  if (!v0[45])
  {
    sub_1B13A9C7C((uint64_t)(v0 + 42), &qword_1ED1817B8, &qword_1ED1817B0);
    *(_OWORD *)(v7 - 224) = 0u;
    *(_OWORD *)(v7 - 208) = 0u;
    *(_QWORD *)(v7 - 192) = 0;
LABEL_6:
    sub_1B13A9C7C(v7 - 224, (unint64_t *)&unk_1ED184990, qword_1ED17FCF8);
    v33 = v0[3];
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload(v33, 0, 1, v4);
    v34 = type metadata accessor for BlueprintBookmark();
    __swift_storeEnumTagSinglePayload(v0[6], 1, 1, v34);
    v35 = v0[13];
    __swift_storeEnumTagSinglePayload(v0[8], 1, 1, v35);
    __swift_storeEnumTagSinglePayload(v0[7], 1, 1, v35);
    BlueprintPipelineUpdate.replacing(action:apply:validate:bookmark:before:after:)();
  }
  v9 = v0[46];
  __swift_project_boxed_opaque_existential_1(v0 + 42, v0[45]);
  v10 = static BlueprintAnimatorType.key.getter();
  (*(void (**)(uint64_t))(v9 + 16))(v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 42));
  if (!*(_QWORD *)(v7 - 200))
    goto LABEL_6;
  sub_1B13C06D0((__int128 *)(v7 - 224), v7 - 128);
  v11 = v0[14];
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v13 = v0[24];
  v12(v6, v0[21], v13);
  v12(v2, v6, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (char *)swift_allocObject();
  v17 = v0[15];
  v18 = v0[17];
  *((_QWORD *)v16 + 2) = v0[16];
  *((_QWORD *)v16 + 3) = v18;
  v19 = *(_QWORD *)(v17 + 96);
  v0[21] = v19;
  v20 = v0[18];
  *((_QWORD *)v16 + 4) = v19;
  *((_QWORD *)v16 + 5) = v20;
  *((_QWORD *)v16 + 6) = v0[19];
  v21 = *(_QWORD *)(v17 + 120);
  v22 = v0[25];
  *((_QWORD *)v16 + 7) = v21;
  *((_QWORD *)v16 + 8) = v22;
  v23 = v6;
  v24 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(&v16[v14], v23, v13);
  v25 = &v16[v15];
  v26 = v0[22];
  *(_QWORD *)v25 = v0[23];
  *((_QWORD *)v25 + 1) = v26;
  v27 = *(uint64_t (**)(_QWORD, uint64_t))(v21 + 56);
  swift_retain();
  swift_retain();
  v28 = (void *)v27(v0[21], v21);
  v29 = objc_msgSend(v28, sel_window);

  if (!v29)
  {
    v36 = *(_QWORD *)(v7 - 104);
    v37 = *(_QWORD *)(v7 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 128), v36);
    *(_QWORD *)(v7 - 192) = 0;
    *(_OWORD *)(v7 - 224) = 0u;
    *(_OWORD *)(v7 - 208) = 0u;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 16))(v7 - 224, v7 - 176, v36, v37);
    sub_1B15D60C8(v7 - 224);
    sub_1B15D49DC();
  }
  (*(void (**)(uint64_t, uint64_t))(v0[14] + 8))(v2, v24);
  v30 = *(_QWORD *)(v7 - 96);
  v31 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 128), *(_QWORD *)(v7 - 104));
  *(_QWORD *)(v7 - 192) = 0;
  *(_OWORD *)(v7 - 224) = 0u;
  *(_OWORD *)(v7 - 208) = 0u;
  MEMORY[0x1E0C80A78](v31, v32);
  (*(void (**)(uint64_t, uint64_t, void (*)()))(v30 + 8))(v7 - 224, v7 - 176, sub_1B13CC4AC);
  sub_1B15D60C8(v7 - 224);
  swift_release();
  sub_1B157FFD0(v7 - 176);
  return __swift_destroy_boxed_opaque_existential_1(v7 - 128);
}

void sub_1B15D41BC()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_67();
}

void sub_1B15D41D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  *(_QWORD *)(v2 - 168) = v4;
  *(_QWORD *)(v2 - 160) = v1;
  *(_QWORD *)(v2 - 184) = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v2 - 176) = (v4 + 64) & ~v4;
  OUTLINED_FUNCTION_12_51();
}

void sub_1B15D4200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_131_1();
  *(_QWORD *)(v2 - 152) = v1;
  *(_QWORD *)(v2 - 144) = v0;
  switch(v3)
  {
    case 0:
      if (!*(_QWORD *)(v0 + 40))
        goto LABEL_15;
      v4 = v0 + 16;
      break;
    case 1:
    case 3:
      OUTLINED_FUNCTION_19_44();
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_19_44();
      if (!*(_QWORD *)(v0 + 88))
        goto LABEL_15;
      v4 = v0 + 64;
      break;
    case 4:
      v4 = v0;
      break;
    case 5:
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    case 6:
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    default:
      goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(v4);
LABEL_15:
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_57_18();
  switch(OUTLINED_FUNCTION_39_21())
  {
    case 0u:
      v5 = OUTLINED_FUNCTION_3_12();
      if (OUTLINED_FUNCTION_13_49(v5))
        goto LABEL_21;
      v6 = OUTLINED_FUNCTION_20_41();
LABEL_20:
      v7(v6);
LABEL_21:
      v8 = v0 + *(int *)(v1 + 64);
      OUTLINED_FUNCTION_43_19();
      if (*(_QWORD *)(v8 + 40))
        OUTLINED_FUNCTION_102();
      OUTLINED_FUNCTION_0_146();
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v6 = OUTLINED_FUNCTION_21_33();
      goto LABEL_20;
    case 2u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_56_16();
      goto LABEL_21;
    default:
      goto LABEL_21;
  }
}

void sub_1B15D4518()
{
  OUTLINED_FUNCTION_1_125();
}

void sub_1B15D4528()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D4538()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D4548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_11_48();
  v1 = OUTLINED_FUNCTION_14_47(v0);
  OUTLINED_FUNCTION_16_40(v1, v2, v3, v4);
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D456C()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D457C()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D458C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 136) = v6;
  *(_QWORD *)(v8 - 128) = v4;
  *(_QWORD *)(v8 - 120) = v5;
  *(_QWORD *)(v8 - 112) = v7;
  *(_QWORD *)(v8 - 104) = v1;
  *(_QWORD *)(v8 - 96) = v2;
  v9 = OUTLINED_FUNCTION_3_70(a1);
  OUTLINED_FUNCTION_55_2(v9);
  OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_18();
  if (*(_QWORD *)(v3 + 40))
    OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_66_12();
  OUTLINED_FUNCTION_22_32();
  OUTLINED_FUNCTION_46_15();
  OUTLINED_FUNCTION_16_47();
  swift_release();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_47();
}

void sub_1B15D4600()
{
  OUTLINED_FUNCTION_25_37();
}

void sub_1B15D4620()
{
  sub_1B15D2610();
}

uint64_t sub_1B15D4668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t Strong;
  _QWORD v9[3];
  uint64_t v10;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B13F76FC(Strong + 24, (uint64_t)v9, qword_1ED1817C8, &qword_1ED1817C0);
    swift_release();
    if (v10)
    {
      __swift_project_boxed_opaque_existential_1(v9, v10);
      type metadata accessor for BlueprintPipelineUpdate();
    }
    sub_1B13A9C7C((uint64_t)v9, qword_1ED1817C8, &qword_1ED1817C0);
  }
  return a5(a1);
}

void sub_1B15D47B0()
{
  type metadata accessor for BlueprintPipelineUpdate();
}

uint64_t sub_1B15D480C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t result;
  uint64_t v21;

  v10 = *(_QWORD *)(a1 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v21 - v12;
  *(_QWORD *)(v8 - 176) = objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v7, a1);
  sub_1B1405FC4(v3, v8 - 120);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = v6;
  *((_QWORD *)v15 + 3) = v5;
  *((_QWORD *)v15 + 4) = *(_QWORD *)(v8 - 200);
  *((_QWORD *)v15 + 5) = v2;
  v16 = *(_QWORD *)(v8 - 192);
  v17 = *(_QWORD *)(v8 - 184);
  *((_QWORD *)v15 + 6) = v4;
  *((_QWORD *)v15 + 7) = v16;
  *((_QWORD *)v15 + 8) = v17;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v15[v14], v13, a1);
  sub_1B13F77B0(v8 - 120, (uint64_t)&v15[(v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8]);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1B15D6124;
  *(_QWORD *)(v18 + 24) = v15;
  *(_QWORD *)(v8 - 136) = sub_1B149DB30;
  *(_QWORD *)(v8 - 128) = v18;
  *(_QWORD *)(v8 - 168) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 - 160) = 1107296256;
  *(_QWORD *)(v8 - 152) = sub_1B140AA14;
  *(_QWORD *)(v8 - 144) = &block_descriptor_52;
  v19 = _Block_copy((const void *)(v8 - 168));
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(*(id *)(v8 - 176), sel_performWithoutAnimation_, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD))(v8 - 208))(*(_QWORD *)(v8 - 224));
    return swift_release();
  }
  return result;
}

void sub_1B15D49DC()
{
  type metadata accessor for BlueprintPipelineUpdate();
}

uint64_t sub_1B15D4A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  void *v34;
  uint64_t v36;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v36 - v9;
  sub_1B13F76FC(v2, v5 - 168, qword_1ED1817C8, &qword_1ED1817C0);
  v11 = *(_QWORD *)(v5 - 144);
  if (v11)
  {
    v12 = *(_QWORD *)(v5 - 136);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 144));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v3 + *(int *)(a1 + 60), v11, v12);
    __swift_destroy_boxed_opaque_existential_1(v5 - 168);
  }
  else
  {
    sub_1B13A9C7C(v5 - 168, qword_1ED1817C8, &qword_1ED1817C0);
    *(_OWORD *)(v5 - 128) = 0u;
    *(_OWORD *)(v5 - 112) = 0u;
  }
  v13 = v3;
  v14 = *(_QWORD *)(v4 + 120);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 56);
  v16 = *(_QWORD *)(v4 + 96);
  *(_QWORD *)(v5 - 272) = v16;
  v17 = v15(v16, v14);
  v18 = (uint64_t *)(v13 + *(int *)(a1 + 56));
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)(v5 - 248) = v20;
  *(_QWORD *)(v5 - 240) = v17;
  *(_QWORD *)(v5 - 256) = v19;
  *(_QWORD *)(v5 - 264) = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v13, a1);
  sub_1B1405FC4(v5 - 128, v5 - 168);
  v21 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = *(_QWORD *)(v5 - 216);
  *((_QWORD *)v24 + 2) = *(_QWORD *)(v5 - 208);
  *((_QWORD *)v24 + 3) = v25;
  v26 = *(_QWORD *)(v5 - 224);
  *((_QWORD *)v24 + 4) = v16;
  *((_QWORD *)v24 + 5) = v26;
  *((_QWORD *)v24 + 6) = *(_QWORD *)(v5 - 232);
  *((_QWORD *)v24 + 7) = v14;
  *((_QWORD *)v24 + 8) = *(_QWORD *)(v5 - 264);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v24[v21], v10, a1);
  sub_1B13F77B0(v5 - 168, (uint64_t)&v24[v22]);
  v27 = (uint64_t *)&v24[v23];
  v29 = *(_QWORD *)(v5 - 192);
  v28 = *(_QWORD *)(v5 - 184);
  *v27 = v29;
  v27[1] = v28;
  v30 = &v24[(v23 + 23) & 0xFFFFFFFFFFFFFFF8];
  v31 = *(_QWORD *)(v5 - 176);
  *(_QWORD *)v30 = *(_QWORD *)(v5 - 200);
  *((_QWORD *)v30 + 1) = v31;
  swift_retain();
  sub_1B13C4AEC(v29);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_retain();
  v34 = *(void **)(v5 - 240);
  BlueprintViewType.reload(apply:completion:)(*(_QWORD *)(v5 - 248), *(_QWORD *)(v5 - 256), (uint64_t)sub_1B15D6EFC, (uint64_t)v24, AssociatedTypeWitness, AssociatedConformanceWitness);

  swift_release();
  sub_1B13F77F4(v5 - 128);
  return swift_release();
}

uint64_t sub_1B15D4CF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void (*)(), _QWORD *), uint64_t a6, uint64_t (*a7)(void *), uint64_t a8)
{
  uint64_t Strong;
  _QWORD *v13;
  id v14;
  _QWORD v16[3];
  uint64_t v17;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B13F76FC(Strong + 24, (uint64_t)v16, qword_1ED1817C8, &qword_1ED1817C0);
    swift_release();
    if (v17)
    {
      __swift_project_boxed_opaque_existential_1(v16, v17);
      type metadata accessor for BlueprintPipelineUpdate();
    }
    sub_1B13A9C7C((uint64_t)v16, qword_1ED1817C8, &qword_1ED1817C0);
    if (!a5)
      return a7(a1);
LABEL_5:
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a7;
    v13[3] = a8;
    v13[4] = a1;
    sub_1B13C4AEC((uint64_t)a5);
    swift_retain();
    v14 = a1;
    a5(sub_1B15D6F84, v13);
    swift_release();
    return sub_1B13B9100((uint64_t)a5);
  }
  if (a5)
    goto LABEL_5;
  return a7(a1);
}

void sub_1B15D4EC0()
{
  uint64_t Strong;
  _QWORD v1[3];
  uint64_t v2;

  OUTLINED_FUNCTION_13();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B13F76FC(Strong + 24, (uint64_t)v1, qword_1ED1817C8, &qword_1ED1817C0);
    swift_release();
    if (v2)
    {
      __swift_project_boxed_opaque_existential_1(v1, v2);
      OUTLINED_FUNCTION_25_37();
    }
    sub_1B13A9C7C((uint64_t)v1, qword_1ED1817C8, &qword_1ED1817C0);
  }
}

uint64_t sub_1B15D4FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_13();
  if (*(_QWORD *)(a1 + 144))
  {
    swift_retain();
    BlueprintSectionCollapsibleStateManager.sanitize(diff:)();
  }
  return sub_1B13B4DC0(a2, a3);
}

void sub_1B15D505C()
{
  type metadata accessor for BlueprintPipelineUpdate();
}

uint64_t sub_1B15D50C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedConformanceWitness;
  void (*v28)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, void (*)(), char *, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v32;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v32 - v9;
  sub_1B13F76FC(v2, v5 - 168, qword_1ED1817C8, &qword_1ED1817C0);
  v11 = *(_QWORD *)(v5 - 144);
  if (v11)
  {
    v12 = *(_QWORD *)(v5 - 136);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 144));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v3 + *(int *)(a1 + 60), v11, v12);
    __swift_destroy_boxed_opaque_existential_1(v5 - 168);
  }
  else
  {
    sub_1B13A9C7C(v5 - 168, qword_1ED1817C8, &qword_1ED1817C0);
    *(_OWORD *)(v5 - 128) = 0u;
    *(_OWORD *)(v5 - 112) = 0u;
  }
  v13 = *(_QWORD *)(v4 + 120);
  v14 = *(_QWORD *)(v4 + 96);
  *(_QWORD *)(v5 - 256) = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 56))(v14, v13);
  v15 = (uint64_t *)(v3 + *(int *)(a1 + 56));
  v17 = *v15;
  v16 = v15[1];
  *(_QWORD *)(v5 - 264) = v17;
  *(_QWORD *)(v5 - 272) = v16;
  v18 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v3, a1);
  sub_1B1405FC4(v5 - 128, v5 - 168);
  v19 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = (char *)swift_allocObject();
  v21 = *(_QWORD *)(v5 - 232);
  *((_QWORD *)v20 + 2) = *(_QWORD *)(v5 - 224);
  *((_QWORD *)v20 + 3) = v21;
  v22 = *(_QWORD *)(v5 - 240);
  *((_QWORD *)v20 + 4) = v14;
  *((_QWORD *)v20 + 5) = v22;
  *((_QWORD *)v20 + 6) = *(_QWORD *)(v5 - 248);
  *((_QWORD *)v20 + 7) = v13;
  *((_QWORD *)v20 + 8) = v18;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v19], v10, a1);
  sub_1B13F77B0(v5 - 168, (uint64_t)&v20[(v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8]);
  v23 = (_QWORD *)swift_allocObject();
  v24 = *(_QWORD *)(v5 - 208);
  v25 = *(_QWORD *)(v5 - 200);
  v23[2] = v24;
  v23[3] = v25;
  v26 = *(_QWORD *)(v5 - 192);
  v23[4] = *(_QWORD *)(v5 - 216);
  v23[5] = v26;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v28 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, void (*)(), char *, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  swift_retain();
  sub_1B13C4AEC(v24);
  swift_retain();
  v29 = swift_checkMetadataState();
  v30 = *(void **)(v5 - 256);
  v28(*(_QWORD *)(v5 - 184), *(_QWORD *)(v5 - 264), *(_QWORD *)(v5 - 272), *(_QWORD *)(v5 - 176), 1, sub_1B15D6124, v20, sub_1B15D746C, v23, v29, AssociatedConformanceWitness);

  swift_release();
  swift_release();
  sub_1B13F77F4(v5 - 128);
  return swift_release();
}

uint64_t sub_1B15D5398(void *a1, void (*a2)(void (*)(), _QWORD *), uint64_t a3, uint64_t (*a4)(void *), uint64_t a5)
{
  _QWORD *v9;
  id v10;

  if (!a2)
    return a4(a1);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a5;
  v9[4] = a1;
  sub_1B13C4AEC((uint64_t)a2);
  swift_retain();
  v10 = a1;
  a2(sub_1B15D6F84, v9);
  swift_release();
  return sub_1B13B9100((uint64_t)a2);
}

void sub_1B15D5454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v12[3];
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  sub_1B13F76FC(a1, (uint64_t)v12, qword_1ED1817C8, &qword_1ED1817C0);
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(v12, v13);
    *(_QWORD *)&v14 = a3;
    *((_QWORD *)&v14 + 1) = a4;
    *(_QWORD *)&v15 = a6;
    *((_QWORD *)&v15 + 1) = a7;
    type metadata accessor for BlueprintPipelineUpdate();
  }
  sub_1B13A9C7C((uint64_t)v12, qword_1ED1817C8, &qword_1ED1817C0);
  v14 = 0u;
  v15 = 0u;
  sub_1B13F76FC(a1, (uint64_t)v12, qword_1ED1817C8, &qword_1ED1817C0);
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(v12, v13);
    type metadata accessor for BlueprintPipelineUpdate();
  }
  sub_1B13F77F4((uint64_t)&v14);
  sub_1B13A9C7C((uint64_t)v12, qword_1ED1817C8, &qword_1ED1817C0);
}

uint64_t BlueprintIntegator.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1B13A9C7C(v0 + 24, qword_1ED1817C8, &qword_1ED1817C0);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  sub_1B13A9C7C(v0 + 104, &qword_1ED1817B8, &qword_1ED1817B0);
  swift_release();
  sub_1B13B9100(*(_QWORD *)(v0 + 152));
  sub_1B13B9100(*(_QWORD *)(v0 + 168));
  return v0;
}

uint64_t BlueprintIntegator.__deallocating_deinit()
{
  BlueprintIntegator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15D5694(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 112);
}

uint64_t sub_1B15D569C(uint64_t a1)
{
  return BlueprintIntegator.validate(update:)(a1);
}

void sub_1B15D56BC()
{
  BlueprintIntegator.integrate(update:completion:)();
}

uint64_t dispatch thunk of BlueprintIntegatorType.validate(update:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BlueprintIntegatorType.integrate(update:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t method lookup function for BlueprintIntegator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintIntegator.__allocating_init(viewProvider:app:blueprintBookmarkManager:blueprintAnimatorManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of BlueprintIntegator.__allocating_init<A, B, C, D, E>(diffableDataSourceProvider:viewProvider:app:blueprintBookmarkManager:blueprintAnimatorManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

void sub_1B15D5718()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_67();
}

void sub_1B15D5734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 168) = *(unsigned __int8 *)(v3 + 80);
  *(_QWORD *)(v2 - 184) = *(_QWORD *)(v3 + 64);
  if (*(_QWORD *)(v1 + 88))
    __swift_destroy_boxed_opaque_existential_1(v1 + 64);
  OUTLINED_FUNCTION_12_51();
}

void sub_1B15D576C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = OUTLINED_FUNCTION_75_11();
  *(_QWORD *)(v4 - 160) = v0;
  *(_QWORD *)(v4 - 152) = v3;
  *(_QWORD *)(v4 - 176) = v1;
  *(_QWORD *)(v4 - 144) = v2;
  switch(v5)
  {
    case 0:
      if (!*(_QWORD *)(v3 + 40))
        goto LABEL_15;
      v6 = v3 + 16;
      break;
    case 1:
    case 3:
      OUTLINED_FUNCTION_34_23();
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_34_23();
      if (!*(_QWORD *)(v3 + 88))
        goto LABEL_15;
      v6 = v3 + 64;
      break;
    case 4:
      v6 = v3;
      break;
    case 5:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 40))
        OUTLINED_FUNCTION_65_12();
      OUTLINED_FUNCTION_0_146();
    case 6:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 40))
        OUTLINED_FUNCTION_65_12();
      OUTLINED_FUNCTION_0_146();
    default:
      goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(v6);
LABEL_15:
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_58();
  switch(OUTLINED_FUNCTION_39_21())
  {
    case 0u:
      v7 = OUTLINED_FUNCTION_3_12();
      if (OUTLINED_FUNCTION_13_49(v7))
        goto LABEL_21;
      v8 = OUTLINED_FUNCTION_20_41();
LABEL_20:
      v9(v8);
LABEL_21:
      v10 = v3 + *(int *)(v2 + 64);
      OUTLINED_FUNCTION_43_19();
      if (*(_QWORD *)(v10 + 40))
        OUTLINED_FUNCTION_102();
      OUTLINED_FUNCTION_0_146();
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v8 = OUTLINED_FUNCTION_21_33();
      goto LABEL_20;
    case 2u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_56_16();
      goto LABEL_21;
    default:
      goto LABEL_21;
  }
}

void sub_1B15D5A8C()
{
  OUTLINED_FUNCTION_1_125();
}

void sub_1B15D5A9C()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D5AAC()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D5ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_11_48();
  v1 = OUTLINED_FUNCTION_14_47(v0);
  OUTLINED_FUNCTION_16_40(v1, v2, v3, v4);
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D5AE0()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D5AF0()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D5B00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 136) = v6;
  *(_QWORD *)(v8 - 128) = v4;
  *(_QWORD *)(v8 - 120) = v5;
  *(_QWORD *)(v8 - 112) = v7;
  *(_QWORD *)(v8 - 104) = v1;
  *(_QWORD *)(v8 - 96) = v2;
  v9 = OUTLINED_FUNCTION_3_70(a1);
  OUTLINED_FUNCTION_55_2(v9);
  OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_18();
  if (*(_QWORD *)(v3 + 40))
    OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_22_32();
  OUTLINED_FUNCTION_46_15();
  OUTLINED_FUNCTION_16_47();
  swift_deallocObject();
  OUTLINED_FUNCTION_47();
}

void sub_1B15D5B64()
{
  OUTLINED_FUNCTION_25_37();
}

void sub_1B15D5B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_1B15D5454(v2 + 64, v2 + ((v7 + 104) & ~v7), v1, v3, v4, v5, v6);
}

uint64_t sub_1B15D5BE8(uint64_t a1)
{
  uint64_t v2;

  sub_1B13F834C(0, &qword_1ED17EF98, (void (*)(uint64_t))type metadata accessor for BlueprintBookmark);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B15D5C34()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_67();
}

void sub_1B15D5C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_47_23(a1);
  *(_QWORD *)(v3 - 160) = v1;
  *(_QWORD *)(v3 - 176) = v2;
  OUTLINED_FUNCTION_12_51();
}

void sub_1B15D5C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_131_1();
  *(_QWORD *)(v2 - 152) = v1;
  *(_QWORD *)(v2 - 144) = v0;
  switch(v3)
  {
    case 0:
      if (!*(_QWORD *)(v0 + 40))
        goto LABEL_15;
      v4 = v0 + 16;
      break;
    case 1:
    case 3:
      OUTLINED_FUNCTION_19_44();
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_19_44();
      if (!*(_QWORD *)(v0 + 88))
        goto LABEL_15;
      v4 = v0 + 64;
      break;
    case 4:
      v4 = v0;
      break;
    case 5:
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    case 6:
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    default:
      goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(v4);
LABEL_15:
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_57_18();
  switch(OUTLINED_FUNCTION_39_21())
  {
    case 0u:
      v5 = OUTLINED_FUNCTION_3_12();
      if (OUTLINED_FUNCTION_13_49(v5))
        goto LABEL_21;
      v6 = OUTLINED_FUNCTION_20_41();
LABEL_20:
      v7(v6);
LABEL_21:
      v8 = v0 + *(int *)(v1 + 64);
      OUTLINED_FUNCTION_43_19();
      if (*(_QWORD *)(v8 + 40))
        OUTLINED_FUNCTION_102();
      OUTLINED_FUNCTION_0_146();
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v6 = OUTLINED_FUNCTION_21_33();
      goto LABEL_20;
    case 2u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_56_16();
      goto LABEL_21;
    default:
      goto LABEL_21;
  }
}

void sub_1B15D5F58()
{
  OUTLINED_FUNCTION_1_125();
}

void sub_1B15D5F68()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D5F78()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D5F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_11_48();
  v1 = OUTLINED_FUNCTION_14_47(v0);
  OUTLINED_FUNCTION_16_40(v1, v2, v3, v4);
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D5FAC()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D5FBC()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D5FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 136) = v6;
  *(_QWORD *)(v8 - 128) = v4;
  *(_QWORD *)(v8 - 120) = v5;
  *(_QWORD *)(v8 - 112) = v7;
  *(_QWORD *)(v8 - 104) = v1;
  *(_QWORD *)(v8 - 96) = v2;
  v9 = OUTLINED_FUNCTION_3_70(a1);
  OUTLINED_FUNCTION_55_2(v9);
  OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_18();
  if (*(_QWORD *)(v3 + 40))
    OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_66_12();
  OUTLINED_FUNCTION_22_32();
  OUTLINED_FUNCTION_46_15();
  OUTLINED_FUNCTION_16_47();
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v8 - 160) + v6);
  swift_release();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_47();
}

void sub_1B15D6050()
{
  OUTLINED_FUNCTION_25_37();
}

void sub_1B15D6080()
{
  OUTLINED_FUNCTION_30_31();
  sub_1B15D505C();
}

uint64_t sub_1B15D60C8(uint64_t a1)
{
  destroy for BlueprintAnimatorContext(a1);
  return a1;
}

uint64_t sub_1B15D60FC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15D6128()
{
  OUTLINED_FUNCTION_82();
  return swift_deallocObject();
}

void sub_1B15D614C()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_67();
}

void sub_1B15D6168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_47_23(a1);
  *(_QWORD *)(v3 - 160) = v1;
  *(_QWORD *)(v3 - 176) = v2;
  OUTLINED_FUNCTION_12_51();
}

void sub_1B15D617C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_131_1();
  *(_QWORD *)(v2 - 152) = v1;
  *(_QWORD *)(v2 - 144) = v0;
  switch(v3)
  {
    case 0:
      if (!*(_QWORD *)(v0 + 40))
        goto LABEL_15;
      v4 = v0 + 16;
      break;
    case 1:
    case 3:
      OUTLINED_FUNCTION_19_44();
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_19_44();
      if (!*(_QWORD *)(v0 + 88))
        goto LABEL_15;
      v4 = v0 + 64;
      break;
    case 4:
      v4 = v0;
      break;
    case 5:
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    case 6:
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    default:
      goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(v4);
LABEL_15:
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_57_18();
  switch(OUTLINED_FUNCTION_39_21())
  {
    case 0u:
      v5 = OUTLINED_FUNCTION_3_12();
      if (OUTLINED_FUNCTION_13_49(v5))
        goto LABEL_21;
      v6 = OUTLINED_FUNCTION_20_41();
LABEL_20:
      v7(v6);
LABEL_21:
      v8 = v0 + *(int *)(v1 + 64);
      OUTLINED_FUNCTION_43_19();
      if (*(_QWORD *)(v8 + 40))
        OUTLINED_FUNCTION_102();
      OUTLINED_FUNCTION_0_146();
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v6 = OUTLINED_FUNCTION_21_33();
      goto LABEL_20;
    case 2u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_56_16();
      goto LABEL_21;
    default:
      goto LABEL_21;
  }
}

void sub_1B15D6470()
{
  OUTLINED_FUNCTION_1_125();
}

void sub_1B15D6480()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D6490()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D64A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_11_48();
  v1 = OUTLINED_FUNCTION_14_47(v0);
  OUTLINED_FUNCTION_16_40(v1, v2, v3, v4);
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D64C4()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D64D4()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D64E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 136) = v6;
  *(_QWORD *)(v8 - 128) = v4;
  *(_QWORD *)(v8 - 120) = v5;
  *(_QWORD *)(v8 - 112) = v7;
  *(_QWORD *)(v8 - 104) = v1;
  *(_QWORD *)(v8 - 96) = v2;
  v9 = OUTLINED_FUNCTION_3_70(a1);
  OUTLINED_FUNCTION_55_2(v9);
  OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_18();
  if (*(_QWORD *)(v3 + 40))
    OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_66_12();
  OUTLINED_FUNCTION_22_32();
  OUTLINED_FUNCTION_46_15();
  OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_47();
}

void sub_1B15D6548()
{
  OUTLINED_FUNCTION_25_37();
}

void sub_1B15D6578()
{
  OUTLINED_FUNCTION_30_31();
  sub_1B15D49DC();
}

void sub_1B15D65AC()
{
  sub_1B15D6A04();
}

void objectdestroy_37Tm()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_67();
}

void sub_1B15D65D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_52_22(a1);
  *(_QWORD *)(v2 - 160) = v1;
  OUTLINED_FUNCTION_12_51();
}

void sub_1B15D65E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  v5 = OUTLINED_FUNCTION_75_11();
  *(_QWORD *)(v4 - 152) = v3;
  *(_QWORD *)(v4 - 144) = v2;
  switch(v5)
  {
    case 0:
      if (!*(_QWORD *)(v3 + 40))
        goto LABEL_15;
      v6 = v3 + 16;
      break;
    case 1:
    case 3:
      OUTLINED_FUNCTION_34_23();
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_34_23();
      if (!*(_QWORD *)(v3 + 88))
        goto LABEL_15;
      v6 = v3 + 64;
      break;
    case 4:
      v6 = v3;
      break;
    case 5:
      OUTLINED_FUNCTION_55_16();
      if (*(_QWORD *)(v3 + 40))
        OUTLINED_FUNCTION_65_12();
      OUTLINED_FUNCTION_0_146();
    case 6:
      OUTLINED_FUNCTION_55_16();
      if (*(_QWORD *)(v3 + 40))
        OUTLINED_FUNCTION_65_12();
      OUTLINED_FUNCTION_0_146();
    default:
      goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(v6);
LABEL_15:
  v7 = v1 + v0;
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_58();
  switch(OUTLINED_FUNCTION_39_21())
  {
    case 0u:
      v8 = OUTLINED_FUNCTION_3_12();
      if (OUTLINED_FUNCTION_13_49(v8))
        goto LABEL_21;
      v9 = OUTLINED_FUNCTION_20_41();
LABEL_20:
      v10(v9);
LABEL_21:
      v11 = v7 + 7;
      v12 = v3 + *(int *)(v2 + 64);
      OUTLINED_FUNCTION_43_19();
      if (*(_QWORD *)(v12 + 40))
        OUTLINED_FUNCTION_102();
      *(_QWORD *)(v4 - 176) = v11 & 0xFFFFFFFFFFFFFFF8;
      OUTLINED_FUNCTION_0_146();
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v9 = OUTLINED_FUNCTION_21_33();
      goto LABEL_20;
    case 2u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_56_16();
      goto LABEL_21;
    default:
      goto LABEL_21;
  }
}

void sub_1B15D68F4()
{
  OUTLINED_FUNCTION_1_125();
}

void sub_1B15D6904()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D6914()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D6924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_11_48();
  v1 = OUTLINED_FUNCTION_61_16(v0);
  OUTLINED_FUNCTION_16_40(v1, v2, v3, v4);
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D6948()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D6958()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D6968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 - 136) = v6;
  *(_QWORD *)(v8 - 128) = v3;
  *(_QWORD *)(v8 - 120) = v4;
  *(_QWORD *)(v8 - 112) = v7;
  *(_QWORD *)(v8 - 104) = v1;
  *(_QWORD *)(v8 - 96) = v2;
  v9 = OUTLINED_FUNCTION_3_70(a1);
  OUTLINED_FUNCTION_44_18(v9);
  OUTLINED_FUNCTION_16_47();
  v10 = *(_QWORD *)(v8 - 152) + *(int *)(*(_QWORD *)(v8 - 144) + 68);
  OUTLINED_FUNCTION_91();
  if (*(_QWORD *)(v10 + 40))
    OUTLINED_FUNCTION_98_0();
  OUTLINED_FUNCTION_68_12();
  OUTLINED_FUNCTION_67_3(v10 + *(int *)(v5 + 60));
  OUTLINED_FUNCTION_0_27();
  v11 = *(_QWORD *)(v8 - 160) + *(_QWORD *)(v8 - 176);
  if (*(_QWORD *)(v11 + 24))
    __swift_destroy_boxed_opaque_existential_1(v11);
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_47();
}

void sub_1B15D69F8()
{
  sub_1B15D6A04();
}

void sub_1B15D6A04()
{
  OUTLINED_FUNCTION_25_37();
}

uint64_t sub_1B15D6A48()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  OUTLINED_FUNCTION_50_18();
  OUTLINED_FUNCTION_77_9();
  return v0(v1);
}

void sub_1B15D6A90()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_67();
}

void sub_1B15D6AAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  *(_QWORD *)(v2 - 160) = v1;
  OUTLINED_FUNCTION_12_51();
}

void sub_1B15D6AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  unint64_t v9;
  uint64_t v10;

  v4 = OUTLINED_FUNCTION_131_1();
  *(_QWORD *)(v3 - 152) = v2;
  *(_QWORD *)(v3 - 144) = v0;
  switch(v4)
  {
    case 0:
      if (!*(_QWORD *)(v0 + 40))
        goto LABEL_15;
      v5 = v0 + 16;
      break;
    case 1:
    case 3:
      OUTLINED_FUNCTION_19_44();
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_19_44();
      if (!*(_QWORD *)(v0 + 88))
        goto LABEL_15;
      v5 = v0 + 64;
      break;
    case 4:
      v5 = v0;
      break;
    case 5:
      *(_QWORD *)(v3 - 176) = v1;
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    case 6:
      *(_QWORD *)(v3 - 176) = v1;
      OUTLINED_FUNCTION_91();
      if (*(_QWORD *)(v0 + 40))
        OUTLINED_FUNCTION_98_0();
      OUTLINED_FUNCTION_0_146();
    default:
      goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(v5);
LABEL_15:
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_57_18();
  switch(OUTLINED_FUNCTION_39_21())
  {
    case 0u:
      v6 = OUTLINED_FUNCTION_3_12();
      if (OUTLINED_FUNCTION_13_49(v6))
        goto LABEL_21;
      v7 = OUTLINED_FUNCTION_20_41();
LABEL_20:
      v8(v7);
LABEL_21:
      v9 = (v1 + 7) & 0xFFFFFFFFFFFFFFF8;
      v10 = v0 + *(int *)(v2 + 64);
      OUTLINED_FUNCTION_43_19();
      if (*(_QWORD *)(v10 + 40))
        OUTLINED_FUNCTION_102();
      *(_QWORD *)(v3 - 184) = v9 + 39;
      *(_QWORD *)(v3 - 176) = v9;
      OUTLINED_FUNCTION_0_146();
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v7 = OUTLINED_FUNCTION_21_33();
      goto LABEL_20;
    case 2u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_56_16();
      goto LABEL_21;
    default:
      goto LABEL_21;
  }
}

void sub_1B15D6DEC()
{
  OUTLINED_FUNCTION_1_125();
}

void sub_1B15D6DFC()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D6E0C()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D6E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_11_48();
  v1 = OUTLINED_FUNCTION_14_47(v0);
  OUTLINED_FUNCTION_16_40(v1, v2, v3, v4);
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D6E40()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D6E50()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D6E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v9 - 136) = v7;
  *(_QWORD *)(v9 - 128) = v4;
  *(_QWORD *)(v9 - 120) = v5;
  *(_QWORD *)(v9 - 112) = v8;
  *(_QWORD *)(v9 - 104) = v1;
  *(_QWORD *)(v9 - 96) = v2;
  v10 = OUTLINED_FUNCTION_3_70(a1);
  OUTLINED_FUNCTION_44_18(v10);
  OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_18();
  if (*(_QWORD *)(v3 + 40))
    OUTLINED_FUNCTION_102();
  v11 = *(_QWORD *)(v9 - 184) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_22_32();
  OUTLINED_FUNCTION_67_3(v3 + *(int *)(v6 + 60));
  OUTLINED_FUNCTION_16_47();
  v12 = *(_QWORD *)(v9 - 160);
  v13 = v12 + *(_QWORD *)(v9 - 176);
  if (*(_QWORD *)(v13 + 24))
    __swift_destroy_boxed_opaque_existential_1(v13);
  if (*(_QWORD *)(v12 + v11))
    OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_47();
}

void sub_1B15D6EFC()
{
  OUTLINED_FUNCTION_25_37();
}

uint64_t sub_1B15D6F38()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void (*)(), _QWORD *);
  uint64_t v7;

  OUTLINED_FUNCTION_50_18();
  OUTLINED_FUNCTION_77_9();
  return sub_1B15D4CF4(v0, v3, v4, v5, v6, v7, *(uint64_t (**)(void *))(v1 + v2), *(_QWORD *)(v1 + v2 + 8));
}

void objectdestroy_20Tm()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_67();
}

void sub_1B15D6FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_52_22(a1);
  *(_QWORD *)(v2 - 160) = v1;
  OUTLINED_FUNCTION_12_51();
}

void sub_1B15D6FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  v5 = OUTLINED_FUNCTION_75_11();
  *(_QWORD *)(v4 - 152) = v3;
  *(_QWORD *)(v4 - 144) = v2;
  switch(v5)
  {
    case 0:
      if (!*(_QWORD *)(v3 + 40))
        goto LABEL_15;
      v6 = v3 + 16;
      break;
    case 1:
    case 3:
      OUTLINED_FUNCTION_34_23();
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_34_23();
      if (!*(_QWORD *)(v3 + 88))
        goto LABEL_15;
      v6 = v3 + 64;
      break;
    case 4:
      v6 = v3;
      break;
    case 5:
      OUTLINED_FUNCTION_55_16();
      if (*(_QWORD *)(v3 + 40))
        OUTLINED_FUNCTION_65_12();
      OUTLINED_FUNCTION_0_146();
    case 6:
      OUTLINED_FUNCTION_55_16();
      if (*(_QWORD *)(v3 + 40))
        OUTLINED_FUNCTION_65_12();
      OUTLINED_FUNCTION_0_146();
    default:
      goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(v6);
LABEL_15:
  v7 = v1 + v0;
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_58();
  switch(OUTLINED_FUNCTION_39_21())
  {
    case 0u:
      v8 = OUTLINED_FUNCTION_3_12();
      if (OUTLINED_FUNCTION_13_49(v8))
        goto LABEL_21;
      v9 = OUTLINED_FUNCTION_20_41();
LABEL_20:
      v10(v9);
LABEL_21:
      v11 = v7 + 7;
      v12 = v3 + *(int *)(v2 + 64);
      OUTLINED_FUNCTION_43_19();
      if (*(_QWORD *)(v12 + 40))
        OUTLINED_FUNCTION_102();
      *(_QWORD *)(v4 - 176) = v11 & 0xFFFFFFFFFFFFFFF8;
      OUTLINED_FUNCTION_0_146();
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v9 = OUTLINED_FUNCTION_21_33();
      goto LABEL_20;
    case 2u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_56_16();
      goto LABEL_21;
    default:
      goto LABEL_21;
  }
}

void sub_1B15D72C4()
{
  OUTLINED_FUNCTION_1_125();
}

void sub_1B15D72D4()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D72E4()
{
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D72F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_11_48();
  v1 = OUTLINED_FUNCTION_61_16(v0);
  OUTLINED_FUNCTION_16_40(v1, v2, v3, v4);
  OUTLINED_FUNCTION_83_1();
}

void sub_1B15D7318()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D7328()
{
  OUTLINED_FUNCTION_140();
}

void sub_1B15D7338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 - 136) = v6;
  *(_QWORD *)(v8 - 128) = v3;
  *(_QWORD *)(v8 - 120) = v4;
  *(_QWORD *)(v8 - 112) = v7;
  *(_QWORD *)(v8 - 104) = v1;
  *(_QWORD *)(v8 - 96) = v2;
  v9 = OUTLINED_FUNCTION_3_70(a1);
  OUTLINED_FUNCTION_44_18(v9);
  OUTLINED_FUNCTION_16_47();
  v10 = *(_QWORD *)(v8 - 152) + *(int *)(*(_QWORD *)(v8 - 144) + 68);
  OUTLINED_FUNCTION_91();
  if (*(_QWORD *)(v10 + 40))
    OUTLINED_FUNCTION_98_0();
  OUTLINED_FUNCTION_68_12();
  OUTLINED_FUNCTION_67_3(v10 + *(int *)(v5 + 60));
  OUTLINED_FUNCTION_0_27();
  v11 = *(_QWORD *)(v8 - 160) + *(_QWORD *)(v8 - 176);
  if (*(_QWORD *)(v11 + 24))
    __swift_destroy_boxed_opaque_existential_1(v11);
  swift_deallocObject();
  OUTLINED_FUNCTION_47();
}

void sub_1B15D73BC()
{
  OUTLINED_FUNCTION_25_37();
}

void sub_1B15D73F4()
{
  OUTLINED_FUNCTION_30_31();
  sub_1B15D4EC0();
}

uint64_t sub_1B15D743C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_82();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15D746C(void *a1)
{
  uint64_t v1;

  return sub_1B15D5398(a1, *(void (**)(void (*)(), _QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(void *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroy_58Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_82();

  return swift_deallocObject();
}

uint64_t ButtonToolbarItemConfiguration.isEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ButtonToolbarItemConfiguration.isEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*ButtonToolbarItemConfiguration.isEnabled.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  return nullsub_1;
}

uint64_t ButtonToolbarItemConfiguration.init(closure:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t ButtonToolbarItemConfiguration.init(isEnabled:closure:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = a2;
  *(_QWORD *)(a4 + 8) = a3;
  *(_BYTE *)(a4 + 16) = result;
  return result;
}

Swift::Void __swiftcall ButtonToolbarItemConfiguration.performAction()()
{
  void (**v0)(void);

  (*v0)();
}

uint64_t ButtonToolbarItem.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t ButtonToolbarItem.init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t ButtonToolbarItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ButtonToolbarItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15D7598(uint64_t a1)
{
  uint64_t result;

  result = sub_1B15D7620(&qword_1EEF34CF0, (uint64_t)&protocol conformance descriptor for ButtonToolbarItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ButtonToolbarItem()
{
  return objc_opt_self();
}

uint64_t sub_1B15D75EC(uint64_t a1)
{
  uint64_t result;

  result = sub_1B15D7620(&qword_1EEF34D10, (uint64_t)&protocol conformance descriptor for ButtonToolbarItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B15D7620(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ButtonToolbarItem();
    result = MEMORY[0x1B5E1F0E8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of ButtonToolbarItemConfigurationType.performAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ButtonToolbarItemConfigurationType.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for ButtonToolbarItemConfiguration()
{
  return &type metadata for ButtonToolbarItemConfiguration;
}

uint64_t BlueprintBookmarkManager.__allocating_init(blueprintViewProvider:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  BlueprintBookmarkManager.init(blueprintViewProvider:)(a1);
  return v2;
}

uint64_t sub_1B15D76B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B15CE428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t BlueprintBookmarkManager.deinit()
{
  uint64_t v0;
  _QWORD v2[16];

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1B15D76B8(v0 + 32, (uint64_t)v2);
  sub_1B15D7898(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B140AE84);
  return v0;
}

uint64_t BlueprintBookmarkManager.__deallocating_deinit()
{
  BlueprintBookmarkManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15D7764(uint64_t a1)
{
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

_QWORD *BlueprintBookmarkManager.preparedContext()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[16];
  _BYTE v23[128];

  sub_1B15D76B8(v1 + 32, (uint64_t)v22);
  sub_1B15D76B8((uint64_t)v22, (uint64_t)v23);
  v3 = sub_1B1507B58((uint64_t)v23);
  if ((_DWORD)v3 == 1)
  {
    v11 = (void *)OUTLINED_FUNCTION_11_49();
    objc_msgSend(v11, sel_bounds);
    v13 = v12;
    v15 = v14;

    v16 = (void *)OUTLINED_FUNCTION_11_49();
    objc_msgSend(v16, sel_bounds);
    v18 = v17;
    v20 = v19;

    BlueprintBookmarkManager.prepareTransition(fromSize:toSize:)(a1, v13, v15, v18, v20);
  }
  else
  {
    OUTLINED_FUNCTION_5_85(v3, v4, v5, v6, v7, v8, v9, v10, v22[0]);
  }
  return sub_1B15D7898(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B140BD9C);
}

_QWORD *sub_1B15D7898(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

void sub_1B15D78F4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v1 = (id)sub_1B16B983C();
  objc_msgSend(v0, sel_postNotificationName_object_, v1, 0);

}

_QWORD *sub_1B15D7978@<X0>(uint64_t a1@<X8>)
{
  return BlueprintBookmarkManager.preparedContext()(a1);
}

uint64_t sub_1B15D7998(_QWORD *a1)
{
  return BlueprintBookmarkManager.register(bookmarkApplicator:)(a1);
}

uint64_t sub_1B15D79B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t dispatch thunk of BlueprintBookmarkManagerType.prepareTransition(fromSize:toSize:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintBookmarkManagerType.preparedContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintBookmarkManagerType.prepare(bookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BlueprintBookmarkManagerType.apply(bookmark:preparedContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of BlueprintBookmarkManagerType.register(bookmarkApplicator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t method lookup function for BlueprintBookmarkManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintBookmarkManager.__allocating_init(blueprintViewProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void BlueprintLayoutCollectionLayoutAttributes.pinTrait.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_pinTrait;
  OUTLINED_FUNCTION_30();
  v4 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_BYTE *)(a1 + 8) = v4;
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.pinTrait.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_pinTrait;
  OUTLINED_FUNCTION_13();
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  OUTLINED_FUNCTION_90();
}

void BlueprintLayoutCollectionLayoutAttributes.pinTrait.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutCollectionLayoutAttributes.rubberbandTrait.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandTrait);
  OUTLINED_FUNCTION_30();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.rubberbandTrait.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandTrait);
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  OUTLINED_FUNCTION_90();
}

void BlueprintLayoutCollectionLayoutAttributes.rubberbandTrait.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutCollectionLayoutAttributes.rubberbandEdge.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandEdge);
  OUTLINED_FUNCTION_30();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.rubberbandEdge.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandEdge);
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  OUTLINED_FUNCTION_90();
}

void BlueprintLayoutCollectionLayoutAttributes.rubberbandEdge.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutCollectionLayoutAttributes.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23_35(v0, v1, &qword_1ED182BF8, (void (*)(uint64_t))sub_1B1406A1C);
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.model.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_27_34(v0, v1, &qword_1ED182BF8, (void (*)(uint64_t))sub_1B1406A1C);
  swift_endAccess();
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.model.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutCollectionLayoutAttributes.source.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_27_34(v0, v1, (unint64_t *)&qword_1ED181FE8, (void (*)(uint64_t))type metadata accessor for CollectionViewSupplementaryKind.Source);
  swift_endAccess();
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.source.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutCollectionLayoutAttributes.isPlugin.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.isPlugin.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isPlugin);
  OUTLINED_FUNCTION_13();
  *v3 = a1;
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.isPlugin.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutCollectionLayoutAttributes.layoutData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_layoutData;
  OUTLINED_FUNCTION_30();
  sub_1B1405FC4(v3, a1);
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.isEditing.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutCollectionLayoutAttributes.isSelected.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_48();
}

BOOL static BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

id BlueprintLayoutCollectionLayoutAttributes.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BlueprintLayoutCollectionLayoutAttributes.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B15D7FF8()
{
  unint64_t result;

  result = qword_1EEF34DD8;
  if (!qword_1EEF34DD8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge, &type metadata for BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge);
    atomic_store(result, (unint64_t *)&qword_1EEF34DD8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B15D8080 + 4 * byte_1B16D6B89[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B15D80B4 + 4 * byte_1B16D6B84[v4]))();
}

uint64_t sub_1B15D80B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15D80BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15D80C4);
  return result;
}

uint64_t sub_1B15D80D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15D80D8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B15D80DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15D80E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge()
{
  return &type metadata for BlueprintLayoutCollectionLayoutAttributes.RubberbandEdge;
}

double SplitViewModel.xAnchor.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double SplitViewModel.degrees.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

id SplitViewModel.leftSide.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_0_148(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1);
}

id SplitViewModel.rightSide.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_0_148(*(void **)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152), a1);
}

__n128 SplitViewModel.init(xAnchor:degrees:leftSide:rightSide:)@<Q0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, float64x2_t a4@<Q0>, float64_t a5@<D1>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;

  v5 = *((_QWORD *)a1 + 8);
  v6 = *((_BYTE *)a1 + 72);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_BYTE *)(a2 + 72);
  a4.f64[1] = a5;
  v9 = *a1;
  v10 = a1[1];
  *(int8x16_t *)a3 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f64(a4, (float64x2_t)xmmword_1B16D6D10), (int8x16_t)xmmword_1B16D6D10, (int8x16_t)a4), (int8x16_t)vcltzq_f64(a4));
  *(_OWORD *)(a3 + 16) = v9;
  v11 = a1[2];
  v12 = a1[3];
  *(_OWORD *)(a3 + 32) = v10;
  *(_OWORD *)(a3 + 48) = v11;
  *(_OWORD *)(a3 + 64) = v12;
  *(_QWORD *)(a3 + 80) = v5;
  *(_BYTE *)(a3 + 88) = v6;
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 96) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 112) = v13;
  result = *(__n128 *)(a2 + 32);
  v15 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(a3 + 128) = result;
  *(_OWORD *)(a3 + 144) = v15;
  *(_QWORD *)(a3 + 160) = v7;
  *(_BYTE *)(a3 + 168) = v8;
  return result;
}

void destroy for ShineColor(uint64_t a1)
{
  sub_1B13C9B68(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
}

uint64_t initializeWithCopy for ShineColor(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  sub_1B13C9BA0(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_BYTE *)(a2 + 72));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithCopy for ShineColor(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v23;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  sub_1B13C9BA0(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_BYTE *)(a2 + 72));
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v23;
  sub_1B13C9B68(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for ShineColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_BYTE *)(a2 + 72);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_BYTE *)(a1 + 72);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 72) = v4;
  sub_1B13C9B68(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShineColor(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for ShineColor(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 72) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 48) = 2 * -a2;
      *(_BYTE *)(a1 + 72) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1B15D84BC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 72) >> 7;
}

uint64_t sub_1B15D84C8(uint64_t result)
{
  *(_BYTE *)(result + 72) &= ~0x80u;
  return result;
}

ValueMetadata *type metadata accessor for SplitViewSide()
{
  return &type metadata for SplitViewSide;
}

void destroy for SplitViewModel(uint64_t a1)
{
  sub_1B13C9B68(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  sub_1B13C9B68(*(void **)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
}

uint64_t initializeWithCopy for SplitViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v2 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v21 = *(_QWORD *)(a2 + 80);
  v22 = *(_BYTE *)(a2 + 88);
  sub_1B13C9BA0(v4, v5, v6, v7, v8, v9, v10, v11, v21, v22);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v21;
  *(_BYTE *)(a1 + 88) = v22;
  v12 = *(void **)(v2 + 96);
  v13 = *(_QWORD *)(v2 + 104);
  v14 = *(_QWORD *)(v2 + 112);
  v15 = *(_QWORD *)(v2 + 120);
  v16 = *(_QWORD *)(v2 + 128);
  v17 = *(_QWORD *)(v2 + 136);
  v18 = *(_QWORD *)(v2 + 144);
  v19 = *(_QWORD *)(v2 + 152);
  v23 = *(_QWORD *)(v2 + 160);
  LOBYTE(v2) = *(_BYTE *)(v2 + 168);
  sub_1B13C9BA0(v12, v13, v14, v15, v16, v17, v18, v19, v23, v2);
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  *(_QWORD *)(a1 + 120) = v15;
  *(_QWORD *)(a1 + 128) = v16;
  *(_QWORD *)(a1 + 136) = v17;
  *(_QWORD *)(a1 + 144) = v18;
  *(_QWORD *)(a1 + 152) = v19;
  *(_QWORD *)(a1 + 160) = v23;
  *(_BYTE *)(a1 + 168) = v2;
  return a1;
}

uint64_t assignWithCopy for SplitViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v41 = *(_QWORD *)(a2 + 80);
  v42 = *(_BYTE *)(a2 + 88);
  sub_1B13C9BA0(v4, v5, v6, v7, v8, v9, v10, v11, v41, v42);
  v12 = *(void **)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v41;
  *(_BYTE *)(a1 + 88) = v42;
  sub_1B13C9B68(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = *(void **)(v2 + 96);
  v23 = *(_QWORD *)(v2 + 104);
  v24 = *(_QWORD *)(v2 + 112);
  v25 = *(_QWORD *)(v2 + 120);
  v26 = *(_QWORD *)(v2 + 128);
  v27 = *(_QWORD *)(v2 + 136);
  v28 = *(_QWORD *)(v2 + 144);
  v29 = *(_QWORD *)(v2 + 152);
  v43 = *(_QWORD *)(v2 + 160);
  LOBYTE(v2) = *(_BYTE *)(v2 + 168);
  sub_1B13C9BA0(v22, v23, v24, v25, v26, v27, v28, v29, v43, v2);
  v30 = *(void **)(a1 + 96);
  v31 = *(_QWORD *)(a1 + 104);
  v32 = *(_QWORD *)(a1 + 112);
  v33 = *(_QWORD *)(a1 + 120);
  v34 = *(_QWORD *)(a1 + 128);
  v35 = *(_QWORD *)(a1 + 136);
  v36 = *(_QWORD *)(a1 + 144);
  v37 = *(_QWORD *)(a1 + 152);
  v38 = *(_QWORD *)(a1 + 160);
  v39 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 104) = v23;
  *(_QWORD *)(a1 + 112) = v24;
  *(_QWORD *)(a1 + 120) = v25;
  *(_QWORD *)(a1 + 128) = v26;
  *(_QWORD *)(a1 + 136) = v27;
  *(_QWORD *)(a1 + 144) = v28;
  *(_QWORD *)(a1 + 152) = v29;
  *(_QWORD *)(a1 + 160) = v43;
  *(_BYTE *)(a1 + 168) = v2;
  sub_1B13C9B68(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  return a1;
}

void *__swift_memcpy169_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA9uLL);
}

uint64_t assignWithTake for SplitViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;

  v4 = *(_QWORD *)(a2 + 80);
  v5 = *(_BYTE *)(a2 + 88);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_BYTE *)(a1 + 88);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v4;
  *(_BYTE *)(a1 + 88) = v5;
  sub_1B13C9B68(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  v18 = *(_QWORD *)(a2 + 160);
  v19 = *(_BYTE *)(a2 + 168);
  v20 = *(void **)(a1 + 96);
  v21 = *(_QWORD *)(a1 + 104);
  v22 = *(_QWORD *)(a1 + 112);
  v23 = *(_QWORD *)(a1 + 120);
  v24 = *(_QWORD *)(a1 + 128);
  v25 = *(_QWORD *)(a1 + 136);
  v26 = *(_QWORD *)(a1 + 144);
  v27 = *(_QWORD *)(a1 + 152);
  v28 = *(_QWORD *)(a1 + 160);
  v29 = *(_BYTE *)(a1 + 168);
  v30 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v30;
  v31 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v31;
  *(_QWORD *)(a1 + 160) = v18;
  *(_BYTE *)(a1 + 168) = v19;
  sub_1B13C9B68(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitViewModel(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 169))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 64) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for SplitViewModel(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 168) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 169) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 72) = 0;
      *(_QWORD *)(a1 + 80) = 0;
      *(_QWORD *)(a1 + 64) = 2 * -a2;
      *(_BYTE *)(a1 + 88) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 169) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t OverlayAlertManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  return v0;
}

uint64_t OverlayAlertManager.__deallocating_deinit()
{
  OverlayAlertManager.deinit();
  return swift_deallocClassInstance();
}

void OverlayAlertManager.present(_:window:)(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __int128 v18[3];
  _BYTE v19[176];
  _BYTE v20[32];
  uint64_t v21;

  v3 = v2;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v20 = *(_OWORD *)a1;
  *(_OWORD *)&v20[16] = v4;
  v21 = *(_QWORD *)(a1 + 32);
  v5 = (void *)v2[18];
  if (v5)
  {
    v2[18] = 0;
    MEMORY[0x1E0C80A78](a1, a2);
    sub_1B145D3B0();
    swift_allocObject();
    sub_1B16B8A2C();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    v7 = *(_OWORD *)&v20[16];
    *(_OWORD *)(v6 + 24) = *(_OWORD *)v20;
    *(_OWORD *)(v6 + 40) = v7;
    *(_QWORD *)(v6 + 56) = v21;
    swift_retain();
    sub_1B14FAB64((void **)v20);
    v8 = (void *)sub_1B16B8918();
    sub_1B16B8984();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OverlayAlertView()), sel_init);
    objc_msgSend(v10, sel_setAutoresizingMask_, 45);
    objc_msgSend(a2, sel_bounds);
    v12 = v11;
    v14 = v13;
    __swift_project_boxed_opaque_existential_1(v2 + 7, v2[10]);
    OUTLINED_FUNCTION_1_127();
    sub_1B14AAB08(v18, (uint64_t)v19, v12, v14);
    __swift_project_boxed_opaque_existential_1(v2 + 2, v2[5]);
    OUTLINED_FUNCTION_1_127();
    sub_1B16873F0((uint64_t *)v18, (char *)v10, (uint64_t)v19);
    sub_1B15D8CB0(v10, a2);
    if (v21)
    {
      v18[0] = *(_OWORD *)&v20[8];
      sub_1B16B9740();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      sub_1B16B9740();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      v15 = *((_QWORD *)&v18[0] + 1);
      v16 = *(_QWORD *)&v18[0];
    }
    else
    {
      v16 = *(_QWORD *)&v20[8];
      v15 = *(_QWORD *)&v20[16];
      sub_1B16B9740();
    }
    v17 = (void *)objc_opt_self();
    sub_1B15D9690(v16, v15, 3, v17);
    sub_1B15D96DC((uint64_t)v19);
    swift_bridgeObjectRelease();
    v8 = (void *)v3[18];
    v3[18] = v10;
  }

}

void OverlayAlertManager.present(_:)(__int128 *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  v2 = *(void **)(v1 + 136);
  if (v2)
  {
    v3 = *((_QWORD *)a1 + 2);
    v5 = *a1;
    v6 = v3;
    v7 = *(__int128 *)((char *)a1 + 24);
    v4 = v2;
    OverlayAlertManager.present(_:window:)((uint64_t)&v5, v4);

  }
}

void sub_1B15D8CB0(void *a1, id a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  CGFloat v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  CGAffineTransform v12;

  objc_msgSend(a2, sel_addSubview_, a1);
  CGAffineTransformMakeScale(&v12, 0.9, 0.9);
  objc_msgSend(a1, sel_setTransform_, &v12);
  objc_msgSend(a1, sel_setAlpha_, 0.0);
  v4 = (void *)objc_opt_self();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)&v12.tx = sub_1B15D974C;
  *(_QWORD *)&v12.ty = v5;
  v6 = MEMORY[0x1E0C809B0];
  *(_QWORD *)&v12.a = MEMORY[0x1E0C809B0];
  *(_QWORD *)&v12.b = 1107296256;
  *(_QWORD *)&v12.c = sub_1B13F00E4;
  *(_QWORD *)&v12.d = &block_descriptor_58;
  v7 = _Block_copy(&v12);
  v8 = a1;
  swift_release();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v2;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)&v12.tx = sub_1B15D9758;
  *(_QWORD *)&v12.ty = v9;
  v12.a = v6;
  *(_QWORD *)&v12.b = 1107296256;
  *(_QWORD *)&v12.c = sub_1B13F8544;
  *(_QWORD *)&v12.d = &block_descriptor_9_3;
  v10 = _Block_copy(&v12);
  v11 = v8;
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v7, v10, 0.2, 0.0);
  _Block_release(v10);
  _Block_release(v7);
}

void sub_1B15D8E6C(__int128 *a1)
{
  OverlayAlertManager.present(_:)(a1);
}

void sub_1B15D8E8C(uint64_t a1, void *a2)
{
  OverlayAlertManager.present(_:window:)(a1, a2);
}

Swift::Void __swiftcall OverlayAlertManager.register(on:)(UIWindow *on)
{
  uint64_t v1;
  void *v2;
  UIWindow *v3;

  v2 = *(void **)(v1 + 136);
  *(_QWORD *)(v1 + 136) = on;

  v3 = on;
}

void sub_1B15D8ED8(UIWindow *a1)
{
  OverlayAlertManager.register(on:)(a1);
}

id sub_1B15D8EF8(void *a1)
{
  _QWORD v3[6];

  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  objc_msgSend(a1, sel_setTransform_, v3);
  return objc_msgSend(a1, sel_setAlpha_, 1.0);
}

uint64_t sub_1B15D8F50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v28 = a3;
  v3 = sub_1B16B95D8();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B16B9620();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B16B9644();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)&v28 - v18;
  sub_1B1404978();
  v20 = (void *)sub_1B16BA0DC();
  sub_1B16B9638();
  MEMORY[0x1B5E1CFF4](v16, 1.5);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v16, v11);
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  v24 = v28;
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v24;
  aBlock[4] = sub_1B15D9788;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = &block_descriptor_18_4;
  v25 = _Block_copy(aBlock);
  v26 = v24;
  swift_release();
  sub_1B16B95F0();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1B13AD67C((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B141793C();
  sub_1B13AD67C((unint64_t *)&qword_1ED183710, (uint64_t (*)(uint64_t))sub_1B141793C, MEMORY[0x1E0DEAF38]);
  sub_1B16BA448();
  MEMORY[0x1B5E1DA50](v19, v10, v6, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v11);
}

void sub_1B15D9200(uint64_t a1, void *a2)
{
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    MEMORY[0x1E0C80A78](Strong, v5);
    sub_1B145D3B0();
    swift_allocObject();
    sub_1B16B8A2C();
    swift_release();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = a2;
    swift_retain();
    v7 = a2;
    v8 = (void *)sub_1B16B8918();
    sub_1B16B8984();
    swift_release();
    swift_release();
    swift_release();

  }
}

void sub_1B15D9324(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t Strong;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;
  void *v11;

  swift_getObjectType();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = *(void **)(Strong + 144);
    v6 = v5;
    swift_release();
    if (v5)
    {
      v7 = v6;
      v8 = a3;
      v9 = sub_1B16BA214();

      if ((v9 & 1) != 0)
      {
        swift_beginAccess();
        v10 = swift_weakLoadStrong();
        if (v10)
        {
          v11 = *(void **)(v10 + 144);
          *(_QWORD *)(v10 + 144) = 0;
          swift_release();

        }
      }
    }
  }
}

void sub_1B15D9418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  _QWORD *v22;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (void *)objc_opt_self();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a5;
  v21 = sub_1B15D97D0;
  v22 = (_QWORD *)v10;
  v11 = MEMORY[0x1E0C809B0];
  v17 = MEMORY[0x1E0C809B0];
  v18 = 1107296256;
  v19 = sub_1B13F00E4;
  v20 = &block_descriptor_31_0;
  v12 = _Block_copy(&v17);
  swift_retain();
  v13 = a5;
  swift_release();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = sub_1B140AA30;
  v14[4] = v8;
  v21 = sub_1B14D67CC;
  v22 = v14;
  v17 = v11;
  v18 = 1107296256;
  v19 = sub_1B13F8544;
  v20 = &block_descriptor_37_1;
  v15 = _Block_copy(&v17);
  v16 = v13;
  swift_release();
  objc_msgSend(v9, sel_animateWithDuration_delay_options_animations_completion_, 131076, v12, v15, 0.2, 0.0);
  _Block_release(v15);
  _Block_release(v12);
}

void sub_1B15D95AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1B15D9418(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1B15D95B4()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15D95F0()
{
  uint64_t v0;

  return OverlayAlertManager.present(_:)(v0 + 24);
}

id sub_1B15D9620(void *a1)
{
  CGAffineTransform v3;

  CGAffineTransformMakeScale(&v3, 0.9, 0.9);
  objc_msgSend(a1, sel_setTransform_, &v3);
  return objc_msgSend(a1, sel_setAlpha_, 0.0);
}

void sub_1B15D9690(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;

  v6 = (id)sub_1B16B983C();
  objc_msgSend(a4, sel_speak_style_, v6, a3);

}

uint64_t sub_1B15D96DC(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 128);

  return a1;
}

uint64_t dispatch thunk of OverlayAlertPresenterType.present(_:window:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for OverlayAlertManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1B15D9728()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B15D974C()
{
  uint64_t v0;

  return sub_1B15D8EF8(*(void **)(v0 + 16));
}

uint64_t sub_1B15D9758(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15D8F50(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1B15D9760()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1B15D9788()
{
  uint64_t v0;

  sub_1B15D9200(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1B15D9794(uint64_t a1)
{
  uint64_t v1;

  sub_1B15D9324(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1B15D97AC()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1B15D97D0()
{
  uint64_t v0;

  return sub_1B15D9620(*(void **)(v0 + 16));
}

uint64_t sub_1B15D97D8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

BOOL static VerticalAlignment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VerticalAlignment.hash(into:)()
{
  return sub_1B16BAA54();
}

unint64_t sub_1B15D9878()
{
  unint64_t result;

  result = qword_1EEF34DE0;
  if (!qword_1EEF34DE0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for VerticalAlignment, &type metadata for VerticalAlignment);
    atomic_store(result, (unint64_t *)&qword_1EEF34DE0);
  }
  return result;
}

unint64_t sub_1B15D98B8()
{
  unint64_t result;

  result = qword_1EEF34DE8;
  if (!qword_1EEF34DE8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for HorizontalAlignment, &type metadata for HorizontalAlignment);
    atomic_store(result, (unint64_t *)&qword_1EEF34DE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalAlignment()
{
  return &type metadata for VerticalAlignment;
}

uint64_t _s5TeaUI17VerticalAlignmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15D9954 + 4 * byte_1B16D6E25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B15D9988 + 4 * byte_1B16D6E20[v4]))();
}

uint64_t sub_1B15D9988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15D9990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15D9998);
  return result;
}

uint64_t sub_1B15D99A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15D99ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B15D99B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15D99B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalAlignment()
{
  return &type metadata for HorizontalAlignment;
}

uint64_t dispatch thunk of MenuGroupOptionProviderType.menuGroupOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1B15D99E4(char a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_24_32(a1, *(uint64_t (**)(uint64_t, _QWORD))(a2 + 16), a2);
}

BOOL sub_1B15D99F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_BOOL8 *__return_ptr, uint64_t);
  uint64_t v7;
  _BOOL8 v9;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_coordinatingCancelBlocks);
  OUTLINED_FUNCTION_30();
  v2 = *v1;
  sub_1B16B9740();
  v3 = sub_1B163D0DC();
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    sub_1B16B9740();
    v5 = v2 + 40;
    do
    {
      if (v3)
      {
        v3 = 1;
      }
      else
      {
        v6 = *(void (**)(_BOOL8 *__return_ptr, uint64_t))(v5 - 8);
        v7 = swift_retain();
        v6(&v9, v7);
        swift_release();
        v3 = v9;
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1B15D9AC0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionManager)
           + OBJC_IVAR____TtC5TeaUI18SwipeActionManager_isSwipeActionEnabled) = a1;
  sub_1B163DCB4();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15D9AF4()
{
  return sub_1B15D9B00(&OBJC_IVAR____TtC5TeaUI18SwipeActionManager_dataSource);
}

uint64_t sub_1B15D9B00(_QWORD *a1)
{
  uint64_t v1;

  return MEMORY[0x1B5E1F2F8](*(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionManager) + *a1);
}

uint64_t sub_1B15D9B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = sub_1B16B9644();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = *(id *)(v0 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_updateGroup);
  sub_1B16B9638();
  sub_1B16BA088();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
  return sub_1B16B95CC() & 1;
}

void SwipeActionCollectionView.allowsSelection.setter(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v3, sel_setAllowsSelection_, a1 & 1);
  sub_1B15D9C64();
  OUTLINED_FUNCTION_62_0();
}

void sub_1B15D9C64()
{
  void *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  if (objc_msgSendSuper2(&v2, sel_allowsSelection))
  {
    if (qword_1ED17B720 != -1)
      swift_once();
  }
  else if (qword_1ED17B720 != -1)
  {
    swift_once();
  }
  v1 = (id)qword_1ED190380;
  sub_1B16BA058();
  sub_1B16B8B58();

}

void SwipeActionCollectionView.allowsSelection.modify(objc_super **a1)
{
  void *v1;
  objc_super *v3;
  uint64_t v4;

  v3 = (objc_super *)malloc(0x48uLL);
  *a1 = v3;
  v3[3].receiver = v1;
  v4 = OUTLINED_FUNCTION_4();
  v3[3].super_class = (Class)v4;
  v3->receiver = v1;
  v3->super_class = (Class)v4;
  LOBYTE(v3[4].receiver) = -[objc_super allowsSelection](v3, sel_allowsSelection);
  OUTLINED_FUNCTION_31();
}

void sub_1B15D9DC0(objc_super **a1, char a2)
{
  objc_super *v2;
  uint64_t receiver_low;
  objc_class *super_class;
  id receiver;
  objc_super *v6;

  v2 = *a1;
  receiver_low = LOBYTE((*a1)[4].receiver);
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v6[1].receiver = receiver;
    v6[1].super_class = super_class;
    objc_msgSendSuper2(v6 + 1, sel_setAllowsSelection_, receiver_low);
  }
  else
  {
    v6[2].receiver = receiver;
    v6[2].super_class = super_class;
    objc_msgSendSuper2(v6 + 2, sel_setAllowsSelection_, receiver_low);
    sub_1B15D9C64();
  }
  OUTLINED_FUNCTION_19(v2);
}

void SwipeActionCollectionView.contentOffset.modify(objc_super **a1)
{
  void *v1;
  objc_super *v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;

  v3 = (objc_super *)malloc(0x50uLL);
  *a1 = v3;
  v3[4].receiver = v1;
  v4 = OUTLINED_FUNCTION_4();
  v3[4].super_class = (Class)v4;
  v3[1].receiver = v1;
  v3[1].super_class = (Class)v4;
  objc_msgSendSuper2(v3 + 1, sel_contentOffset);
  v3->receiver = v5;
  v3->super_class = v6;
  OUTLINED_FUNCTION_31();
}

void sub_1B15D9E78(double **a1, char a2)
{
  double *v2;
  double v3;
  double v4;
  objc_class *v5;
  void *v6;
  objc_super *v7;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v6 = (void *)*((_QWORD *)*a1 + 8);
  v5 = (objc_class *)*((_QWORD *)*a1 + 9);
  v7 = (objc_super *)*a1;
  if ((a2 & 1) != 0)
  {
    v7[2].receiver = v6;
    v7[2].super_class = v5;
    objc_msgSendSuper2(v7 + 2, sel_setContentOffset_, v3, v4);
  }
  else
  {
    v7[3].receiver = v6;
    v7[3].super_class = v5;
    objc_msgSendSuper2(v7 + 3, sel_setContentOffset_, v3, v4);
    sub_1B13C27B8();
  }
  OUTLINED_FUNCTION_19(v2);
}

char *SwipeActionCollectionView.__allocating_init(frame:collectionViewLayout:sceneStateManager:)(void *a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v7;

  OUTLINED_FUNCTION_21_34();
  v4 = OUTLINED_FUNCTION_54();
  return SwipeActionCollectionView.init(frame:collectionViewLayout:sceneStateManager:)(a1, a2, v4, v5, v6, v7);
}

char *SwipeActionCollectionView.init(frame:collectionViewLayout:sceneStateManager:)(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  objc_class *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  objc_super v31;
  _BYTE v32[40];

  v13 = (objc_class *)OUTLINED_FUNCTION_4();
  v14 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_dependencyCleanupBlocks] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_coordinatingResetBlocks] = v14;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_coordinatingCancelBlocks] = v14;
  v15 = OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_updateGroup;
  v16 = v6;
  *(_QWORD *)&v6[v15] = dispatch_group_create();
  v17 = (uint64_t)&v16[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionRestoreState];
  v18 = OUTLINED_FUNCTION_15_40();
  OUTLINED_FUNCTION_83(v17, v19, v20, v18);
  v16[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_isBottomRubberBanding] = 0;
  sub_1B13B4DC0(a2, (uint64_t)v32);
  v21 = objc_allocWithZone((Class)type metadata accessor for SwipeActionManager());
  *(_QWORD *)&v16[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionManager] = sub_1B163DFB4((uint64_t)v32);

  v31.receiver = v16;
  v31.super_class = v13;
  v22 = (char *)objc_msgSendSuper2(&v31, sel_initWithFrame_collectionViewLayout_, a1, a3, a4, a5, a6);
  v23 = OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionManager;
  v24 = *(void **)&v22[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionManager];
  v25 = v22;
  v26 = v24;
  sub_1B13A52AC(v22);

  v27 = OUTLINED_FUNCTION_45_20();
  objc_msgSend(v27, sel_addTarget_action_, v25, sel_handlePanGestureWithGestureRecognizer_);

  v28 = OUTLINED_FUNCTION_45_20();
  objc_msgSend(v28, sel_requireGestureRecognizerToFail_, *(_QWORD *)(*(_QWORD *)&v22[v23] + OBJC_IVAR____TtC5TeaUI18SwipeActionManager_panGestureRecognizer));

  v29 = *(id *)(*(_QWORD *)&v22[v23] + OBJC_IVAR____TtC5TeaUI18SwipeActionManager_panGestureRecognizer);
  objc_msgSend(v29, sel_addTarget_action_, v25, sel_handleFromCoordinatingGestureWithGestureRecognizer_);

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v25;
}

id SwipeActionCollectionView.__deallocating_deinit()
{
  char *v0;
  void *v1;
  objc_class *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  objc_super v10;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_4();
  v3 = &v0[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_dependencyCleanupBlocks];
  OUTLINED_FUNCTION_30();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v5)
  {
    sub_1B16B9740();
    v6 = v4 + 40;
    do
    {
      v7 = *(void (**)(uint64_t))(v6 - 8);
      v8 = swift_retain();
      v7(v8);
      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  v10.receiver = v1;
  v10.super_class = v2;
  return objc_msgSendSuper2(&v10, sel_dealloc);
}

void sub_1B15DA274()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_dependencyCleanupBlocks] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_coordinatingResetBlocks] = v1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_coordinatingCancelBlocks] = v1;
  v2 = OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_updateGroup;
  *(_QWORD *)&v0[v2] = dispatch_group_create();
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionRestoreState];
  v4 = OUTLINED_FUNCTION_15_40();
  OUTLINED_FUNCTION_83(v3, v5, v6, v4);
  v0[OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_isBottomRubberBanding] = 0;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15DA350(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1B5E1F2F8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_beginAccess();
    v6 = (void *)MEMORY[0x1B5E1F2F8](a2 + 16);
    if (v6)
    {
      v7 = objc_msgSend(v6, sel_coordinatingSwipeActionPanGestureRecognizer);
      objc_msgSend(v7, sel_removeTarget_action_, v5, sel_handlePanGestureWithGestureRecognizer_);

      swift_unknownObjectRelease();
      v5 = v7;
    }

  }
}

void *sub_1B15DA410(uint64_t a1)
{
  uint64_t v1;
  void *result;

  v1 = a1 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x1B5E1F2F8](v1);
  if (result)
  {
    objc_msgSend(result, sel_coordinatingResetSwipeAction);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1B15DA46C@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v3;
  void *result;
  unsigned __int8 v5;

  v3 = a1 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x1B5E1F2F8](v3);
  if (result)
  {
    v5 = objc_msgSend(result, sel_coordinatingSwipeActionShouldCancel);
    result = (void *)swift_unknownObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1B15DA4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1B5E1F2F8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_beginAccess();
    v6 = (void *)MEMORY[0x1B5E1F2F8](a2 + 16);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_panGestureRecognizer);
      objc_msgSend(v8, sel_removeTarget_action_, v5, sel_handlePanGestureWithGestureRecognizer_);

      v5 = v8;
    }

  }
}

void sub_1B15DA5A0()
{
  uint64_t v0;
  NSObject *v1;

  v1 = *(NSObject **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionManager)
                    + OBJC_IVAR____TtC5TeaUI18SwipeActionManager_deferGroup);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_isBottomRubberBanding) == 1)
    dispatch_group_enter(v1);
  else
    dispatch_group_leave(v1);
}

void sub_1B15DA5D8(void *a1)
{
  if (objc_msgSend(a1, sel_state) == (id)1)
    sub_1B13A1C1C(1, 0, 0);
}

id sub_1B15DA670(void *a1)
{
  uint64_t v1;
  id result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  result = objc_msgSend(a1, sel_state);
  if (result == (id)1)
  {
    v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_coordinatingResetBlocks);
    result = (id)swift_beginAccess();
    v4 = *v3;
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      sub_1B16B9740();
      v6 = v4 + 40;
      do
      {
        v7 = *(void (**)(uint64_t))(v6 - 8);
        v8 = swift_retain();
        v7(v8);
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

id SwipeActionCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1)
{
  double v2;
  id v3;
  SEL v4;
  id v5;

  OUTLINED_FUNCTION_21_34();
  v2 = OUTLINED_FUNCTION_54();
  v5 = objc_msgSend(v3, v4, a1, v2);

  return v5;
}

id SwipeActionCollectionView.coordinatingSwipeActionPanGestureRecognizer.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionManager)
                           + OBJC_IVAR____TtC5TeaUI18SwipeActionManager_panGestureRecognizer));
}

BOOL SwipeActionCollectionView.coordinatingSwipeActionShouldCancel.getter()
{
  return sub_1B163D0DC();
}

Swift::Void __swiftcall SwipeActionCollectionView.coordinatingResetSwipeAction()()
{
  OUTLINED_FUNCTION_59_14(1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15DA8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  unint64_t v53;

  v3 = v2;
  sub_1B13DE608(0, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)&v47 - v12;
  v14 = type metadata accessor for SwipeActionRestoreState();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (uint64_t *)((char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = v3 + OBJC_IVAR____TtC5TeaUI25SwipeActionCollectionView_swipeActionRestoreState;
  swift_beginAccess();
  sub_1B140F2AC(v18, (uint64_t)v13, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
  {
    sub_1B140F694((uint64_t)v13, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
    return;
  }
  v19 = a1;
  sub_1B15DB930((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SwipeActionRestoreState);
  v20 = sub_1B15D9B00(&OBJC_IVAR____TtC5TeaUI18SwipeActionManager_delegate);
  if (v20)
  {
    v22 = v20;
    v23 = v21;
    swift_getObjectType();
    v24 = *(uint64_t (**)(uint64_t))(v23 + 16);
    v49 = (char *)v17 + *(int *)(v14 + 20);
    v25 = v24(v3);
    if (v26)
    {
      if (v25 == *v17 && v26 == v17[1])
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = sub_1B16BA910();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
          goto LABEL_10;
      }
      if ((sub_1B163D324((uint64_t)v17) & 1) != 0)
      {
        v35 = a2;
        v50 = v22;
        if (qword_1ED17B720 != -1)
          swift_once();
        v36 = (void *)qword_1ED190380;
        sub_1B13D5F1C(0, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80);
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1B16C51E0;
        *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
        v38 = sub_1B140493C();
        *(_QWORD *)(v37 + 64) = v38;
        *(_QWORD *)(v37 + 32) = v19;
        *(_QWORD *)(v37 + 40) = v35;
        v52 = 0;
        v53 = 0xE000000000000000;
        v51 = *(_OWORD *)((char *)v17 + *(int *)(v14 + 28));
        type metadata accessor for CGPoint(0);
        v39 = v36;
        sub_1B16B9740();
        sub_1B16BA6B8();
        v40 = v52;
        v41 = v53;
        *(_QWORD *)(v37 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v37 + 104) = v38;
        *(_QWORD *)(v37 + 72) = v40;
        *(_QWORD *)(v37 + 80) = v41;
        sub_1B16BA058();
        sub_1B16B8B58();
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {
        v42 = a2;
        v43 = v10;
        if (qword_1ED17B720 != -1)
          swift_once();
        v44 = (void *)qword_1ED190380;
        sub_1B13D5F1C(0, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80);
        v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = xmmword_1B16C51D0;
        *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v45 + 64) = sub_1B140493C();
        *(_QWORD *)(v45 + 32) = v19;
        *(_QWORD *)(v45 + 40) = v42;
        sub_1B16B9740();
        v46 = v44;
        sub_1B16BA058();
        sub_1B16B8B58();
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        v10 = v43;
      }
      goto LABEL_21;
    }
LABEL_10:
    v50 = v22;
    v48 = v10;
    if (qword_1ED17B720 != -1)
      swift_once();
    v29 = (void *)qword_1ED190380;
    sub_1B13D5F1C(0, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1B16C51E0;
    *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
    v31 = sub_1B140493C();
    *(_QWORD *)(v30 + 64) = v31;
    *(_QWORD *)(v30 + 32) = v19;
    *(_QWORD *)(v30 + 40) = a2;
    sub_1B16B7D60();
    sub_1B13B13B4((unint64_t *)&unk_1ED17E130, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1698]);
    sub_1B16B9740();
    v32 = v29;
    v33 = sub_1B16BA8B0();
    *(_QWORD *)(v30 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v30 + 104) = v31;
    *(_QWORD *)(v30 + 72) = v33;
    *(_QWORD *)(v30 + 80) = v34;
    sub_1B16BA058();
    sub_1B16B8B58();

    swift_bridgeObjectRelease();
    sub_1B163D19C();
    sub_1B13A1C1C(1, 0, 0);
    swift_unknownObjectRelease();
    v10 = v48;
  }
LABEL_21:
  sub_1B13E0BC4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SwipeActionRestoreState);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v14);
  swift_beginAccess();
  sub_1B15DB968((uint64_t)v10, v18);
  swift_endAccess();
}

void sub_1B15DAE90()
{
  sub_1B15DA8B4(0x614464616F6C6572, 0xEC00000029286174);
}

void SwipeActionCollectionView.reloadSections(_:)()
{
  void *v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  objc_super v13;

  v2 = v0;
  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_117_0((uint64_t)v3, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_16_14();
  OUTLINED_FUNCTION_55_17(18, 0x80000001B16F0A80, v1);
  v6 = (void *)sub_1B16B7C40();
  v13.receiver = v2;
  v13.super_class = v3;
  objc_msgSendSuper2(&v13, sel_reloadSections_, v6);

  v7 = OUTLINED_FUNCTION_15_40();
  v9 = OUTLINED_FUNCTION_13_50(v1, v8, v7);
  if (!v10)
  {
    v11 = OUTLINED_FUNCTION_0_12();
    *(_QWORD *)(v11 + 16) = v2;
    v12 = v2;
    SwipeActionCollectionView.performBatchUpdates(_:completion:)(0, 0, (uint64_t)sub_1B15DB81C, v11);
    v9 = swift_release();
  }
  OUTLINED_FUNCTION_49_18(v9, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_67();
}

void sub_1B15DAFD8()
{
  sub_1B15DA8B4(0xD000000000000012, 0x80000001B16F0A80);
}

Swift::Void __swiftcall SwipeActionCollectionView.reloadItems(at:)(Swift::OpaquePointer at)
{
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  objc_super v14;

  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_117_0((uint64_t)v3, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_55_17(16, 0x80000001B16F0AA0, v1);
  OUTLINED_FUNCTION_3_12();
  v6 = (void *)sub_1B16B9B48();
  v14.receiver = v2;
  v14.super_class = v3;
  objc_msgSendSuper2(&v14, sel_reloadItemsAtIndexPaths_, v6);

  v7 = OUTLINED_FUNCTION_15_40();
  v9 = OUTLINED_FUNCTION_13_50(v1, v8, v7);
  if (!v10)
  {
    v11 = OUTLINED_FUNCTION_0_12();
    v12 = OUTLINED_FUNCTION_58_15(v11);
    OUTLINED_FUNCTION_42_23((uint64_t)v12, v13, (uint64_t)sub_1B15DB824);
    v9 = swift_release();
  }
  OUTLINED_FUNCTION_56_17(v9, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_31();
}

void sub_1B15DB114()
{
  sub_1B15DA8B4(0xD000000000000010, 0x80000001B16F0AA0);
}

Swift::Void __swiftcall SwipeActionCollectionView.moveSection(_:toSection:)(Swift::Int _, Swift::Int toSection)
{
  uint64_t v2;
  void *v3;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  objc_super v13;

  v6 = (objc_class *)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_117_0((uint64_t)v6, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_54_20(25, v2);
  v13.receiver = v3;
  v13.super_class = v6;
  objc_msgSendSuper2(&v13, sel_moveSection_toSection_, _, toSection);
  v9 = OUTLINED_FUNCTION_15_40();
  v11 = OUTLINED_FUNCTION_13_50(v2, v10, v9);
  if (!v12)
    sub_1B15DA8B4(0xD000000000000019, 0x80000001B16F0B00);
  OUTLINED_FUNCTION_56_17(v11, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_67();
}

void SwipeActionCollectionView.moveItem(at:to:)()
{
  void *v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  objc_super v12;

  v2 = v0;
  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_117_0((uint64_t)v3, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_16_14();
  sub_1B140E9FC(0xD000000000000010, 0x80000001B16F0B20, v1);
  v6 = (void *)sub_1B16B7CDC();
  v7 = (void *)sub_1B16B7CDC();
  v12.receiver = v2;
  v12.super_class = v3;
  objc_msgSendSuper2(&v12, sel_moveItemAtIndexPath_toIndexPath_, v6, v7);

  v8 = OUTLINED_FUNCTION_15_40();
  v10 = OUTLINED_FUNCTION_13_50(v1, v9, v8);
  if (!v11)
    sub_1B15DA8B4(0xD000000000000010, 0x80000001B16F0B20);
  OUTLINED_FUNCTION_49_18(v10, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  OUTLINED_FUNCTION_27();
}

void SwipeActionCollectionView.deleteSections(_:)(uint64_t a1)
{
  sub_1B13A8468(a1, 0x80000001B16F0B40, (SEL *)&selRef_deleteSections_);
}

#error "1B15DB52C: call analysis failed (funcsize=60)"

#error "1B15DB62C: call analysis failed (funcsize=60)"

void sub_1B15DB684()
{
  SwipeActionCollectionView.viewWillDisappear()();
}

void sub_1B15DB6A4()
{
  SwipeActionCollectionView.viewDidDisappear()();
}

uint64_t sub_1B15DB6C4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1B15DB6F0()
{
  uint64_t v0;
  NSObject *v1;

  v1 = *(NSObject **)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  dispatch_group_leave(v1);
}

uint64_t sub_1B15DB71C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_117_0(a1, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v1 + v4;
  v7 = OUTLINED_FUNCTION_15_40();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = OUTLINED_FUNCTION_3_12();
    OUTLINED_FUNCTION_20_1(v8);
  }

  if (*(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15DB7E8()
{
  return swift_deallocObject();
}

uint64_t sub_1B15DB7F8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B15DB814()
{
  sub_1B15DAE90();
}

void sub_1B15DB81C()
{
  sub_1B15DAFD8();
}

void sub_1B15DB824()
{
  sub_1B15DB114();
}

uint64_t sub_1B15DB82C(uint64_t a1)
{
  uint64_t v2;

  sub_1B13D5F1C(0, &qword_1ED1826F8, (unint64_t *)&qword_1ED1826F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B15DB888()
{
  return type metadata accessor for SwipeActionCollectionView();
}

uint64_t method lookup function for SwipeActionCollectionView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SwipeActionCollectionView.__allocating_init(frame:collectionViewLayout:sceneStateManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1B15DB8A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B15DB8C0()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B15DB8E0()
{
  uint64_t v0;

  sub_1B15DA4E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_35Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B15DB918()
{
  uint64_t v0;

  sub_1B15DA350(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void *sub_1B15DB920()
{
  uint64_t v0;

  return sub_1B15DA410(v0);
}

void *sub_1B15DB928@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  return sub_1B15DA46C(v1, a1);
}

void sub_1B15DB930(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_127(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15DB968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DE608(0, &qword_1ED1850C8, (uint64_t (*)(uint64_t))type metadata accessor for SwipeActionRestoreState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for BarViewStyle(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for BarViewStyle(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for BarViewStyle(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for StackPreviewStepResult(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

ValueMetadata *type metadata accessor for StackPreviewStepResult()
{
  return &type metadata for StackPreviewStepResult;
}

Swift::Void __swiftcall ViewControllerTransitionManager.clearState(viewController:matching:)(UIViewController *viewController, TeaUI::ViewControllerTransitionManager::State matching)
{
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_BYTE *)matching;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_10_63();
  if (!v4)
    goto LABEL_5;
  OUTLINED_FUNCTION_9_71();
  if ((v5 & 1) == 0)
    goto LABEL_5;
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_11_51(v3);
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_13();
    sub_1B148A01C((uint64_t)viewController, v7, v8, v9, v10, v11, v12, v13, v14, v15);
LABEL_5:
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_90();
}

uint64_t ViewControllerTransitionManager.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_25();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

TeaUI::ViewControllerTransitionManager::State_optional __swiftcall ViewControllerTransitionManager.state(viewController:)(UIViewController *viewController)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  TeaUI::ViewControllerTransitionManager::State_optional result;

  v3 = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_10_63();
  if (v4 && (v5 = OUTLINED_FUNCTION_16_49(), (v6 & 1) != 0))
    v7 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v5);
  else
    v7 = 4;
  *v3 = v7;
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_90();
  return result;
}

TeaUI::ViewControllerTransitionManager::Transition_optional __swiftcall ViewControllerTransitionManager.Transition.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  uint64_t v2;
  char *v3;
  char v4;
  TeaUI::ViewControllerTransitionManager::Transition_optional result;

  v3 = v1;
  sub_1B16BA7F0();
  OUTLINED_FUNCTION_10_3();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *v3 = v4;
  OUTLINED_FUNCTION_31();
  return result;
}

uint64_t ViewControllerTransitionManager.Transition.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6165707061736964;
  else
    return 0x6E69726165707061;
}

void sub_1B15DBCD0(char *a1, unsigned __int8 *a2)
{
  sub_1B14AB49C(*a1, *a2);
}

void sub_1B15DBCDC()
{
  sub_1B167939C();
}

uint64_t sub_1B15DBCE4()
{
  return sub_1B149EC24();
}

void sub_1B15DBCEC()
{
  sub_1B167960C();
}

TeaUI::ViewControllerTransitionManager::Transition_optional sub_1B15DBCF4(Swift::String *a1)
{
  return ViewControllerTransitionManager.Transition.init(rawValue:)(*a1);
}

uint64_t sub_1B15DBD00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ViewControllerTransitionManager.Transition.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

TeaUI::ViewControllerTransitionManager::State_optional __swiftcall ViewControllerTransitionManager.State.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  TeaUI::ViewControllerTransitionManager::State_optional result;

  v3 = v1;
  sub_1B16BA7F0();
  OUTLINED_FUNCTION_10_3();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *v3 = v4;
  OUTLINED_FUNCTION_31();
  return result;
}

uint64_t ViewControllerTransitionManager.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B15DBDA0 + 4 * byte_1B16D702A[*v0]))(0x6E69726165707061, 0xE900000000000067);
}

uint64_t sub_1B15DBDA0()
{
  return 0x6465726165707061;
}

uint64_t sub_1B15DBDB8()
{
  return 0x6165707061736964;
}

void sub_1B15DBDE8(char *a1)
{
  sub_1B13E6A6C(*a1);
}

void sub_1B15DBDF4()
{
  sub_1B16793A8();
}

void sub_1B15DBDFC(uint64_t a1)
{
  char *v1;

  sub_1B149EB8C(a1, *v1);
}

void sub_1B15DBE04()
{
  sub_1B1679600();
}

TeaUI::ViewControllerTransitionManager::State_optional sub_1B15DBE0C(Swift::String *a1)
{
  return ViewControllerTransitionManager.State.init(rawValue:)(*a1);
}

uint64_t sub_1B15DBE18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ViewControllerTransitionManager.State.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ViewControllerTransitionManager.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t sub_1B15DBE50(void *a1)
{
  id v2;
  uint64_t v4;

  v4 = sub_1B16BA8EC();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  v2 = objc_msgSend(a1, sel_description);
  sub_1B16B9860();

  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B15DC404();
  sub_1B16B98B4();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16BA6B8();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return v4;
}

void sub_1B15DBFAC(void *a1, char a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B16BA8EC();
  v7 = v4;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  v5 = objc_msgSend(a1, sel_description, v6, v7);
  sub_1B16B9860();

  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  __asm { BR              X10 }
}

uint64_t sub_1B15DC090()
{
  uint64_t v1;

  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return v1;
}

uint64_t ViewControllerTransitionManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ViewControllerTransitionManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15DC1C8()
{
  uint64_t v0;

  return sub_1B15DBE50(*(void **)(v0 + 16));
}

void sub_1B15DC1D8()
{
  uint64_t v0;

  sub_1B15DBFAC(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_1B15DC1EC()
{
  unint64_t result;

  result = qword_1EEF34E18;
  if (!qword_1EEF34E18)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ViewControllerTransitionManager.Transition, &type metadata for ViewControllerTransitionManager.Transition);
    atomic_store(result, (unint64_t *)&qword_1EEF34E18);
  }
  return result;
}

unint64_t sub_1B15DC22C()
{
  unint64_t result;

  result = qword_1EEF34E20;
  if (!qword_1EEF34E20)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ViewControllerTransitionManager.State, &type metadata for ViewControllerTransitionManager.State);
    atomic_store(result, (unint64_t *)&qword_1EEF34E20);
  }
  return result;
}

uint64_t method lookup function for ViewControllerTransitionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ViewControllerTransitionManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for ViewControllerTransitionManager.Transition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15DC2C8 + 4 * byte_1B16D7033[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15DC2FC + 4 * byte_1B16D702E[v4]))();
}

uint64_t sub_1B15DC2FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15DC304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15DC30CLL);
  return result;
}

uint64_t sub_1B15DC318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15DC320);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15DC324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15DC32C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for ViewControllerTransitionManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B15DC384 + 4 * byte_1B16D703D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B15DC3B8 + 4 * byte_1B16D7038[v4]))();
}

uint64_t sub_1B15DC3B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15DC3C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15DC3C8);
  return result;
}

uint64_t sub_1B15DC3D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15DC3DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B15DC3E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15DC3E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewControllerTransitionManager.State()
{
  return &type metadata for ViewControllerTransitionManager.State;
}

void sub_1B15DC404()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34E28)
  {
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34E28);
  }
}

uint64_t sub_1B15DC44C(char a1, int a2, void *a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  uint64_t v11[2];
  uint64_t v12;
  void (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)();
  uint64_t v19;

  v12 = (uint64_t)a3;
  v13 = a4;
  v14 = a5;
  if ((a1 & 1) != 0)
  {
    sub_1B154CECC(a3, a4, a5);

    return sub_1B13B9100((uint64_t)a4);
  }
  v7 = objc_opt_self();
  v8 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v8 + 16) = sub_1B15DC810;
  *(_QWORD *)(v8 + 24) = v11;
  v18 = sub_1B149DB30;
  v19 = v8;
  v9 = OUTLINED_FUNCTION_2_111((uint64_t)sub_1B140AA14, v11[0], v11[1], v12, (uint64_t)v13, v14, v15, MEMORY[0x1E0C809B0], 1107296256, v16, v17);
  swift_retain();
  swift_release();
  objc_msgSend((id)v7, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v7) = OUTLINED_FUNCTION_1_129();

  result = swift_release();
  if ((v7 & 1) == 0)
    return sub_1B13B9100((uint64_t)a4);
  __break(1u);
  return result;
}

void sub_1B15DC584(char a1, int a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v8;
  uint64_t v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)();
  uint64_t v15;

  v10 = (uint64_t)a3;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(a3, sel_reloadData);

  }
  else
  {
    v3 = objc_opt_self();
    v4 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)(v4 + 16) = sub_1B15DC804;
    *(_QWORD *)(v4 + 24) = v9;
    v14 = sub_1B140AA30;
    v15 = v4;
    v5 = OUTLINED_FUNCTION_2_111((uint64_t)sub_1B140AA14, v6, (uint64_t)a3, v9[0], v9[1], v10, v11, MEMORY[0x1E0C809B0], 1107296256, v12, v13);
    swift_retain();
    swift_release();
    objc_msgSend((id)v3, sel_performWithoutAnimation_, v5);
    _Block_release(v5);
    LOBYTE(v3) = OUTLINED_FUNCTION_1_129();

    swift_release();
    if ((v3 & 1) != 0)
      __break(1u);
  }
}

uint64_t BlueprintViewType.reload(apply:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8))(a1, a2, 1, a3, a4, a5);
}

uint64_t BlueprintViewType.reload(apply:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, double), _QWORD, uint64_t, uint64_t))(a4 + 8))(a1, a2, 1, nullsub_1, 0, a3, a4);
}

uint64_t BlueprintViewType.update(with:apply:response:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, double), _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 16))(a1, a2, a3, a4, 1, nullsub_1, 0, a5, a6, a7, a8);
}

uint64_t dispatch thunk of BlueprintViewType.reload(apply:animated:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of BlueprintViewType.update(with:apply:response:animated:beforeCompletion:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 16))();
}

uint64_t dispatch thunk of BlueprintViewType.blueprintViewDataSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BlueprintViewType.indexPathsForVisibleItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintViewType.indexPathsForSelectedItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BlueprintViewType.indexPathsForItems(in:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of BlueprintViewType.indexPathForItem(at:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BlueprintViewType.indexPaths(visibility:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of BlueprintViewType.cell(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of BlueprintViewType.frame(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of BlueprintViewType.sectionFrame(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of BlueprintViewType.numberOfSections()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of BlueprintViewType.numberOfVisualItems(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of BlueprintViewType.isEditing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of BlueprintViewType.setEditing(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of BlueprintViewType.allowsMultipleSelection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of BlueprintViewType.allowsMultipleSelection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of BlueprintViewType.allowsMultipleSelection.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of BlueprintViewType.allowsSelection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of BlueprintViewType.allowsSelection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of BlueprintViewType.allowsSelection.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of BlueprintViewType.selectItem(at:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 176))();
}

uint64_t dispatch thunk of BlueprintViewType.deselectItem(at:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of BlueprintViewType.scroll(to:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t dispatch thunk of BlueprintViewType.snap(to:direction:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 200))();
}

uint64_t dispatch thunk of BlueprintViewType.transition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

id sub_1B15DC804()
{
  uint64_t v0;

  return sub_1B169C55C(*(void **)(v0 + 16));
}

void sub_1B15DC810()
{
  uint64_t v0;

  sub_1B154CECC(*(void **)(v0 + 16), *(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void *BlueprintPrefetcher.view.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_13();
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t (*BlueprintPrefetcher.view.modify())()
{
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

void BlueprintPrefetcher.__allocating_init(blueprintLayoutProvider:prefetcher:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  BlueprintPrefetcher.init(blueprintLayoutProvider:prefetcher:)(a1, a2);
}

uint64_t sub_1B15DC8D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1B15DC8E8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15DC90C()
{
  uint64_t Strong;
  _OWORD *v1;
  uint64_t result;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = (_OWORD *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 152));
    *v1 = 0u;
    v1[1] = 0u;
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
    type metadata accessor for BlueprintPrefetcher();
  return result;
}

uint64_t sub_1B15DC9F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15DCA14()
{
  return sub_1B15DC90C();
}

id *BlueprintPrefetcher.deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  OUTLINED_FUNCTION_92((uint64_t)v0 + *((_QWORD *)*v0 + 17), v1[10]);
  OUTLINED_FUNCTION_92((uint64_t)v0 + *((_QWORD *)*v0 + 18), v1[11]);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintPrefetcher.__deallocating_deinit()
{
  BlueprintPrefetcher.deinit();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of BlueprintPrefetcherType.prefetch(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for BlueprintPrefetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintPrefetcher.__allocating_init(blueprintLayoutProvider:prefetcher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

double static NavigationItemStyle.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 40) = 5;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  *(_BYTE *)(a1 + 88) = 5;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_WORD *)(a1 + 112) = 0;
  return result;
}

void NavigationItemStyle.BarStyle.tintColor.getter()
{
  __asm { BR              X11 }
}

void sub_1B15DCB3C()
{
  void *v0;
  id v1;

  v1 = v0;
  OUTLINED_FUNCTION_0_0();
}

void NavigationItemStyle.BarStyle.barTintColor.getter()
{
  __asm { BR              X10 }
}

void sub_1B15DCB84()
{
  void *v0;
  id v1;

  v1 = v0;
  OUTLINED_FUNCTION_0_0();
}

uint64_t NavigationItemStyle.BarStyle.barStyle.getter()
{
  _BYTE *v0;

  if (((1 << v0[40]) & 0x2B) != 0)
    return 0;
  else
    return *(_QWORD *)v0;
}

uint64_t NavigationItemStyle.BarStyle.isTranslucent.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t))((char *)nullsub_2 + 4 * byte_1B16D72D6[*(unsigned __int8 *)(v0 + 40)]))(1);
}

uint64_t sub_1B15DCC18@<X0>(char a1@<W8>)
{
  return a1 & 1;
}

void NavigationItemStyle.BarStyle.backgroundImage.getter()
{
  __asm { BR              X10 }
}

void sub_1B15DCC4C()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 32);
  OUTLINED_FUNCTION_0_0();
}

void NavigationItemStyle.BarStyle.backgroundEffects.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    v1 = *(void **)v0;
    objc_opt_self();
    v2 = v1;
    v3 = OUTLINED_FUNCTION_70_0((uint64_t)v2, sel_ts_visualEffectsForBarWithBackgroundColor_);
    sub_1B13A1BE4(0, &qword_1ED17E098);
    sub_1B16B9B54();

  }
  OUTLINED_FUNCTION_31();
}

BOOL NavigationItemStyle.BarStyle.isTransparent.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 40) == 4;
}

void NavigationItemStyle.BarStyle.blurEffect.getter()
{
  uint64_t v0;
  id v1;

  if (*(_BYTE *)(v0 + 40) == 2)
    v1 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, *(_QWORD *)(v0 + 8));
  OUTLINED_FUNCTION_0_0();
}

void NavigationItemStyle.BarStyle.buttonBackgroundColor.getter()
{
  uint64_t v0;
  id v1;

  if (*(unsigned __int8 *)(v0 + 40) <= 4u)
    v1 = *(id *)(v0 + 24);
  OUTLINED_FUNCTION_0_0();
}

__n128 NavigationItemStyle.init(navigationBar:toolbar:statusBarStyle:trailingStatusBarStyle:shouldUseMultiColorStatusBar:shouldUseImmersiveEffects:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  __n128 result;
  __int128 v13;

  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_OWORD *)(a7 + 16) = v11;
  *(_QWORD *)(a7 + 32) = v7;
  *(_BYTE *)(a7 + 40) = v8;
  result = *(__n128 *)a2;
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a7 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(a7 + 64) = v13;
  *(_QWORD *)(a7 + 80) = v9;
  *(_BYTE *)(a7 + 88) = v10;
  *(_QWORD *)(a7 + 96) = a3;
  *(_QWORD *)(a7 + 104) = a4;
  *(_BYTE *)(a7 + 112) = a5;
  *(_BYTE *)(a7 + 113) = a6;
  return result;
}

void NavigationItemStyle.BarStyle.pillButtonBackground.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  objc_opt_self();
  __asm { BR              X9 }
}

void sub_1B15DCE28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;

  if (v15)
    v16 = v15;
  else
    v16 = objc_msgSend(v14, sel_blackColor);
  v17 = v16;
  v18 = objc_msgSend(v14, sel_whiteColor);
  objc_msgSend(v14, sel_ts_dynamicColor_withDarkStyleVariant_, v17, v18);

  OUTLINED_FUNCTION_31();
}

uint64_t NavigationItemStyle.BarStyle.isTransparentWhiteBackground.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40) == 4)
    return *(_BYTE *)(v0 + 16) & 1;
  else
    return 0;
}

BOOL NavigationItemStyle.BarStyle.isTransparentDarkBackground.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 40) == 4 && (*(_BYTE *)(v0 + 16) & 1) == 0;
}

id NavigationItemStyle.navigationBar.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v6 = *(void **)(v1 + 32);
  *a1 = *(_QWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return OUTLINED_FUNCTION_38_26(v2, v3, v4, v5, v6, *(_BYTE *)(v1 + 40), (uint64_t)a1);
}

id NavigationItemStyle.toolbar.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)(v1 + 48);
  v3 = *(void **)(v1 + 56);
  v4 = *(void **)(v1 + 64);
  v5 = *(void **)(v1 + 72);
  v6 = *(void **)(v1 + 80);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return OUTLINED_FUNCTION_38_26(v2, v3, v4, v5, v6, *(_BYTE *)(v1 + 88), (uint64_t)a1);
}

uint64_t NavigationItemStyle.statusBarStyle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t NavigationItemStyle.trailingStatusBarStyle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t NavigationItemStyle.shouldUseMultiColorStatusBar.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t NavigationItemStyle.shouldUseImmersiveEffects.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 113);
}

id NavigationItemStyle.singleColorStatusBarStyle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  v1 = OUTLINED_FUNCTION_40_26();
  v7 = (void *)OUTLINED_FUNCTION_28_29(v1, v2, v3, v4, v5, v6);
  v8 = *(_BYTE *)(v0 + 88);
  *(_BYTE *)(v9 + 88) = v8;
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v0 + 96);
  *(_BYTE *)(v9 + 112) = 0;
  *(_BYTE *)(v9 + 113) = v10;
  sub_1B13CE500(v7, v11, v12, v13, v14, v15);
  v16 = (void *)OUTLINED_FUNCTION_44_19();
  return sub_1B13CE500(v16, v17, v18, v19, v20, v8);
}

id NavigationItemStyle.multiColorStatusBarStyle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v1 = OUTLINED_FUNCTION_40_26();
  v7 = (void *)OUTLINED_FUNCTION_28_29(v1, v2, v3, v4, v5, v6);
  v8 = *(_BYTE *)(v0 + 88);
  *(_BYTE *)(v9 + 88) = v8;
  *(_QWORD *)(v9 + 96) = 0;
  *(_QWORD *)(v9 + 104) = v10;
  *(_BYTE *)(v9 + 112) = 1;
  *(_BYTE *)(v9 + 113) = v11;
  sub_1B13CE500(v7, v12, v13, v14, v15, v16);
  v17 = (void *)OUTLINED_FUNCTION_44_19();
  return sub_1B13CE500(v17, v18, v19, v20, v21, v8);
}

void NavigationItemStyle.compressedStyle(mainBackgroundColor:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(unsigned __int8 *)(v0 + 40);
  OUTLINED_FUNCTION_26_31();
  objc_msgSend(sub_1B15DD188(v2), sel_ts_luminance);
  __asm { BR              X9 }
}

id sub_1B15DD0A8()
{
  uint64_t v0;
  char v1;
  char v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1B13CE500(v4, v9, v8, v7, v5, v2);

  *(_QWORD *)v0 = v4;
  *(_QWORD *)(v0 + 8) = v9;
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 24) = v7;
  *(_QWORD *)(v0 + 32) = v5;
  *(_BYTE *)(v0 + 40) = v2;
  v18 = (void *)OUTLINED_FUNCTION_33_24(v10, v11, v12, v13, v14, v15, v16, v17, v26, v27, v28, v30, v31, v32, v33, v34);
  *(_BYTE *)(v0 + 88) = v29;
  *(_QWORD *)(v0 + 96) = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_BYTE *)(v0 + 112) = v6;
  *(_BYTE *)(v0 + 113) = v1;
  return sub_1B13CE500(v18, v21, v22, v23, v24, v29);
}

id sub_1B15DD188(void *a1)
{
  void *v1;
  id v2;
  char v3;
  CGColor *v4;
  double Alpha;

  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838C0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_clearColor);
  v3 = sub_1B16BA214();

  if ((v3 & 1) != 0)
    return objc_msgSend(v1, sel_whiteColor);
  v4 = (CGColor *)objc_msgSend(a1, sel_CGColor);
  Alpha = CGColorGetAlpha(v4);

  if (Alpha < 1.0)
    return objc_msgSend(v1, sel_whiteColor);
  else
    return a1;
}

id NavigationItemStyle.immersiveStyle(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_26_31();
  v5 = *(_BYTE *)(v2 + 88);
  v6 = *(_QWORD *)(v2 + 104);
  v35 = *(_QWORD *)(v2 + 96);
  v7 = *(_BYTE *)(v2 + 112);
  HIDWORD(v36) = *(unsigned __int8 *)(v2 + 113);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_whiteColor);
  if (a1)
  {
    v10 = a1;
    objc_msgSend(v10, sel_ts_luminance);
    if (v11 >= 0.7)
    {
      v14 = objc_msgSend(v8, sel_blackColor);

      v6 = 3;
      v12 = 1;
      v13 = 2;
      v10 = v9;
      v9 = v14;
    }
    else
    {
      v12 = 0;
      v13 = 1;
    }

  }
  else
  {
    v12 = 0;
    v13 = 1;
  }
  v15 = v9;
  v16 = objc_msgSend(v8, sel_secondarySystemFillColor);
  v17 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithUserInterfaceStyle_, v13);
  v18 = OUTLINED_FUNCTION_70_0((uint64_t)v17, sel_resolvedColorWithTraitCollection_);

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 4;
  v27 = (void *)OUTLINED_FUNCTION_33_24(v19, v20, v21, v22, v23, v24, v25, v26, v34, v35, v36, v38, v39, v40, v41, v42);
  *(_BYTE *)(a2 + 88) = v5;
  *(_QWORD *)(a2 + 96) = v28;
  *(_QWORD *)(a2 + 104) = v6;
  *(_BYTE *)(a2 + 112) = v7;
  *(_BYTE *)(a2 + 113) = v37;
  return sub_1B13CE500(v27, v29, v30, v31, v32, v5);
}

void NavigationItemStyle.style(for:mainBackgroundColor:topContentColor:)(unsigned __int8 *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  id v26;
  id v27;
  id v28;
  id v29;

  v9 = *a1;
  v10 = *(void **)v4;
  v11 = *(void **)(v4 + 8);
  v12 = *(void **)(v4 + 16);
  v13 = *(void **)(v4 + 24);
  v14 = *(void **)(v4 + 32);
  v15 = *(_BYTE *)(v4 + 40);
  v17 = *(void **)(v4 + 48);
  v16 = *(void **)(v4 + 56);
  v19 = *(void **)(v4 + 64);
  v18 = *(void **)(v4 + 72);
  v20 = *(void **)(v4 + 80);
  v21 = *(_BYTE *)(v4 + 88);
  v23 = *(_QWORD *)(v4 + 96);
  v22 = *(_QWORD *)(v4 + 104);
  v24 = *(_BYTE *)(v4 + 112);
  v25 = *(_BYTE *)(v4 + 113);
  if (v9 == 1)
  {
    OUTLINED_FUNCTION_18_41();
    if (a2)
      v26 = a2;
    else
      v26 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v29 = a2;
    NavigationItemStyle.compressedStyle(mainBackgroundColor:)();
  }
  else
  {
    if (!*(_BYTE *)(v4 + 113) || ((a1[1] | a1[2] ^ 1) & 1) == 0)
    {
      *(_QWORD *)a4 = v10;
      *(_QWORD *)(a4 + 8) = v11;
      *(_QWORD *)(a4 + 16) = v12;
      *(_QWORD *)(a4 + 24) = v13;
      *(_QWORD *)(a4 + 32) = v14;
      *(_BYTE *)(a4 + 40) = v15;
      *(_QWORD *)(a4 + 48) = v17;
      *(_QWORD *)(a4 + 56) = v16;
      *(_QWORD *)(a4 + 64) = v19;
      *(_QWORD *)(a4 + 72) = v18;
      *(_QWORD *)(a4 + 80) = v20;
      *(_BYTE *)(a4 + 88) = v21;
      *(_QWORD *)(a4 + 96) = v23;
      *(_QWORD *)(a4 + 104) = v22;
      *(_BYTE *)(a4 + 112) = v24;
      *(_BYTE *)(a4 + 113) = v25;
      sub_1B13CE500(v10, v11, v12, v13, v14, v15);
      sub_1B13CE500(v17, v16, v19, v18, v20, v21);
      return;
    }
    OUTLINED_FUNCTION_18_41();
    v26 = a3;
    if (!a3)
    {
      v27 = a2;
      v26 = a2;
    }
    v28 = a3;
    NavigationItemStyle.immersiveStyle(for:)(v26, a4);
  }

}

void sub_1B15DD5BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34E30)
  {
    sub_1B13A1BE4(255, (unint64_t *)&qword_1ED1838C0);
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34E30);
  }
}

uint64_t assignWithTake for NavigationItemStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  __int128 v20;
  char v21;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a1 + 32);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v4;
  v12 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_1B13DB3F4(v6, v7, v8, v9, v10, v12);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_BYTE *)(a2 + 88);
  v15 = *(void **)(a1 + 48);
  v16 = *(void **)(a1 + 56);
  v17 = *(void **)(a1 + 64);
  v18 = *(void **)(a1 + 72);
  v19 = *(void **)(a1 + 80);
  v20 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 80) = v13;
  v21 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v14;
  sub_1B13DB3F4(v15, v16, v17, v18, v19, v21);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationItemStyle(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 114))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 112);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NavigationItemStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 114) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 114) = 0;
    if (a2)
      *(_BYTE *)(result + 112) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationItemStyle()
{
  return &type metadata for NavigationItemStyle;
}

void destroy for NavigationItemStyle.BarStyle(uint64_t a1)
{
  sub_1B13DB3F4(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for NavigationItemStyle.BarStyle(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1B13CE500(*(id *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for NavigationItemStyle.BarStyle(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1B13CE500(*(id *)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(void **)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(void **)(a1 + 24);
  v13 = *(void **)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1B13DB3F4(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for NavigationItemStyle.BarStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(void **)(a1 + 24);
  v9 = *(void **)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1B13DB3F4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MotionTransform(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MotionTransform(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B15DD96C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 4u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1B15DD984(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NavigationItemStyle.BarStyle()
{
  return &type metadata for NavigationItemStyle.BarStyle;
}

uint64_t sub_1B15DD9B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B15DD9D0(a1, (uint64_t)&protocol witness table for OverlayAlertManager, a2);
}

uint64_t sub_1B15DD9C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B15DD9D0(a1, (uint64_t)&protocol witness table for OverlayAlertManager, a2);
}

uint64_t sub_1B15DD9D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = OUTLINED_FUNCTION_9_73();
  result = sub_1B16B81E0();
  if (result)
  {
    a3[3] = v5;
    a3[4] = a2;
    *a3 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B15DDA34(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t **v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v17[24];
  uint64_t v18;
  _BYTE v19[24];
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13CC6B4(0, &qword_1ED187EC0);
  result = sub_1B16B81EC();
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13CC6B4(0, &qword_1ED188360);
  result = sub_1B16B81EC();
  if (!v20)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13CC6B4(0, &qword_1ED187F80);
  result = sub_1B16B81EC();
  if (v18)
  {
    v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    MEMORY[0x1E0C80A78](v3, v3);
    v5 = (uint64_t *)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v6 + 16))(v5);
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    MEMORY[0x1E0C80A78](v7, v7);
    v9 = (uint64_t *)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
    MEMORY[0x1E0C80A78](v11, v11);
    v13 = (uint64_t **)&v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **))(v14 + 16))(v13);
    v15 = sub_1B15DDEFC(*v5, *v9, *v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return (uint64_t)v15;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1B15DDC88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B15DDCF4(a1, (uint64_t (*)(_QWORD))type metadata accessor for OverlayAlertRenderer, (uint64_t)&off_1E6334A28, a2);
}

uint64_t sub_1B15DDC9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for OverlayAlertStyler();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E6321E20;
  *a1 = result;
  return result;
}

uint64_t sub_1B15DDCE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B15DDCF4(a1, (uint64_t (*)(_QWORD))type metadata accessor for OverlayAlertLayoutAttributesFactory, (uint64_t)&off_1E630F5D8, a2);
}

uint64_t sub_1B15DDCF4@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  _BYTE v25[24];
  uint64_t v26;

  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_197((uint64_t)v7, qword_1ED187D98);
  result = sub_1B16B81EC();
  if (v26)
  {
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    MEMORY[0x1E0C80A78](v9, v9);
    OUTLINED_FUNCTION_77();
    v12 = (uint64_t *)(v11 - v10);
    (*(void (**)(uint64_t))(v13 + 16))(v11 - v10);
    v14 = *v12;
    v15 = type metadata accessor for OverlayAlertStyler();
    v24[3] = v15;
    v24[4] = &off_1E6321E20;
    v24[0] = v14;
    v16 = a2(0);
    v17 = (_QWORD *)swift_allocObject();
    v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v15);
    MEMORY[0x1E0C80A78](v18, v18);
    OUTLINED_FUNCTION_77();
    v21 = (uint64_t *)(v20 - v19);
    (*(void (**)(uint64_t))(v22 + 16))(v20 - v19);
    v23 = *v21;
    v17[5] = v15;
    v17[6] = &off_1E6321E20;
    v17[2] = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    a4[3] = v16;
    a4[4] = a3;
    *a4 = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1B15DDE7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  a4[5] = type metadata accessor for OverlayAlertRenderer();
  a4[6] = &off_1E6334A28;
  a4[2] = a1;
  a4[10] = type metadata accessor for OverlayAlertLayoutAttributesFactory();
  a4[11] = &off_1E630F5D8;
  a4[7] = a2;
  a4[15] = type metadata accessor for AccessibilityAnnouncer();
  a4[16] = &off_1E6329430;
  a4[12] = a3;
  a4[17] = 0;
  a4[18] = 0;
  return a4;
}

_QWORD *sub_1B15DDEFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  _UNKNOWN **v28;
  _QWORD v29[3];
  uint64_t v30;
  _UNKNOWN **v31;

  v6 = *a3;
  v30 = type metadata accessor for OverlayAlertRenderer();
  v31 = &off_1E6334A28;
  v29[0] = a1;
  v27 = type metadata accessor for OverlayAlertLayoutAttributesFactory();
  v28 = &off_1E630F5D8;
  v26[0] = a2;
  v24 = v6;
  v25 = &off_1E6329430;
  v23[0] = a3;
  type metadata accessor for OverlayAlertManager();
  v7 = (_QWORD *)swift_allocObject();
  v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  MEMORY[0x1E0C80A78](v8, v8);
  v10 = (_QWORD *)((char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  MEMORY[0x1E0C80A78](v12, v12);
  v14 = (_QWORD *)((char *)&v23[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  MEMORY[0x1E0C80A78](v16, v16);
  v18 = (_QWORD *)((char *)&v23[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  v20 = sub_1B15DDE7C(*v10, *v14, *v18, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v20;
}

uint64_t type metadata accessor for RawBlueprintLayoutCollectionSectionSolver()
{
  return objc_opt_self();
}

void sub_1B15DE0D8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGRect v8;

  CGRectGetWidth(*(CGRect *)&a1);
  v8.origin.x = a1;
  v8.origin.y = a2;
  v8.size.width = a3;
  v8.size.height = a4;
  CGRectGetHeight(v8);
  OUTLINED_FUNCTION_7_2();
}

void sub_1B15DE13C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  sub_1B15DE0D8(a1, a2, a3, a4);
}

uint64_t ImageProcessor.__allocating_init()()
{
  return swift_allocObject();
}

id ImageProcessor.process(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD v8[2];
  __int128 v9[2];
  _QWORD v10[5];

  sub_1B13B4DC0(a1, (uint64_t)v8);
  sub_1B13CC6B4(0, qword_1ED1867B8);
  OUTLINED_FUNCTION_1_132();
  if (!OUTLINED_FUNCTION_3_19())
    return 0;
  v1 = v5;
  v2 = sub_1B16B9740();
  sub_1B14186B8(v2, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_1B14AD030((uint64_t)&v5);
    OUTLINED_FUNCTION_0_9();
    return 0;
  }
  v8[0] = v5;
  v8[1] = v6;
  sub_1B13C06D0(&v7, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_1B13C06D0(v9, (uint64_t)v10);
  v3 = sub_1B15DE250(v10, v1);
  OUTLINED_FUNCTION_0_9();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v3;
}

id sub_1B15DE250(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  Class isa;
  id v8;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = AssetHandleType.image.getter(v3, v4);
  v6 = (void *)v5;
  if ((*(_BYTE *)(a2 + 56) & 1) == 0 && v5)
  {
    isa = UIImage.with(size:)(*(CGSize *)(a2 + 40)).super.isa;

    v6 = isa;
  }
  if (*(_QWORD *)(a2 + 64) && v6)
  {
    v8 = objc_msgSend(v6, sel_imageWithRenderingMode_);

    return v8;
  }
  return v6;
}

id ImageProcessor.process(_:imageFromCache:)(uint64_t a1, void *a2)
{
  id v2;
  id v4;
  uint64_t v6;
  _BYTE v7[40];

  sub_1B13B4DC0(a1, (uint64_t)v7);
  sub_1B13CC6B4(0, qword_1ED1867B8);
  OUTLINED_FUNCTION_1_132();
  if (!OUTLINED_FUNCTION_3_19())
    return a2;
  if (*(_QWORD *)(v6 + 64))
    v2 = objc_msgSend(a2, sel_imageWithRenderingMode_);
  else
    v2 = a2;
  v4 = v2;
  OUTLINED_FUNCTION_0_9();
  return v4;
}

uint64_t ImageProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ImageProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1B15DE3A8(uint64_t a1)
{
  return ImageProcessor.process(_:)(a1);
}

id sub_1B15DE3BC(uint64_t a1, void *a2)
{
  return ImageProcessor.process(_:imageFromCache:)(a1, a2);
}

uint64_t dispatch thunk of ImageProcessorType.process(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ImageProcessorType.process(_:imageFromCache:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for ImageProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImageProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayoutTransitioning.transition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayoutTransitioning.detachAndCreateTransitionLayout()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t OpenInNewTabCommandHandler.__allocating_init(navigator:sceneProvider:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1B13C06D0(a2, v4 + 24);
  *(_QWORD *)(v4 + 16) = a1;
  return v4;
}

uint64_t OpenInNewTabCommandHandler.init(navigator:sceneProvider:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  sub_1B13C06D0(a2, v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  return v2;
}

uint64_t OpenInNewTabCommandHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;
  void *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_0_153(a1, a2, a3);
  v5 = v15;
  if (v15)
  {
    v6 = v16;
    __swift_project_boxed_opaque_existential_1(v13, (uint64_t)v15);
    v5 = (void *)(*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v5, v6);
    v7 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    v7 = sub_1B15DE718((uint64_t)v13);
  }
  OUTLINED_FUNCTION_0_153(v7, v8, v9);
  v10 = (uint64_t)v15;
  if (v15)
  {
    v11 = v16;
    __swift_project_boxed_opaque_existential_1(v13, (uint64_t)v15);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    sub_1B15DE718((uint64_t)v13);
  }
  v13[0] = v5;
  v13[1] = v10;
  v14 = 1;
  sub_1B161CD24(a4, (uint64_t)v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B15DE6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DB4AC(0, &qword_1ED17D390, (unint64_t *)&qword_1ED17F268, (uint64_t)&protocol descriptor for SceneProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B15DE718(uint64_t a1)
{
  uint64_t v2;

  sub_1B13DB4AC(0, &qword_1ED17D390, (unint64_t *)&qword_1ED17F268, (uint64_t)&protocol descriptor for SceneProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OpenInNewTabCommandHandler.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1B15DE718(v0 + 24);
  return v0;
}

uint64_t OpenInNewTabCommandHandler.__deallocating_deinit()
{
  OpenInNewTabCommandHandler.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15DE7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OpenInNewTabCommandHandler.handle(commandCenter:command:with:source:)(a1, a2, a3, a4);
}

uint64_t method lookup function for OpenInNewTabCommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OpenInNewTabCommandHandler.__allocating_init(navigator:sceneProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

BOOL static StackNavigatorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StackNavigatorError.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t StackNavigatorError.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B15DE87C()
{
  unint64_t result;

  result = qword_1EEF34F08;
  if (!qword_1EEF34F08)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for StackNavigatorError, &type metadata for StackNavigatorError);
    atomic_store(result, (unint64_t *)&qword_1EEF34F08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StackNavigatorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B15DE904 + 4 * byte_1B16D75C5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B15DE938 + 4 * byte_1B16D75C0[v4]))();
}

uint64_t sub_1B15DE938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15DE940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15DE948);
  return result;
}

uint64_t sub_1B15DE954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15DE95CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B15DE960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15DE968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StackNavigatorError()
{
  return &type metadata for StackNavigatorError;
}

uint64_t dispatch thunk of Expandable.isExpandable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

double sub_1B15DE98C()
{
  double result;

  result = *MEMORY[0x1E0DC59C8];
  qword_1EEF34F10 = *MEMORY[0x1E0DC59C8];
  return result;
}

void sub_1B15DE9A4(id *a1)
{
  sub_1B15DE9CC(*a1);
}

void sub_1B15DE9CC(void *a1)
{
  id v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_32();
  v2 = a1;
  sub_1B16B85B8();
  OUTLINED_FUNCTION_45();

}

void DockContainerViewController.$rootViewController.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_32();
  sub_1B16B85C4();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_48();
}

void sub_1B15DEA74(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  uint64_t ObjectType;
  uint64_t v4;
  UIAccessibilityNotifications v5;
  UIView *v6;
  id v7;
  uint64_t v8;

  v2 = *a1;
  sub_1B16B87D4();
  if (v7)
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);

    sub_1B15E0DCC();
    sub_1B16B8300();
    swift_release();
  }
  v4 = OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode;
  LOBYTE(v7) = *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode);
  sub_1B15DEB70((unsigned __int8 *)&v7);
  if (v2 == 2 && *(_BYTE *)(v1 + v4) == 1)
  {
    v5 = *MEMORY[0x1E0DC4578];
    v6 = sub_1B15DEC10();
    UIAccessibilityPostNotification(v5, v6);

  }
}

void sub_1B15DEB70(unsigned __int8 *a1)
{
  int v1;
  UIView *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *a1;
  v2 = sub_1B15DEC10();
  -[UIView setAccessibilityElementsHidden:](v2, sel_setAccessibilityElementsHidden_, v1 == 2);

  DockContainerViewController.rootViewController.getter();
  v4 = v3;
  v5 = objc_msgSend(v3, sel_view);

  if (v5)
  {
    objc_msgSend(v5, sel_setAccessibilityElementsHidden_, v1 == 2);

  }
  else
  {
    __break(1u);
  }
}

UIView *sub_1B15DEC10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  UIView *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  UIView *v9;
  uint64_t v10;
  void *v11;
  UIView *v12;
  CALayer *v13;
  CALayer *v14;
  CALayer *v15;
  void *v16;
  id v17;

  v1 = OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___dockedView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___dockedView);
  if (v2)
  {
    v3 = *(UIView **)(v0 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___dockedView);
  }
  else
  {
    v4 = v0;
    v5 = sub_1B15DF0B4();
    v7 = v6;
    ObjectType = swift_getObjectType();
    v9 = (UIView *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);

    objc_opt_self();
    v10 = swift_dynamicCastObjCClass();
    if (v10)
    {
      v11 = (void *)v10;
      v12 = v9;
      sub_1B15DF990(v11);

    }
    else
    {
      DockContainerViewController.configureLegacyDockGestures(on:)(v9);
    }
    v13 = -[UIView layer](v9, sel_layer);
    -[CALayer setMasksToBounds:](v13, sel_setMasksToBounds_, 1);

    v14 = -[UIView layer](v9, sel_layer);
    -[CALayer setMaskedCorners:](v14, sel_setMaskedCorners_, 3);

    v15 = -[UIView layer](v9, sel_layer);
    if (qword_1EEF2F8B0 != -1)
      swift_once();
    -[CALayer setCornerRadius:](v15, sel_setCornerRadius_, *(double *)&qword_1EEF34F10);

    v16 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v17 = v2;
  return v3;
}

void sub_1B15DEDA8(_BYTE *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode) = *a1;
  v3 = v2;
  sub_1B15DEA74(&v3);
}

id DockContainerViewController.__allocating_init(rootViewController:lazyDockableViewController:commandCenter:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return DockContainerViewController.init(rootViewController:lazyDockableViewController:commandCenter:)(a1, a2, a3, a4);
}

void sub_1B15DEE38()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode] = 0;
  v1 = OBJC_IVAR____TtC5TeaUI27DockContainerViewController_dockView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___dockHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___dockedView] = 0;
  v2 = &v0[OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___expandedViewController];
  *v2 = 0;
  v2[1] = 0;

  sub_1B16BA724();
  __break(1u);
}

uint64_t DockContainerViewController.canBecomeFirstResponder.getter()
{
  return 0;
}

void DockContainerViewController.present(_:animated:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  objc_class *v10;
  id v11;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  objc_super v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  v10 = (objc_class *)OUTLINED_FUNCTION_4();
  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838F0);
  v11 = sub_1B15DF0B4();
  v12 = sub_1B16BA214();

  if ((v12 & 1) != 0)
  {
    if (a3)
    {
      v20 = a3;
      v21 = a4;
      v13 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13F00E4, (uint64_t)v17.receiver, (uint64_t)v17.super_class, MEMORY[0x1E0C809B0], 1107296256, v18, v19);
      OUTLINED_FUNCTION_83_0();
      swift_release();
    }
    else
    {
      v13 = 0;
    }
    v17.receiver = v5;
    v17.super_class = v10;
    objc_msgSendSuper2(&v17, sel_presentViewController_animated_completion_, a1, a2 & 1, v13);
    _Block_release(v13);
  }
  else
  {
    DockContainerViewController.rootViewController.getter();
    v15 = v14;
    if (a3)
    {
      v20 = a3;
      v21 = a4;
      v16 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13F00E4, (uint64_t)v17.receiver, (uint64_t)v17.super_class, MEMORY[0x1E0C809B0], 1107296256, v18, v19);
      OUTLINED_FUNCTION_83_0();
      OUTLINED_FUNCTION_59();
    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(v15, sel_presentViewController_animated_completion_, a1, a2 & 1, v16);
    OUTLINED_FUNCTION_26_32();

  }
}

id sub_1B15DF0B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___expandedViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___expandedViewController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5TeaUI27DockContainerViewController____lazy_storage___expandedViewController);
  }
  else
  {
    v4 = sub_1B15DFA9C(v0);
    v5 = *(void **)v1;
    *(_QWORD *)v1 = v4;
    *(_QWORD *)(v1 + 8) = v6;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t DockContainerViewController.show(_:sender:)(uint64_t a1, uint64_t a2)
{
  return sub_1B15DF200(a1, a2, (SEL *)&selRef_showViewController_sender_);
}

uint64_t DockContainerViewController.showDetailViewController(_:sender:)(uint64_t a1, uint64_t a2)
{
  return sub_1B15DF200(a1, a2, (SEL *)&selRef_showDetailViewController_sender_);
}

uint64_t sub_1B15DF200(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;

  DockContainerViewController.rootViewController.getter();
  v7 = v6;
  sub_1B1405FC4(a2, (uint64_t)v15);
  v8 = v16;
  if (v16)
  {
    v9 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v10 = *(_QWORD *)(v8 - 8);
    MEMORY[0x1E0C80A78](v9, v9);
    v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    v13 = sub_1B16BA8F8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v7, *a3, a1, v13);

  return swift_unknownObjectRelease();
}

uint64_t sub_1B15DF310(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void *, _OWORD *))
{
  id v8;
  id v9;
  id v10;
  id v11;
  _OWORD v13[2];

  if (a4)
  {
    v8 = a3;
    v9 = a1;
    swift_unknownObjectRetain();
    sub_1B16BA3AC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v10 = a3;
    v11 = a1;
  }
  a5(a3, v13);

  return sub_1B13F77F4((uint64_t)v13);
}

void DockContainerViewController.dismiss(animated:completion:)(char a1, void *a2, uint64_t a3)
{
  void *v3;
  objc_class *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  objc_super v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v7 = (objc_class *)OUTLINED_FUNCTION_4();
  v8 = OUTLINED_FUNCTION_2_0((uint64_t)v7, sel_presentedViewController);

  if (v8)
  {
    if (a2)
    {
      v15 = a2;
      v16 = a3;
      a2 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13F00E4, (uint64_t)v12.receiver, (uint64_t)v12.super_class, MEMORY[0x1E0C809B0], 1107296256, v13, v14);
      OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_59();
    }
    v12.receiver = v3;
    v12.super_class = v7;
    objc_msgSendSuper2(&v12, sel_dismissViewControllerAnimated_completion_, a1 & 1, a2);
    OUTLINED_FUNCTION_26_32();
  }
  else
  {
    DockContainerViewController.rootViewController.getter();
    v10 = v9;
    if (a2)
    {
      v15 = a2;
      v16 = a3;
      v11 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13F00E4, (uint64_t)v12.receiver, (uint64_t)v12.super_class, MEMORY[0x1E0C809B0], 1107296256, v13, v14);
      OUTLINED_FUNCTION_26();
      swift_release();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v10, sel_dismissViewControllerAnimated_completion_, a1 & 1, v11);
    _Block_release(v11);

  }
}

void sub_1B15DF580()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  CGRect v11;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_bounds);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v11.origin.x = v4;
    v11.origin.y = v6;
    v11.size.width = v8;
    v11.size.height = v10;
    CGRectGetMaxY(v11);
    sub_1B15DF614();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B15DF614()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = v1;
  objc_msgSend(v1, sel_safeAreaInsets);
  v4 = v3;

  if (v4 == 0.0)
    return;
  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v6 = v5;
  objc_msgSend(v5, sel_safeAreaInsets);

}

void sub_1B15DF6C4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  id v14;
  _QWORD *v15;
  id v16;
  char v17;

  v3 = v2;
  objc_msgSend(v2, sel_setModalPresentationStyle_, 1);
  v6 = sub_1B15DF0B4();
  v7 = objc_msgSend(v6, sel_presentationController);

  if (v7)
  {
    objc_opt_self();
    v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      v9 = (void *)v8;
      if (qword_1EEF2F8B0 != -1)
        swift_once();
      objc_msgSend(v9, sel__setCornerRadiusForPresentationAndDismissal_, *(double *)&qword_1EEF34F10);
      v10 = sub_1B15DF0B4();
      v12 = v11;
      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v12 + 24))(v9, ObjectType, v12);

    }
  }
  v14 = sub_1B15DF0B4();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v16 = v3;
  sub_1B13C4AEC(a1);
  DockContainerViewController.present(_:animated:completion:)((uint64_t)v14, 1, (uint64_t)sub_1B15E0E3C, (uint64_t)v15);

  swift_release();
  v17 = 2;
  sub_1B15DEDA8(&v17);
}

void sub_1B15DF850(uint64_t a1, void (*a2)(void))
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = sub_1B15DF0B4();
  v5 = v4;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(ObjectType, v5);

  if (a2)
    a2();
}

void sub_1B15DF8C0()
{
  sub_1B15DF6C4(0, 0);
}

void sub_1B15DF900()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = sub_1B15DF0B4();
  v3 = v2;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v0, ObjectType, v3);

}

void sub_1B15DF990(void *a1)
{
  void *v1;
  id v3;

  objc_msgSend(a1, sel_addTarget_action_forControlEvents_, v1, sel_dockedViewTapped, 64);
  if (!objc_msgSend(a1, sel_isContextMenuInteractionEnabled)
    || objc_msgSend(a1, sel_showsMenuAsPrimaryAction))
  {
    v3 = sub_1B15DFB48(v1);
    objc_msgSend(a1, sel_addGestureRecognizer_, v3);

  }
}

Swift::Void __swiftcall DockContainerViewController.configureLegacyDockGestures(on:)(UIView *on)
{
  void *v1;
  id v3;
  id v4;

  v4 = sub_1B15E0BF8(v1);
  v3 = sub_1B15E0C78(v1, (uint64_t)v4);
  OUTLINED_FUNCTION_6_12(on, sel_addGestureRecognizer_);

  -[UIView addGestureRecognizer:](on, sel_addGestureRecognizer_, v4);
}

void *sub_1B15DFA9C(uint64_t a1)
{
  void *v3;

  sub_1B16B87E0();
  objc_msgSend(v3, sel_setTransitioningDelegate_, a1);
  return v3;
}

void sub_1B15DFAFC(char a1)
{
  double v2;
  id v3;

  v3 = sub_1B13DA070();
  v2 = 0.0;
  if ((a1 & 1) != 0)
    sub_1B15DF614();
  objc_msgSend(v3, sel_setConstant_, v2);

}

id sub_1B15DFB48(void *a1)
{
  id v2;
  id v3;
  _QWORD v5[4];

  v5[3] = swift_getObjectType();
  v5[0] = a1;
  objc_allocWithZone(MEMORY[0x1E0DC39C8]);
  v2 = a1;
  v3 = sub_1B151BDE0(v5, (uint64_t)sel_dockedViewLongPressed);
  objc_msgSend(v3, sel_setDelaysTouchesBegan_, 1, v5[0]);
  return v3;
}

void DockContainerViewController.handle(command:with:)(void *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  UIView *v30;
  UIView *v31;
  uint64_t v32;
  UIView *v33;
  UIView *v34;
  double v35;
  uint64_t v36;
  id v37;
  void *v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double MaxY;
  UIView *v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double Width;
  UIView *v58;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  id v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  UIView *v75;
  id v76;
  id v77;
  uint64_t v78;
  id v79;
  void *v80;
  UIView *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;

  v3 = v2;
  v5 = *a2;
  type metadata accessor for Commands();
  if (qword_1ED185548 != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_43_21(qword_1ED185540);
  if ((v6 & 1) != 0)
  {
    if (v2[OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode])
    {
      OUTLINED_FUNCTION_36_20(v6, v7, v8, v9, v10, v11, v12, v13, 0);
      sub_1B15DFAFC(0);
      *(_QWORD *)(OUTLINED_FUNCTION_0_12() + 16) = v2;
      *(_QWORD *)(OUTLINED_FUNCTION_0_12() + 16) = v2;
      if ((v5 & 1) == 0)
      {
        sub_1B15E0810(v2);
        v75 = sub_1B15DEC10();
        -[UIView removeFromSuperview](v75, sel_removeFromSuperview);

        v76 = sub_1B15DF0B4();
        objc_msgSend(v76, sel_dismissViewControllerAnimated_completion_, 0, 0);

        swift_release();
        OUTLINED_FUNCTION_5_90();
        swift_release();
        return;
      }
      v14 = (void *)objc_opt_self();
      v15 = MEMORY[0x1E0C809B0];
      OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F00E4, MEMORY[0x1E0C809B0], 1107296256, v84, v87);
      v16 = OUTLINED_FUNCTION_34_25();
      OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_59();
      v17 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F8544, v15, 1107296256, v85, v88);
      OUTLINED_FUNCTION_83_0();
      swift_release();
      objc_msgSend(v14, sel_animateWithDuration_animations_completion_, v5, v17, 0.3);
      _Block_release(v17);
      OUTLINED_FUNCTION_26_32();
      v18 = OUTLINED_FUNCTION_27_35();
      objc_msgSend(v18, sel_dismissViewControllerAnimated_completion_, 1, 0);

      swift_release();
      goto LABEL_24;
    }
LABEL_25:
    OUTLINED_FUNCTION_5_90();
    return;
  }
  if (qword_1ED185560 != -1)
    swift_once();
  v19 = OUTLINED_FUNCTION_43_21(qword_1ED185550);
  if ((v19 & 1) != 0)
  {
    if (v2[OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode])
      goto LABEL_25;
    OUTLINED_FUNCTION_36_20(v19, v20, v21, v22, v23, v24, v25, v26, 1);
    v28 = OUTLINED_FUNCTION_32_0(v27, sel_view);
    if (v28)
    {
      v29 = v28;
      v30 = OUTLINED_FUNCTION_21_36();
      OUTLINED_FUNCTION_6_12(v29, sel_addSubview_);

      sub_1B13DA114();
      v31 = sub_1B15DEC10();
      -[UIView layoutIfNeeded](v31, sel_layoutIfNeeded);

      OUTLINED_FUNCTION_27_35();
      v32 = OUTLINED_FUNCTION_18_42();
      OUTLINED_FUNCTION_19_47(v32);

      v33 = OUTLINED_FUNCTION_21_36();
      v34 = sub_1B15DEC10();
      OUTLINED_FUNCTION_33_25(v34);
      OUTLINED_FUNCTION_29_1();
      v35 = OUTLINED_FUNCTION_17_39();
      v37 = OUTLINED_FUNCTION_32_0(v36, sel_view);
      if (v37)
      {
        v38 = v37;
        objc_msgSend(v37, sel_bounds);
        v40 = v39;
        v42 = v41;
        v44 = v43;
        v46 = v45;

        v90.origin.x = v40;
        v90.origin.y = v42;
        v90.size.width = v44;
        v90.size.height = v46;
        MaxY = CGRectGetMaxY(v90);
        v48 = OUTLINED_FUNCTION_21_36();
        OUTLINED_FUNCTION_33_25(v48);
        v50 = v49;
        v52 = v51;
        v54 = v53;
        v56 = v55;

        v91.origin.x = v50;
        v91.origin.y = v52;
        v91.size.width = v54;
        v91.size.height = v56;
        Width = CGRectGetWidth(v91);
        v58 = OUTLINED_FUNCTION_21_36();
        OUTLINED_FUNCTION_33_25(v58);
        v60 = v59;
        v62 = v61;
        v64 = v63;
        v66 = v65;

        v92.origin.x = v60;
        v92.origin.y = v62;
        v92.size.width = v64;
        v92.size.height = v66;
        -[UIView setFrame:](v33, sel_setFrame_, v35, MaxY, Width, CGRectGetHeight(v92));

        v67 = OUTLINED_FUNCTION_0_12();
        *(_QWORD *)(v67 + 16) = v3;
        if ((v5 & 1) != 0)
        {
          v68 = (void *)objc_opt_self();
          v69 = MEMORY[0x1E0C809B0];
          v70 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F00E4, MEMORY[0x1E0C809B0], 1107296256, v84, v87);
          v71 = v3;
          OUTLINED_FUNCTION_26();
          swift_release();
          *(_QWORD *)(OUTLINED_FUNCTION_0_12() + 16) = v71;
          OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F8544, v69, 1107296256, v86, v89);
          OUTLINED_FUNCTION_34_25();
          OUTLINED_FUNCTION_59();
          objc_msgSend(v68, sel_animateWithDuration_animations_completion_, v70, v67, 0.3);
          OUTLINED_FUNCTION_107();
          OUTLINED_FUNCTION_26_32();
          _Block_release(v70);
          goto LABEL_25;
        }
        v77 = v3;
        sub_1B13DA114();
        sub_1B15DFAFC(1);
        v79 = OUTLINED_FUNCTION_2_0(v78, sel_view);
        if (v79)
        {
          v80 = v79;
          objc_msgSend(v79, sel_layoutIfNeeded);

          LODWORD(v80) = *MEMORY[0x1E0DC4578];
          v81 = sub_1B15DEC10();
          UIAccessibilityPostNotification((UIAccessibilityNotifications)v80, v81);

LABEL_24:
          OUTLINED_FUNCTION_107();
          goto LABEL_25;
        }
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  if (qword_1ED185538 != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_43_21(qword_1ED185528) & 1) == 0)
    goto LABEL_25;
  v72 = v2[OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode];
  if (v72 != 1)
  {
    if (v72 != 2)
    {
      OUTLINED_FUNCTION_27_35();
      v73 = OUTLINED_FUNCTION_18_42();
      OUTLINED_FUNCTION_19_47(v73);

      v74 = OUTLINED_FUNCTION_0_12();
      swift_unknownObjectWeakInit();
      OUTLINED_FUNCTION_26();
      sub_1B15DF6C4((uint64_t)sub_1B15E0D24, v74);
      swift_release_n();
    }
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_5_90();
  sub_1B15DF6C4(v82, v83);
}

void sub_1B15E01DC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void **a5)
{
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;

  v7 = *a1;
  v8 = a3 + 16;
  OUTLINED_FUNCTION_30();
  v9 = MEMORY[0x1B5E1F2F8](v8);
  if (v9)
  {
    v10 = (void *)v9;
    if (*a4 != -1)
      swift_once();
    v11 = *a5;
    v12 = v7;
    DockContainerViewController.handle(command:with:)(v11, &v12);

  }
}

id DockContainerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void DockContainerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DockContainerViewController.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_4();
  return OUTLINED_FUNCTION_7_1((uint64_t)v8.super_class, sel_dealloc, v1, v2, v3, v4, v5, v6, v8);
}

id DockContainerViewController.animationController(forDismissed:)(void *a1)
{
  _BYTE *v1;
  void *v2;
  id result;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  double v12;
  id v13;
  SEL v14;
  UIView *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  UIView *v20;
  UIView *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  double v26;
  id v27;
  SEL v28;
  double v29;
  id v30;
  SEL v31;
  void *v32;
  UIView *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  CGRect v38;
  CGRect v39;

  if (!v1[OBJC_IVAR____TtC5TeaUI27DockContainerViewController_presentationMode])
    return 0;
  v2 = v1;
  result = OUTLINED_FUNCTION_2_0((uint64_t)a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = result;
  v6 = objc_msgSend(result, sel_window);

  if (!v6)
    return 0;
  v7 = objc_msgSend(a1, sel_presentationController);
  if (!v7
    || (v8 = v7, v9 = objc_msgSend(v7, sel_presentedView), v8, !v9))
  {

    return 0;
  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC4328]), sel_init);
  OUTLINED_FUNCTION_0_4(v10, sel_setIsReversed_);
  result = OUTLINED_FUNCTION_8_73();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(result, sel_frame);
  OUTLINED_FUNCTION_29_1();
  v11 = OUTLINED_FUNCTION_8_73();
  v12 = OUTLINED_FUNCTION_14_0();
  objc_msgSend(v13, v14, v11, v12);
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_17_39();
  sub_1B15DF580();
  v38.origin.x = OUTLINED_FUNCTION_14_0();
  CGRectGetWidth(v38);
  v39.origin.x = OUTLINED_FUNCTION_14_0();
  CGRectGetHeight(v39);
  OUTLINED_FUNCTION_24_33(v10, sel_setSourceFrame_);
  v15 = sub_1B15DEC10();
  OUTLINED_FUNCTION_24_33(v15, sel_setFrame_);

  v16 = OUTLINED_FUNCTION_27_35();
  v18 = v17;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v18 + 40))(ObjectType, v18);

  v20 = OUTLINED_FUNCTION_21_36();
  v21 = -[UIView snapshotViewAfterScreenUpdates:](v20, sel_snapshotViewAfterScreenUpdates_, 1);

  v22 = MEMORY[0x1E0C809B0];
  v23 = (_QWORD *)&unk_1B16C6000;
  if (!v21)
  {
LABEL_10:
    *(_QWORD *)(OUTLINED_FUNCTION_0_12() + 16) = v2;
    v34 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F8544, v22, v23[153], v36, v37);
    v35 = v2;
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_6_12(v10, sel_setNoninteractiveCompletion_);

    _Block_release(v34);
    return v10;
  }
  OUTLINED_FUNCTION_6_12(v9, sel_addSubview_);
  result = OUTLINED_FUNCTION_8_73();
  if (result)
  {
    v24 = result;
    objc_msgSend(result, sel_frame);
    OUTLINED_FUNCTION_13_2();

    v25 = OUTLINED_FUNCTION_8_73();
    v26 = OUTLINED_FUNCTION_14_0();
    objc_msgSend(v27, v28, v25, v26);
    OUTLINED_FUNCTION_13_2();

    v29 = OUTLINED_FUNCTION_14_0();
    objc_msgSend(v30, v31, v29);
    -[UIView setAlpha:](v21, sel_setAlpha_, 0.0);
    *(_QWORD *)(OUTLINED_FUNCTION_0_12() + 16) = v21;
    v32 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F00E4, v22, 1107296256, v36, v37);
    v33 = v21;
    v23 = &unk_1B16C6000;
    swift_release();
    objc_msgSend(v10, sel_setNoninteractiveAnimations_, v32);
    _Block_release(v32);

    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1B15E078C(char a1)
{
  char v1;

  if ((a1 & 1) != 0)
  {
    v1 = 1;
    sub_1B15DEDA8(&v1);
  }
}

void sub_1B15E0810(void *a1)
{
  UIView *v2;
  UIView *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double MinX;
  id v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double MaxY;
  UIView *v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double Width;
  UIView *v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  id v43;
  id v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v2 = sub_1B15DEC10();
  v3 = sub_1B15DEC10();
  -[UIView frame](v3, sel_frame);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v45.origin.x = v5;
  v45.origin.y = v7;
  v45.size.width = v9;
  v45.size.height = v11;
  MinX = CGRectGetMinX(v45);
  v13 = objc_msgSend(a1, sel_view);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_bounds);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v46.origin.x = v16;
    v46.origin.y = v18;
    v46.size.width = v20;
    v46.size.height = v22;
    MaxY = CGRectGetMaxY(v46);
    v24 = sub_1B15DEC10();
    -[UIView frame](v24, sel_frame);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;

    v47.origin.x = v26;
    v47.origin.y = v28;
    v47.size.width = v30;
    v47.size.height = v32;
    Width = CGRectGetWidth(v47);
    v34 = sub_1B15DEC10();
    -[UIView frame](v34, sel_frame);
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v42 = v41;

    v48.origin.x = v36;
    v48.origin.y = v38;
    v48.size.width = v40;
    v48.size.height = v42;
    -[UIView setFrame:](v2, sel_setFrame_, MinX, MaxY, Width, CGRectGetHeight(v48));

    v43 = objc_msgSend(a1, sel_view);
    if (v43)
    {
      v44 = v43;
      objc_msgSend(v43, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1B15E09D0()
{
  UIView *v0;

  v0 = sub_1B15DEC10();
  -[UIView removeFromSuperview](v0, sel_removeFromSuperview);

}

void sub_1B15E0A0C(void *a1)
{
  id v2;
  id v3;

  sub_1B13DA114();
  sub_1B15DFAFC(1);
  v2 = objc_msgSend(a1, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_layoutIfNeeded);

  }
  else
  {
    __break(1u);
  }
}

void sub_1B15E0A70()
{
  UIAccessibilityNotifications v0;
  UIView *v1;

  v0 = *MEMORY[0x1E0DC4578];
  v1 = sub_1B15DEC10();
  UIAccessibilityPostNotification(v0, v1);

}

void sub_1B15E0AB8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  UIView *v6;
  UIView *v7;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1B5E1F2F8](v1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_view);
    if (v4)
    {
      v5 = v4;
      v6 = sub_1B15DEC10();
      objc_msgSend(v5, sel_addSubview_, v6);

      sub_1B13DA114();
      sub_1B15DFAFC(1);
      v7 = sub_1B15DEC10();
      -[UIView layoutIfNeeded](v7, sel_layoutIfNeeded);

    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Bool __swiftcall DockContainerViewController.accessibilityPerformMagicTap()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1B15DF0B4();
  v3 = OUTLINED_FUNCTION_18_42();
  (*(void (**)(uint64_t, uint64_t))(v2 + 56))(v0, v3);

  return 1;
}

id sub_1B15E0BF8(void *a1)
{
  id v2;
  id v3;
  _QWORD v5[4];

  v5[3] = swift_getObjectType();
  v5[0] = a1;
  objc_allocWithZone(MEMORY[0x1E0DC39C8]);
  v2 = a1;
  v3 = sub_1B151BDE0(v5, (uint64_t)sel_dockedViewLongPressed);
  objc_msgSend(v3, sel_setDelegate_, v2, v5[0]);
  return v3;
}

id sub_1B15E0C78(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  _QWORD v7[4];

  v7[3] = type metadata accessor for DockContainerViewController();
  v7[0] = a1;
  objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v4 = a1;
  v5 = sub_1B13D4D1C(v7, (uint64_t)sel_dockedViewTapped);
  objc_msgSend(v5, sel_requireGestureRecognizerToFail_, a2, v7[0]);
  return v5;
}

Swift::Bool __swiftcall DockContainerViewController.gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)(UIGestureRecognizer _, UIGestureRecognizer shouldRecognizeSimultaneouslyWith)
{
  return 0;
}

uint64_t sub_1B15E0D08()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B15E0D24()
{
  uint64_t v0;

  sub_1B15E0AB8(v0);
}

uint64_t sub_1B15E0D2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B15E0D48()
{
  uint64_t v0;

  sub_1B15E0A0C(*(void **)(v0 + 16));
}

void sub_1B15E0D50()
{
  sub_1B15E0A70();
}

void sub_1B15E0D58()
{
  uint64_t v0;

  sub_1B15E0810(*(void **)(v0 + 16));
}

void sub_1B15E0D60()
{
  sub_1B15E09D0();
}

void sub_1B15E0D68(char a1)
{
  sub_1B15E078C(a1);
}

void sub_1B15E0D70(_QWORD *a1@<X8>)
{
  uint64_t v2;

  DockContainerViewController.rootViewController.getter();
  *a1 = v2;
}

uint64_t method lookup function for DockContainerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DockContainerViewController.__allocating_init(rootViewController:lazyDockableViewController:commandCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1B15E0DB0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

unint64_t sub_1B15E0DCC()
{
  unint64_t result;

  result = qword_1EEF34FC0[0];
  if (!qword_1EEF34FC0[0])
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for DockablePresentationMode, &type metadata for DockablePresentationMode);
    atomic_store(result, qword_1EEF34FC0);
  }
  return result;
}

uint64_t sub_1B15E0E08()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1B15E0E3C()
{
  uint64_t v0;

  sub_1B15DF850(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_1B15E0E48(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B15E01DC(a1, a2, v2, &qword_1ED185548, (void **)&qword_1ED185540);
}

void sub_1B15E0E78(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B15E01DC(a1, a2, v2, &qword_1ED185560, (void **)&qword_1ED185550);
}

void sub_1B15E0EA8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B15E01DC(a1, a2, v2, &qword_1ED185538, (void **)&qword_1ED185528);
}

uint64_t BlueprintLayoutCollectionPipelineProcessor.__allocating_init(layoutConfig:layoutBuilder:layoutCollectionFactory:layoutTransitionManager:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_104();
  BlueprintLayoutCollectionPipelineProcessor.init(layoutConfig:layoutBuilder:layoutCollectionFactory:layoutTransitionManager:)(a1, a2, a3, a4);
  return v8;
}

uint64_t *BlueprintLayoutCollectionPipelineProcessor.init(layoutConfig:layoutBuilder:layoutCollectionFactory:layoutTransitionManager:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v6 = *v4;
  v7 = *a1;
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 152)) = MEMORY[0x1E0DEE9D8];
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 160)) = MEMORY[0x1E0DEE9E8];
  *((_BYTE *)v4 + *(_QWORD *)(*v4 + 168)) = v7;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 88) - 8) + 32))((uint64_t)v4 + *(_QWORD *)(*v4 + 128));
  OUTLINED_FUNCTION_9_74((uint64_t)v4 + *(_QWORD *)(*v4 + 136), v8, *(_QWORD *)(v6 + 96));
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 144)) = a4;
  return v4;
}

void BlueprintLayoutCollectionPipelineProcessor.__allocating_init(layoutProvider:layoutOptionsProvider:layoutBuilder:layoutCollectionFactory:layoutCollectionProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_104();
  BlueprintLayoutCollectionPipelineProcessor.init(layoutProvider:layoutOptionsProvider:layoutBuilder:layoutCollectionFactory:layoutCollectionProvider:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_27();
}

uint64_t *BlueprintLayoutCollectionPipelineProcessor.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 128), *(_QWORD *)(*v0 + 88));
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 136), *(_QWORD *)(v1 + 96));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintLayoutCollectionPipelineProcessor.__deallocating_deinit()
{
  BlueprintLayoutCollectionPipelineProcessor.deinit();
  return swift_deallocClassInstance();
}

_QWORD *sub_1B15E1104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  void (*v3)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  int64_t v9;
  _QWORD v11[66];
  _BYTE __dst[528];
  _QWORD __src[66];

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144)) + 24);
  ObjectType = swift_getObjectType();
  v3 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v1 + 8);
  swift_unknownObjectRetain();
  v3(__src, ObjectType, v1);
  swift_unknownObjectRelease();
  v4 = (void *)__src[16];
  sub_1B1424D1C((uint64_t)__src);
  if (!objc_msgSend(v4, sel_horizontalSizeClass))
  {
    sub_1B1417ADC((uint64_t)__src);
    goto LABEL_8;
  }
  v5 = objc_msgSend(v4, sel_verticalSizeClass);
  sub_1B1417ADC((uint64_t)__src);
  if (!v5)
  {
LABEL_8:
    sub_1B1417ADC((uint64_t)__src);
    return 0;
  }
  sub_1B13A1818(0, (unint64_t *)&qword_1ED1837C8);
  static UIWindowScene.activeScene.getter();
  if (!v6
    || (v7 = v6, v8 = objc_msgSend(v6, sel_traitCollection), v7, !v8))
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  }
  memcpy(__dst, __src, 0x20DuLL);
  memcpy(v11, __src, 0x20DuLL);
  sub_1B1424D1C((uint64_t)__src);
  v9 = sub_1B15E28FC(v11);
  sub_1B1417ADC((uint64_t)__src);
  type metadata accessor for BlueprintLayoutCollectionPipelineProcessorState();
  swift_allocObject();
  return sub_1B160AE18(__dst, v9, (uint64_t)v8);
}

void sub_1B15E12A4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

_QWORD *(*sub_1B15E1A40())()
{
  swift_retain();
  return sub_1B15E3C58;
}

void sub_1B15E1A70(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1E0C80A78](a1, a2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintLayoutSection();
}

uint64_t sub_1B15E226C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  double v9;
  void *v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD __src[66];
  _QWORD __dst[66];
  _QWORD v24[66];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v6 = *(_QWORD *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 144));
    swift_retain();
    swift_release();
    v7 = *(_QWORD *)(v6 + 24);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8))(__src, ObjectType, v7);
    swift_unknownObjectRelease();
    memcpy(__dst, __src, 0x20DuLL);
    memcpy(v24, (const void *)(a4 + 1776), 0x20DuLL);
    v9 = *(double *)&v24[1];
    v10 = (void *)v24[16];
    v11 = *(double *)&__dst[1];
    v12 = (void *)__dst[16];
    sub_1B1424D1C((uint64_t)v24);
    v13 = objc_msgSend(v10, sel_horizontalSizeClass);
    v14 = objc_msgSend(v12, sel_horizontalSizeClass);
    sub_1B1417ADC((uint64_t)v24);
    v15 = v13 == v14 && v9 == v11;
    if (!v15
      || (*(double *)&v24[21] == *(double *)&__dst[21]
        ? (v16 = *(double *)&v24[23] == *(double *)&__dst[23])
        : (v16 = 0),
          !v16))
    {
      __src[0] = 0;
      __src[1] = 0xE000000000000000;
      sub_1B16BA574();
      swift_bridgeObjectRelease();
      __src[0] = 0xD000000000000029;
      __src[1] = 0x80000001B16F1790;
      sub_1B16B9D10();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      sub_1B16B9D10();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      v17 = __src[0];
      v18 = __src[1];
      sub_1B154F5F8();
      swift_allocError();
      *(_QWORD *)v19 = v17;
      *(_QWORD *)(v19 + 8) = v18;
      *(_BYTE *)(v19 + 16) = 1;
      swift_willThrow();
    }
    return sub_1B1417ADC((uint64_t)__dst);
  }
  else
  {
    sub_1B154F5F8();
    swift_allocError();
    *(_QWORD *)v21 = 0;
    *(_QWORD *)(v21 + 8) = 0;
    *(_BYTE *)(v21 + 16) = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1B15E24B4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1B15094A8(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B15E2538()
{
  sub_1B15E3BD0(0, (unint64_t *)&qword_1ED186080, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1B16B8A2C();
}

void sub_1B15E25A8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7)
{
  void *v10;
  uint64_t v11;
  _BYTE __dst[528];

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    objc_msgSend((id)objc_opt_self(), sel_setCurrentTraitCollection_, a6[16]);
    memcpy(__dst, a6, 0x20DuLL);
    sub_1B15E1A70(a7, (uint64_t)__dst);
  }
  sub_1B154F5F8();
  v10 = (void *)swift_allocError();
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 2;
  a3();

}

uint64_t sub_1B15E26D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, const void *a4@<X3>, const void *a5@<X4>, void (**a6)()@<X8>)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, _BYTE *, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  _BYTE v28[528];
  _BYTE __dst[1184];

  v8 = a1[4];
  v24 = a1[3];
  v22 = v8;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  memcpy(__dst, a4, 0x498uLL);
  memcpy(v28, a5, 0x20DuLL);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, _BYTE *, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = v10;
  v14 = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedConformanceWitness();
  v17 = v23(a2, a3, __dst, v28, AssociatedTypeWitness, v13, v11, v12, AssociatedConformanceWitness, v14, v15, v16, v24, v22);
  v19 = v18;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v17;
  *(_QWORD *)(result + 24) = v19;
  *a6 = sub_1B140AA30;
  a6[1] = (void (*)())result;
  return result;
}

int64_t sub_1B15E28FC(_QWORD *a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  _BYTE v13[501];

  if ((*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168)) & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v3 = v1;
  v5 = a1[1];
  v4 = a1[2];
  v12[0] = *a1;
  v12[1] = v5;
  v12[2] = v4;
  memcpy(v13, a1 + 3, sizeof(v13));
  v6 = sub_1B1658BFC((uint64_t)v12);
  v7 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 160));
  swift_beginAccess();
  sub_1B15E2A48(v6);
  swift_endAccess();
  v8 = *v7;
  sub_1B1404A04(0, (unint64_t *)&unk_1ED1873A0, type metadata accessor for CGSize);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B16C51D0;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v4;
  sub_1B16B9740();
  v10 = sub_1B15E3058(v9, v8);
  swift_setDeallocating();
  swift_deallocClassInstance();
  v2 = sub_1B15A8D50((void (*)(_QWORD *__return_ptr, __int128 *))sub_1B15E32F4, v3, v10);
  swift_release();
  return v2;
}

uint64_t sub_1B15E2A48(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  __int128 v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v2 << 6); ; i = __clz(__rbit64(v11)) + (v2 << 6))
  {
    result = sub_1B14D274C(&v13, *(double *)(*(_QWORD *)(v1 + 48) + 16 * i), *(double *)(*(_QWORD *)(v1 + 48) + 16 * i + 8));
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B15E2B98(double *a1, uint64_t a2)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(char *, uint64_t, uint64_t, double, double, double, double);
  char v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 144)) + 24);
  ObjectType = swift_getObjectType();
  v8 = 2;
  v6 = *(void (**)(char *, uint64_t, uint64_t, double, double, double, double))(v4 + 40);
  swift_unknownObjectRetain();
  v6(&v8, ObjectType, v4, 0.0, 0.0, v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B15E2C38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15E2C5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1B15E2C84()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B15E2CA4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t method lookup function for BlueprintLayoutCollectionPipelineProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionPipelineProcessor.__allocating_init(layoutConfig:layoutBuilder:layoutCollectionFactory:layoutTransitionManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionPipelineProcessor.__allocating_init(layoutProvider:layoutOptionsProvider:layoutBuilder:layoutCollectionFactory:layoutCollectionProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_1B15E2CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t isStackAllocationSafe;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = a2;
  v47 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_0_9();
    return MEMORY[0x1E0DEE9E8];
  }
  v4 = *(_QWORD *)(a1 + 56);
  v46 = a1 + 56;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  v44 = ~v5;
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v45 = (unint64_t)(63 - v5) >> 6;
  v8 = (void *)(a2 + 56);
  sub_1B16B9740();
  v9 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v22 = *v20;
    v21 = v20[1];
    sub_1B16BAA48();
    sub_1B16B9740();
    sub_1B16B98FC();
    v23 = sub_1B16BAA78();
    v24 = -1 << *(_BYTE *)(v2 + 32);
    v25 = v23 & ~v24;
    OUTLINED_FUNCTION_18_43();
    if ((v26 & 1) != 0)
      break;
LABEL_41:
    OUTLINED_FUNCTION_98();
    if (v7)
      goto LABEL_6;
LABEL_7:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v12 >= v45)
      goto LABEL_53;
    v13 = *(_QWORD *)(v46 + 8 * v12);
    v14 = v9 + 1;
    if (!v13)
    {
      OUTLINED_FUNCTION_20_44();
      if (v15 == v16)
        goto LABEL_53;
      OUTLINED_FUNCTION_19_48();
      if (!v13)
      {
        OUTLINED_FUNCTION_20_44();
        if (v15 == v16)
          goto LABEL_53;
        OUTLINED_FUNCTION_19_48();
        if (!v13)
        {
          OUTLINED_FUNCTION_20_44();
          if (v15 == v16)
            goto LABEL_53;
          OUTLINED_FUNCTION_19_48();
          if (!v13)
          {
            v18 = v17 + 4;
            if (v18 >= v45)
            {
LABEL_53:
              sub_1B1488298();
              return v2;
            }
            v13 = *(_QWORD *)(v46 + 8 * v18);
            if (!v13)
            {
              while (!__OFADD__(v18, 1))
              {
                OUTLINED_FUNCTION_20_44();
                if (v15 == v16)
                  goto LABEL_53;
                OUTLINED_FUNCTION_19_48();
                v18 = v19 + 1;
                if (v13)
                  goto LABEL_26;
              }
LABEL_55:
              __break(1u);
            }
            v14 = v18;
          }
        }
      }
    }
LABEL_26:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v9 = v14;
  }
  v27 = *(_QWORD *)(v2 + 48);
  v28 = (uint64_t *)(v27 + 16 * v25);
  v29 = v28[1];
  v30 = *v28 == v22 && v29 == v21;
  if (v30 || (OUTLINED_FUNCTION_11_53(*v28, v29) & 1) != 0)
  {
    OUTLINED_FUNCTION_98();
    OUTLINED_FUNCTION_13_53();
  }
  else
  {
    v31 = ~v24;
    do
    {
      v25 = (v25 + 1) & v31;
      OUTLINED_FUNCTION_18_43();
      if ((v32 & 1) == 0)
        goto LABEL_41;
      v33 = (uint64_t *)(v27 + 16 * v25);
      v34 = v33[1];
      v35 = *v33 == v22 && v34 == v21;
    }
    while (!v35 && (OUTLINED_FUNCTION_11_53(*v33, v34) & 1) == 0);
    OUTLINED_FUNCTION_13_53();
    isStackAllocationSafe = OUTLINED_FUNCTION_98();
  }
  v38 = *(_BYTE *)(v2 + 32);
  v39 = 8 * ((unint64_t)((1 << v38) + 63) >> 6);
  if ((v38 & 0x3Fu) >= 0xE)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (!(_DWORD)isStackAllocationSafe)
    {
      v42 = (void *)swift_slowAlloc();
      OUTLINED_FUNCTION_16_51(v42);
      OUTLINED_FUNCTION_2_113();
      OUTLINED_FUNCTION_0_9();
      if (v2 == -56)
      {
        OUTLINED_FUNCTION_8_74();
        OUTLINED_FUNCTION_7_77();
      }
LABEL_57:

      OUTLINED_FUNCTION_7_77();
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe, v37);
  OUTLINED_FUNCTION_16_51((char *)&v44 - ((v39 + 15) & 0x3FFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_2_113();
  v41 = v40;
  OUTLINED_FUNCTION_0_9();
  if (v2 != -56)
  {
    swift_willThrow();

    __break(1u);
    goto LABEL_57;
  }
  OUTLINED_FUNCTION_8_74();
  return v41;
}

uint64_t sub_1B15E3058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double *v13;
  unint64_t v15;
  size_t v16;
  uint64_t isStackAllocationSafe;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _BYTE v26[16];
  _QWORD v27[3];

  v2 = a2;
  v27[2] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v27[0] = a1;
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
    {
      v5 = 0;
      v6 = a2 + 56;
      while (1)
      {
        v7 = (double *)(a1 + 32 + 16 * v5);
        v8 = *v7;
        v9 = v7[1];
        ++v5;
        sub_1B16BAA48();
        sub_1B16BAA6C();
        sub_1B16BAA6C();
        v10 = sub_1B16BAA78();
        v11 = -1 << *(_BYTE *)(v2 + 32);
        v12 = v10 & ~v11;
        if (((*(_QWORD *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          break;
LABEL_10:
        if (v5 == v4)
          return v2;
      }
      while (1)
      {
        v13 = (double *)(*(_QWORD *)(v2 + 48) + 16 * v12);
        if (*v13 == v8 && v13[1] == v9)
          break;
        v12 = (v12 + 1) & ~v11;
        if (((*(_QWORD *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_10;
      }
      v27[1] = v5;
      v15 = (unint64_t)(63 - v11) >> 6;
      v16 = 8 * v15;
      isStackAllocationSafe = sub_1B16B9740();
      if (v15 <= 0x80 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
      {
        MEMORY[0x1E0C80A78](isStackAllocationSafe, v18);
        v20 = (unint64_t *)&v26[-v19];
        memcpy(&v26[-v19], (const void *)(v2 + 56), v16);
        sub_1B15E3600(v20, v15, v2, v12, v27);
        v22 = v21;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        v23 = (void *)swift_slowAlloc();
        memcpy(v23, (const void *)(v2 + 56), v16);
        sub_1B15E3600((unint64_t *)v23, v15, v2, v12, v27);
        v22 = v24;
        swift_release();
        swift_bridgeObjectRelease();
        MEMORY[0x1B5E1F1FC](v23, -1, -1);
      }
      return v22;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1B15E32F4(double *a1)
{
  uint64_t v1;

  return sub_1B15E2B98(a1, v1);
}

void sub_1B15E3310(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t i;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  int64_t v38;
  uint64_t v40;
  uint64_t v42;

  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v42 = a3 + 56;
  while (2)
  {
    v40 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_15;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_46;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_46;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_46;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_14;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_46;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_46;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v38 = v9 + 6;
                while (v38 < v14)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v38++);
                  if (v17)
                  {
                    v13 = v38 - 1;
                    goto LABEL_14;
                  }
                }
                v15 = v14 - 1;
LABEL_46:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                sub_1B15C3AD8(a1, a2, v40, a3);
                return;
              }
              goto LABEL_14;
            }
          }
          v13 = v18;
        }
LABEL_14:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_15:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1B16BAA48();
        sub_1B16B9740();
        sub_1B16B98FC();
        v22 = sub_1B16BAA78();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v42 + 8 * (v24 >> 6))) == 0)
          goto LABEL_32;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = v28[1];
        v30 = *v28 == v21 && v29 == v20;
        if (v30 || (sub_1B16BA910(*v28, v29, v21, v20, 0) & 1) != 0)
          break;
        v32 = ~v23;
        for (i = v24 + 1; ; i = v34 + 1)
        {
          v34 = i & v32;
          if (((*(_QWORD *)(v42 + (((i & v32) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v32)) & 1) == 0)
            break;
          v35 = (_QWORD *)(v27 + 16 * v34);
          v36 = v35[1];
          v37 = *v35 == v21 && v36 == v20;
          if (v37 || (sub_1B16BA910(*v35, v36, v21, v20, 0) & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v25 = v34 >> 6;
            v26 = 1 << v34;
            goto LABEL_22;
          }
        }
LABEL_32:
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_22:
      v31 = a1[v25];
      a1[v25] = v31 & ~v26;
    }
    while ((v26 & v31) == 0);
    v8 = v40 - 1;
    if (__OFSUB__(v40, 1))
    {
LABEL_48:
      __break(1u);
      return;
    }
    if (v40 != 1)
      continue;
    break;
  }
}

void sub_1B15E3600(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  double *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v8 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v11 = *a5;
  v10 = a5[1];
  v12 = *(_QWORD *)(*a5 + 16);
  if (v10 == v12)
  {
LABEL_17:
    swift_retain();
    sub_1B15C3D24(a1, a2, v9, a3);
  }
  else
  {
    v14 = a3 + 56;
    while ((v10 & 0x8000000000000000) == 0)
    {
      if (v10 >= v12)
        goto LABEL_20;
      v15 = v11 + 16 * v10;
      v16 = *(double *)(v15 + 32);
      v17 = *(double *)(v15 + 40);
      a5[1] = v10 + 1;
      sub_1B16BAA48();
      sub_1B16BAA6C();
      sub_1B16BAA6C();
      v18 = sub_1B16BAA78();
      v19 = -1 << *(_BYTE *)(a3 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v14 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
      {
        v21 = ~v19;
        while (1)
        {
          v22 = (double *)(*(_QWORD *)(a3 + 48) + 16 * v20);
          if (*v22 == v16 && v22[1] == v17)
            break;
          v20 = (v20 + 1) & v21;
          if (((*(_QWORD *)(v14 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            goto LABEL_16;
        }
        v24 = (v20 >> 3) & 0x1FFFFFFFFFFFFFF8;
        v25 = 1 << v20;
        v26 = *(unint64_t *)((char *)a1 + v24);
        *(unint64_t *)((char *)a1 + v24) = v26 & ~v25;
        if ((v26 & v25) != 0)
        {
          if (__OFSUB__(v9--, 1))
            goto LABEL_21;
          if (!v9)
            return;
        }
      }
LABEL_16:
      v11 = *a5;
      v10 = a5[1];
      v12 = *(_QWORD *)(*a5 + 16);
      if (v10 == v12)
        goto LABEL_17;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
}

uint64_t sub_1B15E37C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15E37EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B15E226C(a1, a2, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t objectdestroy_5Tm_3()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15E384C()
{
  uint64_t v0;

  return sub_1B15E24B4(*(_QWORD *)(v0 + 64), *(uint64_t **)(v0 + 72));
}

void sub_1B15E3860()
{
  OUTLINED_FUNCTION_5_91();
  OUTLINED_FUNCTION_5_91();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B15E3904(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v2 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 597) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();

  sub_1B14262CC(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312), *(_BYTE *)(v1 + 320));
  sub_1B14262CC(*(_QWORD *)(v1 + 328), *(_QWORD *)(v1 + 336), *(_BYTE *)(v1 + 344));
  sub_1B14262CC(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360), *(_BYTE *)(v1 + 368));
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v2 + 40))
    __swift_destroy_boxed_opaque_existential_1(v1 + v2 + 16);
  type metadata accessor for BlueprintSection();
}

void sub_1B15E39B4()
{
  OUTLINED_FUNCTION_10_5();
}

void sub_1B15E39C4()
{
  OUTLINED_FUNCTION_10_5();
}

void sub_1B15E39D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B16B848C();
  OUTLINED_FUNCTION_56_0(v2);
  type metadata accessor for BlueprintItem(255, v0, v1, v3);
  OUTLINED_FUNCTION_10_5();
}

void sub_1B15E3A18()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v0);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v0);
  v1 = sub_1B16B875C();
  OUTLINED_FUNCTION_56_0(v1);
  swift_release();
  swift_release();
  swift_deallocObject();
  OUTLINED_FUNCTION_0_11();
}

void sub_1B15E3A8C()
{
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_84_1();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

uint64_t sub_1B15E3B34()
{
  return sub_1B15E2538();
}

void sub_1B15E3B9C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1B15E25A8(a1, a2, a3, a4, *(_QWORD *)(v4 + 64), *(_QWORD **)(v4 + 72), *(_QWORD *)(v4 + 80));
}

void sub_1B15E3BD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(a1, MEMORY[0x1E0DEE9C0] + 8);
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15E3C18@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v2;

  return sub_1B15E26D4(a1, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(const void **)(v2 + 80), *(const void **)(v2 + 88), a2);
}

uint64_t AnyNavigator.init<A>(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t (*v8)();
  uint64_t (*v9)();
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, __int128 *);
  uint64_t (*v16)();
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t (*v23)();
  uint64_t (*v24)();
  uint64_t result;

  v8 = sub_1B15E3CF8(a1, a2, a3, a4);
  v10 = v9;
  v11 = OUTLINED_FUNCTION_1_133();
  v15 = sub_1B15E3DC0(v11, v12, v13, v14);
  v17 = v16;
  v18 = OUTLINED_FUNCTION_1_133();
  v22 = sub_1B15E3ED0(v18, v19, v20, v21);
  v24 = v23;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  *a5 = v8;
  a5[1] = v10;
  a5[2] = (uint64_t (*)())v15;
  a5[3] = v17;
  a5[4] = v22;
  a5[5] = v24;
  return result;
}

uint64_t (*sub_1B15E3CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_1B15E4218;
}

uint64_t (*sub_1B15E3DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, __int128 *a2)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_1B15E41E4;
}

uint64_t sub_1B15E3E88(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  __int128 v8;
  char v9;

  v6 = *((_BYTE *)a2 + 16);
  v8 = *a2;
  v9 = v6;
  return (*(uint64_t (**)(uint64_t, __int128 *, uint64_t, uint64_t))(a6 + 32))(a1, &v8, a5, a6);
}

uint64_t (*sub_1B15E3ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_1B15E41BC;
}

uint64_t AnyNavigator.navigate(to:metadata:context:setup:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t AnyNavigator.navigate(to:with:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t, __int128 *);
  __int128 v6;
  char v7;

  v3 = *((_BYTE *)a2 + 16);
  v4 = *(uint64_t (**)(uint64_t, __int128 *))(v2 + 16);
  v6 = *a2;
  v7 = v3;
  return v4(a1, &v6);
}

uint64_t AnyNavigator.preview(for:metadata:context:setup:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1B15E4014(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1B15E401C()
{
  return AnyNavigator.navigate(to:metadata:context:setup:)();
}

uint64_t sub_1B15E4030(uint64_t a1, __int128 *a2)
{
  return AnyNavigator.navigate(to:with:)(a1, a2);
}

uint64_t sub_1B15E4044()
{
  return AnyNavigator.preview(for:metadata:context:setup:)();
}

uint64_t sub_1B15E4058()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B15E4088(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1B15E40F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1B15E4164(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t sub_1B15E41BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_156();
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1B15E41E4(uint64_t a1, __int128 *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2[3];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1B15E3E88(a1, a2, (uint64_t)v2 + ((v4 + 40) & ~v4), v2[2], v3, v2[4]);
}

uint64_t sub_1B15E4218()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_156();
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t dispatch thunk of SectionViewControllerDataSource.numberOfSections(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SectionViewControllerDataSource.sectionViewController(_:titleForSectionAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SectionViewControllerDataSource.sectionViewController(_:viewControllerForSectionAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

BOOL static CardSplitViewFocus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CardSplitViewFocus.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t CardSplitViewFocus.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B15E42E8()
{
  unint64_t result;

  result = qword_1EEF35038;
  if (!qword_1EEF35038)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardSplitViewFocus, &type metadata for CardSplitViewFocus);
    atomic_store(result, (unint64_t *)&qword_1EEF35038);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CardSplitViewFocus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15E4370 + 4 * byte_1B16D77E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15E43A4 + 4 * asc_1B16D77E0[v4]))();
}

uint64_t sub_1B15E43A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E43AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15E43B4);
  return result;
}

uint64_t sub_1B15E43C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15E43C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15E43CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E43D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardSplitViewFocus()
{
  return &type metadata for CardSplitViewFocus;
}

uint64_t sub_1B15E43F0(uint64_t a1)
{
  return sub_1B145C2E0(a1, (void (*)(_QWORD))sub_1B145D614, MEMORY[0x1E0DB3F58]);
}

uint64_t sub_1B15E4404(uint64_t a1)
{
  return sub_1B15E441C(a1, (void (*)(_QWORD))type metadata accessor for ShortcutItemHandlerManager);
}

uint64_t sub_1B15E4410(uint64_t a1)
{
  return sub_1B15E441C(a1, (void (*)(_QWORD))type metadata accessor for UserActivityHandlerManager);
}

uint64_t sub_1B15E441C(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t result;

  a2(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1B15E444C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NoopShareMenuItemManager();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for NoopShareMenuItemManager;
  *a1 = result;
  return result;
}

uint64_t sub_1B15E4490()
{
  type metadata accessor for TipManager();
  swift_allocObject();
  return TipManager.init()();
}

uint64_t sub_1B15E44C4(__int128 *a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;

  v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TipManager();
  result = sub_1B16B81E0();
  if (result)
  {
    *(_OWORD *)(result + 48) = v3;
    swift_unknownObjectRetain();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B15E455C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TipManager();
  result = sub_1B16B81E0();
  if (result)
  {
    v2 = result;
    type metadata accessor for TipSourceManager();
    v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v3 + 24) = v2;
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Accessibility.Notifications.blockNotification(_:forInterval:)(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v4 = sub_1B16B95D8();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B16B9620();
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B16B9644();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v18);
  v20 = (char *)&v27 - v19;
  TSAccessibilityBlockPostingOfNotification(a1);
  sub_1B1404978();
  v21 = (void *)sub_1B16BA0DC();
  sub_1B16B9638();
  MEMORY[0x1B5E1CFF4](v17, a2);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v17, v12);
  v23 = swift_allocObject();
  *(_DWORD *)(v23 + 16) = a1;
  aBlock[4] = sub_1B15E48E0;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = &block_descriptor_62;
  v24 = _Block_copy(aBlock);
  swift_release();
  sub_1B16B95F0();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13AD67C((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED183708, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B149AF40();
  sub_1B16BA448();
  MEMORY[0x1B5E1DA50](v20, v11, v7, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  return ((uint64_t (*)(char *, uint64_t))v22)(v20, v12);
}

id static Accessibility.Color.adjustedColor(for:against:contrastFactor:)(void *a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned __int8 v4;
  unsigned __int8 v7;

  v4 = *a3;
  if (!UIAccessibilityDarkerSystemColorsEnabled())
    return a1;
  v7 = v4;
  return sub_1B15E497C((uint64_t)a1, a2, &v7);
}

uint64_t sub_1B15E48D0()
{
  return swift_deallocObject();
}

uint64_t sub_1B15E48E0()
{
  uint64_t v0;

  return TSAccessibilityUnblockPostingOfNotification(*(unsigned int *)(v0 + 16));
}

void Accessibility.Color.ContrastFactor.init(rawValue:)(char *a1@<X8>, double a2@<D0>)
{
  char v2;

  if (a2 == 0.5)
    v2 = 1;
  else
    v2 = 2;
  if (a2 == 0.8)
    v2 = 0;
  *a1 = v2;
}

double Accessibility.Color.ContrastFactor.rawValue.getter()
{
  _BYTE *v0;
  double result;

  result = 0.8;
  if (*v0)
    return 0.5;
  return result;
}

BOOL sub_1B15E492C(char *a1, char *a2)
{
  return sub_1B14ABA30(*a1, *a2);
}

void sub_1B15E4938()
{
  sub_1B1679314();
}

void sub_1B15E4940()
{
  sub_1B149F058();
}

void sub_1B15E4948()
{
  sub_1B1679930();
}

void sub_1B15E4950(double *a1@<X0>, char *a2@<X8>)
{
  Accessibility.Color.ContrastFactor.init(rawValue:)(a2, *a1);
}

void sub_1B15E4958(double *a1@<X8>)
{
  *a1 = Accessibility.Color.ContrastFactor.rawValue.getter();
}

id sub_1B15E497C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  double v93;
  char v94;
  _BYTE v95[16];
  double v96;
  char v97;
  _BYTE v98[40];

  v3 = *a3;
  UIColor.getHSBA()((uint64_t)&v77);
  sub_1B15E4C88((uint64_t)&v77, (uint64_t)v95);
  sub_1B15E4C88((uint64_t)&v77, (uint64_t)v98);
  if (v98[32])
    v4 = 0.0;
  else
    v4 = v96;
  UIColor.getHSBA()((uint64_t)&v82);
  OUTLINED_FUNCTION_2_115((uint64_t)&v82, v5, v6, v7, v8, v9, v10, v11, v45, v49, v55, v61, v67, v73, v77, v78, v79, v80, v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92);
  v12 = sub_1B15E4C88((uint64_t)&v82, (uint64_t)v95);
  if ((v97 & 1) != 0)
  {
    if (v4 <= 0.0)
    {
LABEL_6:
      v20 = OUTLINED_FUNCTION_1_135(v12, v13, v14, v15, v16, v17, v18, v19, v46, v50, v56, v62, v68, v74, v77, v78);
      OUTLINED_FUNCTION_6_94((uint64_t)v20);
      OUTLINED_FUNCTION_2_115((uint64_t)&v87, v21, v22, v23, v24, v25, v26, v27, v47, v51, v57, v63, v69, v75, v77, v78, v79, v80, v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92);
      if ((v94 & 1) != 0)
      {
        v28 = 0.0;
        v29 = 1.0;
        v30 = 0.0;
        v31 = 0.0;
      }
      else
      {
        v31 = v52;
        v30 = v58;
        v28 = v64;
        v29 = v70;
      }
      v42 = 0.8;
      if (v3)
        v42 = 0.5;
      v43 = v42 * v28;
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v31, v30, v43, v29);
    }
  }
  else if (v93 >= v4)
  {
    goto LABEL_6;
  }
  v32 = OUTLINED_FUNCTION_1_135(v12, v13, v14, v15, v16, v17, v18, v19, v46, v50, v56, v62, v68, v74, v77, v78);
  OUTLINED_FUNCTION_6_94((uint64_t)v32);
  OUTLINED_FUNCTION_2_115((uint64_t)&v87, v33, v34, v35, v36, v37, v38, v39, v48, v53, v59, v65, v71, v76, v77, v78, v79, v80, v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92);
  v29 = 1.0;
  v40 = 1.0;
  v30 = 1.0;
  v31 = 1.0;
  if ((v94 & 1) == 0)
  {
    v31 = v54;
    v30 = v60;
    v40 = v66;
    v29 = v72;
  }
  if ((v3 & 1) != 0)
    v41 = v40 + v40;
  else
    v41 = v40 / 0.8;
  v43 = fmin(v41, 1.0);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v31, v30, v43, v29);
}

BOOL static Accessibility.shouldAlwaysShowHoverUI.getter()
{
  if (TSAccessibilityIsAutomationEnabled())
    return 0;
  if (UIAccessibilityIsVoiceOverRunning()
    || UIAccessibilityIsSwitchControlRunning()
    || TSAccessibilityIsVoiceControlEnabled())
  {
    return 1;
  }
  return TSAccessibilityIsFullKeyboardAccessEnabled();
}

unint64_t sub_1B15E4B4C()
{
  unint64_t result;

  result = qword_1EEF35040;
  if (!qword_1EEF35040)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for Accessibility.Color.ContrastFactor, &type metadata for Accessibility.Color.ContrastFactor);
    atomic_store(result, (unint64_t *)&qword_1EEF35040);
  }
  return result;
}

uint64_t dispatch thunk of AXExposable.accessibleForAX.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void type metadata accessor for Accessibility()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for Accessibility.Strings()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for Accessibility.Notifications()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for Accessibility.Color()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t storeEnumTagSinglePayload for Accessibility.Color.ContrastFactor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15E4C0C + 4 * byte_1B16D78BD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15E4C40 + 4 * byte_1B16D78B8[v4]))();
}

uint64_t sub_1B15E4C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E4C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15E4C50);
  return result;
}

uint64_t sub_1B15E4C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15E4C64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15E4C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E4C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Accessibility.Color.ContrastFactor()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B15E4C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DE5B0(0, &qword_1EEF35048, (uint64_t (*)(uint64_t))sub_1B15E4CE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B15E4CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t TupleTypeMetadata;
  uint64_t v4;

  v2 = qword_1EEF35050;
  if (!qword_1EEF35050)
  {
    MEMORY[0x1E0C80A78](a1, a2);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v2 = TupleTypeMetadata;
    if (!v4)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EEF35050);
  }
  return v2;
}

uint64_t dispatch thunk of DynamicMenuGroupProviderType.needsUpdate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DynamicMenuGroupProviderType.menuGroup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id MastheadNavigationBarCompressionAnimator.shouldCloseGapOnScroll.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_shouldCloseGapOnScroll);
}

id MastheadNavigationBarCompressionAnimator.shouldCompressAtTop.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_shouldCompressAtTop);
}

id MastheadNavigationBarCompressionAnimator.topOffset.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_topOffset);
}

id MastheadNavigationBarCompressionAnimator.__allocating_init(navigationBar:scrollView:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return MastheadNavigationBarCompressionAnimator.init(navigationBar:scrollView:)(a1, a2);
}

id MastheadNavigationBarCompressionAnimator.init(navigationBar:scrollView:)(void *a1, void *a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = objc_allocWithZone((Class)TUNavigationBarDefaultCompressionAnimation);
  v8 = v3;
  v9 = objc_msgSend(v7, sel_initWithNavigationBar_, a1);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator] = v9;
  objc_msgSend(v9, sel_setHideTitleOnTop_, 1);
  objc_msgSend(v9, sel_setTranslationOffset_, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_scrollView] = a2;
  v10 = a2;

  v13.receiver = v8;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

Swift::Void __swiftcall MastheadNavigationBarCompressionAnimator.prepareForUpdates()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_prepareForUpdates);
}

id MastheadNavigationBarCompressionAnimator.update(withPercentage:)(double a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  _BOOL8 v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;

  OUTLINED_FUNCTION_2_116();
  v4 = v3;
  OUTLINED_FUNCTION_1_136();
  v6 = v5;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator);
  OUTLINED_FUNCTION_0_157();
  v9 = v4 <= -(v6 + v8);
  OUTLINED_FUNCTION_2_116();
  v11 = v10;
  OUTLINED_FUNCTION_1_136();
  v13 = v11 - v12;
  OUTLINED_FUNCTION_0_157();
  objc_msgSend(v7, sel_scrollViewIsAtTop_offset_, v9, v13 - v14);
  return objc_msgSend(v7, sel_updateWithPercentage_, a1);
}

id MastheadNavigationBarCompressionAnimator.scrollViewIs(atTop:offset:)(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_scrollViewIsAtTop_offset_, a1 & 1);
}

Swift::Bool __swiftcall MastheadNavigationBarCompressionAnimator.animationShouldBegin(for:currentlyFullyCompressed:)(UIScrollView *a1, Swift::Bool currentlyFullyCompressed)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_animationShouldBeginForScrollView_currentlyFullyCompressed_, a1, currentlyFullyCompressed);
}

id MastheadNavigationBarCompressionAnimator.maximumBarHeight(for:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_maximumBarHeightForTraitCollection_, a1);
}

id MastheadNavigationBarCompressionAnimator.minimumBarHeight(for:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_minimumBarHeightForTraitCollection_, a1);
}

Swift::Void __swiftcall MastheadNavigationBarCompressionAnimator.reload(with:)(UITraitCollection_optional with)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI40MastheadNavigationBarCompressionAnimator_barCompressionAnimator), sel_reloadWithTraitCollection_, with.value.super.isa);
}

id MastheadNavigationBarCompressionAnimator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MastheadNavigationBarCompressionAnimator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MastheadNavigationBarCompressionAnimator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MastheadNavigationBarCompressionAnimator()
{
  return objc_opt_self();
}

uint64_t method lookup function for MastheadNavigationBarCompressionAnimator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MastheadNavigationBarCompressionAnimator.__allocating_init(navigationBar:scrollView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1B15E5498(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_block);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_block);
  *v3 = a1;
  v3[1] = a2;
  sub_1B13B9100(v4);
  return swift_retain();
}

void sub_1B15E54D4(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_isEnabled;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_isEnabled) = 0;
  a1();
  *(_BYTE *)(v1 + v2) = 1;
  OUTLINED_FUNCTION_31();
}

void sub_1B15E550C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_isEnabled) == 1
    && (v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_block)) != 0)
  {
    if (a1)
    {
      swift_retain();
      v2(a1);
      sub_1B13B9100((uint64_t)v2);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    OUTLINED_FUNCTION_31();
  }
}

id sub_1B15E55DC()
{
  _BYTE *v0;
  objc_class *ObjectType;
  _QWORD *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_block];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC5TeaUI28GutterViewScrollViewObserver_isEnabled] = 1;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for GutterViewScrollViewObserver()
{
  return objc_opt_self();
}

id static ErrorStyler.dynamicTheme.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B15E5C9C((SEL *)&selRef_systemBackgroundColor, &qword_1EEF2F8C8, (void **)&qword_1EEF35120, a1);
}

id ErrorStyler.backgroundColor.getter()
{
  id *v0;

  return *v0;
}

void *ErrorStyler.visualEffect.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

id ErrorStyler.textColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

NSAttributedString __swiftcall ErrorStyler.styled(title:subtitle:)(Swift::String_optional title, Swift::String_optional subtitle)
{
  uint64_t v2;
  uint64_t countAndFlagsBits;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t inited;
  void **v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;

  countAndFlagsBits = subtitle.value._countAndFlagsBits;
  v38 = *(void **)(v2 + 16);
  if (title.value._object)
  {
    if (subtitle.value._object)
    {
      sub_1B16B9740();
      sub_1B16B9740();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    }
    else
    {
      sub_1B16B9740();
      countAndFlagsBits = 0;
    }
  }
  else if (subtitle.value._object)
  {
    sub_1B16B9740();
  }
  else
  {
    countAndFlagsBits = 0x206E776F6E6B6E55;
  }
  v4 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_92();
  v5 = OUTLINED_FUNCTION_10_3();
  v6 = OUTLINED_FUNCTION_5(v5, &qword_1ED184B70);
  v7 = (void *)sub_1B16BA220();
  sub_1B1404A4C(0, (unint64_t *)&qword_1ED188F70, (void (*)(uint64_t))sub_1B148F34C);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B16C51E0;
  *(_QWORD *)(v8 + 56) = v6;
  v9 = sub_1B15E5E94();
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 96) = v6;
  *(_QWORD *)(v8 + 104) = v9;
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 72) = countAndFlagsBits;
  v40 = v4;
  v39 = (id)countAndFlagsBits;
  v37 = (void *)sub_1B16BA22C();

  OUTLINED_FUNCTION_5(v10, &qword_1ED17D290);
  v11 = (void *)sub_1B16B9860();
  v36 = sub_1B15E5BE4(v11);
  sub_1B1404A4C(0, (unint64_t *)&qword_1ED1839A8, (void (*)(uint64_t))sub_1B14DD4E8);
  inited = swift_initStackObject();
  v13 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
  v14 = *v13;
  *(_QWORD *)(inited + 32) = *v13;
  v15 = (void *)objc_opt_self();
  v16 = *MEMORY[0x1E0DC4AD0];
  v17 = v14;
  v18 = objc_msgSend(v15, sel_preferredFontForTextStyle_, v16);
  v19 = (void *)sub_1B13A1BE4(0, (unint64_t *)&qword_1ED183898);
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 40) = v18;
  type metadata accessor for Key(0);
  sub_1B14297F4();
  OUTLINED_FUNCTION_1_137();
  v20 = (void *)OUTLINED_FUNCTION_0_158();
  swift_bridgeObjectRelease();
  objc_msgSend(v40, sel_length);
  OUTLINED_FUNCTION_6_7(v36, sel_addAttributes_range_, (uint64_t)v20);

  v21 = OUTLINED_FUNCTION_3_106();
  *(_OWORD *)(v21 + 16) = xmmword_1B16C51D0;
  *(_QWORD *)(v21 + 32) = v17;
  v22 = *MEMORY[0x1E0DC4A88];
  v23 = v17;
  v24 = objc_msgSend(v15, sel_preferredFontForTextStyle_, v22);
  *(_QWORD *)(v21 + 64) = v19;
  *(_QWORD *)(v21 + 40) = v24;
  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_0_158();
  OUTLINED_FUNCTION_10_3();
  objc_msgSend(v36, sel_addAttributes_range_, v19, objc_msgSend(v40, sel_length), objc_msgSend(v39, sel_length));

  v25 = OUTLINED_FUNCTION_3_106();
  *(_OWORD *)(v25 + 16) = xmmword_1B16C51D0;
  v26 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(v25 + 32) = *MEMORY[0x1E0DC1140];
  *(_QWORD *)(v25 + 64) = OUTLINED_FUNCTION_5(v25, (unint64_t *)&qword_1ED1838C0);
  *(_QWORD *)(v25 + 40) = v38;
  v27 = v26;
  v28 = v38;
  OUTLINED_FUNCTION_1_137();
  OUTLINED_FUNCTION_0_158();
  OUTLINED_FUNCTION_10_3();
  objc_msgSend(v36, sel_length);
  OUTLINED_FUNCTION_6_7(v36, sel_addAttributes_range_, (uint64_t)v26);

  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v29, sel_setLineSpacing_, 2.0);
  objc_msgSend(v29, sel_setAlignment_, 1);
  v30 = OUTLINED_FUNCTION_3_106();
  *(_OWORD *)(v30 + 16) = xmmword_1B16C51D0;
  v31 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(v30 + 32) = *MEMORY[0x1E0DC1178];
  *(_QWORD *)(v30 + 64) = sub_1B13A1BE4(0, &qword_1ED1872A0);
  *(_QWORD *)(v30 + 40) = v29;
  v32 = v31;
  v33 = v29;
  OUTLINED_FUNCTION_1_137();
  v34 = (void *)OUTLINED_FUNCTION_0_158();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_length);
  OUTLINED_FUNCTION_6_7(v36, sel_addAttributes_range_, (uint64_t)v34);

  return (NSAttributedString)v36;
}

id sub_1B15E5BE4(void *a1)
{
  id v2;
  id v3;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  OUTLINED_FUNCTION_5_92();
  OUTLINED_FUNCTION_10_3();
  v3 = objc_msgSend(v2, sel_initWithString_, a1);

  return v3;
}

id static ErrorStyler.lightTheme.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B15E5C9C((SEL *)&selRef_whiteColor, &qword_1EEF2F8B8, (void **)&qword_1EEF35110, a1);
}

id static ErrorStyler.darkTheme.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B15E5C9C((SEL *)&selRef_blackColor, &qword_1EEF2F8C0, (void **)&qword_1EEF35118, a1);
}

id sub_1B15E5C9C@<X0>(SEL *a1@<X0>, _QWORD *a2@<X1>, void **a3@<X2>, _QWORD *a4@<X8>)
{
  id v7;
  void *v8;

  v7 = objc_msgSend((id)objc_opt_self(), *a1);
  if (*a2 != -1)
    swift_once();
  v8 = *a3;
  *a4 = v7;
  a4[1] = 0;
  a4[2] = v8;
  return v8;
}

id sub_1B15E5D20()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.490196078, 0.498039216, 0.498039216, 1.0);
  qword_1EEF35110 = (uint64_t)result;
  return result;
}

id static ErrorStyler.lightTextColor.getter()
{
  return sub_1B13A666C(&qword_1EEF2F8B8, (id *)&qword_1EEF35110);
}

id sub_1B15E5D84()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  qword_1EEF35118 = (uint64_t)result;
  return result;
}

id static ErrorStyler.darkTextColor.getter()
{
  return sub_1B13A666C(&qword_1EEF2F8C0, (id *)&qword_1EEF35118);
}

id sub_1B15E5DE8()
{
  void *v0;
  uint64_t v1;
  id result;

  v0 = (void *)objc_opt_self();
  if (qword_1EEF2F8B8 != -1)
    swift_once();
  v1 = qword_1EEF35110;
  if (qword_1EEF2F8C0 != -1)
    swift_once();
  result = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, qword_1EEF35118);
  qword_1EEF35120 = (uint64_t)result;
  return result;
}

unint64_t sub_1B15E5E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1872A8;
  if (!qword_1ED1872A8)
  {
    v1 = sub_1B13A1BE4(255, &qword_1ED184B70);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1872A8);
  }
  return result;
}

id static ErrorStyler.dynamicTextColor.getter()
{
  return sub_1B13A666C(&qword_1EEF2F8C8, (id *)&qword_1EEF35120);
}

uint64_t dispatch thunk of ErrorStylerType.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ErrorStylerType.visualEffect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ErrorStylerType.textColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ErrorStylerType.styled(title:subtitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ErrorStyler(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

uint64_t assignWithCopy for ErrorStyler(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for ErrorStyler(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t dispatch thunk of ResponderProviding.responder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for AutomationRunner()
{
  return objc_opt_self();
}

uint64_t StatusBannerVisibility.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t StatusBannerVisibility.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B15E60BC()
{
  unint64_t result;

  result = qword_1EEF351C0;
  if (!qword_1EEF351C0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for StatusBannerVisibility, &type metadata for StatusBannerVisibility);
    atomic_store(result, (unint64_t *)&qword_1EEF351C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StatusBannerVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15E6144 + 4 * byte_1B16D7AF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15E6178 + 4 * asc_1B16D7AF0[v4]))();
}

uint64_t sub_1B15E6178(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E6180(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15E6188);
  return result;
}

uint64_t sub_1B15E6194(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15E619CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15E61A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E61A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of StatusBannerVisibilityProviding.statusBannerVisibility.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B15E61BC(void *a1)
{
  uint64_t v1;

  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  return v1;
}

void sub_1B15E61F4()
{
  OUTLINED_FUNCTION_24_1();
}

void sub_1B15E6214(unsigned __int8 *a1)
{
  _BYTE *v1;
  int v2;

  if (!a1
    || (v2 = a1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_coordinatingPresentationState],
        a1,
        v2 == 8))
  {
    OUTLINED_FUNCTION_24_1();
  }
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_1B15E6280()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15E629C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  result = sub_1B15E6398((uint64_t)&v12);
  v3 = v13;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v11;
  return result;
}

uint64_t sub_1B15E631C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 72);
  v11 = *(_QWORD *)a1;
  v12 = v1;
  v13 = v2;
  v14 = v3;
  v15 = v4;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  return sub_1B15E6424(&v11);
}

uint64_t sub_1B15E6398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_layoutOptions;
  result = OUTLINED_FUNCTION_30();
  v5 = *(_BYTE *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_BYTE *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_BYTE *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v13;
  return result;
}

uint64_t sub_1B15E6424(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = a1[4];
  v7 = *((_BYTE *)a1 + 40);
  v8 = a1[6];
  v9 = *((_BYTE *)a1 + 56);
  v13 = a1[8];
  v12 = *((_BYTE *)a1 + 72);
  v10 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_layoutOptions;
  result = swift_beginAccess();
  *(_QWORD *)v10 = v2;
  *(_BYTE *)(v10 + 8) = v3;
  *(_QWORD *)(v10 + 16) = v4;
  *(_BYTE *)(v10 + 24) = v5;
  *(_QWORD *)(v10 + 32) = v6;
  *(_BYTE *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  *(_BYTE *)(v10 + 56) = v9;
  *(_QWORD *)(v10 + 64) = v13;
  *(_BYTE *)(v10 + 72) = v12;
  return result;
}

void sub_1B15E64E4()
{
  sub_1B16B82DC();
  OUTLINED_FUNCTION_0_0();
}

double sub_1B15E6508()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  CGRect v4;

  OUTLINED_FUNCTION_30();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_rootView);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v1, sel_layoutMargins);
  v4.origin.x = OUTLINED_FUNCTION_14_0();
  CGRectGetHeight(v4);
  OUTLINED_FUNCTION_14_0();
  CardViewLayoutOptions.cardHeight(for:in:layoutMargins:)(v2);
  return 0.0;
}

uint64_t sub_1B15E6670(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 9);
  v4 = *(_BYTE *)(a1 + 10);
  v5 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_behavior;
  *(_QWORD *)v5 = *(_QWORD *)a1;
  *(_BYTE *)(v5 + 8) = v2;
  *(_BYTE *)(v5 + 9) = v3;
  *(_BYTE *)(v5 + 10) = v4;
  return swift_bridgeObjectRelease();
}

unsigned __int8 *sub_1B15E66A4(unsigned __int8 *result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  v2 = *result;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_state) != v2)
  {
    v3 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate;
    if (MEMORY[0x1B5E1F2F8](v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate))
    {
      v4 = *(_QWORD *)(v3 + 8);
      ObjectType = swift_getObjectType();
      v10 = v2;
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v4 + 8))(v1, &v10, ObjectType, v4);
      swift_unknownObjectRelease();
    }
    v6 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate;
    result = (unsigned __int8 *)MEMORY[0x1B5E1F2F8](v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate);
    if (result)
    {
      v7 = *(_QWORD *)(v6 + 8);
      v8 = swift_getObjectType();
      v9 = v2;
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v7 + 8))(v1, &v9, v8, v7);
      return (unsigned __int8 *)swift_unknownObjectRelease();
    }
  }
  return result;
}

unsigned __int8 *sub_1B15E6778(unsigned __int8 *result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v2 = OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_state;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_state);
  if (v3 != *result)
  {
    v4 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate;
    if (MEMORY[0x1B5E1F2F8](v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate))
    {
      v5 = *(_QWORD *)(v4 + 8);
      ObjectType = swift_getObjectType();
      v11 = v3;
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v5 + 16))(v1, &v11, ObjectType, v5);
      swift_unknownObjectRelease();
    }
    v7 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate;
    result = (unsigned __int8 *)MEMORY[0x1B5E1F2F8](v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate);
    if (result)
    {
      v8 = *(_QWORD *)(v7 + 8);
      v9 = swift_getObjectType();
      v10 = *(_BYTE *)(v1 + v2);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v8 + 16))(v1, &v10, v9, v8);
      return (unsigned __int8 *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_1B15E6858(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;

  v3 = OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_state;
  v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_state);
  v6 = *a1;
  v2 = v6;
  sub_1B15E66A4(&v6);
  *(_BYTE *)(v1 + v3) = v2;
  v5 = v4;
  sub_1B15E6778(&v5);
  OUTLINED_FUNCTION_44();
}

void sub_1B15E68A0(uint64_t a1, void (*a2)(id))
{
  void *Strong;
  char *v4;
  id v5;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v4 = (char *)swift_unknownObjectUnownedLoadStrong();
  v5 = *(id *)&v4[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView];

  a2(v5);
}

void sub_1B15E6914()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_1();
}

void sub_1B15E6940(char *a1)
{
  id v2;

  if (a1)
  {
    v2 = *(id *)&a1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView];
    sub_1B15E7A64();

  }
  OUTLINED_FUNCTION_90();
}

void sub_1B15E6988(void *a1)
{
  char *v2;

  v2 = (char *)objc_msgSend(a1, sel_state);
  if ((unint64_t)(v2 - 3) < 2)
  {
    sub_1B15E6ED4(a1);
  }
  else if (v2 == (char *)2)
  {
    sub_1B15E6A9C(a1);
  }
  else if (v2 == (char *)1)
  {
    sub_1B15E69F8((uint64_t)a1);
  }
  else
  {
    OUTLINED_FUNCTION_0_0();
  }
}

uint64_t sub_1B15E69F8(uint64_t result)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[4];

  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_dimmingView)
           + OBJC_IVAR____TtC5TeaUI15CardDimmingView_preventTouches) = 1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panLockState) == 1)
  {
    v2 = (void *)result;
    LOBYTE(v6[0]) = 3;
    sub_1B15E6858((unsigned __int8 *)v6);
    sub_1B15E7CAC(v2, (uint64_t)v6);
    v3 = v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_session;
    v4 = v6[1];
    *(_OWORD *)v3 = v6[0];
    *(_OWORD *)(v3 + 16) = v4;
    v5 = v6[3];
    *(_OWORD *)(v3 + 32) = v6[2];
    *(_OWORD *)(v3 + 48) = v5;
    *(_BYTE *)(v3 + 64) = 0;
    return TUActivateUpdateRequest();
  }
  return result;
}

void sub_1B15E6A9C(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  __int128 v11;
  double v12;
  double v13;
  char v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char v19;
  char v20;
  char v21;
  double v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  double v32;
  void *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  double v37;
  _QWORD aBlock[6];
  char v39[8];
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  __int128 v45;

  if (v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panLockState] == 1)
  {
    v2 = v1;
    v4 = &v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_session];
    if ((v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_session + 64] & 1) != 0)
    {
      v5 = v39;
      sub_1B15E7CAC(a1, (uint64_t)v39);
      v7 = v40;
      v6 = v41;
      v9 = v42;
      v8 = v43;
      v10 = v44;
      v11 = v45;
    }
    else
    {
      v11 = *((_OWORD *)v4 + 3);
      v8 = *((double *)v4 + 4);
      v10 = *((double *)v4 + 5);
      v6 = *((double *)v4 + 2);
      v9 = *((double *)v4 + 3);
      v5 = &v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_session];
      v7 = *((double *)v4 + 1);
    }
    *(_QWORD *)v4 = *(_QWORD *)v5;
    *((double *)v4 + 1) = v7;
    *((double *)v4 + 2) = v6;
    *((double *)v4 + 3) = v9;
    *((double *)v4 + 4) = v8;
    *((double *)v4 + 5) = v10;
    *((_OWORD *)v4 + 3) = v11;
    v4[64] = 0;
    objc_msgSend(a1, sel_locationInView_, *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_rootView], v11);
    v13 = v7 + v12 - v7 - v6;
    sub_1B1458624((uint64_t)aBlock);
    v14 = sub_1B13EEFB4(2, aBlock[0]);
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      v15 = v9;
    else
      v15 = v8;
    v16 = (log10(v13 / v37) + 1.0) * v37;
    if (v8 > v16)
      v16 = v8;
    if (v15 > v13)
      v17 = v15;
    else
      v17 = v13;
    if (v16 >= v17)
      v18 = v17;
    else
      v18 = v16;
    if (v18 <= v9
      && (sub_1B1458624((uint64_t)aBlock),
          v19 = sub_1B13EEFB4(2, aBlock[0]),
          swift_bridgeObjectRelease(),
          (v19 & 1) != 0))
    {
      LOBYTE(aBlock[0]) = 0;
    }
    else
    {
      if (v18 > v8
        || (sub_1B1458624((uint64_t)aBlock),
            v20 = sub_1B13EEFB4(2, aBlock[0]),
            swift_bridgeObjectRelease(),
            (v20 & 1) != 0))
      {
        if (v37 <= v18)
          v21 = 2;
        else
          v21 = 3;
      }
      else
      {
        v21 = 1;
      }
      LOBYTE(aBlock[0]) = v21;
    }
    sub_1B15E6858((unsigned __int8 *)aBlock);
    if (fabs(v10 - v8))
    {
      if (v10 >= v18)
        v22 = v18;
      else
        v22 = v10;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_dimmingView], sel_setAlpha_, (v10 - v22) / (v10 - v8) * *(double *)&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_dimmingAlpha]);
    }
    v23 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView];
    objc_msgSend(v23, sel_frame);
    objc_msgSend(v23, sel_setFrame_);
    v24 = &v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate];
    if (MEMORY[0x1B5E1F2F8](&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate]))
    {
      v25 = *((_QWORD *)v24 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t, double))(v25 + 48))(v1, ObjectType, v25, v18);
      swift_unknownObjectRelease();
    }
    v27 = &v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate];
    if (MEMORY[0x1B5E1F2F8](&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate]))
    {
      v28 = *((_QWORD *)v27 + 1);
      v29 = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t, double))(v28 + 48))(v1, v29, v28, v18);
      swift_unknownObjectRelease();
    }
    sub_1B1458624((uint64_t)aBlock);
    v30 = sub_1B13EEFB4(2, aBlock[0]);
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
    {
      if ((objc_msgSend(v23, sel_safeAreaInsets), v18 <= v31 * 0.5)
        && *((_BYTE *)v23 + OBJC_IVAR___TSCardView_isFullscreen) != 1
        || (objc_msgSend(v23, sel_safeAreaInsets), v32 * 0.5 < v18)
        && *((_BYTE *)v23 + OBJC_IVAR___TSCardView_isFullscreen) == 1)
      {
        v33 = (void *)objc_opt_self();
        v34 = swift_allocObject();
        *(_QWORD *)(v34 + 16) = v2;
        aBlock[4] = sub_1B15E8EDC;
        aBlock[5] = v34;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1B13F00E4;
        aBlock[3] = &block_descriptor_21_2;
        v35 = _Block_copy(aBlock);
        v36 = v2;
        swift_release();
        objc_msgSend(v33, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v35, 0, 0.075, 0.0);
        _Block_release(v35);
      }
    }
  }
}

void *sub_1B15E6ED4(void *result)
{
  char *v1;
  char *v2;
  __int128 v3;
  __int128 v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  CGFloat MinY;
  int v12;
  uint64_t v13;
  char *v14;
  unsigned __int8 v15;
  _OWORD v16[4];
  CGRect v17;

  v2 = &v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_session];
  if ((v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_session + 64] & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_dimmingView]
             + OBJC_IVAR____TtC5TeaUI15CardDimmingView_preventTouches) = 0;
  }
  else
  {
    v3 = *((_OWORD *)v2 + 1);
    v16[0] = *(_OWORD *)v2;
    v16[1] = v3;
    v4 = *((_OWORD *)v2 + 3);
    v16[2] = *((_OWORD *)v2 + 2);
    v16[3] = v4;
    objc_msgSend(result, sel_velocityInView_, *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_rootView]);
    v6 = v5;
    v8 = v7;
    v9 = v7 * v7 * -1.5 / dbl_1B16D7BF0[v7 >= 0.0];
    v10 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView];
    objc_msgSend(v10, sel_frame);
    MinY = CGRectGetMinY(v17);
    sub_1B15E823C(v16, &v15, MinY + v9);
    v12 = v15;
    v15 = 4;
    sub_1B15E6858(&v15);
    *((_OWORD *)v2 + 2) = 0u;
    *((_OWORD *)v2 + 3) = 0u;
    *(_OWORD *)v2 = 0u;
    *((_OWORD *)v2 + 1) = 0u;
    v2[64] = 1;
    *((_BYTE *)v10 + OBJC_IVAR___TSCardView_isFullscreen) = v12 == 0;
    sub_1B13ABCEC();
    v15 = v12;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v1;
    v14 = v1;
    sub_1B13B9110(v10, &v15, (void (*)(uint64_t))sub_1B15E8EEC, v13, v6, v8);
    return (void *)swift_release();
  }
  return result;
}

void sub_1B15E7100(void *a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_BYTE *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  v12[4] = sub_1B15E8EB4;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1B13F00E4;
  v12[3] = &block_descriptor_15_3;
  v9 = _Block_copy(v12);
  v10 = a1;
  swift_retain();
  v11 = a4;
  swift_release();
  TUModifyAnimation(v9);
  _Block_release(v9);
}

id sub_1B15E71D0(void *a1, double *a2, unsigned __int8 a3, uint64_t a4)
{
  unsigned int v7;
  double v8;

  v7 = a3;
  swift_beginAccess();
  objc_msgSend(a1, sel_setFrame_, a2[2], a2[3], a2[4], a2[5]);
  v8 = 0.0;
  if (v7 <= 1)
    v8 = *(double *)(a4 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_dimmingAlpha);
  return objc_msgSend(*(id *)(a4 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_dimmingView), sel_setAlpha_, v8);
}

uint64_t sub_1B15E7264(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t (*a4)(BOOL))
{
  uint64_t result;

  result = sub_1B13B005C(a2, a3);
  if (a4)
    return a4(a1 == 0);
  return result;
}

uint64_t sub_1B15E72AC(char *a1)
{
  void *v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v10[6];

  v2 = *a1;
  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = v2;
  v5 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v5 + 16) = sub_1B15E8FE0;
  *(_QWORD *)(v5 + 24) = v4;
  v10[4] = sub_1B140AA30;
  v10[5] = v5;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1B140AA14;
  v10[3] = &block_descriptor_39_0;
  v6 = _Block_copy(v10);
  v7 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_performWithoutAnimation_, v6);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  OUTLINED_FUNCTION_0_9();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_1B15E73DC(uint64_t a1, char a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t *, id, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t *, id, uint64_t, uint64_t);
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  double Height;
  double v49;
  double v50;
  id v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  CGRect v63;

  v2 = a1;
  v51 = *(id *)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView);
  objc_msgSend(v51, sel_frame);
  v49 = v4;
  v50 = v3;
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_layoutOptions);
  swift_beginAccess();
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  v10 = v5[4];
  v11 = v5[6];
  v12 = *((_BYTE *)v5 + 56);
  v13 = v5[8];
  v45 = *((_BYTE *)v5 + 72);
  v46 = *((_BYTE *)v5 + 40);
  v14 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_rootView);
  objc_msgSend(v14, sel_bounds);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  objc_msgSend(v14, sel_layoutMargins);
  v63.origin.x = v16;
  v63.origin.y = v18;
  v63.size.width = v20;
  v63.size.height = v22;
  Height = CGRectGetHeight(v63);
  v53 = v6;
  v54 = v7;
  v55 = v8;
  v56 = v9;
  v57 = v10;
  v58 = v46;
  v59 = v11;
  v60 = v12;
  v61 = v13;
  v62 = v45;
  v52 = a2;
  CardViewLayoutOptions.cardHeight(for:in:layoutMargins:)((uint64_t)&v52);
  v24 = v23;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA0]), sel_initWithMass_stiffness_damping_initialVelocity_, 1.0, 312.11, 31.96, 0.0, 0.0);
  v26 = v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate;
  if (MEMORY[0x1B5E1F2F8](v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate))
  {
    v27 = *(_QWORD *)(v26 + 8);
    ObjectType = swift_getObjectType();
    LOBYTE(v53) = a2;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v27 + 24))(v2, &v53, ObjectType, v27);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1B5E1F2F8](v26))
  {
    v29 = *(_QWORD *)(v26 + 8);
    v30 = swift_getObjectType();
    LOBYTE(v53) = a2;
    v31 = *(void (**)(uint64_t, uint64_t *, id, uint64_t, uint64_t))(v29 + 32);
    v32 = v25;
    v31(v2, &v53, v32, v30, v29);

    swift_unknownObjectRelease();
  }
  v33 = v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate;
  if (MEMORY[0x1B5E1F2F8](v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate))
  {
    v34 = *(_QWORD *)(v33 + 8);
    v35 = swift_getObjectType();
    LOBYTE(v53) = a2;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v34 + 24))(v2, &v53, v35, v34);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1B5E1F2F8](v33))
  {
    v36 = *(_QWORD *)(v33 + 8);
    v37 = swift_getObjectType();
    LOBYTE(v53) = a2;
    v38 = *(void (**)(uint64_t, uint64_t *, id, uint64_t, uint64_t))(v36 + 32);
    v39 = v2;
    v40 = v25;
    v38(v39, &v53, v40, v37, v36);

    v2 = v39;
    swift_unknownObjectRelease();
  }
  objc_msgSend(v51, sel_setFrame_, 0.0, Height - v24, v50, v49);
  if (MEMORY[0x1B5E1F2F8](v26))
  {
    v41 = *(_QWORD *)(v26 + 8);
    v42 = swift_getObjectType();
    LOBYTE(v53) = a2;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v41 + 40))(v2, &v53, v42, v41);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1B5E1F2F8](v33))
  {
    v43 = *(_QWORD *)(v33 + 8);
    v44 = swift_getObjectType();
    LOBYTE(v53) = a2;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v43 + 40))(v2, &v53, v44, v43);
    swift_unknownObjectRelease();
  }
  if (a2 != 7)
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_coordinatingPresentationState) = a2;
  LOBYTE(v53) = a2;
  sub_1B14593A8();
  sub_1B16B8300();

}

void sub_1B15E77C8()
{
  OUTLINED_FUNCTION_33_26();
  sub_1B15E7A64();
  OUTLINED_FUNCTION_44();
}

void sub_1B15E7810(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v6;

  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_coordinatingCoordinators);
  OUTLINED_FUNCTION_30();
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    OUTLINED_FUNCTION_119_0();
    v4 = sub_1B16BA76C();
    if (v4)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v6 = 4;
    sub_1B13B9110(a1, &v6, 0, 0, 0.0, 0.0);
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_119_0();
  if (!v4)
    goto LABEL_8;
LABEL_3:
  if (v4 >= 1)
  {
    if ((v3 & 0xC000000000000001) != 0)
      MEMORY[0x1B5E1DF60](0, v3);
    else
      swift_retain();
    OUTLINED_FUNCTION_150_1();
  }
  __break(1u);
}

void sub_1B15E7A64()
{
  sub_1B16B82DC();
  __asm { BR              X10 }
}

void sub_1B15E7AB4()
{
  OUTLINED_FUNCTION_90();
}

id CardViewAnimationCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CardViewAnimationCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CardViewAnimationCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardViewAnimationCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1B15E7CAC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  double v5;
  int v6;
  double v7;
  uint64_t v8;
  double v9;
  unsigned int v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  unsigned int v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  unsigned int v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  BOOL v65;
  double v66;
  char v67;
  unsigned __int8 v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  double v75;
  CGFloat v76;
  double v77;
  CGFloat v78;
  double v79;
  CGFloat v80;
  double v81;
  CGFloat v82;
  double v83;
  double v84;
  double v85;
  double result;
  uint64_t v87;
  uint64_t v88;
  char v89;
  double v90;
  double v91;
  uint64_t v92;
  double v93;
  double v94;
  double Height;
  double v96;
  double v97;
  double v98;
  uint64_t v99;
  double v101;
  char v102;
  double v103;
  unsigned __int8 v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_rootView);
  objc_msgSend(a1, sel_locationInView_, v3);
  v99 = v4;
  v101 = v5;
  sub_1B1458624((uint64_t)&v103);
  v6 = v104;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView), sel_frame);
  v97 = v7;
  v8 = v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_layoutOptions;
  swift_beginAccess();
  v9 = *(double *)v8;
  v10 = *(unsigned __int8 *)(v8 + 8);
  objc_msgSend(v3, sel_bounds);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  objc_msgSend(v3, sel_layoutMargins);
  v20 = v19;
  v22 = v21;
  v113.origin.x = v12;
  v113.origin.y = v14;
  v113.size.width = v16;
  v113.size.height = v18;
  Height = CGRectGetHeight(v113);
  if (v10 >> 6)
  {
    if (v10 >> 6 == 1)
    {
      v23 = 0.0;
      if ((v10 & 1) != 0)
        v23 = v22;
      v24 = v23 + v9;
    }
    else
    {
      v115.origin.x = v12;
      v115.origin.y = v14;
      v115.size.width = v16;
      v115.size.height = v18;
      v24 = CGRectGetHeight(v115) * v9;
    }
  }
  else
  {
    v114.origin.x = v12;
    v114.origin.y = v14;
    v114.size.width = v16;
    v114.size.height = v18;
    v25 = CGRectGetHeight(v114);
    v26 = 0.0;
    if ((v10 & 1) != 0)
      v26 = v20;
    v24 = v25 - v9 - v26;
  }
  v93 = v24;
  v27 = *(double *)(v8 + 16);
  v28 = *(unsigned __int8 *)(v8 + 24);
  objc_msgSend(v3, sel_bounds);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  objc_msgSend(v3, sel_layoutMargins);
  v38 = v37;
  v40 = v39;
  v116.origin.x = v30;
  v116.origin.y = v32;
  v116.size.width = v34;
  v116.size.height = v36;
  v91 = CGRectGetHeight(v116);
  if (v28 >> 6)
  {
    if (v28 >> 6 == 1)
    {
      v41 = v27;
      v42 = 0.0;
      if ((v28 & 1) != 0)
        v42 = v40;
      v43 = v42 + v27;
    }
    else
    {
      v118.origin.x = v30;
      v118.origin.y = v32;
      v118.size.width = v34;
      v118.size.height = v36;
      v41 = CGRectGetHeight(v118);
      v43 = v41 * v27;
    }
  }
  else
  {
    v117.origin.x = v30;
    v117.origin.y = v32;
    v117.size.width = v34;
    v117.size.height = v36;
    v44 = CGRectGetHeight(v117);
    v45 = 0.0;
    if ((v28 & 1) != 0)
      v45 = v38;
    v41 = v44 - v27;
    v43 = v41 - v45;
  }
  v46 = *(double *)(v8 + 48);
  v47 = *(unsigned __int8 *)(v8 + 56);
  objc_msgSend(v3, sel_bounds, v41);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v54;
  objc_msgSend(v3, sel_layoutMargins);
  v57 = v56;
  v59 = v58;
  v119.origin.x = v49;
  v119.origin.y = v51;
  v119.size.width = v53;
  v119.size.height = v55;
  v60 = CGRectGetHeight(v119);
  if (v47 >> 6)
  {
    if (v47 >> 6 == 1)
    {
      v61 = 0.0;
      if ((v47 & 1) != 0)
        v61 = v59;
      v62 = v61 + v46;
    }
    else
    {
      v121.origin.x = v49;
      v121.origin.y = v51;
      v121.size.width = v53;
      v121.size.height = v55;
      v62 = CGRectGetHeight(v121) * v46;
    }
  }
  else
  {
    v120.origin.x = v49;
    v120.origin.y = v51;
    v120.size.width = v53;
    v120.size.height = v55;
    v63 = CGRectGetHeight(v120);
    v64 = 0.0;
    if ((v47 & 1) != 0)
      v64 = v57;
    v62 = v63 - v46 - v64;
  }
  v65 = v6 == 0;
  v66 = *(double *)v8;
  if (v65)
    v67 = 2;
  else
    v67 = 5;
  v89 = v67;
  v90 = v101 - v97;
  v96 = Height - v93;
  v98 = v91 - v43;
  v68 = *(_BYTE *)(v8 + 8);
  v69 = *(_QWORD *)(v8 + 16);
  v94 = v60 - v62;
  v70 = *(_BYTE *)(v8 + 24);
  v71 = *(_QWORD *)(v8 + 32);
  v72 = *(_BYTE *)(v8 + 40);
  v92 = *(_QWORD *)(v8 + 48);
  v73 = *(_BYTE *)(v8 + 56);
  v88 = *(_QWORD *)(v8 + 64);
  v74 = *(_BYTE *)(v8 + 72);
  objc_msgSend(v3, sel_bounds);
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v82 = v81;
  objc_msgSend(v3, sel_layoutMargins);
  v122.origin.x = v76;
  v122.origin.y = v78;
  v122.size.width = v80;
  v122.size.height = v82;
  v83 = CGRectGetHeight(v122);
  v103 = v66;
  v104 = v68;
  v105 = v69;
  v106 = v70;
  v107 = v71;
  v108 = v72;
  v109 = v92;
  v110 = v73;
  v111 = v88;
  v112 = v74;
  v102 = v89;
  CardViewLayoutOptions.cardHeight(for:in:layoutMargins:)((uint64_t)&v102);
  v85 = v83 - v84;
  objc_msgSend(v3, sel_bounds);
  *(_QWORD *)a2 = v99;
  *(double *)(a2 + 8) = v101;
  *(double *)(a2 + 16) = v90;
  *(double *)(a2 + 24) = v96;
  *(double *)(a2 + 32) = v98;
  result = v94;
  *(double *)(a2 + 40) = v94;
  *(double *)(a2 + 48) = v85;
  *(_QWORD *)(a2 + 56) = v87;
  return result;
}

void sub_1B15E814C(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v5[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v5[4] = sub_1B15E8EE4;
  v5[5] = v2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1B13F00E4;
  v5[3] = &block_descriptor_27;
  v3 = _Block_copy(v5);
  v4 = a1;
  swift_release();
  TUModifyAnimation(v3);
  _Block_release(v3);
}

id sub_1B15E81F4(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView)
           + OBJC_IVAR___TSCardView_isFullscreen) = (*(_BYTE *)(*(_QWORD *)(a1
                                                                          + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView)
                                                              + OBJC_IVAR___TSCardView_isFullscreen) & 1) == 0;
  return sub_1B13ABCEC();
}

void sub_1B15E823C(_QWORD *a1@<X0>, _BYTE *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double MinY;
  unint64_t v20;
  char v21;
  unint64_t v22;
  double *v23;
  double v24;
  double *v25;
  double v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unsigned __int8 v35;
  CGRect v36;

  sub_1B1458624((uint64_t)&v34);
  v7 = v34;
  if ((sub_1B13EEFB4(2, v34) & 1) == 0)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_5;
  }
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_rootView), sel_safeAreaInsets);
  v9 = v8;
  sub_1B14D1050();
  v11 = v10;
  v12 = *(_QWORD *)(v10 + 16);
  v13 = v12 + 1;
  if (v12 >= *(_QWORD *)(v10 + 24) >> 1)
    goto LABEL_37;
  while (1)
  {
    *(_QWORD *)(v11 + 16) = v13;
    v14 = v11 + 16 * v12;
    *(_BYTE *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 40) = v9;
LABEL_5:
    v9 = a1[4];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B14D1050();
      v11 = v28;
    }
    v12 = *(_QWORD *)(v11 + 16);
    if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      sub_1B14D1050();
      v11 = v29;
    }
    *(_QWORD *)(v11 + 16) = v12 + 1;
    v15 = v11 + 16 * v12;
    *(_BYTE *)(v15 + 32) = 1;
    *(_QWORD *)(v15 + 40) = v9;
    if ((sub_1B13EEFB4(0, v7) & 1) != 0)
    {
      v9 = a1[5];
      v12 = *(_QWORD *)(v11 + 16);
      if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1B14D1050();
        v11 = v31;
      }
      *(_QWORD *)(v11 + 16) = v12 + 1;
      v16 = v11 + 16 * v12;
      *(_BYTE *)(v16 + 32) = 3;
      *(_QWORD *)(v16 + 40) = v9;
    }
    v13 = sub_1B13EEFB4(1, v7);
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      v9 = a1[6];
      v13 = *(_QWORD *)(v11 + 16);
      if (v13 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1B14D1050();
        v11 = v32;
      }
      *(_QWORD *)(v11 + 16) = v13 + 1;
      v17 = v11 + 16 * v13;
      *(_BYTE *)(v17 + 32) = 2;
      *(_QWORD *)(v17 + 40) = v9;
    }
    sub_1B1458624((uint64_t)&v34);
    v7 = v35;
    swift_bridgeObjectRelease();
    if ((_DWORD)v7 == 1)
    {
      v9 = a1[7];
      v7 = *(_QWORD *)(v11 + 16);
      a1 = (_QWORD *)(v7 + 1);
      if (v7 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1B14D1050();
        v11 = v33;
      }
      *(_QWORD *)(v11 + 16) = a1;
      v18 = v11 + 16 * v7;
      *(_BYTE *)(v18 + 32) = 4;
      *(_QWORD *)(v18 + 40) = v9;
    }
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView), sel_frame);
    MinY = CGRectGetMinY(v36);
    v20 = *(_QWORD *)(v11 + 16);
    if (v20)
      break;
    __break(1u);
LABEL_37:
    sub_1B14D1050();
    v11 = v30;
  }
  if (MinY <= *(double *)(v11 + 40))
  {
    v21 = *(_BYTE *)(v11 + 32);
    goto LABEL_35;
  }
  if (*(double *)(v11 + 32 + 16 * (v20 - 1) + 8) < MinY)
  {
    v21 = *(_BYTE *)(v11 + 32 + 16 * (v20 - 1));
LABEL_35:
    swift_bridgeObjectRelease();
    *a2 = v21;
    return;
  }
  v22 = 0;
  v23 = (double *)(v11 + 40);
  while (1)
  {
    v24 = *v23;
    if (MinY <= *v23)
      break;
    ++v22;
    v23 += 2;
    if (v20 == v22)
    {
      __break(1u);
      break;
    }
  }
  if (v22 - 1 >= v20)
  {
    __break(1u);
  }
  else if (v22 < v20)
  {
    v25 = v23 - 3;
    v26 = *(v23 - 2);
    v27 = v23 - 1;
    if ((v24 + v26) * 0.5 < a3)
      v25 = v27;
    v21 = *(_BYTE *)v25;
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t sub_1B15E8590(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_dimmingView)
           + OBJC_IVAR____TtC5TeaUI15CardDimmingView_preventTouches) = 0;
  return TUDeactivateUpdateRequest();
}

Swift::Bool __swiftcall CardViewAnimationCoordinator.gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)(UIGestureRecognizer _, UIGestureRecognizer shouldRecognizeSimultaneouslyWith)
{
  uint64_t v2;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_session + 64) == 1)
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panLockState) = sub_1B15E85F4(v2, shouldRecognizeSimultaneouslyWith.super.isa) & 1;
  return 1;
}

uint64_t sub_1B15E85F4(uint64_t a1, id a2)
{
  int v4;
  id v5;
  double v7;
  double v8;
  unsigned __int8 v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  double v20;
  double v21;
  double v22;
  double v23;
  int v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  char v34;
  char v35[10];
  unsigned __int8 v36;

  v4 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_animatingPresentationState);
  if (v4 == 8)
  {
    sub_1B16B82DC();
    LOBYTE(v4) = v35[0];
  }
  LOBYTE(v5) = 1;
  if (((1 << v4) & 0xF4) == 0)
  {
    if (((1 << v4) & 3) != 0)
    {
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panGestureRecoginzer), sel_velocityInView_, *(_QWORD *)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_rootView));
      v9 = sub_1B15961A4(v7, v8);
      sub_1B16B82DC();
      if (v35[0] == 1)
      {
        sub_1B1458624((uint64_t)v35);
        v10 = sub_1B13EEFB4(2, *(_QWORD *)v35);
        swift_bridgeObjectRelease();
        if ((v10 & 1) != 0)
        {
          LOBYTE(v5) = v9 < 2u;
          return v5 & 1;
        }
      }
      v11 = *(void **)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_contentView);
      v12 = objc_msgSend(a2, sel_view);
      LOBYTE(v11) = sub_1B15E8978(v11, v12);

      if ((v11 & 1) != 0
        || (v13 = *(void **)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView),
            v14 = objc_msgSend(a2, sel_view),
            LOBYTE(v13) = sub_1B15E8978(v13, v14),
            v14,
            (v13 & 1) == 0))
      {
        v5 = objc_msgSend(a2, sel_view);
        if (!v5)
          return v5 & 1;
        v15 = v5;
        objc_opt_self();
        v16 = swift_dynamicCastObjCClass();
        if (v16)
        {
          v17 = (void *)v16;
          v18 = v15;
          v19 = sub_1B15E89F4(v17);

          if ((v19 & 1) != 0)
          {
            objc_msgSend(v17, sel_contentOffset);
            v21 = v20;
            objc_msgSend(v17, sel_adjustedContentInset);
            v23 = v22;

            sub_1B1458624((uint64_t)v35);
            v24 = v36;
            swift_bridgeObjectRelease();
            if (v24 == 1 && v21 + v23 <= 0.0)
            {
              LOBYTE(v5) = v9 == 1;
              return v5 & 1;
            }
          }
          else
          {

          }
        }
        else
        {

        }
LABEL_26:
        LOBYTE(v5) = 0;
        return v5 & 1;
      }
    }
    else
    {
      v25 = *(void **)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_contentView);
      v26 = objc_msgSend(a2, sel_view);
      LOBYTE(v25) = sub_1B15E8978(v25, v26);

      if ((v25 & 1) != 0
        || (v27 = *(void **)(a1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView),
            v28 = objc_msgSend(a2, sel_view),
            LOBYTE(v27) = sub_1B15E8978(v27, v28),
            v28,
            (v27 & 1) == 0))
      {
        v29 = objc_msgSend(a2, sel_view);
        if (v29)
        {
          v30 = v29;
          objc_opt_self();
          v31 = swift_dynamicCastObjCClass();
          if (v31)
          {
            v32 = (void *)v31;
            v33 = v30;
            v34 = sub_1B15E89F4(v32);

            if ((v34 & 1) == 0)
              goto LABEL_26;
          }
          else
          {

          }
        }
        v35[0] = 3;
        LOBYTE(v5) = sub_1B15E8AF0((uint64_t)a2, v35);
        return v5 & 1;
      }
    }
    LOBYTE(v5) = 1;
  }
  return v5 & 1;
}

uint64_t sub_1B15E8978(void *a1, void *a2)
{
  id v3;
  id v4;
  char v5;

  if (!a2)
    return 0;
  if (a2 == a1)
    return 1;
  v3 = a2;
  v4 = objc_msgSend(v3, sel_superview);
  v5 = sub_1B15E8978(a1, v4);

  return v5 & 1;
}

uint64_t sub_1B15E89F4(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  char v8;

  v2 = objc_msgSend(a1, sel_superview);
  if (!v2)
    goto LABEL_8;
  v3 = v2;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_panView);
  sub_1B15069EC();
  v5 = v4;
  v6 = v3;
  v7 = sub_1B16BA214();

  if ((v7 & 1) == 0)
  {
    objc_opt_self();
    if (!swift_dynamicCastObjCClass() || swift_dynamicCastObjCProtocolConditional())
    {
      v8 = sub_1B15E89F4(v3);

      return v8 & 1;
    }

LABEL_8:
    v8 = 0;
    return v8 & 1;
  }

  v8 = 1;
  return v8 & 1;
}

uint64_t sub_1B15E8AF0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;

  v3 = v2;
  v5 = *a2;
  v6 = v2 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_delegate;
  if (MEMORY[0x1B5E1F2F8](v6))
  {
    v7 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v14 = v5;
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v7 + 64))(v3, a1, &v14, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  else
  {
    v9 = 1;
  }
  v10 = v3 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate;
  if (MEMORY[0x1B5E1F2F8](v3 + OBJC_IVAR____TtC5TeaUI28CardViewAnimationCoordinator_parentDelegate))
  {
    if ((v9 & 1) != 0)
    {
      v11 = *(_QWORD *)(v10 + 8);
      v12 = swift_getObjectType();
      v15 = v5;
      v9 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v11 + 64))(v3, a1, &v15, v12, v11);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      v9 = 0;
    }
  }
  return v9 & 1;
}

uint64_t method lookup function for CardViewAnimationCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CardViewAnimationCoordinator.layoutOptions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of CardViewAnimationCoordinator.currentPresentationState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of CardViewAnimationCoordinator.currentOrigin(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t type metadata accessor for CardViewAnimationCoordinator.CoordinatingCoordinator()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for CardViewAnimationCoordinator.Session(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CardViewAnimationCoordinator.Session(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CardViewAnimationCoordinator.Session()
{
  return &type metadata for CardViewAnimationCoordinator.Session;
}

uint64_t storeEnumTagSinglePayload for CardViewAnimationCoordinator.LockState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15E8D90 + 4 * byte_1B16D7C0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15E8DC4 + 4 * byte_1B16D7C08[v4]))();
}

uint64_t sub_1B15E8DC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E8DCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15E8DD4);
  return result;
}

uint64_t sub_1B15E8DE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15E8DE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15E8DEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15E8DF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardViewAnimationCoordinator.LockState()
{
  return &type metadata for CardViewAnimationCoordinator.LockState;
}

unint64_t sub_1B15E8E14()
{
  unint64_t result;

  result = qword_1EEF35268;
  if (!qword_1EEF35268)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D7D2C, &type metadata for CardViewAnimationCoordinator.LockState);
    atomic_store(result, (unint64_t *)&qword_1EEF35268);
  }
  return result;
}

uint64_t sub_1B15E8E50()
{
  return OUTLINED_FUNCTION_5_6();
}

void sub_1B15E8E60()
{
  uint64_t v0;

  sub_1B15E7100(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1B15E8E70()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15E8EA0(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15E7264(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(uint64_t (**)(BOOL))(v1 + 32));
}

id sub_1B15E8EB4()
{
  uint64_t v0;

  return sub_1B15E71D0(*(void **)(v0 + 16), *(double **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1B15E8EC4()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B15E8EDC()
{
  uint64_t v0;

  sub_1B15E814C(*(void **)(v0 + 16));
}

id sub_1B15E8EE4()
{
  uint64_t v0;

  return sub_1B15E81F4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B15E8EEC(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15E8590(a1, *(_QWORD *)(v1 + 16));
}

void sub_1B15E8EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  double v5;
  void *v6;
  unsigned __int8 *v7;
  double v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v13, a3, a4);
  v9 = v13;
  v10 = v14;
  v11 = v15;
  v12 = v16;
  sub_1B15E6670((uint64_t)&v9);
  sub_1B16B82DC();
  if (!(_BYTE)v13)
  {
    sub_1B1458624((uint64_t)&v13);
    v4 = OUTLINED_FUNCTION_118_0(2);
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      v5 = OUTLINED_FUNCTION_16_52();
      OUTLINED_FUNCTION_6_95(v6, v7, v5, v8);
    }
  }
}

uint64_t sub_1B15E8FC0()
{
  OUTLINED_FUNCTION_43_0();
  return swift_deallocObject();
}

void sub_1B15E8FE0()
{
  uint64_t v0;

  sub_1B15E73DC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1B15E8FEC()
{
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_1B15E8FF8()
{
  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B15E9014()
{
  uint64_t v0;

  sub_1B15E68A0(v0, (void (*)(id))sub_1B15E77C8);
}

void sub_1B15E9034()
{
  uint64_t v0;

  sub_1B15E68A0(v0, sub_1B15E7810);
}

uint64_t sub_1B15E9054()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B15E9070()
{
  sub_1B15E6914();
}

uint64_t sub_1B15E9084(char a1)
{
  return a1 & 1;
}

void sub_1B15E9090()
{
  sub_1B15E6914();
}

uint64_t sub_1B15E90A4(char a1)
{
  return a1 & 1;
}

double UIScrollView.visibleBounds.getter(uint64_t a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  v1 = OUTLINED_FUNCTION_2_0(a1, sel_bounds);
  OUTLINED_FUNCTION_4_96((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_3_108();
  return OUTLINED_FUNCTION_1_139(v2, v3, v4, v5, v6, v7);
}

BOOL UIScrollView.didReachBottom.getter(uint64_t a1)
{
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  id v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;

  v1 = OUTLINED_FUNCTION_2_0(a1, sel_contentSize);
  v3 = v2;
  v4 = OUTLINED_FUNCTION_2_0((uint64_t)v1, sel_frame);
  if (v5 >= v3)
    return 0;
  v6 = OUTLINED_FUNCTION_2_0((uint64_t)v4, sel_frame);
  v8 = v7;
  v9 = OUTLINED_FUNCTION_2_0((uint64_t)v6, sel_contentSize);
  v11 = v8 - v10;
  v12 = OUTLINED_FUNCTION_2_0((uint64_t)v9, sel_contentInset);
  v14 = v11 - v13;
  OUTLINED_FUNCTION_2_0((uint64_t)v12, sel_contentOffset);
  return v14 + v15 >= 0.0;
}

__C::CGRect __swiftcall UIScrollView.calculateVisibleBounds(for:)(__C::CGRect a1)
{
  uint64_t v1;
  double height;
  double width;
  double y;
  double x;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  __C::CGRect result;

  height = a1.size.height;
  width = a1.size.width;
  y = a1.origin.y;
  x = a1.origin.x;
  v6 = sub_1B141C380(v1);
  v8 = OUTLINED_FUNCTION_1_139(x, y, width, height, v6, v7);
  result.size.height = v11;
  result.size.width = v10;
  result.origin.y = v9;
  result.origin.x = v8;
  return result;
}

double UIScrollView.visibleFrame.getter(uint64_t a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  v1 = OUTLINED_FUNCTION_2_0(a1, sel_frame);
  OUTLINED_FUNCTION_4_96((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_3_108();
  return OUTLINED_FUNCTION_1_139(v2, v3, v4, v5, v6, v7);
}

Swift::Void __swiftcall UIScrollView.repositionHorizontalContentInsetAndOffset(layoutMargins:)(UIEdgeInsets layoutMargins)
{
  uint64_t v1;
  void *v2;
  double right;
  double left;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v15;
  BOOL v16;
  double v17;
  double v18;
  double v19;

  right = layoutMargins.right;
  left = layoutMargins.left;
  v5 = OUTLINED_FUNCTION_2_0(v1, sel_contentOffset);
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_2_0((uint64_t)v5, sel_contentInset);
  v15 = v14 == 0.0 && v11 == left;
  if (!v15 || (v12 == 0.0 ? (v16 = v13 == right) : (v16 = 0), !v16))
    v10 = objc_msgSend(v2, sel_setContentInset_, 0.0, left, 0.0, right);
  if (v7 <= 0.0)
  {
    v17 = v7 - (v7 + left);
    OUTLINED_FUNCTION_2_0((uint64_t)v10, sel_contentOffset);
    if (v19 != v17 || v18 != v9)
      objc_msgSend(v2, sel_setContentOffset_, v17, v9);
  }
}

void sub_1B15E92DC()
{
  OUTLINED_FUNCTION_1_140();
  type metadata accessor for Blueprint();
}

void sub_1B15E9344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
  OUTLINED_FUNCTION_1_140();
  type metadata accessor for BlueprintImpressionSection();
}

void sub_1B15E9364()
{
  OUTLINED_FUNCTION_1_140();
  type metadata accessor for BlueprintSection();
}

__n128 sub_1B15E9378(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  __n128 *v11;
  __n128 result;
  char v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v6, v4, a1);
  v7 = v2 + v5[14];
  v8 = OUTLINED_FUNCTION_3_43();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v7, v3, v8);
  v9(v2 + v5[15], v14, v8);
  *(_BYTE *)(v2 + v5[16]) = v1;
  *(_BYTE *)(v2 + v5[17]) = v13;
  v10 = (_QWORD *)(v2 + v5[18]);
  *v10 = v17;
  v10[1] = v18;
  v11 = (__n128 *)(v2 + v5[19]);
  result = v16;
  *v11 = v16;
  v11[1].n128_u64[0] = v15;
  return result;
}

void BlueprintImpressionSection.blueprint.getter()
{
  OUTLINED_FUNCTION_4_97();
}

void sub_1B15E944C(uint64_t a1)
{
  OUTLINED_FUNCTION_1_12(a1);
  OUTLINED_FUNCTION_48();
}

void BlueprintImpressionSection.section.getter()
{
  OUTLINED_FUNCTION_8();
}

void sub_1B15E9480(uint64_t a1)
{
  OUTLINED_FUNCTION_1_12(a1);
  OUTLINED_FUNCTION_48();
}

uint64_t BlueprintImpressionSection.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_43();
  v0 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t BlueprintImpressionSection.endDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_43();
  v0 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

void BlueprintImpressionSection.startTrigger.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_9_8(a1);
}

void BlueprintImpressionSection.endTrigger.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_9_8(a1);
}

uint64_t BlueprintImpressionSection.sessionIdentifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 72));
  sub_1B16B9740();
  return v2;
}

uint64_t BlueprintImpressionSection.viewState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 76);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_QWORD *)(a2 + 16) = v4;
  return sub_1B16B9740();
}

void sub_1B15E9544()
{
  type metadata accessor for Blueprint();
}

uint64_t sub_1B15E9634(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2 + 2;
    v8 = a2[5];
    sub_1B16B9740();
    if (v8)
    {
      *(_QWORD *)(a1 + 40) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, (uint64_t)(a2 + 2), v8);
    }
    else
    {
      v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v7;
      *(_OWORD *)(a1 + 32) = v11;
    }
    type metadata accessor for Blueprint();
  }
  v9 = *a2;
  *(_QWORD *)a1 = *a2;
  v10 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v10;
}

void sub_1B15E992C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  type metadata accessor for Blueprint();
}

void sub_1B15E9988()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15E99AC(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v18, v8);
  v19 = v1 + *(int *)(v6 + 60);
  v20 = type metadata accessor for BlueprintItem(255, v4, v5, v9);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v20);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v20);
  v10 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v19, v10);
  swift_release();
  v11 = v1 + v2[13];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v11, v3);
  v12 = v11 + *(int *)(a1 + 52);
  v13 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v1 + v2[14];
  v15 = sub_1B16B7BB0();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v16(v1 + v2[15], v15);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1B15E9B60(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 2;
  v5 = a2[5];
  sub_1B16B9740();
  if (v5)
  {
    *(_QWORD *)(a1 + 40) = v5;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v5 - 8))(a1 + 16, v4, v5);
  }
  else
  {
    v6 = v4[1];
    *(_OWORD *)(a1 + 16) = *v4;
    *(_OWORD *)(a1 + 32) = v6;
  }
  type metadata accessor for Blueprint();
}

void sub_1B15E9BF4()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15E9C20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v36, v34, v8);
  v9 = *(int *)(v4 + 60);
  v35 = v2 + v9;
  v37 = v1 + v9;
  v40 = type metadata accessor for BlueprintItem(255, v5, v6, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v40);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v40);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v37, v35, v11);
  *(_QWORD *)(v1 + *(int *)(v38 + 64)) = *(_QWORD *)(v2 + *(int *)(v38 + 64));
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  swift_retain();
  v15(v13, v14);
  v16 = *(int *)(a1 + 52);
  v17 = v13 + v16;
  v18 = v14 + v16;
  v19 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = v3[14];
  v21 = v1 + v20;
  v22 = v2 + v20;
  v23 = sub_1B16B7BB0();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  v24(v1 + v3[15], v2 + v3[15], v23);
  v25 = v3[17];
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v25) = *(_BYTE *)(v2 + v25);
  v26 = v3[18];
  v27 = v3[19];
  v28 = (_QWORD *)(v1 + v26);
  v29 = (_QWORD *)(v2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v1 + v27;
  v32 = v2 + v27;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  sub_1B16B9740();
  sub_1B16B9740();
  return v1;
}

void sub_1B15E9E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 40) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
LABEL_8:
  type metadata accessor for Blueprint();
}

void sub_1B15E9EF4()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15E9F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v33, v31, v8);
  v9 = *(int *)(v4 + 60);
  v32 = v2 + v9;
  v34 = v1 + v9;
  v37 = type metadata accessor for BlueprintItem(255, v5, v6, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v37);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v37);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v34, v32, v11);
  *(_QWORD *)(v1 + *(int *)(v35 + 64)) = *(_QWORD *)(v2 + *(int *)(v35 + 64));
  swift_retain();
  swift_release();
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v1 + v12, v2 + v12);
  v15 = *(int *)(a1 + 52);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v3[14];
  v20 = v1 + v19;
  v21 = v2 + v19;
  v22 = sub_1B16B7BB0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24);
  v23(v20, v21, v22);
  v23(v1 + v3[15], v2 + v3[15], v22);
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v3[17]) = *(_BYTE *)(v2 + v3[17]);
  v24 = v3[18];
  v25 = (_QWORD *)(v1 + v24);
  v26 = (_QWORD *)(v2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v27 = v3[19];
  v28 = (_QWORD *)(v1 + v27);
  v29 = (_QWORD *)(v2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1B15EA160(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  type metadata accessor for Blueprint();
}

void sub_1B15EA1C0()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15EA1E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v31, v29, v8);
  v9 = *(int *)(v6 + 60);
  v30 = v2 + v9;
  v32 = v1 + v9;
  v34 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v34);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v34);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v32, v30, v11);
  *(_QWORD *)(v1 + *(int *)(v6 + 64)) = *(_QWORD *)(v2 + *(int *)(v6 + 64));
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v1 + v12, v2 + v12);
  v15 = *(int *)(a1 + 52);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = v3[14];
  v20 = v1 + v19;
  v21 = v2 + v19;
  v22 = sub_1B16B7BB0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  v23(v1 + v3[15], v2 + v3[15], v22);
  v24 = v3[17];
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v24) = *(_BYTE *)(v2 + v24);
  v25 = v3[19];
  *(_OWORD *)(v1 + v3[18]) = *(_OWORD *)(v2 + v3[18]);
  v26 = v1 + v25;
  v27 = v2 + v25;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  return v1;
}

void sub_1B15EA3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  type metadata accessor for Blueprint();
}

void sub_1B15EA458()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15EA484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v36, v34, v8);
  v9 = *(int *)(v4 + 60);
  v35 = v2 + v9;
  v37 = v1 + v9;
  v40 = type metadata accessor for BlueprintItem(255, v5, v6, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v40);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v40);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v37, v35, v11);
  *(_QWORD *)(v1 + *(int *)(v38 + 64)) = *(_QWORD *)(v2 + *(int *)(v38 + 64));
  swift_release();
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v1 + v12, v2 + v12);
  v15 = *(int *)(a1 + 52);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = v3[14];
  v20 = v1 + v19;
  v21 = v2 + v19;
  v22 = sub_1B16B7BB0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  v23(v1 + v3[15], v2 + v3[15], v22);
  v24 = v3[17];
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v24) = *(_BYTE *)(v2 + v24);
  v25 = v3[18];
  v26 = (_QWORD *)(v1 + v25);
  v27 = (uint64_t *)(v2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = v3[19];
  v31 = v1 + v30;
  v32 = v2 + v30;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B15EA698()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B15EA6A4()
{
  OUTLINED_FUNCTION_4_97();
}

uint64_t sub_1B15EA770()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B15EA77C()
{
  OUTLINED_FUNCTION_4_97();
}

void type metadata accessor for BlueprintImpressionSection()
{
  JUMPOUT(0x1B5E1F034);
}

void UIViewController.first<A>(parentConformingToType:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  id i;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  v4 = v3;
  v5 = sub_1B16BA328();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v8, v11);
  v14 = (char *)&v31 - v13;
  v16 = MEMORY[0x1E0C80A78](v12, v15);
  v33 = (uint64_t)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v31 - v19;
  v34 = v0;
  OUTLINED_FUNCTION_5_4();
  v21 = v0;
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_131((uint64_t)v14, 0);
    OUTLINED_FUNCTION_50_16((uint64_t)v20, (uint64_t)v14);
    OUTLINED_FUNCTION_50_16(v4, (uint64_t)v20);
    v22 = v4;
  }
  else
  {
    v32 = v4;
    OUTLINED_FUNCTION_131((uint64_t)v14, 1);
    v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v14, v5);
    v24 = v21;
    for (i = objc_msgSend(v24, sel_parentViewController); ; i = OUTLINED_FUNCTION_2_0(v27, sel_parentViewController))
    {
      v26 = i;

      if (!v26)
      {
        v22 = v32;
        v28 = 1;
        goto LABEL_10;
      }
      v34 = v26;
      v24 = v26;
      if (OUTLINED_FUNCTION_3_0())
        break;
      OUTLINED_FUNCTION_131((uint64_t)v10, 1);
      v27 = ((uint64_t (*)(char *, uint64_t))v23)(v10, v5);
    }
    OUTLINED_FUNCTION_131((uint64_t)v10, 0);

    v29 = v33;
    OUTLINED_FUNCTION_50_16(v33, (uint64_t)v10);
    v30 = v32;
    OUTLINED_FUNCTION_50_16(v32, v29);
    v22 = v30;
  }
  v28 = 0;
LABEL_10:
  __swift_storeEnumTagSinglePayload(v22, v28, 1, v2);
  OUTLINED_FUNCTION_47();
}

void UIViewController.first<A>(parentOfType:)()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  if (swift_dynamicCastUnknownClass())
  {
    OUTLINED_FUNCTION_19_49();
  }
  else
  {
    v1 = v0;
    v2 = v1;
    do
    {
      v3 = OUTLINED_FUNCTION_2_0((uint64_t)v1, sel_parentViewController);

      if (!v3)
        break;
      v1 = (id)swift_dynamicCastUnknownClass();
      v2 = v3;
    }
    while (!v1);
  }
  OUTLINED_FUNCTION_67();
}

Swift::Bool __swiftcall UIViewController.inHierarchy(of:)(UIViewController *of)
{
  uint64_t v1;

  return sub_1B15EABB0(v1, (uint64_t)of);
}

void __swiftcall UIViewController.topParentNavigationController()(UINavigationController_optional *__return_ptr retstr)
{
  void *v1;

  sub_1B15EB76C(v1);
}

void UIViewController.findDescendant<A>(ofType:)()
{
  UIViewController.findDescendant<A>(ofType:where:)();
}

void UIViewController.topPresentedViewController.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = v0;
  v2 = objc_msgSend(v1, sel_presentedViewController);
  if (v2)
  {
    while (1)
    {
      v3 = v2;
      if ((objc_msgSend(v2, sel_isBeingDismissed) & 1) != 0)
        break;

      v2 = OUTLINED_FUNCTION_2_0(v4, sel_presentedViewController);
      v1 = v3;
      if (!v2)
        goto LABEL_6;
    }

  }
LABEL_6:
  OUTLINED_FUNCTION_31();
}

void UIViewController.segmentedViewController.getter()
{
  sub_1B13D940C((void (*)(_QWORD))type metadata accessor for SegmentedViewController, (void (*)(void))UIViewController.segmentedViewController.getter);
}

uint64_t sub_1B15EABB0(uint64_t result, uint64_t a2)
{
  id v2;
  char v3;

  if (result)
  {
    if (result == a2)
    {
      return 1;
    }
    else
    {
      v2 = objc_msgSend((id)result, sel_parentViewController);
      v3 = sub_1B15EABB0();

      return v3 & 1;
    }
  }
  return result;
}

id UIViewController.first<A>(viewOfType:where:)()
{
  return sub_1B15EAD70();
}

id sub_1B15EAC20(void *a1)
{
  id v2;
  unint64_t v3;
  unint64_t v4;
  id v6;
  void *v7;
  uint64_t v8;
  id result;
  void *v10;
  void *v11;

  v2 = objc_msgSend(a1, sel_childViewControllers);
  OUTLINED_FUNCTION_5_4();
  v3 = sub_1B16B9B54();

  if (v3 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    while (__OFSUB__(v4--, 1))
    {
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      OUTLINED_FUNCTION_36();
      v4 = OUTLINED_FUNCTION_47_4();
      OUTLINED_FUNCTION_7_0();
      if (!v4)
        goto LABEL_11;
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = (id)MEMORY[0x1B5E1DF60](v4, v3);
      goto LABEL_9;
    }
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_15;
    if (v4 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_16;
    v6 = *(id *)(v3 + 32 + 8 * v4);
LABEL_9:
    v7 = v6;
    v8 = sub_1B15EAC20();

    if (v8)
    {
      OUTLINED_FUNCTION_7_0();
      return (id)v8;
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_7_0();
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v10 = result;
    v11 = sub_1B15A4444(result, a1);

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B15EAD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  id v15;
  void *v16;
  uint64_t v17;
  id result;
  uint64_t v19;
  void *v20;
  _QWORD v21[6];
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_6();
  v24 = v0;
  v25 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v22 = v10;
  v11 = objc_msgSend(v10, sel_childViewControllers);
  OUTLINED_FUNCTION_5_4();
  v12 = sub_1B16B9B54();

  if (v12 >> 62)
    goto LABEL_19;
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v13)
  {
    v23 = v12 & 0xFFFFFFFFFFFFFF8;
    while (!__OFSUB__(v13--, 1))
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v15 = (id)MEMORY[0x1B5E1DF60](v13, v12);
      }
      else
      {
        if ((v13 & 0x8000000000000000) != 0)
          goto LABEL_17;
        if (v13 >= *(_QWORD *)(v23 + 16))
          goto LABEL_18;
        v15 = *(id *)(v12 + 32 + 8 * v13);
      }
      v16 = v15;
      v17 = ((uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))sub_1B15EAD70)(v9, v15, v7, v5, v3);

      if (v17)
      {
        OUTLINED_FUNCTION_113();
        return (id)v17;
      }
      if (!v13)
        goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    sub_1B16B9740();
    v13 = sub_1B16BA76C();
    OUTLINED_FUNCTION_113();
  }
LABEL_12:
  OUTLINED_FUNCTION_113();
  result = objc_msgSend(v22, sel_view);
  if (result)
  {
    v20 = result;
    MEMORY[0x1E0C80A78](result, v19);
    v21[2] = v3;
    v21[3] = v7;
    v21[4] = v5;
    v21[5] = v22;
    v17 = UIView.first<A>(viewOfType:where:)(v9, sub_1B15EBE48, (uint64_t)v21, v3);

    return (id)v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B15EAF38(ProtocolDescriptor *a1)
{
  uint64_t inited;
  unint64_t v3;
  uint64_t v4;
  ProtocolDescriptor *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  UIViewController *v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  ProtocolDescriptor *v22;
  uint64_t v23;
  unint64_t v24;

  OUTLINED_FUNCTION_24_34();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C95D0;
  *(_QWORD *)(inited + 32) = a1;
  v24 = inited;
  sub_1B16B9B78();
  v3 = v24;
  if (v24 >> 62)
  {
LABEL_29:
    v22 = a1;
    OUTLINED_FUNCTION_36();
    v23 = OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_7_0();
    if (v23)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = a1;
    if (v4)
    {
LABEL_3:
      a1 = &protocol descriptor for MastheadViewControllerType;
      do
      {
        if (v3 >> 62)
        {
          OUTLINED_FUNCTION_11_54();
          OUTLINED_FUNCTION_36();
          v18 = OUTLINED_FUNCTION_47_4();
          result = OUTLINED_FUNCTION_7_0();
          if (!v18)
          {
            __break(1u);
            return result;
          }
          OUTLINED_FUNCTION_36();
          v20 = OUTLINED_FUNCTION_47_4();
          OUTLINED_FUNCTION_7_0();
          if (!v20)
            goto LABEL_26;
        }
        else
        {
          OUTLINED_FUNCTION_8_75();
          if (!v6)
          {
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        if ((v3 & 0xC000000000000001) != 0)
          OUTLINED_FUNCTION_25_4();
        OUTLINED_FUNCTION_8_75();
        if (!v7)
          goto LABEL_27;
        v8 = OUTLINED_FUNCTION_54_2();
        if (v3 >> 62)
        {
          OUTLINED_FUNCTION_11_54();
          OUTLINED_FUNCTION_36();
          v9 = sub_1B16BA76C();
          OUTLINED_FUNCTION_7_0();
        }
        else
        {
          v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (!v9)
          goto LABEL_28;
        OUTLINED_FUNCTION_10_65();
        swift_getObjectType();
        v10 = dynamic_cast_existential_1_conditional((uint64_t)v8);
        if (v10)
        {
          v21 = v10;
          swift_bridgeObjectRelease();
          return v21;
        }
        type metadata accessor for LazyViewController();
        if (swift_dynamicCastClass())
        {
          v11 = v8;
          LazyViewController.loadViewController()(v12);
          v14 = v13;

        }
        v15 = objc_msgSend(v8, sel_childViewControllers);
        OUTLINED_FUNCTION_5_4();
        v16 = sub_1B16B9B54();

        sub_1B14922C0(v16);
        v3 = v24;
        if (v24 >> 62)
        {
          OUTLINED_FUNCTION_36();
          v17 = OUTLINED_FUNCTION_47_4();
          OUTLINED_FUNCTION_7_0();
        }
        else
        {
          v17 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
      }
      while (v17);
    }
  }
  OUTLINED_FUNCTION_7_0();
  return 0;
}

uint64_t sub_1B15EB184@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t inited;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  UIViewController *v23;
  void *v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  OUTLINED_FUNCTION_24_34();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C95D0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)&v55 = inited;
  sub_1B16B9B78();
  v5 = v55;
  if ((unint64_t)v55 >> 62)
  {
LABEL_29:
    v40 = a1;
    OUTLINED_FUNCTION_36();
    v41 = sub_1B16BA76C();
    OUTLINED_FUNCTION_7_0();
    if (v41)
      goto LABEL_3;
LABEL_30:
    result = OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v6 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = a1;
  if (!v6)
    goto LABEL_30;
LABEL_3:
  a1 = &qword_1EEF35270;
  while (!(v5 >> 62))
  {
    OUTLINED_FUNCTION_8_75();
    if (!v8)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
LABEL_6:
    if ((v5 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_25_4();
    OUTLINED_FUNCTION_8_75();
    if (!v9)
      goto LABEL_27;
    v10 = OUTLINED_FUNCTION_54_2();
    if (v5 >> 62)
    {
      OUTLINED_FUNCTION_11_54();
      OUTLINED_FUNCTION_36();
      v11 = sub_1B16BA76C();
      OUTLINED_FUNCTION_7_0();
    }
    else
    {
      v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v11)
      goto LABEL_28;
    OUTLINED_FUNCTION_10_65();
    v53 = (uint64_t)v10;
    OUTLINED_FUNCTION_5_4();
    sub_1B13CC6B4(0, &qword_1EEF35270);
    v12 = v10;
    v13 = OUTLINED_FUNCTION_3_0();
    if ((v13 & 1) != 0)
    {
      OUTLINED_FUNCTION_28_30(v13, v14, v15, v16, v17, v18, v19, v20, v42, v45, v47, v49, v51, v53, v55);

      v32 = OUTLINED_FUNCTION_7_0();
      return OUTLINED_FUNCTION_20_46(v32, v33, v34, v35, v36, v37, v38, v39, v43, v44, v46, v48, v50, v52, v54, v55);
    }
    OUTLINED_FUNCTION_26_34();
    sub_1B1419974(v21, &qword_1EEF35F40, &qword_1EEF35270);
    type metadata accessor for LazyViewController();
    if (swift_dynamicCastClass())
    {
      v22 = v12;
      LazyViewController.loadViewController()(v23);
      v25 = v24;

    }
    v26 = objc_msgSend(v12, sel_childViewControllers);
    v27 = sub_1B16B9B54();

    sub_1B14922C0(v27);
    v5 = v55;
    if ((unint64_t)v55 >> 62)
    {
      OUTLINED_FUNCTION_36();
      v28 = OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_7_0();
    }
    else
    {
      v28 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v28)
      goto LABEL_30;
  }
  OUTLINED_FUNCTION_11_54();
  OUTLINED_FUNCTION_36();
  v29 = OUTLINED_FUNCTION_33_2();
  result = OUTLINED_FUNCTION_7_0();
  if (v29)
  {
    OUTLINED_FUNCTION_36();
    v31 = OUTLINED_FUNCTION_33_2();
    OUTLINED_FUNCTION_7_0();
    if (!v31)
      goto LABEL_26;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void UIViewController.findDescendant<A>(ofType:where:)()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t inited;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  UIViewController *v26;
  void *v27;
  void *v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *);
  uint64_t v40;
  void *v41;
  unint64_t v42;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v39 = v4;
  v40 = v5;
  v37 = v6;
  v7 = sub_1B16BA328();
  v38 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v11 = (char *)&v36 - v10;
  v12 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v9, v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_24_34();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C95D0;
  *(_QWORD *)(inited + 32) = v0;
  v42 = inited;
  sub_1B16B9B78();
  v17 = v42;
  if (v42 >> 62)
    goto LABEL_31;
  v18 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  v19 = v1;
  if (v18)
  {
    while (1)
    {
      if (v17 >> 62)
      {
        OUTLINED_FUNCTION_11_54();
        OUTLINED_FUNCTION_36();
        v31 = sub_1B16BA76C();
        OUTLINED_FUNCTION_7_0();
        if (!v31)
        {
          __break(1u);
          return;
        }
        OUTLINED_FUNCTION_36();
        v1 = (void *)sub_1B16BA76C();
        OUTLINED_FUNCTION_7_0();
        if (!v1)
          goto LABEL_28;
      }
      else
      {
        OUTLINED_FUNCTION_8_75();
        if (!v20)
        {
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
      }
      if ((v17 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_25_4();
      OUTLINED_FUNCTION_8_75();
      if (!v21)
        goto LABEL_29;
      v1 = OUTLINED_FUNCTION_54_2();
      if (v17 >> 62)
      {
        OUTLINED_FUNCTION_11_54();
        OUTLINED_FUNCTION_36();
        v22 = sub_1B16BA76C();
        OUTLINED_FUNCTION_7_0();
      }
      else
      {
        v22 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v22)
      {
        OUTLINED_FUNCTION_10_65();
        v41 = v1;
        OUTLINED_FUNCTION_5_4();
        v23 = v1;
        if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
        {
          OUTLINED_FUNCTION_131((uint64_t)v11, 0);
          v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
          v24(v15, v11, v3);
          if ((v39(v15) & 1) != 0)
          {

            OUTLINED_FUNCTION_7_0();
            v32 = v37;
            v24((char *)v37, v15, v3);
            v33 = 0;
            goto LABEL_33;
          }
          (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v3);
        }
        else
        {
          OUTLINED_FUNCTION_131((uint64_t)v11, 1);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v7);
        }
        type metadata accessor for LazyViewController();
        if (swift_dynamicCastClass())
        {
          v25 = v23;
          LazyViewController.loadViewController()(v26);
          v28 = v27;

        }
        v29 = objc_msgSend(v23, sel_childViewControllers);
        v30 = sub_1B16B9B54();

        sub_1B14922C0(v30);
        v17 = v42;
        if (v42 >> 62)
        {
          OUTLINED_FUNCTION_36();
          v1 = (void *)OUTLINED_FUNCTION_47_4();
          OUTLINED_FUNCTION_7_0();
          if (!v1)
            break;
        }
        else
        {
          v1 = *(void **)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v1)
            break;
        }
      }
      else
      {
LABEL_30:
        __break(1u);
LABEL_31:
        v34 = v1;
        OUTLINED_FUNCTION_36();
        v35 = sub_1B16BA76C();
        OUTLINED_FUNCTION_7_0();
        if (!v35)
          break;
      }
    }
  }
  OUTLINED_FUNCTION_7_0();
  v33 = 1;
  v32 = v37;
LABEL_33:
  __swift_storeEnumTagSinglePayload(v32, v33, 1, v3);
  OUTLINED_FUNCTION_47();
}

id sub_1B15EB76C(void *a1)
{
  uint64_t v1;
  id result;
  id v3;

  result = objc_msgSend(a1, sel_parentViewController);
  if (result)
  {
    v3 = result;
    objc_opt_self();
    result = (id)swift_dynamicCastObjCClass();
    if (!result)
    {
      sub_1B15EB76C(v3);
      OUTLINED_FUNCTION_12_0();
      return (id)v1;
    }
  }
  return result;
}

void UIViewController.topParentViewController.getter()
{
  void *v0;
  uint64_t v1;

  if (objc_msgSend(v0, sel_parentViewController))
  {
    do
      OUTLINED_FUNCTION_12_0();
    while (OUTLINED_FUNCTION_2_0(v1, sel_parentViewController));
  }
  OUTLINED_FUNCTION_31();
}

id UIViewController.tabBarSplitViewFousable()()
{
  void *v0;

  return objc_msgSend(v0, sel_tabBarSplitViewFocusable);
}

id sub_1B15EB850(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = UIViewController.tabBarSplitViewFousable()();

  return v2;
}

uint64_t UIViewController.tabBarSplitViewFocusable()()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v6;
  void *v7;

  v7 = &unk_1EEF82698;
  if (OUTLINED_FUNCTION_22_36())
  {
    OUTLINED_FUNCTION_19_49();
  }
  else
  {
    v2 = v0;
    while (1)
    {
      v3 = objc_msgSend(v2, sel_parentViewController, v6, v7);
      OUTLINED_FUNCTION_12_0();
      if (!v0)
        break;
      v6 = &unk_1EEF82698;
      v4 = OUTLINED_FUNCTION_22_36();
      v2 = v0;
      if (v4)
        return v4;
    }
    return 0;
  }
  return v1;
}

id sub_1B15EB920(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)UIViewController.tabBarSplitViewFocusable()();

  return v2;
}

void UIViewController.cardSplitViewFocusable()(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  OUTLINED_FUNCTION_5_4();
  sub_1B13CC6B4(0, &qword_1ED17B838);
  v2 = OUTLINED_FUNCTION_19_49();
  v3 = OUTLINED_FUNCTION_3_0();
  if (!(_DWORD)v3)
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1B1419974((uint64_t)&v23, qword_1ED17BAD0, &qword_1ED17B838);
    v11 = v2;
    v12 = objc_msgSend(v11, sel_parentViewController);

    if (!v12)
    {
LABEL_5:
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return;
    }
    while (1)
    {
      v27 = (uint64_t)v12;
      v13 = v12;
      if (OUTLINED_FUNCTION_3_0())
        break;
      OUTLINED_FUNCTION_26_34();
      sub_1B1419974(v14, qword_1ED17BAD0, &qword_1ED17B838);
      v12 = objc_msgSend(v13, sel_parentViewController);

      if (!v12)
        goto LABEL_5;
    }

  }
  v15 = OUTLINED_FUNCTION_28_30(v3, v4, v5, v6, v7, v8, v9, v10, v23, v24, *((uint64_t *)&v24 + 1), v25, v26, v27, v28);
  OUTLINED_FUNCTION_20_46(v15, v16, v17, v18, v19, v20, v21, v22, v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, v26, v27, v28);
}

void Identifiable<>.deregisterInScene()(uint64_t a1, uint64_t a2)
{
  sub_1B13BFBBC(a1, a2, (void (*)(uint64_t))sub_1B146AFC4);
}

uint64_t sub_1B15EBAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      v6 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  sub_1B16B9740();
  v6 = sub_1B16BA76C();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v6 < v2)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v2 - v4))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (!(*v3 >> 62))
  {
    v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_34:
  sub_1B16B9740();
  v7 = sub_1B16BA76C();
  swift_bridgeObjectRelease();
LABEL_9:
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_36:
    sub_1B16B9740();
    v12 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_17;
  }
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_20;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_36;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v12 <= v8)
    v12 = v8;
  sub_1B16B9740();
  *v3 = MEMORY[0x1B5E1DF6C](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  v13 = v11 + 32;
  v14 = v11 + 32 + 8 * v4;
  sub_1B13D5C64();
  swift_arrayDestroy();
  if (!v5)
    return sub_1B16B9B78();
  if (*v3 >> 62)
  {
    sub_1B16B9740();
    v15 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFSUB__(v15, v2))
  {
    __break(1u);
  }
  else
  {
    result = sub_1B1455714(v13 + 8 * v2, v15 - v2, v14);
    if (!(*v3 >> 62))
    {
      v17 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_26;
    }
  }
  sub_1B16B9740();
  v17 = sub_1B16BA76C();
  result = swift_bridgeObjectRelease();
LABEL_26:
  if (!__OFADD__(v17, v5))
  {
    *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v17 + v5;
    return sub_1B16B9B78();
  }
  __break(1u);
  return result;
}

void sub_1B15EBD40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  OUTLINED_FUNCTION_6();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = v2;
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 16);
  if (v6 < v2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = v1;
  v8 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = v3;
  if (!swift_isUniquelyReferenced_nonNull_native() || v6 + v9 > *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_1B14D0F6C();
    v5 = v11;
  }
  v12 = (char *)(v5 + 32 + 72 * v7);
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_13;
  v13 = *(_QWORD *)(v5 + 16);
  if (__OFSUB__(v13, v4))
    goto LABEL_19;
  sub_1B14D1ED4((char *)(v5 + 32 + 72 * v4), v13 - v4, v12 + 72);
  v14 = *(_QWORD *)(v5 + 16);
  v15 = __OFADD__(v14, v9);
  v16 = v14 + v9;
  if (!v15)
  {
    *(_QWORD *)(v5 + 16) = v16;
LABEL_13:
    memcpy(v12, v10, 0x41uLL);
    *v0 = v5;
    OUTLINED_FUNCTION_47();
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1B15EBE48(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 24))(*(_QWORD *)(v1 + 40), a1) & 1;
}

uint64_t StateCommandBarButtonItem.identifier.getter()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70));
  OUTLINED_FUNCTION_13();
  v2 = *v1;
  sub_1B16B9740();
  return v2;
}

uint64_t StateCommandBarButtonItem.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x70));
  OUTLINED_FUNCTION_13();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*StateCommandBarButtonItem.identifier.modify())()
{
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

void StateCommandBarButtonItem.state.getter()
{
  char *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t ObjectType;

  v1 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v0);
  v2 = *(_QWORD *)&v0[v1[15] + 8];
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v2 + 80))(*(_QWORD *)&v0[v1[17]], &v0[v1[18]], v1[10], v1[11], v1[13], ObjectType, v2);
  OUTLINED_FUNCTION_67();
}

#error "1B15EC070: call analysis failed (funcsize=33)"

void StateCommandBarButtonItem.state.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  char v95;
  void *v96;

  OUTLINED_FUNCTION_6();
  a19 = v21;
  a20 = v22;
  v23 = v20;
  v25 = v24;
  v26 = *v20;
  v27 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v28 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & v26);
  v29 = v28[11];
  v81 = sub_1B16BA328();
  v80 = *(_QWORD *)(v81 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v30, v31);
  v77 = (char *)&v71 - v32;
  v73 = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v33, v34);
  v72 = (char *)&v71 - v35;
  v36 = sub_1B15EC54C(v23);
  v37 = v27;
  v38 = (char *)v23 + *(_QWORD *)((*v27 & *v23) + 0x98);
  v39 = *((_QWORD *)v38 + 2);
  v91 = *(_OWORD *)v38;
  *(_QWORD *)&v92 = v39;
  v40 = sub_1B13A1BE4(255, (unint64_t *)&qword_1ED1838D0);
  v41 = v28[13];
  type metadata accessor for StateCommandValue(0, v29, v40, v41);
  OUTLINED_FUNCTION_35_22();
  *(_QWORD *)(v42 - 256) = v25;
  StateCommandValue.value(for:)(v25, v43, v44);
  v45 = v96;
  OUTLINED_FUNCTION_128();
  v47 = objc_msgSend(v45, sel_imageByApplyingSymbolConfiguration_, *(_QWORD *)((char *)v23 + v46));

  v79 = v36;
  v78 = v47;
  objc_msgSend(v36, sel_setImage_forState_, v47, 0);
  v48 = (_QWORD *)(*v37 & *v23);
  v82 = *(_QWORD *)((char *)v23 + v48[15] + 8);
  ObjectType = swift_getObjectType();
  v50 = *(_QWORD *)((char *)v23 + v48[17]);
  v51 = (uint64_t)v23 + v48[18];
  v52 = OUTLINED_FUNCTION_25();
  swift_unknownObjectWeakInit();
  v53 = (_QWORD *)OUTLINED_FUNCTION_25();
  v83 = v28[10];
  v53[2] = v83;
  v53[3] = v29;
  v84 = v29;
  v54 = v28[12];
  v53[4] = v54;
  v53[5] = v41;
  v85 = v41;
  v53[6] = v52;
  swift_retain();
  v74 = v50;
  v75 = v51;
  v76 = ObjectType;
  v55 = ObjectType;
  v56 = v82;
  CommandCenterType.canExecute<A>(command:context:closure:)(v50, v51, (uint64_t)sub_1B15EC6BC, (uint64_t)v53, v55, v82);
  OUTLINED_FUNCTION_47_1();
  swift_release();
  __swift_project_boxed_opaque_existential_1(&v91, *((uint64_t *)&v92 + 1));
  sub_1B16B806C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
  sub_1B15EC6CC();
  v57 = (char *)v23 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v23) + 0xA0);
  if (*(_QWORD *)v57)
  {
    v58 = v57[64];
    v59 = *((_QWORD *)v57 + 1);
    *(_QWORD *)&v91 = *(_QWORD *)v57;
    *((_QWORD *)&v91 + 1) = v59;
    v60 = *((_OWORD *)v57 + 2);
    v92 = *((_OWORD *)v57 + 1);
    v93 = v60;
    v94 = *((_OWORD *)v57 + 3);
    v95 = v58;
    v87 = v83;
    v88 = v84;
    v89 = v54;
    v90 = v85;
    type metadata accessor for StateCommandBarButtonItem.AccessibilityViewModel();
  }
  v61 = v86;
  v62 = v85;
  v63 = v84;
  v64 = (uint64_t)v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 80))(v74, v75, v83, v84, v85, v76, v56);
  if (__swift_getEnumTagSinglePayload(v64, 1, v63) == 1)
  {
    v65 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v66 = v81;
    v65(v61, v81);
    OUTLINED_FUNCTION_6_13((uint64_t)&a11);
    OUTLINED_FUNCTION_6_13((uint64_t)&a10);
    v65(v64, v66);
  }
  else
  {
    v67 = v73;
    v68 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v72, v64, v63);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v62 + 8))(&v91, v63, v62);
    sub_1B15EC94C(((v91 & 0xFE) != 2) & v91);
    OUTLINED_FUNCTION_6_13((uint64_t)&a11);
    OUTLINED_FUNCTION_6_13((uint64_t)&a10);
    v69 = OUTLINED_FUNCTION_20_47();
    v70(v69);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v63);
  }
  OUTLINED_FUNCTION_47();
}

id sub_1B15EC54C(_QWORD *a1)
{
  id v2;
  void *v3;
  id v4;
  CGRect *v5;
  double Width;
  id v7;
  id v8;

  v2 = objc_msgSend(a1, sel_customView);
  if (v2)
  {
    v3 = v2;
    objc_opt_self();
    v4 = (id)swift_dynamicCastObjCClass();
    if (v4)
      return v4;

  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, a1, sel_barButtonItemPressedWithSender_, 64);
  v5 = (CGRect *)((char *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0xB0));
  if ((LOBYTE(v5[1].origin.x) & 1) == 0)
  {
    Width = CGRectGetWidth(*v5);
    v7 = objc_msgSend(v4, sel_widthAnchor);
    v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, Width);

    objc_msgSend(v8, sel_setActive_, 1);
  }
  objc_msgSend(a1, sel_setCustomView_, v4);
  return v4;
}

uint64_t sub_1B15EC698()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B15EC6BC(char a1)
{
  uint64_t v1;

  sub_1B14C4D2C(a1, *(_QWORD *)(v1 + 48));
}

uint64_t sub_1B15EC6CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = sub_1B16BA328();
  result = MEMORY[0x1E0C80A78](v2, v3);
  if (*(_QWORD *)((char *)v0 + *(_QWORD *)(v1 + 160)))
  {
    sub_1B16B9740();
    swift_retain();
    sub_1B16B9740();
    sub_1B16B9740();
    StateCommandBarButtonItem.state.getter();
    type metadata accessor for StateCommandBarButtonItem.AccessibilityViewModel();
  }
  return result;
}

id sub_1B15EC94C(char a1)
{
  void *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v3 = *MEMORY[0x1E0DC46B0];
  v4 = (unint64_t)objc_msgSend(v1, sel_accessibilityTraits);
  v5 = -1;
  if ((v4 & v3) != 0)
    v5 = ~v3;
  v6 = v5 & v4;
  if ((v4 & v3) == v3)
    v7 = 0;
  else
    v7 = v3;
  v8 = v7 | v4;
  if ((a1 & 1) != 0)
    v9 = v8;
  else
    v9 = v6;
  return objc_msgSend(v1, sel_setAccessibilityTraits_, v9);
}

void type metadata accessor for StateCommandBarButtonItem.AccessibilityViewModel()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t (*StateCommandBarButtonItem.state.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_5_13();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  StateCommandBarButtonItem.state.getter();
  return sub_1B15ECA60;
}

#error "1B15ECAC0: call analysis failed (funcsize=35)"

id StateCommandBarButtonItem.__allocating_init(commandCenter:commandSource:command:context:image:symbolConfiguration:contentSize:stateAccessibilityViewModel:)()
{
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_12_55();
  return StateCommandBarButtonItem.init(commandCenter:commandSource:command:context:image:symbolConfiguration:contentSize:stateAccessibilityViewModel:)();
}

id StateCommandBarButtonItem.init(commandCenter:commandSource:command:context:image:symbolConfiguration:contentSize:stateAccessibilityViewModel:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  __n128 *v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v36;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  objc_class *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[5];
  objc_super v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_6();
  v50 = v1;
  v51 = v2;
  v39 = v4;
  v40 = v3;
  v6 = v5;
  v47 = v7;
  v46 = v8;
  v38 = v9;
  v45 = v10;
  v42 = (objc_class *)OUTLINED_FUNCTION_4();
  v11 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v12 = OUTLINED_FUNCTION_55();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  OUTLINED_FUNCTION_23_5();
  v15 = (_QWORD *)((char *)v0 + v11[14]);
  v16 = v0;
  OUTLINED_FUNCTION_34_26();
  v17 = sub_1B16B7BBC();
  v19 = v18;
  OUTLINED_FUNCTION_13_54(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8), *v6);
  *v15 = v17;
  v15[1] = v19;
  OUTLINED_FUNCTION_21_38();
  *v20 = v45;
  v20[1] = v38;
  OUTLINED_FUNCTION_33_27();
  OUTLINED_FUNCTION_30_35(v21);
  *(_QWORD *)((char *)v0 + v22) = v46;
  OUTLINED_FUNCTION_22_37();
  v23 = v11[10];
  v43 = sub_1B16BA328();
  v44 = *(_QWORD *)(v43 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v12, v47, v43);
  OUTLINED_FUNCTION_6_96();
  OUTLINED_FUNCTION_11_55(v24);
  sub_1B1408F9C(v39, v25);
  OUTLINED_FUNCTION_128();
  *(_QWORD *)((char *)v0 + v26) = v40;
  OUTLINED_FUNCTION_0_160();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_177();
  swift_retain();
  v41 = v40;

  v49.receiver = v0;
  v49.super_class = v42;
  v27 = objc_msgSendSuper2(&v49, sel_init);
  v28 = OUTLINED_FUNCTION_4();
  v29 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_54_1();
  v30 = (_QWORD *)OUTLINED_FUNCTION_25();
  v31 = v23;
  v30[2] = v23;
  v32 = v11[11];
  v30[3] = v32;
  v33 = v11[12];
  v30[4] = v33;
  v34 = v11[13];
  v30[5] = v34;
  v30[6] = v29;
  v35 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 88);
  v36 = v27;
  swift_retain();
  v35(v48, v46, v47, sub_1B15ECE2C, v30, v31, v32, v33, v34, v28, v38);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_16_53(v48);
  OUTLINED_FUNCTION_7_78();
  swift_unknownObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_47_1();

  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return v36;
}

void StateCommandBarButtonItem.__allocating_init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;

  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_13_1();
  v8 = OUTLINED_FUNCTION_12_55();
  StateCommandBarButtonItem.init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)(v8, v9, v10, v11, v12, v13, a7);
  OUTLINED_FUNCTION_0_28();
}

void StateCommandBarButtonItem.init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 *a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t ObjectType;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v38;
  _QWORD *v39;
  objc_class *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v48[3];
  objc_super v49;

  v42 = (objc_class *)OUTLINED_FUNCTION_4();
  v10 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v7);
  v39 = v10;
  v11 = OUTLINED_FUNCTION_55();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  OUTLINED_FUNCTION_23_5();
  v14 = (_QWORD *)((char *)v7 + v10[14]);
  v15 = v7;
  OUTLINED_FUNCTION_34_26();
  v16 = sub_1B16B7BBC();
  v18 = v17;
  OUTLINED_FUNCTION_13_54(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8), *a6);
  *v14 = v16;
  v14[1] = v18;
  OUTLINED_FUNCTION_21_38();
  *v19 = a1;
  v19[1] = a2;
  OUTLINED_FUNCTION_33_27();
  OUTLINED_FUNCTION_30_35(v20);
  *(_QWORD *)((char *)v7 + v21) = a4;
  OUTLINED_FUNCTION_22_37();
  v22 = v39[10];
  v43 = sub_1B16BA328();
  v44 = *(_QWORD *)(v43 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v11, a5, v43);
  OUTLINED_FUNCTION_6_96();
  OUTLINED_FUNCTION_11_55(v23);
  sub_1B1408F9C(a7, v24);
  v25 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_177();
  swift_retain();
  v26 = OUTLINED_FUNCTION_29_30(v25, sel_configurationWithPointSize_weight_scale_);
  OUTLINED_FUNCTION_128();
  *(_QWORD *)((char *)v7 + v28) = v27;
  OUTLINED_FUNCTION_0_160();

  v49.receiver = v7;
  v49.super_class = v42;
  v29 = objc_msgSendSuper2(&v49, sel_init);
  ObjectType = swift_getObjectType();
  v31 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_54_1();
  v32 = (_QWORD *)OUTLINED_FUNCTION_25();
  v33 = v22;
  v32[2] = v22;
  v34 = v39[11];
  v32[3] = v34;
  v35 = v39[12];
  v32[4] = v35;
  v36 = v39[13];
  v32[5] = v36;
  v32[6] = v31;
  v37 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 88);
  v38 = v29;
  swift_retain();
  v37(v48, a4, a5, sub_1B15ECE2C, v32, v33, v34, v35, v36, ObjectType, a2);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_16_53(v48);
  OUTLINED_FUNCTION_7_78();
  swift_unknownObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_47_1();

  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(a5, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  OUTLINED_FUNCTION_0_28();
}

uint64_t sub_1B15ED17C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B15ED1A0(uint64_t a1)
{
  uint64_t v1;

  sub_1B15ED6AC(a1, *(_QWORD *)(v1 + 48));
}

id StateCommandBarButtonItem.__allocating_init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, __int128 *a7, double a8, double a9, double a10, double a11, double a12)
{
  OUTLINED_FUNCTION_13_1();
  return StateCommandBarButtonItem.init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

id StateCommandBarButtonItem.init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, __int128 *a7, double a8, double a9, double a10, double a11, double a12)
{
  _QWORD *v12;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)@<X0>(uint64_t *@<X8>);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  double *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, objc_class *, uint64_t);
  id v64;
  uint64_t v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  objc_class *ObjectType;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  objc_super v85;

  v81 = a3;
  v82 = a5;
  v80 = a4;
  v66 = a2;
  ObjectType = (objc_class *)OUTLINED_FUNCTION_4();
  v20 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v12);
  v21 = OUTLINED_FUNCTION_55();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v23);
  v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a6[1];
  v68 = *a6;
  v67 = (id)a6[2];
  v76 = *a7;
  v75 = a7[1];
  v74 = a7[2];
  v73 = *((_QWORD *)a7 + 6);
  v72 = *((_QWORD *)a7 + 7);
  v71 = *((unsigned __int8 *)a7 + 64);
  v27 = (_QWORD *)((char *)v12 + v20[14]);
  v28 = v12;
  sub_1B16B7BD4();
  v29 = sub_1B16B7BBC();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  *v27 = v29;
  v27[1] = v31;
  v32 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v33 = (_QWORD *)((char *)v28 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v28) + 0x78));
  v34 = v66;
  *v33 = a1;
  v33[1] = v34;
  OUTLINED_FUNCTION_23_0();
  v36 = v80;
  *(_QWORD *)((char *)v28 + *(_QWORD *)(v35 + 128)) = v81;
  OUTLINED_FUNCTION_23_0();
  *(_QWORD *)((char *)v28 + *(_QWORD *)(v37 + 136)) = v36;
  OUTLINED_FUNCTION_23_0();
  v39 = (char *)v28 + *(_QWORD *)(v38 + 144);
  v70 = v20[10];
  v40 = OUTLINED_FUNCTION_5_13();
  v41 = *(_QWORD *)(v40 - 8);
  v78 = v40;
  v79 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v82, v40);
  v69 = v20;
  v42 = v20[11];
  v43 = v20[13];
  swift_unknownObjectRetain();
  swift_retain();
  OUTLINED_FUNCTION_177();
  v44 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v67;
  swift_retain();
  v45 = v42;
  sub_1B159BA1C(v44, v68, v26, v42, v43, (uint64_t (**)@<X0>(uint64_t *@<X8>))&v83);

  swift_release();
  v46 = v84;
  v47 = (char *)v28 + *(_QWORD *)((*v32 & *v28) + 0x98);
  *(_OWORD *)v47 = v83;
  *((_QWORD *)v47 + 2) = v46;
  OUTLINED_FUNCTION_23_0();
  v49 = (double *)((char *)v28 + *(_QWORD *)(v48 + 176));
  *v49 = a9;
  v49[1] = a10;
  v49[2] = a11;
  v49[3] = a12;
  *((_BYTE *)v49 + 32) = 0;
  v50 = (void *)objc_opt_self();
  v51 = OUTLINED_FUNCTION_29_30(v50, sel_configurationWithPointSize_weight_scale_);
  OUTLINED_FUNCTION_23_0();
  *(_QWORD *)((char *)v28 + *(_QWORD *)(v52 + 168)) = v53;
  OUTLINED_FUNCTION_23_0();
  v55 = (char *)v28 + *(_QWORD *)(v54 + 160);
  v56 = v75;
  *(_OWORD *)v55 = v76;
  *((_OWORD *)v55 + 1) = v56;
  *((_OWORD *)v55 + 2) = v74;
  v57 = v72;
  *((_QWORD *)v55 + 6) = v73;
  *((_QWORD *)v55 + 7) = v57;
  v55[64] = v71;

  v85.receiver = v28;
  v85.super_class = ObjectType;
  v58 = objc_msgSendSuper2(&v85, sel_init);
  ObjectType = (objc_class *)swift_getObjectType();
  v59 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_54_1();
  v60 = (_QWORD *)OUTLINED_FUNCTION_25();
  v61 = v70;
  v60[2] = v70;
  v60[3] = v45;
  v62 = v69[12];
  v60[4] = v62;
  v60[5] = v43;
  v60[6] = v59;
  v63 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, objc_class *, uint64_t))(v34 + 88);
  v64 = v58;
  swift_retain();
  v63(&v83, v80, v82, sub_1B15ECE2C, v60, v61, v45, v62, v43, ObjectType, v34);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_16_53(&v83);
  OUTLINED_FUNCTION_7_78();
  swift_unknownObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_47_1();

  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v82, v78);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
  return v64;
}

void sub_1B15ED6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t _0[12];

  v4 = sub_1B16BA328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)_0 - v7;
  OUTLINED_FUNCTION_13();
  v9 = MEMORY[0x1B5E1F2F8](a2 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    StateCommandBarButtonItem.state.setter((uint64_t)v8, v11, v12, v13, v14, v15, v16, v17, _0[0], _0[1], _0[2], _0[3], _0[4], _0[5], _0[6], _0[7], _0[8], _0[9], _0[10],
      _0[11]);

  }
  OUTLINED_FUNCTION_67();
}

void sub_1B15ED758(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1B15ED78C();
}

void sub_1B15ED78C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6();
  v1 = OUTLINED_FUNCTION_55();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  OUTLINED_FUNCTION_23_5();
  v4 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70));
  sub_1B16B7BD4();
  v5 = sub_1B16B7BBC();
  v7 = v6;
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v0, v1);
  *v4 = v5;
  v4[1] = v7;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15ED864(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1B15ED78C();
}

uint64_t sub_1B15ED898()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  v3 = objc_msgSend(v0, sel_customView);
  v4 = sub_1B164CA2C(v3);

  v5 = (_QWORD *)(*v1 & *v0);
  v6 = *(_QWORD *)((char *)v0 + v5[15] + 8);
  ObjectType = swift_getObjectType();
  v8 = v5[18];
  v9 = *(_QWORD *)((char *)v0 + v5[17]);
  v10 = (char *)v0 + v8;
  v11 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8);
  v12 = *(_QWORD *)(v2 + 80);
  swift_retain();
  v11(v9, v10, v4, v12, ObjectType, v6);
  return swift_release_n();
}

void sub_1B15ED990(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1B15ED898();

}

void StateCommandBarButtonItem.setImage(with:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_6();
  v38 = v1;
  v39 = v2;
  v3 = v0;
  v5 = v4;
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = *MEMORY[0x1E0DEEDD8] & *v0;
  v8 = *(_QWORD *)(v7 + 0x58);
  v9 = sub_1B16BA328();
  v32 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v30 - v12;
  v15 = *v5;
  v14 = v5[1];
  v16 = (void *)v5[2];
  v33 = objc_msgSend(v3, sel_customView);
  if (!v33)
    goto LABEL_4;
  objc_opt_self();
  v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    v18 = (_QWORD *)((char *)v3 + *(_QWORD *)((*v6 & *v3) + 0x98));
    v31 = v9;
    v19 = (void *)v18[2];
    *v18 = v15;
    v18[1] = v14;
    v18[2] = (uint64_t)v16;
    v20 = (void *)v17;
    swift_retain();
    v21 = v16;

    OUTLINED_FUNCTION_47_1();
    v22 = v18[1];
    v23 = (void *)v18[2];
    v34 = *v18;
    v35 = v22;
    v36 = v23;
    swift_retain();
    v24 = v23;
    OUTLINED_FUNCTION_31_29();
    v25 = sub_1B13A1BE4(255, (unint64_t *)&qword_1ED1838D0);
    v26 = type metadata accessor for StateCommandValue(0, v8, v25, *(_QWORD *)(v7 + 104));
    StateCommandValue.value(for:)((uint64_t)v13, v26, (uint64_t)&v37);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v31);

    swift_release();
    v27 = v37;
    OUTLINED_FUNCTION_128();
    v29 = objc_msgSend(v27, sel_imageByApplyingSymbolConfiguration_, *(_QWORD *)((char *)v3 + v28));

    objc_msgSend(v20, sel_setImage_forState_, v29, 0);
LABEL_4:
    OUTLINED_FUNCTION_47();
    return;
  }

}

uint64_t StateCommandBarButtonItem.AccessibilityViewModel.init(label:value:hint:isSelected:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_BYTE *)(a8 + 48) = a7;
  return result;
}

id StateCommandBarButtonItem.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

void StateCommandBarButtonItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B15EDC38()
{
  StateCommandBarButtonItem.init()();
}

id StateCommandBarButtonItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B15EDC74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_34();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_2_34();
  v3 = a1 + *(_QWORD *)(v2 + 144);
  v4 = OUTLINED_FUNCTION_5_13();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  OUTLINED_FUNCTION_2_34();

  swift_release();
  OUTLINED_FUNCTION_2_34();
  sub_1B15EE268(*(_QWORD *)(a1 + *(_QWORD *)(v6 + 160)));
  OUTLINED_FUNCTION_2_34();

}

uint64_t sub_1B15EDD6C()
{
  return StateCommandBarButtonItem.identifier.getter();
}

#error "1B15EDEA0: call analysis failed (funcsize=76)"

void sub_1B15EDEC0(Swift::OpaquePointer a1)
{
  StateCommandBarButtonItem.recolor(with:)(a1);
}

void sub_1B15EDEE0()
{
  StateCommandBarButtonItem.state.getter();
}

uint64_t sub_1B15EDF04()
{
  return 32;
}

__n128 sub_1B15EDF10(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1B15EDF1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B16BA328();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for StateCommandBarButtonItem()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t method lookup function for StateCommandBarButtonItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateCommandBarButtonItem.__allocating_init(commandCenter:commandSource:command:context:image:symbolConfiguration:contentSize:stateAccessibilityViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t);
  __int128 v12;
  _OWORD v14[2];
  char v15;

  v10 = *(_BYTE *)(a8 + 32);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t))(v9 + 184);
  v12 = *(_OWORD *)(a8 + 16);
  v14[0] = *(_OWORD *)a8;
  v14[1] = v12;
  v15 = v10;
  return v11(a1, a2, a3, a4, a5, a6, a7, v14, a9);
}

uint64_t dispatch thunk of StateCommandBarButtonItem.__allocating_init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *);
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v8 = *(_BYTE *)(a7 + 32);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))(v7 + 192);
  v10 = *(_OWORD *)(a7 + 16);
  v12[0] = *(_OWORD *)a7;
  v12[1] = v10;
  v13 = v8;
  return v9(a1, a2, a3, a4, a5, a6, v12);
}

uint64_t dispatch thunk of StateCommandBarButtonItem.__allocating_init(commandCenter:commandSource:command:context:image:imagePointSize:contentSize:stateAccessibilityViewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1B15EE064(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t sub_1B15EE0C0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t sub_1B15EE154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t sub_1B15EE1B0(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B15EE204(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1B15EE268(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Segmentable.segmentImage.getter()
{
  return 0;
}

uint64_t Segmentable.segmentShouldPreserveSearchText.getter()
{
  return 1;
}

uint64_t dispatch thunk of Segmentable.segmentTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Segmentable.segmentImage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Segmentable.segmentToolbarItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Segmentable.segmentSearchController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Segmentable.segmentShouldPreserveSearchText.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Segmentable.segmentLeftBarButtonItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Segmentable.segmentRightBarButtonItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

BOOL static DockablePresentationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DockablePresentationMode.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t DockablePresentationMode.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t storeEnumTagSinglePayload for DockablePresentationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15EE3F8 + 4 * byte_1B16D7FA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B15EE42C + 4 * byte_1B16D7FA0[v4]))();
}

uint64_t sub_1B15EE42C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15EE434(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15EE43CLL);
  return result;
}

uint64_t sub_1B15EE448(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15EE450);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B15EE454(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15EE45C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of Dockable.dockedView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Dockable.dockPresentationMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Dockable.configureExpansion(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Dockable.didExpand()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Dockable.willDock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Dockable.dockViewLongPressed(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of Dockable.dockViewAccessibilityMagicTapped(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t When.__allocating_init(defaultValue:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  When.init(defaultValue:)(a1);
  return v2;
}

Swift::Void __swiftcall When.reset()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_1B13B9100(v1);
}

uint64_t *When.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B13B9100(v0[2]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((char *)v0 + *(_QWORD *)(*v0 + 96));
  return v0;
}

uint64_t When.__deallocating_deinit()
{
  When.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for When()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of When.__allocating_init(defaultValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void __swiftcall ForwardingTouchNavigationBar.hitTest(_:with:)(UIView_optional *__return_ptr retstr, CGPoint _, UIEvent_optional with)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  Class isa;
  id v7;
  uint64_t v8;
  id *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  objc_super *v24;
  SEL v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;

  isa = with.value.super.isa;
  OUTLINED_FUNCTION_4();
  v7 = OUTLINED_FUNCTION_6_97();
  OUTLINED_FUNCTION_5((uint64_t)v7, (unint64_t *)&qword_1ED1838A0);
  OUTLINED_FUNCTION_9_75();

  OUTLINED_FUNCTION_5(v8, &qword_1ED183858);
  OUTLINED_FUNCTION_4_98();
  swift_bridgeObjectRelease();
  if (v29)
  {
    v9 = (id *)objc_msgSend(v29, sel_contentView);

    if (v9)
    {
      v10 = OUTLINED_FUNCTION_15_45();
      v11 = OUTLINED_FUNCTION_9_75();

      if (v11 >> 62)
        goto LABEL_19;
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v12)
      {
        OUTLINED_FUNCTION_7_79();
        while (!__OFSUB__(v12--, 1))
        {
          if (v5)
            OUTLINED_FUNCTION_68_0();
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_17;
          if (v12 >= *(_QWORD *)(v3 + 16))
            goto LABEL_18;
          OUTLINED_FUNCTION_1_141((uint64_t)v9[v12]);
          v14 = objc_msgSend(v4, sel_hitTest_withEvent_, isa);

          if (v14)
          {
            OUTLINED_FUNCTION_47_3(v15, v16, v17, v18, v19, v20, v21, v22, v26, v27, v28);
            OUTLINED_FUNCTION_17();
            return;
          }
          if (!v12)
          {
            OUTLINED_FUNCTION_47_3(v15, v16, v17, v18, v19, v20, v21, v22, v26, v27, v28);
            OUTLINED_FUNCTION_17();
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        OUTLINED_FUNCTION_35_1();
        v12 = sub_1B16BA76C();
        OUTLINED_FUNCTION_17();
      }

      OUTLINED_FUNCTION_17();
    }
  }
LABEL_14:
  v23 = OUTLINED_FUNCTION_11_56();
  objc_msgSendSuper2(v24, v25, v23);
}

Swift::Bool __swiftcall ForwardingTouchNavigationBar.point(inside:with:)(CGPoint inside, UIEvent_optional with)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  Class isa;
  id v6;
  uint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  objc_super *v23;
  SEL v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;

  isa = with.value.super.isa;
  OUTLINED_FUNCTION_4();
  v6 = OUTLINED_FUNCTION_6_97();
  OUTLINED_FUNCTION_5((uint64_t)v6, (unint64_t *)&qword_1ED1838A0);
  OUTLINED_FUNCTION_9_75();

  OUTLINED_FUNCTION_5(v7, &qword_1ED183858);
  OUTLINED_FUNCTION_4_98();
  swift_bridgeObjectRelease();
  if (v29)
  {
    v8 = (id *)objc_msgSend(v29, sel_contentView);

    if (v8)
    {
      v9 = OUTLINED_FUNCTION_15_45();
      v10 = OUTLINED_FUNCTION_9_75();

      if (v10 >> 62)
        goto LABEL_19;
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v11)
      {
        OUTLINED_FUNCTION_7_79();
        while (!__OFSUB__(v11--, 1))
        {
          if (v4)
            OUTLINED_FUNCTION_68_0();
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_17;
          if (v11 >= *(_QWORD *)(v2 + 16))
            goto LABEL_18;
          OUTLINED_FUNCTION_1_141((uint64_t)v8[v11]);
          v13 = objc_msgSend(v3, sel_pointInside_withEvent_, isa);

          if (v13)
          {
            OUTLINED_FUNCTION_47_3(v14, v15, v16, v17, v18, v19, v20, v21, v26, v27, v28);
            OUTLINED_FUNCTION_17();
            return 1;
          }
          if (!v11)
          {
            OUTLINED_FUNCTION_47_3(v14, v15, v16, v17, v18, v19, v20, v21, v26, v27, v28);
            OUTLINED_FUNCTION_17();
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        OUTLINED_FUNCTION_35_1();
        v11 = sub_1B16BA76C();
        OUTLINED_FUNCTION_17();
      }

      OUTLINED_FUNCTION_17();
    }
  }
LABEL_14:
  v22 = OUTLINED_FUNCTION_11_56();
  return objc_msgSendSuper2(v23, v24, v22);
}

uint64_t ForwardingTouchNavigationBar.accessibilityElements.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _BYTE v29[32];
  id v30[2];
  __int128 v31;
  uint64_t v32;
  _BYTE v33[32];
  objc_super v34;

  v34.receiver = v0;
  v34.super_class = (Class)OUTLINED_FUNCTION_4();
  v1 = objc_msgSendSuper2(&v34, sel_accessibilityElements);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B16B9B54();

  v4 = objc_msgSend(v0, sel_subviews);
  OUTLINED_FUNCTION_5((uint64_t)v4, (unint64_t *)&qword_1ED1838A0);
  sub_1B16B9B54();

  OUTLINED_FUNCTION_5(v5, &qword_1ED183858);
  sub_1B16B9B9C();
  OUTLINED_FUNCTION_17();
  if (v30[0])
  {
    v6 = objc_msgSend(v30[0], sel_contentView);

    if (v6)
    {
      v24 = v6;
      v7 = objc_msgSend(v6, sel_subviews);
      v8 = sub_1B16B9B54();

      if (v8 >> 62)
        goto LABEL_33;
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v9)
      {
        v25 = v8 + 32;
        v26 = v8 & 0xFFFFFFFFFFFFFF8;
        v28 = v8 & 0xC000000000000001;
        v27 = v8;
        while (!__OFSUB__(v9--, 1))
        {
          if (v28)
          {
            v11 = (id)MEMORY[0x1B5E1DF60](v9, v8);
          }
          else
          {
            if ((v9 & 0x8000000000000000) != 0)
              goto LABEL_31;
            if (v9 >= *(_QWORD *)(v26 + 16))
              goto LABEL_32;
            v11 = *(id *)(v25 + 8 * v9);
          }
          v12 = v11;
          v13 = objc_msgSend(v11, sel_ts_accessibilityLeafDescendants);
          v14 = sub_1B16B9B54();

          v15 = *(_QWORD *)(v14 + 16);
          if (v15)
          {
            v16 = v14 + 32;
            do
            {
              sub_1B14297B8(v16, (uint64_t)v33);
              sub_1B14297B8((uint64_t)v33, (uint64_t)v29);
              sub_1B15EEDAC();
              if (swift_dynamicCast())
              {
                v18 = *((_QWORD *)&v31 + 1);
                v17 = v32;
                __swift_project_boxed_opaque_existential_1(v30, *((uint64_t *)&v31 + 1));
                v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
                if ((v19 & 1) != 0)
                {
                  sub_1B14297B8((uint64_t)v33, (uint64_t)v30);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    OUTLINED_FUNCTION_10_66();
                    v3 = v21;
                  }
                  v20 = *(_QWORD *)(v3 + 16);
                  if (v20 >= *(_QWORD *)(v3 + 24) >> 1)
                  {
                    OUTLINED_FUNCTION_10_66();
                    v3 = v22;
                  }
                  *(_QWORD *)(v3 + 16) = v20 + 1;
                  sub_1B143D3E0(v30, (_OWORD *)(v3 + 32 * v20 + 32));
                }
              }
              else
              {
                v32 = 0;
                *(_OWORD *)v30 = 0u;
                v31 = 0u;
                sub_1B15EEE00((uint64_t)v30);
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
              v16 += 32;
              --v15;
            }
            while (v15);

            swift_bridgeObjectRelease();
            v8 = v27;
            if (!v9)
              goto LABEL_27;
          }
          else
          {

            swift_bridgeObjectRelease();
            if (!v9)
              goto LABEL_27;
          }
        }
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        sub_1B16B9740();
        v9 = sub_1B16BA76C();
        swift_bridgeObjectRelease();
      }
LABEL_27:

      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

unint64_t sub_1B15EEDAC()
{
  unint64_t result;

  result = qword_1EEF35278;
  if (!qword_1EEF35278)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF35278);
  }
  return result;
}

uint64_t sub_1B15EEE00(uint64_t a1)
{
  uint64_t v2;

  sub_1B15EEE3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B15EEE3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35280)
  {
    sub_1B15EEDAC();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35280);
  }
}

uint64_t (*ForwardingTouchNavigationBar.accessibilityElements.modify(uint64_t *a1))()
{
  *a1 = ForwardingTouchNavigationBar.accessibilityElements.getter();
  return destroy for OnboardingConfiguration;
}

id ForwardingTouchNavigationBar.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id ForwardingTouchNavigationBar.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ForwardingTouchNavigationBar.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_4();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ForwardingTouchNavigationBar.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void RadarCommandHandler.__allocating_init(component:attachmentResolver:sceneProvider:)(uint64_t a1, __int128 *a2, __int128 *a3)
{
  OUTLINED_FUNCTION_25();
  RadarCommandHandler.init(component:attachmentResolver:sceneProvider:)(a1, a2, a3);
  OUTLINED_FUNCTION_31();
}

void RadarCommandHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t __dst[13];

  v5 = v4;
  v7 = sub_1B16B95E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a4, 0x61uLL);
  sub_1B15DE6B4(v5 + 104, (uint64_t)v23);
  v12 = v24;
  if (v24)
  {
    v13 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, sel_rootViewController);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      if (v16)
      {
        sub_1B13A1BE4(0, (unint64_t *)&qword_1ED188560);
        (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DEF530], v7);
        v17 = (void *)sub_1B16BA10C();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        v18 = OUTLINED_FUNCTION_25();
        *(_QWORD *)(v18 + 16) = v5;
        OUTLINED_FUNCTION_0_162(v18);
        swift_retain();
        sub_1B15EF408(__dst);
        sub_1B141116C();
        sub_1B16B8A68();

        swift_release();
        v19 = (void *)sub_1B16BA0DC();
        v20 = OUTLINED_FUNCTION_25();
        swift_weakInit();
        v21 = OUTLINED_FUNCTION_25();
        *(_QWORD *)(v21 + 16) = v20;
        OUTLINED_FUNCTION_0_162(v21);
        *(_QWORD *)(v21 + 128) = v16;
        sub_1B15EF408(__dst);
        v22 = v16;
        sub_1B16B8984();

        swift_release();
        swift_release();

        swift_release();
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
  }
  else
  {
    sub_1B15EFFD4((uint64_t)v23, &qword_1ED17D390, (uint64_t (*)(uint64_t))sub_1B15EF2E8);
  }
}

unint64_t sub_1B15EF2E8()
{
  unint64_t result;

  result = qword_1ED17F268;
  if (!qword_1ED17F268)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED17F268);
  }
  return result;
}

uint64_t sub_1B15EF33C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[11];
  v4 = a1[12];
  __swift_project_boxed_opaque_existential_1(a1 + 8, v3);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v4 + 8))(*(_QWORD *)(a2 + 88), v3, v4);
}

uint64_t sub_1B15EF398()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  if (*(_QWORD *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15EF3EC()
{
  uint64_t v0;

  return sub_1B15EF33C(*(_QWORD **)(v0 + 16), v0 + 24);
}

uint64_t *sub_1B15EF408(uint64_t *a1)
{
  sub_1B15EF464(*a1, a1[1]);
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t sub_1B15EF464(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1B16B9740();
    sub_1B16B9740();
    return sub_1B16B9740();
  }
  return result;
}

uint64_t sub_1B15EF4A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

_QWORD *sub_1B15EF4C4(uint64_t *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD __dst[13];
  _QWORD v52[6];
  char *v53;

  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED188A30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v40 - v10;
  v12 = sub_1B16B7AE4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v53 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    v49 = v16;
    v41 = v13;
    v50 = v12;
    v42 = a4;
    v43 = v4;
    v19 = *a3;
    v20 = a3[1];
    v21 = a3[2];
    v22 = a3[3];
    v23 = a3[4];
    v24 = a3[5];
    v48 = v24;
    v47 = v23;
    v46 = v22;
    v45 = v21;
    v44 = v19;
    if (v20)
    {
      v25 = v19;
      v26 = v20;
      v27 = v21;
      v28 = v22;
      v29 = v23;
      v30 = v24;
    }
    else
    {
      v25 = result[2];
      v26 = result[3];
      v27 = result[4];
      v28 = result[5];
      v29 = result[6];
      v30 = result[7];
      sub_1B16B9740();
      sub_1B16B9740();
      sub_1B16B9740();
    }
    v52[0] = v25;
    v52[1] = v26;
    v52[2] = v27;
    v52[3] = v28;
    v52[4] = v29;
    v52[5] = v30;
    memcpy(__dst, a3, 0x61uLL);
    sub_1B15EF464(v44, v20);
    sub_1B15EF950(v52, (uint64_t)__dst, v49, (uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v50;
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v50) == 1)
    {
      sub_1B15EFFD4((uint64_t)v11, (unint64_t *)&qword_1ED188A30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1B15EFE30(v42);
      return (_QWORD *)swift_release();
    }
    else
    {
      v32 = v53;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v53, v11, v31);
      v33 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v34 = (void *)sub_1B16B7A78();
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1B13B13B4((unint64_t *)&qword_1ED17CBE8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1B16C4824);
      sub_1B16B9728();
      v35 = (void *)sub_1B16B96EC();
      swift_bridgeObjectRelease();
      v36 = swift_allocObject();
      v37 = v42;
      *(_QWORD *)(v36 + 16) = v18;
      *(_QWORD *)(v36 + 24) = v37;
      __dst[4] = sub_1B15F003C;
      __dst[5] = v36;
      __dst[0] = MEMORY[0x1E0C809B0];
      __dst[1] = 1107296256;
      __dst[2] = sub_1B13F8544;
      __dst[3] = &block_descriptor_64;
      v38 = _Block_copy(__dst);
      swift_retain();
      v39 = v37;
      swift_release();
      objc_msgSend(v33, sel_openURL_options_completionHandler_, v34, v35, v38);
      _Block_release(v38);
      swift_release();

      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v32, v31);
    }
  }
  return result;
}

uint64_t sub_1B15EF8D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  if (*(_QWORD *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

_QWORD *sub_1B15EF930(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B15EF4C4(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + 24), *(void **)(v1 + 128));
}

void sub_1B15EF950(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23 = a3;
  v32 = a4;
  v6 = sub_1B16B7928();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690];
  v31 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v10 = MEMORY[0x1E0C80A78](v6, v9);
  v27 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v12);
  v26 = (char *)v18 - v13;
  v30 = sub_1B16B7970();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30, v14);
  v15 = a1[2];
  v20 = a1[3];
  v21 = v15;
  v16 = a1[5];
  v22 = *(unsigned __int8 *)(a2 + 64);
  v18[1] = *(_QWORD *)(a2 + 72);
  v18[2] = v16;
  v25 = *(_QWORD *)(a2 + 80);
  v19 = *(unsigned __int8 *)(a2 + 96);
  sub_1B16B7964();
  sub_1B16B7958();
  sub_1B16B794C();
  sub_1B13DE5B0(0, &qword_1EEF31D88, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v29 = v8;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B16C91E0;
  v24 = v17;
  sub_1B16B791C();
  sub_1B16B791C();
  sub_1B16B791C();
  sub_1B16B791C();
  __asm { BR              X9 }
}

uint64_t sub_1B15EFBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1B16B791C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 - 88) = *(_QWORD *)(v3 - 168);
  sub_1B141116C();
  sub_1B13B13B4((unint64_t *)&qword_1ED183720, (uint64_t (*)(uint64_t))sub_1B141116C, MEMORY[0x1E0DEAF20]);
  sub_1B16B9800();
  sub_1B16B791C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 - 120);
  v5 = *(_QWORD *)(v3 - 136);
  v6 = *(_QWORD *)(v3 - 160);
  if (*(_DWORD *)(v3 - 172))
  {
    sub_1B16B791C();
    v8 = *(_QWORD *)(v2 + 16);
    v7 = *(_QWORD *)(v2 + 24);
    v9 = *(_QWORD *)(v3 - 104);
    if (v8 >= v7 >> 1)
      v2 = sub_1B14D1104(v7 > 1, v8 + 1, 1, v2);
    *(_QWORD *)(v2 + 16) = v8 + 1;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 32))(v2 + v6 + v8 * v0, *(_QWORD *)(v3 - 144), v9);
  }
  else
  {
    v9 = *(_QWORD *)(v3 - 104);
  }
  if (*(_QWORD *)(v3 - 152))
  {
    sub_1B16B791C();
    v11 = *(_QWORD *)(v2 + 16);
    v10 = *(_QWORD *)(v2 + 24);
    if (v11 >= v10 >> 1)
      v2 = sub_1B14D1104(v10 > 1, v11 + 1, 1, v2);
    *(_QWORD *)(v2 + 16) = v11 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v2 + v6 + v11 * v0, v5, v9);
  }
  sub_1B16B7934();
  sub_1B16B7940();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 128) + 8))(v1, *(_QWORD *)(v3 - 112));
}

void sub_1B15EFE30(void *a1)
{
  void *v2;
  id v3;
  id v4;

  sub_1B13A1BE4(0, &qword_1EEF32EC0);
  sub_1B1528044(0xD000000000000013, 0x80000001B16F1CF0, 0xD000000000000012, 0x80000001B16F1D10, 1);
  v4 = v2;
  sub_1B13A1BE4(0, &qword_1EEF32EC8);
  v3 = sub_1B1528264(2036427599, 0xE400000000000000, 0, 0, 0);
  objc_msgSend(v4, sel_addAction_, v3);

  objc_msgSend(a1, sel_presentViewController_animated_completion_, v4, 1, 0);
}

void RadarCommandHandler.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  sub_1B15EFFD4(v0 + 104, &qword_1ED17D390, (uint64_t (*)(uint64_t))sub_1B15EF2E8);
  OUTLINED_FUNCTION_31();
}

uint64_t RadarCommandHandler.__deallocating_deinit()
{
  RadarCommandHandler.deinit();
  return swift_deallocClassInstance();
}

void sub_1B15EFFA0(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  RadarCommandHandler.handle(commandCenter:command:with:source:)(a1, a2, a3, a4);
}

uint64_t method lookup function for RadarCommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RadarCommandHandler.__allocating_init(component:attachmentResolver:sceneProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1B15EFFD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1B13DE5B0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15F0014()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();

  return swift_deallocObject();
}

void sub_1B15F003C(char a1)
{
  uint64_t v1;

  if ((a1 & 1) == 0)
    sub_1B15EFE30(*(void **)(v1 + 24));
}

void ContextMenuItem.__allocating_init<A>(command:context:title:image:options:willExecute:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_11_57();
  ContextMenuItem.init<A>(command:context:title:image:options:willExecute:)();
  OUTLINED_FUNCTION_47();
}

void ContextMenuItem.identifier.getter()
{
  OUTLINED_FUNCTION_81_14();
  OUTLINED_FUNCTION_0_0();
}

void *sub_1B15F00D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  return a3;
}

uint64_t sub_1B15F00F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B15F0118(char a1@<W2>, _BYTE *a2@<X8>)
{
  *a2 = a1;
}

uint64_t sub_1B15F0124(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t ObjectType;
  uint64_t v20;

  v20 = a3;
  v11 = *(_QWORD *)(*(_QWORD *)a6 + 88);
  v12 = sub_1B16BA328();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v17 = (char *)&v20 - v16;
  if (a4)
    a4(v15);
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v17, a7, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v11);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8))(a6, v17, v20, v11, ObjectType, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v12);
}

uint64_t sub_1B15F0244()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_15_25();
  OUTLINED_FUNCTION_11_27();
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_31_30();
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B15F0298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  OUTLINED_FUNCTION_70_16();
  return sub_1B15F0124(v2, v3, v4, v5, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + v1);
}

void sub_1B15F02B4()
{
  sub_1B16B9740();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15F02E0()
{
  OUTLINED_FUNCTION_18_19();
  swift_release();
  OUTLINED_FUNCTION_1_3();
  return OUTLINED_FUNCTION_6_0();
}

void ContextMenuItem.__allocating_init(command:title:image:options:willExecute:)()
{
  OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_39_22();
  ContextMenuItem.init(command:title:image:options:willExecute:)();
  OUTLINED_FUNCTION_27();
}

void ContextMenuItem.init(command:title:image:options:willExecute:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = *v13;
  v15 = *(_QWORD *)(v11 + 24);
  v0[2] = *(_QWORD *)(v11 + 16);
  v0[3] = v15;
  v16 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v16 + 16) = v6;
  v0[4] = sub_1B145C464;
  v0[5] = v16;
  v17 = OUTLINED_FUNCTION_25();
  *(_BYTE *)(v17 + 16) = v14;
  v0[6] = sub_1B145C458;
  v0[7] = v17;
  v0[8] = sub_1B145C488;
  v0[9] = 0;
  v18 = (_QWORD *)OUTLINED_FUNCTION_25();
  v18[2] = v4;
  v18[3] = v2;
  v18[4] = v12;
  v0[10] = sub_1B15F0528;
  v0[11] = v18;
  v19 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v19 + 16) = v10;
  *(_QWORD *)(v19 + 24) = v8;
  v0[12] = sub_1B145C438;
  v0[13] = v19;
  v0[14] = sub_1B145C40C;
  v0[15] = 0;
  v0[16] = j__OUTLINED_FUNCTION_61_6;
  v0[17] = v12;
  sub_1B16B9740();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_47();
}

void sub_1B15F0468(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType;

  if (a4)
    a4();
  ObjectType = swift_getObjectType();
  CommandCenterType.execute<A>(command:source:)(a6, a3, ObjectType, a2);
}

uint64_t sub_1B15F04F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  OUTLINED_FUNCTION_15_25();
  return swift_deallocObject();
}

void sub_1B15F0528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1B15F0468(a1, a2, a3, *(void (**)(void))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1B15F0534()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void ContextMenuItem.__allocating_init<A, B>(command:context:title:image:options:)()
{
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_21_24();
  ContextMenuItem.init<A, B>(command:context:title:image:options:)();
  OUTLINED_FUNCTION_67();
}

{
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_21_24();
  ContextMenuItem.init<A, B>(command:context:title:image:options:)();
  OUTLINED_FUNCTION_67();
}

void ContextMenuItem.init<A, B>(command:context:title:image:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_43_22(v7, v8, v9, v10, v11);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_5_93(v14, v15, v16, v17, v18, v19, v20, v21, v28);
  OUTLINED_FUNCTION_25_42();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v2;
  v32 = *(_QWORD *)(v6 + 144);
  v22[3] = v32;
  v31 = *(_QWORD *)(v6 + 152);
  v22[4] = v31;
  v22[5] = v0;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  OUTLINED_FUNCTION_119((uint64_t)v22 + v5, v4, v30);
  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_34_27((uint64_t)sub_1B15F075C);
  v23 = (char *)OUTLINED_FUNCTION_33_28();
  OUTLINED_FUNCTION_21_39(v23);
  OUTLINED_FUNCTION_52_23();
  v1[6] = sub_1B15F0764;
  v1[7] = v3;
  OUTLINED_FUNCTION_14_16(v4, (uint64_t)v22);
  v24 = (_QWORD *)OUTLINED_FUNCTION_33_28();
  v24[2] = v2;
  v24[3] = v6;
  v24[4] = v31;
  v24[5] = v0;
  OUTLINED_FUNCTION_119((uint64_t)v24 + v29, v4, v30);
  v1[8] = sub_1B15F076C;
  v1[9] = v24;
  OUTLINED_FUNCTION_14_16(v4, (uint64_t)v22);
  v25 = (char *)OUTLINED_FUNCTION_24_35();
  OUTLINED_FUNCTION_20_48(v25);
  OUTLINED_FUNCTION_45_22((uint64_t)sub_1B15F0774);
  v26 = (char *)OUTLINED_FUNCTION_24_35();
  OUTLINED_FUNCTION_9_76(v26, v32);
  OUTLINED_FUNCTION_44_20();
  v1[12] = sub_1B15F0918;
  v1[13] = v26;
  v1[14] = sub_1B145C40C;
  v1[15] = 0;
  OUTLINED_FUNCTION_18_44(v31, (uint64_t)v22);
  v27 = (char *)swift_allocObject();
  OUTLINED_FUNCTION_9_76(v27, v32);
  v1[16] = sub_1B15F0928;
  v1[17] = v27;
  OUTLINED_FUNCTION_59_16();
  sub_1B16B9740();
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_47();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_43_22(v7, v8, v9, v10, v11);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_5_93(v14, v15, v16, v17, v18, v19, v20, v21, v28);
  OUTLINED_FUNCTION_25_42();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v2;
  v32 = *(_QWORD *)(v6 + 144);
  v22[3] = v32;
  v31 = *(_QWORD *)(v6 + 152);
  v22[4] = v31;
  v22[5] = v0;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  OUTLINED_FUNCTION_119((uint64_t)v22 + v5, v4, v30);
  OUTLINED_FUNCTION_47_25();
  OUTLINED_FUNCTION_34_27((uint64_t)sub_1B15F0CD0);
  v23 = (char *)OUTLINED_FUNCTION_33_28();
  OUTLINED_FUNCTION_21_39(v23);
  OUTLINED_FUNCTION_52_23();
  v1[6] = sub_1B15F0764;
  v1[7] = v3;
  OUTLINED_FUNCTION_14_16(v4, (uint64_t)v22);
  v24 = (_QWORD *)OUTLINED_FUNCTION_33_28();
  v24[2] = v2;
  v24[3] = v6;
  v24[4] = v31;
  v24[5] = v0;
  OUTLINED_FUNCTION_119((uint64_t)v24 + v29, v4, v30);
  v1[8] = sub_1B15F076C;
  v1[9] = v24;
  OUTLINED_FUNCTION_14_16(v4, (uint64_t)v22);
  v25 = (char *)OUTLINED_FUNCTION_24_35();
  OUTLINED_FUNCTION_20_48(v25);
  OUTLINED_FUNCTION_45_22((uint64_t)sub_1B15F0774);
  v26 = (char *)OUTLINED_FUNCTION_24_35();
  OUTLINED_FUNCTION_9_76(v26, v32);
  OUTLINED_FUNCTION_44_20();
  v1[12] = sub_1B15F0FA8;
  v1[13] = v26;
  v1[14] = sub_1B145C40C;
  v1[15] = 0;
  OUTLINED_FUNCTION_18_44(v31, (uint64_t)v22);
  v27 = (char *)swift_allocObject();
  OUTLINED_FUNCTION_9_76(v27, v32);
  v1[16] = sub_1B15F0928;
  v1[17] = v27;
  OUTLINED_FUNCTION_59_16();
  sub_1B16B9740();
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15F0778(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a7;
  v34 = a8;
  v31 = a5;
  v32 = a6;
  v27 = a4;
  v28 = a2;
  v9 = *a3;
  v10 = *(_QWORD *)(*a3 + 136);
  v11 = sub_1B16BA328();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v27 - v14;
  v16 = *(_QWORD *)(v9 + 144);
  v17 = sub_1B16BA328();
  v29 = *(_QWORD *)(v17 - 8);
  v30 = v17;
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v27 - v19;
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v15, v27, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v10);
  v22 = *(_QWORD *)(v9 + 152);
  (*(void (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 80))(a3, v15, v10, v16, v22, ObjectType);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v35 = v31;
  v36 = v32;
  v37 = v33;
  v38 = v34;
  v24 = type metadata accessor for StateCommandTitle(0, v16, v22, v23);
  v25 = sub_1B16B6698((uint64_t)v20, v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v30);
  return v25;
}

uint64_t sub_1B15F0918()
{
  return sub_1B15F0FB4();
}

void sub_1B15F0B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_6();
  v29 = v1;
  v30 = v2;
  v28 = v3;
  v24 = v5;
  v25 = v4;
  v7 = v6;
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 136);
  v10 = sub_1B16BA328();
  v11 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_16_14();
  v14 = *(_QWORD *)(v8 + 144);
  v15 = sub_1B16BA328();
  v26 = *(_QWORD *)(v15 - 8);
  v27 = v15;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v24 - v18;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v0, v24, v9);
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v9);
  v21 = *(_QWORD *)(v8 + 152);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 80))(v7, v0, v9, v14, v21, ObjectType);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v10);
  v31 = v28;
  v32 = v29;
  v33 = v30;
  v23 = type metadata accessor for StateCommandImage(0, v14, v21, v22);
  sub_1B15F4ACC((uint64_t)v19, v23);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_47();
}

uint64_t objectdestroy_26Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_11_27();
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_65_13();

  OUTLINED_FUNCTION_31_30();
  return OUTLINED_FUNCTION_1_2();
}

void sub_1B15F0CD4()
{
  sub_1B15F0B28();
}

void sub_1B15F0D24()
{
  sub_1B15F2D20();
}

void sub_1B15F0D74()
{
  sub_1B15F23B4();
}

void sub_1B15F0DA8()
{
  OUTLINED_FUNCTION_70_16();
  sub_1B15F31F4();
}

uint64_t sub_1B15F0DCC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t ObjectType;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a7;
  v35 = a8;
  v32 = a5;
  v33 = a6;
  v29 = a2;
  v30 = a3;
  v9 = *a3;
  v10 = *(_QWORD *)(*a3 + 136);
  v31 = sub_1B16BA328();
  v11 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31, v12);
  v14 = (char *)&v28 - v13;
  v15 = *(_QWORD *)(v9 + 144);
  v16 = sub_1B16BA328();
  v36 = *(_QWORD *)(v16 - 8);
  v37 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v28 - v18;
  ObjectType = swift_getObjectType();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v21(v14, a4, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
  v22 = *(_QWORD *)(v9 + 152);
  (*(void (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 80))(v30, v14, v10, v15, v22, ObjectType);
  v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24 = v31;
  v23(v14, v31);
  v38 = v32;
  v39 = v33;
  v40 = v34;
  v41 = v35;
  v21(v14, a4, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
  v25 = type metadata accessor for StateCommandContextTitle(0, v15, v10, v22);
  v26 = sub_1B16956E4((uint64_t)v19, (uint64_t)v14, v25);
  v23(v14, v24);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v37);
  return v26;
}

uint64_t sub_1B15F0FA8()
{
  return sub_1B15F0FB4();
}

uint64_t sub_1B15F0FB4()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_15_46();
  return v0();
}

uint64_t sub_1B15F0FC8()
{
  OUTLINED_FUNCTION_70_16();
  return sub_1B15F3504() & 1;
}

void ContextMenuItem.__allocating_init<A>(command:title:image:options:)()
{
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_31_30();
  ContextMenuItem.init<A>(command:title:image:options:)();
  OUTLINED_FUNCTION_67();
}

void ContextMenuItem.init<A>(command:title:image:options:)()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_6();
  v2 = (_OWORD *)v1;
  v4 = (_OWORD *)v3;
  v6 = (_OWORD *)v5;
  v8 = v7;
  v9 = *(_QWORD *)(v5 + 16);
  v10 = *(_QWORD *)(v5 + 24);
  v11 = *(_QWORD *)(v3 + 16);
  v12 = *(_BYTE *)(v1 + 16);
  v13 = *(_QWORD *)(v7 + 24);
  v0[2] = *(_QWORD *)(v7 + 16);
  v0[3] = v13;
  v14 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v14 + 16) = v8;
  *(_OWORD *)(v14 + 24) = *v4;
  *(_QWORD *)(v14 + 40) = v11;
  v0[4] = sub_1B15F1268;
  v0[5] = v14;
  v15 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v15 + 16) = v8;
  *(_OWORD *)(v15 + 24) = *v2;
  *(_BYTE *)(v15 + 40) = v12;
  v0[6] = sub_1B15F1394;
  v0[7] = v15;
  v0[8] = sub_1B15F1508;
  v0[9] = v8;
  v0[10] = sub_1B14F9ECC;
  v0[11] = v8;
  v16 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v16 + 16) = v8;
  *(_OWORD *)(v16 + 24) = *v6;
  *(_QWORD *)(v16 + 40) = v9;
  *(_QWORD *)(v16 + 48) = v10;
  v0[12] = sub_1B15F1644;
  v0[13] = v16;
  v0[14] = sub_1B145C40C;
  v0[15] = 0;
  v0[16] = j__OUTLINED_FUNCTION_61_6;
  v0[17] = v8;
  OUTLINED_FUNCTION_59_16();
  sub_1B16B9740();
  OUTLINED_FUNCTION_47();
}

id sub_1B15F1140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD v22[4];

  v22[0] = a6;
  v10 = *(_QWORD *)a3;
  v11 = *(_QWORD *)(*(_QWORD *)a3 + 144);
  v12 = sub_1B16BA328();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v22 - v15;
  ObjectType = swift_getObjectType();
  CommandCenterType.state<A>(for:)(a3, ObjectType, a2);
  v22[1] = a4;
  v22[2] = a5;
  v22[3] = v22[0];
  v19 = type metadata accessor for StateCommandImage(0, v11, *(_QWORD *)(v10 + 152), v18);
  v20 = sub_1B15F4ACC((uint64_t)v16, v19);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v20;
}

uint64_t sub_1B15F123C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15_25();

  return swift_deallocObject();
}

id sub_1B15F1268(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B15F1140(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1B15F1274@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, _BYTE *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v22 = a5;
  v23 = a6;
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(*(_QWORD *)a2 + 144);
  v12 = sub_1B16BA328();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v21 - v15;
  ObjectType = swift_getObjectType();
  CommandCenterType.state<A>(for:)(a2, ObjectType, a1);
  v24 = a3;
  v25 = a4;
  v26 = v22;
  v19 = type metadata accessor for StateCommandOptions(0, v11, *(_QWORD *)(v10 + 152), v18);
  sub_1B15C6A94((uint64_t)v16, v19, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1B15F1370()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15_25();
  return swift_deallocObject();
}

uint64_t sub_1B15F1394@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B15F1274(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

uint64_t sub_1B15F13A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t ObjectType;
  void (*v18)(_BYTE *, uint64_t);
  uint64_t result;
  char v20;
  _BYTE v21[15];
  uint64_t v22;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 144);
  v8 = sub_1B16BA328();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = &v21[-v15];
  ObjectType = swift_getObjectType();
  CommandCenterType.state<A>(for:)(a2, ObjectType, a1);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v13, v16, v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v7) == 1)
  {
    v18 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
    v18(v16, v8);
    result = ((uint64_t (*)(_BYTE *, uint64_t))v18)(v13, v8);
    v20 = 2;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v6 + 152) + 8))(&v22, v7);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v16, v8);
    v20 = v22;
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v13, v7);
  }
  *a3 = v20;
  return result;
}

uint64_t sub_1B15F1508@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1B15F13A4(a1, v2, a2);
}

uint64_t sub_1B15F1510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = a6;
  v24 = a7;
  v11 = *(_QWORD *)a3;
  v12 = *(_QWORD *)(*(_QWORD *)a3 + 144);
  v13 = sub_1B16BA328();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v23 - v16;
  ObjectType = swift_getObjectType();
  CommandCenterType.state<A>(for:)(a3, ObjectType, a2);
  v25 = a4;
  v26 = a5;
  v27 = v23;
  v28 = v24;
  v20 = type metadata accessor for StateCommandTitle(0, v12, *(_QWORD *)(v11 + 152), v19);
  v21 = sub_1B16B6698((uint64_t)v17, v20);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v21;
}

uint64_t sub_1B15F1618()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15_25();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15F1644(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B15F1510(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

void ContextMenuItem.__allocating_init<A, B>(stateCommand:context:title:image:options:)()
{
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_21_24();
  ContextMenuItem.init<A, B>(stateCommand:context:title:image:options:)();
  OUTLINED_FUNCTION_67();
}

void ContextMenuItem.init<A, B>(stateCommand:context:title:image:options:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_6();
  v46 = v1;
  v59 = v2;
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 136);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v3, v2);
  v9 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  v48 = v10;
  v49 = v12;
  v55 = *v13;
  v53 = *((_QWORD *)v13 + 2);
  v47 = *(unsigned __int8 *)(v14 + 16);
  v15 = *(_QWORD *)(v8 + 16);
  v16 = *(_QWORD *)(v8 + 24);
  v17 = v8;
  v50 = v11;
  v51 = v16;
  v0[2] = v15;
  v0[3] = v16;
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  OUTLINED_FUNCTION_119((uint64_t)v9, v18, v44);
  v19 = *(unsigned __int8 *)(v6 + 80);
  v56 = v19 | 7;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v5;
  v57 = *(_QWORD *)(v4 + 144);
  *(_QWORD *)(v20 + 24) = v57;
  OUTLINED_FUNCTION_80_10(v20, *(_QWORD *)(v4 + 152));
  *(_QWORD *)(v21 + 56) = v53;
  *(_QWORD *)(v21 + 64) = v17;
  v54 = v17;
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  OUTLINED_FUNCTION_119(v21 + ((v19 + 72) & ~v19), (uint64_t)v9, v52);
  v0[4] = sub_1B15F1994;
  v0[5] = v20;
  v22 = v44;
  v44((uint64_t)v9, v59, v5);
  *(_QWORD *)&v55 = ((v19 + 48) & ~v19) + v7;
  v53 = (v19 + 48) & ~v19;
  OUTLINED_FUNCTION_82_11();
  v45 = v23;
  v24 = (_QWORD *)swift_allocObject();
  v26 = v57;
  v25 = v58;
  v24[2] = v5;
  v24[3] = v26;
  v24[4] = v25;
  v24[5] = v17;
  v52((uint64_t)v24 + ((v19 + 48) & ~v19), (uint64_t)v9, v5);
  v27 = OUTLINED_FUNCTION_66_13((__n128 *)((char *)v24 + v7));
  v0[6] = sub_1B15F0764;
  v0[7] = v24;
  v28 = v59;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v9, v59, v5, v27);
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v5;
  v29[3] = v26;
  v30 = v26;
  v31 = v58;
  v32 = v54;
  v29[4] = v58;
  v29[5] = v32;
  OUTLINED_FUNCTION_18_44((uint64_t)v29 + v53, (uint64_t)v9);
  v0[8] = sub_1B15F076C;
  v0[9] = v29;
  OUTLINED_FUNCTION_62_14((uint64_t)v9, v28);
  v33 = (_QWORD *)OUTLINED_FUNCTION_24_35();
  v33[2] = v5;
  v33[3] = v30;
  v35 = v53;
  v34 = v54;
  v33[4] = v31;
  v33[5] = v34;
  v52((uint64_t)v33 + v35, (uint64_t)v9, v5);
  v0[10] = sub_1B15F0774;
  v0[11] = v33;
  v36 = v59;
  OUTLINED_FUNCTION_62_14((uint64_t)v9, v59);
  v37 = v45;
  v38 = (_QWORD *)OUTLINED_FUNCTION_24_35();
  v39 = v57;
  v40 = v58;
  v38[2] = v5;
  v38[3] = v39;
  v38[4] = v40;
  v38[5] = v34;
  OUTLINED_FUNCTION_14_16((uint64_t)v38 + v35, (uint64_t)v9);
  OUTLINED_FUNCTION_27_37((__n128 *)((char *)v38 + v37));
  v0[12] = sub_1B15F19A8;
  v0[13] = v38;
  v0[14] = sub_1B145C40C;
  v0[15] = 0;
  OUTLINED_FUNCTION_14_16((uint64_t)v9, v36);
  v41 = (_QWORD *)swift_allocObject();
  v42 = v57;
  v41[2] = v5;
  v41[3] = v42;
  v41[4] = v40;
  v41[5] = v34;
  OUTLINED_FUNCTION_14_16((uint64_t)v41 + v35, (uint64_t)v9);
  v0[16] = sub_1B15F0928;
  v0[17] = v41;
  OUTLINED_FUNCTION_59_16();
  sub_1B16B9740();
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15F19A8()
{
  return sub_1B15F19B4();
}

uint64_t sub_1B15F19B4()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_15_46();
  return v0();
}

void ContextMenuItem.__allocating_init<A, B>(stateCommand:context:identifier:title:image:options:)()
{
  OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_39_22();
  ContextMenuItem.init<A, B>(stateCommand:context:identifier:title:image:options:)();
  OUTLINED_FUNCTION_27();
}

void ContextMenuItem.init<A, B>(stateCommand:context:identifier:title:image:options:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  _QWORD *v17;
  __n128 v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_6();
  v29 = v2;
  v4 = v3;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 136);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v3, v2);
  OUTLINED_FUNCTION_75_13();
  v25 = *(_QWORD *)(v9 + 16);
  v0[2] = v10;
  v0[3] = v11;
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  OUTLINED_FUNCTION_119(v1, v12, v27);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v6;
  v24 = *(_QWORD *)(v5 + 144);
  *(_QWORD *)(v14 + 24) = v24;
  OUTLINED_FUNCTION_80_10(v14, *(_QWORD *)(v5 + 152));
  *(_QWORD *)(v15 + 56) = v25;
  *(_QWORD *)(v15 + 64) = v4;
  v23 = v4;
  v16 = *(void (**)(void))(v7 + 32);
  OUTLINED_FUNCTION_7_36(v15 + ((v13 + 72) & ~v13));
  v0[4] = sub_1B15F1994;
  v0[5] = v14;
  v27(v1, v29, v6);
  v26 = (v13 + 48) & ~v13;
  v17 = (_QWORD *)OUTLINED_FUNCTION_33_28();
  v17[2] = v6;
  v17[3] = v24;
  v17[4] = v28;
  v17[5] = v4;
  OUTLINED_FUNCTION_19_50((uint64_t)v17 + v26);
  v18 = OUTLINED_FUNCTION_66_13((__n128 *)((char *)v17 + ((v26 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
  v0[6] = sub_1B15F0764;
  v0[7] = v17;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v27)(v1, v29, v6, v18);
  v19 = (_QWORD *)OUTLINED_FUNCTION_33_28();
  v19[2] = v6;
  v19[3] = v24;
  v19[4] = v28;
  v19[5] = v4;
  OUTLINED_FUNCTION_31_30();
  v16();
  v0[8] = sub_1B15F076C;
  v0[9] = v19;
  OUTLINED_FUNCTION_18_44(v1, v29);
  v20 = (_QWORD *)OUTLINED_FUNCTION_68_14();
  v20[2] = v6;
  v20[3] = v24;
  v20[4] = v28;
  v20[5] = v4;
  OUTLINED_FUNCTION_19_50((uint64_t)v20 + v26);
  v0[10] = sub_1B15F0774;
  v0[11] = v20;
  OUTLINED_FUNCTION_18_44(v1, v29);
  v21 = (_QWORD *)OUTLINED_FUNCTION_68_14();
  v21[2] = v6;
  v21[3] = v24;
  v21[4] = v28;
  v21[5] = v4;
  OUTLINED_FUNCTION_19_50((uint64_t)v21 + v26);
  OUTLINED_FUNCTION_27_37((__n128 *)((char *)v21 + ((v26 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
  v0[12] = sub_1B15F19A8;
  v0[13] = v21;
  v0[14] = sub_1B145C494;
  v0[15] = 0;
  OUTLINED_FUNCTION_26_35(v1, v29);
  v22 = (_QWORD *)OUTLINED_FUNCTION_68_14();
  v22[2] = v6;
  v22[3] = v24;
  v22[4] = v28;
  v22[5] = v23;
  OUTLINED_FUNCTION_19_50((uint64_t)v22 + v26);
  v0[16] = sub_1B15F0928;
  v0[17] = v22;
  OUTLINED_FUNCTION_59_16();
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_47();
}

void sub_1B15F1CD0()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;

  OUTLINED_FUNCTION_6();
  v35 = v1;
  v3 = v2;
  v5 = v4;
  v38 = v6;
  v8 = v7;
  v10 = v9;
  v11 = *v2;
  v12 = *(_QWORD *)(*v2 + 136);
  v13 = OUTLINED_FUNCTION_19_0();
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_16_14();
  v16 = *(_QWORD *)(v11 + 144);
  sub_1B16BA328();
  OUTLINED_FUNCTION_15_0();
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v22 = (char *)&v31 - v21;
  if (v8)
  {
    v33 = v20;
    v34 = v19;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v0, v35, v12);
    __swift_storeEnumTagSinglePayload(v0, 0, 1, v12);
    v31 = v8;
    v23 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 80);
    v24 = *(_QWORD *)(v11 + 152);
    swift_retain();
    v25 = v5;
    v35 = v5;
    v26 = v25;
    v23(v3, v0, v12, v16, v24, ObjectType, v10);
    OUTLINED_FUNCTION_77_11(v36);
    v27 = v31;
    v28 = v38;
    v39 = v31;
    v40 = v38;
    v41 = v26;
    sub_1B13A1818(255, (unint64_t *)&qword_1ED1838D0);
    v30 = type metadata accessor for StateCommandValue(0, v16, v29, v24);
    StateCommandValue.value(for:)((uint64_t)v22, v30, (uint64_t)&v42);
    OUTLINED_FUNCTION_36_21();
    sub_1B15F3B78(v27, v28, v35);
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B15F1E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  OUTLINED_FUNCTION_6();
  v3 = v2;
  v14 = v2;
  v15 = v4;
  v16 = v5;
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 136);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_16_14();
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v10, v11);
  ObjectType = swift_getObjectType();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v13(v0, v3, v7);
  OUTLINED_FUNCTION_49_20();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v15 + 80))(v16, v0, v7, v1, *(_QWORD *)(v6 + 152), ObjectType);
  OUTLINED_FUNCTION_67_3(v0);
  v13(v0, v14, v7);
  OUTLINED_FUNCTION_49_20();
  OUTLINED_FUNCTION_55_19();
}

void sub_1B15F1FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  StateCommandContextValue.value(for:context:)(v2, v1, a1, v3 - 144);
  OUTLINED_FUNCTION_67_3(v1);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 160) + 8))(v2, *(_QWORD *)(v3 - 152));
  OUTLINED_FUNCTION_47();
}

void ContextMenuItem.__allocating_init<A, B>(stateCommand:context:identifier:title:subtitle:image:options:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_3_109();
  OUTLINED_FUNCTION_11_57();
  ContextMenuItem.init<A, B>(stateCommand:context:identifier:title:subtitle:image:options:)();
  OUTLINED_FUNCTION_47();
}

void ContextMenuItem.init<A, B>(stateCommand:context:identifier:title:subtitle:image:options:)()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  __n128 v28;
  _QWORD *v29;
  _OWORD *v30;
  char v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t *v42;

  OUTLINED_FUNCTION_6();
  v30 = v2;
  v37 = v3;
  v42 = v4;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 136);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v4, v3);
  OUTLINED_FUNCTION_75_13();
  v34 = v9;
  v32 = (_OWORD *)v10;
  v33 = *(_QWORD *)(v10 + 24);
  v41 = *v11;
  v12 = *((_QWORD *)v11 + 2);
  v31 = *(_BYTE *)(v13 + 16);
  v0[2] = v14;
  v0[3] = v15;
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v39 = v12;
  OUTLINED_FUNCTION_119(v1, v16, v38);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = OUTLINED_FUNCTION_68_14();
  *(_QWORD *)(v18 + 16) = v6;
  v36 = *(_QWORD *)(v5 + 144);
  *(_QWORD *)(v18 + 24) = v36;
  v40 = *(_QWORD *)(v5 + 152);
  *(_QWORD *)(v18 + 32) = v40;
  *(_OWORD *)(v18 + 40) = v41;
  *(_QWORD *)(v18 + 56) = v39;
  *(_QWORD *)(v18 + 64) = v42;
  *(_QWORD *)&v41 = *(_QWORD *)(v7 + 32);
  OUTLINED_FUNCTION_119(v18 + ((v17 + 72) & ~v17), v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v41);
  v0[4] = sub_1B15F1994;
  v0[5] = v18;
  OUTLINED_FUNCTION_119(v1, v37, v38);
  v19 = (v17 + 48) & ~v17;
  OUTLINED_FUNCTION_82_11();
  v35 = v20;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v6;
  v21[3] = v36;
  v21[4] = v40;
  v21[5] = v42;
  OUTLINED_FUNCTION_63_13((uint64_t)v21 + v19);
  v22 = (char *)v21 + v8;
  *(_OWORD *)v22 = *v30;
  v22[16] = v31;
  v0[6] = sub_1B15F0764;
  v0[7] = v21;
  v38(v1, v37, v6);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v6;
  v23[3] = v36;
  v23[4] = v40;
  v23[5] = v42;
  OUTLINED_FUNCTION_19_50((uint64_t)v23 + v19);
  v0[8] = sub_1B15F076C;
  v0[9] = v23;
  OUTLINED_FUNCTION_62_14(v1, v37);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v6;
  v24[3] = v36;
  v24[4] = v40;
  v24[5] = v42;
  OUTLINED_FUNCTION_19_50((uint64_t)v24 + v19);
  v0[10] = sub_1B15F0774;
  v0[11] = v24;
  v38(v1, v37, v6);
  v25 = (_QWORD *)OUTLINED_FUNCTION_24_35();
  v25[2] = v6;
  v25[3] = v36;
  v25[4] = v40;
  v25[5] = v42;
  OUTLINED_FUNCTION_63_13((uint64_t)v25 + v19);
  v26 = (char *)v25 + v35;
  *(_OWORD *)v26 = *v32;
  *((_QWORD *)v26 + 2) = v34;
  *((_QWORD *)v26 + 3) = v33;
  v0[12] = sub_1B15F2580;
  v0[13] = v25;
  OUTLINED_FUNCTION_119(v1, v37, v38);
  v27 = (_QWORD *)OUTLINED_FUNCTION_24_35();
  v27[2] = v6;
  v27[3] = v36;
  v27[4] = v40;
  v27[5] = v42;
  OUTLINED_FUNCTION_31_30();
  ((void (*)(void))v41)();
  v28 = OUTLINED_FUNCTION_27_37((__n128 *)((char *)v27 + v35));
  v0[14] = sub_1B15F2590;
  v0[15] = v27;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v41)(v1, v37, v6, v28);
  v29 = (_QWORD *)OUTLINED_FUNCTION_24_35();
  v29[2] = v6;
  v29[3] = v36;
  v29[4] = v40;
  v29[5] = v42;
  OUTLINED_FUNCTION_7_36((uint64_t)v29 + v19);
  OUTLINED_FUNCTION_69_16((uint64_t)sub_1B15F0928);
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_47();
}

void sub_1B15F2398()
{
  OUTLINED_FUNCTION_56_19();
  sub_1B15F1CD0();
}

void sub_1B15F23B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t ObjectType;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;

  OUTLINED_FUNCTION_6();
  v24 = v3;
  v25 = v2;
  v27 = v4;
  v29 = v5;
  v28 = OUTLINED_FUNCTION_50_20();
  v26 = *(_QWORD *)(v28 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v23 - v8;
  v10 = *(_QWORD *)(v0 + 144);
  v11 = sub_1B16BA328();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)&v23 - v18;
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v9, v24, v1);
  OUTLINED_FUNCTION_71_16((uint64_t)v9);
  v21 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 80))(v27, v9, v1, v10, v21, ObjectType);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v28);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10) == 1)
  {
    OUTLINED_FUNCTION_67_3((uint64_t)v19);
    OUTLINED_FUNCTION_67_3((uint64_t)v16);
    v22 = 2;
  }
  else
  {
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v21 + 8))(&v30, v10, v21);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
    v22 = v30;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v16, v10);
  }
  *v29 = v22;
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15F2580()
{
  return sub_1B15F19B4();
}

uint64_t sub_1B15F2590()
{
  return sub_1B15F19B4();
}

void ContextMenuItem.__allocating_init<A, B>(stateCommand:context:identifier:title:subtitle:image:state:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *vars0;

  OUTLINED_FUNCTION_3_109();
  v9 = OUTLINED_FUNCTION_11_57();
  ContextMenuItem.init<A, B>(stateCommand:context:identifier:title:subtitle:image:state:options:)(v9, v10, v11, v12, v13, v14, v15, v16, a9, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26,
    v27,
    vars0);
}

uint64_t sub_1B15F25F8()
{
  uint64_t v0;

  return v0;
}

void ContextMenuItem.init<A, B>(stateCommand:context:identifier:title:subtitle:image:state:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_OWORD *a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  OUTLINED_FUNCTION_6();
  v60 = v22;
  v74 = v23;
  v70 = v24;
  v56 = a21;
  v25 = *v24;
  v26 = *(_QWORD *)(*v24 + 136);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  MEMORY[0x1E0C80A78](v24, v23);
  v59 = v29;
  v30 = *(_QWORD *)(v29 + 16);
  v61 = *(_QWORD *)(v29 + 24);
  v62 = v30;
  v58 = v31;
  v32 = *(_QWORD *)(v31 + 16);
  v63 = *(_QWORD *)(v31 + 24);
  v64 = v32;
  v67 = *v33;
  v34 = *((_QWORD *)v33 + 2);
  v57 = *(unsigned __int8 *)(v35 + 16);
  *(_QWORD *)(v21 + 16) = v36;
  *(_QWORD *)(v21 + 24) = v37;
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v68 = v21;
  v69 = v38;
  OUTLINED_FUNCTION_119((uint64_t)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v38);
  v40 = *(unsigned __int8 *)(v27 + 80);
  v71 = v40 | 7;
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v26;
  v73 = *(_QWORD *)(v25 + 144);
  *(_QWORD *)(v41 + 24) = v73;
  v72 = *(_QWORD *)(v25 + 152);
  *(_QWORD *)(v41 + 32) = v72;
  *(_OWORD *)(v41 + 40) = v67;
  v42 = v70;
  *(_QWORD *)(v41 + 56) = v34;
  *(_QWORD *)(v41 + 64) = v42;
  v43 = *(_QWORD *)(v27 + 32);
  OUTLINED_FUNCTION_7_36(v41 + ((v40 + 72) & ~v40));
  v44 = v68;
  *(_QWORD *)(v68 + 32) = sub_1B15F2D10;
  *(_QWORD *)(v44 + 40) = v41;
  OUTLINED_FUNCTION_18_44((uint64_t)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v74);
  v45 = (v40 + 48) & ~v40;
  *(_QWORD *)&v67 = v45 + v28;
  v65 = (v45 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v46 = (_QWORD *)OUTLINED_FUNCTION_24_35();
  v47 = v73;
  v46[2] = v26;
  v46[3] = v47;
  v46[4] = v72;
  v46[5] = v42;
  v48 = v42;
  v66 = v45;
  OUTLINED_FUNCTION_7_36((uint64_t)v46 + v45);
  v55 = v43;
  v49 = (char *)v46 + v65;
  *(_OWORD *)v49 = *v56;
  v49[16] = v57;
  v50 = v68;
  *(_QWORD *)(v68 + 48) = sub_1B15F0764;
  *(_QWORD *)(v50 + 56) = v46;
  OUTLINED_FUNCTION_18_44((uint64_t)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v74);
  v51 = (_QWORD *)OUTLINED_FUNCTION_24_35();
  v52 = v72;
  v53 = v73;
  v51[2] = v26;
  v51[3] = v53;
  v51[4] = v52;
  v51[5] = v48;
  OUTLINED_FUNCTION_7_36((uint64_t)v51 + v45);
  v54 = sub_1B13CC6B4(255, &qword_1EEF352A8);
  v75 = v53;
  v76 = v26;
  v77 = v54;
  v78 = v52;
  type metadata accessor for StateCommandContextValue();
}

void sub_1B15F284C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(void);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v9 = sub_1B16BA328();
  v10 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  *(_QWORD *)(v8 - 312) = v4 + 32;
  *(_OWORD *)(v8 - 304) = *(_OWORD *)*(_QWORD *)(v8 - 272);
  *(_OWORD *)(v8 - 272) = *(_OWORD *)*(_QWORD *)(v8 - 280);
  v10(v6, *(_QWORD *)(v8 - 248), v9);
  *(_QWORD *)(v1 + 64) = sub_1B15F31C0;
  *(_QWORD *)(v1 + 72) = v5;
  v11 = v1;
  v12 = *(_QWORD *)(v8 - 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 168))(v3, v12, v2);
  v13 = (_QWORD *)OUTLINED_FUNCTION_33_28();
  v13[2] = v2;
  v13[3] = v7;
  v13[4] = v0;
  v14 = *(_QWORD *)(v8 - 160);
  v13[5] = v14;
  OUTLINED_FUNCTION_31_30();
  v15 = *(void (**)(void))(v8 - 320);
  v15();
  *(_QWORD *)(v11 + 80) = sub_1B15F0774;
  *(_QWORD *)(v11 + 88) = v13;
  OUTLINED_FUNCTION_62_14(v3, v12);
  v16 = (_QWORD *)OUTLINED_FUNCTION_33_28();
  v18 = *(_QWORD *)(v8 - 144);
  v17 = *(_QWORD *)(v8 - 136);
  v16[2] = v2;
  v16[3] = v17;
  v16[4] = v18;
  v16[5] = v14;
  OUTLINED_FUNCTION_31_30();
  v19 = v15;
  v15();
  v20 = *(_QWORD *)(v8 - 208);
  v21 = (char *)v16 + v20;
  *(_OWORD *)v21 = *(_OWORD *)(v8 - 304);
  v22 = *(_QWORD *)(v8 - 240);
  *((_QWORD *)v21 + 2) = *(_QWORD *)(v8 - 232);
  *((_QWORD *)v21 + 3) = v22;
  v23 = *(_QWORD **)(v8 - 176);
  v23[12] = sub_1B15F2580;
  v23[13] = v16;
  v24 = *(_QWORD *)(v8 - 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 168))(v3, v24, v2);
  v25 = (_QWORD *)swift_allocObject();
  v26 = *(_QWORD *)(v8 - 136);
  v25[2] = v2;
  v25[3] = v26;
  v27 = *(_QWORD *)(v8 - 160);
  v25[4] = v18;
  v25[5] = v27;
  v28 = *(_QWORD *)(v8 - 200);
  OUTLINED_FUNCTION_7_36((uint64_t)v25 + v28);
  v29 = (char *)v25 + v20;
  *(_OWORD *)v29 = *(_OWORD *)(v8 - 272);
  v30 = *(_QWORD *)(v8 - 224);
  *((_QWORD *)v29 + 2) = *(_QWORD *)(v8 - 216);
  *((_QWORD *)v29 + 3) = v30;
  v23[14] = sub_1B15F2590;
  v23[15] = v25;
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v3, v24, v2);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v2;
  v31[3] = v26;
  v32 = *(_QWORD *)(v8 - 160);
  v31[4] = *(_QWORD *)(v8 - 144);
  v31[5] = v32;
  OUTLINED_FUNCTION_7_36((uint64_t)v31 + v28);
  OUTLINED_FUNCTION_69_16((uint64_t)sub_1B15F0928);
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15F2A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t ObjectType;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;

  v41 = a7;
  v44 = a4;
  v12 = *a6;
  v13 = *(_QWORD *)(*a6 + 136);
  v42 = sub_1B16BA328();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42, v14);
  v16 = (char *)&v33 - v15;
  v17 = *(_QWORD *)(v12 + 144);
  v18 = sub_1B16BA328();
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v23 = (char *)&v33 - v22;
  v43 = a3;
  if (a3)
  {
    v38 = v21;
    v39 = v20;
    v34 = a6;
    v37 = v23;
    ObjectType = swift_getObjectType();
    v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v35 = ObjectType;
    v36 = v25;
    v33 = a1;
    v26 = v41;
    v25(v16, v41, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v13);
    v27 = v44;
    v28 = *(void (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 80);
    v29 = *(_QWORD *)(v12 + 152);
    swift_retain();
    v30 = a5;
    v28(v34, v16, v13, v17, v29, v35, a2);
    v40 = *(_QWORD *)(v40 + 8);
    ((void (*)(char *, uint64_t))v40)(v16, v42);
    v49 = v43;
    v50 = v27;
    v51 = a5;
    v36(v16, v26, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v13);
    sub_1B13A1818(255, (unint64_t *)&qword_1ED1838D0);
    v45 = v17;
    v46 = v13;
    v47 = v31;
    v48 = v29;
    type metadata accessor for StateCommandContextValue();
  }
  return 0;
}

uint64_t objectdestroy_71Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_16();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 40))
  {
    swift_release();

  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 72) & ~v3), v1);
  OUTLINED_FUNCTION_31_30();
  return OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1B15F2D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_56_19();
  return sub_1B15F2A58(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1B15F2D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  OUTLINED_FUNCTION_6();
  v32 = v3;
  v30 = v4;
  v31 = v5;
  v26 = v7;
  v27 = v6;
  v9 = v8;
  v33 = v10;
  v11 = OUTLINED_FUNCTION_50_20();
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v25 - v15;
  v17 = *(_QWORD *)(v1 + 144);
  v18 = OUTLINED_FUNCTION_19_0();
  v28 = *(_QWORD *)(v18 - 8);
  v29 = v18;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_16_14();
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v16, v26, v2);
  OUTLINED_FUNCTION_71_16((uint64_t)v16);
  v22 = *(_QWORD *)(v1 + 152);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 80))(v9, v16, v2, v17, v22, ObjectType);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  v34 = v30;
  v35 = v31;
  v36 = v32;
  v24 = type metadata accessor for StateCommandOptions(0, v17, v22, v23);
  sub_1B15C6A94(v0, v24, v33);
  OUTLINED_FUNCTION_77_11(v28);
  OUTLINED_FUNCTION_47();
}

uint64_t objectdestroy_29Tm_0()
{
  OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_11_27();
  OUTLINED_FUNCTION_1_3();
  swift_release();
  OUTLINED_FUNCTION_31_30();
  return OUTLINED_FUNCTION_1_2();
}

void sub_1B15F2E9C(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t ObjectType;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v25 = a2;
  v26 = a4;
  v24 = a1;
  v30 = a5;
  v6 = *a2;
  v7 = *(_QWORD *)(*a2 + 136);
  v8 = sub_1B16BA328();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v23 - v11;
  v13 = *(_QWORD *)(v6 + 144);
  v14 = sub_1B16BA328();
  v28 = *(_QWORD *)(v14 - 8);
  v29 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v23 - v16;
  ObjectType = swift_getObjectType();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v23[2] = a3;
  v23[1] = v19;
  v19(v12, a3, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v7);
  v20 = *(void (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 80);
  v21 = *(_QWORD *)(v6 + 152);
  v27 = v17;
  v20(v25, v12, v7, v13, v21, ObjectType);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = sub_1B13CC6B4(255, &qword_1EEF352A8);
  v31 = v13;
  v32 = v7;
  v33 = v22;
  v34 = v21;
  type metadata accessor for StateCommandContextValue();
}

uint64_t sub_1B15F3000(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;

  v7 = sub_1B16BA328();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v5 - 184, *(_QWORD *)(v5 - 232), v7);
  if (*(_QWORD *)(v5 - 184))
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 264))(v3, *(_QWORD *)(v5 - 256), v2);
    __swift_storeEnumTagSinglePayload(v3, 0, 1, v2);
    v9 = *(_QWORD *)(v5 - 224);
    StateCommandContextValue.value(for:context:)(v9, v3, a1, v5 - 128);
    v1(v3, v4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v5 - 184, a1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5 - 184, v7);
    *(_OWORD *)(v5 - 128) = 0u;
    *(_OWORD *)(v5 - 112) = 0u;
    *(_QWORD *)(v5 - 96) = 0;
    v9 = *(_QWORD *)(v5 - 224);
  }
  sub_1B15F3AB8(v5 - 128, v5 - 184);
  v10 = *(_QWORD *)(v5 - 160);
  if (v10)
  {
    v11 = *(_QWORD *)(v5 - 152);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 184), *(_QWORD *)(v5 - 160));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    sub_1B15F3B1C(v5 - 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v9, *(_QWORD *)(v5 - 208));
    v12 = *(_BYTE *)(v5 - 185);
    result = __swift_destroy_boxed_opaque_existential_1(v5 - 184);
  }
  else
  {
    sub_1B15F3B1C(v5 - 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v9, *(_QWORD *)(v5 - 208));
    result = sub_1B15F3B1C(v5 - 184);
    v12 = 2;
  }
  **(_BYTE **)(v5 - 200) = v12;
  return result;
}

uint64_t sub_1B15F3170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_1_3();
  v2 = v0 + v1;
  if (*(_QWORD *)(v0 + v1))
  {
    OUTLINED_FUNCTION_65_13();
    if (*(_QWORD *)(v2 + 40))
      __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return OUTLINED_FUNCTION_6_0();
}

void sub_1B15F31C0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1B15F2E9C(a1, *(uint64_t **)(v2 + 40), v2 + v4, v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8), a2);
}

void sub_1B15F31F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t ObjectType;
  uint64_t v16;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  v9 = sub_1B16BA328();
  v10 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v16 - v13;
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v14, v1, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v8);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v3, v14, v5, v8, ObjectType, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  OUTLINED_FUNCTION_47();
}

void sub_1B15F32E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_17_40(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_54_21();
  OUTLINED_FUNCTION_37_25();
  OUTLINED_FUNCTION_13_55();
  OUTLINED_FUNCTION_58_17();
  OUTLINED_FUNCTION_30_36();
  OUTLINED_FUNCTION_60_15();
  OUTLINED_FUNCTION_55_19();
}

void sub_1B15F3378(uint64_t a1)
{
  OUTLINED_FUNCTION_46_17(a1);
  OUTLINED_FUNCTION_84_10();
  OUTLINED_FUNCTION_36_21();
  OUTLINED_FUNCTION_47();
}

uint64_t objectdestroy_38Tm()
{
  OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_11_27();
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_65_13();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_31_30();
  return OUTLINED_FUNCTION_1_2();
}

void sub_1B15F33F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_17_40(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_54_21();
  OUTLINED_FUNCTION_37_25();
  OUTLINED_FUNCTION_13_55();
  OUTLINED_FUNCTION_58_17();
  OUTLINED_FUNCTION_30_36();
  OUTLINED_FUNCTION_60_15();
  sub_1B1456114();
  OUTLINED_FUNCTION_55_19();
}

void sub_1B15F3484(uint64_t a1)
{
  OUTLINED_FUNCTION_46_17(a1);
  OUTLINED_FUNCTION_84_10();
  OUTLINED_FUNCTION_36_21();
  OUTLINED_FUNCTION_47();
}

uint64_t objectdestroy_122Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_65_13();
  if (*(_QWORD *)(v0 + v1 + 24) != 1)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B15F3504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_6();
  v18 = v0;
  v19 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 136);
  v9 = OUTLINED_FUNCTION_42_0();
  v10 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v17 - v13;
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v14, v3, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v8);
  LOBYTE(v3) = CommandCenterType.canExecute<A>(command:context:)(v5, (uint64_t)v14, ObjectType, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return v3 & 1;
}

uint64_t ContextMenuItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_27();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ContextMenuItem.__deallocating_deinit()
{
  ContextMenuItem.deinit();
  return swift_deallocClassInstance();
}

void ContextMenuItem.makeAction(commandCenter:source:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_6();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  if ((OUTLINED_FUNCTION_74_12() & 1) != 0)
  {
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v6);
    v9 = v8;
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32);
    swift_retain();
    v11 = (void *)v10(v1, v6);
    swift_release();
    if (v9)
    {
      v12 = (_QWORD *)OUTLINED_FUNCTION_25();
      v12[2] = v2;
      v12[3] = v1;
      v12[4] = v6;
      v12[5] = v4;
      objc_allocWithZone(MEMORY[0x1E0DC33F0]);
      swift_retain();
      swift_unknownObjectRetain();
      OUTLINED_FUNCTION_51();
      sub_1B15F38FC(v7, v9, v11, (uint64_t)sub_1B15F3764, (uint64_t)v12);
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15F3738()
{
  OUTLINED_FUNCTION_1_1();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_11_27();
  return swift_deallocObject();
}

uint64_t sub_1B15F3764()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[2] + 80))(v0[3], v0[4], v0[5]);
  return 1;
}

void sub_1B15F3790()
{
  ContextMenuItem.makeAction(commandCenter:source:)();
}

uint64_t sub_1B15F37B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;

  sub_1B13DB4AC(0, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B16C51E0;
  v15 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v17 = sub_1B140493C();
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(v13 + 96) = v16;
  *(_QWORD *)(v13 + 104) = v17;
  if (a4)
    v18 = a3;
  else
    v18 = 0;
  v19 = 0xE000000000000000;
  if (a4)
    v19 = a4;
  *(_QWORD *)(v13 + 64) = v17;
  *(_QWORD *)(v13 + 72) = v18;
  *(_QWORD *)(v13 + 80) = v19;
  sub_1B13A1818(0, (unint64_t *)&qword_1ED188F60);
  sub_1B16B9740();
  sub_1B16B9740();
  v20 = (void *)sub_1B16BA2F8();
  sub_1B16BA058();
  sub_1B16B8B58();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 80))(a5, a6, a7);
}

id sub_1B15F38FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v9 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1B15F3A68;
  v13[3] = &block_descriptor_65;
  v10 = _Block_copy(v13);
  v11 = objc_msgSend(v5, sel_initWithName_image_actionHandler_, v9, a3, v10);

  _Block_release(v10);
  swift_release();
  return v11;
}

uint64_t sub_1B15F39C4()
{
  OUTLINED_FUNCTION_1_1();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15F39FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15F37B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t method lookup function for ContextMenuItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init<A>(command:context:title:image:options:willExecute:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init(command:title:image:options:willExecute:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init<A, B>(command:context:title:image:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init<A>(command:title:image:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init<A, B>(stateCommand:context:title:image:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init<A, B>(stateCommand:context:identifier:title:image:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init<A, B>(stateCommand:context:identifier:title:subtitle:image:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of ContextMenuItem.__allocating_init<A, B>(stateCommand:context:identifier:title:subtitle:image:state:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_1B15F3A68(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_1B15F3AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DB4AC(0, &qword_1EEF352B0, &qword_1EEF352A8, (uint64_t)&protocol descriptor for CommandStateType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B15F3B1C(uint64_t a1)
{
  uint64_t v2;

  sub_1B13DB4AC(0, &qword_1EEF352B0, &qword_1EEF352A8, (uint64_t)&protocol descriptor for CommandStateType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B15F3B78(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    swift_release();

  }
}

BOOL static SelectionStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SelectionStyle.hash(into:)()
{
  return OUTLINED_FUNCTION_5_3();
}

void SelectionStyle.hashValue.getter()
{
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_159();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

BOOL static LayoutSelectionStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LayoutSelectionStyle.hash(into:)()
{
  return OUTLINED_FUNCTION_5_3();
}

void LayoutSelectionStyle.hashValue.getter()
{
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_159();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

uint64_t ViewSelectable.isSelected.getter()
{
  return 0;
}

void (*sub_1B15F3C88(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ViewSelectable.isSelected.modify(v2);
  return sub_1B13C6AF0;
}

uint64_t (*ViewSelectable.isSelected.modify(_BYTE *a1))(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  *a1 = 0;
  return nullsub_1;
}

unint64_t sub_1B15F3CDC()
{
  unint64_t result;

  result = qword_1EEF352B8;
  if (!qword_1EEF352B8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for SelectionStyle, &type metadata for SelectionStyle);
    atomic_store(result, (unint64_t *)&qword_1EEF352B8);
  }
  return result;
}

unint64_t sub_1B15F3D1C()
{
  unint64_t result;

  result = qword_1EEF352C0;
  if (!qword_1EEF352C0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for LayoutSelectionStyle, &type metadata for LayoutSelectionStyle);
    atomic_store(result, (unint64_t *)&qword_1EEF352C0);
  }
  return result;
}

void sub_1B15F3D58(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1B15F3D64()
{
  return 16;
}

__n128 sub_1B15F3D70(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t storeEnumTagSinglePayload for SelectionStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15F3DC8 + 4 * byte_1B16D81E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B15F3DFC + 4 * byte_1B16D81E0[v4]))();
}

uint64_t sub_1B15F3DFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15F3E04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15F3E0CLL);
  return result;
}

uint64_t sub_1B15F3E18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15F3E20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B15F3E24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15F3E2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SelectionStyle()
{
  return &type metadata for SelectionStyle;
}

uint64_t storeEnumTagSinglePayload for LayoutSelectionStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15F3E98 + 4 * byte_1B16D81EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15F3ECC + 4 * byte_1B16D81EA[v4]))();
}

uint64_t sub_1B15F3ECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15F3ED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15F3EDCLL);
  return result;
}

uint64_t sub_1B15F3EE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15F3EF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15F3EF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15F3EFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayoutSelectionStyle()
{
  return &type metadata for LayoutSelectionStyle;
}

uint64_t dispatch thunk of ViewSelectable.isSelectable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewSelectable.isSelected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ViewSelectable.isSelected.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ViewSelectable.isSelected.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1B15F3F3C(uint64_t a1)
{
  int64_t v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  uint64_t v40;

  v32 = MEMORY[0x1E0DEE9E0];
  v40 = MEMORY[0x1E0DEE9E0];
  sub_1B13C5AF4(a1, v39);
  v33 = v39[1];
  v1 = v39[3];
  v2 = v39[4];
  v34 = (unint64_t)(v39[2] + 64) >> 6;
  v35 = v39[0];
  result = sub_1B16B9740();
  v4 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        v5 = __clz(__rbit64(v2));
        v2 &= v2 - 1;
        v6 = v5 | (v1 << 6);
      }
      else
      {
        v7 = v1 + 1;
        if (__OFADD__(v1, 1))
          goto LABEL_53;
        if (v7 >= v34)
          goto LABEL_51;
        v8 = *(_QWORD *)(v33 + 8 * v7);
        v9 = v1 + 1;
        if (!v8)
        {
          v9 = v1 + 2;
          if (v1 + 2 >= v34)
            goto LABEL_51;
          v8 = *(_QWORD *)(v33 + 8 * v9);
          if (!v8)
          {
            v9 = v1 + 3;
            if (v1 + 3 >= v34)
              goto LABEL_51;
            v8 = *(_QWORD *)(v33 + 8 * v9);
            if (!v8)
            {
              v9 = v1 + 4;
              if (v1 + 4 >= v34)
                goto LABEL_51;
              v8 = *(_QWORD *)(v33 + 8 * v9);
              if (!v8)
              {
                v9 = v1 + 5;
                if (v1 + 5 >= v34)
                  goto LABEL_51;
                v8 = *(_QWORD *)(v33 + 8 * v9);
                if (!v8)
                {
                  v10 = v1 + 6;
                  while (v10 < v34)
                  {
                    v8 = *(_QWORD *)(v33 + 8 * v10++);
                    if (v8)
                    {
                      v9 = v10 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_51:
                  sub_1B1488298();
                  return v32;
                }
              }
            }
          }
        }
LABEL_19:
        v2 = (v8 - 1) & v8;
        v6 = __clz(__rbit64(v8)) + (v9 << 6);
        v1 = v9;
      }
      v11 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v6);
      v12 = v11[1];
      v36 = *v11;
      v13 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v6);
      v38 = v4;
      if (v13 >> 62)
        break;
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      result = sub_1B16B9740();
      if (v14)
        goto LABEL_22;
LABEL_34:
      swift_bridgeObjectRelease();
      v19 = v4;
      if (v4 < 0)
        goto LABEL_38;
LABEL_35:
      if ((v19 & 0x4000000000000000) != 0)
        goto LABEL_38;
      if (*(_QWORD *)(v19 + 16))
        goto LABEL_39;
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
    }
    swift_bridgeObjectRetain_n();
    sub_1B16B9740();
    result = sub_1B16BA76C();
    v14 = result;
    if (!result)
      goto LABEL_34;
LABEL_22:
    if (v14 < 1)
      break;
    v37 = v2;
    v15 = v4;
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v17 = MEMORY[0x1B5E1DF60](i, v13);
      }
      else
      {
        v17 = *(_QWORD *)(v13 + 8 * i + 32);
        swift_retain();
      }
      v18 = MEMORY[0x1B5E1F2F8](v17 + 32);
      swift_unknownObjectRelease();
      if (v18)
      {
        sub_1B16BA61C();
        sub_1B16BA64C();
        sub_1B16BA658();
        sub_1B16BA628();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v4 = v15;
    v2 = v37;
    v19 = v38;
    if ((v38 & 0x8000000000000000) == 0)
      goto LABEL_35;
LABEL_38:
    swift_retain();
    v20 = sub_1B16BA76C();
    swift_release();
    if (!v20)
      goto LABEL_37;
LABEL_39:
    v21 = v32;
    if (*(_QWORD *)(v32 + 24) <= *(_QWORD *)(v32 + 16))
    {
      sub_1B1487C78();
      v21 = v40;
    }
    sub_1B16BAA48();
    sub_1B16B98FC();
    result = sub_1B16BAA78();
    v22 = v21 + 64;
    v32 = v21;
    v23 = -1 << *(_BYTE *)(v21 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v21 + 64 + 8 * (v24 >> 6))) == 0)
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v28 || (v27 & 1) == 0)
      {
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v22 + 8 * v25);
        if (v30 != -1)
        {
          v26 = __clz(__rbit64(~v30)) + (v25 << 6);
          goto LABEL_50;
        }
      }
      goto LABEL_54;
    }
    v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v21 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_50:
    *(_QWORD *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * v26);
    *v31 = v36;
    v31[1] = v12;
    *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v26) = v19;
    ++*(_QWORD *)(v21 + 16);
    result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1B15F4394(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _BYTE v27[32];

  v25 = a4;
  v26 = a3;
  v8 = sub_1B16BA328();
  v9 = MEMORY[0x1E0DEB940];
  v10 = *(_QWORD *)(v8 - 8);
  v12 = MEMORY[0x1E0C80A78](v8, v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v12, v15);
  v18 = (char *)&v25 - v17;
  v19 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v16, v20);
  v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1405FC4(a1, (uint64_t)v27);
  sub_1B13C2E28(0, (unint64_t *)&qword_1ED188590, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))v9);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, a5);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v18, a5);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v22, a5);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, a5);
    v26(v14, a2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, a5);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, a5);
    v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    v24(v18, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, a5);
    v26(v14, a2);
    return ((uint64_t (*)(char *, uint64_t))v24)(v14, v8);
  }
}

uint64_t CommandExecutionObserver.dispose(on:)()
{
  return swift_unknownObjectWeakAssign();
}

Swift::Void __swiftcall CommandExecutionObserver.dispose()()
{
  swift_unknownObjectWeakAssign();
}

uint64_t CommandExecutionObserver.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1B13C076C(v0 + 32);
  return v0;
}

uint64_t CommandExecutionObserver.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1B13C076C(v0 + 32);
  OUTLINED_FUNCTION_6_1();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15F45F0()
{
  return CommandExecutionObserver.dispose(on:)();
}

void sub_1B15F4610()
{
  CommandExecutionObserver.dispose()();
}

uint64_t sub_1B15F4630(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B15F464C(a1[2], a1[3], a2, a3, *(_QWORD *)(*a1 + 88));
}

uint64_t sub_1B15F464C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(__int128 *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;

  v30 = a3;
  v31 = a4;
  v7 = sub_1B16BA328();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v27 - v10;
  OUTLINED_FUNCTION_13();
  v12 = *(_QWORD *)(v5 + 16);
  if (!*(_QWORD *)(v12 + 16))
    return swift_endAccess();
  sub_1B16B9740();
  v13 = sub_1B14477CC();
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_endAccess();
  sub_1B16B9740();
  result = swift_bridgeObjectRelease();
  if (v15 >> 62)
  {
    sub_1B16B9740();
    v17 = sub_1B16BA76C();
    result = swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_5;
    return swift_bridgeObjectRelease();
  }
  v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    return swift_bridgeObjectRelease();
LABEL_5:
  v28 = v7;
  v29 = v8;
  if (v17 >= 1)
  {
    v18 = 0;
    v32 = v15 & 0xC000000000000001;
    do
    {
      if (v32)
      {
        v19 = MEMORY[0x1B5E1DF60](v18, v15);
      }
      else
      {
        v19 = *(_QWORD *)(v15 + 8 * v18 + 32);
        swift_retain();
      }
      v20 = MEMORY[0x1B5E1F2F8](v19 + 32);
      swift_unknownObjectRelease();
      if (v20)
      {
        v21 = v17;
        v22 = v15;
        v23 = *(void (**)(__int128 *, uint64_t))(v19 + 16);
        v24 = v29;
        v25 = v28;
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v11, v30, v28);
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, a5) == 1)
        {
          (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
          v33 = 0u;
          v34 = 0u;
        }
        else
        {
          *((_QWORD *)&v34 + 1) = a5;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v33);
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_0, v11, a5);
        }
        v17 = v21;
        v23(&v33, v31);
        swift_release();
        sub_1B13F77F4((uint64_t)&v33);
        v15 = v22;
      }
      else
      {
        swift_release();
      }
      ++v18;
    }
    while (v17 != v18);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B15F4898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13();
  v1 = OUTLINED_FUNCTION_49();
  v2 = sub_1B15F3F3C(v1);
  OUTLINED_FUNCTION_29();
  *(_QWORD *)(v0 + 16) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t CommandExecutionObserverStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CommandExecutionObserverStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t CommandExecutionObserverStore.description.getter()
{
  uint64_t v0;

  sub_1B16BA574();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13();
  v0 = OUTLINED_FUNCTION_49();
  sub_1B15AB9B4(v0);
  OUTLINED_FUNCTION_29();
  sub_1B13C2E28(0, (unint64_t *)&qword_1ED183718, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B140462C();
  sub_1B16B9800();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return 0xD000000000000023;
}

unint64_t sub_1B15F4A6C()
{
  return CommandExecutionObserverStore.description.getter();
}

uint64_t method lookup function for CommandExecutionObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for CommandExecutionObserverStore()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1B15F4AA4()
{
  swift_release();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocObject();
}

uint64_t sub_1B15F4AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B15F4394(a1, a2, *(void (**)(char *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16));
}

id sub_1B15F4ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(char *);
  uint64_t v17;
  uint64_t v18;
  id v19;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_1B16BA328();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v8, v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(uint64_t (**)(char *))v2;
  v19 = *(id *)(v2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, a1, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    return v19;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v4);
    v17 = v15(v14);
    OUTLINED_FUNCTION_1_14(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    return (id)v17;
  }
}

uint64_t StateCommandImage.init(default:block:)@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X3>, uint64_t (**a4)(void)@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = a1();
  result = OUTLINED_FUNCTION_1_14(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8));
  *a4 = a1;
  a4[1] = a2;
  a4[2] = (uint64_t (*)(void))v8;
  return result;
}

uint64_t (*StateCommandImage<>.init(off:on:)@<X0>(uint64_t (*a1)(unsigned __int8 *a1)@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(unsigned __int8 *a1)@<X8>))(unsigned __int8 *a1)
{
  uint64_t v5;
  uint64_t v6;

  v5 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a1;
  v6 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v6 + 16) = sub_1B15F4D14;
  *(_QWORD *)(v6 + 24) = v5;
  *a3 = sub_1B15F4D50;
  a3[1] = (uint64_t (*)(unsigned __int8 *))v6;
  a3[2] = a1;
  return a1;
}

uint64_t sub_1B15F4CE8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B15F4D14(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = 24;
  if ((a1 & 1) != 0)
    v2 = 16;
  return *(id *)(v1 + v2);
}

uint64_t sub_1B15F4D2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15F4D50(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t (*StateCommandImage<>.init(_:)@<X0>(uint64_t (*a1)(unsigned __int8 *)@<X0>, uint64_t (**a2)(unsigned __int8 *)@<X8>))(unsigned __int8 *)
{
  uint64_t v3;
  uint64_t v4;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  v4 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v4 + 16) = sub_1B15F4E0C;
  *(_QWORD *)(v4 + 24) = v3;
  *a2 = sub_1B15F4F20;
  a2[1] = (uint64_t (*)(unsigned __int8 *))v4;
  a2[2] = a1;
  return a1;
}

uint64_t sub_1B15F4DE8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B15F4E0C()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void sub_1B15F4E18(uint64_t a1)
{
  swift_release();

}

_QWORD *sub_1B15F4E40(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain();
  v5 = v4;
  return a1;
}

_QWORD *sub_1B15F4E78(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = (void *)a2[2];
  v6 = (void *)a1[2];
  a1[2] = v5;
  v7 = v5;

  return a1;
}

uint64_t sub_1B15F4ED0(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t type metadata accessor for StateCommandImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateCommandImage);
}

id CardViewAppearance.barTintColor.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void static CardViewAppearance.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

ValueMetadata *type metadata accessor for CardViewAppearance()
{
  return &type metadata for CardViewAppearance;
}

uint64_t dispatch thunk of CardViewAppearanceProviding.cardViewAppearance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1B15F4F6C()
{
  OUTLINED_FUNCTION_12_56();
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

void sub_1B15F4FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
  OUTLINED_FUNCTION_12_56();
  type metadata accessor for BlueprintPipelineUpdate();
}

void sub_1B15F4FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v1 + *(int *)(a1 + 56));
  *v5 = v4;
  v5[1] = v3;
  sub_1B144E9F4(v2, v1 + *(int *)(a1 + 60));
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B15F5014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32);
  v6(v3, v2, a1);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v1 + *(int *)(v4 + 68), v9, a1);
  v8 = (_QWORD *)(v1 + *(int *)(v4 + 52));
  *v8 = v10;
  v8[1] = v11;
  return result;
}

uint64_t sub_1B15F5078(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*a1, a1[1]);
}

void BlueprintPipelineUpdate.replacing(action:apply:validate:bookmark:before:after:)()
{
  type metadata accessor for Blueprint();
}

void sub_1B15F5118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v15 = sub_1B16BA328();
  *(_QWORD *)(v13 - 288) = v15;
  *(_QWORD *)(v13 - 304) = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_47_0();
  *(_QWORD *)(v13 - 296) = v17;
  OUTLINED_FUNCTION_45_0();
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  *(_QWORD *)(v13 - 328) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 272) = a1;
  *(_QWORD *)(v13 - 152) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v20, v22);
  OUTLINED_FUNCTION_47_0();
  *(_QWORD *)(v13 - 280) = v23;
  OUTLINED_FUNCTION_45_0();
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  *(_QWORD *)(v13 - 136) = (char *)&a9 - v27;
  OUTLINED_FUNCTION_9_1(v26, &qword_1ED17EF98, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintBookmark, v28);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v29, v30);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - v31;
  v32 = OUTLINED_FUNCTION_58();
  *(_QWORD *)(v13 - 192) = v32;
  v34 = MEMORY[0x1E0C80A78](v32, v33);
  *(_QWORD *)(v13 - 144) = (char *)&a9 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34, v36);
  OUTLINED_FUNCTION_47_0();
  *(_QWORD *)(v13 - 336) = v37;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v38, v39);
  OUTLINED_FUNCTION_190();
  *(_QWORD *)(v13 - 184) = v40;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v41, v42);
  OUTLINED_FUNCTION_190();
  *(_QWORD *)(v13 - 200) = v43;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v44, v45);
  OUTLINED_FUNCTION_190();
  *(_QWORD *)(v13 - 208) = v46;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v47, v48);
  OUTLINED_FUNCTION_190();
  *(_QWORD *)(v13 - 224) = v49;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v50, v51);
  *(_QWORD *)(v13 - 248) = v10;
  *(_QWORD *)(v13 - 240) = v9;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 256) = v11;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  *(_QWORD *)(v13 - 264) = v12;
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

void sub_1B15F5314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t);
  int EnumTagSinglePayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)();
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD *);
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v14 = sub_1B16BA328();
  v15 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&a9 - v18;
  v20 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (char *)&a9 - v23;
  OUTLINED_FUNCTION_66_1((uint64_t)v19, *(_QWORD *)(v12 - 128), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  v25 = *(void (**)(uint64_t))(v10 + 16);
  *(_QWORD *)(v12 - 128) = v25;
  v25(v11);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, a1);
  *(_QWORD *)(v12 - 344) = v24;
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_89_2((uint64_t)v24, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
    OUTLINED_FUNCTION_4_99(v11);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
  else
  {
    OUTLINED_FUNCTION_4_99(v11);
    OUTLINED_FUNCTION_89_2((uint64_t)v24, (uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
  }
  v27 = *(_QWORD *)(v12 - 352);
  v28 = *(_QWORD *)(v12 - 168);
  v29 = *(_QWORD *)(v12 - 360);
  v30 = *(_QWORD *)(v12 - 368);
  if (v30)
  {
    v31 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)(v31 + 16) = v30;
    *(_QWORD *)(v31 + 24) = v29;
    v32 = sub_1B149DB30;
  }
  else
  {
    v32 = 0;
    v31 = 0;
  }
  v33 = *(_QWORD *)(v12 - 224);
  OUTLINED_FUNCTION_2_117(v33);
  if (v30)
  {
    sub_1B13C4AEC(v30);
    OUTLINED_FUNCTION_4_99(v33);
  }
  else
  {
    v34 = (uint64_t *)(v33 + v9[14]);
    v35 = *v34;
    v36 = v34[1];
    sub_1B13C4AEC(0);
    swift_retain();
    OUTLINED_FUNCTION_4_99(v33);
    v31 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)(v31 + 16) = v35;
    *(_QWORD *)(v31 + 24) = v36;
    v28 = *(_QWORD *)(v12 - 168);
    v32 = sub_1B140AA30;
  }
  v37 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v37 + 16) = v32;
  *(_QWORD *)(v37 + 24) = v31;
  v38 = *(_QWORD *)(v12 - 208);
  if (v28)
  {
    v39 = OUTLINED_FUNCTION_4_0();
    v40 = *(_QWORD *)(v12 - 160);
    *(_QWORD *)(v39 + 16) = v28;
    *(_QWORD *)(v39 + 24) = v40;
    v41 = sub_1B15FA83C;
  }
  else
  {
    v41 = 0;
    v39 = 0;
  }
  OUTLINED_FUNCTION_2_117(v38);
  if (v28)
  {
    sub_1B13C4AEC(v28);
    OUTLINED_FUNCTION_4_99(v38);
  }
  else
  {
    v42 = (uint64_t *)(v38 + v9[13]);
    v43 = *v42;
    v44 = v42[1];
    sub_1B13C4AEC(0);
    swift_retain();
    OUTLINED_FUNCTION_4_99(v38);
    v39 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)(v39 + 16) = v43;
    *(_QWORD *)(v39 + 24) = v44;
    v41 = sub_1B15F57C4;
  }
  v45 = OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v45 + 16) = v41;
  *(_QWORD *)(v45 + 24) = v39;
  sub_1B15F5814(*(_QWORD *)(v12 - 176), v27);
  v46 = *(_QWORD *)(v12 - 200);
  OUTLINED_FUNCTION_2_117(v46);
  v47 = __swift_getEnumTagSinglePayload(v27, 1, *(_QWORD *)(v12 - 192));
  *(_QWORD *)(v12 - 168) = v37;
  if (v47 == 1)
  {
    sub_1B140B98C(v46 + v9[15], *(_QWORD *)(v12 - 144));
    OUTLINED_FUNCTION_4_99(v46);
    sub_1B15D5BE8(v27);
  }
  else
  {
    OUTLINED_FUNCTION_4_99(v46);
    sub_1B144E9F4(v27, *(_QWORD *)(v12 - 144));
  }
  v48 = *(_QWORD *)(v12 - 272);
  v49 = *(_QWORD *)(v12 - 328);
  v50 = *(_QWORD *)(v12 - 288);
  v51 = *(_QWORD *)(v12 - 304);
  v52 = *(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 16);
  v52(v49, *(_QWORD *)(v12 - 320), v50);
  v53 = *(_QWORD *)(v12 - 184);
  OUTLINED_FUNCTION_2_117(v53);
  if (__swift_getEnumTagSinglePayload(v49, 1, v48) == 1)
  {
    OUTLINED_FUNCTION_66_1(*(_QWORD *)(v12 - 136), v53 + v9[16], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 152) + 16));
    OUTLINED_FUNCTION_4_99(v53);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
  }
  else
  {
    OUTLINED_FUNCTION_4_99(v53);
    OUTLINED_FUNCTION_66_1(*(_QWORD *)(v12 - 136), v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 152) + 32));
  }
  v54 = *(_QWORD *)(v12 - 336);
  v55 = *(_QWORD *)(v12 - 296);
  v52(v55, *(_QWORD *)(v12 - 312), v50);
  OUTLINED_FUNCTION_2_117(v54);
  if (__swift_getEnumTagSinglePayload(v55, 1, v48) == 1)
  {
    OUTLINED_FUNCTION_66_1(*(_QWORD *)(v12 - 280), v54 + v9[17], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 152) + 16));
    OUTLINED_FUNCTION_4_99(v54);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v55, v50);
  }
  else
  {
    OUTLINED_FUNCTION_4_99(v54);
    OUTLINED_FUNCTION_66_1(*(_QWORD *)(v12 - 280), v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 152) + 32));
  }
  sub_1B15F4F6C();
}

void sub_1B15F5790()
{
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15F57A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15F57C4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

void sub_1B15F57EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD *);
  _QWORD v4[2];

  v4[1] = a2;
  v3 = *(void (**)(_QWORD *))(v2 + 16);
  v4[0] = a1;
  v3(v4);
  OUTLINED_FUNCTION_30_37();
}

uint64_t sub_1B15F5814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DE5B0(0, &qword_1ED17EF98, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintBookmark, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void BlueprintPipelineUpdate.action.getter()
{
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

void sub_1B15F5898(uint64_t a1)
{
  OUTLINED_FUNCTION_1_12(a1);
  OUTLINED_FUNCTION_48();
}

uint64_t BlueprintPipelineUpdate.validate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_100();
  return v0;
}

uint64_t BlueprintPipelineUpdate.apply.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_100();
  return v0;
}

uint64_t BlueprintPipelineUpdate.bookmark.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B140B98C(v2 + *(int *)(a1 + 60), a2);
}

void BlueprintPipelineUpdate.before.getter()
{
  OUTLINED_FUNCTION_4_97();
}

void sub_1B15F592C(uint64_t a1)
{
  OUTLINED_FUNCTION_1_12(a1);
  OUTLINED_FUNCTION_48();
}

void BlueprintPipelineUpdate.after.getter()
{
  OUTLINED_FUNCTION_4_97();
}

void sub_1B15F5960(uint64_t a1)
{
  OUTLINED_FUNCTION_1_12(a1);
  OUTLINED_FUNCTION_48();
}

void BlueprintPipelineUpdate.shortDescription.getter(uint64_t a1)
{
  uint64_t inited;

  OUTLINED_FUNCTION_9_1(a1, (unint64_t *)&qword_1ED1855F8, (uint64_t (*)(uint64_t))sub_1B1510AB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16CB100;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

void sub_1B15F5A00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;

  v3[9] = a1;
  v5 = OUTLINED_FUNCTION_27_38();
  OUTLINED_FUNCTION_89_2((uint64_t)v5, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16));
  v3[10] = 0x6B72616D6B6F6F62;
  v3[11] = 0xE800000000000000;
  v6 = v2 + *(int *)(v1 + 60);
  v3[15] = OUTLINED_FUNCTION_58();
  v7 = OUTLINED_FUNCTION_27_38();
  sub_1B140B98C(v6, (uint64_t)v7);
  v3[16] = 0x65726F666562;
  v3[17] = 0xE600000000000000;
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B15F5A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v7;
  void (*v8)(uint64_t *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v11;
  uint64_t v12;

  v4[21] = a1;
  v7 = OUTLINED_FUNCTION_27_38();
  v8 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16);
  v8(v7, v5, a1);
  v4[22] = 0x7265746661;
  v4[23] = 0xE500000000000000;
  v9 = v3 + *(int *)(v1 + 68);
  v4[27] = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v4 + 24);
  v8(boxed_opaque_existential_0, v9, a1);
  sub_1B16B9728();
  v11 = sub_1B16B83B4();
  *(_QWORD *)(v2 + 24) = v11;
  v12 = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DB3C80], v11);
  OUTLINED_FUNCTION_34_28(v12);
  return sub_1B16B83A8();
}

uint64_t sub_1B15F5B78(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintPipelineUpdate<A, B>, a1);
  return sub_1B16B839C();
}

void BlueprintPipelineUpdate.Action.shortDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B16B83B4();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v7, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  v9 = (char *)sub_1B15F5C78 + 4 * word_1B16D84B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1B15F5C78(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;

  v7 = v5[1];
  v1[22] = *v5;
  v1[23] = v7;
  v1[24] = v5[2];
  OUTLINED_FUNCTION_9_1(a1, (unint64_t *)&qword_1ED1855F8, (uint64_t (*)(uint64_t))sub_1B1510AB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = OUTLINED_FUNCTION_25();
  *(_OWORD *)(v8 + 16) = xmmword_1B16C51D0;
  OUTLINED_FUNCTION_28_31();
  v9[4] = v10;
  v9[5] = 0xEC00000065707954;
  v9[9] = &type metadata for BlueprintAnimation;
  v11 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v8 + 48) = v11;
  sub_1B1581554(v1 + 22, v11 + 16);
  OUTLINED_FUNCTION_18_45();
  OUTLINED_FUNCTION_11_58();
  sub_1B157FFD0((uint64_t)(v1 + 22));
  *(_QWORD *)(v2 + 24) = v3;
  v12 = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DB3C80], v3);
  v13 = OUTLINED_FUNCTION_34_28(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v13, v4, v3);
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15F6514()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

void sub_1B15F6540()
{
  JUMPOUT(0x1B5E1F0E8);
}

void sub_1B15F6550()
{
  JUMPOUT(0x1B5E1F0E8);
}

uint64_t sub_1B15F6564(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintPipelineUpdate<A, B>.Action, a1);
  return sub_1B16B839C();
}

uint64_t sub_1B15F6598(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
    type metadata accessor for BlueprintPipelineUpdate.Action();
  v5 = *a2;
  *a1 = *a2;
  v6 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v6;
}

void sub_1B15F70A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  if (a1 != a2)
    type metadata accessor for BlueprintPipelineUpdate.Action();
  v6 = a3[13];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  v10 = a3[14];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  v14 = a3[16];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 40);
  if (*(_QWORD *)(v15 + 40))
  {
    if (v17)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(v15 + 16), (uint64_t *)(v16 + 16));
      goto LABEL_10;
    }
    __swift_destroy_boxed_opaque_existential_1(v15 + 16);
  }
  else if (v17)
  {
    *(_QWORD *)(v15 + 40) = v17;
    (**(void (***)(uint64_t, uint64_t))(v17 - 8))(v15 + 16, v16 + 16);
    goto LABEL_10;
  }
  v18 = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)(v16 + 16);
  *(_OWORD *)(v15 + 32) = v18;
LABEL_10:
  type metadata accessor for Blueprint();
}

void sub_1B15F7A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 136) = v0;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v2;
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15F7A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v10 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v11 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v12 = sub_1B16B848C();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24);
  *(_QWORD *)(v8 - 184) = v13;
  *(_QWORD *)(v8 - 176) = v12;
  v13(v4, v2);
  v14 = v3[15];
  v15 = v1 + v14;
  *(_QWORD *)(v8 - 168) = v7 + v14;
  v17 = type metadata accessor for BlueprintItem(255, v5, v6, v16);
  v18 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v19 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v17);
  v20 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v17);
  *(_QWORD *)(v8 - 136) = a1;
  *(_QWORD *)(v8 - 128) = v17;
  *(_QWORD *)(v8 - 120) = v18;
  *(_QWORD *)(v8 - 112) = v10;
  *(_QWORD *)(v8 - 104) = v11;
  *(_QWORD *)(v8 - 96) = v19;
  *(_QWORD *)(v8 - 88) = v20;
  v21 = sub_1B16B875C();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24);
  v22(v15, *(_QWORD *)(v8 - 168), v21);
  *(_QWORD *)(v1 + v3[16]) = *(_QWORD *)(v7 + v3[16]);
  swift_retain();
  swift_release();
  v23 = *(int *)(*(_QWORD *)(v8 - 160) + 68);
  v24 = *(_QWORD *)(v8 - 144);
  v25 = v24 + v23;
  v26 = *(_QWORD *)(v8 - 152) + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 40);
  if (!*(_QWORD *)(v25 + 40))
  {
    if (v27)
    {
      *(_QWORD *)(v25 + 40) = v27;
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v25 + 16, v26 + 16);
      goto LABEL_8;
    }
LABEL_7:
    v28 = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v25 + 16) = *(_OWORD *)(v26 + 16);
    *(_OWORD *)(v25 + 32) = v28;
    goto LABEL_8;
  }
  if (!v27)
  {
    __swift_destroy_boxed_opaque_existential_1(v25 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(v25 + 16), (uint64_t *)(v26 + 16));
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v8 - 184))(v25 + v3[14], v26 + v3[14], *(_QWORD *)(v8 - 176));
  v22(v25 + v3[15], v26 + v3[15], v21);
  *(_QWORD *)(v25 + v3[16]) = *(_QWORD *)(v26 + v3[16]);
  swift_retain();
  swift_release();
  return v24;
}

void sub_1B15F7C50()
{
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

void sub_1B15F7C9C(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v2;
  int *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 168) = v1;
  *(_QWORD *)(v7 - 160) = v4;
  if (EnumCaseMultiPayload == 6)
  {
    v12 = v5[1];
    *v2 = *v5;
    v2[1] = v12;
    v2[2] = v5[2];
    *(_QWORD *)(v7 - 136) = v6;
    *(_QWORD *)(v7 - 128) = v4;
    *(_QWORD *)(v7 - 184) = a1;
    v13 = *(_QWORD *)(v7 - 152);
    *(_QWORD *)(v7 - 120) = v1;
    *(_QWORD *)(v7 - 112) = v13;
    type metadata accessor for Blueprint();
  }
  if (EnumCaseMultiPayload == 5)
  {
    v10 = v5[1];
    *v2 = *v5;
    v2[1] = v10;
    v2[2] = v5[2];
    *(_QWORD *)(v7 - 136) = v6;
    *(_QWORD *)(v7 - 128) = v4;
    v11 = *(_QWORD *)(v7 - 152);
    *(_QWORD *)(v7 - 120) = v1;
    *(_QWORD *)(v7 - 112) = v11;
    type metadata accessor for Blueprint();
  }
  memcpy(v2, v5, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
  v14 = v3[14];
  *(_OWORD *)((char *)v2 + v3[13]) = *(_OWORD *)((char *)v5 + v3[13]);
  *(_OWORD *)((char *)v2 + v14) = *(_OWORD *)((char *)v5 + v14);
  v15 = v3[15];
  v16 = (char *)v2 + v15;
  v17 = (char *)v5 + v15;
  v18 = type metadata accessor for BlueprintBookmark();
  v19 = swift_getEnumCaseMultiPayload();
  if (v19 == 1)
  {
    v22 = sub_1B16B7D60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v16, v17, v22);
    sub_1B140E774();
    *(_OWORD *)&v16[*(int *)(v23 + 48)] = *(_OWORD *)&v17[*(int *)(v23 + 48)];
  }
  else
  {
    if (v19)
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      goto LABEL_13;
    }
    v20 = sub_1B16B7D60();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v20))
    {
      sub_1B13DE5B0(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v20);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_13:
  v25 = *(_QWORD *)(v7 - 168);
  v24 = *(_QWORD *)(v7 - 160);
  v26 = v3[16];
  v27 = (_OWORD *)((char *)v2 + v26);
  v28 = *(_OWORD *)((char *)v5 + v26 + 16);
  *v27 = *(_OWORD *)((char *)v5 + v26);
  v27[1] = v28;
  v27[2] = *(_OWORD *)((char *)v5 + v26 + 32);
  *(_QWORD *)(v7 - 136) = v6;
  *(_QWORD *)(v7 - 128) = v24;
  v29 = *(_QWORD *)(v7 - 152);
  *(_QWORD *)(v7 - 120) = v25;
  *(_QWORD *)(v7 - 112) = v29;
  type metadata accessor for Blueprint();
}

void sub_1B15F823C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *(int *)(a1 + 56);
  *(_QWORD *)(v8 - 184) = v3;
  *(_QWORD *)(v8 - 176) = v6;
  *(_QWORD *)(v8 - 192) = v4 + v9;
  *(_QWORD *)(v8 - 136) = v7;
  *(_QWORD *)(v8 - 128) = v2;
  *(_QWORD *)(v8 - 120) = v5;
  *(_QWORD *)(v8 - 112) = v1;
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15F8268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, _QWORD, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;

  v9 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v10 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v11 = sub_1B16B848C();
  v12 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  *(_QWORD *)(v7 - 168) = v12;
  v12(v3, *(_QWORD *)(v7 - 192), v11);
  v13 = v6[15];
  *(_QWORD *)(v7 - 200) = v5 + v13;
  *(_QWORD *)(v7 - 192) = v4 + v13;
  v15 = type metadata accessor for BlueprintItem(255, v2, v1, v14);
  v16 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v17 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v15);
  v18 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v15);
  *(_QWORD *)(v7 - 136) = a1;
  *(_QWORD *)(v7 - 128) = v15;
  *(_QWORD *)(v7 - 120) = v16;
  *(_QWORD *)(v7 - 112) = v9;
  *(_QWORD *)(v7 - 104) = v10;
  *(_QWORD *)(v7 - 96) = v17;
  *(_QWORD *)(v7 - 88) = v18;
  v19 = sub_1B16B875C();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(*(char **)(v7 - 192), *(char **)(v7 - 200), v19);
  *(_QWORD *)(v4 + v6[16]) = *(_QWORD *)(v5 + v6[16]);
  v21 = *(int *)(*(_QWORD *)(v7 - 144) + 68);
  v22 = *(_QWORD *)(v7 - 184);
  v23 = (char *)(v22 + v21);
  v24 = (char *)(*(_QWORD *)(v7 - 176) + v21);
  v25 = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
  *((_OWORD *)v23 + 2) = v25;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 - 168))(v22 + v21 + v6[14], &v24[v6[14]], v11);
  v20(&v23[v6[15]], &v24[v6[15]], v19);
  *(_QWORD *)&v23[v6[16]] = *(_QWORD *)&v24[v6[16]];
  return v22;
}

void sub_1B15F83E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  if (a1 != a2)
    type metadata accessor for BlueprintPipelineUpdate.Action();
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_release();
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  swift_release();
  v6 = a3[16];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *(_QWORD *)v7 = *(_QWORD *)(a2 + v6);
  *(_QWORD *)(v7 + 8) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 40))
    __swift_destroy_boxed_opaque_existential_1(v7 + 16);
  v10 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = v10;
  type metadata accessor for Blueprint();
}

void sub_1B15F8A30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 160) = v1 + *(int *)(a1 + 56);
  *(_QWORD *)(v6 - 136) = v2;
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = v3;
  *(_QWORD *)(v6 - 112) = v5;
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15F8A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v10 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v11 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v12 = sub_1B16B848C();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40);
  v14 = *(_QWORD *)(v8 - 160);
  *(_QWORD *)(v8 - 168) = v13;
  *(_QWORD *)(v8 - 160) = v12;
  v13(v14, v1);
  v15 = v3[15];
  *(_QWORD *)(v8 - 184) = v7 + v15;
  *(_QWORD *)(v8 - 176) = v2 + v15;
  v17 = type metadata accessor for BlueprintItem(255, v4, v5, v16);
  v18 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v19 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v17);
  v20 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v17);
  *(_QWORD *)(v8 - 136) = a1;
  *(_QWORD *)(v8 - 128) = v17;
  *(_QWORD *)(v8 - 120) = v18;
  *(_QWORD *)(v8 - 112) = v10;
  *(_QWORD *)(v8 - 104) = v11;
  *(_QWORD *)(v8 - 96) = v19;
  *(_QWORD *)(v8 - 88) = v20;
  v21 = sub_1B16B875C();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40);
  v22(*(_QWORD *)(v8 - 176), *(_QWORD *)(v8 - 184), v21);
  *(_QWORD *)(v2 + v3[16]) = *(_QWORD *)(v7 + v3[16]);
  swift_release();
  v23 = *(int *)(v6 + 68);
  v24 = *(_QWORD *)(v8 - 144);
  v25 = v24 + v23;
  v26 = *(_QWORD *)(v8 - 152) + v23;
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v25 + 40))
    __swift_destroy_boxed_opaque_existential_1(v25 + 16);
  v28 = *(_OWORD *)(v26 + 32);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)(v26 + 16);
  *(_OWORD *)(v25 + 32) = v28;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v8 - 168))(v25 + v3[14], v26 + v3[14], *(_QWORD *)(v8 - 160));
  v22(v25 + v3[15], v26 + v3[15], v21);
  *(_QWORD *)(v25 + v3[16]) = *(_QWORD *)(v26 + v3[16]);
  swift_release();
  return v24;
}

void sub_1B15F8BF4()
{
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

uint64_t sub_1B15F8C38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  if (*(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) == (_DWORD)v1)
  {
    v4 = a1;
    v5 = v2;
    return __swift_getEnumTagSinglePayload(v5, v1, v4);
  }
  if ((_DWORD)v1 != 0x7FFFFFFF)
  {
    v8 = OUTLINED_FUNCTION_58();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) != (_DWORD)v1)
      OUTLINED_FUNCTION_4_97();
    v4 = v8;
    v5 = v2 + *(int *)(v3 + 60);
    return __swift_getEnumTagSinglePayload(v5, v1, v4);
  }
  v6 = *(_QWORD *)(v2 + *(int *)(v3 + 52));
  if (v6 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  return (v6 + 1);
}

void sub_1B15F8CD8()
{
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

uint64_t sub_1B15F8D20(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == v4)
  {
    v5 = result;
    v6 = v2;
  }
  else
  {
    if (v4 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v2 + *(int *)(v3 + 52)) = (v1 - 1);
      return result;
    }
    v7 = OUTLINED_FUNCTION_58();
    if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) != v4)
      OUTLINED_FUNCTION_4_97();
    v5 = v7;
    v6 = v2 + *(int *)(v3 + 60);
  }
  return __swift_storeEnumTagSinglePayload(v6, v1, v1, v5);
}

char *sub_1B15F8DB8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = a1 + 16;
        v8 = a2 + 16;
        v9 = *((_QWORD *)a2 + 5);
        if (v9)
        {
          *((_QWORD *)a1 + 5) = v9;
          (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
        }
        else
        {
          v21 = *((_OWORD *)a2 + 2);
          *v7 = *v8;
          *((_OWORD *)a1 + 2) = v21;
        }
        goto LABEL_21;
      case 1u:
      case 3u:
        v11 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v11;
        (**(void (***)(void *, const void *))(v11 - 8))(a1, a2);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        swift_retain();
        goto LABEL_21;
      case 2u:
        v12 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v12;
        (**(void (***)(void *, const void *))(v12 - 8))(a1, a2);
        v13 = *((_QWORD *)a2 + 7);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *((_QWORD *)a1 + 7) = v13;
        v14 = a2 + 64;
        v15 = *((_QWORD *)a2 + 11);
        swift_retain();
        if (v15)
        {
          *((_QWORD *)a1 + 11) = v15;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v15 - 8))((uint64_t)(a1 + 64), v14, v15);
        }
        else
        {
          v22 = v14[1];
          *((_OWORD *)a1 + 4) = *v14;
          *((_OWORD *)a1 + 5) = v22;
        }
        goto LABEL_21;
      case 4u:
        v16 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v16;
        (**(void (***)(void *, const void *))(v16 - 8))(a1, a2);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v17 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v17;
        v18 = *((_QWORD *)a2 + 5);
        sub_1B16B9740();
        if (v18)
        {
          *((_QWORD *)a1 + 5) = v18;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v18);
        }
        else
        {
          v23 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v23;
        }
        type metadata accessor for Blueprint();
      case 6u:
        v19 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v19;
        v20 = *((_QWORD *)a2 + 5);
        sub_1B16B9740();
        if (v20)
        {
          *((_QWORD *)a1 + 5) = v20;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v20);
        }
        else
        {
          v24 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v24;
        }
        type metadata accessor for Blueprint();
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B15F9450(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      if (!*(_QWORD *)(a1 + 40))
        return result;
      v3 = a1 + 16;
      break;
    case 1:
    case 3:
      __swift_destroy_boxed_opaque_existential_1(a1);
      return swift_release();
    case 2:
      __swift_destroy_boxed_opaque_existential_1(a1);
      result = swift_release();
      if (!*(_QWORD *)(a1 + 88))
        return result;
      v3 = a1 + 64;
      break;
    case 4:
      v3 = a1;
      return __swift_destroy_boxed_opaque_existential_1(v3);
    case 5:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40))
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      type metadata accessor for Blueprint();
    case 6:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40))
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      type metadata accessor for Blueprint();
    default:
      return result;
  }
  return __swift_destroy_boxed_opaque_existential_1(v3);
}

char *sub_1B15F98A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v6 = a1 + 16;
        v7 = a2 + 16;
        v8 = *((_QWORD *)a2 + 5);
        if (v8)
        {
          *((_QWORD *)a1 + 5) = v8;
          (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
        }
        else
        {
          v16 = *((_OWORD *)a2 + 2);
          *v6 = *v7;
          *((_OWORD *)a1 + 2) = v16;
        }
        goto LABEL_20;
      case 1u:
      case 3u:
        v9 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v9;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, const void *))(v9 - 8))(a1, a2);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        swift_retain();
        goto LABEL_20;
      case 2u:
        v10 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v10;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, const void *))(v10 - 8))(a1, a2);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        v11 = a2 + 64;
        v12 = *((_QWORD *)a2 + 11);
        swift_retain();
        if (v12)
        {
          *((_QWORD *)a1 + 11) = v12;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v12 - 8))((uint64_t)(a1 + 64), v11, v12);
        }
        else
        {
          v17 = v11[1];
          *((_OWORD *)a1 + 4) = *v11;
          *((_OWORD *)a1 + 5) = v17;
        }
        goto LABEL_20;
      case 4u:
        v13 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v13;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, const void *))(v13 - 8))(a1, a2);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 5);
        sub_1B16B9740();
        if (v14)
        {
          *((_QWORD *)a1 + 5) = v14;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v14);
        }
        else
        {
          v18 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v18;
        }
        type metadata accessor for Blueprint();
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 5);
        sub_1B16B9740();
        if (v15)
        {
          *((_QWORD *)a1 + 5) = v15;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v15);
        }
        else
        {
          v19 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v19;
        }
        type metadata accessor for Blueprint();
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1B15F9F50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    type metadata accessor for Blueprint();
  }
  if (EnumCaseMultiPayload == 5)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    type metadata accessor for Blueprint();
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1B15FA3B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v5 + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 6)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    }
    if (EnumCaseMultiPayload == 5)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1B15FA83C(_QWORD *a1)
{
  return sub_1B15F57C4(a1);
}

uint64_t initializeWithCopy for BlueprintLayoutCollectionScreenCalculator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v4 = *(void **)(a2 + 128);
  v5 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v4;
  *(_QWORD *)(a1 + 136) = v5;
  v6 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v6;
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  v9 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v10 = *(_QWORD *)(a2 + 240);
  v11 = *(_BYTE *)(a2 + 248);
  v12 = v4;
  v13 = v5;
  v14 = v6;
  sub_1B14267E4(v9, v10, v11);
  *(_QWORD *)(a1 + 232) = v9;
  *(_QWORD *)(a1 + 240) = v10;
  *(_BYTE *)(a1 + 248) = v11;
  v15 = *(_QWORD *)(a2 + 256);
  v16 = *(_QWORD *)(a2 + 264);
  v17 = *(_BYTE *)(a2 + 272);
  sub_1B14267E4(v15, v16, v17);
  *(_QWORD *)(a1 + 256) = v15;
  *(_QWORD *)(a1 + 264) = v16;
  *(_BYTE *)(a1 + 272) = v17;
  v18 = *(_QWORD *)(a2 + 280);
  v19 = *(_QWORD *)(a2 + 288);
  v20 = *(_BYTE *)(a2 + 296);
  sub_1B14267E4(v18, v19, v20);
  *(_QWORD *)(a1 + 280) = v18;
  *(_QWORD *)(a1 + 288) = v19;
  *(_BYTE *)(a1 + 296) = v20;
  v21 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v21;
  v22 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v22;
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  v23 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v23;
  memcpy((void *)(a1 + 392), (const void *)(a2 + 392), 0x86uLL);
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutCollectionScreenCalculator(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v4 = (_BYTE *)(a2 + 353);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v5 = *(void **)(a2 + 128);
  v6 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v5;
  v7 = v5;

  v8 = *(void **)(a2 + 136);
  v9 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v11 = *(void **)(a2 + 152);
  v12 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v14 = *(_QWORD *)(a2 + 232);
  v15 = *(_QWORD *)(a2 + 240);
  v16 = *(_BYTE *)(a2 + 248);
  sub_1B14267E4(v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 232);
  v18 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 232) = v14;
  *(_QWORD *)(a1 + 240) = v15;
  v19 = *(_BYTE *)(a1 + 248);
  *(_BYTE *)(a1 + 248) = v16;
  sub_1B14262CC(v17, v18, v19);
  v20 = *(_QWORD *)(a2 + 256);
  v21 = *(_QWORD *)(a2 + 264);
  v22 = *(_BYTE *)(a2 + 272);
  sub_1B14267E4(v20, v21, v22);
  v23 = *(_QWORD *)(a1 + 256);
  v24 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v20;
  *(_QWORD *)(a1 + 264) = v21;
  v25 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v22;
  sub_1B14262CC(v23, v24, v25);
  v26 = *(_QWORD *)(a2 + 280);
  v27 = *(_QWORD *)(a2 + 288);
  v28 = *(_BYTE *)(a2 + 296);
  sub_1B14267E4(v26, v27, v28);
  v29 = *(_QWORD *)(a1 + 280);
  v30 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 280) = v26;
  *(_QWORD *)(a1 + 288) = v27;
  v31 = *(_BYTE *)(a1 + 296);
  *(_BYTE *)(a1 + 296) = v28;
  sub_1B14262CC(v29, v30, v31);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v32 = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v32;
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(a2 + 353);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = v4[167];
  *(_BYTE *)(a1 + 521) = v4[168];
  *(_BYTE *)(a1 + 522) = v4[169];
  *(_BYTE *)(a1 + 523) = v4[170];
  *(_BYTE *)(a1 + 524) = v4[171];
  *(_BYTE *)(a1 + 525) = v4[172];
  return a1;
}

void *__swift_memcpy526_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x20EuLL);
}

uint64_t assignWithTake for BlueprintLayoutCollectionScreenCalculator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v4 = a2 + 280;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v5 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  v6 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  v7 = *(_QWORD *)(a2 + 152);
  v8 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v7;

  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  v11 = *(_QWORD *)(a2 + 240);
  v12 = *(_BYTE *)(a2 + 248);
  v13 = *(_QWORD *)(a1 + 232);
  v14 = *(_QWORD *)(a1 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = v11;
  v15 = *(_BYTE *)(a1 + 248);
  *(_BYTE *)(a1 + 248) = v12;
  sub_1B14262CC(v13, v14, v15);
  v16 = *(_BYTE *)(a2 + 272);
  v17 = *(_QWORD *)(a1 + 256);
  v18 = *(_QWORD *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v19 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v16;
  sub_1B14262CC(v17, v18, v19);
  v20 = *(_BYTE *)(a2 + 296);
  v21 = *(_QWORD *)(a1 + 280);
  v22 = *(_QWORD *)(a1 + 288);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)v4;
  v23 = *(_BYTE *)(a1 + 296);
  *(_BYTE *)(a1 + 296) = v20;
  sub_1B14262CC(v21, v22, v23);
  v24 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v24;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(v4 + 73);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v25 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v25;
  v26 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v26;
  v27 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v27;
  v28 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v28;
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(v4 + 240);
  *(_BYTE *)(a1 + 521) = *(_BYTE *)(v4 + 241);
  *(_BYTE *)(a1 + 522) = *(_BYTE *)(v4 + 242);
  *(_BYTE *)(a1 + 523) = *(_BYTE *)(v4 + 243);
  *(_BYTE *)(a1 + 524) = *(_BYTE *)(v4 + 244);
  *(_BYTE *)(a1 + 525) = *(_BYTE *)(v4 + 245);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutCollectionScreenCalculator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 526))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 128);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutCollectionScreenCalculator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 524) = 0;
    *(_DWORD *)(result + 520) = 0;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 526) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 128) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 526) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionScreenCalculator()
{
  return &type metadata for BlueprintLayoutCollectionScreenCalculator;
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutCollectionScreenCalculator.ScreenError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B15FAF9C + 4 * byte_1B16D86D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B15FAFBC + 4 * byte_1B16D86D5[v4]))();
}

_BYTE *sub_1B15FAF9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B15FAFBC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B15FAFC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B15FAFCC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B15FAFD4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B15FAFDC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionScreenCalculator.ScreenError()
{
  return &type metadata for BlueprintLayoutCollectionScreenCalculator.ScreenError;
}

unint64_t sub_1B15FAFFC()
{
  unint64_t result;

  result = qword_1EEF352C8;
  if (!qword_1EEF352C8)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D8758, &type metadata for BlueprintLayoutCollectionScreenCalculator.ScreenError);
    atomic_store(result, (unint64_t *)&qword_1EEF352C8);
  }
  return result;
}

void DebugSubViewController.__allocating_init(dataSource:title:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  DebugSubViewController.init(dataSource:title:)(a1, a2, a3);
  OUTLINED_FUNCTION_31();
}

id DebugSubViewController.init(dataSource:title:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  v6 = (objc_class *)OUTLINED_FUNCTION_4();
  v7 = OBJC_IVAR____TtC5TeaUI22DebugSubViewController_tableView;
  v8 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v10 = objc_allocWithZone((Class)type metadata accessor for DebugTableViewSource());
  v11 = swift_retain();
  *(_QWORD *)&v9[OBJC_IVAR____TtC5TeaUI22DebugSubViewController_tableViewSource] = sub_1B1699C30(v11);

  v14.receiver = v9;
  v14.super_class = v6;
  v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, 0, 0);
  sub_1B152A7FC(a2, a3, v12);

  swift_release();
  return v12;
}

id DebugSubViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DebugSubViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC5TeaUI22DebugSubViewController_tableView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall DebugSubViewController.viewDidLoad()()
{
  void *v0;
  objc_class *v1;
  id v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  _QWORD v11[4];
  objc_super v12;

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  v12.receiver = v0;
  v12.super_class = v1;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_navigationItem);
  v11[3] = v1;
  v11[0] = v0;
  objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v3 = v0;
  sub_1B152A65C(1701736260, 0xE400000000000000, 2, v11, (uint64_t)sel_doDone);
  v5 = v4;
  objc_msgSend(v2, sel_setRightBarButtonItem_, v4, v11[0]);

  v6 = OUTLINED_FUNCTION_2_118();
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    v9 = OUTLINED_FUNCTION_2_118();
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_addSubview_, *(_QWORD *)&v3[OBJC_IVAR____TtC5TeaUI22DebugSubViewController_tableView]);

      sub_1B1699B64();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall DebugSubViewController.viewWillLayoutSubviews()()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v12, sel_viewWillLayoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI22DebugSubViewController_tableView];
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  }
  else
  {
    __break(1u);
  }
}

id sub_1B15FB50C()
{
  void *v0;

  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void DebugSubViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_31();
}

void DebugSubViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DebugSubViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DebugSubViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for DebugSubViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebugSubViewController.__allocating_init(dataSource:title:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t TipSource.description.getter()
{
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return 0x6372756F53706954;
}

TeaUI::TipSource __swiftcall TipSource.init(identifier:)(TeaUI::TipSource identifier)
{
  TeaUI::TipSource *v1;

  *v1 = identifier;
  return identifier;
}

uint64_t TipSource.hash(into:)()
{
  OUTLINED_FUNCTION_36();
  sub_1B16B98FC();
  return swift_bridgeObjectRelease();
}

uint64_t static TipSource.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  if (v4 == *a2 && v5 == a2[1])
    return 1;
  else
    return sub_1B16BA910(v4, v5, *a2);
}

void TipSource.hashValue.getter()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_165();
  swift_bridgeObjectRelease();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

void sub_1B15FB7EC()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_165();
  swift_bridgeObjectRelease();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

unint64_t sub_1B15FB82C()
{
  unint64_t result;

  result = qword_1ED187608;
  if (!qword_1ED187608)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for TipSource, &type metadata for TipSource);
    atomic_store(result, (unint64_t *)&qword_1ED187608);
  }
  return result;
}

ValueMetadata *type metadata accessor for TipSource()
{
  return &type metadata for TipSource;
}

Swift::Void __swiftcall UILabel.seTextIfNeeded(_:)(Swift::String_optional a1)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  void *v5;
  char v7;
  uint64_t v8;
  id v9;

  object = a1.value._object;
  countAndFlagsBits = a1.value._countAndFlagsBits;
  v4 = sub_1B15267F8(v1);
  if (!v5)
  {
    if (!object)
      return;
    goto LABEL_10;
  }
  if (!object)
  {
    swift_bridgeObjectRelease();
    v8 = 0;
    goto LABEL_12;
  }
  if (v4 == countAndFlagsBits && v5 == object)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = sub_1B16BA910(v4, v5, countAndFlagsBits);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_10:
    v8 = sub_1B16B983C();
LABEL_12:
    v9 = (id)v8;
    objc_msgSend(v1, sel_setText_);

  }
}

uint64_t dispatch thunk of MenuGroupable.groupItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id RendererEnvironment.__allocating_init(scrollView:testing:)(void *a1, char a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return RendererEnvironment.init(scrollView:testing:)(a1, a2);
}

TeaUI::RendererState __swiftcall RendererState.init(rawValue:)(TeaUI::RendererState rawValue)
{
  TeaUI::RendererState *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static RendererState.notScrolling.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

void static RendererState.onScreen.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

void static RendererState.notTesting.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

void static RendererState.notTransitioning.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

uint64_t RendererState.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaUI::RendererState sub_1B15FB9E4(Swift::Int *a1)
{
  return RendererState.init(rawValue:)(*a1);
}

TeaUI::RendererState sub_1B15FB9EC@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaUI::RendererState result;

  result.rawValue = RendererState.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1B15FBA14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RendererState.rawValue.getter();
  *a1 = result;
  return result;
}

double RendererOptions.visibleBounds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double RendererOptions.contentSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

uint64_t RendererOptions.isScrolling.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t RendererOptions.isOnScreen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 129);
}

uint64_t RendererOptions.isTransitioning.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 130);
}

uint64_t RendererOptions.isLiveResizing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 131);
}

uint64_t RendererOptions.isTesting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 132);
}

double sub_1B15FBA74()
{
  double result;
  __int128 v1;
  __int128 v2;

  result = 0.0;
  xmmword_1ED1858A8 = 0u;
  unk_1ED1858B8 = 0u;
  xmmword_1ED185888 = 0u;
  unk_1ED185898 = 0u;
  v1 = *MEMORY[0x1E0DC49E8];
  v2 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  xmmword_1ED1858C8 = 0u;
  unk_1ED1858D8 = v1;
  xmmword_1ED1858E8 = v2;
  qword_1ED1858F8 = 0;
  unk_1ED185900 = 0;
  unk_1ED185905 = 0;
  return result;
}

void *static RendererOptions.zero.getter@<X0>(void *a1@<X8>)
{
  if (qword_1ED185CD0 != -1)
    swift_once();
  return memcpy(a1, &xmmword_1ED185888, 0x85uLL);
}

Swift::Bool __swiftcall RendererOptions.match(state:)(TeaUI::RendererState state)
{
  _BYTE *v1;
  uint64_t v2;
  unsigned int v4;
  char v5;

  v2 = *(_QWORD *)state.rawValue;
  if ((*(_QWORD *)state.rawValue & 1) != 0 && (v1[128] & 1) != 0
    || (v2 & 2) != 0 && !v1[129]
    || (v1[132] & (v2 >> 2) & 1) != 0)
  {
    return 0;
  }
  v4 = v1[131] & (v2 >> 3);
  v5 = v1[130] ^ 1;
  if ((*(_QWORD *)state.rawValue & 0x10) == 0)
    v5 = 1;
  if ((v4 & 1) != 0)
    return 0;
  else
    return v5;
}

uint64_t RendererEnvironment.isTesting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI19RendererEnvironment_isTesting);
}

uint64_t RendererEnvironment.isLiveResizing.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI19RendererEnvironment_isLiveResizing);
  OUTLINED_FUNCTION_13();
  return *v1;
}

uint64_t RendererEnvironment.transition.getter()
{
  OUTLINED_FUNCTION_13();
  return swift_retain();
}

id RendererEnvironment.init(scrollView:testing:)(void *a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  id v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  objc_super v23;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  v7 = (uint64_t *)&v3[OBJC_IVAR____TtC5TeaUI19RendererEnvironment_transition];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5TeaUI19RendererEnvironment_transition] = 0;
  swift_unknownObjectWeakAssign();
  v3[OBJC_IVAR____TtC5TeaUI19RendererEnvironment_isTesting] = a2;
  v3[OBJC_IVAR____TtC5TeaUI19RendererEnvironment_isLiveResizing] = 0;
  if (a1)
  {
    objc_opt_self();
    v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v3;
      v19 = objc_msgSend(v9, sel_collectionViewLayout);
      sub_1B15FBD8C();
      sub_1B15FBDC8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1B13C06D0(&v16, (uint64_t)v20);
        v11 = v21;
        v12 = v22;
        __swift_project_boxed_opaque_existential_1(v20, v21);
        v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
        OUTLINED_FUNCTION_13();
        *v7 = v13;

        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      }
      else
      {
        v18 = 0;
        v16 = 0u;
        v17 = 0u;

        sub_1B15FBE1C((uint64_t)&v16);
      }
    }
  }
  v23.receiver = v3;
  v23.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v23, sel_init, v16, v17, v18);

  return v14;
}

unint64_t sub_1B15FBD8C()
{
  unint64_t result;

  result = qword_1ED1855C0;
  if (!qword_1ED1855C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1855C0);
  }
  return result;
}

unint64_t sub_1B15FBDC8()
{
  unint64_t result;

  result = qword_1ED185FF0;
  if (!qword_1ED185FF0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED185FF0);
  }
  return result;
}

uint64_t sub_1B15FBE1C(uint64_t a1)
{
  uint64_t v2;

  sub_1B15FBE58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B15FBE58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED185FF8)
  {
    sub_1B15FBDC8();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED185FF8);
  }
}

void sub_1B15FBEAC()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI19RendererEnvironment_isLiveResizing);
  OUTLINED_FUNCTION_13();
  *v1 = 1;
  OUTLINED_FUNCTION_48();
}

void sub_1B15FBEF4()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI19RendererEnvironment_isLiveResizing);
  OUTLINED_FUNCTION_13();
  *v1 = 0;
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B15FBF38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_1B16B7910();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B16B78E0();
  a4(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id RendererEnvironment.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RendererEnvironment.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RendererEnvironment.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B15FC05C()
{
  unint64_t result;

  result = qword_1EEF35328;
  if (!qword_1EEF35328)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for RendererState, &type metadata for RendererState);
    atomic_store(result, (unint64_t *)&qword_1EEF35328);
  }
  return result;
}

unint64_t sub_1B15FC09C()
{
  unint64_t result;

  result = qword_1EEF35330;
  if (!qword_1EEF35330)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for RendererState, &type metadata for RendererState);
    atomic_store(result, (unint64_t *)&qword_1EEF35330);
  }
  return result;
}

unint64_t sub_1B15FC0DC()
{
  unint64_t result;

  result = qword_1ED17CF38;
  if (!qword_1ED17CF38)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for RendererState, &type metadata for RendererState);
    atomic_store(result, (unint64_t *)&qword_1ED17CF38);
  }
  return result;
}

unint64_t sub_1B15FC11C()
{
  unint64_t result;

  result = qword_1ED17CF40;
  if (!qword_1ED17CF40)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for RendererState, &type metadata for RendererState);
    atomic_store(result, (unint64_t *)&qword_1ED17CF40);
  }
  return result;
}

uint64_t sub_1B15FC190()
{
  return RendererEnvironment.transition.getter();
}

void *__swift_memcpy133_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x85uLL);
}

uint64_t dispatch thunk of RendererEnvironmentType.transition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for RendererEnvironment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RendererEnvironment.__allocating_init(scrollView:testing:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

id sub_1B15FC1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  if (a3)
  {
    v8 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1B15FC2BC;
  v12[3] = &block_descriptor_66;
  v9 = _Block_copy(v12);
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_contextualActionWithStyle_title_handler_, a1, v8, v9);

  _Block_release(v9);
  swift_release();
  return v10;
}

void sub_1B15FC2BC(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, sub_1B15FD600, v8);
  swift_release();
  swift_release();

}

id sub_1B15FC36C()
{
  void *v0;
  id v1;

  sub_1B13A1BE4(0, (unint64_t *)&unk_1EEF325F0);
  v0 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_configurationWithActions_, v0);

  return v1;
}

uint64_t sub_1B15FC3EC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)@<X0>(uint64_t *@<X8>);

  v3 = (uint64_t *)(*(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 120));
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1B15E2C5C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v6;
  return sub_1B13C4AEC(v4);
}

uint64_t sub_1B15FC480(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1B15FD204;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*(_QWORD *)a2 + *(_QWORD *)(**(_QWORD **)a2 + 120));
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1B13C4AEC(v3);
  return sub_1B13B9100(v8);
}

uint64_t BlueprintCompositionalListLayoutSwipeActionsProvider.trailingConfigurationProvider.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_143();
  OUTLINED_FUNCTION_13();
  v0 = OUTLINED_FUNCTION_2_2();
  sub_1B13C4AEC(v0);
  return OUTLINED_FUNCTION_2_2();
}

uint64_t BlueprintCompositionalListLayoutSwipeActionsProvider.trailingConfigurationProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  OUTLINED_FUNCTION_13();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1B13B9100(v6);
}

uint64_t (*BlueprintCompositionalListLayoutSwipeActionsProvider.trailingConfigurationProvider.modify())()
{
  OUTLINED_FUNCTION_1_143();
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

uint64_t sub_1B15FC60C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 128);
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B15FC660()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t BlueprintCompositionalListLayoutSwipeActionsProvider.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  OUTLINED_FUNCTION_13();
  return MEMORY[0x1B5E1F2F8](v1);
}

void (*BlueprintCompositionalListLayoutSwipeActionsProvider.delegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_13();
  v3[3] = MEMORY[0x1B5E1F2F8](v5);
  return sub_1B1495998;
}

uint64_t BlueprintCompositionalListLayoutSwipeActionsProvider.__allocating_init(blueprintProvider:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  BlueprintCompositionalListLayoutSwipeActionsProvider.init(blueprintProvider:)(a1, v3);
  return v2;
}

void sub_1B15FC7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[18];

  v13[5] = a1;
  v13[0] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[3] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v4);
  v13[4] = (char *)v13 - v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = type metadata accessor for BlueprintItem(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v13[1] = v8;
  v13[2] = v9;
  MEMORY[0x1E0C80A78](v8, v10);
  v11 = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedConformanceWitness();
  v13[13] = v11;
  v13[14] = AssociatedTypeWitness;
  v13[15] = v12;
  v13[16] = AssociatedConformanceWitness;
  type metadata accessor for Blueprint();
}

void sub_1B15FC8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x1E0C80A78](a1, a2);
  BlueprintProviderType.blueprint.getter(v3, v2);
  Blueprint.contains(indexPath:)();
}

id sub_1B15FC938(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((a1 & 1) != 0)
  {
    BlueprintProviderType.blueprint.getter(v5, v4);
    Blueprint.subscript.getter();
  }
  sub_1B13A1BE4(0, &qword_1EEF325E8);
  return sub_1B15FC36C();
}

uint64_t sub_1B15FCB58()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  OUTLINED_FUNCTION_33();
  return swift_deallocObject();
}

void sub_1B15FCBC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_1B15FC7A4(a1, v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1B15FCBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char **v31;
  uint64_t result;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;

  v42 = a3;
  v43 = a4;
  v6 = (_QWORD *)*a3;
  v7 = type metadata accessor for BlueprintViewAction(0);
  v41 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v7, v9);
  v37 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v6[12];
  v39 = v6[10];
  v40 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for BlueprintItem(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)v33 - v18;
  v38 = sub_1B13A1BE4(0, (unint64_t *)&unk_1EEF325F0);
  v36 = BlueprintViewAction.style.getter();
  v33[1] = a1;
  BlueprintViewAction.title.getter();
  v34 = v21;
  v35 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, a2, v14);
  v22 = v37;
  sub_1B15057D8(a1, v37);
  v23 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v24 = (v16 + *(unsigned __int8 *)(v41 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = v39;
  v26 = v40;
  *((_QWORD *)v25 + 3) = v6[11];
  *((_QWORD *)v25 + 4) = v26;
  *((_QWORD *)v25 + 5) = v6[13];
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v25[v23], v19, v14);
  sub_1B15058DC(v22, (uint64_t)&v25[v24]);
  *(_QWORD *)&v25[(v8 + v24 + 7) & 0xFFFFFFFFFFFFFFF8] = v42;
  swift_retain();
  v27 = sub_1B15FC1D4(v36, v35, v34, (uint64_t)sub_1B15FD4DC, (uint64_t)v25);
  BlueprintViewAction.attributes.getter();
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v30 = (_BYTE *)(v28 + 40);
    while (*v30)
    {
      if (*v30 == 1)
      {
        v31 = &selRef_setBackgroundColor_;
LABEL_7:
        objc_msgSend(v27, *v31, *((_QWORD *)v30 - 1));
      }
      v30 += 16;
      if (!--v29)
        goto LABEL_9;
    }
    v31 = &selRef_setImage_;
    goto LABEL_7;
  }
LABEL_9:
  result = swift_bridgeObjectRelease();
  *v43 = v27;
  return result;
}

void sub_1B15FCE8C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

uint64_t sub_1B15FCF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD, uint64_t);
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v31;
  _BYTE v32[96];

  *(_QWORD *)(v7 - 176) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v7 - 168) = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = &v32[-v8];
  v10 = type metadata accessor for BlueprintViewAction.Action(0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for BlueprintItem(0, v6, v2, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = &v32[-v18];
  type metadata accessor for BlueprintViewActionRequest(0, v6, v2, v20);
  v21 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 16);
  v22 = *(void **)(v7 - 152);
  v23 = v15;
  v24 = *(_QWORD *)(v7 - 136);
  v21(v19, *(_QWORD *)(v7 - 144), v23);
  BlueprintViewAction.action.getter((uint64_t)v13);
  *(_BYTE *)(v7 - 112) = 2;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v7 - 120);
  *(_QWORD *)(v25 + 24) = v24;
  BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)((uint64_t)v19, (uint64_t)v13, (char *)(v7 - 112), (uint64_t)v22, (uint64_t)sub_1B140E614, v25);
  v27 = v26;
  v28 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 128);
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v28))
  {
    swift_retain();
    v29 = v22;
    BlueprintProviderType.blueprint.getter(v4, v3);
    (*(void (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v7 - 160) + 104) + 72))(v9, v27, *(_QWORD *)(*(_QWORD *)(v7 - 160) + 88));
    swift_unknownObjectRelease();
    swift_release();
    return (*(uint64_t (**)(_BYTE *, _QWORD))(*(_QWORD *)(v7 - 176) + 8))(v9, *(_QWORD *)(v7 - 168));
  }
  else
  {
    swift_retain();
    v31 = v22;
    return swift_release();
  }
}

uint64_t BlueprintCompositionalListLayoutSwipeActionsProvider.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  sub_1B13B9100(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t BlueprintCompositionalListLayoutSwipeActionsProvider.__deallocating_deinit()
{
  BlueprintCompositionalListLayoutSwipeActionsProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for BlueprintCompositionalListLayoutSwipeActionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCompositionalListLayoutSwipeActionsProvider.__allocating_init(blueprintProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1B15FD204()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

unint64_t sub_1B15FD234()
{
  unint64_t result;

  result = qword_1ED17AAE0;
  if (!qword_1ED17AAE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED17AAE0);
  }
  return result;
}

uint64_t sub_1B15FD288(uint64_t a1)
{
  uint64_t v2;

  sub_1B15FD2C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B15FD2C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF32530)
  {
    sub_1B15FD234();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF32530);
  }
}

uint64_t sub_1B15FD318@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1B15FCBF0(a1, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), a2);
}

uint64_t sub_1B15FD334()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_33();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(type metadata accessor for BlueprintItem(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3)- 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for BlueprintViewAction(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v5, AssociatedTypeWitness);
  swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  sub_1B150581C();
  v10 = v0 + v8 + *(int *)(v9 + 48);
  type metadata accessor for BlueprintViewAction.Action(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v12 = sub_1B16B7D60();
    v13 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v13(v10, v12);
    sub_1B1505AD0();
    v13(v10 + *(int *)(v14 + 48), v12);
  }
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_2_2();
  return swift_deallocObject();
}

void sub_1B15FD4DC()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintItem(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  type metadata accessor for BlueprintViewAction(0);
  sub_1B15FCE8C();
}

uint64_t sub_1B15FD5DC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B15FD600(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1B15FD614()
{
  swift_release();
  return swift_deallocObject();
}

void BlueprintTraversalCollectionProvider.collection.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_166();
  *a1 = *(_QWORD *)(v1 + 16);
  sub_1B16B9740();
  OUTLINED_FUNCTION_48();
}

void BlueprintTraversalCollectionProvider.collection.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48();
}

uint64_t (*BlueprintTraversalCollectionProvider.collection.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t BlueprintTraversalCollectionProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  BlueprintTraversalCollectionProvider.init()(v0, v1, v2, v3);
  return v0;
}

uint64_t BlueprintTraversalCollectionProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintTraversalCollectionProvider.__deallocating_deinit()
{
  BlueprintTraversalCollectionProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t BlueprintTraversalCollectionProvider<A>.traversableCollection.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v5 = *v2;
  OUTLINED_FUNCTION_0_166();
  v6 = v2[2];
  v9 = type metadata accessor for BlueprintTraversalCollection(0, *(_QWORD *)(v5 + 80), v7, v8);
  a2[3] = v9;
  v11[0] = a1;
  a2[4] = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for <A> BlueprintTraversalCollection<A>, v9, v11);
  *a2 = v6;
  return sub_1B16B9740();
}

void BlueprintTraversalCollectionProvider<A>.contains(indexPath:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  OUTLINED_FUNCTION_0_166();
  v6 = type metadata accessor for BlueprintTraversalCollection(0, *(_QWORD *)(v3 + 80), v4, v5);
  BlueprintTraversalCollection.contains(indexPath:)(a1, v6, v7, v8);
}

uint64_t sub_1B15FD80C(char a1)
{
  return a1 & 1;
}

uint64_t sub_1B15FD824@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return BlueprintTraversalCollectionProvider<A>.traversableCollection.getter(*(_QWORD *)(a1 - 8), a2);
}

void sub_1B15FD848(uint64_t a1)
{
  BlueprintTraversalCollectionProvider<A>.contains(indexPath:)(a1);
}

uint64_t sub_1B15FD85C(char a1)
{
  return a1 & 1;
}

uint64_t method lookup function for BlueprintTraversalCollectionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintTraversalCollectionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void BlueprintLayoutPipelineProcessor.__allocating_init(layoutProvider:layoutOptionsProvider:layoutBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  BlueprintLayoutPipelineProcessor.init(layoutProvider:layoutOptionsProvider:layoutBuilder:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_67();
}

void BlueprintLayoutPipelineProcessor.init(layoutProvider:layoutOptionsProvider:layoutBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v4;
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 136)) = MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 80) - 8) + 32))((uint64_t)v4 + *(_QWORD *)(*v4 + 112), a1);
  v9 = (uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 120));
  *v9 = a2;
  v9[1] = a3;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 88) - 8) + 32))((uint64_t)v4 + *(_QWORD *)(*v4 + 128), a4);
  OUTLINED_FUNCTION_67();
}

uint64_t BlueprintLayoutPipelineProcessor.add(layoutSubProcessor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess();
  sub_1B1481D08();
  v4 = *(_QWORD *)(*v3 + 16);
  sub_1B1481D98(v4);
  v5 = *v3;
  *(_QWORD *)(v5 + 16) = v4 + 1;
  sub_1B13B4DC0(a1, v5 + 40 * v4 + 32);
  return swift_endAccess();
}

uint64_t *BlueprintLayoutPipelineProcessor.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 112), *(_QWORD *)(*v0 + 80));
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 128), *(_QWORD *)(v1 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintLayoutPipelineProcessor.__deallocating_deinit()
{
  BlueprintLayoutPipelineProcessor.deinit();
  return swift_deallocClassInstance();
}

void BlueprintLayoutPipelineProcessor.process(blueprint:runOptions:completion:)()
{
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B15FDB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  id v23;
  void (*v24)(uint64_t);
  uint64_t v25;

  v9 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v25 - v10;
  if ((*v7 & 1) != 0)
  {
    v12 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v2 + 8), a1);
    v13 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v14 = (char *)swift_allocObject();
    *((_QWORD *)v14 + 2) = v4[10];
    *((_QWORD *)v14 + 3) = v6;
    *((_QWORD *)v14 + 4) = v4[12];
    *((_QWORD *)v14 + 5) = v3;
    v15 = *(_QWORD *)(v2 + 16);
    v16 = *(_QWORD *)(v2 + 24);
    *((_QWORD *)v14 + 6) = v12;
    *((_QWORD *)v14 + 7) = v15;
    *((_QWORD *)v14 + 8) = v16;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v11, a1);
    swift_retain();
    swift_retain();
    sub_1B16B8B34();
    swift_release();
    return swift_release();
  }
  else
  {
    v19 = *(_QWORD *)(v2 + 8);
    v18 = *(void (**)(uint64_t))(v2 + 16);
    v20 = *(_QWORD *)(v5 + v4[15] + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
    v22 = *(void **)(v2 + 696);
    sub_1B1424D1C(v2 + 568);
    if (objc_msgSend(v22, sel_horizontalSizeClass))
    {
      v23 = objc_msgSend(v22, sel_verticalSizeClass);
      OUTLINED_FUNCTION_16_55();
      v24 = v18;
      if (v23)
      {
        memcpy((void *)(v2 + 32), (const void *)(v2 + 568), 0x20DuLL);
        sub_1B15FDD08(v19, (const void *)(v2 + 32));
      }
    }
    else
    {
      OUTLINED_FUNCTION_16_55();
      v24 = v18;
    }
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_BYTE *)(v2 + 64) = 2;
    v24(v2 + 32);
    return OUTLINED_FUNCTION_16_55();
  }
}

void sub_1B15FDD08(uint64_t a1, const void *a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;
  _QWORD v22[71];
  _QWORD v23[71];
  _BYTE __dst[536];

  v5 = *(_QWORD **)v2;
  memcpy(__dst, a2, 0x20DuLL);
  memcpy(v22, a2, 0x20DuLL);
  v6 = v5[13];
  v7 = v5[11];
  (*(void (**)(_QWORD *__return_ptr, uint64_t, _QWORD *, uint64_t, uint64_t))(v6 + 72))(v23, a1, v22, v7, v6);
  v8 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136));
  swift_beginAccess();
  v9 = *v8;
  v15 = v5[10];
  v16 = v7;
  v17 = v5[12];
  v18 = v6;
  v19 = a1;
  v20 = v23;
  v21 = __dst;
  sub_1B16B9740();
  sub_1B15A8F2C((uint64_t)sub_1B15FEE18, (uint64_t)v14, v9);
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_weakInit();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = swift_getAssociatedConformanceWitness();
  v22[0] = AssociatedTypeWitness;
  v22[1] = v11;
  v22[2] = AssociatedConformanceWitness;
  v22[3] = v13;
  type metadata accessor for BlueprintLayout();
}

uint64_t sub_1B15FDEB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  void (*v11)(_QWORD *);
  _QWORD v12[4];
  char v13;
  _BYTE v14[608];
  _BYTE v15[568];
  _BYTE v16[632];

  v8 = *(_QWORD *)(a1 - 8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v14, v15, a1);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v1;
  v9[3] = v4;
  v9[4] = v5;
  v9[5] = v3;
  v9[6] = v2;
  memcpy(v9 + 7, v14, 0x238uLL);
  memcpy(v9 + 78, v16, 0x20DuLL);
  v9[144] = v6;
  v12[0] = sub_1B15FEF10;
  v12[1] = v9;
  v12[2] = 0;
  v12[3] = 0;
  v13 = 0;
  swift_retain();
  sub_1B1424D1C((uint64_t)v16);
  v11(v12);
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v15, a1);
  return swift_release();
}

void sub_1B15FDF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  _QWORD v17[100];

  v17[8] = a5;
  v17[9] = a7;
  v17[7] = a4;
  v17[18] = a3;
  v7 = sub_1B16B95D8();
  v17[16] = *(_QWORD *)(v7 - 8);
  v17[17] = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  v17[15] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B16B9620();
  v17[13] = *(_QWORD *)(v10 - 8);
  v17[14] = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v17[12] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedConformanceWitness();
  v17[32] = AssociatedTypeWitness;
  v17[33] = v14;
  v17[34] = AssociatedConformanceWitness;
  v17[35] = v16;
  type metadata accessor for Blueprint();
}

uint64_t sub_1B15FE0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t ObjectType;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _BYTE v39[96];

  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 + 48) = v7;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v2 + 40) = &v39[-v9];
  v10 = sub_1B16B95E4();
  *(_QWORD *)(v2 + 32) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    *(_OWORD *)(v2 + 256) = 0u;
    *(_OWORD *)(v2 + 272) = 0u;
    *(_BYTE *)(v2 + 288) = 2;
    return v4(v2 + 256);
  }
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 80) = Strong;
  *(_QWORD *)(v2 + 88) = v4;
  v16 = *(_QWORD *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 120) + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
  v18 = *(void **)(v2 + 384);
  sub_1B1424D1C(v2 + 256);
  if (objc_msgSend(v18, sel_horizontalSizeClass))
  {
    v19 = objc_msgSend(v18, sel_verticalSizeClass);
    sub_1B1417ADC(v2 + 256);
    if (v19)
    {
      sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1837C8);
      static UIWindowScene.activeScene.getter();
      if (!v20
        || (v21 = v20,
            v22 = objc_msgSend(v20, sel_traitCollection),
            v21,
            !v22))
      {
        v22 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
      }
      *(_QWORD *)(v2 + 8) = v22;
      sub_1B13A1BE4(0, (unint64_t *)&qword_1ED188560);
      v23 = *(_QWORD *)(v2 + 32);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0DEF530], v23);
      *(_QWORD *)(v2 + 16) = sub_1B16BA10C();
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v23);
      v24 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      v25 = *(_QWORD *)(v2 + 40);
      v26 = *(_QWORD *)(v2 + 48);
      v27 = *(_QWORD *)(v2 + 24);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 16))(v25, *(_QWORD *)(v2 + 56), v27);
      v28 = (*(unsigned __int8 *)(v26 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v29 = (char *)swift_allocObject();
      *((_QWORD *)v29 + 2) = *(_QWORD *)(v2 + 64);
      *((_QWORD *)v29 + 3) = v3;
      *((_QWORD *)v29 + 4) = *(_QWORD *)(v2 + 72);
      *((_QWORD *)v29 + 5) = v5;
      v30 = *(_QWORD *)(v2 + 88);
      *((_QWORD *)v29 + 6) = v24;
      *((_QWORD *)v29 + 7) = v30;
      v31 = *(void **)(v2 + 8);
      *((_QWORD *)v29 + 8) = *(_QWORD *)(v2 + 144);
      *((_QWORD *)v29 + 9) = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(&v29[v28], v25, v27);
      memcpy(&v29[(v8 + v28 + 7) & 0xFFFFFFFFFFFFFFF8], (const void *)(v2 + 256), 0x20DuLL);
      *(_QWORD *)(v2 + 192) = sub_1B15FF188;
      *(_QWORD *)(v2 + 200) = v29;
      *(_QWORD *)(v2 + 160) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v2 + 168) = 1107296256;
      *(_QWORD *)(v2 + 176) = sub_1B13F00E4;
      *(_QWORD *)(v2 + 184) = &block_descriptor_67;
      v32 = _Block_copy((const void *)(v2 + 160));
      sub_1B1424D1C(v2 + 256);
      swift_retain();
      swift_retain();
      v33 = v31;
      v34 = *(_QWORD *)(v2 + 96);
      sub_1B16B95F0();
      *(_QWORD *)(v2 + 152) = MEMORY[0x1E0DEE9D8];
      sub_1B13AD67C((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1B141793C();
      sub_1B13AD67C((unint64_t *)&qword_1ED183710, (uint64_t (*)(uint64_t))sub_1B141793C, MEMORY[0x1E0DEAF38]);
      v35 = *(_QWORD *)(v2 + 120);
      v36 = *(_QWORD *)(v2 + 136);
      sub_1B16BA448();
      v37 = *(void **)(v2 + 16);
      MEMORY[0x1B5E1DA80](0, v34, v35, v32);
      _Block_release(v32);

      swift_release();
      sub_1B1417ADC(v2 + 256);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 128) + 8))(v35, v36);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 + 104) + 8))(v34, *(_QWORD *)(v2 + 112));
      swift_release();
      return swift_release();
    }
  }
  else
  {
    sub_1B1417ADC(v2 + 256);
  }
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_BYTE *)(v2 + 192) = 2;
  (*(void (**)(uint64_t))(v2 + 88))(v2 + 160);
  sub_1B1417ADC(v2 + 256);
  return swift_release();
}

uint64_t sub_1B15FE568(uint64_t a1, uint64_t (*a2)(_OWORD *), uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  _OWORD v11[33];

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    objc_msgSend((id)objc_opt_self(), sel_setCurrentTraitCollection_, a4);
    memcpy(v11, a6, 0x20DuLL);
    sub_1B15FDD08(a5, v11);
  }
  memset(v11, 0, 32);
  LOBYTE(v11[2]) = 2;
  return a2(v11);
}

uint64_t sub_1B15FE644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, const void *a4@<X3>, void (**a5)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _BYTE __dst[536];

  v6 = a1[4];
  v21 = a1[3];
  v19 = v6;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  memcpy(__dst, a4, 0x20DuLL);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedTypeWitness();
  v9 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedConformanceWitness();
  v13 = v20(a2, a3, __dst, AssociatedTypeWitness, v7, v8, v9, AssociatedConformanceWitness, v10, v11, v12, v21, v19);
  v15 = v14;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v13;
  *(_QWORD *)(result + 24) = v15;
  *a5 = sub_1B140AA30;
  a5[1] = (void (*)())result;
  return result;
}

uint64_t sub_1B15FE854(int a1, int a2, void *__src, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _BYTE v12[525];

  memcpy(v12, __src, sizeof(v12));
  v9 = sub_1B16B7BE0();
  MEMORY[0x1E0C80A78](v9, v10);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(a7 + 48))(a5, a7);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for BlueprintLayout();
  }
  return result;
}

void sub_1B15FEB00()
{
  BlueprintLayoutPipelineProcessor.process(blueprint:runOptions:completion:)();
}

uint64_t sub_1B15FEB20()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1B15FEB44()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B15FEBDC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v2 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  OUTLINED_FUNCTION_107_0();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v2 + 40))
    __swift_destroy_boxed_opaque_existential_1(v1 + v2 + 16);
  OUTLINED_FUNCTION_10_67();
}

void sub_1B15FEC38()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B15FEC48()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B15FEC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_3_112();
  OUTLINED_FUNCTION_56_0(v2);
  type metadata accessor for BlueprintItem(255, v0, v1, v3);
  OUTLINED_FUNCTION_20_2();
}

void sub_1B15FEC88()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v0);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v0);
  v1 = OUTLINED_FUNCTION_12_57();
  OUTLINED_FUNCTION_56_0(v1);
  swift_release();
  OUTLINED_FUNCTION_15_48();
  OUTLINED_FUNCTION_0_11();
}

void sub_1B15FECDC()
{
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_118();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B15FED78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_1B15FDF88(v2[6], v2[7], v2[8], (uint64_t)v2 + ((v5 + 72) & ~v5), v1, v4, v3);
}

uint64_t sub_1B15FEDC4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B15FEDE4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t method lookup function for BlueprintLayoutPipelineProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintLayoutPipelineProcessor.__allocating_init(layoutProvider:layoutOptionsProvider:layoutBuilder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1B15FEE18@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v2;

  return sub_1B15FE644(a1, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(const void **)(v2 + 64), a2);
}

uint64_t sub_1B15FEE4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_107_0();

  sub_1B14262CC(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), *(_BYTE *)(v0 + 304));
  sub_1B14262CC(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320), *(_BYTE *)(v0 + 328));
  sub_1B14262CC(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), *(_BYTE *)(v0 + 352));
  if (*(_QWORD *)(v0 + 608))
    __swift_destroy_boxed_opaque_existential_1(v0 + 584);
  swift_bridgeObjectRelease();

  sub_1B14262CC(*(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 864), *(_BYTE *)(v0 + 872));
  sub_1B14262CC(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 888), *(_BYTE *)(v0 + 896));
  sub_1B14262CC(*(_QWORD *)(v0 + 904), *(_QWORD *)(v0 + 912), *(_BYTE *)(v0 + 920));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15FEF10()
{
  uint64_t *v0;

  return sub_1B15FE854(v0[6], (int)v0 + 56, v0 + 78, v0[144], v0[2], v0[3], v0[4]);
}

uint64_t sub_1B15FEF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1458764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B15FEF70()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B15FEF94()
{
  OUTLINED_FUNCTION_5_94();
  OUTLINED_FUNCTION_5_94();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B15FF02C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v2 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  OUTLINED_FUNCTION_107_0();
  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v2 + 40))
    __swift_destroy_boxed_opaque_existential_1(v1 + v2 + 16);
  OUTLINED_FUNCTION_10_67();
}

void sub_1B15FF0A0()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B15FF0B0()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B15FF0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_3_112();
  OUTLINED_FUNCTION_56_0(v2);
  type metadata accessor for BlueprintItem(255, v0, v1, v3);
  OUTLINED_FUNCTION_20_2();
}

void sub_1B15FF0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v10);
  v11 = OUTLINED_FUNCTION_12_57();
  OUTLINED_FUNCTION_56_0(v11);
  swift_release();
  v12 = v9 + a9;

  sub_1B14262CC(*(_QWORD *)(v12 + 232), *(_QWORD *)(v12 + 240), *(_BYTE *)(v12 + 248));
  sub_1B14262CC(*(_QWORD *)(v12 + 256), *(_QWORD *)(v12 + 264), *(_BYTE *)(v12 + 272));
  sub_1B14262CC(*(_QWORD *)(v12 + 280), *(_QWORD *)(v12 + 288), *(_BYTE *)(v12 + 296));
  OUTLINED_FUNCTION_15_48();
  OUTLINED_FUNCTION_0_11();
}

void sub_1B15FF188()
{
  OUTLINED_FUNCTION_9_77();
  OUTLINED_FUNCTION_9_77();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B15FF21C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1B15FE568(*(_QWORD *)(v1 + 48), *(uint64_t (**)(_OWORD *))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), v1 + v3, (const void *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t dispatch thunk of BlueprintViewDragReorderDelegateType.targetIndexPathToReorderItem(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BlueprintViewDragReorderDelegateType.reorderItem(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of BlueprintViewDynamicReorderingLayoutType.reorderingIndexPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintViewDynamicReorderingLayoutType.reorderingIndexPath.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlueprintViewDynamicReorderingLayoutType.reorderingIndexPath.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t KeyCommandManager.isEnabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1B15FF2CC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

void KeyCommandManager.isEnabled.setter(char a1)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_13();
  v3 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = a1;
  sub_1B15FF350(v3);
}

void sub_1B15FF350(char a1)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;

  v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 16) != v2)
  {
    if (*(_BYTE *)(v1 + 16))
    {
      KeyCommandManager.invalidate(clearState:)(1);
      return;
    }
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 64);
    if (v3 >> 62)
    {
      sub_1B16B9740();
      v4 = sub_1B16BA76C();
      if (v4)
        goto LABEL_6;
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1B16B9740();
      if (v4)
      {
LABEL_6:
        if (v4 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0)
            MEMORY[0x1B5E1DF60](i, v3);
          else
            swift_retain();
          KeyCommandHandlerRegistry.removeAll()();
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void (*KeyCommandManager.isEnabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  OUTLINED_FUNCTION_30();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 16);
  return sub_1B15FF4C4;
}

void sub_1B15FF4C4(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  KeyCommandManager.isEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t KeyCommandManager.__allocating_init(providers:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  KeyCommandManager.init(providers:)(a1);
  return v2;
}

Swift::Void __swiftcall KeyCommandManager.handle(keyCommand:)(UIKeyCommand keyCommand)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  Swift::Bool v5;
  uint64_t v6;
  Swift::Bool v7;

  OUTLINED_FUNCTION_30();
  v4 = *(_QWORD *)(v1 + 64);
  if (v4 >> 62)
  {
LABEL_13:
    OUTLINED_FUNCTION_8_70();
    v2 = OUTLINED_FUNCTION_31_0();
    if (!v2)
      goto LABEL_10;
  }
  else
  {
    OUTLINED_FUNCTION_6_99();
    if (!v2)
      goto LABEL_10;
  }
  sub_1B13C6B9C(0, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_32();
  v5 = KeyCommandHandlerRegistry.handle(keyCommand:)(keyCommand);
  OUTLINED_FUNCTION_45();
  if (!v5)
  {
    v6 = 0;
    while (v2 - 1 != v6)
    {
      if ((unint64_t)(v6 + 1) >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_12;
      swift_retain();
      if (__OFADD__(v6 + 1, 1))
      {
        __break(1u);
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
      v7 = KeyCommandHandlerRegistry.handle(keyCommand:)(keyCommand);
      swift_release();
      ++v6;
      if (v7)
        break;
    }
  }
LABEL_10:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_1();
}

void sub_1B15FF644()
{
  JUMPOUT(0x1B15FF58CLL);
}

Swift::Bool __swiftcall KeyCommandManager.handle(key:flags:)(Swift::String key, __C::UIKeyModifierFlags flags)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::Bool v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::Bool v13;

  object = key._object;
  countAndFlagsBits = key._countAndFlagsBits;
  OUTLINED_FUNCTION_30();
  v6 = *(_QWORD *)(v2 + 64);
  if (v6 >> 62)
  {
LABEL_12:
    OUTLINED_FUNCTION_17_1();
    v7 = OUTLINED_FUNCTION_31_0();
    if (!v7)
      goto LABEL_10;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1B16B9740();
    if (!v7)
      goto LABEL_10;
  }
  sub_1B13C6B9C(0, (v6 & 0xC000000000000001) == 0, v6);
  if ((v6 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_32();
  v8._countAndFlagsBits = countAndFlagsBits;
  v8._object = object;
  v9 = KeyCommandHandlerRegistry.handle(key:flags:)(v8, flags);
  OUTLINED_FUNCTION_45();
  if (v9)
  {
    LOBYTE(v7) = 1;
  }
  else
  {
    v10 = 0;
    v11 = v7 - 1;
    do
    {
      LOBYTE(v7) = v11 != v10;
      if (v11 == v10)
        break;
      sub_1B13C6B9C(v10 + 1, 1, v6);
      swift_retain();
      if (__OFADD__(v10 + 1, 1))
      {
        __break(1u);
        goto LABEL_12;
      }
      v12._countAndFlagsBits = countAndFlagsBits;
      v12._object = object;
      v13 = KeyCommandHandlerRegistry.handle(key:flags:)(v12, flags);
      swift_release();
      ++v10;
    }
    while (!v13);
  }
LABEL_10:
  OUTLINED_FUNCTION_29();
  return v7;
}

void sub_1B15FF7B0()
{
  JUMPOUT(0x1B15FF6C4);
}

uint64_t KeyCommandManager.keyCommands()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_30();
  v1 = *(_QWORD *)(v0 + 64);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1B16B9740();
    if (v2)
      goto LABEL_3;
LABEL_10:
    OUTLINED_FUNCTION_29();
    return MEMORY[0x1E0DEE9D8];
  }
  OUTLINED_FUNCTION_17_1();
  result = OUTLINED_FUNCTION_31_0();
  v2 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_78_0();
      swift_retain();
      ++v4;
      v5 = KeyCommandHandlerRegistry.keyCommands()();
      sub_1B1492998((unint64_t)v5);
      swift_release();
    }
    while (v2 != v4);
    OUTLINED_FUNCTION_29();
    return v6;
  }
  return result;
}

uint64_t KeyCommandManager.deinit()
{
  uint64_t v0;

  sub_1B13DA584(v0 + 24);
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t KeyCommandManager.__deallocating_deinit()
{
  KeyCommandManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B15FF8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DA5C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1B15FF938(char *a1)
{
  KeyCommandManager.isEnabled.setter(*a1);
}

uint64_t method lookup function for KeyCommandManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyCommandManager.__allocating_init(providers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1B15FF970()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_backdropView;
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_0_5(objc_allocWithZone((Class)TUBackdropView), sel_initWithFrame_);
  v2 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_image;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_);
  v3 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_titleLabel;
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_);
  v4 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_subtitleLabel;
  *(_QWORD *)&v0[v4] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_);

  sub_1B16BA724();
  __break(1u);
}

char *sub_1B15FFA6C()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  id v4;
  char *v5;
  double v6;
  SEL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  objc_super *v12;
  SEL v13;
  char *v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_backdropView;
  v4 = objc_allocWithZone((Class)TUBackdropView);
  v5 = v0;
  v6 = OUTLINED_FUNCTION_8_1();
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, v7, v6);
  v8 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_image;
  *(_QWORD *)&v5[v8] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_);
  v9 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_titleLabel;
  *(_QWORD *)&v5[v9] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_);
  v10 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_subtitleLabel;
  *(_QWORD *)&v5[v10] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_);

  v11 = OUTLINED_FUNCTION_8_1();
  v14 = (char *)objc_msgSendSuper2(v12, v13, v11, v5, ObjectType);
  v15 = *(void **)&v14[OBJC_IVAR____TtC5TeaUI16OverlayAlertView_backdropView];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  v17 = objc_msgSend(v15, sel_contentView);
  OUTLINED_FUNCTION_2_120(v17);

  v18 = OUTLINED_FUNCTION_3_113();
  v19 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_titleLabel;
  OUTLINED_FUNCTION_2_120(v18);

  v20 = OUTLINED_FUNCTION_3_113();
  v21 = OBJC_IVAR____TtC5TeaUI16OverlayAlertView_subtitleLabel;
  OUTLINED_FUNCTION_2_120(v20);

  OUTLINED_FUNCTION_1_144(*(void **)&v16[v19]);
  OUTLINED_FUNCTION_1_144(*(void **)&v16[v21]);
  objc_msgSend(v16, sel_setUserInteractionEnabled_, 0);

  return v16;
}

void sub_1B15FFC48()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for OverlayAlertView()
{
  return objc_opt_self();
}

uint64_t sub_1B15FFCF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v22 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x1B5E1DF60](v5, a1);
LABEL_7:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_23;
        sub_1B13F9E1C();
        sub_1B148F9A8();
        v9 = v7;
        if (swift_dynamicCast())
        {
          __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
          v10 = sub_1B16B81B0();
          v12 = v11;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
          if (v10 == a2 && v12 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            sub_1B16BA61C();
            sub_1B16BA64C();
            sub_1B16BA658();
            sub_1B16BA628();
            goto LABEL_19;
          }
          v14 = sub_1B16BA910(v10, v12, a2);
          swift_bridgeObjectRelease();
          if ((v14 & 1) != 0)
            goto LABEL_18;
        }
        else
        {
          v21 = 0;
          v19 = 0u;
          v20 = 0u;
          sub_1B148F9FC((uint64_t)&v19);
        }

LABEL_19:
        ++v5;
        if (v8 == v4)
        {
          v15 = v22;
          goto LABEL_26;
        }
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      v4 = sub_1B16BA76C();
      if (!v4)
        goto LABEL_25;
    }
    v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_7;
  }
LABEL_25:
  v15 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B15FFF00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  id v21;

  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1B16B9740();
  for (; v6; v6 = sub_1B16BA76C())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B5E1DF60](v7 - 4, a1) : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v21 = v8;
      sub_1B13F9E1C();
      sub_1B148F9A8();
      v11 = v9;
      if (swift_dynamicCast())
      {
        __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
        v12 = sub_1B16B81B0();
        v14 = v13;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
        if (v12 == a2 && v14 == a3)
        {
          OUTLINED_FUNCTION_52();

          swift_bridgeObjectRelease_n();
          return 1;
        }
        v16 = sub_1B16BA910(v12, v14, a2);

        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
        {
          OUTLINED_FUNCTION_61();
          OUTLINED_FUNCTION_52();
          return 1;
        }
      }
      else
      {
        v20 = 0;
        v18 = 0u;
        v19 = 0u;
        sub_1B148F9FC((uint64_t)&v18);

      }
      ++v7;
      if (v10 == v6)
        goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    sub_1B16B9740();
  }
LABEL_22:
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_52();
  return 0;
}

BOOL static UINavigationItem.Side.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t UINavigationItem.Side.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t UINavigationItem.Side.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

BOOL sub_1B160017C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static UINavigationItem.Side.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B1600188()
{
  return UINavigationItem.Side.hashValue.getter();
}

uint64_t sub_1B1600190()
{
  return UINavigationItem.Side.hash(into:)();
}

uint64_t UINavigationItem.barButtonItems(for:)(char a1)
{
  void *v1;
  char **v2;
  uint64_t result;

  if ((a1 & 1) != 0)
    v2 = &selRef_rightBarButtonItems;
  else
    v2 = &selRef_leftBarButtonItems;
  result = sub_1B1600364(v1, (SEL *)v2);
  if (!result)
    return MEMORY[0x1E0DEE9D8];
  return result;
}

void UINavigationItem.setBarButtonItems(for:items:)(char a1, uint64_t a2)
{
  void *v2;
  char **v4;
  id v5;
  id v6;

  if ((a1 & 1) != 0)
    v4 = &selRef_setRightBarButtonItems_;
  else
    v4 = &selRef_setLeftBarButtonItems_;
  sub_1B16003BC(a2, v2, (SEL *)v4);
  v5 = objc_msgSend(v2, sel_navigationBar);
  if (v5)
  {
    v6 = v5;
    sub_1B16003BC(a2, v5, (SEL *)&selRef_syncBarButtonItems_);

  }
}

uint64_t UINavigationItem.barButtonItems(for:side:)(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v5;

  v5 = UINavigationItem.barButtonItems(for:)(a3 & 1);
  OUTLINED_FUNCTION_49();
  return sub_1B15FFCF8(v5, a1, a2);
}

uint64_t UINavigationItem.side(for:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t result;
  unint64_t v7;
  char v8;

  v4 = UINavigationItem.barButtonItems(for:)(0);
  OUTLINED_FUNCTION_49();
  v5 = sub_1B15FFF00(v4, a1, a2);
  swift_bridgeObjectRelease();
  result = 0;
  if ((v5 & 1) == 0)
  {
    v7 = UINavigationItem.barButtonItems(for:)(1);
    OUTLINED_FUNCTION_49();
    v8 = sub_1B15FFF00(v7, a1, a2);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
  return result;
}

uint64_t sub_1B1600364(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  sub_1B13F9E1C();
  v4 = sub_1B16B9B54();

  return v4;
}

void sub_1B16003BC(uint64_t a1, void *a2, SEL *a3)
{
  id v5;

  sub_1B13F9E1C();
  v5 = (id)sub_1B16B9B48();
  objc_msgSend(a2, *a3, v5);

}

unint64_t sub_1B1600420()
{
  unint64_t result;

  result = qword_1EEF353B0;
  if (!qword_1EEF353B0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for UINavigationItem.Side, &type metadata for UINavigationItem.Side);
    atomic_store(result, (unint64_t *)&qword_1EEF353B0);
  }
  return result;
}

uint64_t _s4SideOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B16004A8 + 4 * byte_1B16D8D59[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B16004DC + 4 * asc_1B16D8D54[v4]))();
}

uint64_t sub_1B16004DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B16004E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B16004ECLL);
  return result;
}

uint64_t sub_1B16004F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1600500);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1600504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160050C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UINavigationItem.Side()
{
  return &type metadata for UINavigationItem.Side;
}

id sub_1B1600528()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for Images();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED179FE8 = (uint64_t)result;
  return result;
}

void sub_1B1600578()
{
  id v0;
  id v1;
  Class isa;
  CGSize_optional v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_ts_disclosureIndicator);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.780392157, 0.780392157, 0.8, 1.0);
  v3.is_nil = 0;
  isa = UIImage.with(tintColor:size:)((UIColor)v1, v3).super.isa;

  qword_1EEF522D0 = (uint64_t)isa;
  OUTLINED_FUNCTION_31();
}

id sub_1B160060C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v6;
  id v7;

  v6 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, a3, a4);

  return v7;
}

void sub_1B160068C()
{
  sub_1B1600850();
}

void sub_1B16006B0()
{
  sub_1B1600700();
}

void sub_1B16006DC()
{
  sub_1B1600700();
}

void sub_1B1600700()
{
  _QWORD *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_0_167();
  if (qword_1ED17B598 != -1)
    swift_once();
  v1 = (id)qword_1ED179FE8;
  v2 = OUTLINED_FUNCTION_1_145();
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_imageWithRenderingMode_, 2);

    *v0 = v4;
    OUTLINED_FUNCTION_67();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B160078C()
{
  sub_1B1456B04();
}

id static Images.iconSidebar.getter()
{
  return sub_1B13A666C(&qword_1ED17B400, (id *)&qword_1ED179FE0);
}

id sub_1B16007D0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_ts_macSidebar);
  qword_1ED17BEA8 = (uint64_t)result;
  return result;
}

id static Images.macSidebar.getter()
{
  return sub_1B13A666C(qword_1ED17C738, (id *)&qword_1ED17BEA8);
}

void sub_1B1600824()
{
  sub_1B1600850();
}

void sub_1B1600850()
{
  _QWORD *v0;
  id v1;
  id v2;

  OUTLINED_FUNCTION_0_167();
  if (qword_1ED17B598 != -1)
    swift_once();
  v1 = (id)qword_1ED179FE8;
  v2 = OUTLINED_FUNCTION_1_145();
  if (v2)
  {
    *v0 = v2;
    OUTLINED_FUNCTION_67();
  }
  else
  {
    __break(1u);
  }
}

id static Images.iconMoreArrow.getter()
{
  return sub_1B13A666C(&qword_1ED17B410, &qword_1ED179888);
}

void sub_1B16008D4()
{
  sub_1B1456B04();
}

id static Images.manageNotifications.getter()
{
  return sub_1B13A666C(qword_1ED17CBD8, &qword_1ED17CBD0);
}

void sub_1B1600908()
{
  sub_1B1456B04();
}

id static Images.newWindow.getter()
{
  return sub_1B13A666C(&qword_1EEF2F8F0, &qword_1EEF353B8);
}

void sub_1B1600950()
{
  sub_1B1456B04();
}

id static Images.newTab.getter()
{
  return sub_1B13A666C(&qword_1EEF2F8F8, &qword_1EEF353C0);
}

void sub_1B1600990()
{
  sub_1B1456B04();
}

void sub_1B16009BC()
{
  id v0;
  void *v1;
  id v2;

  sub_1B13C0F64();
  v0 = sub_1B13AB3B4();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_imageWithRenderingMode_, 2);

    qword_1EEF353C8 = (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
}

id static Images.iconTrashFill.getter()
{
  return sub_1B13A666C(qword_1EEF2F908, (id *)&qword_1EEF353C8);
}

id static Images.backCircleFill.getter()
{
  return sub_1B13A666C(qword_1ED186D40, (id *)&qword_1ED185CA8);
}

id Images.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Images.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Images.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Images()
{
  return objc_opt_self();
}

BOOL static BarViewSeparator.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BarViewSeparator.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t BarViewSeparator.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B1600BC4()
{
  unint64_t result;

  result = qword_1EEF353D0;
  if (!qword_1EEF353D0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BarViewSeparator, &type metadata for BarViewSeparator);
    atomic_store(result, (unint64_t *)&qword_1EEF353D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BarViewSeparator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1600C4C + 4 * byte_1B16D8E05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1600C80 + 4 * byte_1B16D8E00[v4]))();
}

uint64_t sub_1B1600C80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1600C88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1600C90);
  return result;
}

uint64_t sub_1B1600C9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1600CA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1600CA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1600CB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BarViewSeparator()
{
  return &type metadata for BarViewSeparator;
}

uint64_t dispatch thunk of BlueprintViewProviderPipelineAwareType.blueprintDidUpdate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for AccessibilityAnnouncer()
{
  return objc_opt_self();
}

id DebugNavigationController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;

  v2 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v2);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v2)
LABEL_3:
    v2 = swift_getObjCClassFromMetadata();
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v2);
}

id DebugNavigationController.init(navigationBarClass:toolbarClass:)(uint64_t ObjCClassFromMetadata, uint64_t a2)
{
  void *v2;
  objc_class *v5;
  uint64_t v6;
  objc_super v8;

  v5 = (objc_class *)OUTLINED_FUNCTION_4();
  if (ObjCClassFromMetadata)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (a2)
    v6 = swift_getObjCClassFromMetadata();
  else
    v6 = 0;
  v8.receiver = v2;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v6);
}

void DebugNavigationController.__allocating_init(rootViewController:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithRootViewController_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void DebugNavigationController.init(rootViewController:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_73_0((uint64_t)v7.super_class, sel_initWithRootViewController_, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_7();
}

void DebugNavigationController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  objc_class *v6;
  void *v7;
  objc_super v8;

  v6 = (objc_class *)OUTLINED_FUNCTION_4();
  if (a2)
  {
    v7 = (void *)OUTLINED_FUNCTION_17_41();
    OUTLINED_FUNCTION_17();
  }
  else
  {
    v7 = 0;
  }
  v8.receiver = v3;
  v8.super_class = v6;
  objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v7, a3);

  OUTLINED_FUNCTION_15_2();
}

void DebugNavigationController.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_73_0((uint64_t)v7.super_class, sel_initWithCoder_, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_7();
}

void DebugViewController.__allocating_init(dataSource:settingsPresentable:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  OUTLINED_FUNCTION_13_1();
  v3 = OUTLINED_FUNCTION_15_49();
  DebugViewController.init(dataSource:settingsPresentable:)(v3, a2);
  OUTLINED_FUNCTION_31();
}

uint64_t DebugViewController.init(dataSource:settingsPresentable:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *v4;
  TeaUI::DebugBundle *v5;
  void *v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  objc_super v12;

  v4 = (objc_class *)OUTLINED_FUNCTION_4();
  v5 = (TeaUI::DebugBundle *)&v2[OBJC_IVAR____TtC5TeaUI19DebugViewController_debugApp];
  v6 = (void *)objc_opt_self();
  v7 = v2;
  DebugBundle.init(bundle:)(v5, (NSBundle)objc_msgSend(v6, sel_mainBundle));
  v8 = OBJC_IVAR____TtC5TeaUI19DebugViewController_tableView;
  *(_QWORD *)&v7[v8] = OUTLINED_FUNCTION_2_121(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_);
  v9 = objc_allocWithZone((Class)type metadata accessor for DebugTableViewSource());
  OUTLINED_FUNCTION_15_49();
  v10 = swift_retain();
  *(_QWORD *)&v7[OBJC_IVAR____TtC5TeaUI19DebugViewController_tableViewSource] = sub_1B1699C30(v10);
  sub_1B13B4DC0(a2, (uint64_t)&v7[OBJC_IVAR____TtC5TeaUI19DebugViewController_settingsPresenter]);

  v12.receiver = v7;
  v12.super_class = v4;
  objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
  OUTLINED_FUNCTION_15_49();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

void DebugViewController.__allocating_init(coder:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void DebugViewController.init(coder:)()
{
  char *v0;
  TeaUI::DebugBundle *v1;
  id v2;
  uint64_t v3;

  v1 = (TeaUI::DebugBundle *)&v0[OBJC_IVAR____TtC5TeaUI19DebugViewController_debugApp];
  v2 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  DebugBundle.init(bundle:)(v1, (NSBundle)v2);
  v3 = OBJC_IVAR____TtC5TeaUI19DebugViewController_tableView;
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_2_121(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_);

  OUTLINED_FUNCTION_0_168();
  __break(1u);
}

Swift::Void __swiftcall DebugViewController.viewDidLoad()()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  id v5;
  id v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v27;
  uint64_t countAndFlagsBits;
  void *object;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  TeaUI::DebugBundle v46;
  char v47;
  objc_super v48;

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  v48.receiver = v0;
  v48.super_class = v1;
  objc_msgSendSuper2(&v48, sel_viewDidLoad);
  sub_1B152A7FC(0x6775626544, 0xE500000000000000, v0);
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI19DebugViewController_settingsPresenter + 32];
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC5TeaUI19DebugViewController_settingsPresenter], *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI19DebugViewController_settingsPresenter + 24]);
  v3 = OUTLINED_FUNCTION_15_49();
  if ((v4(v3, v2) & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_8_76();
    OUTLINED_FUNCTION_14_53((uint64_t)v5, (unint64_t *)&qword_1ED186F90);
    *(_OWORD *)(OUTLINED_FUNCTION_13_4() + 16) = xmmword_1B16C95D0;
    v46.version._object = v1;
    v46.name._countAndFlagsBits = (uint64_t)v0;
    v6 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v7 = v0;
    sub_1B152A65C(0x73676E6974746553, 0xE800000000000000, 0, &v46, (uint64_t)sel_doSettings);
    OUTLINED_FUNCTION_5_95(v8);
    sub_1B13F9E70(v46.name._countAndFlagsBits, v5);

  }
  v9 = OUTLINED_FUNCTION_8_76();
  OUTLINED_FUNCTION_14_53((uint64_t)v9, (unint64_t *)&qword_1ED186F90);
  *(_OWORD *)(OUTLINED_FUNCTION_13_4() + 16) = xmmword_1B16C95D0;
  v46.version._object = v1;
  v46.name._countAndFlagsBits = (uint64_t)v0;
  objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v10 = v0;
  sub_1B152A65C(1701736260, 0xE400000000000000, 2, &v46, (uint64_t)sel_doDone);
  OUTLINED_FUNCTION_5_95(v11);
  sub_1B13F9E64(v46.name._countAndFlagsBits, v9);

  v12 = OUTLINED_FUNCTION_20_50();
  if (!v12)
  {
    __break(1u);
    goto LABEL_35;
  }
  v13 = v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  v15 = OUTLINED_FUNCTION_20_50();
  if (!v15)
  {
LABEL_35:
    __break(1u);
    return;
  }
  v16 = v15;
  objc_msgSend(v15, sel_addSubview_);

  v17 = *(void **)&v10[OBJC_IVAR____TtC5TeaUI19DebugViewController_debugApp + 24];
  v46.name._countAndFlagsBits = *(_QWORD *)&v10[OBJC_IVAR____TtC5TeaUI19DebugViewController_debugApp + 16];
  v46.name._object = v17;
  sub_1B16B9740();
  swift_bridgeObjectRetain_n();
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  OUTLINED_FUNCTION_17();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_20_0();
  swift_bridgeObjectRelease();
  memset(&v46.version, 0, 32);
  v47 = 6;
  sub_1B1699BE0(0x6E6F6973726556, 0xE700000000000000, (uint64_t)&v46);
  v18 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_53(v18, (unint64_t *)&qword_1ED183998);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16D8F20;
  *(_QWORD *)(inited + 32) = 6382932;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = 1937204558;
  *(_QWORD *)(inited + 56) = 0xE400000000000000;
  *(_QWORD *)(inited + 64) = 0x736B636F7453;
  *(_QWORD *)(inited + 72) = 0xE600000000000000;
  *(_QWORD *)(inited + 80) = 0xD000000000000013;
  *(_QWORD *)(inited + 88) = 0x80000001B16F2200;
  *(_QWORD *)(inited + 96) = 0x72656874616557;
  *(_QWORD *)(inited + 104) = 0xE700000000000000;
  *(_QWORD *)(inited + 112) = 0x78656C6953;
  *(_QWORD *)(inited + 120) = 0xE500000000000000;
  strcpy((char *)(inited + 128), "AppAnalytics");
  *(_BYTE *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  v20 = objc_msgSend((id)objc_opt_self(), sel_allFrameworks);
  sub_1B1601F44();
  v21 = sub_1B16B9B54();

  if (v21 >> 62)
    goto LABEL_33;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v22)
  {
    v23 = v22;
    v24 = 0;
    v42 = v21 & 0xC000000000000001;
    v40 = v21 + 32;
    v41 = v21 & 0xFFFFFFFFFFFFFF8;
    v38 = v22;
    v39 = v21;
    while (1)
    {
      if (v42)
      {
        v25 = (id)MEMORY[0x1B5E1DF60](v24, v21);
      }
      else
      {
        if (v24 >= *(_QWORD *)(v41 + 16))
          goto LABEL_32;
        v25 = *(id *)(v40 + 8 * v24);
      }
      if (__OFADD__(v24++, 1))
        break;
      v27 = v25;
      DebugBundle.init(bundle:)(&v46, (NSBundle)v27);
      countAndFlagsBits = v46.name._countAndFlagsBits;
      object = v46.name._object;
      v30 = ((unint64_t)v46.name._object >> 56) & 0xF;
      if (((uint64_t)v46.name._object & 0x2000000000000000) == 0)
        v30 = v46.name._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
      if (v30)
      {
        v43 = v46.build._object;
        v44 = v46.version._object;
        v45 = v27;
        v31 = v46.version._countAndFlagsBits;
        v32 = v46.build._countAndFlagsBits;
        if (qword_1EEF2F860 != -1)
          swift_once();
        sub_1B1601F80();
        sub_1B16B7DE4();
        if ((v46.name._countAndFlagsBits & 1) == 0)
        {
          OUTLINED_FUNCTION_16_56();
          v33 = inited;
          sub_1B16B98CC();
          v34 = sub_1B1601980();
          sub_1B16B9740();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_98();
          if ((v34 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v23 = v38;
            v21 = v39;
          }
          else
          {
            v37 = v32;
            v35 = 0;
            while (1)
            {
              OUTLINED_FUNCTION_16_56();
              sub_1B16B98CC();
              sub_1B16B9740();
              v36 = sub_1B1601980();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v36 & 1) != 0)
                break;
              v35 += 16;
              if (v35 == 96)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_52();

                inited = v33;
                OUTLINED_FUNCTION_17();
                v23 = v38;
                v21 = v39;
                goto LABEL_29;
              }
            }
            inited = v33;
            OUTLINED_FUNCTION_17();
            v23 = v38;
            v21 = v39;
            v32 = v37;
          }
        }
        v46.name._countAndFlagsBits = countAndFlagsBits;
        v46.name._object = object;
        v46.version._countAndFlagsBits = v31;
        v46.version._object = v44;
        v46.build._countAndFlagsBits = v32;
        v46.build._object = v43;
        v47 = 9;
        sub_1B16B9740();
        sub_1B16B9740();
        sub_1B16B9740();
        sub_1B1699BE0(countAndFlagsBits, (uint64_t)object, (uint64_t)&v46);

        OUTLINED_FUNCTION_150();
        OUTLINED_FUNCTION_150();
        OUTLINED_FUNCTION_150();
      }
      else
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_20_0();
        OUTLINED_FUNCTION_52();

      }
LABEL_29:
      if (v24 == v23)
        goto LABEL_30;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    sub_1B16B9740();
    v22 = sub_1B16BA76C();
    OUTLINED_FUNCTION_98();
  }
LABEL_30:
  OUTLINED_FUNCTION_98();
  swift_setDeallocating();
  sub_1B1646538();
  sub_1B1699B64();
}

uint64_t sub_1B1601980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1B16B9740();
  sub_1B16B9740();
  v0 = sub_1B16B995C();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    while (1)
    {
      v4 = sub_1B16B995C();
      if (!v5)
        break;
      if (v2 == v4 && v3 == v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v7 = sub_1B16BA910(v2, v3, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      v2 = sub_1B16B995C();
      v3 = v8;
      if (!v8)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  sub_1B16B995C();
  v10 = v9;
  swift_bridgeObjectRelease();
  if (!v10)
    return 1;
LABEL_16:
  swift_bridgeObjectRelease();
  return 0;
}

Swift::Void __swiftcall DebugViewController.viewWillLayoutSubviews()()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v12, sel_viewWillLayoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI19DebugViewController_tableView];
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B1601C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI19DebugViewController_settingsPresenter + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI19DebugViewController_settingsPresenter + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI19DebugViewController_settingsPresenter), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, v1, v2);
}

void _s5TeaUI25DebugNavigationControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfC_0(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    OUTLINED_FUNCTION_52();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_31();
}

void DebugViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B1601DEC()
{
  OUTLINED_FUNCTION_0_168();
  __break(1u);
}

void sub_1B1601E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  objc_class *v7;
  void *v8;
  objc_super v9;

  v7 = (objc_class *)OUTLINED_FUNCTION_4();
  if (a3)
  {
    v8 = (void *)OUTLINED_FUNCTION_17_41();
    OUTLINED_FUNCTION_17();
  }
  else
  {
    v8 = 0;
  }
  v9.receiver = v4;
  v9.super_class = v7;
  objc_msgSendSuper2(&v9, sel_initWithStyle_reuseIdentifier_, a4, v8);

  OUTLINED_FUNCTION_15_2();
}

void sub_1B1601EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a4)
  {
    v6 = sub_1B16B9860();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  sub_1B1601E38(v6, v6, v8, a5);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1601EF8()
{
  OUTLINED_FUNCTION_0_168();
  __break(1u);
}

unint64_t sub_1B1601F44()
{
  unint64_t result;

  result = qword_1EEF353F8;
  if (!qword_1EEF353F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF353F8);
  }
  return result;
}

unint64_t sub_1B1601F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF35400;
  if (!qword_1EEF35400)
  {
    v1 = type metadata accessor for DebugViewController();
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for DebugViewController, v1);
    atomic_store(result, (unint64_t *)&qword_1EEF35400);
  }
  return result;
}

uint64_t method lookup function for DebugViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebugViewController.__allocating_init(dataSource:settingsPresentable:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for DebugInfoTableViewCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugSubtitleTableViewCell()
{
  return objc_opt_self();
}

void static TableViewCellViewLayout.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

BOOL static TableViewCellViewLayout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void TableViewCellViewLayout.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

uint64_t TableViewCellViewLayout.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

id TableViewCell.view.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED17A778);
}

void TableViewCell.viewLayout.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + qword_1ED17A760);
  OUTLINED_FUNCTION_13();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

void TableViewCell.viewLayout.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + qword_1ED17A760);
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  OUTLINED_FUNCTION_90();
}

void TableViewCell.viewLayout.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id TableViewCell.separator.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED17A788);
}

id TableViewCell.onSelect.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED17A780);
}

id TableViewCell.onDeselect.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED17A758);
}

id TableViewCell.onHighlightChange.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED17A768);
}

id TableViewCell.customSelectedBackgroundView.getter()
{
  return OUTLINED_FUNCTION_4_4(qword_1ED17A750);
}

void TableViewCell.selectionBehavior.getter(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;

  v3 = (unint64_t *)(v1 + qword_1ED17A770);
  OUTLINED_FUNCTION_13();
  v4 = *v3;
  *a1 = *v3;
  sub_1B13B4C58(v4);
  OUTLINED_FUNCTION_48();
}

unint64_t sub_1B16021F4@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t *v3;
  unint64_t v4;

  v3 = (unint64_t *)(*a1 + qword_1ED17A770);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return sub_1B13B4C58(v4);
}

void sub_1B1602248(unint64_t *a1)
{
  unint64_t v1;

  v1 = *a1;
  sub_1B13B4C58(v1);
  TableViewCell.selectionBehavior.setter(&v1);
}

void TableViewCell.selectionBehavior.setter(unint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *a1;
  v3 = (unint64_t *)(v1 + qword_1ED17A770);
  OUTLINED_FUNCTION_13();
  v4 = *v3;
  *v3 = v2;
  sub_1B13E766C(v4);
  sub_1B16022CC();
  OUTLINED_FUNCTION_90();
}

id sub_1B16022CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess();
  SelectionBehavior.style.getter();
  v1 = v9;
  v2 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = *(_QWORD *)&v0[qword_1ED17A750];
  (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 8))(v0, &protocol witness table for TableViewCell<A>, v3, v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  result = objc_msgSend(v0, sel_isSelected);
  if ((_DWORD)result)
  {
    SelectionBehavior.style.getter();
    v5 = v9;
    v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v7 = objc_msgSend(v0, sel_isHighlighted);
    (*(void (**)(uint64_t, id, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v6 + 16))(1, v7, 0, *(_QWORD *)&v0[qword_1ED17A778], v3, v5, v6);
    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  return result;
}

void TableViewCell.selectionBehavior.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B160243C(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B16022CC();
  OUTLINED_FUNCTION_0_0();
}

id TableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  id v6;

  v4 = v3;
  if (a3)
  {
    sub_1B16B983C();
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v3 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v3);

  return v6;
}

char *TableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  objc_class *v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  objc_super v33;

  v4 = v3;
  v7 = (objc_class *)OUTLINED_FUNCTION_4();
  v4[qword_1ED17A760] = 1;
  v8 = qword_1ED17A780;
  sub_1B13F279C(0, v9, v10, v11);
  v13 = v12;
  v14 = objc_allocWithZone(v12);
  v15 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v14, sel_init);
  v16 = qword_1ED17A758;
  *(_QWORD *)&v15[v16] = OUTLINED_FUNCTION_13_6(objc_allocWithZone(v13));
  v17 = qword_1ED17A768;
  *(_QWORD *)&v15[v17] = OUTLINED_FUNCTION_13_6(objc_allocWithZone(v13));
  v18 = qword_1ED17A750;
  v19 = objc_allocWithZone((Class)type metadata accessor for SelectedBackgroundView());
  *(_QWORD *)&v15[v18] = OUTLINED_FUNCTION_0_5(v19, sel_initWithFrame_);
  *(_QWORD *)&v15[qword_1ED17A770] = 0x8000000000000008;
  v20 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v15[qword_1ED17A778] = OUTLINED_FUNCTION_0_5(v20, sel_initWithFrame_);
  v21 = objc_allocWithZone((Class)type metadata accessor for SeparatorView());
  *(_QWORD *)&v15[qword_1ED17A788] = OUTLINED_FUNCTION_0_5(v21, sel_initWithFrame_);

  if (a3)
  {
    v22 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  v33.receiver = v15;
  v33.super_class = v7;
  v23 = (char *)objc_msgSendSuper2(&v33, sel_initWithStyle_reuseIdentifier_, a1, v22);

  v24 = *(void **)&v23[qword_1ED17A750];
  v25 = qword_1ED184960;
  v26 = v23;
  v27 = v24;
  if (v25 != -1)
    swift_once();
  objc_msgSend(v27, sel_setBackgroundColor_, qword_1ED1838B8);

  v29 = OUTLINED_FUNCTION_32_0(v28, sel_contentView);
  objc_msgSend(v29, sel_addSubview_, *(_QWORD *)&v26[qword_1ED17A778]);

  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[qword_1ED17A788]);
  objc_opt_self();
  v30 = v26;
  v31 = OUTLINED_FUNCTION_2_0((uint64_t)v30, sel_systemBackgroundColor);
  objc_msgSend(v30, sel_setBackgroundColor_, v31);

  objc_msgSend(v30, sel_setSeparatorInset_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));
  return v30;
}

char *sub_1B1602790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = sub_1B16B9860();
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return TableViewCell.init(style:reuseIdentifier:)(a3, a4, v6);
}

id TableViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void TableViewCell.init(coder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v5;
  objc_class *v6;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v4[qword_1ED17A760] = 1;
  v5 = qword_1ED17A780;
  sub_1B13F279C(0, a2, a3, a4);
  v7 = v6;
  *(_QWORD *)&v4[v5] = OUTLINED_FUNCTION_13_6(objc_allocWithZone(v6));
  v8 = qword_1ED17A758;
  *(_QWORD *)&v4[v8] = OUTLINED_FUNCTION_13_6(objc_allocWithZone(v7));
  v9 = qword_1ED17A768;
  *(_QWORD *)&v4[v9] = OUTLINED_FUNCTION_13_6(objc_allocWithZone(v7));
  v10 = qword_1ED17A750;
  v11 = objc_allocWithZone((Class)type metadata accessor for SelectedBackgroundView());
  *(_QWORD *)&v4[v10] = OUTLINED_FUNCTION_0_5(v11, sel_initWithFrame_);
  *(_QWORD *)&v4[qword_1ED17A770] = 0x8000000000000008;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B1602918(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  TableViewCell.init(coder:)((uint64_t)v3, v4, v5, v6);
}

Swift::Void __swiftcall TableViewCell.layoutSubviews()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  int v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void (*v9)(uint64_t);
  char *v10;
  char *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  objc_super v36;
  __C::CGRect v37;
  __C::CGRect v38;
  UIEdgeInsets v39;

  v36.receiver = v0;
  v36.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v36, sel_layoutSubviews);
  v1 = &v0[qword_1ED17A760];
  v2 = OUTLINED_FUNCTION_13();
  v3 = *v1;
  v4 = OUTLINED_FUNCTION_2_0(v2, sel_contentView);
  objc_msgSend(v4, sel_bounds);
  v6 = v5;
  v8 = v7;

  if (v3)
    v9 = (void (*)(uint64_t))sub_1B1604470;
  else
    v9 = (void (*)(uint64_t))sub_1B1604488;
  sub_1B1602D6C(v9, v6, v8);
  v10 = *(char **)&v0[qword_1ED17A788];
  v11 = &v10[OBJC_IVAR____TtC5TeaUI13SeparatorView_layoutStyle];
  OUTLINED_FUNCTION_13();
  if ((*v11 & 1) != 0)
  {
    objc_msgSend(v0, sel_bounds);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;
    objc_msgSend(v0, sel_separatorInset);
    v39.top = v20;
    v39.left = v21;
    v39.bottom = v22;
    v39.right = v23;
    v35 = 1;
    v37.origin.x = v13;
    v37.origin.y = v15;
    v37.size.width = v17;
    v37.size.height = v19;
    v38 = SeparatorView.makeFrame(in:insets:anchor:)(v37, v39, (TeaUI::SeparatorView::Anchor)&v35);
    objc_msgSend(v10, sel_setFrame_, v38.origin.x, v38.origin.y, v38.size.width, v38.size.height);
  }
  else
  {
    OUTLINED_FUNCTION_8_77();
    v24 = OUTLINED_FUNCTION_8_77();
    v25 = OUTLINED_FUNCTION_2_0((uint64_t)v24, sel_contentView);
    v26 = objc_msgSend(v25, sel_readableContentGuide);

    objc_msgSend(v26, sel_layoutFrame);
    OUTLINED_FUNCTION_8_77();
    v27 = OUTLINED_FUNCTION_8_77();
    v28 = OUTLINED_FUNCTION_2_0((uint64_t)v27, sel_safeAreaLayoutGuide);
    objc_msgSend(v28, sel_layoutFrame);
    v30 = v29;
    v32 = v31;

    MEMORY[0x1E0C80A78](v33, v34);
    sub_1B1602D6C((void (*)(uint64_t))sub_1B1604478, v30, v32);
  }
}

id sub_1B1602B9C(int a1, char *a2)
{
  void *v3;
  id v4;
  id v5;
  double v6;
  CGFloat v7;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double Width;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  char v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  __C::CGRect v44;
  __C::CGRect v45;

  v3 = *(void **)&a2[qword_1ED17A778];
  v4 = objc_msgSend(a2, sel_contentView);
  v5 = objc_msgSend(v4, sel_readableContentGuide);

  objc_msgSend(v5, sel_layoutFrame);
  v7 = v6;

  v8 = objc_msgSend(a2, sel_readableContentGuide);
  objc_msgSend(v8, sel_layoutFrame);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v41.origin.x = v10;
  v41.origin.y = v12;
  v41.size.width = v14;
  v41.size.height = v16;
  Width = CGRectGetWidth(v41);
  v18 = objc_msgSend(a2, sel_accessoryView);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_frame);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    v42.origin.x = v21;
    v42.origin.y = v23;
    v42.size.width = v25;
    v42.size.height = v27;
    v28 = CGRectGetWidth(v42);
  }
  else
  {
    v28 = 0.0;
  }
  v29 = Width - v28;
  v30 = objc_msgSend(a2, sel_contentView);
  objc_msgSend(v30, sel_frame);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v43.origin.x = v32;
  v43.origin.y = v34;
  v43.size.width = v36;
  v43.size.height = v38;
  v44.size.height = CGRectGetHeight(v43);
  v40 = 0;
  v44.origin.y = 0.0;
  v44.origin.x = v7;
  v44.size.width = v29;
  v45 = RTLAdjuster.frame(_:alignment:)(v44, (TeaUI::RTLAdjuster::Alignment)&v40);
  return objc_msgSend(v3, sel_setFrame_, v45.origin.x, v45.origin.y, v45.size.width, v45.size.height);
}

uint64_t sub_1B1602D6C(void (*a1)(uint64_t), double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;

  v6 = sub_1B16B7C10();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B16B7C04();
  type metadata accessor for RTLAdjuster();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 40) = v6;
  *(_QWORD *)(v11 + 48) = sub_1B1401EB4();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v11 + 16));
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(boxed_opaque_existential_0, v10, v6);
  *(_QWORD *)(v11 + 56) = 0;
  *(_QWORD *)(v11 + 64) = 0;
  *(double *)(v11 + 72) = a2;
  *(double *)(v11 + 80) = a3;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  a1(v11);
  return swift_release();
}

id sub_1B1602E68(uint64_t a1, char *a2)
{
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  CGFloat Width;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  CGFloat Height;
  uint64_t v30;
  char *v31;
  double v32;
  double v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  id v39;
  void *v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  char v51;
  char v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  __C::CGRect v56;

  if (RTLAdjuster.layoutDirection.getter() == 1 && objc_msgSend(a2, sel_isEditing))
  {
    v3 = *(void **)&a2[qword_1ED17A778];
    v4 = objc_msgSend(a2, sel_contentView);
    v5 = objc_msgSend(v4, sel_readableContentGuide);

    objc_msgSend(v5, sel_layoutFrame);
    v7 = v6;

    objc_msgSend(a2, sel_layoutMargins);
    v9 = v7 + v8;
    v10 = objc_msgSend(a2, sel_readableContentGuide);
    objc_msgSend(v10, sel_layoutFrame);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v53.origin.x = v12;
    v53.origin.y = v14;
    v53.size.width = v16;
    v53.size.height = v18;
    Width = CGRectGetWidth(v53);
    v20 = objc_msgSend(a2, sel_contentView);
    objc_msgSend(v20, sel_frame);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;

    v54.origin.x = v22;
    v54.origin.y = v24;
    v54.size.width = v26;
    v54.size.height = v28;
    Height = CGRectGetHeight(v54);
    v51 = 0;
    v30 = 0;
    v31 = &v51;
    v32 = v9;
    v33 = Width;
  }
  else
  {
    v3 = *(void **)&a2[qword_1ED17A778];
    v34 = objc_msgSend(a2, sel_contentView);
    objc_msgSend(v34, sel_bounds);
    v36 = v35;
    v38 = v37;

    v39 = objc_msgSend(a2, sel_accessoryView);
    if (v39)
    {
      v40 = v39;
      objc_msgSend(v39, sel_frame);
      v42 = v41;
      v44 = v43;
      v46 = v45;
      v48 = v47;

      v55.origin.x = v42;
      v55.origin.y = v44;
      v55.size.width = v46;
      v55.size.height = v48;
      v49 = CGRectGetWidth(v55);
    }
    else
    {
      v49 = 0.0;
    }
    v33 = v36 - v49;
    v52 = 0;
    v32 = 0.0;
    v30 = 0;
    v31 = &v52;
    Height = v38;
  }
  v56 = RTLAdjuster.frame(_:alignment:)(*(__C::CGRect *)&v32, (TeaUI::RTLAdjuster::Alignment)v31);
  return objc_msgSend(v3, sel_setFrame_, v56.origin.x, v56.origin.y, v56.size.width, v56.size.height);
}

id sub_1B16030C8(int a1, char *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  void *v10;
  id v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  char v21;
  char v22;
  __C::CGRect v23;
  __C::CGRect v24;
  __C::CGRect v25;
  UIEdgeInsets v26;

  v10 = *(void **)&a2[qword_1ED17A788];
  v11 = objc_msgSend(a2, sel_safeAreaLayoutGuide);
  objc_msgSend(v11, sel_layoutFrame);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v22 = 1;
  v23.origin.x = v13;
  v23.origin.y = v15;
  v23.size.width = v17;
  v23.size.height = v19;
  v26.top = a3;
  v26.left = a4;
  v26.bottom = a5;
  v26.right = a6;
  v24 = SeparatorView.makeFrame(in:insets:anchor:)(v23, v26, (TeaUI::SeparatorView::Anchor)&v22);
  v21 = 1;
  v25 = RTLAdjuster.frame(_:alignment:)(v24, (TeaUI::RTLAdjuster::Alignment)&v21);
  return objc_msgSend(v10, sel_setFrame_, v25.origin.x, v25.origin.y, v25.size.width, v25.size.height);
}

void sub_1B16031C0(void *a1)
{
  id v1;

  v1 = a1;
  TableViewCell.layoutSubviews()();

}

Swift::Void __swiftcall TableViewCell.prepareForReuse()()
{
  _QWORD *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(__int128 *, _QWORD);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  objc_super v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[5];

  v2 = (objc_class *)OUTLINED_FUNCTION_4();
  v3 = *MEMORY[0x1E0DEEDD8] & *v0;

  v34 = *(id *)((char *)v0 + qword_1ED17A778);
  v4 = *(_QWORD *)(v3 + 80);
  OUTLINED_FUNCTION_197(v5, &qword_1ED184800);
  v6 = v34;
  v7 = OUTLINED_FUNCTION_3_0();
  if ((v7 & 1) == 0)
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
    sub_1B13F15EC((uint64_t)&v30, &qword_1ED184808, &qword_1ED184800);
    goto LABEL_5;
  }
  v9 = OUTLINED_FUNCTION_67_0(v7, v8);
  OUTLINED_FUNCTION_27_39(v9, v10, v11, v12, v13, v14, v15, v16, (uint64_t)v29.receiver, (uint64_t)v29.super_class, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, v33, (uint64_t)v34, v35[0], v35[1],
    v35[2],
    v35[3]);
  v17 = (uint64_t (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(v1 + 24))(&v30);
  if (*v18 != -1)
  {
    ++*v18;
    v19 = v17(&v30, 0);
    OUTLINED_FUNCTION_38_0(v19, v20, v21, v22, v23, v24, v25, v26, (uint64_t)v29.receiver);
LABEL_5:
    v29.receiver = v0;
    v29.super_class = v2;
    v27 = objc_msgSendSuper2(&v29, sel_prepareForReuse);
    v28 = OUTLINED_FUNCTION_34_29((uint64_t)v27, sel_setAccessoryView_);
    OUTLINED_FUNCTION_34_29((uint64_t)v28, sel_setAccessoryType_);
    LOBYTE(v35[0]) = 1;
    SeparatorView.visibilityStyle.setter((char *)v35);
    v35[0] = v6;
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 88) + 16))(v4);
    OUTLINED_FUNCTION_20_13();
    return;
  }
  __break(1u);
}

void sub_1B1603398(void *a1)
{
  id v1;

  v1 = a1;
  TableViewCell.prepareForReuse()();

}

Swift::Void __swiftcall TableViewCell.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  char *v3;
  _BOOL8 v4;
  _BOOL8 v5;
  objc_class *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  objc_super v23;

  v3 = v2;
  v4 = animated;
  v5 = _;
  v6 = (objc_class *)OUTLINED_FUNCTION_4();
  v7 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v2;
  v23.receiver = v3;
  v23.super_class = v6;
  objc_msgSendSuper2(&v23, sel_setEditing_animated_, v5, v4);
  v20[0] = *(_QWORD *)&v3[qword_1ED17A778];
  (*(void (**)(_BOOL8, _BOOL8, _QWORD))(*(_QWORD *)(*(_QWORD *)(v7 + 88) + 8) + 8))(v5, v4, *(_QWORD *)(v7 + 80));
  v8 = objc_msgSend(v3, sel_accessoryView);
  if (!v8
    || (v20[0] = v8,
        OUTLINED_FUNCTION_10((uint64_t)v8, (unint64_t *)&qword_1ED1838A0),
        OUTLINED_FUNCTION_197(v9, (unint64_t *)&qword_1ED17AFF8),
        v10 = OUTLINED_FUNCTION_3_0(),
        (v10 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    goto LABEL_8;
  }
  if (!v19)
  {
LABEL_8:
    OUTLINED_FUNCTION_57_4(v10, (unint64_t *)&qword_1ED17B000, (unint64_t *)&qword_1ED17AFF8, (uint64_t)&protocol descriptor for Editable, v11, v12, v13, v14, v18);
    return;
  }
  sub_1B13C06D0(&v18, (uint64_t)v20);
  v15 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  if ((OUTLINED_FUNCTION_6_16(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24)) & 1) == 0)
  {
    v16 = v21;
    v17 = v22;
    OUTLINED_FUNCTION_25_43(v20);
    (*(void (**)(_BOOL8, _BOOL8, uint64_t, uint64_t))(v17 + 8))(v5, v4, v16, v17);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

void sub_1B160354C(void *a1, uint64_t a2, Swift::Bool a3, Swift::Bool a4)
{
  id v6;

  v6 = a1;
  TableViewCell.setEditing(_:animated:)(a3, a4);

}

Swift::Void __swiftcall TableViewCell.setSelected(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  char v3;
  char v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  objc_super v70;

  v70.receiver = v2;
  v70.super_class = (Class)OUTLINED_FUNCTION_23_38();
  v5 = objc_msgSendSuper2(&v70, sel_setSelected_animated_, v4 & 1, v3 & 1);
  v6 = *(void **)&v2[qword_1ED17A778];
  OUTLINED_FUNCTION_197((uint64_t)v5, qword_1ED17EAB0);
  v7 = v6;
  if ((OUTLINED_FUNCTION_6_100() & 1) != 0)
  {
    sub_1B13C06D0(&v64, (uint64_t)v67);
    v8 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    v9 = OUTLINED_FUNCTION_6_16(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    if ((v9 & 1) != 0)
    {
      v17 = OUTLINED_FUNCTION_32_0(v9, sel_isSelected);
      OUTLINED_FUNCTION_21_41((uint64_t)v17, v18, v19, v20, v21, v22, v23, v24, v60, (uint64_t)v6, v62, v63, v64, *((uint64_t *)&v64 + 1), v65, *((uint64_t *)&v65 + 1), v66, v67[0], v67[1],
        v67[2],
        v68);
      v9 = OUTLINED_FUNCTION_11_59();
    }
    OUTLINED_FUNCTION_38_0(v9, v10, v11, v12, v13, v14, v15, v16, v60);
  }
  else
  {
    v66 = 0;
    v64 = 0u;
    v65 = 0u;
    sub_1B13F15EC((uint64_t)&v64, &qword_1ED17EAC8, qword_1ED17EAB0);
  }
  v25 = objc_msgSend(v6, sel_isAccessibilityElement);
  if ((_DWORD)v25)
  {
    v26 = OUTLINED_FUNCTION_32_0((uint64_t)v25, sel_isSelected);
    v27 = (unint64_t)objc_msgSend(v6, sel_accessibilityTraits);
    if (v26)
      v28 = *MEMORY[0x1E0DC46B0] | v27;
    else
      v28 = v27 & ~*MEMORY[0x1E0DC46B0];
    objc_msgSend(v6, sel_setAccessibilityTraits_, v28);
  }
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_18_46();
  v29 = __swift_project_boxed_opaque_existential_1(v67, v68);
  v30 = OUTLINED_FUNCTION_32_0((uint64_t)v29, sel_isSelected);
  v31 = OUTLINED_FUNCTION_32_0((uint64_t)v30, sel_isHighlighted);
  v32 = OUTLINED_FUNCTION_13_56((uint64_t)v31);
  v33 = v32;
  v41 = OUTLINED_FUNCTION_38_0(v32, v34, v35, v36, v37, v38, v39, v40, v60);
  v42 = OUTLINED_FUNCTION_32_0(v41, sel_selectionStyle);
  v43 = (_BYTE *)(*(_QWORD *)&v2[qword_1ED17A788] + OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected);
  if (v42)
  {
    OUTLINED_FUNCTION_13();
    v44 = v33 & 1;
  }
  else
  {
    OUTLINED_FUNCTION_13();
    v44 = 0;
  }
  *v43 = v44;
  sub_1B15CC088();
  if ((v33 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_78();
    v45 = v68;
    v46 = v69;
    OUTLINED_FUNCTION_25_43(v67);
    v47 = (*(uint64_t (**)(uint64_t, void *, _QWORD, uint64_t, uint64_t))(v46 + 32))(1, v6, *(_QWORD *)&v2[qword_1ED17A750], v45, v46);
  }
  else
  {
    OUTLINED_FUNCTION_9_78();
    v55 = v68;
    v56 = v69;
    v57 = OUTLINED_FUNCTION_25_43(v67);
    v58 = OUTLINED_FUNCTION_32_0((uint64_t)v57, sel_isHighlighted);
    v47 = (*(uint64_t (**)(_QWORD, id, _QWORD, void *, _QWORD, uint64_t, uint64_t))(v56 + 16))(0, v58, 0, v6, *(_QWORD *)&v2[qword_1ED17A750], v55, v56);
  }
  v59 = OUTLINED_FUNCTION_38_0(v47, v48, v49, v50, v51, v52, v53, v54, v61);
  OUTLINED_FUNCTION_32_0(v59, sel_isSelected);
  _s5TeaUI6ActionC7triggeryyF_0();
}

void sub_1B1603874(void *a1, uint64_t a2, Swift::Bool a3, Swift::Bool a4)
{
  id v6;

  v6 = a1;
  TableViewCell.setSelected(_:animated:)(a3, a4);

}

Swift::Void __swiftcall TableViewCell.setHighlighted(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  char v3;
  char v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _BYTE *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  objc_super v61;

  v61.receiver = v2;
  v61.super_class = (Class)OUTLINED_FUNCTION_23_38();
  v5 = objc_msgSendSuper2(&v61, sel_setHighlighted_animated_, v4 & 1, v3 & 1);
  v6 = *(void **)&v2[qword_1ED17A778];
  OUTLINED_FUNCTION_197((uint64_t)v5, &qword_1ED17F300);
  v7 = v6;
  if ((OUTLINED_FUNCTION_6_100() & 1) != 0)
  {
    sub_1B13C06D0(&v55, (uint64_t)v58);
    v8 = v60;
    __swift_project_boxed_opaque_existential_1(v58, v59);
    v9 = OUTLINED_FUNCTION_6_16(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    if ((v9 & 1) != 0)
    {
      v17 = OUTLINED_FUNCTION_32_0(v9, sel_isHighlighted);
      OUTLINED_FUNCTION_21_41((uint64_t)v17, v18, v19, v20, v21, v22, v23, v24, v51, (uint64_t)v6, v53, v54, v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, v58[0], v58[1],
        v58[2],
        v59);
      v9 = OUTLINED_FUNCTION_11_59();
    }
    OUTLINED_FUNCTION_38_0(v9, v10, v11, v12, v13, v14, v15, v16, v51);
  }
  else
  {
    v57 = 0;
    v55 = 0u;
    v56 = 0u;
    sub_1B13F15EC((uint64_t)&v55, &qword_1ED17F308, &qword_1ED17F300);
  }
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_18_46();
  v25 = __swift_project_boxed_opaque_existential_1(v58, v59);
  v26 = OUTLINED_FUNCTION_32_0((uint64_t)v25, sel_isSelected);
  v27 = OUTLINED_FUNCTION_32_0((uint64_t)v26, sel_isHighlighted);
  v28 = OUTLINED_FUNCTION_13_56((uint64_t)v27);
  v29 = v28;
  v37 = OUTLINED_FUNCTION_38_0(v28, v30, v31, v32, v33, v34, v35, v36, v51);
  v38 = OUTLINED_FUNCTION_32_0(v37, sel_selectionStyle);
  v39 = (_BYTE *)(*(_QWORD *)&v2[qword_1ED17A788] + OBJC_IVAR____TtC5TeaUI13SeparatorView_isHighlighted);
  if (v38)
  {
    OUTLINED_FUNCTION_13();
    v40 = v29 & 1;
  }
  else
  {
    OUTLINED_FUNCTION_13();
    v40 = 0;
  }
  *v39 = v40;
  sub_1B15CBF6C();
  OUTLINED_FUNCTION_9_78();
  v41 = v59;
  v42 = v60;
  OUTLINED_FUNCTION_25_43(v58);
  v43 = (*(uint64_t (**)(_QWORD, void *, _QWORD, uint64_t, uint64_t))(v42 + 32))(v29 & 1, v6, *(_QWORD *)&v2[qword_1ED17A750], v41, v42);
  OUTLINED_FUNCTION_38_0(v43, v44, v45, v46, v47, v48, v49, v50, v52);
  _s5TeaUI6ActionC7triggeryyF_0();
}

void sub_1B1603AD0(void *a1, uint64_t a2, Swift::Bool a3, Swift::Bool a4)
{
  id v6;

  v6 = a1;
  TableViewCell.setHighlighted(_:animated:)(a3, a4);

}

id sub_1B1603B18(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  v2 = TableViewCell.accessibilityCustomActions.getter();

  if (v2)
  {
    sub_1B13A1818(0, (unint64_t *)&qword_1ED183860);
    v3 = (void *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t TableViewCell.accessibilityCustomActions.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)OUTLINED_FUNCTION_4();
  v1 = objc_msgSendSuper2(&v5, sel_accessibilityCustomActions);
  if (!v1)
    return 0;
  v2 = v1;
  OUTLINED_FUNCTION_10((uint64_t)v1, (unint64_t *)&qword_1ED183860);
  v3 = sub_1B16B9B54();

  return v3;
}

void sub_1B1603C00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v5;

  v3 = a3;
  if (a3)
  {
    sub_1B13A1818(0, (unint64_t *)&qword_1ED183860);
    v3 = sub_1B16B9B54();
  }
  v5 = a1;
  TableViewCell.accessibilityCustomActions.setter(v3);

}

void TableViewCell.accessibilityCustomActions.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  objc_class *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v1;
  v5 = (objc_class *)OUTLINED_FUNCTION_4();
  v6 = *MEMORY[0x1E0DEEDD8] & *v1;
  v37 = *(id *)((char *)v1 + qword_1ED17A778);
  v7 = v37;
  v8 = *(void **)(v6 + 80);
  OUTLINED_FUNCTION_197((uint64_t)v5, &qword_1EEF35458);
  v9 = v37;
  v10 = OUTLINED_FUNCTION_3_0();
  if ((v10 & 1) == 0)
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    v31 = sub_1B13F15EC((uint64_t)&v33, &qword_1EEF35460, &qword_1EEF35458);
    if (a1)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v12 = OUTLINED_FUNCTION_67_0(v10, v11);
  v13 = OUTLINED_FUNCTION_32_0(v12, sel_ts_privateAccessibilityCustomActions);
  OUTLINED_FUNCTION_10((uint64_t)v13, (unint64_t *)&qword_1ED183860);
  v14 = sub_1B16B9B54();

  v8 = (void *)OUTLINED_FUNCTION_27_39(v15, v16, v17, v18, v19, v20, v21, v22, (uint64_t)v32.receiver, (uint64_t)v32.super_class, v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35, v36, (uint64_t)v37, v38, v39,
                 v40,
                 v41);
  v23 = (*(uint64_t (**)(uint64_t, id, uint64_t))(v2 + 16))(v14, v7, v2);
  v31 = OUTLINED_FUNCTION_38_0(v23, v24, v25, v26, v27, v28, v29, v30, (uint64_t)v32.receiver);
  if (!a1)
    goto LABEL_5;
LABEL_3:
  OUTLINED_FUNCTION_10(v31, (unint64_t *)&qword_1ED183860);
  sub_1B16B9B48();
  OUTLINED_FUNCTION_12();
LABEL_6:
  v32.receiver = v3;
  v32.super_class = v5;
  objc_msgSendSuper2(&v32, sel_setAccessibilityCustomActions_, v8);

  OUTLINED_FUNCTION_20_13();
}

void TableViewCell.accessibilityCustomActions.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = TableViewCell.accessibilityCustomActions.getter();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1603E10(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = sub_1B16B9740();
    TableViewCell.accessibilityCustomActions.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    TableViewCell.accessibilityCustomActions.setter(*a1);
    OUTLINED_FUNCTION_0_0();
  }
}

id sub_1B1603E50(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  TableViewCell.tsaxAccessibilityLabelForReordering.getter();
  v3 = v2;

  if (v3)
  {
    v4 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t TableViewCell.tsaxAccessibilityLabelForReordering.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;

  v1 = *(void **)(v0 + qword_1ED17A778);
  v2 = swift_dynamicCastObjCProtocolConditional();
  if (v2)
  {
    v3 = v1;
    v4 = OUTLINED_FUNCTION_2_0((uint64_t)v3, sel_tsaxAccessibilityLabelForReordering);
    if (v4)
    {
      v5 = v4;
      v2 = sub_1B16B9860();

    }
    else
    {

      return 0;
    }
  }
  return v2;
}

id TableViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B1603F8C(uint64_t a1)
{

  OUTLINED_FUNCTION_43(qword_1ED17A788);
  OUTLINED_FUNCTION_43(qword_1ED17A780);
  OUTLINED_FUNCTION_43(qword_1ED17A758);
  OUTLINED_FUNCTION_43(qword_1ED17A768);
  OUTLINED_FUNCTION_43(qword_1ED17A750);
  return sub_1B13E766C(*(_QWORD *)(a1 + qword_1ED17A770));
}

id sub_1B1604000()
{
  return TableViewCell.separator.getter();
}

uint64_t TableViewCell.keyCommandBlocks.getter(uint64_t a1)
{
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[24];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = MEMORY[0x1E0DEE9D8];
  v2 = *(void **)&v1[qword_1ED17A778];
  v37 = (uint64_t)v2;
  OUTLINED_FUNCTION_197(a1, (unint64_t *)&qword_1ED1816F8);
  v3 = v2;
  v4 = OUTLINED_FUNCTION_3_0();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_31_31(v4, v5, v6, v7, v8, v9, v10, v11, v33, v34, v35, v36, (uint64_t)v2, v38[0]);
    v12 = v39;
    v13 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    sub_1B1492298(v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  else
  {
    OUTLINED_FUNCTION_16_10();
    OUTLINED_FUNCTION_57_4(v15, (unint64_t *)&qword_1ED181700, (unint64_t *)&qword_1ED1816F8, (uint64_t)&protocol descriptor for KeyCommandBlockProviderType, v16, v17, v18, v19, v33);
  }
  v20 = objc_msgSend(v1, sel_accessoryView);
  if (!v20
    || (*(_QWORD *)v38 = v20,
        OUTLINED_FUNCTION_10((uint64_t)v20, (unint64_t *)&qword_1ED1838A0),
        v21 = OUTLINED_FUNCTION_3_0(),
        (v21 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    goto LABEL_9;
  }
  if (!v35)
  {
LABEL_9:
    OUTLINED_FUNCTION_57_4(v21, (unint64_t *)&qword_1ED181700, (unint64_t *)&qword_1ED1816F8, (uint64_t)&protocol descriptor for KeyCommandBlockProviderType, v25, v26, v27, v28, v33);
    return v41;
  }
  OUTLINED_FUNCTION_31_31(v21, v22, v23, v24, v25, v26, v27, v28, v33, v34, v35, v36, v37, v38[0]);
  v29 = v39;
  v30 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  sub_1B1492298(v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v41;
}

uint64_t sub_1B16041CC(uint64_t a1)
{
  return TableViewCell.keyCommandBlocks.getter(a1);
}

id sub_1B16041EC()
{
  void *v0;

  return objc_msgSend(v0, sel_selectedBackgroundView);
}

void sub_1B1604214(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setSelectedBackgroundView_, a1);

}

void sub_1B1604248(unint64_t *a1@<X8>)
{
  TableViewCell.selectionBehavior.getter(a1);
}

uint64_t TableViewCell<>.shouldMonitorScroll.getter(uint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 16))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50), a1) & 1;
}

uint64_t TableViewCell<>.shouldMonitorMotion.getter(uint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50), a1) & 1;
}

void TableViewCell<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a3 + 24))(a1, a2, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50), a3);
  OUTLINED_FUNCTION_0_0();
}

void TableViewCell<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a3 + 32))(a1, a2, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50), a3);
  OUTLINED_FUNCTION_0_0();
}

void TableViewCell<>.blueprintViewportMonitor(_:viewportMotionEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a3 + 40))(a1, a2, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50), a3);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B16043CC(uint64_t a1, uint64_t a2)
{
  return TableViewCell<>.shouldMonitorMotion.getter(*(_QWORD *)(a2 - 8));
}

uint64_t sub_1B16043D4(uint64_t a1, uint64_t a2)
{
  return TableViewCell<>.shouldMonitorScroll.getter(*(_QWORD *)(a2 - 8));
}

void sub_1B16043DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  TableViewCell<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(a1, a2, *(_QWORD *)(a4 - 8));
}

void sub_1B16043E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  TableViewCell<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)(a1, a2, *(_QWORD *)(a4 - 8));
}

void sub_1B16043EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  TableViewCell<>.blueprintViewportMonitor(_:viewportMotionEnabled:)(a1, a2, *(_QWORD *)(a4 - 8));
}

uint64_t TableViewCell<>.setContextMenuPreviewing(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a2 + 8))(a1, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50), a2);
}

uint64_t sub_1B160444C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TableViewCell<>.setContextMenuPreviewing(_:)(a1, *(_QWORD *)(a3 - 8));
}

id sub_1B1604470(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1602E68(a1, *(char **)(v1 + 16));
}

id sub_1B1604478(int a1)
{
  uint64_t v1;

  return sub_1B16030C8(a1, *(char **)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

id sub_1B1604488(int a1)
{
  uint64_t v1;

  return sub_1B1602B9C(a1, *(char **)(v1 + 16));
}

unint64_t sub_1B1604494()
{
  unint64_t result;

  result = qword_1EEF35468;
  if (!qword_1EEF35468)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for TableViewCellViewLayout, &type metadata for TableViewCellViewLayout);
    atomic_store(result, (unint64_t *)&qword_1EEF35468);
  }
  return result;
}

uint64_t sub_1B16044D8()
{
  return 16;
}

__n128 sub_1B16044E4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t storeEnumTagSinglePayload for TableViewCellViewLayout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B160453C + 4 * byte_1B16D901D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1604570 + 4 * asc_1B16D9018[v4]))();
}

uint64_t sub_1B1604570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1604578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1604580);
  return result;
}

uint64_t sub_1B160458C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1604594);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1604598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B16045A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TableViewCellViewLayout()
{
  return &type metadata for TableViewCellViewLayout;
}

uint64_t sub_1B16045BC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TableViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TableViewCell);
}

void ShineTransform.motionTransform(shineSize:viewSize:requestSize:)(uint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;

  v3 = *v1;
  if (*v1 == 6)
  {
    v4 = 0x8000000000000000;
LABEL_6:
    *a1 = v4;
    return;
  }
  v5 = v1[1];
  v6 = OUTLINED_FUNCTION_25();
  v7 = OUTLINED_FUNCTION_25();
  sub_1B1454350(v3);
  sub_1B1454350(v5);
  v8 = floor(OUTLINED_FUNCTION_1_146());
  if (v8 < 0.0)
  {
    __break(1u);
  }
  else
  {
    v9 = floor(OUTLINED_FUNCTION_1_146());
    sub_1B145C72C(v3);
    sub_1B145C72C(v5);
    if (v9 >= 0.0)
    {
      *(double *)(v7 + 16) = -v8;
      *(double *)(v7 + 24) = v8;
      *(double *)(v7 + 32) = -v9;
      *(double *)(v7 + 40) = v9;
      *(_QWORD *)(v7 + 48) = 0;
      *(_BYTE *)(v7 + 56) = 3;
      v4 = v6 | 0x6000000000000000;
      *(_QWORD *)(v6 + 16) = v7;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_1B1604754()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B160477C()
{
  return swift_deallocObject();
}

void ShineTransform.Expression.range(shineSize:viewSize:requestSize:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  if (floor(sub_1B16047D0(a1, a2, a3, a4, a5, a6)) < 0.0)
    __break(1u);
}

double sub_1B16047D0(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t *v6;
  uint64_t v13;
  double (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v13 = *v6;
  switch(*v6)
  {
    case 0:
      return a1;
    case 1:
      a1 = a2;
      break;
    case 2:
      a1 = a3;
      break;
    case 3:
      a1 = a4;
      break;
    case 4:
      a1 = a5;
      break;
    case 5:
      a1 = a6;
      break;
    default:
      v14 = *(double (**)(uint64_t))(v13 + 24);
      v18 = *(_QWORD *)(v13 + 16);
      sub_1B1454350(v18);
      v15 = swift_retain();
      v16 = sub_1B16047D0(v15, a1, a2, a3, a4, a5, a6);
      a1 = v14(v16);
      swift_release();
      sub_1B145C72C(v18);
      break;
  }
  return a1;
}

unint64_t + infix(_:_:)@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  return sub_1B13AC1D8(a1, (uint64_t)sub_1B1507EA8, a2, a3);
}

uint64_t sub_1B16048E4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16) >= 6uLL)
    swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t - infix(_:_:)@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  return sub_1B13AC1D8(a1, (uint64_t)sub_1B1507ECC, a2, a3);
}

unint64_t / infix(_:_:)@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  return sub_1B13AC1D8(a1, (uint64_t)sub_1B1507EF4, a2, a3);
}

unint64_t destroy for ShineTransform(unint64_t *a1)
{
  unint64_t result;
  int v3;

  result = *a1;
  v3 = -1;
  if (result < 0xFFFFFFFF)
    v3 = result;
  if (v3 - 6 < 0)
  {
    if (result >= 6)
      swift_release();
    result = a1[1];
    if (result >= 6)
      return swift_release();
  }
  return result;
}

unint64_t *_s5TeaUI14ShineTransformOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  LODWORD(v5) = -1;
  if (*a2 < 0xFFFFFFFF)
    v5 = *a2;
  if ((int)v5 - 6 < 0)
  {
    if (v4 >= 6)
      v4 = swift_retain();
    *a1 = v4;
    v6 = a2[1];
    if (v6 >= 6)
      v6 = swift_retain();
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

unint64_t *assignWithCopy for ShineTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v4 = *a1;
  LODWORD(v5) = -1;
  if (*a1 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = *a1;
  v7 = v6 - 6;
  v8 = *a2;
  if (*a2 < 0xFFFFFFFF)
    v5 = *a2;
  v9 = v5 - 6;
  if ((v7 & 0x80000000) == 0)
  {
    if (v9 < 0)
    {
      if (v8 >= 6)
        v8 = swift_retain();
      *a1 = v8;
      v10 = a2[1];
      if (v10 >= 6)
        v10 = swift_retain();
LABEL_27:
      a1[1] = v10;
      return a1;
    }
    goto LABEL_17;
  }
  if ((v9 & 0x80000000) == 0)
  {
    if (v4 >= 6)
      swift_release();
    if (a1[1] >= 6)
      swift_release();
LABEL_17:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 >= 6)
  {
    if (v8 >= 6)
    {
      *a1 = v8;
      swift_retain();
      swift_release();
    }
    else
    {
      swift_release();
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v8;
    if (v8 >= 6)
      swift_retain();
  }
  v10 = a2[1];
  if (a1[1] < 6)
  {
    if (v10 >= 6)
    {
      a1[1] = v10;
      swift_retain();
      return a1;
    }
    goto LABEL_27;
  }
  if (v10 >= 6)
  {
    a1[1] = v10;
    swift_retain();
    swift_release();
  }
  else
  {
    swift_release();
    a1[1] = a2[1];
  }
  return a1;
}

unint64_t *assignWithTake for ShineTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *a1;
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 6 >= 0)
    goto LABEL_4;
  v7 = *a2;
  LODWORD(v8) = -1;
  if (*a2 < 0xFFFFFFFF)
    v8 = *a2;
  if ((int)v8 - 6 >= 0)
  {
    if (v4 >= 6)
      swift_release();
    if (a1[1] >= 6)
      swift_release();
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 >= 6)
  {
    if (v7 >= 6)
    {
      *a1 = v7;
      swift_release();
      goto LABEL_18;
    }
    swift_release();
  }
  *a1 = v7;
LABEL_18:
  v9 = a2[1];
  if (a1[1] >= 6)
  {
    if (v9 >= 6)
    {
      a1[1] = v9;
      swift_release();
      return a1;
    }
    swift_release();
  }
  a1[1] = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for ShineTransform(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF9 && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483641);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 6;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShineTransform(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 6;
  }
  return result;
}

uint64_t sub_1B1604D04(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 6;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShineTransform.Expression(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_retain();
  *a1 = v3;
  return a1;
}

unint64_t *assignWithCopy for ShineTransform.Expression(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_retain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for ShineTransform.Expression(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShineTransform.Expression(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShineTransform.Expression(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 5;
  }
  return result;
}

uint64_t StateCommandButton.identifier.getter()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70));
  OUTLINED_FUNCTION_13();
  v2 = *v1;
  sub_1B16B9740();
  return v2;
}

uint64_t StateCommandButton.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x70));
  OUTLINED_FUNCTION_13();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*StateCommandButton.identifier.modify())()
{
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

void StateCommandButton.commandState.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v5 = v4[10];
  v6 = sub_1B16BA328();
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v22 - v10;
  v12 = (_QWORD *)((char *)v0 + v4[15]);
  OUTLINED_FUNCTION_13();
  if (*v12)
  {
    v15 = v12[1];
    ObjectType = swift_getObjectType();
    v17 = *v3 & *v0;
    v22 = *(_QWORD *)((char *)v0 + *(_QWORD *)(v17 + 0x98));
    v23 = ObjectType;
    v18 = (char *)v0 + *(_QWORD *)(v17 + 136);
    OUTLINED_FUNCTION_13();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v18, v6);
    v19 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 80);
    v20 = v4[11];
    v21 = v4[13];
    swift_unknownObjectRetain();
    v19(v22, v11, v5, v20, v21, v23, v15);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  else
  {
    OUTLINED_FUNCTION_83(v2, v13, v14, v4[11]);
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1605158(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1B16BA328();
  v4 = MEMORY[0x1E0C80A78](v2, v3);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - v6, a1, v4);
  StateCommandButton.commandState.setter();
}

void StateCommandButton.commandState.setter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t);
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v6 = v5[10];
  v7 = *(_QWORD *)(OUTLINED_FUNCTION_13_57() - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v25 - v10;
  v12 = (char *)v0 + v5[18];
  if (*(_QWORD *)v12)
  {
    v30 = *(_QWORD *)v12;
    v31 = *(_OWORD *)(v12 + 8);
    v13 = v5[11];
    v14 = sub_1B13C0F64();
    v15 = type metadata accessor for StateCommandValue(0, v13, v14, v5[13]);
    StateCommandValue.value(for:)(v3, v15, (uint64_t)&v29);
    v16 = v29;
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v1, sel_setImage_forState_, v16, 0);

  v17 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v4 & *v1) + 0x78));
  OUTLINED_FUNCTION_13();
  if (*v17)
  {
    v27 = v17[1];
    swift_endAccess();
    v26 = OUTLINED_FUNCTION_4();
    v18 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*v4 & *v1) + 0x98));
    v19 = *(_QWORD *)((*v4 & *v1) + 0x88);
    v28 = v3;
    v20 = (uint64_t)v1 + v19;
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_34_1((uint64_t)v11, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    v21 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_28_2();
    v22 = (_QWORD *)OUTLINED_FUNCTION_25();
    v22[2] = v6;
    v22[3] = v5[11];
    v22[4] = v5[12];
    v22[5] = v5[13];
    v22[6] = v21;
    swift_unknownObjectRetain();
    swift_retain();
    CommandCenterType.canExecute<A>(command:context:closure:)(v18, (uint64_t)v11, (uint64_t)sub_1B15EC6BC, (uint64_t)v22, v26, v27);
    swift_unknownObjectRelease();
    swift_release();
    OUTLINED_FUNCTION_21_2(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    swift_release();
    __swift_project_boxed_opaque_existential_1(&v30, v32);
    sub_1B16B806C();
    OUTLINED_FUNCTION_13_57();
    OUTLINED_FUNCTION_53_0();
    v23(v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  }
  else
  {
    OUTLINED_FUNCTION_5_13();
    OUTLINED_FUNCTION_53_0();
    v24(v3);
    swift_endAccess();
  }
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B160543C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void (*StateCommandButton.commandState.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_5_13();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  StateCommandButton.commandState.getter();
  return sub_1B16054F4;
}

void sub_1B16054F4(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    StateCommandButton.commandState.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    StateCommandButton.commandState.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

_QWORD *StateCommandButton.__allocating_init(command:stateImage:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return StateCommandButton.init(command:stateImage:)();
}

_QWORD *StateCommandButton.init(command:stateImage:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  void *v47;
  _QWORD *v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  objc_class *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  objc_super v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_6();
  v58 = v1;
  v59 = v2;
  v4 = v3;
  v52 = v5;
  v53 = (objc_class *)OUTLINED_FUNCTION_4();
  v6 = *MEMORY[0x1E0DEEDD8] & *v0;
  v7 = sub_1B16B7BE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)v4;
  v51 = *(_QWORD *)(v4 + 8);
  v13 = *(void **)(v4 + 16);
  v14 = (_QWORD *)((char *)v0 + *(_QWORD *)(v6 + 112));
  v15 = v0;
  sub_1B16B7BD4();
  v16 = sub_1B16B7BBC();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  *v14 = v16;
  v14[1] = v18;
  v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_1_147();
  v21 = (_QWORD *)((char *)v15 + *(_QWORD *)(v20 + 120));
  *v21 = 0;
  v21[1] = 0;
  OUTLINED_FUNCTION_1_147();
  *(_QWORD *)((char *)v15 + *(_QWORD *)(v22 + 128)) = 0;
  OUTLINED_FUNCTION_1_147();
  OUTLINED_FUNCTION_83((uint64_t)v15 + *(_QWORD *)(v23 + 136), v24, v25, *(_QWORD *)(v6 + 80));
  OUTLINED_FUNCTION_1_147();
  v27 = (_QWORD *)((char *)v15 + *(_QWORD *)(v26 + 144));
  v27[1] = 0;
  v27[2] = 0;
  *v27 = 0;
  OUTLINED_FUNCTION_1_147();
  OUTLINED_FUNCTION_14_54(v28, v29, v30, v31);
  *(_QWORD *)((char *)v15 + v16) = objc_msgSend(objc_allocWithZone(v32), sel_init);
  OUTLINED_FUNCTION_1_147();
  v34 = *(_QWORD *)(v33 + 168);
  v35 = objc_allocWithZone(MEMORY[0x1E0DE7910]);
  v36 = v52;
  *(_QWORD *)((char *)v15 + v34) = objc_msgSend(v35, sel_init);
  OUTLINED_FUNCTION_1_147();
  *(_QWORD *)((char *)v15 + *(_QWORD *)(v37 + 152)) = v36;
  v38 = *v27;
  v39 = v27[1];
  v40 = (void *)v27[2];
  v41 = v51;
  *v27 = (uint64_t)v12;
  v27[1] = v41;
  v27[2] = (uint64_t)v13;
  v42 = v41;
  swift_retain();
  sub_1B1605838(v12, v42, v13);
  sub_1B15F3B78(v38, v39, v40);

  v57.receiver = v15;
  v57.super_class = v53;
  v43 = objc_msgSendSuper2(&v57, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v44 = v43;
  if (v12)
  {
    v54 = v12;
    v55 = v42;
    v56 = v13;
    v45 = v43;
    StateCommandButton.setImage(_:)();
    sub_1B15F3B78((uint64_t)v12, v42, v13);
  }
  else
  {
    v46 = v43;
  }
  v47 = *(void **)((char *)v44 + *(_QWORD *)((*v19 & *v44) + 0xA0));
  v48 = v44;
  v49 = v47;
  objc_msgSend(v48, sel_addTarget_action_forControlEvents_, v49, sel_handleAction, 64);

  swift_release();
  return v48;
}

id sub_1B1605838(id result, uint64_t a2, void *a3)
{
  if (result)
  {
    swift_retain();
    return a3;
  }
  return result;
}

void StateCommandButton.setImage(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v4 = *MEMORY[0x1E0DEEDD8] & *v1;
  v38 = *(_QWORD *)(v4 + 0x58);
  v5 = sub_1B16BA328();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v6, v7);
  v39 = (char *)&v37 - v8;
  sub_1B1605AC8();
  MEMORY[0x1E0C80A78](v9, v10);
  v42 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v37 - v14;
  v16 = sub_1B16BA2D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *v3;
  v21 = v3[1];
  v23 = (void *)v3[2];
  v37 = v4;
  v24 = (_QWORD *)((char *)v1 + *(_QWORD *)(v4 + 144));
  v25 = *v24;
  v26 = v24[1];
  v27 = (void *)v24[2];
  *v24 = v22;
  v24[1] = v21;
  v24[2] = (uint64_t)v23;
  swift_retain();
  v28 = v23;
  sub_1B15F3B78(v25, v26, v27);
  sub_1B16BA2E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
  {
    sub_1B16BA2C8();
    sub_1B14F93D0((uint64_t)v15);
  }
  else
  {
    OUTLINED_FUNCTION_34_1((uint64_t)v20, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
  }
  v29 = v17;
  v30 = (uint64_t)v42;
  if (*v24)
  {
    v31 = v24[1];
    v32 = (void *)v24[2];
    v43 = *v24;
    v44 = v31;
    v45 = v32;
    swift_retain();
    v33 = v32;
    v34 = (uint64_t)v39;
    StateCommandButton.commandState.getter();
    v35 = sub_1B13C0F64();
    v36 = type metadata accessor for StateCommandValue(0, v38, v35, *(_QWORD *)(v37 + 104));
    StateCommandValue.value(for:)(v34, v36, (uint64_t)&v46);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v34, v41);

    swift_release();
  }
  sub_1B16BA2BC();
  OUTLINED_FUNCTION_34_1(v30, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  __swift_storeEnumTagSinglePayload(v30, 0, 1, v16);
  sub_1B16BA2EC();
  OUTLINED_FUNCTION_21_2(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  OUTLINED_FUNCTION_47();
}

void sub_1B1605AC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17CC10)
  {
    sub_1B16BA2D4();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED17CC10);
  }
}

void sub_1B1605B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Class v43;
  uint64_t v44;

  OUTLINED_FUNCTION_6();
  a19 = v21;
  a20 = v22;
  v23 = v20;
  v24 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v25 = *MEMORY[0x1E0DEEDD8] & *v20;
  v26 = sub_1B16B7BE0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v28);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = (_QWORD *)((char *)v23 + *(_QWORD *)(v25 + 112));
  sub_1B16B7BD4();
  v32 = sub_1B16B7BBC();
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  *v31 = v32;
  v31[1] = v34;
  v35 = (_QWORD *)((char *)v23 + *(_QWORD *)((*v24 & *v23) + 0x78));
  *v35 = 0;
  v35[1] = 0;
  *(_QWORD *)((char *)v23 + *(_QWORD *)((*v24 & *v23) + 0x80)) = 0;
  v38 = OUTLINED_FUNCTION_83((uint64_t)v23 + *(_QWORD *)((*v24 & *v23) + 0x88), v36, v37, *(_QWORD *)(v25 + 80));
  v39 = (_QWORD *)((char *)v23 + *(_QWORD *)((*v24 & *v23) + 0x90));
  v39[1] = 0;
  v39[2] = 0;
  *v39 = 0;
  OUTLINED_FUNCTION_14_54(v38, v40, v41, v42);
  *(_QWORD *)&v30[(_QWORD)v23] = objc_msgSend(objc_allocWithZone(v43), sel_init);
  v44 = *(_QWORD *)((*v24 & *v23) + 0xA8);
  *(_QWORD *)((char *)v23 + v44) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);

  sub_1B16BA724();
  __break(1u);
}

#error "1B1605CCC: call analysis failed (funcsize=6)"

void StateCommandButton.configure(with:commandSource:context:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD *__return_ptr, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[8];

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v34 = v6;
  v9 = v8;
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v35 = v11[11];
  OUTLINED_FUNCTION_5_13();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v12, v13);

  v14 = v10;
  v15 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v10 & *v1) + 0x78));
  OUTLINED_FUNCTION_13();
  *v15 = v9;
  v15[1] = v7;
  swift_unknownObjectRelease();
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v14 & *v1) + 0x80)) = v5;
  swift_unknownObjectRetain();
  swift_release();
  v16 = (char *)v1 + *(_QWORD *)((*v14 & *v1) + 0x88);
  OUTLINED_FUNCTION_13();
  v17 = v11[10];
  v18 = sub_1B16BA328();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  swift_retain();
  v33 = v3;
  v19(v16, v3, v18);
  swift_endAccess();
  ObjectType = swift_getObjectType();
  v20 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x98));
  v21 = v17;
  v22 = v17;
  v23 = v11[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 80))(v20, v3, v21, v35);
  StateCommandButton.commandState.setter();
  v24 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_28_2();
  v25 = (_QWORD *)OUTLINED_FUNCTION_25();
  v25[2] = v22;
  v25[3] = v35;
  v26 = v11[12];
  v25[4] = v26;
  v25[5] = v23;
  v25[6] = v24;
  v27 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 96);
  swift_retain();
  v28 = v22;
  v27(v36, v20, v33, sub_1B16060A0, v25, v22, v35, v26, v23, ObjectType, v34);
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v36, v36[3]);
  v29 = *(id *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8));
  sub_1B16B806C();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v30 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_28_2();
  v31 = (_QWORD *)OUTLINED_FUNCTION_25();
  v31[2] = v28;
  v31[3] = v35;
  v31[4] = v26;
  v31[5] = v23;
  v31[6] = v30;

  swift_release();
  OUTLINED_FUNCTION_47();
}

void sub_1B1605FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = sub_1B16BA328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v11 - v7;
  swift_beginAccess();
  v9 = MEMORY[0x1B5E1F2F8](a2 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    StateCommandButton.commandState.setter();

  }
}

void sub_1B16060A0(uint64_t a1)
{
  uint64_t v1;

  sub_1B1605FE4(a1, *(_QWORD *)(v1 + 48));
}

void sub_1B16060B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1B5E1F2F8](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1B1606134();

  }
}

uint64_t sub_1B1606100()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B1606124()
{
  uint64_t v0;

  sub_1B16060B0(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1B1606134()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v3 = v2[10];
  v4 = sub_1B16BA328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v18 - v7;
  if (*(_QWORD *)((char *)v0 + v2[16]))
  {
    swift_retain();
    v9 = sub_1B164CA2C(v0);
    swift_release();
    v2 = (_QWORD *)(*v1 & *v0);
  }
  else
  {
    v9 = 0;
  }
  v10 = (_QWORD *)((char *)v0 + v2[15]);
  swift_beginAccess();
  if (*v10)
  {
    v11 = v10[1];
    ObjectType = swift_getObjectType();
    v13 = *v1 & *v0;
    v14 = *(_QWORD *)((char *)v0 + *(_QWORD *)(v13 + 0x98));
    v15 = (char *)v0 + *(_QWORD *)(v13 + 136);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v15, v4);
    v16 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
    swift_unknownObjectRetain();
    v16(v14, v8, v9, v3, ObjectType, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_unknownObjectRelease();
  }
  return swift_release();
}

id StateCommandButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void StateCommandButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B1606374()
{
  StateCommandButton.init(frame:)();
}

id StateCommandButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B16063B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_34();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_2_34();
  v3 = a1 + *(_QWORD *)(v2 + 136);
  OUTLINED_FUNCTION_5_13();
  OUTLINED_FUNCTION_53_0();
  v4(v3);
  OUTLINED_FUNCTION_2_34();
  sub_1B15F3B78(*(_QWORD *)(a1 + *(_QWORD *)(v5 + 144)), *(_QWORD *)(a1 + *(_QWORD *)(v5 + 144) + 8), *(void **)(a1 + *(_QWORD *)(v5 + 144) + 16));
  OUTLINED_FUNCTION_2_34();
  swift_release();
  OUTLINED_FUNCTION_2_34();

  OUTLINED_FUNCTION_2_34();
}

uint64_t sub_1B160647C()
{
  return StateCommandButton.identifier.getter();
}

Swift::Void __swiftcall StateCommandButton.prepareForReuse()()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8);
  v3 = *(void **)((char *)v0 + v2);
  *(_QWORD *)((char *)v0 + v2) = v1;

}

void sub_1B16064E4()
{
  StateCommandButton.prepareForReuse()();
}

void sub_1B1606504()
{
  StateCommandButton.commandState.getter();
}

uint64_t sub_1B1606528()
{
  return 32;
}

__n128 sub_1B1606534(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1B1606540()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B16BA328();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for StateCommandButton()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t method lookup function for StateCommandButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateCommandButton.__allocating_init(command:stateImage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

Swift::Bool __swiftcall CGRect.sizeGreaterThanZero()()
{
  double v0;
  double v1;

  return v1 > 0.0 && v0 > 0.0;
}

double CGRect.replace(width:)(double a1, double a2)
{
  return a2;
}

void CGRect.replace(height:)()
{
  OUTLINED_FUNCTION_0_169();
}

void CGRect.adding(width:)()
{
  OUTLINED_FUNCTION_1_148();
}

void CGRect.scaledBy(x:y:)(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  CGRect v6;

  v6.origin.x = a3;
  v6.origin.y = a4;
  v6.size.width = a5;
  v6.size.height = a6;
  CGRectGetWidth(v6);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_2_122();
}

__C::CGRect __swiftcall CGRect.replace(size:)(CGSize size)
{
  double v1;
  double v2;
  double v3;
  double v4;
  __C::CGRect result;

  OUTLINED_FUNCTION_1_148();
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

void CGRect.scale(by:)(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGRect v5;

  v5.origin.x = a2;
  v5.origin.y = a3;
  v5.size.width = a4;
  v5.size.height = a5;
  CGRectGetWidth(v5);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_2_122();
}

uint64_t dispatch thunk of VisualPrintable.visualDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

double BlueprintLayoutSupplementaryAttributesProviding.frame.getter()
{
  return 0.0;
}

uint64_t dispatch thunk of FloatingTabBarSearchProviding.isSearchActiveObservable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

TeaUI::CollectionViewSupplementaryKind_optional __swiftcall CollectionViewSupplementaryKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  TeaUI::CollectionViewSupplementaryKind_optional result;

  v2 = v1;
  v3 = sub_1B16BA7F0();
  OUTLINED_FUNCTION_29();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  OUTLINED_FUNCTION_31();
  return result;
}

TeaUI::CollectionViewSupplementaryKind_optional __swiftcall CollectionViewSupplementaryKind.init(representedElementKind:)(Swift::String_optional representedElementKind)
{
  char *v1;
  char *v2;
  void *object;
  uint64_t countAndFlagsBits;
  char v5;
  char v6;
  TeaUI::CollectionViewSupplementaryKind_optional result;

  v2 = v1;
  if (!representedElementKind.value._object)
    goto LABEL_11;
  object = representedElementKind.value._object;
  countAndFlagsBits = representedElementKind.value._countAndFlagsBits;
  if ((representedElementKind.value._countAndFlagsBits != 0xD000000000000024
     || representedElementKind.value._object != (void *)0x80000001B16E4CF0)
    && (OUTLINED_FUNCTION_0_170() & 1) == 0)
  {
    if (countAndFlagsBits == 0xD000000000000024 && object == (void *)0x80000001B16E4D20)
    {
      OUTLINED_FUNCTION_7_0();
LABEL_10:
      v5 = 1;
      goto LABEL_12;
    }
    v6 = OUTLINED_FUNCTION_0_170();
    OUTLINED_FUNCTION_7_0();
    if ((v6 & 1) != 0)
      goto LABEL_10;
LABEL_11:
    v5 = 2;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_7_0();
  v5 = 0;
LABEL_12:
  *v2 = v5;
  OUTLINED_FUNCTION_31();
  return result;
}

void sub_1B1606884(char *a1, char *a2)
{
  sub_1B14AB528(*a1, *a2);
}

void sub_1B1606890()
{
  sub_1B1679390();
}

uint64_t sub_1B1606898()
{
  return sub_1B149EC80();
}

void sub_1B16068A0()
{
  sub_1B1679674();
}

TeaUI::CollectionViewSupplementaryKind_optional sub_1B16068A8(Swift::String *a1)
{
  return CollectionViewSupplementaryKind.init(rawValue:)(*a1);
}

unint64_t sub_1B16068B8()
{
  unint64_t result;

  result = qword_1EEF35500;
  if (!qword_1EEF35500)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CollectionViewSupplementaryKind, &type metadata for CollectionViewSupplementaryKind);
    atomic_store(result, (unint64_t *)&qword_1EEF35500);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CollectionViewSupplementaryKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1606940 + 4 * byte_1B16D9365[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1606974 + 4 * asc_1B16D9360[v4]))();
}

uint64_t sub_1B1606974(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160697C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1606984);
  return result;
}

uint64_t sub_1B1606990(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1606998);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B160699C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B16069A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CollectionViewSupplementaryKind.Source(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1B158FCE4();
    v8 = *(int *)(v7 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B16B7D60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

_QWORD *assignWithCopy for CollectionViewSupplementaryKind.Source(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1B1406858((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CollectionViewSupplementaryKind.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1B158FCE4();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1B16B7D60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_QWORD *initializeWithTake for CollectionViewSupplementaryKind.Source(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1B158FCE4();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B16B7D60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for CollectionViewSupplementaryKind.Source(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1B1406858((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CollectionViewSupplementaryKind.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1B158FCE4();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1B16B7D60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B1606CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_onChangeBlock);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_onChangeBlock);
  *v3 = a1;
  v3[1] = a2;
  sub_1B13B9100(v4);
  return swift_retain();
}

char *sub_1B1606CE4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  char *v14;
  void *v15;
  char *v16;
  id v17;
  objc_super v19;

  v9 = (objc_class *)OUTLINED_FUNCTION_4();
  v10 = OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_segmentedControl;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3C58]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = &v12[OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_onChangeBlock];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  v19.receiver = v12;
  v19.super_class = v9;
  v14 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = *(void **)&v14[OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_segmentedControl];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  v17 = v15;
  objc_msgSend(v17, sel_addTarget_action_forControlEvents_, v16, sel_doSegmentChange, 4096);

  return v16;
}

void sub_1B1606E30()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_segmentedControl;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C58]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = &v0[OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_onChangeBlock];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;

  sub_1B16BA724();
  __break(1u);
}

uint64_t sub_1B1606EEC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  BOOL v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double Width;
  objc_super v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v14.receiver = v0;
  v14.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_segmentedControl];
  result = (uint64_t)objc_msgSend(v2, sel_numberOfSegments);
  if (result >= 1)
  {
    v4 = result;
    v5 = objc_msgSend(v0, sel_traitCollection);
    v6 = objc_msgSend(v5, sel_horizontalSizeClass);

    if (v6)
      v8 = v6 == (id)2;
    else
      v8 = 1;
    if (v8)
    {
      OUTLINED_FUNCTION_4_3();
      CGRectGetWidth(v15);
      objc_msgSend(v0, sel_layoutMargins);
      do
      {
        OUTLINED_FUNCTION_2_124();
        v7 = v1;
      }
      while (v4 != v1);
    }
    else if (v6 == (id)1)
    {
      OUTLINED_FUNCTION_4_3();
      CGRectGetWidth(v16);
      objc_msgSend(v0, sel_layoutMargins);
      do
      {
        OUTLINED_FUNCTION_2_124();
        v7 = v1;
      }
      while (v4 != v1);
    }
    objc_msgSend(v2, sel_sizeToFit, v7);
    OUTLINED_FUNCTION_4_3();
    v9 = CGRectGetWidth(v17) * 0.5;
    OUTLINED_FUNCTION_1_149();
    v10 = v9 - CGRectGetWidth(v18) * 0.5;
    OUTLINED_FUNCTION_4_3();
    v11 = CGRectGetHeight(v19) * 0.5;
    OUTLINED_FUNCTION_1_149();
    v12 = v11 - CGRectGetHeight(v20) * 0.5;
    OUTLINED_FUNCTION_1_149();
    Width = CGRectGetWidth(v21);
    OUTLINED_FUNCTION_1_149();
    return (uint64_t)objc_msgSend(v2, sel_setFrame_, v10, v12, Width, CGRectGetHeight(v22));
  }
  return result;
}

void sub_1B1607100()
{
  uint64_t v0;
  void (*v1)(id);
  void *v2;

  v1 = *(void (**)(id))(v0 + OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_onChangeBlock);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI24SectionViewSegmentedView_segmentedControl);
    swift_retain();
    v1(objc_msgSend(v2, sel_selectedSegmentIndex));
    sub_1B13B9100((uint64_t)v1);
  }
}

uint64_t type metadata accessor for SectionViewSegmentedView()
{
  return objc_opt_self();
}

void AccessoryContainerView.AccessoryType.view.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_10(a1, (unint64_t *)&qword_1ED186E50);
  static UIButton.disclosureIndicator.getter();
  OUTLINED_FUNCTION_0_0();
}

uint64_t static AccessoryContainerView.AccessoryType.== infix(_:_:)()
{
  return 1;
}

void AccessoryContainerView.AccessoryType.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

uint64_t AccessoryContainerView.AccessoryType.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t sub_1B16072A4()
{
  return AccessoryContainerView.AccessoryType.hashValue.getter();
}

void sub_1B16072B8()
{
  AccessoryContainerView.AccessoryType.hash(into:)();
}

void AccessoryContainerView.spacing.getter()
{
  OUTLINED_FUNCTION_0_50();
  OUTLINED_FUNCTION_48();
}

double sub_1B16072F4@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_spacing);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void AccessoryContainerView.spacing.setter(double a1)
{
  sub_1B16075B0(&OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_spacing, a1);
}

void sub_1B1607350()
{
  void *v0;
  id v1;
  id v2;
  unint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  v1 = objc_msgSend(v0, sel_superview);

  if (v1)
  {
    __break(1u);
  }
  else
  {
    v2 = objc_msgSend(v0, sel_subviews);
    sub_1B13A1818(0, (unint64_t *)&qword_1ED1838A0);
    v3 = sub_1B16B9B54();

    sub_1B160793C(v3);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setFrame_, v5, v7, v9, v11);
  }
}

void AccessoryContainerView.spacing.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_32_6(a1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void AccessoryContainerView.rightMargin.getter()
{
  OUTLINED_FUNCTION_0_50();
  OUTLINED_FUNCTION_48();
}

double sub_1B1607494@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_rightMargin);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void AccessoryContainerView.rightMargin.setter(double a1)
{
  sub_1B16075B0(&OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_rightMargin, a1);
}

void AccessoryContainerView.rightMargin.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_32_6(a1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void AccessoryContainerView.leftMargin.getter()
{
  OUTLINED_FUNCTION_0_50();
  OUTLINED_FUNCTION_48();
}

double sub_1B1607554@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_leftMargin);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void AccessoryContainerView.leftMargin.setter(double a1)
{
  sub_1B16075B0(&OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_leftMargin, a1);
}

void sub_1B16075B0(_QWORD *a1, double a2)
{
  uint64_t v2;
  double *v4;

  v4 = (double *)(v2 + *a1);
  OUTLINED_FUNCTION_13();
  *v4 = a2;
  sub_1B1607350();
  OUTLINED_FUNCTION_14_55();
}

void AccessoryContainerView.leftMargin.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_32_6(a1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

double AccessoryContainerView.itemSize.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_50();
  return *(double *)v0;
}

__n128 sub_1B160765C@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_itemSize);
  swift_beginAccess();
  result = *v3;
  *a2 = *v3;
  return result;
}

void sub_1B16076AC(double *a1)
{
  AccessoryContainerView.itemSize.setter(*a1, a1[1]);
}

void AccessoryContainerView.itemSize.setter(double a1, double a2)
{
  uint64_t v2;
  double *v5;

  v5 = (double *)(v2 + OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_itemSize);
  OUTLINED_FUNCTION_13();
  *v5 = a1;
  v5[1] = a2;
  sub_1B1607350();
  OUTLINED_FUNCTION_14_55();
}

void AccessoryContainerView.itemSize.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_32_6(a1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1607754(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B1607350();
  OUTLINED_FUNCTION_0_0();
}

void AccessoryContainerView.__allocating_init(height:views:)()
{
  OUTLINED_FUNCTION_9_79();
  OUTLINED_FUNCTION_10_69();
  OUTLINED_FUNCTION_22();
}

{
  OUTLINED_FUNCTION_9_79();
  OUTLINED_FUNCTION_10_69();
  OUTLINED_FUNCTION_22();
}

id AccessoryContainerView.init(height:views:)(unint64_t a1, double a2)
{
  char *v2;
  objc_class *v5;
  char *v6;
  id v12;
  id result;
  uint64_t v14;
  uint64_t i;
  id v16;
  objc_super v17;

  v5 = (objc_class *)OUTLINED_FUNCTION_4();
  v6 = &v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_touchInsets];
  *(_OWORD *)v6 = xmmword_1B16D94A0;
  *((_OWORD *)v6 + 1) = xmmword_1B16D94A0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_spacing] = 0x4034000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_rightMargin] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_leftMargin] = 0;
  __asm { FMOV            V0.2D, #24.0 }
  *(_OWORD *)&v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_itemSize] = _Q0;
  *(double *)&v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_cellHeight] = a2;
  v17.receiver = v2;
  v17.super_class = v5;
  v12 = objc_msgSendSuper2(&v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1B160793C(a1);
  objc_msgSend(v12, sel_setFrame_);
  result = objc_msgSend(v12, sel_setClipsToBounds_, 0);
  if (!(a1 >> 62))
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_3;
LABEL_8:

    OUTLINED_FUNCTION_29();
    return v12;
  }
  OUTLINED_FUNCTION_49();
  v14 = sub_1B16BA76C();
  result = (id)OUTLINED_FUNCTION_29();
  if (!v14)
    goto LABEL_8;
LABEL_3:
  if (v14 >= 1)
  {
    for (i = 0; i != v14; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_78_0();
      v16 = OUTLINED_FUNCTION_3_22(a1 + 8 * i);
      objc_msgSend(v12, sel_addSubview_, v16);

    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B160793C(unint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  if (a1 >> 62)
  {
    sub_1B16B9740();
    v1 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_beginAccess();
  result = swift_beginAccess();
  if (__OFSUB__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    return swift_beginAccess();
  }
  return result;
}

char *AccessoryContainerView.__allocating_init(height:type:)(uint64_t a1, double a2)
{
  id v3;

  OUTLINED_FUNCTION_10(a1, (unint64_t *)&qword_1ED186E50);
  v3 = static UIButton.disclosureIndicator.getter();
  return AccessoryContainerView.__allocating_init(height:view:)(v3, a2);
}

char *AccessoryContainerView.__allocating_init(height:view:)(void *a1, double a2)
{
  objc_class *v2;
  uint64_t inited;
  id v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v15;

  sub_1B1426CBC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C95D0;
  *(_QWORD *)(inited + 32) = a1;
  v15 = inited;
  sub_1B16B9B78();
  v6 = objc_allocWithZone(v2);
  v7 = a1;
  v8 = (char *)AccessoryContainerView.init(height:views:)(v15, a2);
  objc_msgSend(v7, sel_bounds);
  v10 = v9;
  v12 = v11;
  v13 = &v8[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_itemSize];
  OUTLINED_FUNCTION_13();
  *(_QWORD *)v13 = v10;
  *((_QWORD *)v13 + 1) = v12;
  sub_1B1607350();

  return v8;
}

void AccessoryContainerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0_0();
}

void AccessoryContainerView.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_touchInsets];
  *(_OWORD *)v1 = xmmword_1B16D94A0;
  *((_OWORD *)v1 + 1) = xmmword_1B16D94A0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_spacing] = 0x4034000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_rightMargin] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_leftMargin] = 0;
  __asm { FMOV            V0.2D, #24.0 }
  *(_OWORD *)&v0[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_itemSize] = _Q0;

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall AccessoryContainerView.layoutSubviews()()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  double v6;
  id v7;
  SEL v8;
  objc_super v9;
  CGRect v10;
  CGRect v11;

  v9.receiver = v0;
  v9.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  OUTLINED_FUNCTION_13();
  v1 = objc_msgSend(v0, sel_subviews);
  OUTLINED_FUNCTION_10((uint64_t)v1, (unint64_t *)&qword_1ED1838A0);
  v2 = sub_1B16B9B54();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_8:
    OUTLINED_FUNCTION_29();
    return;
  }
  OUTLINED_FUNCTION_49();
  v3 = sub_1B16BA76C();
  OUTLINED_FUNCTION_29();
  if (!v3)
    goto LABEL_8;
LABEL_3:
  if (v3 >= 1)
  {
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_13();
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_78_0();
      v5 = OUTLINED_FUNCTION_3_22(v2 + 8 * v4++);
      objc_msgSend(v0, sel_bounds);
      CGRectGetHeight(v10);
      v6 = OUTLINED_FUNCTION_23_2();
      objc_msgSend(v7, v8, v6);
      v11.origin.x = OUTLINED_FUNCTION_23_2();
      CGRectGetMaxX(v11);

    }
    while (v3 != v4);
    goto LABEL_8;
  }
  __break(1u);
}

Swift::Bool __swiftcall AccessoryContainerView.point(inside:with:)(CGPoint inside, UIEvent_optional with)
{
  char *v2;
  double y;
  double x;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGPoint v22;
  CGRect v23;

  y = inside.y;
  x = inside.x;
  objc_msgSend(v2, sel_frame);
  v9 = UIEdgeInsetsInsetRect(v5, v6, v7, v8, *(double *)&v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_touchInsets], *(double *)&v2[OBJC_IVAR____TtC5TeaUI22AccessoryContainerView_touchInsets + 8]);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = objc_msgSend(v2, sel_superview);
  objc_msgSend(v2, sel_convertPoint_toView_, v16, x, y);
  v18 = v17;
  v20 = v19;

  v23.origin.x = v9;
  v23.origin.y = v11;
  v23.size.width = v13;
  v23.size.height = v15;
  v22.x = v18;
  v22.y = v20;
  return CGRectContainsPoint(v23, v22);
}

id AccessoryContainerView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void AccessoryContainerView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccessoryContainerView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void AccessoryContainerView.keyCommandBlocks.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28[2];
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = objc_msgSend(v0, sel_subviews);
  OUTLINED_FUNCTION_10((uint64_t)v1, (unint64_t *)&qword_1ED1838A0);
  v2 = sub_1B16B9B54();

  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_67_1();
    v3 = sub_1B16BA76C();
    OUTLINED_FUNCTION_20_0();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v3)
  {
    *(_QWORD *)&v28[0] = MEMORY[0x1E0DEE9D8];
    sub_1B1490DC0();
    if (v3 < 0)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_84_3();
      *(_QWORD *)&v26 = OUTLINED_FUNCTION_3_22(v2 + 8 * i);
      sub_1B13CC6B4(0, (unint64_t *)&qword_1ED1816F8);
      v5 = (id)v26;
      if ((OUTLINED_FUNCTION_13_58() & 1) == 0)
      {
        v31 = 0;
        v29 = 0u;
        v30 = 0u;
      }

      v6 = *(_QWORD *)&v28[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_16_57();
        sub_1B1490DC0();
        v6 = *(_QWORD *)&v28[0];
      }
      v7 = *(_QWORD *)(v6 + 16);
      if (v7 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1B1490DC0();
        v6 = *(_QWORD *)&v28[0];
      }
      *(_QWORD *)(v6 + 16) = v7 + 1;
      sub_1B1608958((uint64_t)&v29, v6 + 40 * v7 + 32);
    }
    OUTLINED_FUNCTION_20_0();
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    v9 = v6 + 32;
    sub_1B16B9740();
    v10 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1B16089B4(v9, (uint64_t)&v29);
      sub_1B1608958((uint64_t)&v29, (uint64_t)&v26);
      if (v27)
      {
        sub_1B13C06D0(&v26, (uint64_t)v28);
        sub_1B13C06D0(v28, (uint64_t)&v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_15_50(0, *(_QWORD *)(v10 + 16) + 1);
          v10 = v13;
        }
        v12 = *(_QWORD *)(v10 + 16);
        v11 = *(_QWORD *)(v10 + 24);
        if (v12 >= v11 >> 1)
        {
          OUTLINED_FUNCTION_15_50(v11 > 1, v12 + 1);
          v10 = v14;
        }
        *(_QWORD *)(v10 + 16) = v12 + 1;
        sub_1B13C06D0(&v26, v10 + 40 * v12 + 32);
      }
      else
      {
        sub_1B13A9C44((uint64_t)&v26, (unint64_t *)&qword_1ED181700, (unint64_t *)&qword_1ED1816F8);
      }
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v15 = *(_QWORD *)(v10 + 16);
  if (v15)
  {
    *(_QWORD *)&v28[0] = MEMORY[0x1E0DEE9D8];
    sub_1B1490DA4();
    v16 = v10 + 32;
    do
    {
      sub_1B13B4DC0(v16, (uint64_t)&v29);
      v17 = *((_QWORD *)&v30 + 1);
      v18 = v31;
      __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
      v20 = *(_QWORD *)&v28[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_16_57();
        sub_1B1490DA4();
        v20 = *(_QWORD *)&v28[0];
      }
      v21 = *(_QWORD *)(v20 + 16);
      if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_1B1490DA4();
        v20 = *(_QWORD *)&v28[0];
      }
      *(_QWORD *)(v20 + 16) = v21 + 1;
      *(_QWORD *)(v20 + 8 * v21 + 32) = v19;
      v16 += 40;
      --v15;
    }
    while (v15);
    OUTLINED_FUNCTION_29();
  }
  else
  {
    OUTLINED_FUNCTION_29();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v22 = *(_QWORD *)(v20 + 16);
  if (v22)
  {
    OUTLINED_FUNCTION_67_1();
    v23 = 0;
    v24 = MEMORY[0x1E0DEE9D8];
    do
    {
      v25 = *(_QWORD *)(v20 + 8 * v23++ + 32);
      *(_QWORD *)&v29 = v24;
      sub_1B16B9740();
      OUTLINED_FUNCTION_49();
      sub_1B1492298(v25);
      OUTLINED_FUNCTION_29();
      v24 = v29;
    }
    while (v22 != v23);
    OUTLINED_FUNCTION_20_0();
  }
  OUTLINED_FUNCTION_20_0();
}

void sub_1B1608500()
{
  AccessoryContainerView.keyCommandBlocks.getter();
}

Swift::Void __swiftcall AccessoryContainerView.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  void *v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BOOL4, _BOOL4, uint64_t, uint64_t);
  uint64_t v27;
  _BOOL4 v28;
  _BOOL4 v29;
  unint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  id v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_subviews);
  OUTLINED_FUNCTION_10((uint64_t)v6, (unint64_t *)&qword_1ED1838A0);
  v8 = v7;
  v9 = sub_1B16B9B54();

  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_13:
    OUTLINED_FUNCTION_46();
    swift_bridgeObjectRelease();
    return;
  }
  OUTLINED_FUNCTION_67_1();
  v10 = sub_1B16BA76C();
  OUTLINED_FUNCTION_20_0();
  if (!v10)
    goto LABEL_13;
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
  }
  else
  {
    v11 = 0;
    v12 = (unint64_t *)&qword_1ED17AFF8;
    v13 = &protocol descriptor for Editable;
    v14 = v9 & 0xC000000000000001;
    v28 = animated;
    v29 = _;
    v30 = v9 & 0xC000000000000001;
    do
    {
      if (v14)
        OUTLINED_FUNCTION_84_3();
      v15 = OUTLINED_FUNCTION_3_22(v9 + 8 * v11);
      v33 = v15;
      sub_1B13CC6B4(0, v12);
      v16 = v15;
      v17 = OUTLINED_FUNCTION_13_58();
      if ((v17 & 1) != 0)
      {
        OUTLINED_FUNCTION_67_0(v17, v18);
        v19 = v10;
        v20 = v9;
        v21 = v8;
        v22 = v13;
        v23 = v12;
        v24 = v35;
        v25 = v36;
        __swift_project_boxed_opaque_existential_1(v34, v35);
        v26 = *(void (**)(_BOOL4, _BOOL4, uint64_t, uint64_t))(v25 + 8);
        v27 = v25;
        v12 = v23;
        v13 = v22;
        v8 = v21;
        v9 = v20;
        v10 = v19;
        v14 = v30;
        v26(v29, v28, v24, v27);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      }
      else
      {
        v32 = 0;
        memset(v31, 0, sizeof(v31));

        sub_1B13A9C44((uint64_t)v31, (unint64_t *)&qword_1ED17B000, v12);
      }
      ++v11;
    }
    while (v10 != v11);
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_46();
  }
}

void AccessoryContainerView.hidesWhenEditing.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  void *v28;
  _OWORD v29[2];
  uint64_t v30;
  id v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v1 = objc_msgSend(v0, sel_subviews);
  OUTLINED_FUNCTION_10((uint64_t)v1, (unint64_t *)&qword_1ED1838A0);
  v3 = v2;
  v4 = sub_1B16B9B54();

  if (v4 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_49();
  for (; v5; v5 = sub_1B16BA76C())
  {
    v6 = v4 & 0xC000000000000001;
    v7 = (unint64_t *)&qword_1ED17AFF8;
    v8 = 4;
    v9 = &protocol descriptor for Editable;
    v27 = v4 & 0xC000000000000001;
    while (1)
    {
      if (v6)
        OUTLINED_FUNCTION_78_0();
      v10 = *(id *)(v4 + 8 * v8);
      v11 = v10;
      v12 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v31 = v10;
      sub_1B13CC6B4(0, v7);
      v13 = v11;
      v14 = swift_dynamicCast();
      if ((_DWORD)v14)
      {
        OUTLINED_FUNCTION_67_0(v14, v15);
        v16 = v5;
        v17 = v4;
        v18 = v3;
        v19 = v7;
        v28 = v13;
        v20 = v9;
        v21 = v33;
        v22 = v34;
        __swift_project_boxed_opaque_existential_1(v32, v33);
        v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 24);
        v24 = v21;
        v7 = v19;
        v3 = v18;
        v4 = v17;
        v5 = v16;
        v6 = v27;
        v25 = v22;
        v9 = v20;
        v26 = v23(v24, v25);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);

        if ((v26 & 1) == 0)
          goto LABEL_12;
      }
      else
      {
        v30 = 0;
        memset(v29, 0, sizeof(v29));
        sub_1B13A9C44((uint64_t)v29, (unint64_t *)&qword_1ED17B000, v7);

      }
      ++v8;
      if (v12 == v5)
        goto LABEL_12;
    }
    __break(1u);
LABEL_14:
    OUTLINED_FUNCTION_49();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_46();
}

void sub_1B1608914(Swift::Bool a1, Swift::Bool a2)
{
  AccessoryContainerView.setEditing(_:animated:)(a1, a2);
}

uint64_t sub_1B1608934()
{
  char v0;

  AccessoryContainerView.hidesWhenEditing.getter();
  return v0 & 1;
}

uint64_t sub_1B1608958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13E4534(0, (unint64_t *)&qword_1ED181700, (unint64_t *)&qword_1ED1816F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B16089B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13E4534(0, (unint64_t *)&qword_1ED181700, (unint64_t *)&qword_1ED1816F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B1608A14()
{
  unint64_t result;

  result = qword_1EEF35570;
  if (!qword_1EEF35570)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for AccessoryContainerView.AccessoryType, &type metadata for AccessoryContainerView.AccessoryType);
    atomic_store(result, (unint64_t *)&qword_1EEF35570);
  }
  return result;
}

void sub_1B1608A54(double *a1)
{
  AccessoryContainerView.spacing.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1608A78(double *a1)
{
  AccessoryContainerView.rightMargin.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1608A9C(double *a1)
{
  AccessoryContainerView.leftMargin.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t type metadata accessor for AccessoryContainerView()
{
  return objc_opt_self();
}

uint64_t method lookup function for AccessoryContainerView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccessoryContainerView.__allocating_init(height:views:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for AccessoryContainerView.AccessoryType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1608B38 + 4 * byte_1B16D94B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1608B58 + 4 * byte_1B16D94B5[v4]))();
}

_BYTE *sub_1B1608B38(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1608B58(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1608B60(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1608B68(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1608B70(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1608B78(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryContainerView.AccessoryType()
{
  return &type metadata for AccessoryContainerView.AccessoryType;
}

void SectionBlueprintBookmarkApplicator.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  SectionBlueprintBookmarkApplicator.init(blueprintProvider:blueprintLayoutProvider:blueprintViewProvider:)(a1, a2, a3);
  OUTLINED_FUNCTION_31();
}

uint64_t *SectionBlueprintBookmarkApplicator.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 128), *(_QWORD *)(*v0 + 80));
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 136), *(_QWORD *)(v1 + 88));
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SectionBlueprintBookmarkApplicator.__deallocating_deinit()
{
  SectionBlueprintBookmarkApplicator.deinit();
  return swift_deallocClassInstance();
}

double SectionBlueprintBookmarkApplicator.prepare(bookmark:context:)@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void SectionBlueprintBookmarkApplicator.apply(bookmark:context:preparedContext:)()
{
  OUTLINED_FUNCTION_1_150();
  OUTLINED_FUNCTION_1_150();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B1608D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;

  v9[1] = *(_QWORD *)(a1 - 8);
  v9[2] = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  v9[3] = (char *)&a9 - v13;
  v14 = type metadata accessor for BlueprintBookmark();
  v9[4] = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v9[7] = v10;
  BlueprintLayoutProviderType.layoutBlueprint.getter(*(_QWORD *)(v11 + 88), *(_QWORD *)(v11 + 112));
  v16 = OUTLINED_FUNCTION_0_171();
  v17 = OUTLINED_FUNCTION_0_171();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v12 - 144) = v16;
  *(_QWORD *)(v12 - 136) = v17;
  *(_QWORD *)(v12 - 128) = AssociatedConformanceWitness;
  *(_QWORD *)(v12 - 120) = v19;
  type metadata accessor for BlueprintLayout();
}

uint64_t sub_1B1608E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t AssociatedConformanceWitness;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayout<A, B>, a1);
  v7 = sub_1B16B9F44();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1 + 72, a1);
  if ((v7 & 1) == 0)
  {
    v9 = *(_QWORD *)(v1 + 24);
    v10 = v3;
    v11 = *(_QWORD *)(v1 + 40);
    sub_1B140B98C(*(_QWORD *)(v1 + 48), (uint64_t)v4);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      *(_QWORD *)(v1 + 48) = *v4;
      v12 = BlueprintProviderType.blueprint.getter(v2, v11);
      v14 = MEMORY[0x1E0C80A78](v12, v13);
      v15 = *(_QWORD *)(v10 + 96);
      v16 = *(_QWORD *)(v10 + 120);
      v17 = *(_QWORD *)(v1 + 16);
      MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for Blueprint<A, B>, v17, v14);
      sub_1B16B9ECC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8) + 8))(v9, v17);
      result = swift_bridgeObjectRelease();
      if ((*(_BYTE *)(v1 + 80) & 1) == 0)
      {
        v18 = *(_QWORD *)(v1 + 72);
        v19 = *(_QWORD *)(v1 + 56);
        v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
        swift_getAssociatedTypeWitness();
        *(_QWORD *)(v1 + 48) = v15;
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 88);
        v23 = swift_checkMetadataState();
        v22(v18, v23, AssociatedConformanceWitness);

        result = sub_1B1408F9C(v5 - 144, v1 + 72);
        if ((*(_BYTE *)(v1 + 104) & 1) == 0)
          sub_1B16091E8(v19);
      }
    }
    else
    {
      return sub_1B140BB84((uint64_t)v4);
    }
  }
  return result;
}

void sub_1B1609084()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1609150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = BlueprintSection.identifier.getter();
  if (v2 == v1 && v3 == v0)
    v5 = 1;
  else
    v5 = sub_1B16BA910(v2, v3, v1);
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1B16091B4()
{
  sub_1B1609084();
}

uint64_t sub_1B16091D8(char a1)
{
  return a1 & 1;
}

void sub_1B16091E8(uint64_t a1)
{
  BlueprintLayoutProviderType.layoutBlueprint.getter(*(_QWORD *)(*(_QWORD *)a1 + 88), *(_QWORD *)(*(_QWORD *)a1 + 112));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintLayout();
}

double sub_1B16092F0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  double v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  CGFloat v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  void *v19;
  double v20;
  double v21;
  uint64_t v23;
  CGRect v24;
  CGRect v25;

  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(&v23, a1);
  if ((v2 & 1) != 0)
  {
    v8 = *(_QWORD *)(v1 + 120);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 56);
    v10 = *(_QWORD *)(v1 + 96);
    v11 = (void *)v9(v10, v8);
    objc_msgSend(v11, sel_contentOffset);
    v13 = v12;

    v24.origin.x = v6;
    v24.origin.y = v5;
    v24.size.width = v4;
    v24.size.height = v3;
    CGRectGetMinY(v24);
    v14 = (void *)v9(v10, v8);
    objc_msgSend(v14, sel_adjustedContentInset);
  }
  else
  {
    v25.origin.x = v6;
    v25.origin.y = v5;
    v25.size.width = v4;
    v25.size.height = v3;
    v15 = CGRectGetMinX(v25) + v7;
    v16 = *(_QWORD *)(v1 + 120);
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 56);
    v18 = *(_QWORD *)(v1 + 96);
    v19 = (void *)v17(v18, v16);
    objc_msgSend(v19, sel_adjustedContentInset);
    v21 = v20;

    v13 = v15 - v21;
    v14 = (void *)v17(v18, v16);
    objc_msgSend(v14, sel_contentOffset);
  }

  return v13;
}

double sub_1B1609438@<D0>(_OWORD *a1@<X8>)
{
  return SectionBlueprintBookmarkApplicator.prepare(bookmark:context:)(a1);
}

void sub_1B160944C()
{
  SectionBlueprintBookmarkApplicator.apply(bookmark:context:preparedContext:)();
}

uint64_t method lookup function for SectionBlueprintBookmarkApplicator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SectionBlueprintBookmarkApplicator.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

BOOL static SectionViewControllerPresentation.needsPresentationUpdate(lhs:rhs:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v3 = a1[1];
  v4 = a2[1];
  switch(v3)
  {
    case 1:
      return v4 != 1;
    case 2:
      return v4 != 2;
    case 3:
      return v4 != 3;
  }
  if ((unint64_t)(v4 - 1) < 3)
    return 1;
  v6 = a1[2];
  v7 = a2[2];
  if (v3)
  {
    if (!v4)
      return 1;
    v8 = *a1;
    v9 = v8 == *a2 && v3 == v4;
    if (!v9 && (sub_1B16BA910(v8, v3, *a2) & 1) == 0)
      return 1;
  }
  else if (v4)
  {
    return 1;
  }
  return (v7 ^ v6) & 1;
}

BOOL static SectionSelectorStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SectionSelectorStyle.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t SectionSelectorStyle.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B16095CC()
{
  unint64_t result;

  result = qword_1EEF35578;
  if (!qword_1EEF35578)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for SectionSelectorStyle, &type metadata for SectionSelectorStyle);
    atomic_store(result, (unint64_t *)&qword_1EEF35578);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SectionSelectorStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1609654 + 4 * byte_1B16D9625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1609688 + 4 * byte_1B16D9620[v4]))();
}

uint64_t sub_1B1609688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1609690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1609698);
  return result;
}

uint64_t sub_1B16096A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B16096ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B16096B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B16096B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SectionSelectorStyle()
{
  return &type metadata for SectionSelectorStyle;
}

unint64_t destroy for SectionViewControllerPresentation(uint64_t a1)
{
  unint64_t result;
  int v3;

  result = *(_QWORD *)(a1 + 8);
  v3 = -1;
  if (result < 0xFFFFFFFF)
    v3 = result;
  if (v3 - 1 < 0)
  {
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24))
      return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for SectionViewControllerPresentation(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  LODWORD(v5) = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = *(_QWORD *)(a2 + 8);
  if ((int)v5 - 1 < 0)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
    v8 = (_OWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 24);
    sub_1B16B9740();
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v9;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *v8;
    }
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for SectionViewControllerPresentation(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  LODWORD(v4) = -1;
  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = *(_QWORD *)(a1 + 8);
  v6 = v5 - 1;
  if (*((_QWORD *)a2 + 1) < 0xFFFFFFFFuLL)
    v4 = *((_QWORD *)a2 + 1);
  v7 = v4 - 1;
  if ((v6 & 0x80000000) == 0)
  {
    if (v7 < 0)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
      v9 = (__int128 *)((char *)a2 + 24);
      v8 = *((_QWORD *)a2 + 3);
      sub_1B16B9740();
      if (!v8)
      {
        *(_OWORD *)(a1 + 24) = *v9;
        return a1;
      }
      v10 = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 24) = v8;
      goto LABEL_10;
    }
LABEL_14:
    v11 = *a2;
    v12 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
    return a1;
  }
  if ((v7 & 0x80000000) == 0)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24))
      swift_release();
    goto LABEL_14;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  v15 = *((_QWORD *)a2 + 3);
  if (v14)
  {
    if (v15)
    {
      v16 = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 24) = v15;
      *(_QWORD *)(a1 + 32) = v16;
      swift_retain();
      swift_release();
      return a1;
    }
    swift_release();
LABEL_23:
    *(_OWORD *)(a1 + 24) = *(__int128 *)((char *)a2 + 24);
    return a1;
  }
  if (!v15)
    goto LABEL_23;
  v10 = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 24) = v15;
LABEL_10:
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithTake for SectionViewControllerPresentation(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  __int128 v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v8 = *(_QWORD *)(a2 + 8);
    LODWORD(v9) = -1;
    if (v8 < 0xFFFFFFFF)
      v9 = *(_QWORD *)(a2 + 8);
    if ((int)v9 - 1 < 0)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v8;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 24);
      v11 = *(_QWORD *)(a1 + 24);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
      if (v11)
      {
        if (v10)
        {
          v12 = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 24) = v10;
          *(_QWORD *)(a1 + 32) = v12;
          swift_release();
          return a1;
        }
        swift_release();
      }
      else if (v10)
      {
        v13 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 24) = v10;
        *(_QWORD *)(a1 + 32) = v13;
        return a1;
      }
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      return a1;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24))
      swift_release();
  }
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectionViewControllerPresentation(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 1;
  if (v5 >= 3)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SectionViewControllerPresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_1B1609ACC(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

double sub_1B1609AF0(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0x7FFFFFFE)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionViewControllerPresentation()
{
  return &type metadata for SectionViewControllerPresentation;
}

uint64_t dispatch thunk of Focusable.isFocusable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_1B1609B40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  _BYTE *v10;
  void *v12;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = v2;
    v6 = (uint64_t *)(sub_1B16B9740() + 40);
    while (1)
    {
      v8 = (uint64_t (*)(uint64_t))*(v6 - 1);
      v7 = *v6;
      if (!v8)
      {
        OUTLINED_FUNCTION_113();
        goto LABEL_10;
      }
      v9 = *(_QWORD *)(v4 + 16);
      OUTLINED_FUNCTION_2_25();
      OUTLINED_FUNCTION_2_25();
      if ((v8(v9) & 1) != 0)
        break;
      v6 += 2;
      OUTLINED_FUNCTION_0_42();
      OUTLINED_FUNCTION_0_42();
      if (!--v3)
      {
        OUTLINED_FUNCTION_113();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_0_42();
LABEL_10:
    v12 = *(void **)(v4 + 16);
    *a2 = v12;
    a2[1] = v8;
    a2[2] = v7;
    return v12;
  }
  else
  {
LABEL_7:
    sub_1B1609C44();
    swift_allocError();
    *v10 = 0;
    return (id)swift_willThrow();
  }
}

uint64_t type metadata accessor for ShortcutItemHandlerMatcher()
{
  return objc_opt_self();
}

unint64_t sub_1B1609C44()
{
  unint64_t result;

  result = qword_1EEF35620;
  if (!qword_1EEF35620)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D97AC, &type metadata for ShortcutItemHandlerMatcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEF35620);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShortcutItemHandlerMatcher.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1609CCC + 4 * byte_1B16D9705[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1609D00 + 4 * byte_1B16D9700[v4]))();
}

uint64_t sub_1B1609D00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1609D08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1609D10);
  return result;
}

uint64_t sub_1B1609D1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1609D24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1609D28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1609D30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShortcutItemHandlerMatcher.Errors()
{
  return &type metadata for ShortcutItemHandlerMatcher.Errors;
}

unint64_t sub_1B1609D50()
{
  unint64_t result;

  result = qword_1EEF35628;
  if (!qword_1EEF35628)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D9784, &type metadata for ShortcutItemHandlerMatcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEF35628);
  }
  return result;
}

uint64_t sub_1B1609D8C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
    v5 = *(_QWORD *)(v3 + 24);
  else
    v5 = 0;
  *a2 = v4;
  a2[1] = v5;
  return sub_1B13C4AEC(v4);
}

uint64_t sub_1B1609DDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  if (*a1)
    v3 = a1[1];
  else
    v3 = 0;
  v4 = *a2;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_1B13C4AEC(v2);
  return sub_1B13B9100(v5);
}

uint64_t BlueprintCompositionalListItemSeparatorProvider.itemSeparatorHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  sub_1B13C4AEC(v1);
  return v1;
}

uint64_t BlueprintCompositionalListItemSeparatorProvider.__allocating_init(blueprintProvider:kindProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  BlueprintCompositionalListItemSeparatorProvider.init(blueprintProvider:kindProvider:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1B1609EF0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B1609F14()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void BlueprintCompositionalListItemSeparatorProvider.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B13B9100(v0[2]);
  sub_1B13C076C((uint64_t)(v0 + 4));
  swift_unknownObjectRelease();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((char *)v0 + *(_QWORD *)(*v0 + 120));
  OUTLINED_FUNCTION_1_151();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0_0();
}

uint64_t BlueprintCompositionalListItemSeparatorProvider.__deallocating_deinit()
{
  BlueprintCompositionalListItemSeparatorProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1609FC4()
{
  return 16;
}

__n128 sub_1B1609FD0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for BlueprintCompositionalListItemSeparatorProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCompositionalListItemSeparatorProvider.__allocating_init(blueprintProvider:kindProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1B1609FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PageViewControllerProviderType.viewController(for:visible:)(a1, 0, a3, a4);
}

uint64_t PageViewControllerProviderType.viewController(for:visible:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, a3, a4);
}

uint64_t PageViewControllerProviderType.viewController(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(a1, 1, a2);
}

uint64_t dispatch thunk of PageViewControllerProviderType.viewController(for:visible:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PageViewControllerProviderType.viewController(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t ImageDeserializer.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ImageDeserializer.init()()
{
  uint64_t v0;

  return v0;
}

void ImageDeserializer.deserialize(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_1B13C0F64();
  sub_1B160A0CC(a1, a2);
  sub_1B167B75C();
  if (!v4)
  {
    sub_1B160A110();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_1B160A0CC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_1B160A110()
{
  unint64_t result;

  result = qword_1EEF35630;
  if (!qword_1EEF35630)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D99CC, &type metadata for ImageDeserializer.ImageError);
    atomic_store(result, (unint64_t *)&qword_1EEF35630);
  }
  return result;
}

uint64_t ImageDeserializer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ImageDeserializer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B160A164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ImageDeserializer.__allocating_init()();
  *a1 = result;
  return result;
}

void sub_1B160A188(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  ImageDeserializer.deserialize(_:)(a1, a2);
  if (!v3)
    *a3 = v5;
}

uint64_t type metadata accessor for ImageDeserializer()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImageDeserializer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImageDeserializer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t storeEnumTagSinglePayload for ImageDeserializer.ImageError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B160A224 + 4 * asc_1B16D98E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B160A244 + 4 * byte_1B16D98E5[v4]))();
}

_BYTE *sub_1B160A224(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B160A244(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B160A24C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B160A254(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B160A25C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B160A264(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageDeserializer.ImageError()
{
  return &type metadata for ImageDeserializer.ImageError;
}

unint64_t sub_1B160A284()
{
  unint64_t result;

  result = qword_1EEF356D0;
  if (!qword_1EEF356D0)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D99A4, &type metadata for ImageDeserializer.ImageError);
    atomic_store(result, (unint64_t *)&qword_1EEF356D0);
  }
  return result;
}

uint64_t BlueprintViewHeaderFooterProviderType.footer(for:with:in:)()
{
  return 0;
}

uint64_t dispatch thunk of BlueprintViewHeaderFooterProviderType.register(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of BlueprintViewHeaderFooterProviderType.header(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of BlueprintViewHeaderFooterProviderType.footer(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t ModalViewSession.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B16B9740();
  return v1;
}

uint64_t ModalViewSession.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_125() + 20);
  v4 = OUTLINED_FUNCTION_3_43();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ModalViewSession()
{
  uint64_t result;

  result = qword_1ED17C878;
  if (!qword_1ED17C878)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ModalViewSession.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_125() + 24);
  return sub_1B150E110(v3, a1);
}

double ModalViewSession.duration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t v15;

  OUTLINED_FUNCTION_6_10();
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_3_43();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_2_125();
  sub_1B150E110(v0 + *(int *)(v10 + 24), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1B152F140((uint64_t)v4);
    sub_1B16B7B80();
    return fabs(v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_1B16B7B38();
    v12 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return v12;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalViewSession(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B16B7BB0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1B16B9740();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v11))
    {
      sub_1B13A3DB4();
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for ModalViewSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B16B7BB0();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v8(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!(_DWORD)result)
    return v8(v6, v5);
  return result;
}

_QWORD *initializeWithCopy for ModalViewSession(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B16B7BB0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_1B16B9740();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v10))
  {
    sub_1B13A3DB4();
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  return a1;
}

_QWORD *assignWithCopy for ModalViewSession(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int EnumTagSinglePayload;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B16B7BB0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)a1 + v12, 1, v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    sub_1B13A3DB4();
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ModalViewSession(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B16B7BB0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    sub_1B13A3DB4();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for ModalViewSession(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int EnumTagSinglePayload;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B16B7BB0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)a1 + v13, 1, v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v10);
  if (!(_DWORD)v8)
  {
    if (!EnumTagSinglePayload)
    {
      v12(v14, v15, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    sub_1B13A3DB4();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalViewSession()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B160AAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_3_43();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      OUTLINED_FUNCTION_6_10();
      v9 = v11;
      v10 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ModalViewSession()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B160AB48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_3_43();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      OUTLINED_FUNCTION_6_10();
      v9 = v11;
      v10 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_1B160ABD4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B16B7BB0();
  if (v0 <= 0x3F)
  {
    sub_1B13A3DB4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

BOOL static BlueprintViewCellSelectionBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintViewCellSelectionBehavior.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t BlueprintViewCellSelectionBehavior.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B160ACF8()
{
  unint64_t result;

  result = qword_1EEF356D8;
  if (!qword_1EEF356D8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintViewCellSelectionBehavior, &type metadata for BlueprintViewCellSelectionBehavior);
    atomic_store(result, (unint64_t *)&qword_1EEF356D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BlueprintViewCellSelectionBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B160AD80 + 4 * byte_1B16D9AD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B160ADB4 + 4 * byte_1B16D9AD0[v4]))();
}

uint64_t sub_1B160ADB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160ADBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B160ADC4);
  return result;
}

uint64_t sub_1B160ADD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B160ADD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B160ADDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160ADE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintViewCellSelectionBehavior()
{
  return &type metadata for BlueprintViewCellSelectionBehavior;
}

uint64_t dispatch thunk of BlueprintViewCellSelectionProviderType.selectedIndexPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintViewCellSelectionProviderType.selectedIndexPath.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BlueprintViewCellSelectionProviderType.selectionBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

_QWORD *sub_1B160AE18(void *__src, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  memcpy(v3 + 2, __src, 0x20DuLL);
  v3[68] = a2;
  v3[69] = a3;
  return v3;
}

uint64_t sub_1B160AE5C()
{
  uint64_t v0;
  _BYTE v2[528];

  memcpy(v2, (const void *)(v0 + 16), 0x20DuLL);
  sub_1B1417ADC((uint64_t)v2);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1B160AEA8()
{
  sub_1B160AE5C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BlueprintLayoutCollectionPipelineProcessorState()
{
  return objc_opt_self();
}

void BlueprintCaches.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7[5];

  OUTLINED_FUNCTION_1_152();
  OUTLINED_FUNCTION_2_126();
  v7[3] = a2;
  v7[4] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
  sub_1B16B8894();
  swift_release();
  OUTLINED_FUNCTION_0_172();
}

void BlueprintCaches.cache<A>(_:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4;

  OUTLINED_FUNCTION_1_152();
  OUTLINED_FUNCTION_2_126();
  sub_1B16B8888();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B160AFF0();
  v4 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(a2, v4 ^ 1u, 1, a1);
  OUTLINED_FUNCTION_0_172();
}

void sub_1B160AFF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17F318[0])
  {
    sub_1B145B8F0();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, qword_1ED17F318);
  }
}

uint64_t BlueprintCaches.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t dispatch thunk of static BlueprintCacheType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for BlueprintCaches()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FloatingTabBarSidebarImpressionManagerDelegate.floatingTabBarSidebarImpressionManager(_:didStartSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FloatingTabBarSidebarImpressionManagerDelegate.floatingTabBarSidebarImpressionManager(_:didEndSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FloatingTabBarSidebarImpressionManagerDelegate.floatingTabBarSidebarImpressionManager(_:didStartImpression:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FloatingTabBarSidebarImpressionManagerDelegate.floatingTabBarSidebarImpressionManager(_:didEndImpression:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionPipelineSubProcessorType.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(a14 + 8))();
}

uint64_t BlueprintPipelineProcessor.__allocating_init<A>(processor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  BlueprintPipelineProcessor.init<A>(processor:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1B160B108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v14[8];
  uint64_t v15;
  __int128 v16;
  char v17;
  char v18;

  v9 = *(_BYTE *)(a2 + 1);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_BYTE *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 33);
  v14[0] = *(_BYTE *)a2;
  v14[1] = v9;
  v15 = v10;
  v16 = *(_OWORD *)(a2 + 16);
  v17 = v11;
  v18 = v12;
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t))(a9 + 40))(a1, v14, a3, a4, a8);
}

uint64_t sub_1B160B170()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t BlueprintPipelineProcessor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t BlueprintPipelineProcessor.__deallocating_deinit()
{
  BlueprintPipelineProcessor.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B160B204(uint64_t a1, uint64_t a2)
{
  return BlueprintPipelineProcessor.process(blueprint:runOptions:completion:)(a1, a2);
}

uint64_t sub_1B160B224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1B160B270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for BlueprintPipelineProcessorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B160B224(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for BlueprintPipelineProcessorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B160B224(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1B160B270(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for BlueprintPipelineProcessorResult(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1B160B270(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1B160B3D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t dispatch thunk of BlueprintPipelineProcessorType.process(blueprint:runOptions:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t method lookup function for BlueprintPipelineProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintPipelineProcessor.__allocating_init<A>(processor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void **assignWithTake for BarViewStyle(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for BarViewStyle(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BarViewStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BarViewStyle()
{
  return &type metadata for BarViewStyle;
}

BOOL static BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t BlueprintViewControllerDelegateType.blueprint(_:didSelect:at:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 48))(a1, a2, a3, a5, a6);
}

uint64_t BlueprintViewControllerDelegateType.blueprint(_:previewViewControllerFor:)()
{
  return 0;
}

uint64_t sub_1B160B5D4(uint64_t a1, _QWORD *a2)
{
  return BlueprintViewControllerDelegateType.blueprint(_:didCreateInfiniteScrollRequest:)(a1, a2);
}

uint64_t BlueprintViewControllerDelegateType.blueprint(_:didCreateInfiniteScrollRequest:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2[3];
  v3 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v2);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v3 + 24))(0, v2, v3);
}

uint64_t BlueprintViewControllerDelegateType.blueprintRestrictsDraggingToApplication(_:)()
{
  return 0;
}

uint64_t BlueprintViewControllerDelegateType.blueprint(_:shouldBypassVoiceOverSelectionCheckFor:at:)()
{
  return 0;
}

unint64_t sub_1B160B650()
{
  unint64_t result;

  result = qword_1EEF35710;
  if (!qword_1EEF35710)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger, &type metadata for BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger);
    atomic_store(result, (unint64_t *)&qword_1EEF35710);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutOptionsChangeTrigger(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
  {
    v6 = *a1;
    if (v6 >= 5)
      v7 = v6 - 4;
    else
      v7 = 0;
    if (v7 >= 0xB)
      return v7 - 10;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 14;
    if (a2 + 14 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B160B6DC + 4 * byte_1B16D9DA0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutOptionsChangeTrigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 14;
  if (a3 + 14 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF2)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1B160B788 + 4 * byte_1B16D9DAA[v5]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1B160B7BC + 4 * byte_1B16D9DA5[v5]))();
}

uint64_t sub_1B160B7BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160B7C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B160B7CCLL);
  return result;
}

uint64_t sub_1B160B7D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B160B7E0);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1B160B7E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160B7EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1B160B7F8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 4;
  return result;
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B160B854 + 4 * byte_1B16D9DB4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B160B888 + 4 * byte_1B16D9DAF[v4]))();
}

uint64_t sub_1B160B888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160B890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B160B898);
  return result;
}

uint64_t sub_1B160B8A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B160B8ACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B160B8B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160B8B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger()
{
  return &type metadata for BlueprintLayoutOptionsChangeTrigger.AccessibilityChangeTrigger;
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintReadableContentGuideDidChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didSelect:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didSelect:at:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didDeselect:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:commitViewActionRequestFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:previewViewControllerFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:willCommitPreviewFor:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:createdImpression:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:createdImpressionSection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:createdImpressionSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didStartSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didStartImpression:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didStartImpressionSection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:cancelledImpression:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:layoutOptionsDidChange:triggeredBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didCreateInfiniteScrollRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:move:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 168))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:didExecuteCommand:contextProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 176))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintDidStartDraggingSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintDidEndDraggingSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintRestrictsDraggingToApplication(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintWillPerformDrop(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintDidPerformDrop(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:sharingActivityProviderFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 224))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprint(_:shouldBypassVoiceOverSelectionCheckFor:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 232))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintWillEndContextMenuInteraction(_:animator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 240))();
}

uint64_t dispatch thunk of BlueprintViewControllerDelegateType.blueprintWillDisplayContextMenu(_:animator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 248))();
}

uint64_t BlueprintCompositionalListDataSourceProxy.__allocating_init(diffableDataSourceProvider:)()
{
  uint64_t v0;
  uint64_t result;

  result = OUTLINED_FUNCTION_4_100();
  *(_QWORD *)(result + 16) = v0;
  *(_BYTE *)(result + 24) = 1;
  return result;
}

uint64_t BlueprintCompositionalListDataSourceProxy.init(diffableDataSourceProvider:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_BYTE *)(v1 + 24) = 1;
  return v1;
}

uint64_t BlueprintCompositionalListDataSourceProxy.__allocating_init(dataSource:)()
{
  uint64_t v0;
  uint64_t result;

  result = OUTLINED_FUNCTION_4_100();
  *(_QWORD *)(result + 16) = v0;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t BlueprintCompositionalListDataSourceProxy.blueprintViewDataSource.getter()
{
  OUTLINED_FUNCTION_2_127();
  return swift_unknownObjectRetain();
}

uint64_t BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  if ((v0[24] & 1) != 0)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  OUTLINED_FUNCTION_6_101();
  v1 = v3(v4, v2);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1B160BAF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  return BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.setter(v2, v1);
}

uint64_t (*BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.getter();
  a1[1] = v3;
  return sub_1B160BB5C;
}

uint64_t sub_1B160BB5C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  if ((a2 & 1) == 0)
    return BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.setter(*a1, v2);
  v3 = swift_unknownObjectRetain();
  BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.setter(v3, v2);
  return swift_unknownObjectRelease();
}

uint64_t BlueprintCompositionalListDataSourceProxy.registerKeyCommandTraversal(observable:)()
{
  OUTLINED_FUNCTION_2_127();
  OUTLINED_FUNCTION_6_101();
  OUTLINED_FUNCTION_3_114();
  return OUTLINED_FUNCTION_3_38();
}

void BlueprintCompositionalListDataSourceProxy.identifiers(for:)()
{
  uint64_t v0;
  uint64_t v1;

  BlueprintCompositionalListDataSourceProxy.blueprintViewDataSource.getter();
  v1 = OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_9_80(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 72));
  OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_31();
}

void BlueprintCompositionalListDataSourceProxy.indexPaths(for:)()
{
  uint64_t v0;
  uint64_t v1;

  BlueprintCompositionalListDataSourceProxy.blueprintViewDataSource.getter();
  v1 = OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_9_80(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 80));
  OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_31();
}

void BlueprintCompositionalListDataSourceProxy.handleDrop(sourceIndexPath:destinationIndexPath:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;

  if (v2[24] == 1)
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v2 + 120) + 8))(a1, a2, *(_QWORD *)(*(_QWORD *)v2 + 88));
  OUTLINED_FUNCTION_7();
}

Swift::Void __swiftcall BlueprintCompositionalListDataSourceProxy.registerReorderingHandlers()()
{
  _BYTE *v0;

  if (v0[24] == 1)
    (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 128) + 8))(*(_QWORD *)(*(_QWORD *)v0 + 88));
  OUTLINED_FUNCTION_7();
}

uint64_t BlueprintCompositionalListDataSourceProxy.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t BlueprintCompositionalListDataSourceProxy.__deallocating_deinit()
{
  BlueprintCompositionalListDataSourceProxy.deinit();
  return swift_deallocClassInstance();
}

void (*sub_1B160BD48(uint64_t **a1))(_QWORD *a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.modify(v2);
  return sub_1B13C6AF0;
}

uint64_t sub_1B160BD98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BlueprintCompositionalListDataSourceProxy.dragReorderDelegate.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B160BDC4()
{
  return 64;
}

__n128 sub_1B160BDD0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t method lookup function for BlueprintCompositionalListDataSourceProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCompositionalListDataSourceProxy.__allocating_init(diffableDataSourceProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BlueprintCompositionalListDataSourceProxy.__allocating_init(dataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1B160BE00(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1B160BE34(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1B160BE74(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRelease();
  return a1;
}

void type metadata accessor for BlueprintCompositionalListDataSourceProxy.DataSourceKind()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t ScrollToTopBlueprintAnimator.__allocating_init(viewProvider:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ScrollToTopBlueprintAnimator.init(viewProvider:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t ScrollToTopBlueprintAnimator.animate(context:animation:applyUpdates:)(uint64_t a1, uint64_t a2, void (*a3)(id (*)(uint64_t a1, uint64_t a2), uint64_t))
{
  uint64_t v3;

  swift_retain();
  a3(sub_1B160C080, v3);
  return swift_release();
}

id sub_1B160BF40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  double v12;
  double v13;
  void *v14;
  _QWORD v16[6];

  v5 = *a3;
  v6 = (void *)objc_opt_self();
  objc_msgSend(v6, sel_begin);
  v16[4] = a1;
  v16[5] = a2;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1B13F00E4;
  v16[3] = &block_descriptor_68;
  v7 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_setCompletionBlock_, v7);
  _Block_release(v7);
  v9 = *(_QWORD *)(v5 + 80);
  v8 = *(_QWORD *)(v5 + 88);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 56);
  v11 = (void *)v10(v9, v8);
  objc_msgSend(v11, sel_adjustedContentInset);
  v13 = v12;

  v14 = (void *)v10(v9, v8);
  objc_msgSend(v14, sel_setContentOffset_animated_, 1, 0.0, -v13);

  return objc_msgSend(v6, sel_commit);
}

id sub_1B160C080(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B160BF40(a1, a2, v2);
}

uint64_t ScrollToTopBlueprintAnimator.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t ScrollToTopBlueprintAnimator.__deallocating_deinit()
{
  ScrollToTopBlueprintAnimator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B160C0C4(uint64_t a1, uint64_t a2, void (*a3)(id (*)(uint64_t a1, uint64_t a2), uint64_t))
{
  return ScrollToTopBlueprintAnimator.animate(context:animation:applyUpdates:)(a1, a2, a3);
}

uint64_t sub_1B160C0E4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ScrollToTopBlueprintAnimator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScrollToTopBlueprintAnimator);
}

uint64_t method lookup function for ScrollToTopBlueprintAnimator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScrollToTopBlueprintAnimator.__allocating_init(viewProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t ActivityTrait.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B16BA7F0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t ActivityTrait.rawValue.getter()
{
  return 0x657370616C6C6F63;
}

unint64_t sub_1B160C1C0()
{
  unint64_t result;

  result = qword_1EEF357F0;
  if (!qword_1EEF357F0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ActivityTrait, &type metadata for ActivityTrait);
    atomic_store(result, (unint64_t *)&qword_1EEF357F0);
  }
  return result;
}

uint64_t sub_1B160C208@<X0>(BOOL *a1@<X8>)
{
  return ActivityTrait.init(rawValue:)(a1);
}

void sub_1B160C214(_QWORD *a1@<X8>)
{
  *a1 = 0x657370616C6C6F63;
  a1[1] = 0xEF72616265646953;
}

uint64_t sub_1B160C23C()
{
  sub_1B160C380();
  return sub_1B16B9B30();
}

uint64_t sub_1B160C298()
{
  sub_1B160C380();
  return sub_1B16B9B00();
}

uint64_t storeEnumTagSinglePayload for ActivityTrait(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B160C324 + 4 * byte_1B16DA038[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B160C344 + 4 * byte_1B16DA03D[v4]))();
}

_BYTE *sub_1B160C324(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B160C344(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B160C34C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B160C354(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B160C35C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B160C364(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityTrait()
{
  return &type metadata for ActivityTrait;
}

unint64_t sub_1B160C380()
{
  unint64_t result;

  result = qword_1EEF357F8;
  if (!qword_1EEF357F8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ActivityTrait, &type metadata for ActivityTrait);
    atomic_store(result, (unint64_t *)&qword_1EEF357F8);
  }
  return result;
}

uint64_t sub_1B160C3BC()
{
  return NSBundle.appVersion()()._countAndFlagsBits;
}

uint64_t dispatch thunk of AppVersionProviding.appVersion()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id MotionTransformable.transform(layer:bounds:motionDisabled:)(void *a1, uint64_t a2)
{
  CGFloat v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  CATransform3D v10;

  v3 = *(double *)a2;
  if (*(_BYTE *)(a2 + 8))
  {
    if (*(_BYTE *)(a2 + 8) == 1)
    {
      OUTLINED_FUNCTION_57();
      v4 = qword_1ED17B4F8;
      swift_retain();
      if (v4 != -1)
        swift_once();
      v10.m11 = v3;
      MotionTransformable.transform(motionData:layer:bounds:motionTransform:)();
      return (id)sub_1B13E9374(*(uint64_t *)&v3, 1);
    }
    else
    {
      v6 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
      *(_OWORD *)&v10.m11 = *MEMORY[0x1E0CD2610];
      *(_OWORD *)&v10.m13 = v6;
      v7 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
      *(_OWORD *)&v10.m21 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
      *(_OWORD *)&v10.m23 = v7;
      v8 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
      *(_OWORD *)&v10.m31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
      *(_OWORD *)&v10.m33 = v8;
      v9 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
      *(_OWORD *)&v10.m41 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
      *(_OWORD *)&v10.m43 = v9;
      return objc_msgSend(a1, sel_setTransform_, &v10);
    }
  }
  else
  {
    CATransform3DMakeScale(&v10, *(CGFloat *)a2, *(CGFloat *)a2, 1.0);
    return objc_msgSend(a1, sel_setTransform_, &v10);
  }
}

uint64_t dispatch thunk of MotionTransformable.motionTransform.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MotionTransformable.motionTransform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MotionTransformable.motionTransform.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MotionTransformable.motionDisabledTransform.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MotionTransformable.motionDisabledTransform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of MotionTransformable.motionDisabledTransform.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MotionTransformable.isMotionEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MotionTransformable.isMotionEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of MotionTransformable.isMotionEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of MotionTransformable.isMotionAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MotionTransformable.isMotionAllowed.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of MotionTransformable.isMotionAllowed.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of MotionTransformable.transform(motionData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t SplitView.model.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[176];

  v1 = v0 + OBJC_IVAR____TtC5TeaUI9SplitView_model;
  OUTLINED_FUNCTION_13();
  sub_1B160C664(v1, (uint64_t)v3);
  OUTLINED_FUNCTION_8_78((uint64_t)v3);
  return sub_1B160C834((uint64_t)v3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))sub_1B13C9BA0);
}

uint64_t sub_1B160C664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B160C6A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B160C6A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35808)
  {
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35808);
  }
}

uint64_t sub_1B160C6F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[176];

  v3 = *a1 + OBJC_IVAR____TtC5TeaUI9SplitView_model;
  swift_beginAccess();
  sub_1B160C664(v3, (uint64_t)v5);
  sub_1B160C664((uint64_t)v5, a2);
  return sub_1B160C834((uint64_t)v5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))sub_1B13C9BA0);
}

id sub_1B160C760(uint64_t a1)
{
  _BYTE v2[176];
  _BYTE v3[176];

  sub_1B160C664(a1, (uint64_t)v3);
  sub_1B160C664((uint64_t)v3, (uint64_t)v2);
  sub_1B160C834((uint64_t)v3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))sub_1B13C9BA0);
  return SplitView.model.setter((uint64_t)v2);
}

id SplitView.model.setter(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _BYTE v4[176];
  _BYTE v5[184];

  sub_1B160C664(a1, (uint64_t)v4);
  v2 = (uint64_t)v1 + OBJC_IVAR____TtC5TeaUI9SplitView_model;
  OUTLINED_FUNCTION_13();
  sub_1B160C664(v2, (uint64_t)v5);
  OUTLINED_FUNCTION_8_78((uint64_t)v4);
  sub_1B160C834((uint64_t)v5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))sub_1B13C9B68);
  return objc_msgSend(v1, sel_setNeedsDisplay);
}

uint64_t sub_1B160C834(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))
{
  uint64_t v4;

  LOBYTE(v4) = *(_BYTE *)(a1 + 168);
  sub_1B160C8A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    v4,
    a2);
  return a1;
}

uint64_t sub_1B160C8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))
{
  uint64_t result;

  if (a9 >> 1 != 0xFFFFFFFF || (a12 & 0xFE) != 0)
  {
    a23(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a23)(a13, a14, a15, a16, a17, a18, a19, a20, a21);
  }
  return result;
}

id (*SplitView.model.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  return sub_1B160C9E0;
}

id sub_1B160C9E0(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 24), sel_setNeedsDisplay);
  return result;
}

id SplitView.__allocating_init(model:frame:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_5_98());
  OUTLINED_FUNCTION_54();
  return SplitView.init(model:frame:)();
}

id SplitView.init(model:frame:)()
{
  const void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;
  _BYTE v17[176];
  _BYTE __dst[176];
  _BYTE v19[184];

  OUTLINED_FUNCTION_5_98();
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = (uint64_t)v1 + OBJC_IVAR____TtC5TeaUI9SplitView_model;
  sub_1B160CB24((uint64_t)v17);
  sub_1B160C664((uint64_t)v17, v3);
  memcpy(__dst, v0, 0xA9uLL);
  nullsub_1(__dst, v4, v5, v6, v7);
  OUTLINED_FUNCTION_13();
  sub_1B160C664(v3, (uint64_t)v19);
  sub_1B160C664((uint64_t)__dst, v3);
  v8 = sub_1B160C834((uint64_t)v19, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))sub_1B13C9B68);
  v16.receiver = v1;
  v16.super_class = ObjectType;
  return OUTLINED_FUNCTION_4_2(v8, sel_initWithFrame_, v9, v10, v11, v12, v13, v14, v16);
}

double sub_1B160CB24(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 64) = 0x1FFFFFFFELL;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_BYTE *)(a1 + 168) = 0;
  return result;
}

id SplitView.__allocating_init(frame:)()
{
  objc_class *v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id SplitView.init(frame:)()
{
  void *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;
  _BYTE v12[176];

  v1 = (objc_class *)OUTLINED_FUNCTION_2_129();
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC5TeaUI9SplitView_model;
  sub_1B160CB24((uint64_t)v12);
  v3 = sub_1B160C664((uint64_t)v12, v2);
  v11.receiver = v0;
  v11.super_class = v1;
  return OUTLINED_FUNCTION_4_2(v3, sel_initWithFrame_, v4, v5, v6, v7, v8, v9, v11);
}

void sub_1B160CC2C()
{
  void *v0;
  _BYTE v1[176];

  sub_1B160CB24((uint64_t)v1);
  OUTLINED_FUNCTION_8_78((uint64_t)v1);

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall SplitView.draw(_:)(__C::CGRect a1)
{
  void *v1;
  double v2;
  objc_super *v3;
  SEL v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  CGContext *v10;
  CGContext *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[8];
  _BYTE v37[176];
  void *v38;
  uint64_t v39;
  _OWORD v40[4];
  _OWORD v41[4];
  _BYTE v42[176];
  double v43[14];

  v38 = v1;
  v39 = OUTLINED_FUNCTION_2_129();
  v2 = OUTLINED_FUNCTION_54();
  objc_msgSendSuper2(v3, v4, v2);
  objc_msgSend(v1, sel_bounds);
  v6 = v5;
  v8 = v7;
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC5TeaUI9SplitView_model;
  OUTLINED_FUNCTION_13();
  sub_1B160C664(v9, (uint64_t)v42);
  sub_1B160C664((uint64_t)v42, (uint64_t)v43);
  if (sub_1B160CE9C((uint64_t)v43) != 1)
  {
    sub_1B160C664((uint64_t)v42, (uint64_t)v37);
    sub_1B160CEB4((uint64_t)v37);
    v10 = UIGraphicsGetCurrentContext();
    if (v10)
    {
      v11 = v10;
      if (v6 > 0.0 && v8 > 0.0)
      {
        sub_1B160CF68((uint64_t)v36, v6, v8, v43[0], v43[1]);
        v41[0] = v36[0];
        v41[1] = v36[1];
        v41[2] = v36[2];
        v41[3] = v36[3];
        v40[0] = v36[4];
        v40[1] = v36[5];
        v40[2] = v36[6];
        v40[3] = v36[7];
        OUTLINED_FUNCTION_0_173(*(uint64_t *)&v43[3], *(void **)&v43[2]);
        OUTLINED_FUNCTION_7_81((uint64_t)v36, (double *)v41);
        OUTLINED_FUNCTION_1_154(v12, v13, v14, v15, v16, v17, v18, v19, v28, v30, v32, v34);
        OUTLINED_FUNCTION_0_173(*(uint64_t *)&v43[13], *(void **)&v43[12]);
        OUTLINED_FUNCTION_7_81((uint64_t)v36, (double *)v40);

        v20 = sub_1B160C834((uint64_t)v42, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))sub_1B13C9B68);
        OUTLINED_FUNCTION_1_154(v20, v21, v22, v23, v24, v25, v26, v27, v29, v31, v33, v35);
        return;
      }

    }
    sub_1B160C834((uint64_t)v42, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char))sub_1B13C9B68);
  }
}

uint64_t sub_1B160CE9C(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 64) >> 1) > 0x80000000)
    return -(*(_QWORD *)(a1 + 64) >> 1);
  else
    return 0;
}

uint64_t sub_1B160CEB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v12;

  v2 = *(_QWORD *)(a1 + 104);
  v12 = *(void **)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v9 = *(_QWORD *)(a1 + 160);
  v10 = *(_BYTE *)(a1 + 168);
  sub_1B13C9BA0(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  sub_1B13C9BA0(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

long double sub_1B160CF68@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  double v8;
  double v9;
  double v10;
  long double v11;
  long double v12;
  long double v13;
  long double result;

  v8 = a2 * a4;
  v9 = a3 * 0.5;
  v10 = a5 * 3.14159265 / 180.0;
  if (a5 == 0.0)
    v10 = 6.28318531;
  v11 = tan(v10);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v12 = v9 / v11;
  v13 = v8 + v12;
  *(long double *)(a1 + 16) = v8 + v12;
  *(_QWORD *)(a1 + 24) = 0;
  result = v8 - v12;
  *(long double *)(a1 + 32) = result;
  *(double *)(a1 + 40) = a3;
  *(_QWORD *)(a1 + 48) = 0;
  *(double *)(a1 + 56) = a3;
  *(long double *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = 0;
  *(double *)(a1 + 80) = a2;
  *(_QWORD *)(a1 + 88) = 0;
  *(double *)(a1 + 96) = a2;
  *(double *)(a1 + 104) = a3;
  *(long double *)(a1 + 112) = result;
  *(double *)(a1 + 120) = a3;
  return result;
}

void sub_1B160D00C(uint64_t a1, double *a2, CGContextRef c, CGFloat a4, double a5)
{
  void *v5;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  id v15;
  CGContext *v16;
  id v17;
  unint64_t v18;
  const __CFArray *v19;
  uint64_t v20;
  const CGFloat *v21;
  CGGradient *v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CGPoint v32;

  v9 = *(void **)a1;
  v10 = *(uint64_t *)(a1 + 24);
  v29 = *(_QWORD *)(a1 + 8);
  v30 = *(uint64_t *)(a1 + 16);
  v12 = *(uint64_t *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a1 + 48);
  v28 = *(_QWORD *)(a1 + 64);
  v14 = *(char *)(a1 + 72);
  CGContextSaveGState(c);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  objc_msgSend(v15, sel_moveToPoint_, *a2, a2[1]);
  objc_msgSend(v15, sel_addLineToPoint_, a2[2], a2[3]);
  objc_msgSend(v15, sel_addLineToPoint_, a2[4], a2[5]);
  objc_msgSend(v15, sel_addLineToPoint_, a2[6], a2[7]);
  objc_msgSend(v15, sel_closePath);
  objc_msgSend(v15, sel_addClip);
  if ((v14 & 0x80000000) == 0)
  {
    objc_msgSend(v9, sel_setFill);
    objc_msgSend(v15, sel_fill);
    sub_1B13C9B68(v9, v29, v30, v10, v12, v11, v31, v13, v28, v14);
    v16 = c;
LABEL_20:
    CGContextRestoreGState(v16);
    goto LABEL_21;
  }
  v17 = objc_msgSend(v5, sel_traitCollection);
  v18 = sub_1B16B9740();
  sub_1B16AE82C(v18, v17);

  swift_bridgeObjectRelease();
  type metadata accessor for CGColor(0);
  v19 = (const __CFArray *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  v20 = GradientDescriptor.cgLocations.getter();
  if (v20)
    v21 = (const CGFloat *)(v20 + 32);
  else
    v21 = 0;
  v22 = CGGradientCreateWithColors(0, v19, v21);

  swift_bridgeObjectRelease();
  if (v22)
  {
    if ((v31 & 1) != 0)
    {
      if (v12 | v10 | v30 | v11)
      {
        v23 = v12 | v10 | v11;
        v16 = c;
        if (v30 == 1 && !v23)
        {
          v24 = a4 * 0.5;
          v25 = a5 * 0.0;
          v26 = 1.0;
LABEL_18:
          a4 = v24;
          goto LABEL_19;
        }
        if (v30 == 2 && !v23)
        {
          v24 = a4 * 0.5;
          v26 = 0.0;
          v25 = a5;
          goto LABEL_18;
        }
        if (v30 != 3 || v23)
        {
          if (v30 != 4 || v23)
          {
            if (v30 != 5 || v23)
            {
              if (v30 != 6 || v23)
              {
                if (v30 != 7 || v23)
                {
                  v26 = 0.0;
                  v24 = a4;
                  a4 = a4 * 0.0;
                }
                else
                {
                  v26 = 0.0;
                  v24 = a4 * 0.0;
                }
                v25 = a5;
                goto LABEL_19;
              }
              v25 = a5 * 0.0;
              v24 = a4;
              a4 = a4 * 0.0;
            }
            else
            {
              v24 = a4 * 0.0;
              v25 = a5 * 0.0;
            }
            v26 = 1.0;
          }
          else
          {
            v26 = 0.5;
            v25 = a5 * 0.5;
            v24 = a4;
            a4 = a4 * 0.0;
          }
        }
        else
        {
          v24 = a4 * 0.0;
          v26 = 0.5;
          v25 = a5 * 0.5;
        }
LABEL_19:
        v32.y = v26 * a5;
        v32.x = a4;
        CGContextDrawLinearGradient(v16, v22, *(CGPoint *)&v24, v32, 0);

        goto LABEL_20;
      }
      v24 = a4 * 0.5;
      v25 = a5 * 0.5;
      v26 = 1.0;
      a4 = a4 * 0.5;
    }
    else
    {
      v24 = *(double *)&v30 * a4;
      v26 = *(double *)&v11;
      v25 = *(double *)&v10 * a5;
      a4 = *(double *)&v12 * a4;
    }
    v16 = c;
    goto LABEL_19;
  }
LABEL_21:

}

Swift::Void __swiftcall SplitView.prepareForReuse()()
{
  _BYTE v0[176];
  _BYTE v1[176];

  sub_1B160CB24((uint64_t)v1);
  sub_1B160C664((uint64_t)v1, (uint64_t)v0);
  SplitView.model.setter((uint64_t)v0);
}

id SplitView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B160D4B8()
{
  SplitView.prepareForReuse()();
}

uint64_t type metadata accessor for SplitView()
{
  return objc_opt_self();
}

uint64_t method lookup function for SplitView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SplitView.__allocating_init(model:frame:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B160D514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_onChange);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_onChange);
  *v3 = a1;
  v3[1] = a2;
  return sub_1B13B9100(v4);
}

char *sub_1B160D534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  char *v10;
  void *v11;
  char *v12;
  objc_super v14;

  v5 = &v3[OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_onChange];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_switchControl;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3D18]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a3)
  {
    v9 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for SwitchTableViewCell();
  v10 = (char *)objc_msgSendSuper2(&v14, sel_initWithStyle_reuseIdentifier_, 1, v9);

  v11 = *(void **)&v10[OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_switchControl];
  v12 = v10;
  objc_msgSend(v11, sel_addTarget_action_forControlEvents_, v12, sel_valueChanged, 4096);
  objc_msgSend(v11, sel_setPreferredStyle_, 2);
  objc_msgSend(v12, sel_setAccessoryView_, v11);

  return v12;
}

void sub_1B160D6BC()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_onChange];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_switchControl;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D18]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1B16BA724();
  __break(1u);
}

void sub_1B160D778()
{
  uint64_t v0;
  void (*v1)(id);
  void *v2;

  v1 = *(void (**)(id))(v0 + OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_onChange);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_switchControl);
    swift_retain();
    v1(objc_msgSend(v2, sel_isOn));
    sub_1B13B9100((uint64_t)v1);
  }
}

id sub_1B160D828()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwitchTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SwitchTableViewCell()
{
  return objc_opt_self();
}

uint64_t BlueprintLayoutCollectionFactory.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_25();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

void BlueprintLayoutCollectionFactory.__allocating_init(invalidator:)(uint64_t a1)
{
  *(_QWORD *)(OUTLINED_FUNCTION_25() + 16) = a1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B160D8FC(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  void (*v3)(uint64_t);
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  if (!OUTLINED_FUNCTION_59_3(a1, a2))
  {
    v4 = v2;
    v3(255);
    v5 = OUTLINED_FUNCTION_61_2();
    if (!v6)
      atomic_store(v5, v4);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B160D938()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B160D95C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B14262CC(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), *(_BYTE *)(v0 + 304));
  sub_1B14262CC(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320), *(_BYTE *)(v0 + 328));
  sub_1B14262CC(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), *(_BYTE *)(v0 + 352));

  sub_1B14262CC(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 824), *(_BYTE *)(v0 + 832));
  sub_1B14262CC(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 848), *(_BYTE *)(v0 + 856));
  sub_1B14262CC(*(_QWORD *)(v0 + 864), *(_QWORD *)(v0 + 872), *(_BYTE *)(v0 + 880));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B160DA5C()
{
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_1B160DA68()
{
  return OUTLINED_FUNCTION_5_6();
}

uint64_t BlueprintLayoutCollectionFactory.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t BlueprintLayoutCollectionFactory.__deallocating_deinit()
{
  BlueprintLayoutCollectionFactory.deinit();
  return swift_deallocClassInstance();
}

void sub_1B160DAB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_43_23();
  sub_1B160D8FC(v0, v1);
  OUTLINED_FUNCTION_127(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  OUTLINED_FUNCTION_0_0();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionFactoryType.makeLayoutCollection(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t method lookup function for BlueprintLayoutCollectionFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionFactory.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionFactory.__allocating_init(invalidator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t BlueprintViewportMotionData.motionData.getter()
{
  return swift_retain();
}

uint64_t BlueprintViewportMotionData.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t method lookup function for BlueprintViewportMotionData()
{
  return swift_lookUpClassMethod();
}

Swift::Void __swiftcall setPreviewing(viewController:previewing:)(UIViewController *viewController, Swift::Bool previewing)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  uint64_t v23;
  _QWORD v24[4];

  OUTLINED_FUNCTION_4_103();
  OUTLINED_FUNCTION_5_99();
  OUTLINED_FUNCTION_10_19();
  v3 = OUTLINED_FUNCTION_0_174();
  if ((_DWORD)v3)
  {
    sub_1B13C06D0(v22, (uint64_t)v24);
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v11 = OUTLINED_FUNCTION_3_116();
    OUTLINED_FUNCTION_38_0(v11, v12, v13, v14, v15, v16, v17, v18, v20);
  }
  else
  {
    OUTLINED_FUNCTION_1_155(v3, v4, v5, v6, v7, v8, v9, v10, v20, v21, v22[0], v22[1], v23);
    v19 = (void *)OUTLINED_FUNCTION_2_130();
    if (v19)
      objc_msgSend(v19, sel_setPreviewing_, previewing);
  }
  OUTLINED_FUNCTION_10_21();
}

unint64_t sub_1B160DBBC()
{
  unint64_t result;

  result = qword_1ED17DA48;
  if (!qword_1ED17DA48)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED17DA48);
  }
  return result;
}

uint64_t sub_1B160DC10(uint64_t a1)
{
  uint64_t v2;

  sub_1B13ECA5C(0, (unint64_t *)&qword_1EEF314C8, (void (*)(uint64_t))sub_1B160DBBC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1B160DC5C@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

double ViewControllerPreviewable.previewInsets.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

void __swiftcall previewInsets(for:)(UIEdgeInsets_optional *__return_ptr retstr, UIViewController *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_4_103();
  OUTLINED_FUNCTION_5_99();
  OUTLINED_FUNCTION_10_19();
  v3 = OUTLINED_FUNCTION_0_174();
  if (!(_DWORD)v3)
  {
    OUTLINED_FUNCTION_1_155(v3, v4, v5, v6, v7, v8, v9, v10, v32, v33, v34, v35, v36);
    v18 = 1;
    v26 = (void *)OUTLINED_FUNCTION_2_130();
    v14 = 0.0;
    if (v26)
    {
      v27 = v26;
      if ((objc_msgSend(v26, sel_respondsToSelector_, sel_previewInsets) & 1) != 0)
      {
        objc_msgSend(v27, sel_previewInsets);
        v14 = v28;
        v15 = v29;
        v16 = v30;
        v17 = v31;
        v18 = 0;
        goto LABEL_8;
      }
      v18 = 1;
    }
    v15 = 0.0;
    v16 = 0.0;
    v17 = 0.0;
    goto LABEL_8;
  }
  sub_1B13C06D0(&v34, (uint64_t)v37);
  v11 = v38;
  v12 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  v13 = (*(_QWORD *(**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 16))(&v34, v11, v12);
  v15 = *((double *)&v34 + 1);
  v14 = *(double *)&v34;
  v17 = *((double *)&v35 + 1);
  v16 = *(double *)&v35;
  v18 = v36;
  OUTLINED_FUNCTION_38_0((uint64_t)v13, v19, v20, v21, v22, v23, v24, v25, v32);
LABEL_8:
  retstr->value.top = v14;
  retstr->value.left = v15;
  retstr->value.bottom = v16;
  retstr->value.right = v17;
  retstr->is_nil = v18;
}

void sub_1B160DD9C()
{
  double v0;
  uint64_t v1;
  _BYTE v2[40];

  v0 = ViewControllerPreviewable.previewInsets.getter((uint64_t)v2);
  OUTLINED_FUNCTION_8_80(v1, v0);
  OUTLINED_FUNCTION_1_27();
}

void sub_1B160DDC4()
{
  double v0;
  uint64_t v1;
  _BYTE v2[40];

  v0 = sub_1B160DC5C((uint64_t)v2);
  OUTLINED_FUNCTION_8_80(v1, v0);
  OUTLINED_FUNCTION_1_27();
}

uint64_t sub_1B160DDF0@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  ViewControllerPreviewable.previewInsets.getter((uint64_t)v3);
  return sub_1B1496E88((uint64_t)v3, a1);
}

void static Previewing.setPreviewing(viewController:previewing:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  uint64_t v23;
  _QWORD v24[4];

  OUTLINED_FUNCTION_4_103();
  OUTLINED_FUNCTION_5_99();
  OUTLINED_FUNCTION_10_19();
  v3 = OUTLINED_FUNCTION_0_174();
  if ((_DWORD)v3)
  {
    sub_1B13C06D0(v22, (uint64_t)v24);
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v11 = OUTLINED_FUNCTION_3_116();
    OUTLINED_FUNCTION_38_0(v11, v12, v13, v14, v15, v16, v17, v18, v20);
  }
  else
  {
    OUTLINED_FUNCTION_1_155(v3, v4, v5, v6, v7, v8, v9, v10, v20, v21, v22[0], v22[1], v23);
    v19 = (void *)OUTLINED_FUNCTION_2_130();
    if (v19)
      objc_msgSend(v19, sel_setPreviewing_, a2 & 1);
  }
  OUTLINED_FUNCTION_10_21();
}

id Previewing.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Previewing.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Previewing.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of ViewControllerPreviewable.set(previewing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ViewControllerPreviewable.previewInsets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for Previewing()
{
  return objc_opt_self();
}

uint64_t SearchToolbarItemConfiguration.toolbarItemDelegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13();
  return MEMORY[0x1B5E1F2F8](v0 + 16);
}

uint64_t SearchToolbarItemConfiguration.toolbarItemDelegate.setter()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_2_131();
  return swift_unknownObjectRelease();
}

void (*SearchToolbarItemConfiguration.toolbarItemDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_13();
  v4 = MEMORY[0x1B5E1F2F8](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B14956EC;
}

void SearchToolbarItemConfiguration.__allocating_init(toolbarItemDelegate:)()
{
  OUTLINED_FUNCTION_0_46();
  SearchToolbarItemConfiguration.init(toolbarItemDelegate:)();
  OUTLINED_FUNCTION_31();
}

uint64_t SearchToolbarItemConfiguration.init(toolbarItemDelegate:)()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_2_131();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SearchToolbarItemConfiguration.deinit()
{
  uint64_t v0;

  sub_1B13C076C(v0 + 16);
  return v0;
}

uint64_t SearchToolbarItemConfiguration.__deallocating_deinit()
{
  uint64_t v0;

  sub_1B13C076C(v0 + 16);
  return swift_deallocClassInstance();
}

void SearchToolbarItem.__allocating_init(identifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_46();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  OUTLINED_FUNCTION_31();
}

uint64_t SearchToolbarItem.init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t SearchToolbarItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SearchToolbarItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B160E1C0(uint64_t a1)
{
  uint64_t result;

  result = sub_1B160E248(&qword_1EEF358C8, (uint64_t)&protocol conformance descriptor for SearchToolbarItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SearchToolbarItem()
{
  return objc_opt_self();
}

uint64_t sub_1B160E214(uint64_t a1)
{
  uint64_t result;

  result = sub_1B160E248(&qword_1EEF358E8, (uint64_t)&protocol conformance descriptor for SearchToolbarItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B160E248(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SearchToolbarItem();
    result = MEMORY[0x1B5E1F0E8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SearchToolbarItemConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for SearchToolbarItemConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchToolbarItemConfiguration.__allocating_init(toolbarItemDelegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void BlueprintTraversalCollection.contains(indexPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_8_81(255, *(_QWORD *)(a2 + 16), a3, a4);
  OUTLINED_FUNCTION_11_63();
  OUTLINED_FUNCTION_9_9();
}

uint64_t sub_1B160E2FC()
{
  char v0;

  v0 = sub_1B16B9AAC();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t BlueprintTraversalCollection.startIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B160E358(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEADA8], a3, a4);
}

uint64_t BlueprintTraversalCollection.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B160E358(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEAE98], a3, a4);
}

uint64_t sub_1B160E358(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_36_22(a1, (uint64_t)a2, a3, a4);
  return a2(v4);
}

uint64_t BlueprintTraversalCollection.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  sub_1B16B9740();
  v7 = BlueprintTraversalCollection.startIndex.getter(a2, v4, v5, v6);
  v11 = BlueprintTraversalCollection.endIndex.getter(a2, v8, v9, v10);
  result = swift_bridgeObjectRelease();
  if (v11 < v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 > a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v11 > a1)
  {
    type metadata accessor for BlueprintTraversalCollectionItem(0, *(_QWORD *)(a2 + 16), v13, v14);
    return sub_1B16B9C98();
  }
LABEL_7:
  __break(1u);
  return result;
}

Swift::Int __swiftcall BlueprintTraversalCollection.index(after:)(Swift::Int after)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for BlueprintTraversalCollectionItem(0, *(_QWORD *)(v1 + 16), v2, v3);
  return sub_1B16B9C20();
}

uint64_t sub_1B160E474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for BlueprintTraversalCollectionItem(0, a3, a3, a4);
  return sub_1B16B7D00() & 1;
}

uint64_t sub_1B160E4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1B160E474(a1, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16), a4) & 1;
}

uint64_t sub_1B160E4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = BlueprintTraversalCollection.startIndex.getter(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1B160E504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = BlueprintTraversalCollection.endIndex.getter(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

void (*sub_1B160E528(uint64_t **a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_1B160E584(v6, *a2, a3, v7);
  return sub_1B13E3774;
}

void (*sub_1B160E584(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *a1)
{
  uint64_t v7;
  uint64_t v8;

  v7 = type metadata accessor for BlueprintTraversalCollectionItem(0, *(_QWORD *)(a3 + 16), a3, a4);
  *a1 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  a1[1] = v8;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v8 + 64));
  BlueprintTraversalCollection.subscript.getter(a2, a3);
  return sub_1B13E379C;
}

Swift::Int sub_1B160E61C@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = BlueprintTraversalCollection.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_1B160E644(Swift::Int *a1)
{
  Swift::Int result;

  result = BlueprintTraversalCollection.index(after:)(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1B160E66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t result;

  v7 = *v5;
  result = BlueprintTraversalCollection.startIndex.getter(a1, a2, a3, a4);
  *a5 = v7;
  a5[1] = result;
  return result;
}

uint64_t sub_1B160E69C(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintTraversalCollection<A>, a1);
  return sub_1B16B9ED8();
}

uint64_t sub_1B160E6D0(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintTraversalCollection<A>, a1);
  return sub_1B16B9F08();
}

void BlueprintTraversalCollectionSection<A>.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_36_22(a1, a2, a3, a4);
  JUMPOUT(0x1B5E1D5A0);
}

uint64_t BlueprintTraversalCollectionSection<A>.traversable(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v16;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = OUTLINED_FUNCTION_29_32(a1, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v16 - v12;
  sub_1B16B9C98();
  a5[3] = v7;
  a5[4] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a5);
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_0, v13, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t sub_1B160E7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return BlueprintTraversalCollectionSection<A>.traversable(at:)(a1, a2, *(_QWORD *)(a3 - 8), a4, a5);
}

void BlueprintTraversalCollection<A>.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_8_81(255, *(_QWORD *)(a1 + 16), a3, a4);
  sub_1B160E90C();
  sub_1B16B9740();
  OUTLINED_FUNCTION_9_9();
}

uint64_t sub_1B160E844()
{
  uint64_t v0;
  uint64_t v1;

  sub_1B16B9A70();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 - 40) + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B160E89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for BlueprintTraversalCollectionItem(0, a3, a3, a4);
  v4 = sub_1B16B7D48();
  return sub_1B1451378(&v6, v4);
}

uint64_t sub_1B160E8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B160E89C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1B160E90C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17B6D0)
  {
    v0 = sub_1B16B9DE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED17B6D0);
  }
}

void BlueprintTraversalCollection<A>.traversable(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_8_81(255, *(_QWORD *)(a2 + 16), a3, a4);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_9_9();
}

uint64_t sub_1B160E9B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = sub_1B16BA610();
  v6 = type metadata accessor for BlueprintTraversalCollectionSection(0, v2, v4, v5);
  v0[3] = v6;
  v8 = v1;
  result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for <A> BlueprintTraversalCollectionSection<A>, v6, &v8);
  v0[4] = result;
  *v0 = v3;
  return result;
}

BOOL sub_1B160EA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for BlueprintTraversalCollectionItem(0, a3, a3, a4);
  return sub_1B16B7D48() == a2;
}

BOOL sub_1B160EA6C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B160EA1C(a1, v1[4], v1[2], v1[3]);
}

uint64_t type metadata accessor for BlueprintTraversalCollectionSection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BlueprintTraversalCollectionSection);
}

void BlueprintTraversalCollection<A>.firstTraversableIndexPath.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_29_32(v0, v1, v2, v3);
  OUTLINED_FUNCTION_31_33();
  MEMORY[0x1E0C80A78](v4, v5);
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_19_52();
  sub_1B16B9740();
  OUTLINED_FUNCTION_26_38();
  OUTLINED_FUNCTION_27_41();
}

void BlueprintTraversalCollection<A>.lastTraversableIndexPath.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6();
  type metadata accessor for BlueprintTraversalCollectionItem(0, *(_QWORD *)(v0 + 16), v1, v2);
  OUTLINED_FUNCTION_31_33();
  MEMORY[0x1E0C80A78](v3, v4);
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_19_52();
  v7 = sub_1B16B9C68();
  OUTLINED_FUNCTION_36();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF20], v7);
  sub_1B16B97F4();
  sub_1B16B9740();
  OUTLINED_FUNCTION_27_41();
}

void BlueprintTraversalCollection<A>.nextTraversableIndexPath(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6();
  v4 = OUTLINED_FUNCTION_23_40(v0, v1, v2, v3);
  MEMORY[0x1E0C80A78](v4, v5);
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_19_52();
  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_11_63();
  OUTLINED_FUNCTION_9_9();
}

void BlueprintTraversalCollection<A>.previousTraversableIndexPath(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_23_40(v0, v1, v2, v3);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_11_63();
  OUTLINED_FUNCTION_9_9();
}

void BlueprintTraversalCollection<A>.firstTraversableIndexPath(from:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD v25[7];
  uint64_t v26;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = *(_QWORD *)(v7 + 16);
  v10 = type metadata accessor for BlueprintTraversalCollectionItem(255, v8, v1, v9);
  v11 = sub_1B16BA328();
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)v25 - v15;
  v26 = *v0;
  v25[2] = v8;
  v25[3] = v2;
  v25[4] = v4;
  v17 = OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_36();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF60], v17);
  v26 = sub_1B16BA610();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF50], v17);
  sub_1B16B9F20();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    OUTLINED_FUNCTION_3_12();
    OUTLINED_FUNCTION_20_52();
  }
  else
  {
    v22 = (uint64_t)&v16[*(int *)(v10 + 28)];
    v23 = OUTLINED_FUNCTION_3_12();
    OUTLINED_FUNCTION_17_42();
    OUTLINED_FUNCTION_119(v6, v22, v24);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v16, v10);
    v18 = v6;
    v19 = 0;
    v20 = 1;
    v21 = v23;
  }
  __swift_storeEnumTagSinglePayload(v18, v19, v20, v21);
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B160F43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char v14;
  _BYTE v16[16];
  uint64_t v17;

  v8 = type metadata accessor for BlueprintTraversalCollectionItem(0, a3, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = &v16[-v11];
  v17 = a1 + *(int *)(v13 + 28);
  LOBYTE(a2) = sub_1B1411C00((uint64_t (*)(uint64_t))sub_1B1411DE8, (uint64_t)v16, a2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  if ((a2 & 1) != 0)
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  else
    v14 = 0;
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  return v14 & 1;
}

void BlueprintTraversalCollection<A>.traversable(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6();
  type metadata accessor for BlueprintTraversalCollectionItem(255, *(_QWORD *)(v0 + 16), v1, v2);
  sub_1B16BA328();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v3, v4);
  sub_1B16B9C68();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_9_9();
}

void sub_1B160F5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;

  sub_1B16B9A58();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v4, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    *(_QWORD *)(v0 + 32) = 0;
    *(_OWORD *)v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 24) = v1;
    *(_QWORD *)(v0 + 32) = v3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v0);
    OUTLINED_FUNCTION_34_1((uint64_t)boxed_opaque_existential_0, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v4, v2);
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B160F674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BlueprintTraversalCollection<A>.count.getter(a1, *(_QWORD *)(a2 - 8), a3, a4);
}

void sub_1B160F67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BlueprintTraversalCollection<A>.traversable(at:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

void sub_1B160F684()
{
  BlueprintTraversalCollection<A>.firstTraversableIndexPath.getter();
}

void sub_1B160F68C()
{
  BlueprintTraversalCollection<A>.lastTraversableIndexPath.getter();
}

void sub_1B160F694()
{
  BlueprintTraversalCollection<A>.firstTraversableIndexPath(from:)();
}

uint64_t sub_1B160F69C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B160E474(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_1B160F6BC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B160F43C(a1, v1[4], v1[2], v1[3]) & 1;
}

void sub_1B160F6DC()
{
  JUMPOUT(0x1B5E1F0E8);
}

uint64_t type metadata accessor for BlueprintTraversalCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BlueprintTraversalCollection);
}

uint64_t *sub_1B160F6F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1B16B7D60();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = *(_DWORD *)(v6 + 80) | v10;
  v14 = (*(_BYTE *)(v6 + 80) | v10);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v12 & (unint64_t)~v11) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v8;
    v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v20, ((unint64_t)a2 + v12) & v20, v19);
  }
  return a1;
}

uint64_t sub_1B160F7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1B16B7D60();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B160F848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1B16B7D60();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B160F8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1B16B7D60();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B160F928(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1B16B7D60();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = v8;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (a2 <= v11)
    goto LABEL_23;
  v15 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
        {
          v21 = a1;
          v10 = v7;
          v12 = v5;
        }
        else
        {
          v21 = (v14 + a1) & ~v13;
        }
        return __swift_getEnumTagSinglePayload(v21, v10, v12);
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_14:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = v15;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_1B160FAB8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1B16B7D60() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0u;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1B160FCBC(uint64_t a1)
{
  return sub_1B160F69C(a1) & 1;
}

BOOL FloatingTabBarNavigationVisibility.isHidden.getter(char a1)
{
  return (a1 & 1) == 0;
}

BOOL static FloatingTabBarNavigationVisibility.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t FloatingTabBarNavigationVisibility.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t FloatingTabBarNavigationVisibility.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

BOOL sub_1B160FD58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static FloatingTabBarNavigationVisibility.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B160FD64()
{
  return FloatingTabBarNavigationVisibility.hashValue.getter();
}

uint64_t sub_1B160FD6C()
{
  return FloatingTabBarNavigationVisibility.hash(into:)();
}

unint64_t sub_1B160FD78()
{
  unint64_t result;

  result = qword_1EEF35A30;
  if (!qword_1EEF35A30)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for FloatingTabBarNavigationVisibility, &type metadata for FloatingTabBarNavigationVisibility);
    atomic_store(result, (unint64_t *)&qword_1EEF35A30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FloatingTabBarNavigationVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B160FE00 + 4 * byte_1B16DA6E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B160FE34 + 4 * byte_1B16DA6E0[v4]))();
}

uint64_t sub_1B160FE34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160FE3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B160FE44);
  return result;
}

uint64_t sub_1B160FE50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B160FE58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B160FE5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B160FE64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FloatingTabBarNavigationVisibility()
{
  return &type metadata for FloatingTabBarNavigationVisibility;
}

uint64_t sub_1B160FE80(uint64_t a1)
{
  uint64_t v1;
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1B16BA640();
    v3 = (__int128 *)(a1 + 32);
    do
    {
      v4 = v3[1];
      v15 = *v3;
      v16 = v4;
      v17 = v3[2];
      v5 = v15;
      v6 = swift_allocObject();
      swift_weakInit();
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v6;
      v8 = v16;
      *(_OWORD *)(v7 + 24) = v15;
      *(_OWORD *)(v7 + 40) = v8;
      *(_OWORD *)(v7 + 56) = v17;
      type metadata accessor for BlueprintInfiniteScrollRequest();
      swift_allocObject();
      v9 = sub_1B1622DC4(v5, *((uint64_t *)&v5 + 1), (uint64_t)sub_1B1611FA0, v7);
      swift_beginAccess();
      sub_1B1611FAC((uint64_t)&v15);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      sub_1B1611FAC((uint64_t)&v15);
      sub_1B1611FAC((uint64_t)&v15);
      sub_1B16B9740();
      sub_1B14274DC(&v14, v10, v11);
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1B14D2858(&v14, v9);
      swift_release();
      swift_endAccess();
      swift_beginAccess();
      sub_1B16B7C70();
      swift_endAccess();
      sub_1B1611FD4((uint64_t)&v15);
      sub_1B16BA61C();
      sub_1B16BA64C();
      sub_1B16BA658();
      sub_1B16BA628();
      v3 += 3;
      --v1;
    }
    while (v1);
    v12 = v18;
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v12;
}

uint64_t sub_1B16100C0(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
    return sub_1B16BA4B4();
  else
    return *(_QWORD *)(a1 + 16);
}

void sub_1B16100E0(uint64_t a1, uint64_t a2, char a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  BOOL v18;
  char v19;

  v6 = v5;
  OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_77();
  v16 = (unsigned __int8 *)(v15 - v14);
  if ((a3 & 1) == 0)
  {
    sub_1B16B82DC();
    v17 = *v16;
    sub_1B13F51B0((uint64_t)v16);
    if (v17 == 1)
    {
      v18 = *(double *)&a2 <= a5;
      if (*(double *)&a2 < a5)
      {
LABEL_4:
        v19 = 0;
LABEL_8:
        *(_BYTE *)(v6 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_direction) = v19;
        return;
      }
    }
    else
    {
      v18 = *(double *)&a1 <= a4;
      if (*(double *)&a1 < a4)
        goto LABEL_4;
    }
    if (v18)
      return;
    v19 = 1;
    goto LABEL_8;
  }
}

uint64_t sub_1B16101A4(char a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  BOOL v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  int64_t v120;
  unint64_t v121;

  v8 = v7;
  v16 = OUTLINED_FUNCTION_10_59();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  OUTLINED_FUNCTION_77();
  v21 = v20 - v19;
  v22 = OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_77();
  v27 = (unsigned __int8 *)(v26 - v25);
  sub_1B16B82DC();
  v111 = v22;
  if (!*(_QWORD *)(*(_QWORD *)&v27[*(int *)(v22 + 24)] + 16))
    goto LABEL_81;
  v114 = v27;
  OUTLINED_FUNCTION_13();
  v28 = *(_QWORD *)(v7 + 48);
  if ((v28 & 0xC000000000000001) != 0)
  {
    sub_1B16B9740();
    sub_1B16BA484();
    type metadata accessor for BlueprintInfiniteScrollRequest();
    sub_1B13B13B4(&qword_1EEF31DB8, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintInfiniteScrollRequest, (uint64_t)&unk_1B16DBA80);
    sub_1B16B9DD0();
    v28 = v117;
    v106 = v118;
    v29 = v119;
    v30 = v120;
    v31 = v121;
  }
  else
  {
    v32 = -1 << *(_BYTE *)(v28 + 32);
    v106 = v28 + 56;
    v33 = ~v32;
    v34 = -v32;
    if (v34 < 64)
      v35 = ~(-1 << v34);
    else
      v35 = -1;
    v31 = v35 & *(_QWORD *)(v28 + 56);
    sub_1B16B9740();
    v29 = v33;
    v30 = 0;
  }
  v99 = a1;
  v100 = v21;
  v101 = v17;
  v102 = v16;
  v104 = (unint64_t)(v29 + 64) >> 6;
  OUTLINED_FUNCTION_11_64();
  v108 = v36;
  v113 = v7;
  while (1)
  {
    v37 = v30;
    if ((v28 & 0x8000000000000000) == 0)
      break;
    if (!sub_1B16BA4D8())
      goto LABEL_51;
    type metadata accessor for BlueprintInfiniteScrollRequest();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v39 = v116;
    swift_unknownObjectRelease();
    if (!v116)
      goto LABEL_51;
LABEL_33:
    v47 = *(_QWORD *)&v114[*(int *)(v111 + 28)];
    if (!*(_QWORD *)(v47 + 16))
      goto LABEL_50;
    v31 = v28;
    v48 = *(_QWORD *)(v39 + 16);
    v49 = *(_QWORD *)(v39 + 24);
    sub_1B16BAA48();
    sub_1B16B9740();
    OUTLINED_FUNCTION_192();
    sub_1B16B98FC();
    v50 = sub_1B16BAA78();
    v8 = -1 << *(_BYTE *)(v47 + 32);
    v51 = v50 & ~v8;
    OUTLINED_FUNCTION_18_48();
    if ((v52 & 1) == 0)
      goto LABEL_49;
    v28 = *(_QWORD *)(v47 + 48);
    v53 = (uint64_t *)(v28 + 16 * v51);
    v54 = v53[1];
    v55 = *v53 == v48 && v54 == v49;
    if (!v55 && (OUTLINED_FUNCTION_10_72(*v53, v54) & 1) == 0)
    {
      v8 = ~v8;
      while (1)
      {
        v51 = (v51 + 1) & v8;
        OUTLINED_FUNCTION_18_48();
        if ((v56 & 1) == 0)
          break;
        v57 = (uint64_t *)(v28 + 16 * v51);
        v58 = v57[1];
        v59 = *v57 == v48 && v58 == v49;
        if (v59 || (OUTLINED_FUNCTION_10_72(*v57, v58) & 1) != 0)
          goto LABEL_40;
      }
LABEL_49:
      OUTLINED_FUNCTION_101_0();
      OUTLINED_FUNCTION_113();
      OUTLINED_FUNCTION_15_53();
LABEL_50:
      sub_1B16BA028();
      sub_1B13DE5B0(0, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v60 = OUTLINED_FUNCTION_25();
      *(_OWORD *)(v60 + 16) = xmmword_1B16C51E0;
      v61 = *(_QWORD *)(v39 + 16);
      v62 = *(_QWORD *)(v39 + 24);
      *(_QWORD *)(v60 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v60 + 64) = sub_1B140493C();
      *(_QWORD *)(v60 + 32) = v61;
      *(_QWORD *)(v60 + 40) = v62;
      __asm { BR              X10 }
    }
LABEL_40:
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_15_53();
    swift_release();
  }
  if (v31)
  {
    v38 = __clz(__rbit64(v31)) | (v30 << 6);
    goto LABEL_32;
  }
  v40 = v30 + 1;
  if (__OFADD__(v30, 1))
    goto LABEL_83;
  if (v40 < v104)
  {
    v41 = *(_QWORD *)(v106 + 8 * v40);
    ++v30;
    if (!v41)
    {
      v30 = v37 + 2;
      OUTLINED_FUNCTION_8_82();
      if (v42 == v43)
        goto LABEL_51;
      OUTLINED_FUNCTION_7_83();
      if (!v41)
      {
        v30 = v44 + 2;
        OUTLINED_FUNCTION_8_82();
        if (v42 == v43)
          goto LABEL_51;
        OUTLINED_FUNCTION_7_83();
        if (!v41)
        {
          v30 = v45 + 3;
          OUTLINED_FUNCTION_8_82();
          if (v42 == v43)
            goto LABEL_51;
          OUTLINED_FUNCTION_7_83();
          if (!v41)
          {
            v46 = v37 + 5;
            do
            {
              if (v46 >= v104)
                goto LABEL_51;
              v41 = *(_QWORD *)(v106 + 8 * v46++);
            }
            while (!v41);
            v30 = v46 - 1;
          }
        }
      }
    }
    v38 = __clz(__rbit64(v41)) + (v30 << 6);
LABEL_32:
    v39 = *(_QWORD *)(*(_QWORD *)(v28 + 48) + 8 * v38);
    swift_retain();
    if (!v39)
      goto LABEL_51;
    goto LABEL_33;
  }
LABEL_51:
  sub_1B1488298();
  v63 = *(_QWORD *)(v8 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_maxInflightRequests);
  v64 = 0x7FFFFFFFFFFFFFFFLL;
  if (v63 == 0x7FFFFFFFFFFFFFFFLL)
    goto LABEL_88;
  v65 = OUTLINED_FUNCTION_36();
  v66 = sub_1B16100C0(v65);
  OUTLINED_FUNCTION_7_0();
  v64 = v63 - v66;
  if (__OFSUB__(v63, v66))
    goto LABEL_84;
  if (v64 >= 1)
  {
LABEL_88:
    v107 = v64;
    v109 = v63;
    sub_1B13F5284(v99 & 1, a2, a3, a4, a5, a6, a7);
    v68 = v67;
    v69 = v8 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_rangeCache;
    OUTLINED_FUNCTION_13();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v100, v69, v102);
    v70 = sub_1B16B7C94();
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v102);
    if ((v70 & 1) != 0)
    {
      v71 = sub_1B13F5704(v68);
      v72 = *(_QWORD *)(v71 + 16);
      swift_retain();
      if (!v72)
      {
        v75 = MEMORY[0x1E0DEE9D8];
        goto LABEL_69;
      }
      v73 = 0;
      v74 = v71 + 40;
      v112 = v72;
      v103 = v72 - 1;
      v75 = MEMORY[0x1E0DEE9D8];
      v105 = v71 + 40;
      v115 = v71;
      while (1)
      {
        v110 = v75;
        v76 = (uint64_t *)(v74 + 48 * v73);
        v77 = v73;
        while (1)
        {
          if (v77 >= *(_QWORD *)(v71 + 16))
          {
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
            JUMPOUT(0x1B1610EF4);
          }
          v79 = *(v76 - 1);
          v78 = *v76;
          v80 = v76[1];
          v81 = v76[2];
          v83 = v76[3];
          v82 = v76[4];
          v73 = v77 + 1;
          v84 = *(_QWORD *)(v8 + 40);
          OUTLINED_FUNCTION_192();
          OUTLINED_FUNCTION_36();
          sub_1B16B9740();
          sub_1B13FD970(v79, v78, v84);
          v86 = v85;
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_7_0();
          if ((v86 & 1) == 0)
            break;
          OUTLINED_FUNCTION_101_0();
          v76 += 6;
          ++v77;
          v8 = v113;
          v71 = v115;
          if (v112 == v73)
          {
            v75 = v110;
            goto LABEL_69;
          }
        }
        v87 = v110;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B13F5844();
          v87 = v110;
        }
        v88 = *(_QWORD *)(v87 + 16);
        if (v88 >= *(_QWORD *)(v87 + 24) >> 1)
        {
          sub_1B13F5844();
          v87 = v110;
        }
        *(_QWORD *)(v87 + 16) = v88 + 1;
        v89 = (_QWORD *)(v87 + 48 * v88);
        v89[4] = v79;
        v89[5] = v78;
        v89[6] = v80;
        v89[7] = v81;
        v89[8] = v83;
        v89[9] = v82;
        v8 = v113;
        v75 = v87;
        v71 = v115;
        v74 = v105;
        if (v103 == v77)
        {
LABEL_69:
          swift_release();
          OUTLINED_FUNCTION_7_0();
          if (v109 != 0x7FFFFFFFFFFFFFFFLL && v107 < *(_QWORD *)(v75 + 16))
          {
            v90 = sub_1B161142C(v114, v75, v107, a4, a5, a6, a7);
            swift_release();
            v75 = v90;
          }
          if (*(_QWORD *)(v75 + 16))
          {
            swift_retain();
            v91 = OUTLINED_FUNCTION_192();
            sub_1B160FE80(v91);
            OUTLINED_FUNCTION_101_0();
            sub_1B13DE5B0(0, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v92 = OUTLINED_FUNCTION_25();
            v93 = v92;
            *(_OWORD *)(v92 + 16) = xmmword_1B16C6D10;
            if (*(_BYTE *)(v8 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_direction))
              v94 = 0x647261776B636162;
            else
              v94 = 0x64726177726F66;
            if (*(_BYTE *)(v8 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_direction))
              v95 = 0xE800000000000000;
            else
              v95 = 0xE700000000000000;
            *(_QWORD *)(v92 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v92 + 64) = sub_1B140493C();
            *(_QWORD *)(v93 + 32) = v94;
            *(_QWORD *)(v93 + 40) = v95;
            OUTLINED_FUNCTION_11_64();
            __asm { BR              X10 }
          }
          sub_1B16BA040();
          sub_1B13DE5B0(0, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          *(_OWORD *)(OUTLINED_FUNCTION_25() + 16) = xmmword_1B16C51D0;
          OUTLINED_FUNCTION_11_64();
          __asm { BR              X10 }
        }
      }
    }
  }
LABEL_81:
  OUTLINED_FUNCTION_19_53();
  return 0;
}

void BlueprintInfiniteScrollManager.__allocating_init(infiniteScroll:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  sub_1B13F5460(a1, v5 - v4);
  if (qword_1ED17D718 != -1)
    swift_once();
  v7 = (void *)qword_1ED1903F8;
  OUTLINED_FUNCTION_104();
  BlueprintInfiniteScrollManager.init(infiniteScroll:maxInflightRequests:log:)(v6, 0x7FFFFFFFFFFFFFFFLL, v7);
  OUTLINED_FUNCTION_19_53();
  OUTLINED_FUNCTION_31();
}

void BlueprintInfiniteScrollManager.__allocating_init(infiniteScroll:log:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_6_3();
  sub_1B13F5460(a1, v2);
  OUTLINED_FUNCTION_104();
  BlueprintInfiniteScrollManager.init(infiniteScroll:maxInflightRequests:log:)(v2, 0x7FFFFFFFFFFFFFFFLL, a2);
  sub_1B13F51B0(a1);
  OUTLINED_FUNCTION_31();
}

uint64_t BlueprintInfiniteScrollManager.__allocating_init(infiniteScroll:maxInflightRequests:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_6_3();
  sub_1B13F5460(a1, v2);
  if (qword_1ED17D718 != -1)
    swift_once();
  v7 = (void *)qword_1ED1903F8;
  v8 = swift_allocObject();
  BlueprintInfiniteScrollManager.init(infiniteScroll:maxInflightRequests:log:)(v2, a2, v7);
  OUTLINED_FUNCTION_19_53();
  return v8;
}

void BlueprintInfiniteScrollManager.__allocating_init(infiniteScroll:maxInflightRequests:log:)(uint64_t a1, uint64_t a2, void *a3)
{
  OUTLINED_FUNCTION_104();
  BlueprintInfiniteScrollManager.init(infiniteScroll:maxInflightRequests:log:)(a1, a2, a3);
  OUTLINED_FUNCTION_31();
}

_QWORD *BlueprintInfiniteScrollManager.init(infiniteScroll:maxInflightRequests:log:)(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD v20[4];

  v4 = v3;
  v8 = OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v14 = MEMORY[0x1E0DEE9E8];
  v3[5] = MEMORY[0x1E0DEE9E8];
  v3[6] = v14;
  v15 = (char *)v3 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_rangeCache;
  sub_1B16B7CAC();
  *((_BYTE *)v3 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_direction) = 0;
  sub_1B13F5460(a1, v13);
  sub_1B13DE5B0(0, &qword_1ED17E248, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintInfiniteScroll, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v3[4] = sub_1B16B82D0();
  v16 = a1 + *(int *)(v8 + 20);
  OUTLINED_FUNCTION_13();
  v17 = OUTLINED_FUNCTION_10_59();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  swift_endAccess();
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_maxInflightRequests) = a2;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_log) = a3;
  OUTLINED_FUNCTION_25();
  swift_weakInit();
  v18 = a3;
  swift_retain();
  sub_1B16B82E8();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  swift_retain();
  sub_1B16B806C();

  swift_release();
  sub_1B13F51B0(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v4;
}

uint64_t sub_1B161134C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B1611370(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = a1 + *(int *)(type metadata accessor for BlueprintInfiniteScroll() + 20);
    v5 = v3 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_rangeCache;
    swift_beginAccess();
    v6 = sub_1B16B7CB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(v5, v4, v6);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1611424(uint64_t a1)
{
  return sub_1B1611370(a1);
}

uint64_t sub_1B161142C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double MaxY;
  double v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char v86[16];
  unsigned __int8 *v87;
  uint64_t v88;

  v8 = v7;
  v87 = a1;
  v88 = a2;
  sub_1B16B9740();
  sub_1B168FA38((uint64_t (*)(uint64_t *, uint64_t *))sub_1B1611F48, (uint64_t)v86);
  v15 = v88;
  v82 = OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_direction;
  v85 = *a1;
  v16 = a4;
  v17 = a5;
  v18 = a6;
  v19 = a7;
  if ((v85 & 1) != 0)
  {
    if ((*(_BYTE *)(v8 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_direction) & 1) != 0)
      MaxY = CGRectGetMaxY(*(CGRect *)&v16);
    else
      MaxY = CGRectGetMinY(*(CGRect *)&v16);
  }
  else if ((*(_BYTE *)(v8 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_direction) & 1) != 0)
  {
    MaxY = CGRectGetMaxX(*(CGRect *)&v16);
  }
  else
  {
    MaxY = CGRectGetMinX(*(CGRect *)&v16);
  }
  v21 = MaxY;
  v83 = v8;
  v84 = a3;
  v22 = *(_QWORD *)(v15 + 16);
  if (v22)
  {
    v23 = (double *)(v15 + 72);
    v24 = MEMORY[0x1E0DEE9D8];
    v25 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v26 = *((_QWORD *)v23 - 5);
      v27 = *((_QWORD *)v23 - 4);
      v29 = *(v23 - 3);
      v28 = *(v23 - 2);
      v30 = *((_QWORD *)v23 - 1);
      v31 = *v23;
      sub_1B16B9740();
      if (v85)
      {
        if (v28 <= v21)
          goto LABEL_18;
      }
      else if (v29 <= v21)
      {
LABEL_18:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B14D0B1C();
          v25 = v37;
        }
        v34 = *(_QWORD *)(v25 + 16);
        if (v34 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_1B14D0B1C();
          v25 = v38;
        }
        *(_QWORD *)(v25 + 16) = v34 + 1;
        v33 = v25 + 48 * v34;
        goto LABEL_23;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B14D0B1C();
        v24 = v35;
      }
      v32 = *(_QWORD *)(v24 + 16);
      if (v32 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        sub_1B14D0B1C();
        v24 = v36;
      }
      *(_QWORD *)(v24 + 16) = v32 + 1;
      v33 = v24 + 48 * v32;
LABEL_23:
      *(_QWORD *)(v33 + 32) = v26;
      *(_QWORD *)(v33 + 40) = v27;
      *(double *)(v33 + 48) = v29;
      *(double *)(v33 + 56) = v28;
      *(_QWORD *)(v33 + 64) = v30;
      v23 += 6;
      *(double *)(v33 + 72) = v31;
      if (!--v22)
        goto LABEL_26;
    }
  }
  v24 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  swift_release();
  if ((*(_BYTE *)(v83 + v82) & 1) != 0)
  {
    v39 = sub_1B1611B60(v84, v25);
    v43 = (v42 >> 1) - v41;
    if (!__OFSUB__(v42 >> 1, v41))
    {
      v44 = __OFSUB__(v84, v43);
      v45 = v84 - v43;
      if (!v44)
      {
        v46 = v39;
        v47 = v40;
        v48 = v41;
        v49 = v42;
        sub_1B1611AF4(v45 & ~(v45 >> 63), v24);
        v51 = v50;
        v53 = v52;
        v55 = v54;
        v56 = swift_unknownObjectRetain();
        v57 = sub_1B14DEE30(v56, v51, v53, v55);
        v58 = v46;
        v59 = v47;
        v60 = v48;
        v61 = v49;
LABEL_33:
        sub_1B1611BC8(v58, v59, v60, v61, v57);
        v80 = v79;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return v80;
      }
      goto LABEL_36;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v62 = sub_1B1611AF4(v84, v24);
  v66 = (v65 >> 1) - v64;
  if (__OFSUB__(v65 >> 1, v64))
    goto LABEL_35;
  v44 = __OFSUB__(v84, v66);
  v67 = v84 - v66;
  if (!v44)
  {
    v68 = v62;
    v69 = v63;
    v70 = v64;
    v71 = v65;
    sub_1B1611B60(v67 & ~(v67 >> 63), v25);
    v73 = v72;
    v75 = v74;
    v77 = v76;
    v78 = swift_unknownObjectRetain();
    v57 = sub_1B14DEE30(v78, v73, v75, v77);
    v58 = v68;
    v59 = v69;
    v60 = v70;
    v61 = v71;
    goto LABEL_33;
  }
LABEL_37:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1B16117B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t ObjectType;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v7 = type metadata accessor for BlueprintInfiniteScroll();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    v31 = v10;
    v32 = v7;
    v13 = *(void **)(result + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_log);
    sub_1B13DE5B0(0, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1B16C51E0;
    v15 = *(_QWORD *)a4;
    v16 = *(_QWORD *)(a4 + 8);
    v17 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    v18 = sub_1B140493C();
    *(_QWORD *)(v14 + 64) = v18;
    v33 = v16;
    v34 = v15;
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v14 + 40) = v16;
    v19 = v13;
    sub_1B1611FAC(a4);
    sub_1B1622D04(a2);
    *(_QWORD *)(v14 + 96) = v17;
    *(_QWORD *)(v14 + 104) = v18;
    *(_QWORD *)(v14 + 72) = v20;
    *(_QWORD *)(v14 + 80) = v21;
    sub_1B16BA058();
    sub_1B16B8B58();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    v22 = *(_QWORD *)(a1 + 16);
    v23 = *(_QWORD *)(a1 + 24);
    sub_1B16B9740();
    sub_1B13CBED8(v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B156FC00(a1);
    swift_endAccess();
    swift_release();
    if (a2 == 2)
      return swift_release();
    v25 = v33;
    v24 = v34;
    if ((a2 & 1) == 0)
    {
      v26 = (uint64_t)v31;
      sub_1B16B82DC();
      v27 = *(_QWORD *)(v26 + *(int *)(v32 + 28));
      sub_1B16B9740();
      sub_1B13F51B0(v26);
      sub_1B16B9740();
      sub_1B13FD970(v24, v25, v27);
      LOBYTE(v26) = v28;
      swift_bridgeObjectRelease();
      sub_1B1611FD4(a4);
      if ((v26 & 1) != 0)
      {
        v35 = *(_OWORD *)(a4 + 32);
        swift_beginAccess();
        sub_1B1611FFC();
        sub_1B13B13B4((unint64_t *)&qword_1ED1836A0, (uint64_t (*)(uint64_t))sub_1B1611FFC, MEMORY[0x1E0DEA4E8]);
        sub_1B16B7C58();
        swift_endAccess();
      }
    }
    if (!MEMORY[0x1B5E1F2F8](v12 + 16))
    {
      return swift_release();
    }
    else
    {
      v29 = *(_QWORD *)(v12 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8))(v12, v24, v25, ObjectType, v29);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B1611ABC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x647261776B636162;
  else
    return 0x64726177726F66;
}

uint64_t sub_1B1611AF4(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1B1455EA4(0, result, v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1B1611B60(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1B1455EA4(v3, -result, 0);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  if (v3 < v5)
    goto LABEL_9;
  if ((v5 & 0x8000000000000000) == 0)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

void sub_1B1611BC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v8;

  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else if (!__OFADD__(*(_QWORD *)(a5 + 16), (a4 >> 1) - a3))
  {
    sub_1B14D0B1C();
    v8 = swift_unknownObjectRetain();
    sub_1B1492494(v8, a2, a3, a4);
    sub_1B16B9740();
    sub_1B1492400();
    return;
  }
  __break(1u);
}

uint64_t sub_1B1611C78()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1B16BA7F0();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

void sub_1B1611CC8(char *a1, unsigned __int8 *a2)
{
  sub_1B14AB5A8(*a1, *a2);
}

void sub_1B1611CD4()
{
  sub_1B1679384();
}

uint64_t sub_1B1611CDC()
{
  return sub_1B149ECCC();
}

void sub_1B1611CE4()
{
  sub_1B16796D0();
}

uint64_t sub_1B1611CEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1611C78();
  *a1 = result;
  return result;
}

uint64_t sub_1B1611D18@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1611ABC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void BlueprintInfiniteScrollManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B13C076C(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC5TeaUI30BlueprintInfiniteScrollManager_rangeCache;
  v2 = OUTLINED_FUNCTION_10_59();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  OUTLINED_FUNCTION_0_0();
}

uint64_t BlueprintInfiniteScrollManager.__deallocating_deinit()
{
  BlueprintInfiniteScrollManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of BlueprintInfiniteScrollProviderType.observableInfiniteScroll.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintInfiniteScrollManagerDelegate.blueprintInfiniteScrollManager(_:didCompleteRequestForIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1B1611DE0()
{
  return type metadata accessor for BlueprintInfiniteScrollManager();
}

uint64_t method lookup function for BlueprintInfiniteScrollManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintInfiniteScrollManager.__allocating_init(infiniteScroll:maxInflightRequests:log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for BlueprintInfiniteScrollManager.ScrollDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1611E48 + 4 * byte_1B16DA789[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1611E7C + 4 * asc_1B16DA784[v4]))();
}

uint64_t sub_1B1611E7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1611E84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1611E8CLL);
  return result;
}

uint64_t sub_1B1611E98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1611EA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1611EA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1611EAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintInfiniteScrollManager.ScrollDirection()
{
  return &type metadata for BlueprintInfiniteScrollManager.ScrollDirection;
}

void sub_1B1611ECC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  sub_1B16B9740();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_0();
}

ValueMetadata *type metadata accessor for BlueprintInfiniteScrollManager.InflightRequests()
{
  return &type metadata for BlueprintInfiniteScrollManager.InflightRequests;
}

unint64_t sub_1B1611F0C()
{
  unint64_t result;

  result = qword_1EEF35A38;
  if (!qword_1EEF35A38)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DA93C, &type metadata for BlueprintInfiniteScrollManager.ScrollDirection);
    atomic_store(result, (unint64_t *)&qword_1EEF35A38);
  }
  return result;
}

BOOL sub_1B1611F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (**(_BYTE **)(v2 + 16))
    return *(double *)(a1 + 24) < *(double *)(a2 + 24);
  else
    return *(double *)(a1 + 16) < *(double *)(a2 + 16);
}

uint64_t sub_1B1611F74()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1611FA0(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1B16117B8(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

uint64_t sub_1B1611FAC(uint64_t a1)
{
  sub_1B16B9740();
  return a1;
}

uint64_t sub_1B1611FD4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1B1611FFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED183698)
  {
    v0 = sub_1B16B9824();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED183698);
  }
}

uint64_t (*MiniMastheadBarCompressionAnimator.topOffset.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id MiniMastheadBarCompressionAnimator.__allocating_init(navigationBar:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MiniMastheadBarCompressionAnimator.init(navigationBar:)(a1);
}

uint64_t MiniMastheadBarCompressionAnimator.shouldCompressAtTop.getter()
{
  return 1;
}

uint64_t MiniMastheadBarCompressionAnimator.shouldCloseGapOnScroll.getter()
{
  return 0;
}

Swift::Void __swiftcall MiniMastheadBarCompressionAnimator.detached()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI34MiniMastheadBarCompressionAnimator_navigationBar), sel_topItem);
  if (v1)
  {
    v8 = v1;
    v9 = objc_msgSend(v1, sel_titleView);

    if (v9)
    {
      objc_msgSend(v9, sel_setMaskView_, 0);

    }
  }
  OUTLINED_FUNCTION_6_6((uint64_t)v1, sel_setTransform_, v2, v3, v4, v5, v6, v7, 0x3FF0000000000000);
}

Swift::Bool __swiftcall MiniMastheadBarCompressionAnimator.animationShouldBegin(for:currentlyFullyCompressed:)(UIScrollView *a1, Swift::Bool currentlyFullyCompressed)
{
  double v5;
  double v6;

  if (-[UIScrollView isDragging](a1, sel_isDragging) && currentlyFullyCompressed)
    return 0;
  -[UIScrollView contentOffset](a1, sel_contentOffset);
  v6 = v5;
  OUTLINED_FUNCTION_0_50();
  return v6 >= *(double *)&a1->super.super.super.isa;
}

double MiniMastheadBarCompressionAnimator.minimumBarHeight(for:)()
{
  return 0.0;
}

id MiniMastheadBarCompressionAnimator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MiniMastheadBarCompressionAnimator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MiniMastheadBarCompressionAnimator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for MiniMastheadBarCompressionAnimator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MiniMastheadBarCompressionAnimator.__allocating_init(navigationBar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

id UIColor.barButtonBackgroundColor.getter()
{
  void *v0;
  id v1;
  unsigned int v2;
  id v3;
  double v4;
  id v5;
  unsigned int v6;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_blackColor);
  v2 = OUTLINED_FUNCTION_70_0((uint64_t)v1, sel__isSimilarToColor_withinPercentage_);

  if (v2)
  {
    v3 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
    v4 = 0.4;
  }
  else
  {
    v5 = objc_msgSend(v0, sel_whiteColor);
    v6 = OUTLINED_FUNCTION_70_0((uint64_t)v5, sel__isSimilarToColor_withinPercentage_);

    if (v6)
      return objc_msgSend(v0, sel_tertiarySystemFillColor);
    v3 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
    v4 = 0.3;
  }
  return objc_msgSend(v3, sel_initWithWhite_alpha_, v4, v4);
}

double static Rec709Luma.R.getter()
{
  return 0.2126;
}

double static Rec709Luma.G.getter()
{
  return 0.7152;
}

double static Rec709Luma.B.getter()
{
  return 0.0722;
}

id UIColor.clampingLuminance(between:and:desaturatingUnderLuminance:desaturatingOverLuminance:)(double a1, double a2, double a3, double a4)
{
  char v4;
  id result;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t inited;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  BOOL v22;
  double v23;
  double v24;
  double v25;
  double v29;
  double v30;
  BOOL v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  _BYTE v39[40];
  double v40;
  double v41;
  double v42;
  double v43;
  char v44;

  UIColor.getRGBA()((uint64_t)v39);
  sub_1B13D2728((uint64_t)v39, (uint64_t)&v40);
  if ((v44 & 1) != 0)
    return 0;
  v37 = a4;
  v11 = v40;
  v10 = v41;
  v13 = v42;
  v12 = v43;
  v14 = v40 * 0.2126 + v41 * 0.7152;
  v15 = v14 + v42 * 0.0722;
  if (v15 <= a2)
    v16 = v14 + v42 * 0.0722;
  else
    v16 = a2;
  if (v16 >= a1)
    a1 = v16;
  sub_1B1428BAC(0, &qword_1ED183968);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C6D10;
  *(double *)(inited + 32) = v11;
  *(double *)(inited + 40) = v10;
  *(double *)(inited + 48) = v13;
  v18 = COERCE_DOUBLE(sub_1B158E364(inited));
  result = (id)OUTLINED_FUNCTION_5_100();
  if ((v4 & 1) != 0)
  {
    __break(1u);
    __break(1u);
  }
  else
  {
    v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_1B16C6D10;
    *(double *)(v19 + 32) = v11;
    *(double *)(v19 + 40) = v10;
    *(double *)(v19 + 48) = v13;
    v20 = COERCE_DOUBLE(sub_1B1612794(v19));
    OUTLINED_FUNCTION_5_100();
    v38 = v12;
    v21 = 0.0;
    v22 = v15 < a3;
    v23 = 0.0;
    v24 = 0.0;
    if (!v22 && v15 < v37)
    {
      v24 = v18 - v20;
      if (v18 - v20 != 0.0)
      {
        if (v11 == v18)
        {
          v34 = fmod((v10 - v13) / v24, 6.0);
          v23 = v34;
          if (v10 < v13)
            v23 = v34 + 6.0;
        }
        else
        {
          if (v10 == v18)
          {
            v35 = (v13 - v11) / v24;
            v36 = 2.0;
          }
          else
          {
            v35 = (v11 - v10) / v24;
            v36 = 4.0;
          }
          v23 = v35 + v36;
        }
      }
    }
    v25 = v24 * (1.0 - fabs(fmod(v23, 2.0) + -1.0));
    if (v23 < 0.0 || v23 > 1.0)
    {
      if (v23 < 1.0 || v23 > 2.0)
      {
        if (v23 < 2.0 || v23 > 3.0)
        {
          if (v23 > 5.0)
            v29 = v25;
          else
            v29 = v24;
          if (v23 > 5.0)
            v30 = v24;
          else
            v30 = v25;
          if (v23 < 4.0)
          {
            v29 = v25;
            v30 = v24;
          }
          v31 = v23 < 3.0 || v23 > 4.0;
          if (v31)
            v21 = v29;
          else
            v21 = v24;
          if (v31)
            v32 = 0.0;
          else
            v32 = v25;
          if (v31)
            v24 = v30;
          else
            v24 = 0.0;
        }
        else
        {
          v21 = v25;
          v32 = v24;
          v24 = 0.0;
        }
      }
      else
      {
        v32 = v24;
        v24 = v25;
      }
    }
    else
    {
      v32 = v25;
    }
    v33 = a1 - (v21 * 0.0722 + v32 * 0.7152 + v24 * 0.2126);
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v24 + v33, v32 + v33, v21 + v33, v38);
  }
  return result;
}

uint64_t sub_1B1612794(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v5 < v2)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

id UIColor.legibleForeground.getter()
{
  void *v0;
  double v1;
  double v2;
  void *v3;
  char **v4;

  objc_msgSend(v0, sel_ts_luminance);
  v2 = v1;
  v3 = (void *)objc_opt_self();
  v4 = &selRef_blackColor;
  if (v2 <= 0.7)
    v4 = &selRef_whiteColor;
  return objc_msgSend(v3, *v4);
}

id UIColor.dynamicLegibleForeground.getter()
{
  return sub_1B16128DC((uint64_t)&unk_1E632B2E0, (uint64_t)sub_1B16128C0);
}

id sub_1B1612850(uint64_t a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  v3 = UIColor.legibleForeground.getter();

  return v3;
}

uint64_t sub_1B161289C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B16128C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1612850(a1, *(id *)(v1 + 16));
}

id UIColor.dynamicLegibleSecondaryForeground.getter()
{
  return sub_1B16128DC((uint64_t)&unk_1E632B308, (uint64_t)sub_1B1612DA8);
}

id sub_1B16128DC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  id v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v6 = v2;
  return sub_1B1612D20(a2, v4);
}

id sub_1B1612938(void *a1, id a2)
{
  id v3;
  double v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v3 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  objc_msgSend(v3, sel_ts_luminance);
  if (v4 > 0.7)
    v5 = 1;
  else
    v5 = 2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  sub_1B13C3454();
  sub_1B1428BAC(0, (unint64_t *)&qword_1ED186F90);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B16C95C0;
  *(_QWORD *)(v7 + 32) = a1;
  v8 = (void *)objc_opt_self();
  v9 = a1;
  *(_QWORD *)(v7 + 40) = objc_msgSend(v8, sel_traitCollectionWithUserInterfaceStyle_, v5);
  sub_1B16B9B78();
  v10 = sub_1B13C33E4();
  v11 = objc_msgSend(v6, sel_resolvedColorWithTraitCollection_, v10);

  return v11;
}

void sub_1B1612AA0(uint64_t a1)
{
  sub_1B13BA76C(0.92, 0.08, a1, &qword_1EEF35A50);
}

id static UIColor.disabled.getter()
{
  return sub_1B13A666C(&qword_1EEF2F918, (id *)&qword_1EEF35A50);
}

id sub_1B1612AD8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.866666667, 0.0901960784, 0.105882353, 1.0);
  qword_1EEF35A58 = (uint64_t)result;
  return result;
}

id static UIColor.accentRed.getter()
{
  return sub_1B13A666C(&qword_1EEF2F920, (id *)&qword_1EEF35A58);
}

id sub_1B1612B40()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.941176471, 0.588235294, 0.196078431, 1.0);
  qword_1EEF35A60 = (uint64_t)result;
  return result;
}

id static UIColor.accentOrange.getter()
{
  return sub_1B13A666C(&qword_1EEF2F928, (id *)&qword_1EEF35A60);
}

id sub_1B1612BA8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.960784314, 0.62745098, 0.0901960784, 1.0);
  qword_1EEF35A68 = (uint64_t)result;
  return result;
}

id static UIColor.subscriptionOrange.getter()
{
  return sub_1B13A666C(qword_1EEF2F930, (id *)&qword_1EEF35A68);
}

double static UIColor.darkLightLuminanceThreshold.getter()
{
  return 0.7;
}

id UIColor.blend(with:alpha:)(uint64_t a1, double a2)
{
  double v4;
  double v5;
  double v6;
  _BYTE v8[40];
  _BYTE v9[40];
  double v10[4];
  char v11;
  _QWORD v12[4];
  char v13;

  UIColor.getRGBA()((uint64_t)v8);
  sub_1B13D2728((uint64_t)v8, (uint64_t)v12);
  if ((v13 & 1) != 0)
    return 0;
  if (!a1)
    return 0;
  v4 = *(double *)v12;
  v5 = *(double *)&v12[1];
  v6 = *(double *)&v12[2];
  UIColor.getRGBA()((uint64_t)v9);
  sub_1B13D2728((uint64_t)v9, (uint64_t)v10);
  if ((v11 & 1) != 0)
    return 0;
  else
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v4 * a2 + (1.0 - a2) * v10[0], v5 * a2 + (1.0 - a2) * v10[1], v6 * a2 + (1.0 - a2) * v10[2], 1.0);
}

uint64_t sub_1B1612D00()
{
  return UIColor.identifier.getter();
}

id sub_1B1612D20(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  _QWORD v6[6];

  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1B1523F00;
  v6[3] = &block_descriptor_69;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend(v2, sel_initWithDynamicProvider_, v3);
  _Block_release(v3);
  swift_release();
  return v4;
}

id sub_1B1612DA8(void *a1)
{
  uint64_t v1;

  return sub_1B1612938(a1, *(id *)(v1 + 16));
}

ValueMetadata *type metadata accessor for Rec709Luma()
{
  return &type metadata for Rec709Luma;
}

uint64_t dispatch thunk of BlueprintCellPrefetcherType.prefetchCell(for:in:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t Settings.Automation.RunnerState.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B16BA7F0();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void sub_1B1612E24()
{
  sub_1B14AC1C8();
}

void sub_1B1612E30()
{
  sub_1B16792D8();
}

uint64_t sub_1B1612E38(uint64_t a1)
{
  char *v1;

  return sub_1B149F4A4(a1, *v1);
}

void sub_1B1612E40()
{
  sub_1B1679B14();
}

uint64_t sub_1B1612E48@<X0>(char *a1@<X8>)
{
  return Settings.Automation.RunnerState.init(rawValue:)(a1);
}

uint64_t sub_1B1612E54()
{
  sub_1B145E1CC();
  return sub_1B16B9AE8();
}

uint64_t sub_1B1612E94()
{
  sub_1B145E1CC();
  return sub_1B16B9ADC();
}

uint64_t static Settings.Automation.runnerState.getter()
{
  if (qword_1ED184978 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.Automation()
{
  return &type metadata for Settings.Automation;
}

ValueMetadata *type metadata accessor for Settings.Automation.RunnerState()
{
  return &type metadata for Settings.Automation.RunnerState;
}

void sub_1B1612F3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17E1C0)
  {
    v0 = sub_1B16B7F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED17E1C0);
  }
}

void type metadata accessor for JSONSchemaStringValueRowControlView()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for JSONSchemaNumberValueRowControlView()
{
  OUTLINED_FUNCTION_11_0();
}

void sub_1B1612FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain();
  OUTLINED_FUNCTION_32();
  sub_1B16B9740();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_67();
}

void sub_1B1613018(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  OUTLINED_FUNCTION_107();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  OUTLINED_FUNCTION_107();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1B16B9740();
  OUTLINED_FUNCTION_20_0();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  OUTLINED_FUNCTION_107();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_31();
}

void sub_1B16130C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  OUTLINED_FUNCTION_0_0();
}

void type metadata accessor for JSONSchemaIntegerValueRowControlView()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B1613144(uint64_t a1)
{
  OUTLINED_FUNCTION_52_25(a1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_29_33();
}

uint64_t sub_1B161317C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain();
  swift_retain();
  sub_1B16B9740();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B16131F8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1B16132B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_1B1613328(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B1613368(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for JSONSchemaBoolValueRowControlView()
{
  OUTLINED_FUNCTION_11_0();
}

void sub_1B16133C4()
{
  unint64_t v0;

  sub_1B1613538(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1B1613448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 64);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    sub_1B1613538(0);
    sub_1B16B9740();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1B16B8F9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

void sub_1B1613538(uint64_t a1)
{
  sub_1B16139A4(a1, &qword_1EEF348B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD8E80], MEMORY[0x1E0CD87D0]);
}

uint64_t sub_1B1613554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 64);
  sub_1B1613538(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_1B16B8F9C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1B16135D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 64);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  sub_1B1613538(0);
  sub_1B16B9740();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1B16B8F9C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1B16136A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *a1 = *a2;
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 64);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_1B13E0BC4((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))sub_1B1613538);
    sub_1B1613538(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1B16B8F9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B1613788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 64);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  sub_1B1613538(0);
  v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1B16B8F9C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1B1613834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 64);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_1B13E0BC4(a1 + v6, (uint64_t (*)(_QWORD))sub_1B1613538);
    sub_1B1613538(0);
    v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_1B16B8F9C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B1613910()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B161391C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    OUTLINED_FUNCTION_8_83((uint64_t)a1, qword_1EEF35A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD8E80], MEMORY[0x1E0CD87E8]);
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 64), a2, v8);
  }
}

void sub_1B16139A4(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = OUTLINED_FUNCTION_61_0(0, (uint64_t)a2, a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, v4);
  }
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B16139EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B16139F8(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_31();
  }
  else
  {
    OUTLINED_FUNCTION_8_83((uint64_t)a1, qword_1EEF35A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD8E80], MEMORY[0x1E0CD87E8]);
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 64), a2, a2, v7);
  }
}

void type metadata accessor for JSONSchemaPresetSelectorView()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t sub_1B1613A7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B1613A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1B1613AA4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  int v19;
  char v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  uint64_t *v23;
  void (*v24)(_BYTE *, uint64_t);
  _BYTE v26[16];
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;

  v4 = type metadata accessor for JSONSchemaView();
  MEMORY[0x1E0C80A78](v4, v5);
  sub_1B161C0D0();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = &v26[-v14];
  v27 = a1;
  sub_1B1613DCC(a1);
  sub_1B1618338((uint64_t)&qword_1EEF34708);
  sub_1B16B8FD8();
  if ((*(_BYTE *)(a1 + 24) & 1) != 0 || (*(_BYTE *)a1 & 1) != 0)
  {
    v30 = *(_OWORD *)(a1 + 32);
    v28 = *(_OWORD *)(a1 + 32);
    sub_1B16139A4(0, &qword_1EEF331A0, type metadata accessor for JSONSchemaValueArray, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    sub_1B16B9440();
    v19 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC5TeaUI20JSONSchemaValueArray_validations + 8);
    v20 = *(_BYTE *)(v29 + OBJC_IVAR____TtC5TeaUI20JSONSchemaValueArray_validations + 24);
    swift_release();
    if (v19 != 1 || (v16 = 0, KeyPath = 0, v18 = 0, (v20 & 1) == 0))
    {
      v28 = v30;
      sub_1B16B9440();
      sub_1B1484108();
      swift_release();
      v16 = sub_1B16B9404();
      v28 = v30;
      sub_1B16B9440();
      sub_1B1484108();
      swift_release();
      v18 = sub_1B16B93EC();
      KeyPath = swift_getKeyPath();
    }
  }
  else
  {
    v16 = 0;
    KeyPath = 0;
    v18 = 0;
  }
  v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16);
  v21(v11, v15, v7);
  v21(a2, v11, v7);
  sub_1B161C04C();
  v23 = (uint64_t *)&a2[*(int *)(v22 + 48)];
  *v23 = v16;
  v23[1] = KeyPath;
  v23[2] = v18;
  sub_1B161A470(v16);
  v24 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v24(v15, v7);
  sub_1B161A4AC(v16);
  return ((uint64_t (*)(_BYTE *, uint64_t))v24)(v11, v7);
}

void sub_1B1613DCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  v2 = type metadata accessor for JSONSchema(0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_OWORD *)(a1 + 32);
  v6 = *(_OWORD *)(a1 + 32);
  sub_1B16139A4(0, &qword_1EEF331A0, type metadata accessor for JSONSchemaValueArray, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B147C6A8(v7 + OBJC_IVAR____TtC5TeaUI15JSONSchemaValue_schema, (uint64_t)v5, type metadata accessor for JSONSchema);
  swift_release();
  v6 = v8;
  sub_1B16B9440();
  sub_1B15AFDAC();
}

uint64_t sub_1B1613EE0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v4 = sub_1B16B9164();
  MEMORY[0x1E0C80A78](v4, v5);
  sub_1B16B9158();
  sub_1B16B914C();
  sub_1B16B9740();
  sub_1B16B9140();
  swift_bridgeObjectRelease();
  sub_1B16B914C();
  sub_1B16139A4(0, &qword_1EEF331A0, type metadata accessor for JSONSchemaValueArray, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B1483014();
  v7 = v6;
  swift_release();
  if (v7 >> 62)
  {
    sub_1B16B9740();
    sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B16B9134();
  sub_1B16B914C();
  sub_1B16B917C();
  v8 = sub_1B16B9314();
  v10 = v9;
  v12 = v11;
  if ((a1[24] & 1) != 0 || (*a1 & 1) != 0)
    sub_1B16B923C();
  else
    sub_1B16B9248();
  v13 = v12 & 1;
  v14 = sub_1B16B92FC();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_1B161B270(v8, v10, v13);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v16;
  *(_BYTE *)(a2 + 16) = v18 & 1;
  *(_QWORD *)(a2 + 24) = v20;
  return result;
}

void sub_1B161416C(uint64_t a1@<X8>)
{
  sub_1B16186E0((void (*)(uint64_t))sub_1B1613AA4, a1);
}

void sub_1B16141AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1B16B9CE0();
  sub_1B161B1B4();
  v0 = sub_1B16B9CD4();
  v1 = OUTLINED_FUNCTION_3_25();
  v2 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = v2;
  OUTLINED_FUNCTION_64_8(v1);
  sub_1B161B1B4();
  v3 = sub_1B16B9CD4();
  v4 = OUTLINED_FUNCTION_3_25();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  OUTLINED_FUNCTION_64_8(v4);
  sub_1B16B9518();
  sub_1B16B94C4();
  OUTLINED_FUNCTION_22_0();
}

uint64_t sub_1B161428C@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  char v3;
  uint64_t result;

  sub_1B16139A4(0, &qword_1EEF35D28, type metadata accessor for JSONSchemaValueBool, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B1483088();
  v3 = v2;
  result = swift_release();
  *a1 = v3 & 1;
  return result;
}

uint64_t sub_1B1614308()
{
  sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
  sub_1B16B9500();
  sub_1B16139A4(0, &qword_1EEF35D28, type metadata accessor for JSONSchemaValueBool, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B148444C();
  return swift_release();
}

uint64_t sub_1B16143C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  sub_1B14AA9C8();
  sub_1B16B9740();
  v4 = sub_1B16B9320();
  v6 = v5;
  v8 = v7;
  if ((*(_BYTE *)(a1 + 40) & 1) != 0
    || (sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]), MEMORY[0x1B5E1CE80](&v18), v18 == 1))
  {
    sub_1B16B923C();
  }
  else
  {
    sub_1B16B9248();
  }
  v9 = v8 & 1;
  v10 = sub_1B16B92FC();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_1B161B270(v4, v6, v9);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v14 & 1;
  *(_QWORD *)(a2 + 24) = v16;
  return result;
}

void sub_1B1614530()
{
  sub_1B16141AC();
}

uint64_t sub_1B1614568()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B1614578(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v41[2] = a2;
  sub_1B161AD30();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161A2CC(0, &qword_1EEF35D00, v9, (uint64_t (*)(uint64_t))sub_1B161AEB8, MEMORY[0x1E0CDB848]);
  v41[1] = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v41 - v12;
  sub_1B161AEB8(0);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(_OWORD *)(a1 + 48);
  sub_1B16139A4(0, &qword_1EEF35D08, type metadata accessor for JSONSchemaValueInteger, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v19 = *(_QWORD *)(v42 + OBJC_IVAR____TtC5TeaUI22JSONSchemaValueInteger_suppliedValues);
  v20 = *(unsigned __int8 *)(v42 + OBJC_IVAR____TtC5TeaUI22JSONSchemaValueInteger_suppliedValues + 8);
  sub_1B147C694(v19, *(_BYTE *)(v42 + OBJC_IVAR____TtC5TeaUI22JSONSchemaValueInteger_suppliedValues + 8));
  swift_release();
  if (v20 == 255)
    goto LABEL_4;
  if ((v20 & 1) == 0)
  {
    sub_1B147D94C(v19, v20);
LABEL_4:
    v21 = sub_1B16171AC();
    v23 = v22;
    v44 = *(_OWORD *)a1;
    LOBYTE(v45) = *(_BYTE *)(a1 + 16);
    sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
    MEMORY[0x1B5E1CE80](&v42);
    v24 = v42;
    *(_QWORD *)v18 = v21;
    *((_QWORD *)v18 + 1) = v23;
    v18[16] = v24;
    v25 = &v18[*(int *)(v15 + 40)];
    *(_QWORD *)v25 = sub_1B16B9128();
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = 1;
    sub_1B161BFE4(0, (uint64_t)&unk_1EEF35D10);
    sub_1B1614BF0((__int128 *)a1, &v25[*(int *)(v26 + 44)]);
    sub_1B147C6A8((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1B161AEB8);
    swift_storeEnumTagMultiPayload();
    sub_1B161B0C0();
    sub_1B161B0DC();
    sub_1B16B91B8();
    sub_1B13E0BC4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1B161AEB8);
    return;
  }
  v46 = sub_1B16171AC();
  v47 = v27;
  sub_1B16B9CE0();
  sub_1B161B1B4();
  v28 = sub_1B16B9CD4();
  v29 = swift_allocObject();
  v41[0] = v5;
  v30 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v30;
  v31 = v30;
  v32 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v29 + 48) = v32;
  v33 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v29 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v29 + 80) = v33;
  sub_1B161B1B4();
  v34 = sub_1B16B9CD4();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = v31;
  v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 48) = v36;
  v37 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v35 + 80) = v37;
  v38 = sub_1B16B9518();
  v42 = v44;
  v43 = v45;
  MEMORY[0x1E0C80A78](v38, v39);
  sub_1B161ADD0();
  sub_1B161A72C((uint64_t)&unk_1EEF35CA8);
  sub_1B14AA9C8();
  sub_1B16B94AC();
  sub_1B147D94C(v19, v20);
  v40 = v41[0];
  (*(void (**)(char *, char *, uint64_t))(v41[0] + 16))(v13, v8, v4);
  swift_storeEnumTagMultiPayload();
  sub_1B161B0C0();
  sub_1B161B0DC();
  sub_1B16B91B8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v4);
}

uint64_t sub_1B16149C8()
{
  swift_getKeyPath();
  sub_1B161AE9C(0);
  sub_1B1419B80(0, &qword_1EEF35B28, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9358]);
  sub_1B1618338((uint64_t)&unk_1EEF35CA0);
  sub_1B1619FCC();
  sub_1B16B9740();
  return sub_1B16B9530();
}

uint64_t sub_1B1614AB8()
{
  return sub_1B16B8FCC();
}

uint64_t sub_1B1614B1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1B14AA9C8();
  sub_1B16B9740();
  result = sub_1B16B9320();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1B1614B84@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1B16BA8B0();
  sub_1B14AA9C8();
  result = sub_1B16B9320();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1B1614BF0@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  _OWORD *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  void (*v70)(char *, uint64_t);
  uint64_t *v72;
  uint64_t v73;
  __int128 v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[16];
  _BYTE v96[16];
  _BYTE v97[16];
  _BYTE v98[16];
  _BYTE v99[16];
  _BYTE v100[16];
  _BYTE v101[16];
  _BYTE v102[16];
  _BYTE v103[16];
  _BYTE v104[24];

  v83 = a2;
  v73 = sub_1B161B024();
  MEMORY[0x1E0C80A78](v73, v3);
  v72 = (uint64_t *)((char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B161AFB8();
  MEMORY[0x1E0C80A78](v5, v6);
  v82 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v84 = (uint64_t)&v72 - v10;
  sub_1B1419B80(0, &qword_1EEF34558, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], MEMORY[0x1E0CE0618]);
  v81 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v72 - v14;
  sub_1B161A1A8();
  v79 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161A900(0);
  v80 = v20;
  v86 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v21);
  v78 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v24);
  v85 = (char *)&v72 - v25;
  sub_1B16B9170();
  v76 = v27;
  v77 = v26;
  v75 = v28;
  sub_1B16B9CE0();
  sub_1B161B1B4();
  v29 = sub_1B16B9CD4();
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = v31;
  v32 = a1[1];
  *(_OWORD *)(v30 + 32) = *a1;
  *(_OWORD *)(v30 + 48) = v32;
  v33 = a1[3];
  *(_OWORD *)(v30 + 64) = a1[2];
  *(_OWORD *)(v30 + 80) = v33;
  sub_1B161B1B4();
  v34 = sub_1B16B9CD4();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = v31;
  v36 = a1[1];
  *(_OWORD *)(v35 + 32) = *a1;
  *(_OWORD *)(v35 + 48) = v36;
  v37 = a1[3];
  *(_OWORD *)(v35 + 64) = a1[2];
  *(_OWORD *)(v35 + 80) = v37;
  sub_1B16B9518();
  v74 = v90;
  v38 = v91;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  v88 = v74;
  v89 = v38;
  sub_1B16B959C();
  v39 = *((_BYTE *)a1 + 41);
  KeyPath = swift_getKeyPath();
  v41 = swift_allocObject();
  v42 = 1;
  *(_BYTE *)(v41 + 16) = (v39 & 1) == 0;
  v43 = v81;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v15, v81);
  v44 = (uint64_t *)&v19[*(int *)(v79 + 36)];
  *v44 = KeyPath;
  v44[1] = (uint64_t)sub_1B161C1D8;
  v44[2] = v41;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v43);
  sub_1B161A974();
  v45 = v78;
  v46 = v80;
  sub_1B16B9368();
  sub_1B13E0BC4((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B161A1A8);
  v47 = v45;
  v48 = v46;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v45, v46);
  v88 = a1[3];
  v90 = a1[3];
  sub_1B16139A4(0, &qword_1EEF35D08, type metadata accessor for JSONSchemaValueInteger, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v49 = *(_QWORD *)(v87 + OBJC_IVAR____TtC5TeaUI22JSONSchemaValueInteger_suppliedValues);
  v50 = *(unsigned __int8 *)(v87 + OBJC_IVAR____TtC5TeaUI22JSONSchemaValueInteger_suppliedValues + 8);
  sub_1B147C694(v49, *(_BYTE *)(v87 + OBJC_IVAR____TtC5TeaUI22JSONSchemaValueInteger_suppliedValues + 8));
  swift_release();
  if (v50 == 255)
    goto LABEL_5;
  if ((v50 & 1) != 0)
  {
    sub_1B147D94C(v49, v50);
LABEL_5:
    v57 = v84;
    goto LABEL_6;
  }
  v51 = (_OWORD *)swift_allocObject();
  v52 = a1[1];
  v51[1] = *a1;
  v51[2] = v52;
  v53 = a1[3];
  v51[3] = a1[2];
  v51[4] = v53;
  v55 = v72;
  v54 = v73;
  *v72 = v49;
  v55[1] = (uint64_t)sub_1B161B1AC;
  v55[2] = (uint64_t)v51;
  v56 = (uint64_t *)((char *)v55 + *(int *)(v54 + 64));
  *v56 = swift_getKeyPath();
  sub_1B1613538(0);
  swift_storeEnumTagMultiPayload();
  sub_1B161B1B4();
  sub_1B15B4E04(0);
  sub_1B1618338((uint64_t)&qword_1EEF345B0);
  sub_1B161B0A4();
  v57 = v84;
  sub_1B16B8FD8();
  v42 = 0;
LABEL_6:
  sub_1B161AB04(0, (uint64_t)&unk_1EEF35CD8);
  __swift_storeEnumTagSinglePayload(v57, v42, 1, v58);
  if ((*((_BYTE *)a1 + 40) & 1) != 0
    || (v90 = *a1,
        LOBYTE(v91) = *((_BYTE *)a1 + 16),
        sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]), MEMORY[0x1B5E1CE80](&v87), v59 = 0, v60 = 0, v61 = 0, v87 == 1))
  {
    v90 = v88;
    sub_1B16B9440();
    sub_1B1484760((uint64_t)&v90);
    swift_release();
    v62 = MEMORY[0x1E0DEB070];
    sub_1B161A52C((uint64_t)&v90, (uint64_t)v99, (unint64_t *)&qword_1EEF310D0, MEMORY[0x1E0DEB070]);
    sub_1B161A52C((uint64_t)v99, (uint64_t)v100, (unint64_t *)&qword_1EEF310D0, v62);
    if (v100[8] != 1)
      goto LABEL_14;
    sub_1B161A52C((uint64_t)&v91, (uint64_t)v98, (unint64_t *)&qword_1EEF310D0, v62);
    sub_1B161A52C((uint64_t)v98, (uint64_t)v101, (unint64_t *)&qword_1EEF310D0, v62);
    if (v101[8] != 1)
      goto LABEL_14;
    sub_1B161A52C((uint64_t)&v92, (uint64_t)v97, (unint64_t *)&qword_1EEF310D0, v62);
    sub_1B161A52C((uint64_t)v97, (uint64_t)v102, (unint64_t *)&qword_1EEF310D0, v62);
    if (v102[8] == 1
      && (sub_1B161A52C((uint64_t)&v93, (uint64_t)v96, (unint64_t *)&qword_1EEF310D0, v62),
          sub_1B161A52C((uint64_t)v96, (uint64_t)v103, (unint64_t *)&qword_1EEF310D0, v62),
          v103[8] == 1)
      && (sub_1B161A52C((uint64_t)&v94, (uint64_t)v95, (unint64_t *)&qword_1EEF310D0, v62),
          sub_1B161A52C((uint64_t)v95, (uint64_t)v104, (unint64_t *)&qword_1EEF310D0, v62),
          (v104[8] & 1) != 0))
    {
      v59 = 0;
      v60 = 0;
      v61 = 0;
    }
    else
    {
LABEL_14:
      v87 = v88;
      sub_1B16B9440();
      sub_1B1484A5C();
      swift_release();
      v59 = sub_1B16B9404();
      v87 = v88;
      sub_1B16B9440();
      sub_1B1484A5C();
      swift_release();
      v61 = sub_1B16B93EC();
      v60 = swift_getKeyPath();
    }
  }
  v63 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v63(v45, v85, v48);
  v64 = v84;
  v65 = v82;
  sub_1B147C6A8(v84, v82, (uint64_t (*)(_QWORD))sub_1B161AFB8);
  v66 = v83;
  v63(v83, v47, v48);
  sub_1B161A87C(0, (uint64_t)&unk_1EEF35CC8);
  v68 = v67;
  sub_1B147C6A8(v65, (uint64_t)&v66[*(int *)(v67 + 48)], (uint64_t (*)(_QWORD))sub_1B161AFB8);
  v69 = (uint64_t *)&v66[*(int *)(v68 + 64)];
  *v69 = v59;
  v69[1] = v60;
  v69[2] = v61;
  sub_1B161A470(v59);
  sub_1B13E0BC4(v64, (uint64_t (*)(_QWORD))sub_1B161AFB8);
  v70 = *(void (**)(char *, uint64_t))(v86 + 8);
  v70(v85, v48);
  sub_1B161A4AC(v59);
  sub_1B13E0BC4(v65, (uint64_t (*)(_QWORD))sub_1B161AFB8);
  return ((uint64_t (*)(char *, uint64_t))v70)(v47, v48);
}

void sub_1B16154E8(uint64_t a1, uint64_t a2, __n128 *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_46_18(a1, a2, a3);
  OUTLINED_FUNCTION_8_83(v4, &qword_1EEF35D08, type metadata accessor for JSONSchemaValueInteger, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  OUTLINED_FUNCTION_34_30();
  v5 = sub_1B14830F4();
  OUTLINED_FUNCTION_45();
  *v3 = v5;
  OUTLINED_FUNCTION_90();
}

void sub_1B161553C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_2_134(a1, a2, a3, a4);
  OUTLINED_FUNCTION_33_3(v4, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
  OUTLINED_FUNCTION_28_34();
}

uint64_t sub_1B1615584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v13;
  double v14;
  __int128 v15;
  double v16;
  double v17;
  double v18;

  if ((LOBYTE(v14) & 1) == 0)
  {
    v15 = *(_OWORD *)(v2 + 48);
    OUTLINED_FUNCTION_8_83(a1, &qword_1EEF35D08, type metadata accessor for JSONSchemaValueInteger, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    OUTLINED_FUNCTION_7_84();
    v3 = sub_1B14830F4();
    a1 = OUTLINED_FUNCTION_45();
    if (v3 != v1)
    {
      OUTLINED_FUNCTION_1_158(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, *(double *)&v15, *((double *)&v15 + 1), v16, v17, v18);
      a1 = sub_1B16B9500();
    }
  }
  OUTLINED_FUNCTION_8_83(a1, &qword_1EEF35D08, type metadata accessor for JSONSchemaValueInteger, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  OUTLINED_FUNCTION_7_84();
  sub_1B14848DC();
  return OUTLINED_FUNCTION_45();
}

uint64_t sub_1B1615628()
{
  sub_1B16139A4(0, &qword_1EEF35D08, type metadata accessor for JSONSchemaValueInteger, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B14848DC();
  return swift_release();
}

void sub_1B1615698(uint64_t a1@<X8>)
{
  sub_1B1616034(sub_1B161ACF8, (void (*)(uint64_t))sub_1B1614578, a1);
}

uint64_t sub_1B16156E0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B16156F0()
{
  type metadata accessor for JSONSchema.LabeledValue();
}

void sub_1B1615740()
{
  OUTLINED_FUNCTION_70_18();
  sub_1B1618290();
  OUTLINED_FUNCTION_140();
}

void sub_1B1615768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = a1;
  *(_QWORD *)(v5 - 88) = v1;
  sub_1B16B953C();
  sub_1B1618338((uint64_t)&unk_1EEF35B00);
  *(_QWORD *)(v5 - 128) = v6;
  OUTLINED_FUNCTION_140();
}

void sub_1B16157B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);

  *(_QWORD *)(v14 - 120) = MEMORY[0x1E0DEDCE8];
  *(_QWORD *)(v14 - 112) = v11;
  *(_QWORD *)(v14 - 104) = MEMORY[0x1E0DEDCF8];
  *(_QWORD *)(v14 - 96) = a1;
  v15 = sub_1B16B92F0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&a9 - v22;
  v24 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v14 - 176) = v12;
  *(_QWORD *)(v14 - 168) = v24;
  *(_QWORD *)(v14 - 160) = *(_QWORD *)(v14 - 216);
  *(_QWORD *)(v14 - 152) = v13;
  v25 = *(_QWORD *)(v14 - 208);
  *(_QWORD *)(v14 - 144) = v9;
  *(_QWORD *)(v14 - 136) = v25;
  sub_1B16B92E4();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDD950], v15);
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v26(v23, v19, v15);
  v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v19, v15);
  v26(*(char **)(v14 - 200), v23, v15);
  v27(v23, v15);
  OUTLINED_FUNCTION_47();
}

void sub_1B16158B4()
{
  type metadata accessor for JSONSchemaPresetSelectorView();
}

void sub_1B161590C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 - 224) = a1;
  *(_QWORD *)(v6 - 256) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v6 - 128) = v5;
  *(_QWORD *)(v6 - 120) = v4;
  *(_QWORD *)(v6 - 288) = v4;
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v7;
  type metadata accessor for JSONSchema.LabeledValue();
}

uint64_t sub_1B1615964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v31;
  void (*v32)(_BYTE *, uint64_t);
  _BYTE v34[80];

  v5 = sub_1B16B9C68();
  *(_QWORD *)(v4 - 200) = v5;
  sub_1B1618290();
  v7 = v6;
  *(_QWORD *)(v4 - 216) = v6;
  v8 = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF48], v5);
  *(_QWORD *)(v4 - 208) = v8;
  *(_QWORD *)(v4 - 128) = v5;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v7;
  *(_QWORD *)(v4 - 104) = v8;
  *(_QWORD *)(v4 - 296) = v0;
  *(_QWORD *)(v4 - 96) = v0;
  v9 = sub_1B16B953C();
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13, v14);
  *(_QWORD *)(v4 - 232) = &v34[-v15];
  v16 = *(_QWORD **)(v4 - 240);
  v17 = *v16;
  *(_QWORD *)(v4 - 272) = *v16;
  *(_QWORD *)(v4 - 128) = v17;
  v18 = *(_QWORD *)(v4 - 248);
  *(_QWORD *)(v4 - 176) = v1;
  *(_QWORD *)(v4 - 168) = v18;
  *(_QWORD *)(v4 - 160) = v3;
  v19 = *(_QWORD *)(v4 - 264);
  *(_QWORD *)(v4 - 152) = v19;
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 280) = swift_getKeyPath();
  v20 = *(_QWORD *)(v4 - 256);
  v21 = v2;
  v22 = v16;
  v23 = *(_QWORD *)(v4 - 224);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v20 + 16))(v2, v22, v23);
  v24 = v20;
  v25 = (*(unsigned __int8 *)(v20 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v26 = (char *)swift_allocObject();
  *((_QWORD *)v26 + 2) = v1;
  *((_QWORD *)v26 + 3) = v18;
  *((_QWORD *)v26 + 4) = *(_QWORD *)(v4 - 288);
  *((_QWORD *)v26 + 5) = v19;
  *((_QWORD *)v26 + 6) = *(_QWORD *)(v4 - 296);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(&v26[v25], v21, v23);
  sub_1B1618338((uint64_t)&unk_1EEF35B00);
  v28 = v27;
  sub_1B16B9740();
  sub_1B16B9530();
  *(_QWORD *)(v4 - 136) = v28;
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDFEE8], v9, v4 - 136);
  v29 = *(_QWORD *)(v4 - 192);
  v30 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v29 + 16);
  v31 = *(_BYTE **)(v4 - 232);
  v30((uint64_t)v31, v12, v9);
  v32 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
  v32(v12, v9);
  v30(*(_QWORD *)(v4 - 184), v31, v9);
  return ((uint64_t (*)(_BYTE *, uint64_t))v32)(v31, v9);
}

void sub_1B1615BAC()
{
  type metadata accessor for JSONSchema.LabeledValue();
}

void sub_1B1615C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v14 - 264) = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v14 - 256) = (char *)&a9 - v15;
  *(_QWORD *)(v14 - 128) = v13;
  *(_QWORD *)(v14 - 120) = v12;
  *(_QWORD *)(v14 - 112) = v11;
  *(_QWORD *)(v14 - 104) = v10;
  *(_QWORD *)(v14 - 272) = v10;
  *(_QWORD *)(v14 - 96) = v9;
  type metadata accessor for JSONSchemaPresetSelectorView();
}

uint64_t sub_1B1615C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = &v22[-v11];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v8 + 16))(&v22[-v11], *(_QWORD *)(v6 - 248), a1, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v4, *(_QWORD *)(v6 - 200), v2);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + *(unsigned __int8 *)(v5 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = (char *)swift_allocObject();
  v16 = *(_QWORD *)(v6 - 240);
  v17 = *(_QWORD *)(v6 - 224);
  *((_QWORD *)v15 + 2) = v16;
  *((_QWORD *)v15 + 3) = v17;
  *((_QWORD *)v15 + 4) = *(_QWORD *)(v6 - 208);
  *((_QWORD *)v15 + 5) = v3;
  v18 = *(_QWORD *)(v6 - 232);
  *((_QWORD *)v15 + 6) = v18;
  (*(void (**)(char *, _BYTE *, uint64_t))(v8 + 32))(&v15[v13], v12, a1);
  (*(void (**)(char *, _QWORD, _QWORD))(v5 + 32))(&v15[v14], *(_QWORD *)(v6 - 256), *(_QWORD *)(v6 - 264));
  *(_QWORD *)(v6 - 176) = v16;
  *(_QWORD *)(v6 - 168) = v17;
  v19 = *(_QWORD *)(v6 - 272);
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v6 - 208);
  *(_QWORD *)(v6 - 152) = v19;
  v20 = *(_QWORD *)(v6 - 200);
  *(_QWORD *)(v6 - 144) = v18;
  *(_QWORD *)(v6 - 136) = v20;
  sub_1B1419B80(0, (unint64_t *)&qword_1EEF315D8, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for VerticallyLabeledContent);
  sub_1B161A9FC((uint64_t)&qword_1EEF315F0);
  return sub_1B16B9470();
}

void sub_1B1615DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v4 = sub_1B16B8F9C();
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  (*(void (**)(uint64_t, __n128))(a1 + 8))(a2, v6);
  type metadata accessor for JSONSchemaPresetSelectorView();
}

uint64_t sub_1B1615E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B1619BCC(v2);
  sub_1B16B8F90();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_1B1615ED8()
{
  sub_1B16B9740();
  sub_1B1615F84();
}

__n128 sub_1B1615F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  char v5;
  uint64_t v6;

  result = v4;
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 8) = v1;
  *(_BYTE *)(v0 + 16) = 1;
  *(__n128 *)(v0 + 24) = v4;
  *(_BYTE *)(v0 + 40) = v5;
  *(_QWORD *)(v0 + 48) = v6;
  return result;
}

void sub_1B1615F84()
{
  type metadata accessor for JSONSchema.LabeledValue();
}

uint64_t sub_1B1615FC0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  char v3;
  uint64_t v4;

  sub_1B16BA8B0();
  sub_1B14AA9C8();
  result = sub_1B16B9320();
  *(_QWORD *)v0 = result;
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = v3 & 1;
  *(_QWORD *)(v0 + 24) = v4;
  return result;
}

void sub_1B1616014()
{
  sub_1B16B90D4();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1616034(void (*a1)(_QWORD)@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a3 = sub_1B16B9128();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  a1(0);
  a2(v3);
  OUTLINED_FUNCTION_31();
}

void sub_1B1616080(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v41[2] = a2;
  sub_1B161A5A4();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161A2CC(0, &qword_1EEF35C58, v9, (uint64_t (*)(uint64_t))sub_1B161A77C, MEMORY[0x1E0CDB848]);
  v41[1] = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v41 - v12;
  sub_1B161A77C(0);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(_OWORD *)(a1 + 48);
  sub_1B16139A4(0, &qword_1EEF35C60, type metadata accessor for JSONSchemaValueNumber, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v19 = *(_QWORD *)(v42 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueNumber_suppliedValues);
  v20 = *(unsigned __int8 *)(v42 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueNumber_suppliedValues + 8);
  sub_1B147C694(v19, *(_BYTE *)(v42 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueNumber_suppliedValues + 8));
  swift_release();
  if (v20 == 255)
    goto LABEL_4;
  if ((v20 & 1) == 0)
  {
    sub_1B147D94C(v19, v20);
LABEL_4:
    v21 = sub_1B16171AC();
    v23 = v22;
    v44 = *(_OWORD *)a1;
    LOBYTE(v45) = *(_BYTE *)(a1 + 16);
    sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
    MEMORY[0x1B5E1CE80](&v42);
    v24 = v42;
    *(_QWORD *)v18 = v21;
    *((_QWORD *)v18 + 1) = v23;
    v18[16] = v24;
    v25 = &v18[*(int *)(v15 + 40)];
    *(_QWORD *)v25 = sub_1B16B9128();
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = 1;
    sub_1B161BFE4(0, (uint64_t)&unk_1EEF35C68);
    sub_1B1616678((__int128 *)a1, &v25[*(int *)(v26 + 44)]);
    sub_1B147C6A8((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1B161A77C);
    swift_storeEnumTagMultiPayload();
    sub_1B161AC48();
    sub_1B161AC64();
    sub_1B16B91B8();
    sub_1B13E0BC4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1B161A77C);
    return;
  }
  v46 = sub_1B16171AC();
  v47 = v27;
  sub_1B16B9CE0();
  sub_1B161B1B4();
  v28 = sub_1B16B9CD4();
  v29 = swift_allocObject();
  v41[0] = v5;
  v30 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v30;
  v31 = v30;
  v32 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v29 + 48) = v32;
  v33 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v29 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v29 + 80) = v33;
  sub_1B161B1B4();
  v34 = sub_1B16B9CD4();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = v31;
  v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 48) = v36;
  v37 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v35 + 80) = v37;
  v38 = sub_1B16B9518();
  v42 = v44;
  v43 = v45;
  MEMORY[0x1E0C80A78](v38, v39);
  sub_1B161A644();
  sub_1B161A72C((uint64_t)&unk_1EEF35BE0);
  sub_1B14AA9C8();
  sub_1B16B94AC();
  sub_1B147D94C(v19, v20);
  v40 = v41[0];
  (*(void (**)(char *, char *, uint64_t))(v41[0] + 16))(v13, v8, v4);
  swift_storeEnumTagMultiPayload();
  sub_1B161AC48();
  sub_1B161AC64();
  sub_1B16B91B8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v4);
}

uint64_t sub_1B16164D0()
{
  swift_getKeyPath();
  sub_1B161A710(0);
  sub_1B1419B80(0, &qword_1EEF35B28, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9358]);
  sub_1B1618338((uint64_t)&unk_1EEF35BD8);
  sub_1B1619FCC();
  sub_1B16B9740();
  return sub_1B16B9530();
}

uint64_t sub_1B16165C0()
{
  return sub_1B16B8FCC();
}

uint64_t sub_1B1616624@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1B16B9D10();
  sub_1B14AA9C8();
  result = sub_1B16B9320();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1B1616678@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  id v41;
  char v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  int v50;
  _OWORD *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  void (*v72)(char *, uint64_t);
  uint64_t *v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[16];
  _BYTE v98[16];
  _BYTE v99[16];
  _BYTE v100[16];
  _BYTE v101[16];
  _BYTE v102[16];
  _BYTE v103[16];
  _BYTE v104[16];
  _BYTE v105[16];
  _BYTE v106[24];

  v84 = a2;
  v75 = sub_1B161ABAC();
  MEMORY[0x1E0C80A78](v75, v3);
  v74 = (uint64_t *)((char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B161AA98();
  MEMORY[0x1E0C80A78](v5, v6);
  v83 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v85 = (uint64_t)&v74 - v10;
  sub_1B1419B80(0, &qword_1EEF34558, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], MEMORY[0x1E0CE0618]);
  v81 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v74 - v13;
  sub_1B161A1A8();
  v80 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161A900(0);
  v86 = v19;
  v88 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v24);
  v87 = (char *)&v74 - v25;
  v26 = sub_1B16B9170();
  v78 = v27;
  v79 = v26;
  v76 = v28;
  v77 = v29;
  sub_1B16B9CE0();
  sub_1B161B1B4();
  v30 = sub_1B16B9CD4();
  v31 = swift_allocObject();
  v32 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v31 + 16) = v30;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = a1[1];
  *(_OWORD *)(v31 + 32) = *a1;
  *(_OWORD *)(v31 + 48) = v33;
  v34 = a1[3];
  *(_OWORD *)(v31 + 64) = a1[2];
  *(_OWORD *)(v31 + 80) = v34;
  sub_1B161B1B4();
  v35 = sub_1B16B9CD4();
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = v32;
  v37 = a1[1];
  *(_OWORD *)(v36 + 32) = *a1;
  *(_OWORD *)(v36 + 48) = v37;
  v38 = a1[3];
  *(_OWORD *)(v36 + 64) = a1[2];
  *(_OWORD *)(v36 + 80) = v38;
  sub_1B16B9518();
  v39 = v92;
  v40 = v93;
  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  objc_msgSend(v41, sel_setMaximumFractionDigits_, 100);
  objc_msgSend(v41, sel_setNumberStyle_, 1);
  v90 = v39;
  v91 = v40;
  sub_1B16B959C();
  v42 = *((_BYTE *)a1 + 41);
  KeyPath = swift_getKeyPath();
  v44 = swift_allocObject();
  *(_BYTE *)(v44 + 16) = (v42 & 1) == 0;
  v46 = v81;
  v45 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v18, v14, v82);
  v47 = (uint64_t *)&v18[*(int *)(v80 + 36)];
  *v47 = KeyPath;
  v47[1] = (uint64_t)sub_1B161C1D8;
  v47[2] = v44;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v45);
  sub_1B161A974();
  sub_1B16B9368();
  sub_1B13E0BC4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1B161A1A8);
  v48 = v22;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v87, v22, v86);
  v90 = a1[3];
  v92 = a1[3];
  sub_1B16139A4(0, &qword_1EEF35C60, type metadata accessor for JSONSchemaValueNumber, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v49 = *(_QWORD *)(v89 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueNumber_suppliedValues);
  v50 = *(unsigned __int8 *)(v89 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueNumber_suppliedValues + 8);
  sub_1B147C694(v49, *(_BYTE *)(v89 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueNumber_suppliedValues + 8));
  swift_release();
  if (v50 == 255)
  {
    v57 = v85;
    v58 = 1;
  }
  else if ((v50 & 1) != 0)
  {
    sub_1B147D94C(v49, v50);
    v58 = 1;
    v57 = v85;
  }
  else
  {
    v51 = (_OWORD *)swift_allocObject();
    v52 = a1[1];
    v51[1] = *a1;
    v51[2] = v52;
    v53 = a1[3];
    v51[3] = a1[2];
    v51[4] = v53;
    v55 = v74;
    v54 = v75;
    *v74 = v49;
    v55[1] = (uint64_t)sub_1B161ACF0;
    v55[2] = (uint64_t)v51;
    v56 = (uint64_t *)((char *)v55 + *(int *)(v54 + 64));
    *v56 = swift_getKeyPath();
    sub_1B1613538(0);
    swift_storeEnumTagMultiPayload();
    sub_1B161B1B4();
    sub_1B15B4E04(0);
    sub_1B1618338((uint64_t)&qword_1EEF345B0);
    sub_1B161AC2C();
    v57 = v85;
    sub_1B16B8FD8();
    v58 = 0;
  }
  sub_1B161AB04(0, (uint64_t)&unk_1EEF35C30);
  __swift_storeEnumTagSinglePayload(v57, v58, 1, v59);
  if ((*((_BYTE *)a1 + 40) & 1) != 0
    || (v92 = *a1,
        LOBYTE(v93) = *((_BYTE *)a1 + 16),
        sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]), MEMORY[0x1B5E1CE80](&v89), v60 = 0, v61 = 0, v62 = 0, v89 == 1))
  {
    v92 = v90;
    sub_1B16B9440();
    sub_1B1484E50((uint64_t)&v92);
    swift_release();
    v63 = MEMORY[0x1E0DEB070];
    sub_1B161A52C((uint64_t)&v92, (uint64_t)v101, (unint64_t *)&qword_1EEF310D0, MEMORY[0x1E0DEB070]);
    sub_1B161A52C((uint64_t)v101, (uint64_t)v102, (unint64_t *)&qword_1EEF310D0, v63);
    if (v102[8] != 1)
      goto LABEL_14;
    sub_1B161A52C((uint64_t)&v93, (uint64_t)v100, (unint64_t *)&qword_1EEF310D0, v63);
    sub_1B161A52C((uint64_t)v100, (uint64_t)v103, (unint64_t *)&qword_1EEF310D0, v63);
    if (v103[8] != 1)
      goto LABEL_14;
    sub_1B161A52C((uint64_t)&v94, (uint64_t)v99, (unint64_t *)&qword_1EEF310D0, v63);
    sub_1B161A52C((uint64_t)v99, (uint64_t)v104, (unint64_t *)&qword_1EEF310D0, v63);
    if (v104[8] == 1
      && (sub_1B161A52C((uint64_t)&v95, (uint64_t)v98, (unint64_t *)&qword_1EEF310D0, v63),
          sub_1B161A52C((uint64_t)v98, (uint64_t)v105, (unint64_t *)&qword_1EEF310D0, v63),
          v105[8] == 1)
      && (sub_1B161A52C((uint64_t)&v96, (uint64_t)v97, (unint64_t *)&qword_1EEF310D0, v63),
          sub_1B161A52C((uint64_t)v97, (uint64_t)v106, (unint64_t *)&qword_1EEF310D0, v63),
          (v106[8] & 1) != 0))
    {
      v60 = 0;
      v61 = 0;
      v62 = 0;
    }
    else
    {
LABEL_14:
      v89 = v90;
      sub_1B16B9440();
      sub_1B1485188();
      swift_release();
      v60 = sub_1B16B9404();
      v89 = v90;
      sub_1B16B9440();
      sub_1B1485188();
      swift_release();
      v62 = sub_1B16B93EC();
      v61 = swift_getKeyPath();
    }
  }
  v64 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  v65 = v86;
  v64(v48, v87, v86);
  v66 = v85;
  v67 = v83;
  sub_1B147C6A8(v85, v83, (uint64_t (*)(_QWORD))sub_1B161AA98);
  v68 = v84;
  v64(v84, v48, v65);
  sub_1B161A87C(0, (uint64_t)&unk_1EEF35C00);
  v70 = v69;
  sub_1B147C6A8(v67, (uint64_t)&v68[*(int *)(v69 + 48)], (uint64_t (*)(_QWORD))sub_1B161AA98);
  v71 = (uint64_t *)&v68[*(int *)(v70 + 64)];
  *v71 = v60;
  v71[1] = v61;
  v71[2] = v62;
  sub_1B161A470(v60);
  sub_1B13E0BC4(v66, (uint64_t (*)(_QWORD))sub_1B161AA98);
  v72 = *(void (**)(char *, uint64_t))(v88 + 8);
  v72(v87, v65);
  sub_1B161A4AC(v60);
  sub_1B13E0BC4(v67, (uint64_t (*)(_QWORD))sub_1B161AA98);
  return ((uint64_t (*)(char *, uint64_t))v72)(v48, v65);
}

uint64_t sub_1B1616F94(uint64_t a1, uint64_t a2, __n128 *a3)
{
  double *v3;
  uint64_t v4;
  double v5;
  uint64_t result;

  OUTLINED_FUNCTION_46_18(a1, a2, a3);
  OUTLINED_FUNCTION_8_83(v4, &qword_1EEF35C60, type metadata accessor for JSONSchemaValueNumber, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  OUTLINED_FUNCTION_34_30();
  v5 = sub_1B148316C();
  result = OUTLINED_FUNCTION_45();
  *v3 = v5;
  return result;
}

void sub_1B1616FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_2_134(a1, a2, a3, a4);
  OUTLINED_FUNCTION_33_3(v4, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
  OUTLINED_FUNCTION_28_34();
}

uint64_t sub_1B161703C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v13;
  double v14;
  __int128 v15;
  double v16;
  double v17;
  double v18;

  if ((LOBYTE(v14) & 1) == 0)
  {
    v15 = *(_OWORD *)(v1 + 48);
    OUTLINED_FUNCTION_8_83(a1, &qword_1EEF35C60, type metadata accessor for JSONSchemaValueNumber, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    OUTLINED_FUNCTION_7_84();
    v3 = sub_1B148316C();
    a1 = OUTLINED_FUNCTION_45();
    if (v3 != v2)
    {
      OUTLINED_FUNCTION_1_158(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, *(double *)&v15, *((double *)&v15 + 1), v16, v17, v18);
      a1 = sub_1B16B9500();
    }
  }
  OUTLINED_FUNCTION_8_83(a1, &qword_1EEF35C60, type metadata accessor for JSONSchemaValueNumber, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  OUTLINED_FUNCTION_7_84();
  sub_1B1484FCC();
  return OUTLINED_FUNCTION_45();
}

uint64_t sub_1B16170E0()
{
  sub_1B16139A4(0, &qword_1EEF35C60, type metadata accessor for JSONSchemaValueNumber, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B1484FCC();
  return swift_release();
}

void sub_1B1617154(uint64_t a1@<X8>)
{
  sub_1B1616034(sub_1B161A56C, (void (*)(uint64_t))sub_1B1616080, a1);
}

uint64_t sub_1B161719C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B16171AC()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[16];
  _QWORD v4[2];

  OUTLINED_FUNCTION_58_19(v0 + 24, (uint64_t)v3);
  OUTLINED_FUNCTION_58_19((uint64_t)v3, (uint64_t)v4);
  if (!v4[1])
    return 0x3A65756C6156;
  v2 = v4[0];
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return v2;
}

void sub_1B1617230(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a2;
  sub_1B1619E44();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161A2CC(0, &qword_1EEF35B90, v9, (uint64_t (*)(uint64_t))sub_1B161A040, MEMORY[0x1E0CDB848]);
  v43 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v41 - v12;
  sub_1B161A040(0);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_OWORD *)(a1 + 48);
  sub_1B16139A4(0, &qword_1EEF35B98, type metadata accessor for JSONSchemaValueString, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v19 = *(_QWORD *)(v45 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_suppliedValues);
  v20 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_suppliedValues + 8);
  sub_1B147C694(v19, *(_BYTE *)(v45 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_suppliedValues + 8));
  swift_release();
  if (v20 == 255)
    goto LABEL_4;
  if ((v20 & 1) == 0)
  {
    sub_1B147D94C(v19, v20);
LABEL_4:
    v21 = sub_1B16171AC();
    v23 = v22;
    v48 = *(_OWORD *)a1;
    LOBYTE(v49) = *(_BYTE *)(a1 + 16);
    sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
    MEMORY[0x1B5E1CE80](&v45);
    v24 = v45;
    *(_QWORD *)v18 = v21;
    *((_QWORD *)v18 + 1) = v23;
    v18[16] = v24;
    v25 = &v18[*(int *)(v15 + 40)];
    *(_QWORD *)v25 = sub_1B16B9128();
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = 1;
    sub_1B161BFE4(0, (uint64_t)&unk_1EEF35BA0);
    sub_1B1617850((__int128 *)a1, (uint64_t)&v25[*(int *)(v26 + 44)]);
    sub_1B147C6A8((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1B161A040);
    swift_storeEnumTagMultiPayload();
    sub_1B161A32C();
    sub_1B161A348();
    sub_1B16B91B8();
    sub_1B13E0BC4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1B161A040);
    return;
  }
  v51 = sub_1B16171AC();
  v52 = v27;
  sub_1B16B9CE0();
  sub_1B161B1B4();
  v28 = sub_1B16B9CD4();
  v29 = swift_allocObject();
  v42 = v5;
  v30 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v30;
  v31 = v30;
  v32 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v29 + 48) = v32;
  v33 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v29 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v29 + 80) = v33;
  sub_1B161B1B4();
  v34 = sub_1B16B9CD4();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = v31;
  v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 48) = v36;
  v37 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v35 + 80) = v37;
  v38 = sub_1B16B9518();
  v41 = (uint64_t)&v41;
  v45 = v48;
  v46 = v49;
  v47 = v50;
  MEMORY[0x1E0C80A78](v38, v39);
  sub_1B1619EE4();
  sub_1B161A72C((uint64_t)&unk_1EEF35B38);
  sub_1B14AA9C8();
  sub_1B16B94AC();
  sub_1B147D94C(v19, v20);
  v40 = v42;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v13, v8, v4);
  swift_storeEnumTagMultiPayload();
  sub_1B161A32C();
  sub_1B161A348();
  sub_1B16B91B8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v4);
}

uint64_t sub_1B1617680()
{
  swift_getKeyPath();
  sub_1B1619FB0(0);
  sub_1B1419B80(0, &qword_1EEF35B28, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9358]);
  sub_1B1618338((uint64_t)&unk_1EEF35B30);
  sub_1B1619FCC();
  sub_1B16B9740();
  return sub_1B16B9530();
}

uint64_t sub_1B1617770()
{
  return sub_1B16B8FCC();
}

uint64_t sub_1B16177D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1B16B9740();
  sub_1B16B99D4();
  sub_1B14AA9C8();
  result = sub_1B16B9320();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

void sub_1B1617850(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;

  v74 = a2;
  v66 = sub_1B15B5018();
  MEMORY[0x1E0C80A78](v66, v3);
  v65 = (uint64_t *)((char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B161A244();
  MEMORY[0x1E0C80A78](v5, v6);
  v68 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v67 = (char *)&v65 - v10;
  sub_1B1419B80(0, &qword_1EEF34558, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], MEMORY[0x1E0CE0618]);
  v73 = (char *)v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v65 - v14;
  sub_1B161A1A8();
  v72 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v65 - v22;
  v24 = sub_1B16B9170();
  v70 = v25;
  v71 = v24;
  v69 = v26;
  sub_1B16B9CE0();
  sub_1B161B1B4();
  v27 = sub_1B16B9CD4();
  v28 = swift_allocObject();
  v29 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v28 + 16) = v27;
  *(_QWORD *)(v28 + 24) = v29;
  v30 = a1[1];
  *(_OWORD *)(v28 + 32) = *a1;
  *(_OWORD *)(v28 + 48) = v30;
  v31 = a1[3];
  *(_OWORD *)(v28 + 64) = a1[2];
  *(_OWORD *)(v28 + 80) = v31;
  sub_1B161B1B4();
  v32 = sub_1B16B9CD4();
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)(v33 + 24) = v29;
  v34 = a1[1];
  *(_OWORD *)(v33 + 32) = *a1;
  *(_OWORD *)(v33 + 48) = v34;
  v35 = a1[3];
  *(_OWORD *)(v33 + 64) = a1[2];
  *(_OWORD *)(v33 + 80) = v35;
  sub_1B16B9518();
  sub_1B16B9590();
  LOBYTE(v27) = *((_BYTE *)a1 + 41);
  KeyPath = swift_getKeyPath();
  v37 = swift_allocObject();
  v38 = 1;
  *(_BYTE *)(v37 + 16) = (v27 & 1) == 0;
  v39 = (uint64_t)v73;
  (*(void (**)(char *, char *, char *))(v12 + 16))(v19, v15, v73);
  v40 = (uint64_t *)&v19[*(int *)(v72 + 36)];
  *v40 = KeyPath;
  v40[1] = (uint64_t)sub_1B161A458;
  v40[2] = v37;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v39);
  v73 = v19;
  v41 = (uint64_t)v23;
  sub_1B147D198((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1B161A1A8);
  v78 = a1[3];
  v76 = a1[3];
  sub_1B16139A4(0, &qword_1EEF35B98, type metadata accessor for JSONSchemaValueString, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v42 = *(_QWORD *)(v75 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_suppliedValues);
  v43 = *(unsigned __int8 *)(v75 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_suppliedValues + 8);
  sub_1B147C694(v42, *(_BYTE *)(v75 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_suppliedValues + 8));
  swift_release();
  if (v43 == 255)
    goto LABEL_5;
  if ((v43 & 1) != 0)
  {
    sub_1B147D94C(v42, v43);
LABEL_5:
    v50 = (uint64_t)v67;
    v51 = (uint64_t)v68;
    goto LABEL_6;
  }
  v44 = (_OWORD *)swift_allocObject();
  v45 = a1[1];
  v44[1] = *a1;
  v44[2] = v45;
  v46 = a1[3];
  v44[3] = a1[2];
  v44[4] = v46;
  v48 = v65;
  v47 = v66;
  *v65 = v42;
  v48[1] = (uint64_t)sub_1B161A508;
  v48[2] = (uint64_t)v44;
  v49 = (uint64_t *)((char *)v48 + *(int *)(v47 + 64));
  *v49 = swift_getKeyPath();
  sub_1B1613538(0);
  swift_storeEnumTagMultiPayload();
  sub_1B161B1B4();
  sub_1B15B4E04(0);
  sub_1B1618338((uint64_t)&qword_1EEF345B0);
  sub_1B161A2B0();
  v50 = (uint64_t)v67;
  sub_1B16B8FD8();
  v38 = 0;
  v51 = (uint64_t)v68;
LABEL_6:
  sub_1B161AB04(0, (uint64_t)&qword_1EEF34568);
  v52 = v50;
  __swift_storeEnumTagSinglePayload(v50, v38, 1, v53);
  if ((*((_BYTE *)a1 + 40) & 1) != 0
    || (v76 = *a1,
        LOBYTE(v77) = *((_BYTE *)a1 + 16),
        sub_1B13C5C9C(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]), MEMORY[0x1B5E1CE80](&v75), v54 = 0, v55 = 0, v56 = 0, v75 == 1))
  {
    v76 = v78;
    sub_1B16B9440();
    v57 = *(unsigned __int8 *)(v75 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_validations + 8);
    v58 = *(_BYTE *)(v75 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueString_validations + 24);
    swift_release();
    if (v57 == 1 && (v58 & 1) != 0)
    {
      v54 = 0;
      v55 = 0;
      v56 = 0;
    }
    else
    {
      v76 = v78;
      sub_1B16B9440();
      sub_1B1485858();
      swift_release();
      v54 = sub_1B16B9404();
      v76 = v78;
      sub_1B16B9440();
      sub_1B1485858();
      swift_release();
      v56 = sub_1B16B93EC();
      v55 = swift_getKeyPath();
    }
  }
  v59 = (uint64_t)v73;
  sub_1B147C6A8(v41, (uint64_t)v73, (uint64_t (*)(_QWORD))sub_1B161A1A8);
  v60 = v52;
  sub_1B147C6A8(v52, v51, (uint64_t (*)(_QWORD))sub_1B161A244);
  v61 = v74;
  sub_1B147C6A8(v59, v74, (uint64_t (*)(_QWORD))sub_1B161A1A8);
  sub_1B161A87C(0, (uint64_t)&unk_1EEF35B60);
  v63 = v62;
  sub_1B147C6A8(v51, v61 + *(int *)(v62 + 48), (uint64_t (*)(_QWORD))sub_1B161A244);
  v64 = (uint64_t *)(v61 + *(int *)(v63 + 64));
  *v64 = v54;
  v64[1] = v55;
  v64[2] = v56;
  sub_1B161A470(v54);
  sub_1B13E0BC4(v60, (uint64_t (*)(_QWORD))sub_1B161A244);
  sub_1B13E0BC4(v41, (uint64_t (*)(_QWORD))sub_1B161A1A8);
  sub_1B161A4AC(v54);
  sub_1B13E0BC4(v51, (uint64_t (*)(_QWORD))sub_1B161A244);
  sub_1B13E0BC4(v59, (uint64_t (*)(_QWORD))sub_1B161A1A8);
}

void sub_1B1617F84(uint64_t a1, uint64_t a2, __n128 *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_46_18(a1, a2, a3);
  OUTLINED_FUNCTION_8_83(v4, &qword_1EEF35B98, type metadata accessor for JSONSchemaValueString, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  OUTLINED_FUNCTION_34_30();
  v5 = sub_1B1483BDC();
  v7 = v6;
  OUTLINED_FUNCTION_45();
  *v3 = v5;
  v3[1] = v7;
  OUTLINED_FUNCTION_90();
}

void sub_1B1617FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_2_134(a1, a2, a3, a4);
  OUTLINED_FUNCTION_33_3(v4, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
  OUTLINED_FUNCTION_28_34();
}

uint64_t sub_1B1618028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v18;
  double v19;
  __int128 v20;
  double v21;
  double v22;
  double v23;

  if ((LOBYTE(v19) & 1) == 0)
  {
    v20 = *(_OWORD *)(v3 + 48);
    OUTLINED_FUNCTION_8_83(a1, &qword_1EEF35B98, type metadata accessor for JSONSchemaValueString, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    OUTLINED_FUNCTION_7_84();
    v4 = sub_1B1483BDC();
    v6 = v5;
    swift_release();
    if (v4 == v1 && v6 == v2)
    {
      a1 = OUTLINED_FUNCTION_20_0();
    }
    else
    {
      v8 = sub_1B16BA910(v4, v6, v1);
      a1 = swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        OUTLINED_FUNCTION_1_158(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19, *(double *)&v20, *((double *)&v20 + 1), v21, v22, v23);
        a1 = sub_1B16B9500();
      }
    }
  }
  OUTLINED_FUNCTION_8_83(a1, &qword_1EEF35B98, type metadata accessor for JSONSchemaValueString, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  OUTLINED_FUNCTION_7_84();
  sub_1B16B9740();
  sub_1B14855F8();
  return OUTLINED_FUNCTION_45();
}

uint64_t sub_1B161811C()
{
  sub_1B16139A4(0, &qword_1EEF35B98, type metadata accessor for JSONSchemaValueString, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B16B9740();
  sub_1B14855F8();
  return swift_release();
}

void sub_1B161819C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;

  v2 = sub_1B16B9128();
  v3 = sub_1B16B9404();
  v4 = sub_1B16B93C8();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = KeyPath;
  *(_QWORD *)(a1 + 56) = v4;
  OUTLINED_FUNCTION_31();
}

void sub_1B161820C(uint64_t a1@<X8>)
{
  sub_1B1616034(sub_1B1619E0C, (void (*)(uint64_t))sub_1B1617230, a1);
}

uint64_t sub_1B1618254()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B1618290()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35AF8)
  {
    sub_1B1419B80(255, (unint64_t *)&qword_1EEF315D8, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for VerticallyLabeledContent);
    sub_1B161A9FC((uint64_t)&qword_1EEF315F0);
    v0 = sub_1B16B9488();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35AF8);
  }
}

void sub_1B1618338(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_52_25(a1))
  {
    OUTLINED_FUNCTION_71_18(0, v1);
    OUTLINED_FUNCTION_117();
  }
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1618364()
{
  sub_1B16158B4();
}

void sub_1B1618374()
{
  type metadata accessor for JSONSchemaPresetSelectorView();
}

void sub_1B16183A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_1B1613538(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v0 = sub_1B16B8F9C();
    OUTLINED_FUNCTION_20_1(v0);
  }
  else
  {
    swift_release();
  }
  swift_deallocObject();
  OUTLINED_FUNCTION_22_0();
}

void sub_1B1618428()
{
  type metadata accessor for JSONSchemaPresetSelectorView();
}

void sub_1B1618470()
{
  sub_1B1615BAC();
}

void sub_1B16184BC()
{
  type metadata accessor for JSONSchemaPresetSelectorView();
}

void sub_1B1618500()
{
  type metadata accessor for JSONSchema.LabeledValue();
}

uint64_t sub_1B161853C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  v8 = v2 + v4 + *(int *)(v3 + 64);
  sub_1B1613538(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1B16B8F9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2 + ((v4 + v5 + v7) & ~v7) + *(int *)(a1 + 52), v1);
  return swift_deallocObject();
}

void sub_1B1618618()
{
  type metadata accessor for JSONSchemaPresetSelectorView();
}

void sub_1B1618658()
{
  type metadata accessor for JSONSchema.LabeledValue();
}

void sub_1B1618684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_1B1615DF4(v1 + v2, v1 + ((v2 + v3 + v4) & ~v4));
}

void sub_1B16186D0()
{
  sub_1B1615ED8();
}

void sub_1B16186E0(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a2 = sub_1B16B9128();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  sub_1B161BFE4(0, (uint64_t)&unk_1EEF35DD8);
  a1(v2);
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B1618738@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;

  v40 = a2;
  v3 = type metadata accessor for JSONSchema.SchemaType.ObjectType(0);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject(0);
  MEMORY[0x1E0C80A78](v7, v8);
  v38 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONSchemaView();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161C0D0();
  v15 = v14;
  v39 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v37 - v21;
  v41 = a1;
  sub_1B1618B48(a1, (uint64_t)v13);
  sub_1B1618338((uint64_t)&qword_1EEF34708);
  sub_1B16B8FD8();
  if ((*(_BYTE *)(a1 + 24) & 1) != 0 || (*(_BYTE *)a1 & 1) != 0)
  {
    v44 = *(_OWORD *)(a1 + 32);
    v42 = *(_OWORD *)(a1 + 32);
    sub_1B16139A4(0, &qword_1EEF35DF8, type metadata accessor for JSONSchemaValueObject, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    sub_1B16B9440();
    sub_1B147C6A8(v43 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueObject_object, (uint64_t)v6, type metadata accessor for JSONSchema.SchemaType.ObjectType);
    swift_release();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = v38;
      sub_1B147D198((uint64_t)v6, v38, type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject);
      v24 = v23 + *(int *)(v7 + 20);
      if (*(_BYTE *)(v24 + 8) != 1 || (*(_BYTE *)(v24 + 24) & 1) == 0)
      {
        v42 = v44;
        sub_1B16B9440();
        sub_1B1486C4C();
        swift_release();
        v27 = sub_1B16B9404();
        v42 = v44;
        sub_1B16B9440();
        sub_1B1486C4C();
        swift_release();
        v29 = sub_1B16B93EC();
        v31 = v39;
        v30 = v40;
        KeyPath = swift_getKeyPath();
        sub_1B13E0BC4(v23, type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject);
        goto LABEL_10;
      }
      v25 = type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject;
      v26 = v23;
    }
    else
    {
      v25 = type metadata accessor for JSONSchema.SchemaType.ObjectType;
      v26 = (uint64_t)v6;
    }
    sub_1B13E0BC4(v26, v25);
  }
  v27 = 0;
  KeyPath = 0;
  v29 = 0;
  v31 = v39;
  v30 = v40;
LABEL_10:
  v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v32(v18, v22, v15);
  v32(v30, v18, v15);
  sub_1B161C04C();
  v34 = (uint64_t *)&v30[*(int *)(v33 + 48)];
  *v34 = v27;
  v34[1] = KeyPath;
  v34[2] = v29;
  sub_1B161A470(v27);
  v35 = *(void (**)(char *, uint64_t))(v31 + 8);
  v35(v22, v15);
  sub_1B161A4AC(v27);
  return ((uint64_t (*)(char *, uint64_t))v35)(v18, v15);
}

void sub_1B1618B48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __objc2_class *v12;
  __int128 v13;
  __objc2_class **v14;
  __int128 v15;

  v4 = type metadata accessor for JSONSchema(0);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for JSONSchemaView();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_OWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 32);
  sub_1B16139A4(0, &qword_1EEF35DF8, type metadata accessor for JSONSchemaValueObject, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B147C6A8((uint64_t)v14 + OBJC_IVAR____TtC5TeaUI15JSONSchemaValue_schema, (uint64_t)v7, type metadata accessor for JSONSchema);
  swift_release();
  v13 = v15;
  sub_1B16B9440();
  v12 = *v14;
  if (*v14 == _TtC5TeaUI20JSONSchemaValueArray
    || v12 == _TtC5TeaUI19JSONSchemaValueBool
    || v12 == _TtC5TeaUI22JSONSchemaValueInteger
    || v12 == _TtC5TeaUI21JSONSchemaValueNumber
    || v12 == _TtC5TeaUI21JSONSchemaValueString
    || v12 == _TtC5TeaUI21JSONSchemaValueObject)
  {
    sub_1B15AFDAC();
    sub_1B147D198((uint64_t)v11, a2, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  }
  else
  {
    sub_1B16BA724();
    __break(1u);
  }
}

uint64_t sub_1B1618D84@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v4 = sub_1B16B9164();
  MEMORY[0x1E0C80A78](v4, v5);
  sub_1B16B9158();
  sub_1B16B914C();
  sub_1B16B9740();
  sub_1B16B9140();
  swift_bridgeObjectRelease();
  sub_1B16B914C();
  sub_1B16139A4(0, &qword_1EEF35DF8, type metadata accessor for JSONSchemaValueObject, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B14831E4();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B16B9134();
  sub_1B16B914C();
  sub_1B16B917C();
  v6 = sub_1B16B9314();
  v8 = v7;
  v10 = v9;
  if ((a1[24] & 1) != 0 || (*a1 & 1) != 0)
    sub_1B16B923C();
  else
    sub_1B16B9248();
  v11 = v10 & 1;
  v12 = sub_1B16B92FC();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_1B161B270(v6, v8, v11);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v16 & 1;
  *(_QWORD *)(a2 + 24) = v18;
  return result;
}

void sub_1B1618FD4(uint64_t a1@<X8>)
{
  sub_1B16186E0((void (*)(uint64_t))sub_1B1618738, a1);
}

void sub_1B1619014(uint64_t a1)
{
  OUTLINED_FUNCTION_33_3(a1, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  __asm { BR              X10 }
}

__n128 sub_1B1619090()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 result;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int16 v55;
  char v56;
  uint64_t v57;
  __int16 v58;
  uint64_t v59;
  char v60;
  char v61;
  int v62;
  int v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  int v68;
  int v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  __int16 v110;
  char v111;

  OUTLINED_FUNCTION_60_17();
  OUTLINED_FUNCTION_33_3(v3, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
  MEMORY[0x1B5E1CE80](&v96);
  v4 = v96;
  v5 = *v1;
  v6 = v1[1];
  v7 = *((unsigned __int8 *)v1 + 33);
  *(_QWORD *)&v105 = v0;
  type metadata accessor for JSONSchemaValueArray(0);
  OUTLINED_FUNCTION_184();
  OUTLINED_FUNCTION_9_82();
  sub_1B16B9434();
  v8 = *(_QWORD *)(v2 - 176);
  v9 = *(_QWORD *)(v2 - 168);
  *(_QWORD *)(v2 - 176) = v4;
  *(_QWORD *)(v2 - 168) = v5;
  *(_QWORD *)(v2 - 160) = v6;
  *(_QWORD *)(v2 - 152) = v7 | 0x100;
  v89 = v8;
  *(_QWORD *)(v2 - 144) = v8;
  *(_QWORD *)(v2 - 136) = v9;
  v87 = v9;
  *(_QWORD *)(v2 - 128) = 0;
  *(_QWORD *)(v2 - 120) = 0;
  *(_BYTE *)(v2 - 112) = 0;
  sub_1B161BB14();
  sub_1B15B8974();
  OUTLINED_FUNCTION_184();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_177();
  v10 = sub_1B16B91B8();
  OUTLINED_FUNCTION_19_54(v10, v11, v12, v13, v14, v15, v16, v17, v57, v64, v70, v74, v76, v78, v81, v84, v87, v89, v6,
    v0 & 0x1FFFFFFFFFFFFFFFLL,
    v93,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v18,
    v107,
    v108);
  sub_1B1419B80(0, &qword_1EEF35D98, (uint64_t)&unk_1E632BC40, (uint64_t)&unk_1E632B6D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
  OUTLINED_FUNCTION_72_11(v19, &qword_1EEF345E0, (uint64_t)&unk_1E632B648, (uint64_t)&unk_1E632B5B8);
  sub_1B161BA8C();
  sub_1B15B89B0();
  sub_1B16B91B8();
  v20 = v96;
  v21 = v97;
  v22 = v98;
  v23 = v99;
  v24 = v101;
  v25 = v104;
  OUTLINED_FUNCTION_54_22();
  if (v30)
    v27 = 0;
  *(_QWORD *)&v105 = v20;
  *((_QWORD *)&v105 + 1) = v21;
  *(_QWORD *)&v106 = v22;
  *((_QWORD *)&v106 + 1) = v23;
  *(_QWORD *)&v107 = v28;
  *((_QWORD *)&v107 + 1) = v24;
  v79 = v29;
  v82 = v28;
  v108 = v29;
  v109 = v26;
  v85 = v26;
  v110 = v27 | v25;
  v111 = 0;
  v31 = OUTLINED_FUNCTION_22_39();
  sub_1B15B8D24(v31, v32, v33, v34, v35, v24, v36, v37, v58, SHIBYTE(v58), v62, v65, v68, v71);
  OUTLINED_FUNCTION_41_26();
  OUTLINED_FUNCTION_72_11(v38, &qword_1EEF35DA0, (uint64_t)&unk_1E632B528, (uint64_t)&unk_1E632BBB0);
  sub_1B161BA68();
  v39 = sub_1B161BB50();
  OUTLINED_FUNCTION_55_20(v39, v40, v41, v42, v43, v44, v45, v46, v59, v66, v72, v75, v77, v79, v82, v85, v88, v90, v91,
    v92,
    v94,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105);
  sub_1B16B91B8();
  OUTLINED_FUNCTION_36_23();
  v47 = OUTLINED_FUNCTION_22_39();
  sub_1B15B8D24(v47, v48, v49, v50, v83, v24, v80, v86, v60, v61, v63, v67, v69, v73);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  result = *(__n128 *)(v2 - 176);
  v52 = *(_OWORD *)(v2 - 160);
  v53 = *(_OWORD *)(v2 - 144);
  v54 = *(_OWORD *)(v2 - 128);
  v55 = *(_WORD *)(v2 - 112);
  v56 = *(_BYTE *)(v2 - 110);
  *(__n128 *)v95 = result;
  *(_OWORD *)(v95 + 16) = v52;
  *(_OWORD *)(v95 + 32) = v53;
  *(_OWORD *)(v95 + 48) = v54;
  *(_WORD *)(v95 + 64) = v55;
  *(_BYTE *)(v95 + 66) = v56;
  return result;
}

void sub_1B16199C4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_1B16B9104();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161B280(0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B147C6A8(v2, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B147D198((uint64_t)v12, a1, (uint64_t (*)(_QWORD))sub_1B15B4A64);
  }
  else
  {
    v14 = sub_1B16BA04C();
    v15 = sub_1B16B929C();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v19[1] = a1;
      v20 = v18;
      *(_DWORD *)v17 = 136315138;
      v19[2] = sub_1B13E208C(0xD000000000000019, 0x80000001B16F2BE0, &v20);
      sub_1B16BA34C();
      _os_log_impl(&dword_1B139E000, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3_29();
    }

    sub_1B16B90F8();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B1619BCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  os_log_type_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;

  v2 = v1;
  v4 = sub_1B16B9104();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1613538(0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B147C6A8(v2, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_1B16B8F9C();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, v12, v14);
  }
  else
  {
    v16 = sub_1B16BA04C();
    v17 = sub_1B16B929C();
    v18 = v16;
    if (os_log_type_enabled(v17, v16))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v22[1] = a1;
      v21 = v20;
      v23 = v20;
      *(_DWORD *)v19 = 136315138;
      v22[2] = sub_1B13E208C(0x417373696D736944, 0xED00006E6F697463, &v23);
      sub_1B16BA34C();
      _os_log_impl(&dword_1B139E000, v17, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v21, -1, -1);
      MEMORY[0x1B5E1F1FC](v19, -1, -1);
    }

    sub_1B16B90F8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

void sub_1B1619E0C(uint64_t a1)
{
  sub_1B161BFE4(a1, (uint64_t)&unk_1EEF35B08);
}

void sub_1B1619E20(uint64_t a1)
{
  sub_1B161A2CC(a1, &qword_1EEF35B10, (uint64_t (*)(uint64_t))sub_1B1619E44, (uint64_t (*)(uint64_t))sub_1B161A040, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
}

void sub_1B1619E44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35B18)
  {
    sub_1B1619EE4();
    sub_1B161A72C((uint64_t)&unk_1EEF35B38);
    v0 = sub_1B16B94B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35B18);
  }
}

void sub_1B1619EE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35B20)
  {
    sub_1B1619FB0(255);
    sub_1B1419B80(255, &qword_1EEF35B28, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9358]);
    sub_1B1618338((uint64_t)&unk_1EEF35B30);
    v0 = sub_1B16B953C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35B20);
  }
}

void sub_1B1619FB0(uint64_t a1)
{
  sub_1B16139A4(a1, &qword_1EEF303B8, (uint64_t (*)(uint64_t))sub_1B147D780, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1B1619FCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEF35B40;
  if (!qword_1EEF35B40)
  {
    sub_1B1419B80(255, &qword_1EEF35B28, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9358]);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CD9368], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEF35B40);
  }
  return result;
}

void sub_1B161A040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EEF35B48)
  {
    sub_1B161A0B8(255);
    v3 = v2;
    sub_1B1618338((uint64_t)&unk_1EEF35B88);
    v6 = type metadata accessor for VerticallyLabeledContent(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EEF35B48);
  }
}

void sub_1B161A0B8(uint64_t a1)
{
  sub_1B161A0D4(a1, (uint64_t)&unk_1EEF35B50);
}

void sub_1B161A0D4(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!OUTLINED_FUNCTION_59_3(a1, a2))
  {
    v6 = v5;
    OUTLINED_FUNCTION_61_0(0, v3, v4);
    sub_1B1618338(v6);
    v7 = sub_1B16B94A0();
    if (!v8)
      atomic_store(v7, v2);
  }
  OUTLINED_FUNCTION_67();
}

void sub_1B161A13C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35B58)
  {
    sub_1B161A87C(255, (uint64_t)&unk_1EEF35B60);
    v0 = sub_1B16B95A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35B58);
  }
}

void sub_1B161A1A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35B68)
  {
    sub_1B1419B80(255, &qword_1EEF34558, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], MEMORY[0x1E0CE0618]);
    sub_1B13C5C9C(255, &qword_1EEF35B70, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0CDD0C8]);
    v0 = sub_1B16B9020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35B68);
  }
}

void sub_1B161A244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34560)
  {
    sub_1B161AB04(255, (uint64_t)&qword_1EEF34568);
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34560);
  }
}

void sub_1B161A2B0()
{
  sub_1B1618338((uint64_t)&qword_1EEF345B8);
}

void sub_1B161A2CC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = OUTLINED_FUNCTION_61_0(0, (uint64_t)a2, a3);
    v10 = a4(255);
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, v5);
  }
  OUTLINED_FUNCTION_67();
}

void sub_1B161A32C()
{
  sub_1B1618338((uint64_t)&unk_1EEF35BA8);
}

void sub_1B161A348()
{
  sub_1B1618338((uint64_t)&unk_1EEF35BB0);
}

uint64_t sub_1B161A36C()
{
  return sub_1B1617680();
}

uint64_t sub_1B161A374@<X0>(uint64_t a1@<X8>)
{
  return sub_1B1614B1C(a1);
}

uint64_t sub_1B161A380@<X0>(uint64_t a1@<X8>)
{
  return sub_1B16177D4(a1);
}

void sub_1B161A390()
{
  __n128 *v0;

  sub_1B1617F84(v0[1].n128_i64[0], v0[1].n128_i64[1], v0 + 2);
}

void sub_1B161A3B0(uint64_t a1)
{
  uint64_t v1;

  sub_1B1617FDC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

void sub_1B161A3CC()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_66_15();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B161A3E8()
{
  swift_retain();
  sub_1B16B90BC();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B161A40C(_BYTE *a1@<X8>)
{
  *a1 = sub_1B16B90E0() & 1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B161A434()
{
  sub_1B16B90EC();
  OUTLINED_FUNCTION_0_0();
}

_BYTE *sub_1B161A458(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1B161A470(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B161A4AC(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1B161A4E4()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_66_15();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B161A508()
{
  return sub_1B161811C();
}

void sub_1B161A510()
{
  sub_1B16B90D4();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B161A52C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4;

  sub_1B13C5C9C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_75_1(v4);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B161A56C(uint64_t a1)
{
  sub_1B161BFE4(a1, (uint64_t)&unk_1EEF35BB8);
}

void sub_1B161A580(uint64_t a1)
{
  sub_1B161A2CC(a1, &qword_1EEF35BC0, (uint64_t (*)(uint64_t))sub_1B161A5A4, (uint64_t (*)(uint64_t))sub_1B161A77C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
}

void sub_1B161A5A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35BC8)
  {
    sub_1B161A644();
    sub_1B161A72C((uint64_t)&unk_1EEF35BE0);
    v0 = sub_1B16B94B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35BC8);
  }
}

void sub_1B161A644()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35BD0)
  {
    sub_1B161A710(255);
    sub_1B1419B80(255, &qword_1EEF35B28, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9358]);
    sub_1B1618338((uint64_t)&unk_1EEF35BD8);
    v0 = sub_1B16B953C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35BD0);
  }
}

void sub_1B161A710(uint64_t a1)
{
  sub_1B16139A4(a1, &qword_1EEF30380, (uint64_t (*)(uint64_t))sub_1B147D574, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1B161A72C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  result = OUTLINED_FUNCTION_52_25(a1);
  if (!result)
  {
    v4 = OUTLINED_FUNCTION_71_18(0, v3);
    v5 = sub_1B1619FCC();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDFEE8], v4, &v5);
    atomic_store(result, v1);
  }
  return result;
}

void sub_1B161A77C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EEF35BE8)
  {
    sub_1B161A7F4(255);
    v3 = v2;
    sub_1B1618338((uint64_t)&unk_1EEF35C50);
    v6 = type metadata accessor for VerticallyLabeledContent(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EEF35BE8);
  }
}

void sub_1B161A7F4(uint64_t a1)
{
  sub_1B161A0D4(a1, (uint64_t)&unk_1EEF35BF0);
}

void sub_1B161A810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35BF8)
  {
    sub_1B161A87C(255, (uint64_t)&unk_1EEF35C00);
    v0 = sub_1B16B95A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35BF8);
  }
}

void sub_1B161A87C(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  void (*v5)(uint64_t);
  void (*v6)(uint64_t);
  unint64_t TupleTypeMetadata3;
  uint64_t v8;

  if (!OUTLINED_FUNCTION_59_3(a1, a2))
  {
    v6 = v5;
    OUTLINED_FUNCTION_61_0(0, v3, v4);
    v6(255);
    sub_1B16139A4(255, &qword_1EEF35B78, (uint64_t (*)(uint64_t))sub_1B15B4EF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v8)
      atomic_store(TupleTypeMetadata3, v2);
  }
  OUTLINED_FUNCTION_31();
}

void sub_1B161A900(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1EEF35C08)
  {
    sub_1B161A1A8();
    v5[0] = v2;
    v5[1] = sub_1B161A974();
    v3 = MEMORY[0x1B5E1F088](a1, v5, MEMORY[0x1E0CDE208], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF35C08);
  }
}

unint64_t sub_1B161A974()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF35C10;
  if (!qword_1EEF35C10)
  {
    sub_1B161A1A8();
    v2 = v1;
    sub_1B161A9FC((uint64_t)&unk_1EEF35C18);
    v4[0] = v3;
    v4[1] = sub_1B161AA40();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CD9C20], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF35C10);
  }
  return result;
}

void sub_1B161A9FC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);

  if (!OUTLINED_FUNCTION_52_25(a1))
  {
    sub_1B1419B80(255, v1, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], v2);
    OUTLINED_FUNCTION_117();
  }
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1B161AA40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF35C20;
  if (!qword_1EEF35C20)
  {
    sub_1B13C5C9C(255, &qword_1EEF35B70, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0CDD0C8]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDD0D8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF35C20);
  }
  return result;
}

void sub_1B161AA98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35C28)
  {
    sub_1B161AB04(255, (uint64_t)&unk_1EEF35C30);
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35C28);
  }
}

void sub_1B161AB04(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  void (*v3)(uint64_t);
  void (*v4)(void);
  void (*v5)(void);
  void (*v6)(uint64_t);
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;

  if (!OUTLINED_FUNCTION_59_3(a1, a2))
  {
    v5 = v4;
    v6 = v3;
    v7 = v2;
    sub_1B15B4E04(255);
    v6(255);
    sub_1B1618338((uint64_t)&qword_1EEF345B0);
    v5();
    v8 = sub_1B16B8FE4();
    if (!v9)
      atomic_store(v8, v7);
  }
}

uint64_t sub_1B161ABAC()
{
  uint64_t result;

  result = qword_1EEF35C38;
  if (!qword_1EEF35C38)
    type metadata accessor for JSONSchemaPresetSelectorView();
  return result;
}

void sub_1B161AC2C()
{
  sub_1B1618338((uint64_t)&unk_1EEF35C40);
}

void sub_1B161AC48()
{
  sub_1B1618338((uint64_t)&unk_1EEF35C70);
}

void sub_1B161AC64()
{
  sub_1B1618338((uint64_t)&unk_1EEF35C78);
}

uint64_t sub_1B161AC88()
{
  return sub_1B16164D0();
}

uint64_t sub_1B161AC90@<X0>(uint64_t a1@<X8>)
{
  return sub_1B1614B1C(a1);
}

uint64_t sub_1B161AC9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B1616624(a1);
}

uint64_t sub_1B161ACAC()
{
  __n128 *v0;

  return sub_1B1616F94(v0[1].n128_i64[0], v0[1].n128_i64[1], v0 + 2);
}

void sub_1B161ACCC(uint64_t a1)
{
  uint64_t v1;

  sub_1B1616FF4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_1B161ACF0()
{
  return sub_1B16170E0();
}

void sub_1B161ACF8(uint64_t a1)
{
  sub_1B161BFE4(a1, (uint64_t)&unk_1EEF35C80);
}

void sub_1B161AD0C(uint64_t a1)
{
  sub_1B161A2CC(a1, &qword_1EEF35C88, (uint64_t (*)(uint64_t))sub_1B161AD30, (uint64_t (*)(uint64_t))sub_1B161AEB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
}

void sub_1B161AD30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35C90)
  {
    sub_1B161ADD0();
    sub_1B161A72C((uint64_t)&unk_1EEF35CA8);
    v0 = sub_1B16B94B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35C90);
  }
}

void sub_1B161ADD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35C98)
  {
    sub_1B161AE9C(255);
    sub_1B1419B80(255, &qword_1EEF35B28, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9358]);
    sub_1B1618338((uint64_t)&unk_1EEF35CA0);
    v0 = sub_1B16B953C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35C98);
  }
}

void sub_1B161AE9C(uint64_t a1)
{
  sub_1B16139A4(a1, &qword_1EEF30338, (uint64_t (*)(uint64_t))sub_1B147D418, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1B161AEB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EEF35CB0)
  {
    sub_1B161AF30(255);
    v3 = v2;
    sub_1B1618338((uint64_t)&unk_1EEF35CF8);
    v6 = type metadata accessor for VerticallyLabeledContent(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EEF35CB0);
  }
}

void sub_1B161AF30(uint64_t a1)
{
  sub_1B161A0D4(a1, (uint64_t)&unk_1EEF35CB8);
}

void sub_1B161AF4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35CC0)
  {
    sub_1B161A87C(255, (uint64_t)&unk_1EEF35CC8);
    v0 = sub_1B16B95A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35CC0);
  }
}

void sub_1B161AFB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35CD0)
  {
    sub_1B161AB04(255, (uint64_t)&unk_1EEF35CD8);
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35CD0);
  }
}

uint64_t sub_1B161B024()
{
  uint64_t result;

  result = qword_1EEF35CE0;
  if (!qword_1EEF35CE0)
    type metadata accessor for JSONSchemaPresetSelectorView();
  return result;
}

void sub_1B161B0A4()
{
  sub_1B1618338((uint64_t)&unk_1EEF35CE8);
}

void sub_1B161B0C0()
{
  sub_1B1618338((uint64_t)&unk_1EEF35D18);
}

void sub_1B161B0DC()
{
  sub_1B1618338((uint64_t)&unk_1EEF35D20);
}

uint64_t sub_1B161B100()
{
  return sub_1B16149C8();
}

uint64_t sub_1B161B108@<X0>(uint64_t a1@<X8>)
{
  return sub_1B1614B1C(a1);
}

uint64_t sub_1B161B114@<X0>(uint64_t a1@<X8>)
{
  return sub_1B1614B84(a1);
}

void sub_1B161B124()
{
  __n128 *v0;

  sub_1B16154E8(v0[1].n128_i64[0], v0[1].n128_i64[1], v0 + 2);
}

void sub_1B161B144(uint64_t a1)
{
  uint64_t v1;

  sub_1B161553C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B161B1AC()
{
  return sub_1B1615628();
}

void sub_1B161B1B4()
{
  swift_retain();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_26();
  sub_1B16B9740();
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_67();
}

uint64_t sub_1B161B200@<X0>(_BYTE *a1@<X8>)
{
  return sub_1B161428C(a1);
}

uint64_t objectdestroy_5Tm_4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B161B25C()
{
  return sub_1B1614308();
}

uint64_t sub_1B161B268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B16143C8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1B161B270(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

void sub_1B161B280(uint64_t a1)
{
  sub_1B16139A4(a1, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
}

uint64_t sub_1B161B29C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B161B2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  sub_1B16B9740();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B161B358(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1B161B438(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_1B161B4C0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B161B500(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for JSONSchemaValueRowView()
{
  OUTLINED_FUNCTION_11_0();
}

void sub_1B161B558()
{
  type metadata accessor for JSONSchema.LabeledValue();
}

uint64_t sub_1B161B598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = OUTLINED_FUNCTION_70_18();
  sub_1B1618290();
  v10 = v2;
  v11 = v0;
  v12 = v3;
  v13 = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF48], v2);
  v14 = v1;
  v4 = sub_1B16B953C();
  sub_1B1618338((uint64_t)&unk_1EEF35B00);
  v9 = v5;
  v6 = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDFEE8], v4, &v9);
  v10 = MEMORY[0x1E0DEDCE8];
  v11 = v4;
  v12 = MEMORY[0x1E0DEDCF8];
  v13 = v6;
  v7 = sub_1B16B92F0();
  return MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDD950], v7);
}

void sub_1B161B65C()
{
  sub_1B1618338((uint64_t)&unk_1EEF35D30);
}

void sub_1B161B688()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35D38)
  {
    sub_1B1619E20(255);
    sub_1B161B7B4((uint64_t)&unk_1EEF35D40);
    v0 = sub_1B16B94A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35D38);
  }
}

void sub_1B161B708()
{
  sub_1B1618338((uint64_t)&unk_1EEF35D48);
}

void sub_1B161B734()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35D50)
  {
    sub_1B161A580(255);
    sub_1B161B7B4((uint64_t)&unk_1EEF35D58);
    v0 = sub_1B16B94A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35D50);
  }
}

uint64_t sub_1B161B7B4(uint64_t a1)
{
  uint64_t result;
  uint64_t (*v2)(uint64_t);
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(void);
  void (*v6)(void);

  result = OUTLINED_FUNCTION_52_25(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    OUTLINED_FUNCTION_71_18(0, v2);
    v6();
    v5();
    OUTLINED_FUNCTION_140();
  }
  return result;
}

void sub_1B161B818()
{
  sub_1B1618338((uint64_t)&unk_1EEF35D60);
}

void sub_1B161B844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35D68)
  {
    sub_1B161AD0C(255);
    sub_1B161B7B4((uint64_t)&unk_1EEF35D70);
    v0 = sub_1B16B94A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35D68);
  }
}

void sub_1B161B8C4()
{
  sub_1B161A9FC((uint64_t)&qword_1EEF35D78);
}

uint64_t sub_1B161B8F8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B161B908()
{
  unint64_t result;

  result = qword_1EEF35D88;
  if (!qword_1EEF35D88)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DB09C, &unk_1E632BBB0);
    atomic_store(result, (unint64_t *)&qword_1EEF35D88);
  }
  return result;
}

uint64_t sub_1B161B944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
  {
    swift_retain();
    swift_retain();
  }
  swift_retain();
  sub_1B16B9740();
  return swift_retain();
}

void sub_1B161B9BC()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EEF35D90)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880];
    sub_1B1419B80(255, &qword_1EEF35D98, (uint64_t)&unk_1E632BC40, (uint64_t)&unk_1E632B6D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    sub_1B1419B80(255, &qword_1EEF345E0, (uint64_t)&unk_1E632B648, (uint64_t)&unk_1E632B5B8, v0);
    v1 = sub_1B16B91C4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EEF35D90);
  }
}

uint64_t sub_1B161BA68()
{
  return sub_1B161B7B4((uint64_t)&unk_1EEF35DA8);
}

unint64_t sub_1B161BA8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF35DB0;
  if (!qword_1EEF35DB0)
  {
    sub_1B1419B80(255, &qword_1EEF35D98, (uint64_t)&unk_1E632BC40, (uint64_t)&unk_1E632B6D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1B161BB14();
    v3[1] = sub_1B15B8974();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF35DB0);
  }
  return result;
}

unint64_t sub_1B161BB14()
{
  unint64_t result;

  result = qword_1EEF35DB8;
  if (!qword_1EEF35DB8)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DB04C, &unk_1E632BC40);
    atomic_store(result, (unint64_t *)&qword_1EEF35DB8);
  }
  return result;
}

unint64_t sub_1B161BB50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF35DC0;
  if (!qword_1EEF35DC0)
  {
    sub_1B1419B80(255, &qword_1EEF35DA0, (uint64_t)&unk_1E632B528, (uint64_t)&unk_1E632BBB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1B15B8764();
    v3[1] = sub_1B161B908();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF35DC0);
  }
  return result;
}

uint64_t sub_1B161BBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
  {
    swift_release();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B161BC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0)
  {
    swift_retain();
    swift_retain();
  }
  swift_retain();
  sub_1B16B9740();
  return swift_retain();
}

uint64_t sub_1B161BCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0)
  {
    swift_release();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

void type metadata accessor for JSONSchemaObjectValueRowControlView()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B161BD4C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_29_33();
}

void sub_1B161BD78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  sub_1B16B9740();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_31();
}

void sub_1B161BDC4(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_62_16(a1, a2);
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v5 + 8);
  v3[2] = *(_QWORD *)(v5 + 16);
  sub_1B16B9740();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_67_15();
  v3[4] = *(_QWORD *)(v2 + 32);
  swift_retain();
  OUTLINED_FUNCTION_107();
  v3[5] = *(_QWORD *)(v2 + 40);
  swift_retain();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_31();
}

void sub_1B161BE2C(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_62_16(a1, a2);
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v3 + 16) = v5;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_67_15();
  swift_release();
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v2 + 32);
  swift_release();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B161BE74(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B161BEB4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for JSONSchemaArrayValueRowView()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B161BF0C()
{
  return sub_1B161B7B4((uint64_t)&unk_1EEF35DC8);
}

void sub_1B161BF40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35DD0)
  {
    sub_1B161B9BC();
    sub_1B1419B80(255, &qword_1EEF35DA0, (uint64_t)&unk_1E632B528, (uint64_t)&unk_1E632BBB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v0 = sub_1B16B91C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35DD0);
  }
}

uint64_t sub_1B161BFC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B161BFD4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B161BFE4(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  unint64_t v5;
  uint64_t v6;

  if (!OUTLINED_FUNCTION_59_3(a1, a2))
  {
    OUTLINED_FUNCTION_61_0(0, v3, v4);
    v5 = sub_1B16B8FA8();
    if (!v6)
      atomic_store(v5, v2);
  }
  OUTLINED_FUNCTION_0_0();
}

void sub_1B161C030(uint64_t a1)
{
  sub_1B16139A4(a1, &qword_1EEF35DE0, (uint64_t (*)(uint64_t))sub_1B161C04C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
}

void sub_1B161C04C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF35DE8)
  {
    sub_1B161C0D0();
    sub_1B16139A4(255, &qword_1EEF35B78, (uint64_t (*)(uint64_t))sub_1B15B4EF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF35DE8);
  }
}

void sub_1B161C0D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35DF0)
  {
    type metadata accessor for JSONSchemaView();
    sub_1B1618338((uint64_t)&qword_1EEF34708);
    v0 = sub_1B16B8FE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35DF0);
  }
}

uint64_t sub_1B161C164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B1618D84(*(_BYTE **)(v1 + 16), a1);
}

uint64_t sub_1B161C16C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B1613EE0(*(_BYTE **)(v1 + 16), a1);
}

void sub_1B161C174()
{
  sub_1B1618338((uint64_t)&unk_1EEF35E00);
}

void sub_1B161C1A0(uint64_t a1)
{
  sub_1B161A0D4(a1, (uint64_t)&unk_1EEF35E08);
}

void sub_1B161C1DC()
{
  swift_beginAccess();
  type metadata accessor for StackNavigator.WeakRouter();
}

void sub_1B161C22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_42_27();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  OUTLINED_FUNCTION_12_49();
}

void sub_1B161C258()
{
  OUTLINED_FUNCTION_0_50();
  sub_1B16B9740();
  OUTLINED_FUNCTION_48();
}

void sub_1B161C284()
{
  OUTLINED_FUNCTION_0_50();
  sub_1B16B9740();
  OUTLINED_FUNCTION_48();
}

void StackNavigator.__allocating_init()()
{
  swift_allocObject();
  StackNavigator.init()();
}

uint64_t sub_1B161C2D4()
{
  uint64_t v0;

  return v0;
}

void StackNavigator.init()()
{
  OUTLINED_FUNCTION_41_27();
}

void sub_1B161C31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t (**v7)();

  sub_1B16B88E8();
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_getFunctionTypeMetadata1();
  *(_QWORD *)(v0 + v3) = sub_1B16B96E0();
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  *(_QWORD *)(v0 + v4) = sub_1B16B96E0();
  v5 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v2;
  OUTLINED_FUNCTION_28_35();
  *v7 = sub_1B161C470;
  v7[1] = v6;
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1B161C398()
{
  id v0;
  _BYTE *v1;

  if (qword_1ED1848F8 != -1)
    swift_once();
  v0 = (id)qword_1ED190410;
  sub_1B16BA040();
  sub_1B16B8B58();

  sub_1B161CC8C();
  swift_allocError();
  *v1 = 0;
  sub_1B161E380();
  swift_allocObject();
  return sub_1B16B89D8();
}

uint64_t sub_1B161C460()
{
  return swift_deallocObject();
}

uint64_t sub_1B161C470()
{
  return sub_1B161C398();
}

void StackNavigator.__allocating_init<A>(userActivityManager:)()
{
  swift_allocObject();
  StackNavigator.init<A>(userActivityManager:)();
}

uint64_t sub_1B161C4A4()
{
  uint64_t v0;

  return v0;
}

void sub_1B161C4B8()
{
  _QWORD *v0;

  v0 = (_QWORD *)OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_32_32(v0);
  OUTLINED_FUNCTION_1_10();
  OUTLINED_FUNCTION_5_101();
  OUTLINED_FUNCTION_9_7();
  OUTLINED_FUNCTION_36_24();
  OUTLINED_FUNCTION_45_23();
  swift_endAccess();
  OUTLINED_FUNCTION_22_0();
}

uint64_t sub_1B161C534()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B161C558()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

void sub_1B161C578()
{
  type metadata accessor for StackNavigator.WeakRouter();
}

void sub_1B161C5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v14 - 232) = a1;
  *(_QWORD *)(v14 - 192) = *(_QWORD *)(sub_1B16B88F4() - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v15, v16);
  v17 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Route(0, v11, v10, v22);
  *(_QWORD *)(v14 - 224) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v14 - 216) = v23;
  OUTLINED_FUNCTION_9();
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  v28 = (char *)&a9 - v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  *(_QWORD *)(v14 - 136) = v12;
  v29(v21, v12, v11, v26);
  sub_1B1405FC4(v13, v14 - 120);
  v30 = v9;
  v31 = v9;
  v32 = *(_QWORD *)(v14 - 200);
  sub_1B13C4AEC(v30);
  v33 = *(_QWORD *)(v14 - 168);
  v34 = *(_QWORD *)(v14 - 160);
  sub_1B13C4AEC(v33);
  *(_QWORD *)(v14 - 160) = v11;
  *(_QWORD *)(v14 - 152) = v28;
  sub_1B15BFD08((uint64_t)v21, v31, v32, v33, v34, v14 - 120, v11, *(_QWORD *)(v14 - 208), (uint64_t)v28);
  OUTLINED_FUNCTION_0_178();
}

void sub_1B161C6E4()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_19_55();
  OUTLINED_FUNCTION_1_159();
  if (!__OFSUB__(v0, 1))
    OUTLINED_FUNCTION_0_178();
  __break(1u);
  JUMPOUT(0x1B161CC80);
}

unint64_t sub_1B161CC8C()
{
  unint64_t result;

  result = qword_1ED17C998;
  if (!qword_1ED17C998)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for StackNavigatorError, &type metadata for StackNavigatorError);
    atomic_store(result, (unint64_t *)&qword_1ED17C998);
  }
  return result;
}

BOOL sub_1B161CCC8()
{
  char v0;

  swift_retain();
  v0 = sub_1B16B821C();
  swift_release();
  return (v0 & 1) == 0;
}

uint64_t sub_1B161CD04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

void sub_1B161CD24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD v34[4];

  v4 = v2;
  v6 = *v2;
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 16);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3BD0]), sel_init);
  v13 = v10;
  if (!v9)
  {
    MEMORY[0x1E0C80A78](v10, v11);
    OUTLINED_FUNCTION_38_28();
    *(_QWORD *)(v21 - 16) = v7;
    OUTLINED_FUNCTION_5(v22, &qword_1ED188540);
    v23 = sub_1B16B8A8C();
    OUTLINED_FUNCTION_5(v23, (unint64_t *)&qword_1ED188560);
    v24 = (void *)OUTLINED_FUNCTION_14();
    v25 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_34_31(v25);
    OUTLINED_FUNCTION_25_45();
    OUTLINED_FUNCTION_47_27();

    OUTLINED_FUNCTION_26_20();
    v26 = (void *)sub_1B16B8918();
LABEL_7:
    sub_1B16B89B4();
    swift_release();
    OUTLINED_FUNCTION_45();

    goto LABEL_8;
  }
  if (v9 == 1)
  {
    MEMORY[0x1E0C80A78](v10, v11);
    OUTLINED_FUNCTION_38_28();
    *(_QWORD *)(v14 - 16) = v8;
    OUTLINED_FUNCTION_5(v15, &qword_1ED188540);
    v16 = (id)v7;
    v17 = sub_1B16B8A8C();
    OUTLINED_FUNCTION_5(v17, (unint64_t *)&qword_1ED188560);
    v18 = (void *)OUTLINED_FUNCTION_14();
    v19 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_34_31(v19);
    sub_1B16B8984();
    OUTLINED_FUNCTION_123();

    swift_release();
    v20 = (void *)sub_1B16B8918();
    sub_1B16B89B4();

    OUTLINED_FUNCTION_26_20();
    OUTLINED_FUNCTION_45();

LABEL_8:
    sub_1B161D410(a1, sub_1B161C258);

    goto LABEL_9;
  }
  if (v7 | v8)
  {
    v27 = MEMORY[0x1E0C80A78](v10, v11);
    OUTLINED_FUNCTION_5(v27, &qword_1ED188540);
    v28 = sub_1B16B8A8C();
    OUTLINED_FUNCTION_5(v28, (unint64_t *)&qword_1ED188560);
    v29 = (void *)OUTLINED_FUNCTION_14();
    v30 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_34_31(v30);
    OUTLINED_FUNCTION_25_45();
    OUTLINED_FUNCTION_47_27();

    OUTLINED_FUNCTION_26_20();
    v26 = (void *)sub_1B16B8918();
    goto LABEL_7;
  }
  v34[0] = v4;
  v31 = type metadata accessor for StackNavigator(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v12);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for StackNavigator<A>, v31);
  Navigator.navigate(to:)();
  if (!v3)
    goto LABEL_8;

  if (qword_1ED1848F8 != -1)
    swift_once();
  v32 = (id)qword_1ED190410;
  OUTLINED_FUNCTION_33_1();
  sub_1B13DB4AC(0, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v33 = OUTLINED_FUNCTION_25();
  *(_OWORD *)(v33 + 16) = xmmword_1B16C51D0;
  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  v34[3] = v3;
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED1839E0);
  sub_1B16BA6B8();
  *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v33 + 64) = sub_1B140493C();
  *(_QWORD *)(v33 + 32) = 0;
  *(_QWORD *)(v33 + 40) = 0xE000000000000000;
  sub_1B16B8B58();

  swift_bridgeObjectRelease();
  swift_willThrow();
LABEL_9:
  OUTLINED_FUNCTION_0_2();
}

void sub_1B161D198()
{
  sub_1B161D2C0();
}

void sub_1B161D1A8()
{
  sub_1B161D2C0();
}

void sub_1B161D1B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD v10[6];

  v7 = *a1;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v10[4] = a3;
  v10[5] = 0;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1B15CA720;
  v10[3] = a4;
  v9 = _Block_copy(v10);
  objc_msgSend(v8, sel_requestSceneSessionActivation_userActivity_options_errorHandler_, 0, v7, a2, v9);
  _Block_release(v9);

}

uint64_t sub_1B161D284()
{
  return sub_1B161D528();
}

void sub_1B161D298(uint64_t *a1)
{
  uint64_t v1;

  sub_1B161D1B8(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1B161D198, (uint64_t)&block_descriptor_36_1);
}

void sub_1B161D2C0()
{
  id v0;
  uint64_t v1;

  if (qword_1ED1848F8 != -1)
    swift_once();
  v0 = (id)qword_1ED190410;
  sub_1B16BA040();
  sub_1B13DB4AC(0, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = OUTLINED_FUNCTION_25();
  *(_OWORD *)(v1 + 16) = xmmword_1B16C51D0;
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED1839E0);
  sub_1B16BA6B8();
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1B140493C();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  sub_1B16B8B58();

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_49();
}

void sub_1B161D410(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;

  a2();
  swift_getFunctionTypeMetadata1();
  v2 = OUTLINED_FUNCTION_9_7();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF38], v2);
  sub_1B16B9AA0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_49();
}

uint64_t sub_1B161D4AC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_35_27();
  return v0();
}

uint64_t sub_1B161D4DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B161D500(uint64_t *a1)
{
  uint64_t v1;

  sub_1B161D1B8(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1B161D198, (uint64_t)&block_descriptor_33_1);
}

uint64_t sub_1B161D528()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_35_27();
  return v0();
}

void sub_1B161D558(uint64_t *a1)
{
  uint64_t v1;

  sub_1B161D1B8(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1B161D198, (uint64_t)&block_descriptor_70);
}

void sub_1B161D580()
{
  type metadata accessor for StackNavigator.WeakRouter();
}

void sub_1B161D5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v14 - 224) = a1;
  *(_QWORD *)(v14 - 184) = *(_QWORD *)(sub_1B16B88F4() - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v15, v16);
  v17 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Route(0, v12, v9, v22);
  *(_QWORD *)(v14 - 216) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v14 - 208) = v23;
  OUTLINED_FUNCTION_9();
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  v28 = (char *)&a9 - v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  *(_QWORD *)(v14 - 144) = v10;
  v29(v21, v10, v12, v26);
  sub_1B1405FC4(v11, v14 - 120);
  v30 = v13;
  v31 = v13;
  v32 = *(_QWORD *)(v14 - 192);
  sub_1B13C4AEC(v30);
  v33 = *(_QWORD *)(v14 - 176);
  v34 = *(_QWORD *)(v14 - 160);
  sub_1B13C4AEC(v33);
  *(_QWORD *)(v14 - 136) = v28;
  sub_1B15BFD08((uint64_t)v21, v31, v32, v33, v34, v14 - 120, v12, *(_QWORD *)(v14 - 200), (uint64_t)v28);
  OUTLINED_FUNCTION_0_178();
}

void sub_1B161D6F0()
{
  uint64_t v0;

  v0 = sub_1B16B88DC();
  OUTLINED_FUNCTION_6_105();
  if (!__OFSUB__(v0, 1))
    OUTLINED_FUNCTION_0_178();
  __break(1u);
  JUMPOUT(0x1B161DCF8);
}

uint64_t sub_1B161DD14()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

id sub_1B161DD34(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_1B161DD44(id a1)
{
  if ((unint64_t)a1 >= 2)

}

void StackNavigator.deinit()
{
  type metadata accessor for StackNavigator.WeakRouter();
}

void sub_1B161DD88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_42_27();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  OUTLINED_FUNCTION_28_35();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48();
}

void StackNavigator.__deallocating_deinit()
{
  StackNavigator.deinit();
}

uint64_t sub_1B161DDE4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B161DDFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 232))();
}

void sub_1B161DE24(uint64_t a1, uint64_t a2)
{
  sub_1B161CD24(a1, a2);
}

void sub_1B161DE44()
{
  sub_1B161D580();
}

uint64_t method lookup function for StackNavigator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StackNavigator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of StackNavigator.__allocating_init<A>(userActivityManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of StackNavigator.onNavigationComplete(closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of StackNavigator.navigate(to:metadata:context:setup:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of StackNavigator.navigate(to:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of StackNavigator.preview(for:metadata:context:setup:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t sub_1B161DEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v1 = (*(uint64_t (**)(void))(v0 + 64))();
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = v2;
    sub_1B16B9740();
    swift_bridgeObjectRelease();
  }
  sub_1B16B9740();
  return v1;
}

uint64_t sub_1B161DF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t result;

  v10 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v10);
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a7 + 24))(a1, a5, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B161DFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t result;

  v10 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v10);
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a7 + 32))(a1, a5, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B161E070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5[2];
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1B5E1F2F8](v1);
  if (!v2)
    return 0x636F6C6C6165643CLL;
  v7 = v2;
  sub_1B13CC6B4(0, &qword_1ED183940);
  swift_unknownObjectRetain();
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1B13C06D0(v5, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    v3 = sub_1B16BA8B0();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_1B161E2F4((uint64_t)v5);
    swift_getObjectType();
    v3 = sub_1B16BAB2C();
    swift_unknownObjectRelease();
  }
  return v3;
}

uint64_t sub_1B161E1B0()
{
  swift_retain();
  sub_1B16B8240();
  return swift_release();
}

uint64_t sub_1B161E1DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B161E218()
{
  sub_1B161E1DC();
  return swift_deallocClassInstance();
}

uint64_t sub_1B161E23C()
{
  return sub_1B161DEE0();
}

uint64_t sub_1B161E25C()
{
  return sub_1B161E1B0();
}

uint64_t sub_1B161E27C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B161E2A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B161E2C4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B161DF50(a1, v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1B161E2D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B161DFE0(a1, v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1B161E2E4()
{
  uint64_t v0;

  return sub_1B161E070(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1B161E2F4(uint64_t a1)
{
  uint64_t v2;

  sub_1B13DB4AC(0, (unint64_t *)&qword_1ED183948, &qword_1ED183940, MEMORY[0x1E0DED1C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B161E350(uint64_t (**a1)(_QWORD))
{
  uint64_t v1;

  return (*a1)(*(_QWORD *)(v1 + 32));
}

void sub_1B161E380()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF33610)
  {
    sub_1B13A1BE4(255, &qword_1ED188540);
    v0 = sub_1B16B8A38();
    if (!v1)
      atomic_store(v0, &qword_1EEF33610);
  }
}

uint64_t sub_1B161E3F8(uint64_t (**a1)(_QWORD))
{
  return sub_1B161E350(a1);
}

id sub_1B161E410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  objc_class *ObjectType;
  void *v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a3)
  {
    v6 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, sel_initWithStyle_reuseIdentifier_, 1, v6);

  return v7;
}

void sub_1B161E4D8()
{
  sub_1B16BA724();
  __break(1u);
}

uint64_t type metadata accessor for OptionTableViewCell()
{
  return objc_opt_self();
}

uint64_t CommandContainer.tracker.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B13E4484(v1 + 32, a1);
}

unint64_t CommandContainer.description.getter()
{
  sub_1B16BA574();
  swift_bridgeObjectRelease();
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return 0xD000000000000016;
}

uint64_t CommandContainer.__allocating_init(name:commandCenter:tracker:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_47_2();
  v0 = swift_allocObject();
  CommandContainer.init(name:commandCenter:tracker:)();
  return v0;
}

void CommandContainer.registerCommandObserver(_:handler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(__int128 *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  __int128 v9[2];

  OUTLINED_FUNCTION_5_102();
  v4 = *(_QWORD *)(v0 + 24);
  v5 = OUTLINED_FUNCTION_232();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v1;
  v7 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 104);
  swift_retain();
  v7(v9, v3, sub_1B161E930, v6, MEMORY[0x1E0DEE9C0] + 8, v5, v4);
  swift_release();
  OUTLINED_FUNCTION_0_179();
  sub_1B1455EB4();
  OUTLINED_FUNCTION_3_121();
  v8 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v8 + 16) = (char *)v7 + 1;
  sub_1B13C06D0(v9, v8 + 40 * (_QWORD)v7 + 32);
  swift_endAccess();
  OUTLINED_FUNCTION_1_160();
}

Swift::Void __swiftcall CommandContainer.unregisterCommands()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 24))(v0, ObjectType, v1);
  swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 104) = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v3 + 32;
    do
    {
      sub_1B13B4DC0(v5, (uint64_t)v6);
      __swift_project_boxed_opaque_existential_1(v6, v6[3]);
      sub_1B16B8078();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      v5 += 40;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
}

uint64_t CommandContainer.unregisterCommand<A>(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v3 = *a1;
  v4 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 32))(v1, a1, *(_QWORD *)(v3 + 88), ObjectType, v4);
}

uint64_t CommandContainer.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1B13E418C(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CommandContainer.__deallocating_deinit()
{
  CommandContainer.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_1B161E8EC()
{
  return CommandContainer.description.getter();
}

uint64_t sub_1B161E90C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B161E930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t method lookup function for CommandContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CommandContainer.__allocating_init(name:commandCenter:tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1B161E968(id *a1)
{
  id v1;

  v1 = *a1;
  sub_1B13B6B18(*a1);
  return BlueprintPrewarmState.state.setter(v1);
}

void (*BlueprintPrewarmState.state.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_32();
  v3[5] = sub_1B16B85A0();
  return sub_1B155D408;
}

void BlueprintPrewarmState.__allocating_init()()
{
  swift_allocObject();
  BlueprintPrewarmState.init()();
}

void sub_1B161EA10()
{
  OUTLINED_FUNCTION_0_0();
}

uint64_t BlueprintPrewarmState.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t BlueprintPrewarmState.__deallocating_deinit()
{
  BlueprintPrewarmState.deinit();
  return swift_deallocClassInstance();
}

void sub_1B161EA58(uint64_t *a1@<X8>)
{
  *a1 = BlueprintPrewarmState.state.getter();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B161EA80()
{
  return 32;
}

__n128 sub_1B161EA8C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t method lookup function for BlueprintPrewarmState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintPrewarmState.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void **sub_1B161EAAC(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1B13B6A8C(v3);
  return a1;
}

uint64_t sub_1B161EADC(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3E && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 61;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 58) >> 4) | (4
                                                        * ((*(_QWORD *)a1 >> 58) & 0xC | (*(_QWORD *)a1 >> 1) & 3))) ^ 0x3F;
      if (v2 >= 0x3D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1B161EB30(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x3D)
  {
    *(_QWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xF | (16 * (-a2 & 0x3F));
      *(_QWORD *)result = ((v3 << 58) | (2 * v3)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B161EB84(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return ((*a1 >> 2) & 0xFFFFFFFE | *a1 & 1) + 2;
}

unint64_t *sub_1B161EBA4(unint64_t *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 2)
    v2 = *result & 0xFFFFFFFFFFFFFF9 | (a2 << 62);
  else
    v2 = (4 * (a2 - 2)) & 0x3FFFFFFF8 | ((int)a2 - 2) & 1 | 0x8000000000000000;
  *result = v2;
  return result;
}

uint64_t sub_1B161EBD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B161EBFC()
{
  swift_release();
  return swift_deallocObject();
}

void static TimelineReloadPolicy.after(_:jitteredUpTo:)(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;

  v2 = sub_1B16B7BB0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B161EDC8(v7, 0.0, a1);
  sub_1B16B7B68();
  sub_1B16B96BC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_1B13E6FA8();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B16C6D10;
  sub_1B161EE70();
  v9 = sub_1B16BA8B0();
  v11 = v10;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1B140493C();
  *(_QWORD *)(v8 + 64) = v13;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  v14 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v8 + 104) = v14;
  *(double *)(v8 + 72) = a1;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_1B16B96C8();
  sub_1B16BA6B8();
  v15 = v18;
  v16 = v19;
  *(_QWORD *)(v8 + 136) = v12;
  *(_QWORD *)(v8 + 144) = v13;
  *(_QWORD *)(v8 + 112) = v15;
  *(_QWORD *)(v8 + 120) = v16;
  sub_1B13E6A30();
  v17 = (void *)sub_1B16BA2F8();
  sub_1B16BA058();
  sub_1B16B8B58();
  swift_bridgeObjectRelease();

}

uint64_t sub_1B161EDC8(uint64_t result, double a2, double a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = 0;
  result = MEMORY[0x1B5E1F214](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3)
    return sub_1B161EDC8(v6, a2, a3);
  return result;
}

unint64_t sub_1B161EE70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1889C8;
  if (!qword_1ED1889C8)
  {
    v1 = sub_1B16B7BB0();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1889C8);
  }
  return result;
}

unint64_t sub_1B161EEB0(uint64_t a1, unint64_t a2)
{
  return sub_1B161EED8(a1, a2, (unint64_t)sub_1B13C6B9C, (uint64_t (*)(_QWORD))type metadata accessor for SegmentedControlButton);
}

unint64_t sub_1B161EEC4(uint64_t a1, unint64_t a2)
{
  return sub_1B161EED8(a1, a2, (unint64_t)sub_1B13C6B9C, (uint64_t (*)(_QWORD))sub_1B13D5C64);
}

unint64_t sub_1B161EED8(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  id v8;
  void *v9;
  char v10;
  uint64_t i;
  id v12;
  void *v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_21;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return 0;
  while (1)
  {
    ((void (*)(_QWORD, BOOL, unint64_t))a3)(0, (a2 & 0xC000000000000001) == 0, a2);
    v8 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B5E1DF60](0, a2) : *(id *)(a2 + 32);
    v9 = v8;
    a4 = (uint64_t (*)(_QWORD))a4(0);
    v10 = sub_1B16BA214();

    if ((v10 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      a3 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (a3 == v7)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v12 = (id)MEMORY[0x1B5E1DF60](i + 1, a2);
      }
      else
      {
        if ((a3 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if (a3 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v12 = *(id *)(a2 + 32 + 8 * a3);
      }
      v13 = v12;
      v14 = sub_1B16BA214();

      if ((v14 & 1) != 0)
        return a3;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    sub_1B16B9740();
    v7 = OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_29();
    if (!v7)
      return 0;
  }
}

void TabBarNavigationController.__allocating_init(rootViewController:commandCenter:)(void *a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_13_1();
  TabBarNavigationController.init(rootViewController:commandCenter:)(a1, a2, a3);
  OUTLINED_FUNCTION_31();
}

uint64_t TabBarNavigationController.isValidForCachingRestoreState.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v12;
  objc_super v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[4];

  v13.receiver = v0;
  v13.super_class = (Class)OUTLINED_FUNCTION_4();
  v1 = objc_msgSendSuper2(&v13, sel_viewControllers);
  OUTLINED_FUNCTION_5_4();
  v2 = sub_1B16B9B54();

  if (!((unint64_t)v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    goto LABEL_21;
  }
  if (v2 < 0)
    v12 = v2;
  else
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
  sub_1B16B9740();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_6_18();
  if (!v12)
    goto LABEL_19;
LABEL_3:
  sub_1B13C6B9C(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    MEMORY[0x1B5E1DF60](0, v2);
  else
    v3 = *(id *)(v2 + 32);
  OUTLINED_FUNCTION_6_18();
  v17[0] = v2 & 0xC000000000000001;
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED17E230);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_20;
  if (!*((_QWORD *)&v15 + 1))
  {
LABEL_21:
    sub_1B16200A8((uint64_t)&v14, (unint64_t *)&qword_1ED184C10, (unint64_t *)&qword_1ED17E230, MEMORY[0x1E0DB3548]);
    return 0;
  }
  sub_1B13C06D0(&v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  v4 = sub_1B16B81B0();
  v6 = v5;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_4();
  v7 = sub_1B16B81B0();
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v10 = sub_1B16BA910(v4, v6, v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29();
  if ((v10 & 1) != 0)
  {
LABEL_14:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return 0;
}

void TabBarNavigationController.rootViewController.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_0_50();
  v1 = *v0;
  OUTLINED_FUNCTION_48();
}

void sub_1B161F2E4()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI26TabBarNavigationController_animateAlongsideTabBarSnapshot] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI26TabBarNavigationController_viewControllerDepth] = 0;

  OUTLINED_FUNCTION_10_73();
  __break(1u);
}

void TabBarNavigationController.viewControllers.modify(objc_super **a1)
{
  objc_class *v1;
  objc_super *v3;
  uint64_t v4;
  id v5;

  v3 = (objc_super *)malloc(0x50uLL);
  *a1 = v3;
  v3[3].super_class = v1;
  v4 = OUTLINED_FUNCTION_4();
  v3[4].receiver = (id)v4;
  v3->receiver = v1;
  v3->super_class = (Class)v4;
  v5 = -[objc_super viewControllers](v3, sel_viewControllers);
  v3[4].super_class = (Class)OUTLINED_FUNCTION_5_4();
  sub_1B16B9B54();
  OUTLINED_FUNCTION_12_0();
  v3[3].receiver = v1;
  OUTLINED_FUNCTION_31();
}

void sub_1B161F444(objc_super **a1, char a2)
{
  objc_super *v2;
  Class super_class;
  objc_class *receiver;
  Class v5;

  v2 = *a1;
  receiver = (objc_class *)(*a1)[4].receiver;
  super_class = (*a1)[4].super_class;
  v5 = (*a1)[3].super_class;
  if ((a2 & 1) != 0)
  {
    sub_1B16B9740();
    sub_1B16B9B48();
    OUTLINED_FUNCTION_6_18();
    v2[1].receiver = v5;
    v2[1].super_class = receiver;
    OUTLINED_FUNCTION_20_53(v2 + 1, sel_setViewControllers_);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B16B9B48();
    OUTLINED_FUNCTION_6_18();
    v2[2].receiver = v5;
    v2[2].super_class = receiver;
    OUTLINED_FUNCTION_20_53(v2 + 2, sel_setViewControllers_);

    sub_1B13AF2F8();
  }
  free(v2);
}

void (*TabBarNavigationController.tabBarItem.modify(id *a1))(id *a1)
{
  *a1 = TabBarNavigationController.tabBarItem.getter();
  return destroy for CoverViewManagerNotification;
}

uint64_t TabBarNavigationController.description.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = OUTLINED_FUNCTION_4();
  sub_1B1410CB8(0, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B16C51E0;
  *(_QWORD *)(v2 + 56) = v1;
  sub_1B162005C(&qword_1EEF35EC8, MEMORY[0x1E0DEFD08]);
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = v0;
  v4 = v0;
  TabBarNavigationController.identifier.getter();
  v6 = v5;
  v8 = v7;
  *(_QWORD *)(v2 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 104) = sub_1B140493C();
  *(_QWORD *)(v2 + 72) = v6;
  *(_QWORD *)(v2 + 80) = v8;
  return sub_1B16B9890();
}

void TabBarNavigationController.__allocating_init(rootViewController:navigationBarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjCClassFromMetadata;

  if (a2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  else
    ObjCClassFromMetadata = 0;
  objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithRootViewController_navigationBarClass_, a1, ObjCClassFromMetadata);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_31();
}

void TabBarNavigationController.init(rootViewController:navigationBarClass:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TabBarNavigationController.__allocating_init(rootViewController:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithRootViewController_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void TabBarNavigationController.init(rootViewController:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B161F788()
{
  uint64_t v0;

  swift_unknownObjectRelease();
}

id TabBarNavigationController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id TabBarNavigationController.show(_:sender:)(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  unsigned __int8 v9;
  id v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  double v21;
  id v22;
  SEL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  objc_super v31;
  _QWORD v32[3];
  uint64_t v33;

  v5 = (objc_class *)OUTLINED_FUNCTION_4();
  v6 = objc_msgSend(v2, sel_tabBarController);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_tabBar);
    v9 = objc_msgSend(v8, sel_isHidden);

    if ((v9 & 1) == 0)
    {
      v10 = objc_msgSend(a1, sel_hidesBottomBarWhenPushed);
      if ((_DWORD)v10)
      {
        result = OUTLINED_FUNCTION_11_2((uint64_t)v10, sel_view);
        if (!result)
        {
          __break(1u);
          return result;
        }
        v12 = result;
        v13 = objc_msgSend(result, sel_window);

        if (v13)
        {
          v15 = OUTLINED_FUNCTION_11_2(v14, sel_tabBar);
          objc_msgSend(v15, sel_frame);

          v16 = OUTLINED_FUNCTION_13_61();
          v19 = objc_msgSend(v17, v18, 0, v16);
          if (v19)
          {
            v20 = v19;
            v21 = OUTLINED_FUNCTION_13_61();
            objc_msgSend(v22, v23, v21);

            v7 = *(void **)&v2[OBJC_IVAR____TtC5TeaUI26TabBarNavigationController_animateAlongsideTabBarSnapshot];
            *(_QWORD *)&v2[OBJC_IVAR____TtC5TeaUI26TabBarNavigationController_animateAlongsideTabBarSnapshot] = v20;
          }
          else
          {

          }
        }
      }
    }

  }
  sub_1B1405FC4(a2, (uint64_t)v32);
  v24 = v33;
  if (v33)
  {
    v25 = __swift_project_boxed_opaque_existential_1(v32, v33);
    v26 = *(_QWORD *)(v24 - 8);
    v27 = MEMORY[0x1E0C80A78](v25, v25);
    v29 = (char *)&v31 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v26 + 16))(v29, v27);
    v30 = sub_1B16BA8F8();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  else
  {
    v30 = 0;
  }
  v31.receiver = v2;
  v31.super_class = v5;
  objc_msgSendSuper2(&v31, sel_showViewController_sender_, a1, v30);
  return (id)swift_unknownObjectRelease();
}

Swift::Void __swiftcall TabBarNavigationController.navigationController(_:didShow:animated:)(UINavigationController *_, UIViewController *didShow, Swift::Bool animated)
{
  char *v3;
  objc_class *v4;
  NSArray *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;
  objc_super v25;

  v4 = (objc_class *)OUTLINED_FUNCTION_4();
  v25.receiver = v3;
  v25.super_class = v4;
  v5 = -[UINavigationController viewControllers](&v25, sel_viewControllers);
  OUTLINED_FUNCTION_5_4();
  v6 = sub_1B16B9B54();

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v7 = v6;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    sub_1B16B9740();
    sub_1B16BA76C();
    OUTLINED_FUNCTION_5_1();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v8 = OBJC_IVAR____TtC5TeaUI26TabBarNavigationController_viewControllerDepth;
  v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC5TeaUI26TabBarNavigationController_viewControllerDepth];
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (v9 >= v7)
  {
    if (qword_1ED17B418 != -1)
      swift_once();
    v11 = &qword_1ED17A038;
  }
  else
  {
    if (qword_1ED17B5E0 != -1)
      swift_once();
    v11 = &qword_1ED17A040;
  }
  objc_msgSend(v10, sel_postNotificationName_object_, *v11, v3);

  v24.receiver = v3;
  v24.super_class = v4;
  v19 = OUTLINED_FUNCTION_7_1(v12, sel_viewControllers, v13, v14, v15, v16, v17, v18, v24);
  v20 = sub_1B16B9B54();

  if (v20 >> 62)
  {
    sub_1B16B9740();
    v21 = sub_1B16BA76C();
    OUTLINED_FUNCTION_29();
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_29();
  *(_QWORD *)&v3[v8] = v21;
  sub_1B13B19D0();
  v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC5TeaUI26TabBarNavigationController_commandCenter + 8];
  v23 = OUTLINED_FUNCTION_4();
  if (qword_1ED1849B0 != -1)
    swift_once();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 144))(qword_1ED183488, MEMORY[0x1E0DEE9C0] + 8, v23, v22);
}

id TabBarNavigationController.navigationController(_:animationControllerFor:from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;

  if (a2 == 2)
  {
    v10 = OUTLINED_FUNCTION_32_0(a1, sel_transitioningDelegate);
    if (!v10)
      return 0;
    v11 = v10;
    if ((objc_msgSend(v10, sel_respondsToSelector_, sel_animationControllerForDismissedController_) & 1) != 0)
    {
      v9 = objc_msgSend(v11, sel_animationControllerForDismissedController_, a3);
      goto LABEL_9;
    }
LABEL_10:
    swift_unknownObjectRelease();
    return 0;
  }
  if (a2 != 1)
    return 0;
  v7 = objc_msgSend(a4, sel_transitioningDelegate);
  if (!v7)
    return 0;
  v8 = v7;
  if ((objc_msgSend(v7, sel_respondsToSelector_, sel_animationControllerForPresentedController_presentingController_sourceController_) & 1) == 0)goto LABEL_10;
  v9 = objc_msgSend(v8, sel_animationControllerForPresentedController_presentingController_sourceController_, a4, a3, a1);
LABEL_9:
  swift_unknownObjectRelease();
  return v9;
}

void TabBarNavigationController.tabBarNavigationBarVisiblity.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void sub_1B161FF30(_BYTE *a1@<X8>)
{
  TabBarNavigationController.tabBarNavigationBarVisiblity.getter(a1);
}

uint64_t sub_1B161FF44()
{
  return TabBarNavigationController.shouldSelectOnCollapse.getter() & 1;
}

void sub_1B161FF68()
{
  TabBarNavigationController.identifier.getter();
}

uint64_t sub_1B161FF88()
{
  uint64_t result;

  result = sub_1B16B983C();
  qword_1ED17A040 = result;
  return result;
}

id static NSNotificationName.tabBarNavigationControllerDidPush.getter()
{
  return sub_1B13A666C(&qword_1ED17B5E0, (id *)&qword_1ED17A040);
}

id static NSNotificationName.tabBarNavigationControllerDidPop.getter()
{
  return sub_1B13A666C(&qword_1ED17B418, (id *)&qword_1ED17A038);
}

uint64_t sub_1B161FFF4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B1620018()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

void sub_1B1620028(uint64_t a1)
{
  uint64_t v2;

  sub_1B162005C((unint64_t *)&unk_1EEF35ED0, (uint64_t)&protocol conformance descriptor for TabBarNavigationController);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1B162005C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for TabBarNavigationController();
    atomic_store(MEMORY[0x1B5E1F0E8](a2, v4), a1);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t method lookup function for TabBarNavigationController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TabBarNavigationController.__allocating_init(rootViewController:commandCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_1B16200A8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1B1410CB8(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  OUTLINED_FUNCTION_0_0();
}

id ModalHostViewStyler.config.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v5;

  v2 = *(void **)(v1 + 8);
  v5 = *(id *)v1;
  *a1 = *(_QWORD *)v1;
  a1[1] = v2;
  v3 = v2;
  return v5;
}

void ModalHostViewStyler.config.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(void **)(v1 + 8);

  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
}

uint64_t (*ModalHostViewStyler.config.modify())(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  return nullsub_1;
}

_QWORD *ModalHostViewStyler.init(config:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

Swift::Void __swiftcall ModalHostViewStyler.style(closeButton:)(UIButton *closeButton)
{
  void **v1;
  void *v3;
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;

  v3 = *v1;
  sub_1B1620478(closeButton, *v1);
  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838C0);
  objc_opt_self();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_11_2((uint64_t)v4, sel_systemBackgroundColor);
  v6 = sub_1B16BA214();

  sub_1B1426CBC();
  v7 = swift_allocObject();
  v8 = v7;
  *(_OWORD *)(v7 + 16) = xmmword_1B16C95C0;
  if ((v6 & 1) != 0)
  {
    v9 = OUTLINED_FUNCTION_11_2(v7, sel_secondaryLabelColor);
    v10 = (void *)objc_opt_self();
    v11 = OUTLINED_FUNCTION_3_82(v10, sel_traitCollectionWithUserInterfaceStyle_);
    v12 = objc_msgSend(v9, sel_resolvedColorWithTraitCollection_, v11);

    *(_QWORD *)(v8 + 32) = v12;
    v14 = OUTLINED_FUNCTION_11_2(v13, sel_secondarySystemFillColor);
    v15 = OUTLINED_FUNCTION_3_82(v10, sel_traitCollectionWithUserInterfaceStyle_);
  }
  else
  {
    v16 = UIColor.legibleForeground.getter();
    *(_QWORD *)(v8 + 32) = v16;
    v14 = OUTLINED_FUNCTION_11_2((uint64_t)v16, sel_secondarySystemFillColor);
    v17 = (void *)objc_opt_self();
    v15 = OUTLINED_FUNCTION_3_82(v17, sel_traitCollectionWithUserInterfaceStyle_);
  }
  v18 = OUTLINED_FUNCTION_3_82(v14, sel_resolvedColorWithTraitCollection_);

  *(_QWORD *)(v8 + 40) = v18;
  sub_1B16B9B78();
  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED186E48);
  sub_1B13AA994();
  v20 = v19;
  v21 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 7, 3, 20.0);
  v22 = OUTLINED_FUNCTION_3_82(v21, sel_configurationByApplyingConfiguration_);

  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838D0);
  v23 = sub_1B13AB3B4();
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, sel_imageByApplyingSymbolConfiguration_, v22);

    -[UIButton setImage:forState:](closeButton, sel_setImage_forState_, v25, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B1620478(void *a1, void *a2)
{
  id v5;
  unsigned int v6;

  if (objc_msgSend(a1, sel_overrideUserInterfaceStyle))
    return (uint64_t)objc_msgSend(a1, sel_overrideUserInterfaceStyle);
  v5 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v6 = objc_msgSend(a2, sel__isSimilarToColor_withinPercentage_, v5, 0.12);

  if (v6)
    return 1;
  else
    return 2;
}

ValueMetadata *type metadata accessor for ModalHostViewStyler()
{
  return &type metadata for ModalHostViewStyler;
}

uint64_t PillViewModel.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1B16B9740();
  return v1;
}

void *PillViewModel.titleColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t PillViewModel.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B1620590(v1 + OBJC_IVAR____TtC5TeaUI13PillViewModel_icon, a1);
}

uint64_t sub_1B1620590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B16205D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B16205D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF35F48)
  {
    type metadata accessor for PillViewImage();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF35F48);
  }
}

__n128 PillViewModel.size.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI13PillViewModel_size + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC5TeaUI13PillViewModel_size);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC5TeaUI13PillViewModel_size + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t PillViewModel.__allocating_init(title:titleColor:icon:size:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  PillViewModel.init(title:titleColor:icon:size:)(a1, a2, a3, a4, a5);
  return v10;
}

_QWORD *PillViewModel.init(title:titleColor:icon:size:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char *v9;
  __int128 v11;

  v11 = *a5;
  v6 = *((_QWORD *)a5 + 2);
  v7 = *((_QWORD *)a5 + 3);
  v8 = *((_BYTE *)a5 + 32);
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  sub_1B1620728(a4, (uint64_t)v5 + OBJC_IVAR____TtC5TeaUI13PillViewModel_icon);
  v9 = (char *)v5 + OBJC_IVAR____TtC5TeaUI13PillViewModel_size;
  *(_OWORD *)v9 = v11;
  *((_QWORD *)v9 + 2) = v6;
  *((_QWORD *)v9 + 3) = v7;
  v9[32] = v8;
  return v5;
}

uint64_t sub_1B1620728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B16205D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PillViewModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_1B16207A0(v0 + OBJC_IVAR____TtC5TeaUI13PillViewModel_icon);
  return v0;
}

uint64_t sub_1B16207A0(uint64_t a1)
{
  uint64_t v2;

  sub_1B16205D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PillViewModel.__deallocating_deinit()
{
  PillViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1620800()
{
  return type metadata accessor for PillViewModel();
}

uint64_t type metadata accessor for PillViewModel()
{
  uint64_t result;

  result = qword_1EEF35F78;
  if (!qword_1EEF35F78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B1620840()
{
  unint64_t v0;

  sub_1B16205D4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PillViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PillViewModel.__allocating_init(title:titleColor:icon:size:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void BlueprintViewportMonitor.remove(observer:)()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  OUTLINED_FUNCTION_6();
  v4 = v0;
  v6 = v5;
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_10_16();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_4_10();
  *v10 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_12_60(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v11 = OUTLINED_FUNCTION_20_54();
  OUTLINED_FUNCTION_21_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v11 & 1) == 0)
    goto LABEL_18;
  v4 = (unint64_t *)((char *)v4 + OBJC_IVAR____TtC5TeaUI24BlueprintViewportMonitor_observers);
  OUTLINED_FUNCTION_13();
  v1 = *v4;
  v20 = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
    goto LABEL_19;
  v12 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_119_0();
  for (; v12; v12 = OUTLINED_FUNCTION_31_0())
  {
    v19 = v4;
    v13 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_19_1();
      if (v13 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      OUTLINED_FUNCTION_2_135();
      v4 = (unint64_t *)(v13 + 1);
      if (__OFADD__(v13, 1))
        goto LABEL_17;
      v14 = MEMORY[0x1B5E1F2F8](v3 + 16);
      swift_unknownObjectRelease();
      if (!v14 || (v15 = MEMORY[0x1B5E1F2F8](v3 + 16)) != 0 && (v16 = v15, swift_unknownObjectRelease(), v16 == v6))
      {
        OUTLINED_FUNCTION_47_1();
      }
      else
      {
        sub_1B16BA61C();
        sub_1B16BA64C();
        sub_1B16BA658();
        sub_1B16BA628();
      }
      ++v13;
      if (v4 == (unint64_t *)v12)
      {
        v4 = v19;
        v17 = v20;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_119_0();
  }
  v17 = MEMORY[0x1E0DEE9D8];
LABEL_21:
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_52();
  *v4 = v17;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
}

TeaUI::BlueprintViewportMonitor::Options __swiftcall BlueprintViewportMonitor.Options.init(rawValue:)(TeaUI::BlueprintViewportMonitor::Options rawValue)
{
  TeaUI::BlueprintViewportMonitor::Options *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t BlueprintViewportMonitor.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaUI::BlueprintViewportMonitor::Options sub_1B1620AC4(Swift::Int *a1)
{
  return BlueprintViewportMonitor.Options.init(rawValue:)(*a1);
}

TeaUI::BlueprintViewportMonitor::Options sub_1B1620ACC@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaUI::BlueprintViewportMonitor::Options result;

  result.rawValue = BlueprintViewportMonitor.Options.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1B1620AF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = BlueprintViewportMonitor.Options.rawValue.getter();
  *a1 = result;
  return result;
}

id BlueprintViewportMonitor.__allocating_init(options:)(uint64_t *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return BlueprintViewportMonitor.init(options:)(a1);
}

Swift::Void __swiftcall BlueprintViewportMonitor.stopUpdates()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_26_0();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_4_10();
  *v5 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_103();
  v6 = sub_1B16B9674();
  OUTLINED_FUNCTION_152();
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI24BlueprintViewportMonitor_options) & 2) == 0)
  {
LABEL_6:
    OUTLINED_FUNCTION_27();
    return;
  }
  if (qword_1ED1849E0 != -1)
    goto LABEL_8;
LABEL_4:
  v7 = off_1ED17E7B8;
  *v5 = sub_1B16BA0DC();
  OUTLINED_FUNCTION_103();
  v8 = sub_1B16B9674();
  OUTLINED_FUNCTION_152();
  if ((v8 & 1) != 0)
  {
    v9 = OUTLINED_FUNCTION_13();
    MEMORY[0x1E0C80A78](v9, v10);
    *(&v12 - 2) = v1;
    *(&v12 - 1) = (uint64_t)&protocol witness table for BlueprintViewportMonitor;
    sub_1B16B9740();
    sub_1B13AC9A4();
    v7[2] = v11;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  __break(1u);
}

void BlueprintViewportMonitor.notify(block:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6();
  v2 = v0;
  v3 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_4_10();
  *v7 = OUTLINED_FUNCTION_14();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v7, *MEMORY[0x1E0DEF740], v3);
  v8 = sub_1B16B9674();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v7, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    OUTLINED_FUNCTION_5_103();
    v10 = OUTLINED_FUNCTION_31_0();
    if (v10)
      goto LABEL_4;
LABEL_8:
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_47();
    return;
  }
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC5TeaUI24BlueprintViewportMonitor_observers);
  OUTLINED_FUNCTION_1_4();
  v2 = *v9;
  if ((unint64_t)*v9 >> 62)
    goto LABEL_10;
  v10 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_119_0();
  if (!v10)
    goto LABEL_8;
LABEL_4:
  if (v10 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_2_135();
    OUTLINED_FUNCTION_24_40();
  }
  __break(1u);
}

id BlueprintViewportMonitor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BlueprintViewportMonitor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BlueprintViewportMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void BlueprintViewportMonitor.motionManager(_:motionEnabled:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_6();
  v3 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_0_1();
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI24BlueprintViewportMonitor_options) & 2) == 0)
    goto LABEL_11;
  OUTLINED_FUNCTION_4_10();
  v6 = (char *)OUTLINED_FUNCTION_26_40();
  *v1 = OUTLINED_FUNCTION_32_33();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF740], v3);
  v7 = OUTLINED_FUNCTION_20_54();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    OUTLINED_FUNCTION_67_1();
    v9 = OUTLINED_FUNCTION_31_0();
    if (v9)
      goto LABEL_5;
    goto LABEL_10;
  }
  v8 = (uint64_t *)&v6[OBJC_IVAR____TtC5TeaUI24BlueprintViewportMonitor_observers];
  OUTLINED_FUNCTION_1_4();
  v3 = *v8;
  if ((unint64_t)*v8 >> 62)
    goto LABEL_13;
  v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_67_1();
  if (!v9)
  {
LABEL_10:

    swift_bridgeObjectRelease();
LABEL_11:
    OUTLINED_FUNCTION_47();
    return;
  }
LABEL_5:
  if (v9 >= 1)
  {
    if ((v3 & 0xC000000000000001) != 0)
      MEMORY[0x1B5E1DF60](0, v3);
    else
      swift_retain();
    OUTLINED_FUNCTION_24_40();
  }
  __break(1u);
}

unint64_t sub_1B1621028()
{
  unint64_t result;

  result = qword_1EEF36028;
  if (!qword_1EEF36028)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintViewportMonitor.Options, &type metadata for BlueprintViewportMonitor.Options);
    atomic_store(result, (unint64_t *)&qword_1EEF36028);
  }
  return result;
}

unint64_t sub_1B1621068()
{
  unint64_t result;

  result = qword_1EEF36030;
  if (!qword_1EEF36030)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintViewportMonitor.Options, &type metadata for BlueprintViewportMonitor.Options);
    atomic_store(result, (unint64_t *)&qword_1EEF36030);
  }
  return result;
}

uint64_t method lookup function for BlueprintViewportMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintViewportMonitor.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1B16210B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_4_10();
  *v10 = OUTLINED_FUNCTION_14();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v10, *MEMORY[0x1E0DEF740], v6);
  v11 = sub_1B16B9674();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    if (objc_msgSend(*(id *)(a3 + 32), sel_isDeviceMotionAvailable))
    {
      v12 = OUTLINED_FUNCTION_13();
      MEMORY[0x1E0C80A78](v12, v13);
      *(&v17 - 2) = a1;
      *(&v17 - 1) = (uint64_t)&protocol witness table for MotionDebugView;
      OUTLINED_FUNCTION_67_1();
      sub_1B13AC9A4();
      *(_QWORD *)(a3 + 16) = v14;
      swift_bridgeObjectRelease();
      type metadata accessor for MotionManagerObserverProxy();
      v15 = OUTLINED_FUNCTION_25();
      *(_QWORD *)(v15 + 24) = 0;
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakInit();
      *(_QWORD *)(v15 + 24) = &protocol witness table for MotionDebugView;
      swift_unknownObjectWeakAssign();
      swift_unknownObjectWeakAssign();
      v16 = OUTLINED_FUNCTION_13();
      MEMORY[0x1B5E1D4C8](v16);
      sub_1B13DA560(*(_QWORD *)((*(_QWORD *)(a3 + 16) & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_1B16B9C08();
      sub_1B16B9B78();
      swift_endAccess();
      sub_1B13AF970();
    }
    OUTLINED_FUNCTION_27();
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_1B1621288(_QWORD *a1)
{
  return sub_1B145C9AC(a1);
}

uint64_t sub_1B16212A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B1621324(const void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v11;
  id v12;
  _QWORD v14[66];
  uint64_t v15;
  _QWORD v16[66];
  double v17[67];

  OUTLINED_FUNCTION_10_0(v16, a1);
  OUTLINED_FUNCTION_10_0(v17, (const void *)(v1 + 1776));
  v2 = *(double *)&v16[1];
  v3 = *(double *)&v16[21];
  v4 = *(double *)&v16[23];
  sub_1B1424D1C((uint64_t)v17);
  v5 = OUTLINED_FUNCTION_3_122();
  v6 = OUTLINED_FUNCTION_4_105();
  v7 = sub_1B1417ADC((uint64_t)v17);
  if (v5 == v6 && v2 == v17[1] && v3 == v17[21] && v4 == v17[23])
  {
    swift_retain();
    return v1;
  }
  v14[0] = *(_QWORD *)(v1 + 2328);
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_1_161();
  sub_1B16BA328();
  swift_retain();
  sub_1B16B8804();
  swift_release();
  v1 = v15;
  if (!v15)
    goto LABEL_16;
  OUTLINED_FUNCTION_10_0(v14, (const void *)(v15 + 1776));
  sub_1B1424D1C((uint64_t)v14);
  v11 = OUTLINED_FUNCTION_3_122();
  v12 = OUTLINED_FUNCTION_4_105();
  sub_1B1417ADC((uint64_t)v14);
  if (v11 != v12 || v2 != *(double *)&v14[1] || v3 != *(double *)&v14[21] || v4 != *(double *)&v14[23])
  {
    swift_release();
LABEL_16:
    if (swift_weakLoadStrong())
    {
      OUTLINED_FUNCTION_10_0(v14, v16);
      v1 = sub_1B1621324(v14);
      swift_release();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1B1621534()
{
  swift_weakAssign();
  OUTLINED_FUNCTION_1_161();
  swift_retain();
  sub_1B16B8804();
  return swift_release();
}

uint64_t sub_1B16215BC(const void *a1, const void *a2, const void *a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_1B1621620(a1, a2, a3, a4);
  return v8;
}

_QWORD *sub_1B1621620(const void *a1, const void *a2, const void *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[1176];
  _BYTE v23[536];

  v5 = v4;
  v21 = a4;
  v9 = sub_1B16B80B4();
  MEMORY[0x1E0C80A78](v9, v10);
  v11 = sub_1B16B7BE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_8(v22, a2);
  OUTLINED_FUNCTION_10_0(v23, a3);
  sub_1B16B7BD4();
  v16 = sub_1B16B7BBC();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v5[2] = v16;
  v5[3] = v18;
  swift_weakInit();
  sub_1B146D6F4();
  v5[290] = sub_1B16B96D4();
  sub_1B16B80A8();
  OUTLINED_FUNCTION_1_161();
  swift_allocObject();
  v5[291] = sub_1B16B80C0();
  memcpy(v5 + 4, a1, 0x238uLL);
  OUTLINED_FUNCTION_4_8(v5 + 75, v22);
  OUTLINED_FUNCTION_10_0(v5 + 222, v23);
  v5[288] = v21;
  return v5;
}

uint64_t sub_1B16217B0()
{
  swift_beginAccess();
  sub_1B146D6F4();
  sub_1B16B9788();
  swift_retain();
  sub_1B16B97AC();
  return swift_endAccess();
}

void sub_1B1621848()
{
  swift_beginAccess();
  type metadata accessor for BlueprintLayoutTransition();
}

uint64_t sub_1B16218A0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v5;

  v3 = sub_1B146D6F4();
  MEMORY[0x1B5E1D12C](&v5, v1, MEMORY[0x1E0DEF040], a1, v3);
  return swift_endAccess();
}

void sub_1B16218E8()
{
  swift_bridgeObjectRelease();
  type metadata accessor for BlueprintLayout();
}

uint64_t sub_1B1621920(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[1184];
  _BYTE v5[576];

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  OUTLINED_FUNCTION_4_8(v4, (const void *)(v2 + 600));
  sub_1B1448694((uint64_t)v4);
  OUTLINED_FUNCTION_10_0(v5, (const void *)(v2 + 1776));
  sub_1B1417ADC((uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

void sub_1B1621994()
{
  sub_1B16218E8();
}

uint64_t sub_1B16219A0()
{
  return swift_deallocClassInstance();
}

void type metadata accessor for BlueprintLayoutTransition()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t sub_1B16219C0()
{
  return sub_1B16217B0();
}

void sub_1B16219C8()
{
  sub_1B1621848();
}

id RadialGradientView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

void RadialGradientView.gradientDescriptor.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v2[144];
  _QWORD v3[19];

  sub_1B15AD390(a1, (uint64_t)v2);
  v1 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_15_55(v1, (uint64_t)v3);
  OUTLINED_FUNCTION_8_85((uint64_t)v2);
  sub_1B1621BF4(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
  sub_1B1621B18();
}

uint64_t sub_1B1621A70(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t RadialGradientView.gradientLayer.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_layer);
  type metadata accessor for RadialGradientLayer();
  return swift_dynamicCastClassUnconditional();
}

void RadialGradientView.gradientDescriptor.getter()
{
  sub_1B1621F04();
}

void sub_1B1621B18()
{
  void *v0;
  id v1;
  uint64_t v2;
  _BYTE v3[144];
  _QWORD v4[18];

  v1 = objc_msgSend(v0, sel_layer);
  type metadata accessor for RadialGradientLayer();
  swift_dynamicCastClassUnconditional();
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC5TeaUI18RadialGradientView_gradientDescriptor;
  swift_beginAccess();
  sub_1B15AD390(v2, (uint64_t)v4);
  sub_1B15AD390((uint64_t)v4, (uint64_t)v3);
  sub_1B1621BF4(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
  RadialGradientLayer.gradientDescriptor.setter((uint64_t)v3);

}

uint64_t type metadata accessor for RadialGradientLayer()
{
  return objc_opt_self();
}

_QWORD *sub_1B1621BF4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17]);
  return a1;
}

uint64_t sub_1B1621C50(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1B16B9740();
    sub_1B16B9740();
    return sub_1B16B9740();
  }
  return result;
}

_QWORD *RadialGradientLayer.gradientDescriptor.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[18];
  _BYTE v12[144];
  _QWORD v13[18];
  _QWORD v14[19];

  sub_1B15AD390(a1, (uint64_t)v12);
  v1 = OUTLINED_FUNCTION_13();
  v2 = OUTLINED_FUNCTION_15_55(v1, (uint64_t)v13);
  OUTLINED_FUNCTION_15_55(v2, (uint64_t)v14);
  OUTLINED_FUNCTION_8_85((uint64_t)v12);
  sub_1B1621BF4(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
  sub_1B1621BF4(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
  OUTLINED_FUNCTION_16_60((uint64_t)v13, v3, v4, v5, v6, v7, v8, v9, v11[0]);
  sub_1B1621FFC((uint64_t)v11);
  return sub_1B1621BF4(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
}

void (*RadialGradientView.gradientDescriptor.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  return sub_1B1621D68;
}

void sub_1B1621D68(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B1621B18();
}

id RadialGradientView.init(frame:)()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  objc_super *v3;
  SEL v4;
  _BYTE v6[144];

  OUTLINED_FUNCTION_57();
  v1 = OUTLINED_FUNCTION_4();
  sub_1B1622204(v6);
  OUTLINED_FUNCTION_5_104((uint64_t)v6);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSendSuper2(v3, v4, v2, v0, v1);
}

uint64_t RadialGradientView.__allocating_init(coder:)()
{
  uint64_t v0;
  uint64_t v1;

  objc_msgSend(OUTLINED_FUNCTION_4_20(), sel_initWithCoder_, v0);
  OUTLINED_FUNCTION_12_0();
  return v1;
}

void RadialGradientView.init(coder:)(uint64_t a1)
{
  void *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v6;
  _BYTE v7[144];

  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  sub_1B1622204(v7);
  OUTLINED_FUNCTION_11_65(v4, v5);
  v6.receiver = v1;
  v6.super_class = v3;
  objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_3_123();
}

void RadialGradientLayer.gradientDescriptor.getter()
{
  sub_1B1621F04();
}

void sub_1B1621F04()
{
  uint64_t v0;
  _QWORD v1[18];

  v0 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_86(v0, (uint64_t)v1);
  OUTLINED_FUNCTION_8_85((uint64_t)v1);
  sub_1B1621BF4(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
  OUTLINED_FUNCTION_12_61();
}

void sub_1B1621F50()
{
  uint64_t v0;
  _QWORD v1[18];

  v0 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_86(v0, (uint64_t)v1);
  OUTLINED_FUNCTION_8_85((uint64_t)v1);
  sub_1B1621BF4(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
  OUTLINED_FUNCTION_12_61();
}

uint64_t sub_1B1621FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[18];
  _QWORD v15[18];

  sub_1B15AD390(a1, (uint64_t)v15);
  OUTLINED_FUNCTION_16_60((uint64_t)v15, v6, v7, v8, v9, v10, v11, v12, v14[0]);
  sub_1B1621BF4(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
  return a5(v14);
}

id sub_1B1621FFC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id result;
  __int128 v4;
  char v6;
  _OWORD __dst[9];
  _BYTE v8[49];
  _QWORD v9[18];
  _OWORD __src[9];
  uint64_t v11[18];
  uint64_t v12;
  _BYTE v13[144];
  _QWORD v14[18];
  _BYTE v15[144];

  sub_1B15AD390(a1, (uint64_t)v13);
  v2 = (uint64_t)v1 + OBJC_IVAR____TtC5TeaUI19RadialGradientLayer_gradientDescriptor;
  swift_beginAccess();
  sub_1B15AD390(v2, (uint64_t)v14);
  sub_1B15AD390((uint64_t)v13, (uint64_t)v15);
  if (sub_1B147DDC0((uint64_t)v15) == 1)
  {
    sub_1B15AD390((uint64_t)v14, (uint64_t)v11);
    result = (id)sub_1B147DDC0((uint64_t)v11);
    if ((_DWORD)result == 1)
      return result;
    goto LABEL_6;
  }
  sub_1B15AD390((uint64_t)v13, (uint64_t)__src);
  sub_1B15AD390((uint64_t)v14, (uint64_t)v11);
  if (sub_1B147DDC0((uint64_t)v11) == 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    sub_1B15AD390((uint64_t)v13, (uint64_t)v8);
    sub_1B15AD390((uint64_t)v13, (uint64_t)v9);
    sub_1B1531D08((uint64_t)v9);
    sub_1B1531D08((uint64_t)v8);
    sub_1B15AD41C((uint64_t)__dst);
LABEL_6:
    sub_1B15AD390((uint64_t)v13, (uint64_t)v11);
    sub_1B15AD390((uint64_t)v14, (uint64_t)&v12);
    sub_1B1621BF4(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
    sub_1B1622AD0(v11);
    return objc_msgSend(v1, sel_setNeedsDisplay);
  }
  sub_1B15AD390((uint64_t)v14, (uint64_t)v9);
  v4 = __src[0];
  if (*(_QWORD *)&__src[0] == v9[0] && *((_QWORD *)&__src[0] + 1) == v9[1])
    v6 = 1;
  else
    v6 = sub_1B16BA910(*(_QWORD *)&__src[0], *((_QWORD *)&__src[0] + 1), v9[0]);
  __dst[0] = v4;
  __dst[1] = __src[1];
  __dst[2] = __src[2];
  __dst[3] = __src[3];
  LOBYTE(__dst[4]) = __src[4];
  *(_OWORD *)((char *)&__dst[4] + 8) = *(_OWORD *)((char *)&__src[4] + 8);
  *(_OWORD *)((char *)&__dst[5] + 8) = *(_OWORD *)((char *)&__src[5] + 8);
  *(_OWORD *)((char *)&__dst[6] + 8) = *(_OWORD *)((char *)&__src[6] + 8);
  BYTE8(__dst[7]) = BYTE8(__src[7]);
  __dst[8] = __src[8];
  sub_1B15AD390((uint64_t)v13, (uint64_t)v8);
  sub_1B1531D08((uint64_t)v8);
  result = (id)sub_1B15AD41C((uint64_t)__dst);
  if ((v6 & 1) == 0)
    return objc_msgSend(v1, sel_setNeedsDisplay);
  return result;
}

void sub_1B1622204(void *a1)
{
  bzero(a1, 0x90uLL);
}

void (*RadialGradientLayer.gradientDescriptor.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x2F0uLL);
  *a1 = v3;
  v3[93] = v1;
  v4 = v1 + OBJC_IVAR____TtC5TeaUI19RadialGradientLayer_gradientDescriptor;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_5_104(v4);
  OUTLINED_FUNCTION_8_85((uint64_t)v3);
  sub_1B1621BF4(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
  return sub_1B1622288;
}

void sub_1B1622288(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 144;
  v4 = (char *)*a1 + 288;
  v5 = (char *)*a1 + 432;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_10_74();
    sub_1B15AD390((uint64_t)v5, (uint64_t)v2 + 576);
    sub_1B1621BF4(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);
    RadialGradientLayer.gradientDescriptor.setter((uint64_t)v2 + 576);
    OUTLINED_FUNCTION_5_104(v3);
    sub_1B1621BF4(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
  }
  else
  {
    OUTLINED_FUNCTION_10_74();
    OUTLINED_FUNCTION_5_104((uint64_t)v5);
    RadialGradientLayer.gradientDescriptor.setter((uint64_t)v4);
  }
  free(v2);
}

id RadialGradientLayer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RadialGradientLayer.init()()
{
  void *v0;
  objc_class *v1;
  objc_super v2;
  _BYTE v3[144];

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  sub_1B1622204(v3);
  OUTLINED_FUNCTION_5_104((uint64_t)v3);
  v2.receiver = v0;
  v2.super_class = v1;
  objc_msgSend(objc_msgSendSuper2(&v2, sel_init), sel_setNeedsDisplayOnBoundsChange_, 1);
  OUTLINED_FUNCTION_3_123();
}

id RadialGradientLayer.__allocating_init(layer:)()
{
  _QWORD *v0;
  id v1;
  id v2;

  v1 = OUTLINED_FUNCTION_4_20();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v2 = objc_msgSend(v1, sel_initWithLayer_, sub_1B16BA8F8());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  return v2;
}

id RadialGradientLayer.init(layer:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[18];
  _QWORD v14[19];
  __int128 v15;
  objc_super v16;
  _BYTE v17[144];

  v2 = v1;
  v4 = (objc_class *)OUTLINED_FUNCTION_4();
  v5 = (uint64_t)v2 + OBJC_IVAR____TtC5TeaUI19RadialGradientLayer_gradientDescriptor;
  sub_1B1622204(v17);
  sub_1B15AD390((uint64_t)v17, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = sub_1B16BA8F8();
  v16.receiver = v2;
  v16.super_class = v4;
  v7 = objc_msgSendSuper2(&v16, sel_initWithLayer_, v6);
  swift_unknownObjectRelease();
  objc_msgSend(v7, sel_setNeedsDisplayOnBoundsChange_, 1);
  sub_1B143D3E0(a1, &v15);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = (void *)v14[18];
    v9 = OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_7_86(v9, (uint64_t)v13);
    sub_1B1621BF4(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621C50);

    v10 = (uint64_t)v7 + OBJC_IVAR____TtC5TeaUI19RadialGradientLayer_gradientDescriptor;
    v11 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_7_86(v11, (uint64_t)v14);
    sub_1B15AD390((uint64_t)v13, v10);
    sub_1B1621BF4(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
  }
  return v7;
}

uint64_t RadialGradientLayer.__allocating_init(coder:)()
{
  uint64_t v0;
  uint64_t v1;

  objc_msgSend(OUTLINED_FUNCTION_4_20(), sel_initWithCoder_, v0);
  OUTLINED_FUNCTION_12_0();
  return v1;
}

void RadialGradientLayer.init(coder:)()
{
  void *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  objc_super v4;
  _BYTE v5[144];

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  sub_1B1622204(v5);
  OUTLINED_FUNCTION_11_65(v2, v3);
  v4.receiver = v0;
  v4.super_class = v1;
  objc_msgSendSuper2(&v4, sel_init);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_3_123();
}

Swift::Void __swiftcall RadialGradientLayer.draw(in:)(CGContextRef in)
{
  void *v1;
  void *v2;
  uint64_t v4;
  CGColorSpaceRef DeviceRGB;
  CGColorSpace *v6;
  const __CFArray *v7;
  const CGFloat *v8;
  CGGradient *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  char v14;
  double Width;
  double v16;
  char v17;
  CGFloat v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  double v37;
  double v38;
  double v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double startRadius;
  CGFloat startRadiusa;
  double Height;
  double v56;
  double v57;
  double v58;
  _BYTE __dst[144];
  _BYTE v60[144];
  _QWORD v61[18];
  _QWORD __src[18];
  CGPoint v63;
  CGPoint v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_86(v4, (uint64_t)v61);
  sub_1B15AD390((uint64_t)v61, (uint64_t)__src);
  if (sub_1B147DDC0((uint64_t)__src) != 1)
  {
    sub_1B15AD390((uint64_t)v61, (uint64_t)v60);
    sub_1B1531D08((uint64_t)v60);
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    memcpy(__dst, __src, sizeof(__dst));
    v6 = DeviceRGB;
    v7 = (const __CFArray *)sub_1B1670E1C();
    if (__src[17])
      v8 = (const CGFloat *)(__src[17] + 32);
    else
      v8 = 0;
    v9 = CGGradientCreateWithColors(v6, v7, v8);

    if (v9)
    {
      v10 = *(double *)&__src[2];
      v11 = *(double *)&__src[3];
      v12 = *(double *)&__src[4];
      v13 = *(double *)&__src[5];
      v47 = *(double *)&__src[6];
      startRadius = *(double *)&__src[7];
      v14 = __src[8];
      OUTLINED_FUNCTION_2_136();
      Width = CGRectGetWidth(v65);
      OUTLINED_FUNCTION_2_136();
      Height = CGRectGetHeight(v66);
      v56 = *(double *)&__src[9];
      v58 = *(double *)&__src[10];
      v16 = *(double *)&__src[11];
      v48 = *(double *)&__src[13];
      v49 = *(double *)&__src[14];
      v50 = *(double *)&__src[12];
      v17 = __src[15];
      OUTLINED_FUNCTION_2_136();
      v52 = CGRectGetWidth(v67);
      OUTLINED_FUNCTION_2_136();
      v51 = CGRectGetHeight(v68);
      OUTLINED_FUNCTION_2_136();
      if ((v14 & 1) != 0)
      {
        v22 = v18;
        v23 = v19;
        v24 = v20;
        v25 = v21;
        v46 = v10;
        v26 = vabdd_f64(v12, v47) * CGRectGetWidth(*(CGRect *)&v18);
        v27 = v13;
        v28 = Width;
        v29 = v11;
        v30 = vabdd_f64(v27, startRadius);
        v69.origin.x = v22;
        v69.origin.y = v23;
        v69.size.width = v24;
        v69.size.height = v25;
        v31 = v30 * CGRectGetHeight(v69);
        v11 = v29;
        Width = v28;
        v32 = v26 * v26;
        v10 = v46;
        startRadiusa = sqrt(v32 + v31 * v31);
      }
      else
      {
        startRadiusa = v12;
      }
      v33 = v10 * Width;
      v34 = v11 * Height;
      v35 = v56 * v52;
      objc_msgSend(v2, sel_bounds, *(_QWORD *)&v46);
      if ((v17 & 1) != 0)
      {
        v40 = v36;
        v41 = v37;
        v42 = v38;
        v43 = v39;
        v57 = vabdd_f64(v16, v48) * CGRectGetWidth(*(CGRect *)&v36);
        v70.origin.x = v40;
        v70.origin.y = v41;
        v70.size.width = v42;
        v70.size.height = v43;
        v44 = vabdd_f64(v50, v49) * CGRectGetHeight(v70);
        v45 = sqrt(v57 * v57 + v44 * v44);
      }
      else
      {
        v45 = v16;
      }
      sub_1B1621BF4(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
      v63.x = v33;
      v63.y = v34;
      v64.x = v35;
      v64.y = v58 * v51;
      CGContextDrawRadialGradient(in, v9, v63, startRadiusa, v64, v45, 3u);

    }
    else
    {

      sub_1B1621BF4(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
    }
  }
}

_QWORD *sub_1B1622A0C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9[18];

  OUTLINED_FUNCTION_16_60(a1 + *a3, a2, (uint64_t)a3, a4, a5, a6, a7, a8, v9[0]);
  return sub_1B1621BF4(v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1621A70);
}

void sub_1B1622A40()
{
  sub_1B1621F50();
}

uint64_t sub_1B1622A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1621FA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))RadialGradientView.gradientDescriptor.setter);
}

void sub_1B1622A78()
{
  sub_1B1621F50();
}

uint64_t sub_1B1622A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1621FA0(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))RadialGradientLayer.gradientDescriptor.setter);
}

uint64_t type metadata accessor for RadialGradientView()
{
  return objc_opt_self();
}

uint64_t *sub_1B1622AD0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = a1[19];
  v4 = a1[18];
  sub_1B1621A70(*a1, a1[1]);
  sub_1B1621A70(v4, v2);
  return a1;
}

uint64_t dispatch thunk of PagePrewarmerProviderType.prewarmer(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t storeEnumTagSinglePayload for FeatureFlags.AppleAccountFeatureFlags(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1622C08 + 4 * asc_1B16DB8B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1622C28 + 4 * byte_1B16DB8B5[v4]))();
}

_BYTE *sub_1B1622C08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1622C28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1622C30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1622C38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1622C40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1622C48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags.AppleAccountFeatureFlags()
{
  return &type metadata for FeatureFlags.AppleAccountFeatureFlags;
}

unint64_t sub_1B1622C68()
{
  unint64_t result;

  result = qword_1EEF36048;
  if (!qword_1EEF36048)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16DB92C, &type metadata for FeatureFlags.AppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1EEF36048);
  }
  return result;
}

const char *sub_1B1622CA4()
{
  return "AppleAccount";
}

const char *sub_1B1622CB8()
{
  return "AABranding";
}

void sub_1B1622CCC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    *(_BYTE *)(v0 + 32) = 1;
    (*(void (**)(uint64_t, uint64_t))(v0 + 40))(v0, 2);
  }
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1622D04(char a1)
{
  if (a1 != 2)
  {
    OUTLINED_FUNCTION_3_124();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7();
  }
}

uint64_t BlueprintInfiniteScrollRequestType.complete(result:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_95(*a1 == 1, a2, a3);
}

uint64_t BlueprintInfiniteScrollRequestType.complete(error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(a3 + 24))(0);
}

uint64_t dispatch thunk of BlueprintInfiniteScrollRequestType.isCompleted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintInfiniteScrollRequestType.complete(promiseResult:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1B1622DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 48) = a4;
  return v4;
}

uint64_t sub_1B1622DD8(unsigned __int8 *a1)
{
  return sub_1B13BA6E8(*a1);
}

void sub_1B1622DE0()
{
  char *v0;

  sub_1B1622D04(*v0);
}

uint64_t getEnumTagSinglePayload for BlueprintInfiniteScrollRequest.Result(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B1622E38 + 4 * byte_1B16DB990[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for BlueprintInfiniteScrollRequest.Result(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1622EF0 + 4 * byte_1B16DB99A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1622F24 + 4 * byte_1B16DB995[v5]))();
}

uint64_t sub_1B1622F24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1622F2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1622F34);
  return result;
}

uint64_t sub_1B1622F40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1622F48);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1622F4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1622F54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintInfiniteScrollRequest.Result()
{
  return &type metadata for BlueprintInfiniteScrollRequest.Result;
}

uint64_t sub_1B1622F70()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 32);
}

uint64_t sub_1B1622F7C(unsigned __int8 *a1)
{
  return sub_1B1622DD8(a1);
}

uint64_t sub_1B1622F9C()
{
  OUTLINED_FUNCTION_36();
  sub_1B16B98FC();
  return swift_bridgeObjectRelease();
}

void sub_1B1622FDC()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_165();
  swift_bridgeObjectRelease();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

void sub_1B162301C()
{
  sub_1B1622FDC();
}

void sub_1B162303C()
{
  sub_1B1622F9C();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1623058()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_165();
  swift_bridgeObjectRelease();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

uint64_t sub_1B1623098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  if (v4 == v6 && v5 == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1B16BA910(v4, v5, v6);
}

uint64_t sub_1B16230C8(uint64_t *a1, uint64_t *a2)
{
  return sub_1B1623098(*a1, *a2) & 1;
}

void sub_1B16230E8()
{
  sub_1B16BA574();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  OUTLINED_FUNCTION_3_124();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  OUTLINED_FUNCTION_7();
}

void sub_1B162318C()
{
  sub_1B16230E8();
}

uint64_t sub_1B16231AC()
{
  return sub_1B16231D0(qword_1EEF36050, (uint64_t)&unk_1B16DBA58);
}

uint64_t sub_1B16231D0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for BlueprintInfiniteScrollRequest();
    result = MEMORY[0x1B5E1F0E8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B162320C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B1623230()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)(v0 + 16) + 40))();
  OUTLINED_FUNCTION_0_0();
}

uint64_t dispatch thunk of SectionViewBarAnimationCoordinatorType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SectionViewBarAnimationCoordinatorType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of SectionViewBarAnimationCoordinatorType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SectionViewBarAnimationCoordinatorType.scrollPosition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SectionViewBarAnimationCoordinatorType.navigationItemStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SectionViewBarAnimationCoordinatorType.updateTitleView(animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SectionViewBarAnimationCoordinatorType.updateNavigationBar(animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of OnboardingStepMonitor.stepDidBegin(step:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of OnboardingStepMonitor.stepDidComplete(step:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id BlueprintViewportScrollData.scrollView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

BOOL BlueprintViewportScrollData.isOverscrolled.getter()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_contentOffset);
  v3 = v2;
  objc_msgSend(v1, sel_adjustedContentInset);
  return v3 < v4;
}

uint64_t BlueprintViewportScrollData.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t method lookup function for BlueprintViewportScrollData()
{
  return swift_lookUpClassMethod();
}

void ScaleContentSelectionStyle.init(factor:)(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
}

id sub_1B1623324(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  if (a2)
  {
    v2 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_animationWithKeyPath_, v2);

  return v3;
}

uint64_t ScaleContentSelectionStyle.setup(cell:selectedBackgroundView:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(a2 + 16))(0, ObjectType, a2);
}

Swift::Void __swiftcall ScaleContentSelectionStyle.willSetHighlighted(_:view:selectedBackgroundView:)(Swift::Bool _, UIView *view, UIView *selectedBackgroundView)
{
  double *v3;
  double v4;
  id v5;
  void *v6;
  float v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (_)
  {
    v4 = *v3;
    v5 = OUTLINED_FUNCTION_32_0(_, sel_layer);
    v6 = (void *)sub_1B16B983C();
    objc_msgSend(v5, sel_removeAnimationForKey_, v6);

    objc_msgSend((id)objc_opt_self(), sel_flush);
    v7 = v4;
    v8 = sub_1B16234A8(v7);
    v13 = OUTLINED_FUNCTION_32_0((uint64_t)v8, sel_layer);
    v9 = OUTLINED_FUNCTION_1_162();
    sub_1B16238F8(v9, v10, v11, v12);

  }
}

id sub_1B16234A8(float a1)
{
  id v2;
  id v3;
  double v4;
  id v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;

  sub_1B13A1BE4(0, (unint64_t *)&unk_1EEF37CE0);
  v2 = sub_1B1623324(0x726F66736E617274, 0xEF656C6163732E6DLL);
  objc_msgSend(v2, sel_setDuration_, 0.15);
  v3 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  *(float *)&v4 = a1;
  v5 = objc_msgSend(v3, sel_initWithFloat_, v4);
  objc_msgSend(v2, sel_setToValue_, v5);

  v6 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
  v7 = v2;
  LODWORD(v8) = 1036831949;
  LODWORD(v9) = 0.25;
  LODWORD(v10) = 0.75;
  LODWORD(v11) = 1.0;
  v12 = objc_msgSend(v6, sel_initWithControlPoints__::, v9, v8, v10, v11);
  objc_msgSend(v7, sel_setTimingFunction_, v12);

  objc_msgSend(v7, sel_setFillMode_, *MEMORY[0x1E0CD2B60]);
  objc_msgSend(v7, sel_setRemovedOnCompletion_, 0);
  return v7;
}

Swift::Void __swiftcall ScaleContentSelectionStyle.didSetHighlighted(_:view:selectedBackgroundView:)(Swift::Bool _, UIView *view, UIView *selectedBackgroundView)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  if (!_)
  {
    v3 = OUTLINED_FUNCTION_32_0(_, sel_layer);
    v4 = objc_msgSend(v3, sel_presentationLayer);

    if (v4)
    {
      v5 = (void *)sub_1B16B983C();
      v6 = objc_msgSend(v4, sel_valueForKeyPath_, v5);

      if (v6)
      {
        sub_1B16BA3AC();
        swift_unknownObjectRelease();
        sub_1B143D3E0(&v12, &v13);
        swift_dynamicCast();
        v7 = sub_1B1623730();
        v8 = OUTLINED_FUNCTION_32_0((uint64_t)v7, sel_layer);
        v9 = OUTLINED_FUNCTION_1_162();
        sub_1B16238F8(v9, v10, v11, v8);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

id sub_1B1623730()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;

  sub_1B13A1BE4(0, &qword_1EEF31708);
  v0 = sub_1B1623324(0x726F66736E617274, 0xEF656C6163732E6DLL);
  objc_msgSend(v0, sel_setMass_, 1.0);
  objc_msgSend(v0, sel_setStiffness_, 350.0);
  objc_msgSend(v0, sel_setDamping_, 34.0);
  objc_msgSend(v0, sel_setInitialVelocity_, 0.0);
  v1 = v0;
  objc_msgSend(v1, sel_settlingDuration);
  objc_msgSend(v1, sel_setDuration_);

  v2 = v1;
  v3 = (void *)sub_1B16B8000();
  objc_msgSend(v2, sel_setFromValue_, v3);

  v4 = v2;
  v5 = (void *)sub_1B16B8000();
  objc_msgSend(v4, sel_setToValue_, v5);

  objc_msgSend(v4, sel_setFillMode_, *MEMORY[0x1E0CD2B68]);
  objc_msgSend(v4, sel_setRemovedOnCompletion_, 1);
  return v4;
}

Swift::Bool __swiftcall ScaleContentSelectionStyle.shouldRenderSelection(isSelected:isHighlighted:)(Swift::Bool isSelected, Swift::Bool isHighlighted)
{
  return isSelected || isHighlighted;
}

uint64_t sub_1B16238B4(uint64_t a1, uint64_t a2)
{
  return ScaleContentSelectionStyle.setup(cell:selectedBackgroundView:)(a1, a2);
}

void sub_1B16238CC(Swift::Bool a1, UIView *a2, UIView *a3)
{
  ScaleContentSelectionStyle.didSetHighlighted(_:view:selectedBackgroundView:)(a1, a2, a3);
}

BOOL sub_1B16238E0(Swift::Bool a1, Swift::Bool a2)
{
  return ScaleContentSelectionStyle.shouldRenderSelection(isSelected:isHighlighted:)(a1, a2);
}

void sub_1B16238F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;

  v6 = (id)sub_1B16B983C();
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_addAnimation_forKey_, a1, v6);

}

ValueMetadata *type metadata accessor for ScaleContentSelectionStyle()
{
  return &type metadata for ScaleContentSelectionStyle;
}

uint64_t dispatch thunk of PluginLayoutTransitionManagerType.pluginLayoutTransition(layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t OpenInNewWindowCommandHandler.__allocating_init(navigator:sceneProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  sub_1B16239F0(a2, v4 + 24);
  return v4;
}

uint64_t OpenInNewWindowCommandHandler.init(navigator:sceneProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  sub_1B16239F0(a2, v2 + 24);
  return v2;
}

uint64_t sub_1B16239F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DB4AC(0, &qword_1ED17D390, (unint64_t *)&qword_1ED17F268, (uint64_t)&protocol descriptor for SceneProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OpenInNewWindowCommandHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;
  uint64_t v11;
  uint64_t v12;

  sub_1B15DE6B4(v4 + 24, (uint64_t)v9);
  v6 = v11;
  if (v11)
  {
    v7 = v12;
    __swift_project_boxed_opaque_existential_1(v9, v11);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    sub_1B15DE718((uint64_t)v9);
  }
  v9[0] = v6;
  v9[1] = 0;
  v10 = 0;
  sub_1B161CD24(a4, (uint64_t)v9);
  return swift_bridgeObjectRelease();
}

uint64_t OpenInNewWindowCommandHandler.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1B15DE718(v0 + 24);
  return v0;
}

uint64_t OpenInNewWindowCommandHandler.__deallocating_deinit()
{
  OpenInNewWindowCommandHandler.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1623C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OpenInNewWindowCommandHandler.handle(commandCenter:command:with:source:)(a1, a2, a3, a4);
}

uint64_t method lookup function for OpenInNewWindowCommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OpenInNewWindowCommandHandler.__allocating_init(navigator:sceneProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of BlueprintViewProviderLoadAwareType.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintViewProviderLoadAwareType.viewWillAppear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintViewProviderLoadAwareType.viewDidAppear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BlueprintViewProviderLoadAwareType.viewWillDisappear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintViewProviderLoadAwareType.viewDidDisappear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ContextMenuAccessible.makeAction(commandCenter:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

Swift::Void __swiftcall BackgroundSelectionStyle.didSetHighlighted(_:view:selectedBackgroundView:)(Swift::Bool _, UIView *view, UIView *selectedBackgroundView)
{
  _BOOL8 v4;

  v4 = !_ && -[UIView isHidden](selectedBackgroundView, sel_isHidden);
  -[UIView setHidden:](selectedBackgroundView, sel_setHidden_, v4);
}

Swift::Bool __swiftcall BackgroundSelectionStyle.shouldRenderSelection(isSelected:isHighlighted:)(Swift::Bool isSelected, Swift::Bool isHighlighted)
{
  return isSelected || isHighlighted;
}

void sub_1B1623D3C(Swift::Bool a1, UIView *a2, UIView *a3)
{
  BackgroundSelectionStyle.didSetHighlighted(_:view:selectedBackgroundView:)(a1, a2, a3);
}

BOOL sub_1B1623D50(Swift::Bool a1, Swift::Bool a2)
{
  return BackgroundSelectionStyle.shouldRenderSelection(isSelected:isHighlighted:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for BackgroundSelectionStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1623DB4 + 4 * byte_1B16DBD75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1623DE8 + 4 * byte_1B16DBD70[v4]))();
}

uint64_t sub_1B1623DE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1623DF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1623DF8);
  return result;
}

uint64_t sub_1B1623E04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1623E0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1623E10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1623E18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t PageSessionManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  OUTLINED_FUNCTION_2_137();
  *(_QWORD *)(v0 + 16) = sub_1B16B9728();
  return v0;
}

uint64_t PageSessionManagerType.startSession(for:trigger:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v5;

  v5 = *a2;
  return (*(uint64_t (**)(uint64_t, char *, double))(a4 + 8))(a1, &v5, 0.0);
}

uint64_t PageSessionManager.init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_137();
  *(_QWORD *)(v0 + 16) = sub_1B16B9728();
  return v0;
}

uint64_t PageSessionManager.startSession(for:durationThreshold:trigger:)(_QWORD *a1, unsigned __int8 *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_8_86((uint64_t)a1, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v6, v7);
  v48 = (uint64_t)&v43 - v8;
  v9 = sub_1B16B7BE0();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_86(v13, (unint64_t *)&qword_1ED17E0E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v14, v15);
  v45 = (char *)&v43 - v16;
  v17 = OUTLINED_FUNCTION_2_137();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *a2;
  if (qword_1ED184930 != -1)
    v20 = swift_once();
  v23 = (void *)qword_1ED190400;
  OUTLINED_FUNCTION_9_1(v20, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = OUTLINED_FUNCTION_62();
  *(_OWORD *)(v24 + 16) = xmmword_1B16C51D0;
  v43 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v25 = v23;
  v26 = OUTLINED_FUNCTION_21_44();
  v28 = v27;
  *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v24 + 64) = sub_1B140493C();
  *(_QWORD *)(v24 + 32) = v26;
  *(_QWORD *)(v24 + 40) = v28;
  sub_1B16BA058();
  sub_1B16B8B58();

  swift_bridgeObjectRelease();
  v29 = sub_1B16B7BB0();
  v30 = (uint64_t)v45;
  OUTLINED_FUNCTION_15_56(v29, v31, v32, v29);
  sub_1B16B7BD4();
  v33 = sub_1B16B7BBC();
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v47);
  sub_1B16B7BA4();
  *(_QWORD *)v22 = v33;
  *((_QWORD *)v22 + 1) = v35;
  *((double *)v22 + 2) = a3;
  sub_1B16241F0(v30, (uint64_t)&v22[*(int *)(v17 + 28)]);
  v22[*(int *)(v17 + 32)] = v44;
  v36 = a1[3];
  v37 = a1[4];
  OUTLINED_FUNCTION_13_62();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v22, v36, v37);
  v38 = OUTLINED_FUNCTION_21_44();
  v40 = v39;
  v41 = v48;
  sub_1B162424C((uint64_t)v22, v48);
  __swift_storeEnumTagSinglePayload(v41, 0, 1, v17);
  OUTLINED_FUNCTION_9_5();
  sub_1B146DBE8(v41, v38, v40);
  swift_endAccess();
  return sub_1B1624290((uint64_t)v22);
}

uint64_t sub_1B16241F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED17E0E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B162424C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageViewSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B1624290(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageViewSession();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void PageSessionManager.resignSession(for:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_9_1((uint64_t)a1, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v18 - v4;
  v6 = OUTLINED_FUNCTION_2_137();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_7_87();
  OUTLINED_FUNCTION_4_106();
  OUTLINED_FUNCTION_12_62();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    sub_1B14AFB1C((uint64_t)v5, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession);
    OUTLINED_FUNCTION_9_83();
  }
  else
  {
    OUTLINED_FUNCTION_18_50((uint64_t)v5);
    v11 = OUTLINED_FUNCTION_9_83();
    if (qword_1ED184930 != -1)
      v11 = swift_once();
    v12 = (void *)qword_1ED190400;
    OUTLINED_FUNCTION_9_1(v11, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = OUTLINED_FUNCTION_62();
    *(_OWORD *)(v13 + 16) = xmmword_1B16C51D0;
    v14 = v12;
    OUTLINED_FUNCTION_7_87();
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    v15 = sub_1B140493C();
    OUTLINED_FUNCTION_17_45(v15);
    OUTLINED_FUNCTION_10_75();

    OUTLINED_FUNCTION_113();
    v16 = a1[3];
    v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v16);
    OUTLINED_FUNCTION_44_4((uint64_t)v10, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 24));
    OUTLINED_FUNCTION_16_61();
  }
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B16244B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageViewSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void PageSessionManager.resumeSession(for:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_9_1((uint64_t)a1, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v18 - v4;
  v6 = OUTLINED_FUNCTION_2_137();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_7_87();
  OUTLINED_FUNCTION_4_106();
  OUTLINED_FUNCTION_12_62();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    sub_1B14AFB1C((uint64_t)v5, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession);
    OUTLINED_FUNCTION_9_83();
  }
  else
  {
    OUTLINED_FUNCTION_18_50((uint64_t)v5);
    v11 = OUTLINED_FUNCTION_9_83();
    if (qword_1ED184930 != -1)
      v11 = swift_once();
    v12 = (void *)qword_1ED190400;
    OUTLINED_FUNCTION_9_1(v11, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = OUTLINED_FUNCTION_62();
    *(_OWORD *)(v13 + 16) = xmmword_1B16C51D0;
    v14 = v12;
    OUTLINED_FUNCTION_7_87();
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    v15 = sub_1B140493C();
    OUTLINED_FUNCTION_17_45(v15);
    OUTLINED_FUNCTION_10_75();

    OUTLINED_FUNCTION_113();
    v16 = a1[3];
    v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v16);
    OUTLINED_FUNCTION_44_4((uint64_t)v10, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
    OUTLINED_FUNCTION_16_61();
  }
  OUTLINED_FUNCTION_47();
}

void PageSessionManager.endSession(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  char *v57;
  _QWORD *v58;
  uint64_t v59;

  v2 = v1;
  OUTLINED_FUNCTION_8_86((uint64_t)a1, (unint64_t *)&qword_1ED17E0E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)v56 - v6;
  OUTLINED_FUNCTION_8_86(v8, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v9, v10);
  v57 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)v56 - v14;
  v16 = (int *)OUTLINED_FUNCTION_2_137();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (char *)v56 - v23;
  v25 = a1[4];
  v26 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v27 = *(_QWORD *)(v25 + 8);
  v58 = v26;
  v59 = v27;
  v28 = OUTLINED_FUNCTION_22_41();
  v30 = v29;
  v56[1] = v2 + 16;
  OUTLINED_FUNCTION_4_106();
  sub_1B146AD54(v28, v30, *(_QWORD *)(v2 + 16));
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16) == 1)
  {
    sub_1B14AFB1C((uint64_t)v15, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession);
    OUTLINED_FUNCTION_9_83();
  }
  else
  {
    OUTLINED_FUNCTION_18_50((uint64_t)v15);
    OUTLINED_FUNCTION_9_83();
    if (*((double *)v24 + 2) >= PageViewSession.duration.getter())
    {
      if (qword_1ED184930 != -1)
        v31 = swift_once();
      v45 = (void *)qword_1ED190400;
      OUTLINED_FUNCTION_9_1(v31, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v46 = OUTLINED_FUNCTION_62();
      *(_OWORD *)(v46 + 16) = xmmword_1B16C51D0;
      v47 = v45;
      v48 = OUTLINED_FUNCTION_11_66();
      v50 = v49;
      *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v46 + 64) = sub_1B140493C();
      *(_QWORD *)(v46 + 32) = v48;
      *(_QWORD *)(v46 + 40) = v50;
      sub_1B16BA058();
      sub_1B16B8B58();

      swift_bridgeObjectRelease();
      v51 = a1[3];
      v52 = a1[4];
      OUTLINED_FUNCTION_13_62();
      OUTLINED_FUNCTION_44_4((uint64_t)v24, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48));
    }
    else
    {
      if (qword_1ED184930 != -1)
        v31 = swift_once();
      v32 = (void *)qword_1ED190400;
      OUTLINED_FUNCTION_9_1(v31, (unint64_t *)&qword_1ED188F70, (uint64_t (*)(uint64_t))sub_1B148F34C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v33 = OUTLINED_FUNCTION_62();
      *(_OWORD *)(v33 + 16) = xmmword_1B16C51D0;
      v34 = v32;
      v35 = OUTLINED_FUNCTION_11_66();
      v37 = v36;
      *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v33 + 64) = sub_1B140493C();
      *(_QWORD *)(v33 + 32) = v35;
      *(_QWORD *)(v33 + 40) = v37;
      sub_1B16BA058();
      sub_1B16B8B58();

      swift_bridgeObjectRelease();
      sub_1B150E110((uint64_t)&v24[v16[7]], (uint64_t)v7);
      v38 = sub_1B16B7BB0();
      v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
      LODWORD(v34) = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v38);
      sub_1B14AFB1C((uint64_t)v7, (unint64_t *)&qword_1ED17E0E8, v39);
      if ((_DWORD)v34 == 1)
      {
        v41 = *(_QWORD *)v24;
        v40 = *((_QWORD *)v24 + 1);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(&v20[v16[6]], &v24[v16[6]], v38);
        v42 = (uint64_t)&v20[v16[7]];
        sub_1B16B9740();
        sub_1B16B7BA4();
        __swift_storeEnumTagSinglePayload(v42, 0, 1, v38);
        v43 = v16[8];
        v44 = v24[v43];
        *(_QWORD *)v20 = v41;
        *((_QWORD *)v20 + 1) = v40;
        *((_QWORD *)v20 + 2) = 0;
        v20[v43] = v44;
      }
      else
      {
        sub_1B162424C((uint64_t)v24, (uint64_t)v20);
      }
      v53 = a1[3];
      v54 = a1[4];
      OUTLINED_FUNCTION_13_62();
      OUTLINED_FUNCTION_44_4((uint64_t)v20, v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 40));
      sub_1B1624290((uint64_t)v20);
    }
    OUTLINED_FUNCTION_11_66();
    OUTLINED_FUNCTION_9_5();
    v55 = (uint64_t)v57;
    sub_1B148A1E8();
    OUTLINED_FUNCTION_9_83();
    swift_bridgeObjectRelease();
    sub_1B14AFB1C(v55, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession);
    OUTLINED_FUNCTION_16_61();
  }
  OUTLINED_FUNCTION_47();
}

BOOL PageSessionManager.hasSession(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v2 = v1;
  sub_1B13DE5B0(0, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v14 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = OUTLINED_FUNCTION_22_41();
  v10 = v9;
  OUTLINED_FUNCTION_4_106();
  sub_1B146AD54(v8, v10, *(_QWORD *)(v2 + 16));
  swift_endAccess();
  OUTLINED_FUNCTION_113();
  v11 = OUTLINED_FUNCTION_2_137();
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v11) != 1;
  sub_1B14AFB1C((uint64_t)v7, &qword_1ED17DBD8, (uint64_t (*)(uint64_t))type metadata accessor for PageViewSession);
  return v12;
}

uint64_t PageSessionManager.session(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_4_106();
  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v3 + 16))
  {
    sub_1B16B9740();
    v4 = sub_1B14477CC();
    if ((v5 & 1) != 0)
    {
      v6 = v4;
      v7 = *(_QWORD *)(v3 + 56);
      v8 = OUTLINED_FUNCTION_2_137();
      sub_1B162424C(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a1);
      v9 = a1;
      v10 = 0;
      v11 = v8;
    }
    else
    {
      v11 = OUTLINED_FUNCTION_2_137();
      v9 = a1;
      v10 = 1;
    }
    __swift_storeEnumTagSinglePayload(v9, v10, 1, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_2_137();
    OUTLINED_FUNCTION_15_56(v12, v13, v14, v12);
  }
  return swift_endAccess();
}

uint64_t PageSessionManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PageSessionManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1624DA4(_QWORD *a1, unsigned __int8 *a2, double a3)
{
  return PageSessionManager.startSession(for:durationThreshold:trigger:)(a1, a2, a3);
}

void sub_1B1624DC4(_QWORD *a1)
{
  PageSessionManager.resignSession(for:)(a1);
}

void sub_1B1624DE4(_QWORD *a1)
{
  PageSessionManager.resumeSession(for:)(a1);
}

void sub_1B1624E04(_QWORD *a1)
{
  PageSessionManager.endSession(for:)(a1);
}

BOOL sub_1B1624E24(_QWORD *a1)
{
  return PageSessionManager.hasSession(for:)(a1);
}

uint64_t sub_1B1624E48@<X0>(uint64_t a1@<X8>)
{
  return PageSessionManager.session(for:)(a1);
}

uint64_t dispatch thunk of PageSessionManagerType.startSession(for:durationThreshold:trigger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PageSessionManagerType.resignSession(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PageSessionManagerType.resumeSession(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PageSessionManagerType.endSession(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PageSessionManagerType.hasSession(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PageSessionManagerType.session(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t type metadata accessor for PageSessionManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for PageSessionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PageSessionManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

Swift::Bool __swiftcall ForwardingTouchView.point(inside:with:)(CGPoint inside, UIEvent_optional with)
{
  void *v2;
  Class isa;
  double y;
  double x;
  objc_class *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  objc_class *v15;
  objc_super v16;

  isa = with.value.super.isa;
  y = inside.y;
  x = inside.x;
  v6 = (objc_class *)OUTLINED_FUNCTION_4();
  v7 = objc_msgSend(v2, sel_subviews);
  sub_1B15069EC();
  v8 = sub_1B16B9B54();

  if (v8 >> 62)
    goto LABEL_16;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    v15 = v6;
    v10 = 4;
    while (1)
    {
      v11 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B5E1DF60](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
      v12 = v11;
      v6 = (objc_class *)(v10 - 3);
      if (__OFADD__(v10 - 4, 1))
        break;
      v13 = objc_msgSend(v11, sel_pointInside_withEvent_, isa, x, y);

      if (v13)
      {
        OUTLINED_FUNCTION_52();
        return 1;
      }
      ++v10;
      if (v6 == (objc_class *)v9)
      {
        OUTLINED_FUNCTION_52();
        v6 = v15;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_16:
    sub_1B16B9740();
    v9 = sub_1B16BA76C();
    OUTLINED_FUNCTION_52();
  }
  OUTLINED_FUNCTION_52();
LABEL_13:
  v16.receiver = v2;
  v16.super_class = v6;
  return objc_msgSendSuper2(&v16, sel_pointInside_withEvent_, isa, x, y);
}

Swift::Bool __swiftcall ForwardingTouchView._accessibilityUsesFixFor72070946()()
{
  return 1;
}

id ForwardingTouchView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id ForwardingTouchView.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t v5;

  OUTLINED_FUNCTION_57();
  v5 = OUTLINED_FUNCTION_4();
  v1 = OUTLINED_FUNCTION_54();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

id ForwardingTouchView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ForwardingTouchView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_4();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ForwardingTouchView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ForwardingTouchView()
{
  return objc_opt_self();
}

uint64_t KeyCommandProviderType.shouldForceClearState.getter()
{
  return 0;
}

uint64_t dispatch thunk of KeyCommandRegistrationProviderType.register(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of KeyCommandProviderType.invalidator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of KeyCommandProviderType.invalidator.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of KeyCommandProviderType.invalidator.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of KeyCommandProviderType.shouldForceClearState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of KeyCommandProviderType.clearState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void StateCommandContextValue.value(for:context:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (**v39)(char *, char *);
  uint64_t v40;

  v40 = a4;
  v36 = a2;
  v6 = *(_QWORD *)(a3 + 24);
  v7 = sub_1B16BA328();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  OUTLINED_FUNCTION_15_0();
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  v12 = (char *)&v33 - v11;
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v10, v13);
  v34 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 16);
  v16 = sub_1B16BA328();
  v17 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_15_0();
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v33 - v21;
  v23 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v20, v24);
  v26 = (char *)&v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, a1, v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v22, v15);
    v27 = v37;
    v28 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v12, v36, v38);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) != 1)
    {
      v32 = v34;
      v31 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v12, v6);
      (*v39)(v26, v32);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v6);
      OUTLINED_FUNCTION_2_138();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_2_138();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  }
  v29 = (char *)v39 + *(int *)(a3 + 52);
  v30 = sub_1B16BA328();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v40, v29, v30);
LABEL_7:
  OUTLINED_FUNCTION_47();
}

void StateCommandContextValue.init(default:block:)(uint64_t a1@<X0>, void (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a6;
  v23 = a7;
  v19 = a5;
  v20 = a2;
  v10 = sub_1B16BA328();
  v11 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v18 - v14;
  v21 = sub_1B16BA328();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, a4);
  v20(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  v24 = a3;
  v25 = a4;
  v26 = v19;
  v27 = v22;
  type metadata accessor for StateCommandContextValue();
}

void sub_1B16255BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (**v10)(uint64_t, uint64_t);
  uint64_t (*v11)(uint64_t, uint64_t);

  v10 = *(uint64_t (***)(uint64_t, uint64_t))(v9 - 120);
  (*(void (**)(char *, uint64_t, _QWORD))(v4 + 32))((char *)v10 + *(int *)(a1 + 52), v5, *(_QWORD *)(v9 - 136));
  v11 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((_QWORD *)v11 + 2) = v7;
  *((_QWORD *)v11 + 3) = v6;
  *((_QWORD *)v11 + 4) = v8;
  *((_QWORD *)v11 + 5) = v3;
  *((_QWORD *)v11 + 6) = v1;
  *((_QWORD *)v11 + 7) = v2;
  *v10 = sub_1B1625718;
  v10[1] = v11;
  OUTLINED_FUNCTION_47();
}

void type metadata accessor for StateCommandContextValue()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t sub_1B162561C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v10 = sub_1B16BA328();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a6 - 8) + 16))((char *)&v17 - v14, a2, a6, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, a6);
  a3(a1, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
}

uint64_t sub_1B16256F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1625718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B162561C(a1, a2, *(void (**)(uint64_t, char *))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void StateCommandContextValue<>.init(off:on:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1E0C80A78](a1, a2);
  type metadata accessor for StateCommandContextValue();
}

void sub_1B16257AC(uint64_t a1)
{
  uint64_t (**v1)(unsigned __int8 *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(unsigned __int8 *);

  v9 = (uint64_t)v1 + *(int *)(a1 + 52);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v6, v2);
  OUTLINED_FUNCTION_50(v9);
  OUTLINED_FUNCTION_2_92(v5, v6);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = (v7 + v10 + v11) & ~v10;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v3;
  *(_QWORD *)(v13 + 24) = v2;
  OUTLINED_FUNCTION_2_92(v13 + v11, v4);
  OUTLINED_FUNCTION_2_92(v13 + v12, v5);
  v14 = (uint64_t (*)(unsigned __int8 *))OUTLINED_FUNCTION_15_1();
  *((_QWORD *)v14 + 2) = v3;
  *((_QWORD *)v14 + 3) = v2;
  *((_QWORD *)v14 + 4) = sub_1B162591C;
  *((_QWORD *)v14 + 5) = v13;
  *v1 = sub_1B162594C;
  v1[1] = v14;
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B1625860@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  if ((a1 & 1) == 0)
    a2 = a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a5, a2, a4);
  return __swift_storeEnumTagSinglePayload(a5, 0, 1, a4);
}

uint64_t sub_1B16258AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_5_105();
  v5 = (v3 + v2 + v4) & ~v2;
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v0 + v4, v1);
  v7(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_1B162591C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  return sub_1B1625860(a1, v2 + ((v5 + 32) & ~v5), v2 + ((*(_QWORD *)(v4 + 64) + v5 + ((v5 + 32) & ~v5)) & ~v5), v3, a2);
}

uint64_t sub_1B162594C(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

void StateCommandContextValue<>.init(_:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1E0C80A78](a1, a2);
  type metadata accessor for StateCommandContextValue();
}

uint64_t (*sub_1B16259EC(uint64_t a1))(unsigned __int8 *)
{
  uint64_t (**v1)(unsigned __int8 *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t (*result)(unsigned __int8 *);

  v7 = (uint64_t)v1 + *(int *)(a1 + 52);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v5, v2);
  OUTLINED_FUNCTION_50(v7);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v8(v4, v5, v2);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = v2;
  v8(v10 + v9, v4, v2);
  result = (uint64_t (*)(unsigned __int8 *))OUTLINED_FUNCTION_15_1();
  *((_QWORD *)result + 2) = v3;
  *((_QWORD *)result + 3) = v2;
  *((_QWORD *)result + 4) = sub_1B1625B34;
  *((_QWORD *)result + 5) = v10;
  *v1 = sub_1B16264F0;
  v1[1] = result;
  return result;
}

uint64_t sub_1B1625AA0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1, a2);
  return __swift_storeEnumTagSinglePayload(a3, 0, 1, a2);
}

uint64_t sub_1B1625AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_105();
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v1);
  return swift_deallocObject();
}

uint64_t sub_1B1625B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1B1625AA0(v1 + ((v3 + 32) & ~v3), v2, a1);
}

uint64_t sub_1B1625B50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1625B74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B16BA328();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1B1625BF0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  uint64_t v13;
  void *v14;
  const void *v15;

  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  v10 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 16) & ~v7) + v8 > 0x18)
  {
    *a1 = v10;
    a1 = (_QWORD *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = a2[1];
    *a1 = v10;
    a1[1] = v13;
    v14 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
    v15 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v4))
    {
      memcpy(v14, v15, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v14, v15, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1B1625CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = __swift_getEnumTagSinglePayload(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_1B1625D70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
  v9 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(v8, v9, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v5);
  }
  return a1;
}

_QWORD *sub_1B1625E28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  size_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)a1 + v9 + 16) & ~v9);
  v11 = (const void *)(((unint64_t)a2 + v9 + 16) & ~v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v7);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
  return a1;
}

_OWORD *sub_1B1625F38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 16) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 16) & ~v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

_OWORD *sub_1B1625FEC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int EnumTagSinglePayload;
  int v12;
  size_t v13;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(v9, v10, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v13);
  return a1;
}

uint64_t sub_1B16260F4(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_27;
  v12 = v9 + ((v10 + 16) & ~v10);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(_WORD *)((char *)a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_27:
      if ((v7 & 0x80000000) != 0)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)a1 + v10 + 16) & ~v10, v6, v4);
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      else
      {
        v18 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((_BYTE *)a1 + v12))
    goto LABEL_27;
LABEL_20:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_1B1626260(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1B16264A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1B16264A8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1B16264C8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1B16264D0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1B16264E0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

char *EmptyStateView.__allocating_init(model:styler:)(uint64_t *a1, _QWORD *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return EmptyStateView.init(model:styler:)(a1, a2);
}

uint64_t EmptyStateView.emptyPosition.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI14EmptyStateView_emptyPosition);
  result = OUTLINED_FUNCTION_1_4();
  *a1 = *v3;
  return result;
}

uint64_t EmptyStateView.emptyPosition.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI14EmptyStateView_emptyPosition);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*EmptyStateView.emptyPosition.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *EmptyStateView.init(model:styler:)(uint64_t *a1, _QWORD *a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  char *v11;
  double v12;
  SEL v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  double v26;
  objc_super *v27;
  SEL v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  char *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  OUTLINED_FUNCTION_4();
  v5 = a1[1];
  v41 = *a1;
  v7 = a1[2];
  v6 = a1[3];
  v8 = (void *)a1[4];
  v2[OBJC_IVAR____TtC5TeaUI14EmptyStateView_emptyPosition] = 2;
  v9 = OBJC_IVAR____TtC5TeaUI14EmptyStateView_label;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v11 = v2;
  v12 = OUTLINED_FUNCTION_8_1();
  *(_QWORD *)&v2[v9] = objc_msgSend(v10, v13, v12);
  v14 = OBJC_IVAR____TtC5TeaUI14EmptyStateView_scrollView;
  *(_QWORD *)&v11[v14] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_);
  v15 = OBJC_IVAR____TtC5TeaUI14EmptyStateView_keyboardObserver;
  type metadata accessor for KeyboardObserver();
  OUTLINED_FUNCTION_25();
  *(_QWORD *)&v11[v15] = KeyboardObserver.init()();
  v16 = &v11[OBJC_IVAR____TtC5TeaUI14EmptyStateView_model];
  *(_QWORD *)v16 = v41;
  *((_QWORD *)v16 + 1) = v5;
  *((_QWORD *)v16 + 2) = v7;
  *((_QWORD *)v16 + 3) = v6;
  *((_QWORD *)v16 + 4) = v8;
  sub_1B13B4DC0((uint64_t)a2, (uint64_t)&v11[OBJC_IVAR____TtC5TeaUI14EmptyStateView_styler]);
  v17 = a2[3];
  v18 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v17);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 16);
  v20 = v8;
  sub_1B16B9740();
  sub_1B16B9740();
  v21 = v19(v17, v18);
  if (v21)
  {
    v22 = (void *)v21;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v21);

  }
  else
  {
    v23 = 0;
  }
  *(_QWORD *)&v11[OBJC_IVAR____TtC5TeaUI14EmptyStateView_visualEffectView] = v23;
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v20, sel_imageWithRenderingMode_, 2);
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v24);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = 0;
  }
  *(_QWORD *)&v11[OBJC_IVAR____TtC5TeaUI14EmptyStateView_imageView] = v25;

  v26 = OUTLINED_FUNCTION_8_1();
  v29 = objc_msgSendSuper2(v27, v28, v26);
  v30 = a2[3];
  v31 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v30);
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
  v33 = (char *)v29;
  v34 = (void *)v32(v30, v31);
  OUTLINED_FUNCTION_13_0((uint64_t)v34, sel_setBackgroundColor_);

  if (*(_QWORD *)&v33[OBJC_IVAR____TtC5TeaUI14EmptyStateView_visualEffectView])
    v35 = objc_msgSend(v33, sel_addSubview_);
  v36 = *(void **)&v33[OBJC_IVAR____TtC5TeaUI14EmptyStateView_scrollView];
  OUTLINED_FUNCTION_13_0((uint64_t)v35, sel_addSubview_);
  v37 = *(void **)&v33[OBJC_IVAR____TtC5TeaUI14EmptyStateView_label];
  objc_msgSend(v37, sel_setNumberOfLines_, 0);
  objc_msgSend(v37, sel_setTextAlignment_, 1);
  objc_msgSend(v37, sel_setAutoresizingMask_, 2);
  objc_msgSend(v36, sel_addSubview_, v37);
  if (*(_QWORD *)&v33[OBJC_IVAR____TtC5TeaUI14EmptyStateView_imageView])
    objc_msgSend(v36, sel_addSubview_);
  v38 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_13_20();
  swift_retain();
  swift_retain();
  KeyboardObserver.onWillShow(animationBlock:)((uint64_t)sub_1B16274B4, v38);
  swift_release();
  swift_release_n();
  v39 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_13_20();
  swift_retain();
  KeyboardObserver.onWillHide(animationBlock:)((uint64_t)sub_1B16274BC, v39);
  swift_release();
  swift_release();
  swift_release_n();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v33;
}

void sub_1B16269E8(double a1)
{
  char *Strong;
  id v3;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v3 = *(id *)&Strong[OBJC_IVAR____TtC5TeaUI14EmptyStateView_scrollView];

  objc_msgSend(v3, sel_setContentInset_, 0.0, 0.0, a1, 0.0);
}

void sub_1B1626A5C()
{
  char *Strong;
  id v1;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v1 = *(id *)&Strong[OBJC_IVAR____TtC5TeaUI14EmptyStateView_scrollView];

  objc_msgSend(v1, sel_setContentInset_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));
}

id EmptyStateView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void EmptyStateView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v0[OBJC_IVAR____TtC5TeaUI14EmptyStateView_emptyPosition] = 2;
  v2 = OBJC_IVAR____TtC5TeaUI14EmptyStateView_label;
  *(_QWORD *)&v1[v2] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_);
  v3 = OBJC_IVAR____TtC5TeaUI14EmptyStateView_scrollView;
  *(_QWORD *)&v1[v3] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_);
  v4 = OBJC_IVAR____TtC5TeaUI14EmptyStateView_keyboardObserver;
  type metadata accessor for KeyboardObserver();
  OUTLINED_FUNCTION_25();
  *(_QWORD *)&v1[v4] = KeyboardObserver.init()();

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall EmptyStateView.layoutSubviews()()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  char *v18;
  uint64_t v19;
  id v20;
  double Width;
  double v22;
  char *v23;
  uint64_t v24;
  id v25;
  objc_super v26;
  CGRect v27;

  v1 = v0;
  v26.receiver = v0;
  v26.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v26, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI14EmptyStateView_scrollView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);
  v3 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI14EmptyStateView_visualEffectView];
  if (v3)
  {
    v4 = v3;
    OUTLINED_FUNCTION_0_181();
    objc_msgSend(v4, sel_setFrame_);

  }
  v5 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_label];
  v6 = &v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_styler];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_styler + 24];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_styler + 32];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_styler], v7);
  v9 = (void *)(*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32))(*(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_model], *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_model + 8], *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_model + 16], *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_model + 24], v7, v8);
  objc_msgSend(v5, sel_setAttributedText_, v9);

  objc_msgSend(v5, sel_sizeToFit);
  sub_1B14BF304();
  objc_msgSend(v5, sel_setPreferredMaxLayoutWidth_);
  LODWORD(v10) = 0.25;
  objc_msgSend(v5, sel_ts_setHyphenationFactor_, v10);
  v11 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_imageView];
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v12, sel_sizeToFit);
    v13 = *((_QWORD *)v6 + 3);
    v14 = *((_QWORD *)v6 + 4);
    __swift_project_boxed_opaque_existential_1(v6, v13);
    (*(void (**)(id, uint64_t, uint64_t))(v14 + 40))(v12, v13, v14);
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_0_181();
    v16 = v15;
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_4_107(v16 - v17);
    v18 = &v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_emptyPosition];
    OUTLINED_FUNCTION_1_4();
    v19 = *v18;
    v20 = objc_msgSend(v1, sel_traitCollection);
    __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_11_67();
  OUTLINED_FUNCTION_5_0();
  objc_msgSend(v5, sel_intrinsicContentSize);
  OUTLINED_FUNCTION_0_181();
  Width = CGRectGetWidth(v27);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_4_107(Width - v22);
  v23 = &v1[OBJC_IVAR____TtC5TeaUI14EmptyStateView_emptyPosition];
  OUTLINED_FUNCTION_1_4();
  v24 = *v23;
  v25 = objc_msgSend(v1, sel_traitCollection);
  __asm { BR              X9 }
}

id EmptyStateView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void EmptyStateView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmptyStateView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t EmptyStateView.isAccessibilityElement.getter()
{
  return 1;
}

uint64_t (*EmptyStateView.isAccessibilityElement.modify(_BYTE *a1))(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  *a1 = 1;
  return nullsub_1;
}

uint64_t EmptyStateView.accessibilityLabel.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI14EmptyStateView_label), sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B16B9860();

  return v3;
}

uint64_t EmptyStateView.accessibilityLabel.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*EmptyStateView.accessibilityLabel.modify(uint64_t *a1))()
{
  uint64_t v2;

  *a1 = EmptyStateView.accessibilityLabel.getter();
  a1[1] = v2;
  return destroy for TabBarSplitViewPresentation.BarItem;
}

uint64_t EmptyStateView.accessibilityElements.getter()
{
  return 0;
}

uint64_t (*EmptyStateView.accessibilityElements.modify(_QWORD *a1))()
{
  *a1 = 0;
  return destroy for OnboardingConfiguration;
}

uint64_t sub_1B1627490()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1B16274B4(double a1)
{
  sub_1B16269E8(a1);
}

void sub_1B16274BC()
{
  sub_1B1626A5C();
}

uint64_t type metadata accessor for EmptyStateView()
{
  return objc_opt_self();
}

uint64_t method lookup function for EmptyStateView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmptyStateView.__allocating_init(model:styler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void MotionView.motionTransform.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1EEF360B8);
  OUTLINED_FUNCTION_30();
  *a1 = *v3;
  swift_retain();
  OUTLINED_FUNCTION_48();
}

void MotionView.motionTransform.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(v1 + qword_1EEF360B8);
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  swift_release();
  OUTLINED_FUNCTION_90();
}

void MotionView.motionTransform.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void MotionView.motionDisabledTransform.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = v1 + qword_1EEF360C0;
  OUTLINED_FUNCTION_30();
  v4 = *(_QWORD *)v3;
  *(_QWORD *)a1 = *(_QWORD *)v3;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(a1 + 8) = v5;
  sub_1B13E938C(v4, v5);
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B162760C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a1 + qword_1EEF360C0;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  *(_QWORD *)a2 = *(_QWORD *)v3;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(a2 + 8) = v5;
  return sub_1B13E938C(v4, v5);
}

void sub_1B1627668(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)a1;
  v3 = v1;
  sub_1B13E938C(v2, v1);
  MotionView.motionDisabledTransform.setter(&v2);
}

void MotionView.motionDisabledTransform.setter(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = &v1[qword_1EEF360C0];
  OUTLINED_FUNCTION_13();
  v5 = *(_QWORD *)v4;
  *(_QWORD *)v4 = v2;
  v6 = v4[8];
  v4[8] = v3;
  sub_1B13E9374(v5, v6);
  objc_msgSend(v1, sel_setNeedsLayout);
  OUTLINED_FUNCTION_90();
}

void MotionView.motionDisabledTransform.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1627750(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) != 0)
    OUTLINED_FUNCTION_0_0();
  else
    objc_msgSend(*(id *)(a1 + 24), sel_setNeedsLayout);
}

void MotionView.isMotionEnabled.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_48();
}

void MotionView.isMotionEnabled.setter(char a1)
{
  sub_1B1627894(a1, &qword_1EEF360C8);
}

void MotionView.isMotionEnabled.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B162780C(uint64_t a1, char a2)
{
  return sub_1B1627A08(a1, a2, &qword_1EEF360C8);
}

void MotionView.isMotionAllowed.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_48();
}

void sub_1B162784C(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;

  v4 = (_BYTE *)(*a1 + *a2);
  OUTLINED_FUNCTION_30();
  *a3 = *v4;
  OUTLINED_FUNCTION_48();
}

void MotionView.isMotionAllowed.setter(char a1)
{
  sub_1B1627894(a1, &qword_1EEF360D0);
}

void sub_1B1627894(char a1, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v5;

  v5 = (_BYTE *)(v2 + *a2);
  OUTLINED_FUNCTION_13();
  *v5 = a1;
  sub_1B16278DC(a2);
  OUTLINED_FUNCTION_90();
}

uint64_t sub_1B16278DC(_QWORD *a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  id v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_4();
  v3 = (_BYTE *)(v1 + *a1);
  result = OUTLINED_FUNCTION_30();
  if ((*v3 & 1) == 0)
  {
    v5 = objc_msgSend(*(id *)(v1 + qword_1EEF360D8), sel_layer);
    OUTLINED_FUNCTION_2_0((uint64_t)v5, sel_bounds);
    OUTLINED_FUNCTION_13_2();
    v6 = (uint64_t *)(v1 + qword_1EEF360C0);
    OUTLINED_FUNCTION_30();
    v7 = *v6;
    LOBYTE(v6) = *((_BYTE *)v6 + 8);
    v9 = v7;
    v10 = (char)v6;
    v8 = OUTLINED_FUNCTION_12_64();
    OUTLINED_FUNCTION_2_139(v8, (uint64_t)&v9);

    return OUTLINED_FUNCTION_13_63();
  }
  return result;
}

void MotionView.isMotionAllowed.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B16279FC(uint64_t a1, char a2)
{
  return sub_1B1627A08(a1, a2, &qword_1EEF360D0);
}

uint64_t sub_1B1627A08(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1B16278DC(a3);
  return result;
}

id MotionView.backingView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1EEF360D8);
}

id MotionView.__allocating_init(backingView:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MotionView.init(backingView:)(a1);
}

id MotionView.init(backingView:)(void *a1)
{
  _BYTE *v1;
  objc_class *v3;
  char *v4;
  id v5;
  id v6;
  objc_super v8;

  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  *(_QWORD *)&v1[qword_1EEF360B8] = 0x8000000000000000;
  v4 = &v1[qword_1EEF360C0];
  *(_QWORD *)v4 = 0;
  v4[8] = 2;
  v1[qword_1EEF360C8] = 1;
  v1[qword_1EEF360D0] = 1;
  *(_QWORD *)&v1[qword_1EEF360D8] = a1;
  v8.receiver = v1;
  v8.super_class = v3;
  v5 = a1;
  v6 = objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_addSubview_, v5, v8.receiver, v8.super_class);

  return v6;
}

void sub_1B1627B54()
{
  _BYTE *v0;
  char *v1;

  *(_QWORD *)&v0[qword_1EEF360B8] = 0x8000000000000000;
  v1 = &v0[qword_1EEF360C0];
  *(_QWORD *)v1 = 0;
  v1[8] = 2;
  v0[qword_1EEF360C8] = 1;
  v0[qword_1EEF360D0] = 1;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B1627BF4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1B1627B54();
}

Swift::Void __swiftcall MotionView.layoutSubviews()()
{
  char *v0;
  id v1;
  void *v2;
  char *v3;
  char *v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)OUTLINED_FUNCTION_4();
  v1 = objc_msgSendSuper2(&v11, sel_layoutSubviews);
  v2 = *(void **)&v0[qword_1EEF360D8];
  OUTLINED_FUNCTION_2_0((uint64_t)v1, sel_bounds);
  objc_msgSend(v2, sel_ts_setFrameUsingCenterAndBounds_);
  v3 = &v0[qword_1EEF360C8];
  OUTLINED_FUNCTION_30();
  if (*v3 != 1 || (v4 = &v0[qword_1EEF360D0], OUTLINED_FUNCTION_30(), (*v4 & 1) == 0))
  {
    v5 = objc_msgSend(v2, sel_layer);
    OUTLINED_FUNCTION_2_0((uint64_t)v5, sel_bounds);
    OUTLINED_FUNCTION_13_2();
    v6 = &v0[qword_1EEF360C0];
    OUTLINED_FUNCTION_30();
    v7 = *(_QWORD *)v6;
    LOBYTE(v6) = v6[8];
    v9 = v7;
    v10 = (char)v6;
    v8 = OUTLINED_FUNCTION_12_64();
    OUTLINED_FUNCTION_2_139(v8, (uint64_t)&v9);

    OUTLINED_FUNCTION_13_63();
  }
}

void sub_1B1627D40(void *a1)
{
  id v1;

  v1 = a1;
  MotionView.layoutSubviews()();

}

id MotionView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void MotionView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B1627DF0()
{
  MotionView.init(frame:)();
}

id MotionView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B1627E2C(uint64_t a1)
{
  swift_release();
  sub_1B13E9374(*(_QWORD *)(a1 + qword_1EEF360C0), *(_BYTE *)(a1 + qword_1EEF360C0 + 8));

}

uint64_t (*sub_1B1627E88(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  MotionView.motionTransform.modify();
  v2[4] = v3;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B1627ED4(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  MotionView.motionDisabledTransform.modify((uint64_t)v2);
  v2[4] = v3;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B1627F20(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  MotionView.isMotionEnabled.modify((uint64_t)v2);
  v2[4] = v3;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B1627F6C(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  MotionView.isMotionAllowed.modify((uint64_t)v2);
  v2[4] = v3;
  return sub_1B13C6B28;
}

uint64_t MotionView.transform(motionData:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;
  _BYTE *v3;
  id v4;

  OUTLINED_FUNCTION_4();
  v1 = (_BYTE *)(v0 + qword_1EEF360C8);
  result = OUTLINED_FUNCTION_30();
  if (*v1 == 1)
  {
    v3 = (_BYTE *)(v0 + qword_1EEF360D0);
    result = OUTLINED_FUNCTION_30();
    if (*v3 == 1)
    {
      v4 = objc_msgSend(*(id *)(v0 + qword_1EEF360D8), sel_layer);
      OUTLINED_FUNCTION_2_0((uint64_t)v4, sel_bounds);
      OUTLINED_FUNCTION_13_2();
      OUTLINED_FUNCTION_30();
      swift_retain();
      MotionTransformable.transform(motionData:layer:bounds:motionTransform:)();

      return swift_release();
    }
  }
  return result;
}

_QWORD *sub_1B16280EC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1B16280F8(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B162784C(a1, &qword_1EEF360C8, a2);
}

void sub_1B1628114(char *a1)
{
  MotionView.isMotionEnabled.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1628138(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B162784C(a1, &qword_1EEF360D0, a2);
}

void sub_1B1628154(char *a1)
{
  MotionView.isMotionAllowed.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B1628178()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MotionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MotionView);
}

uint64_t method lookup function for MotionView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MotionView.__allocating_init(backingView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B1628200(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _BYTE v18[40];
  _QWORD v19[5];
  uint64_t v20;

  sub_1B13C5AF4(a1, v19);
  v3 = v19[0];
  v20 = v19[1];
  v4 = v19[3];
  v5 = v19[4];
  v6 = (unint64_t)(v19[2] + 64) >> 6;
  result = sub_1B16B9740();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v9 = v8 | (v4 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    sub_1B13B4DC0(*(_QWORD *)(v3 + 56) + 40 * v9, (uint64_t)v18);
    v17[0] = v15;
    v17[1] = v16;
    sub_1B16B9740();
    a2(v15, v16, v18);
    result = sub_1B1406858((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1B16291E8);
    if (v5)
      goto LABEL_2;
LABEL_3:
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v10 >= v6)
      return swift_release();
    v11 = *(_QWORD *)(v20 + 8 * v10);
    v12 = v4 + 1;
    if (!v11)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v6)
        return swift_release();
      v11 = *(_QWORD *)(v20 + 8 * v12);
      if (!v11)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v6)
          return swift_release();
        v11 = *(_QWORD *)(v20 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v6)
            return swift_release();
          v11 = *(_QWORD *)(v20 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v6)
              return swift_release();
            v11 = *(_QWORD *)(v20 + 8 * v12);
            if (!v11)
            {
              v13 = v4 + 6;
              while (v13 < v6)
              {
                v11 = *(_QWORD *)(v20 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v4 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B16283B4(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[6];
  int64_t v26;

  sub_1B13C5AF4(a1, v25);
  v1 = v25[0];
  v17 = v25[1];
  v2 = v25[3];
  v3 = v25[4];
  v26 = (unint64_t)(v25[2] + 64) >> 6;
  result = sub_1B16B9740();
  if (!v3)
    goto LABEL_3;
LABEL_2:
  v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  v6 = v5 | (v2 << 6);
  while (1)
  {
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v13 = *v11;
    v12 = v11[1];
    sub_1B13B4DC0(*(_QWORD *)(v1 + 56) + 40 * v6, (uint64_t)&v22);
    *(_QWORD *)&v21 = v13;
    *((_QWORD *)&v21 + 1) = v12;
    v18 = v21;
    v19[0] = v22;
    v19[1] = v23;
    v14 = v24;
    v20 = v24;
    v15 = *((_QWORD *)&v23 + 1);
    __swift_project_boxed_opaque_existential_1(v19, *((uint64_t *)&v23 + 1));
    v16 = *(void (**)(uint64_t, uint64_t))(v14 + 16);
    sub_1B16B9740();
    v16(v15, v14);
    result = sub_1B1406858((uint64_t)&v18, (uint64_t (*)(_QWORD))sub_1B16291E8);
    if (v3)
      goto LABEL_2;
LABEL_3:
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    if (v7 >= v26)
      return swift_release();
    v8 = *(_QWORD *)(v17 + 8 * v7);
    v9 = v2 + 1;
    if (!v8)
    {
      v9 = v2 + 2;
      if (v2 + 2 >= v26)
        return swift_release();
      v8 = *(_QWORD *)(v17 + 8 * v9);
      if (!v8)
      {
        v9 = v2 + 3;
        if (v2 + 3 >= v26)
          return swift_release();
        v8 = *(_QWORD *)(v17 + 8 * v9);
        if (!v8)
        {
          v9 = v2 + 4;
          if (v2 + 4 >= v26)
            return swift_release();
          v8 = *(_QWORD *)(v17 + 8 * v9);
          if (!v8)
          {
            v9 = v2 + 5;
            if (v2 + 5 >= v26)
              return swift_release();
            v8 = *(_QWORD *)(v17 + 8 * v9);
            if (!v8)
            {
              v10 = v2 + 6;
              while (v10 < v26)
              {
                v8 = *(_QWORD *)(v17 + 8 * v10++);
                if (v8)
                {
                  v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v3 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
    v2 = v9;
  }
  __break(1u);
  return result;
}

uint64_t ModernPageBlueprintPrewarmer.__allocating_init(blueprintProvider:prewarmerProvider:prewarmRange:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  ModernPageBlueprintPrewarmer.init(blueprintProvider:prewarmerProvider:prewarmRange:options:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t *ModernPageBlueprintPrewarmer.init(blueprintProvider:prewarmerProvider:prewarmRange:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v10 = *v5;
  v11 = *a5;
  v12 = *(_QWORD *)(*v5 + 144);
  sub_1B14B795C();
  *(uint64_t *)((char *)v5 + v12) = sub_1B16B9728();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 80) - 8) + 32))((uint64_t)v5 + *(_QWORD *)(*v5 + 112), a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 88) - 8) + 32))((uint64_t)v5 + *(_QWORD *)(*v5 + 120), a2);
  v13 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 128));
  *v13 = a3;
  v13[1] = a4;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 136)) = v11;
  return v5;
}

uint64_t ModernPageBlueprintPrewarmer.prewarmPages(neighboring:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;

  v50 = a1;
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for PageBlueprint(255, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v47 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PageBlueprint<A>, v7);
  v8 = sub_1B16BAA18();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v9, v10);
  v43 = (char *)&v42 - v11;
  v12 = sub_1B16BA328();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v42 - v15;
  v46 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v17, v18);
  v48 = (char *)&v42 - v19;
  v49 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v42 - v22;
  result = sub_1B1628B20();
  if ((result & 1) == 0)
    return result;
  v42 = v1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
  sub_1B16B82DC();
  swift_release();
  sub_1B16B81B0();
  PageBlueprint.page(for:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, AssociatedTypeWitness) == 1)
  {
    OUTLINED_FUNCTION_0_182();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  v25 = v46;
  v26 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v16, AssociatedTypeWitness);
  sub_1B16B9F80();
  if ((v52 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v23, v7);
  }
  v27 = v42;
  v54 = *(_OWORD *)(v42 + *(_QWORD *)(*(_QWORD *)v42 + 128));
  v53 = v51;
  sub_1B1611FFC();
  sub_1B16B9818();
  v29 = v51;
  v28 = v52;
  result = sub_1B16B9F14();
  v30 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v30 < 0)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (v30 >= v29)
    v31 = v29;
  else
    v31 = result - 1;
  if (v29 < 0)
    v31 = 0;
  if (v30 >= v28)
    v30 = v28 & ~(v28 >> 63);
  v51 = v31;
  v52 = v30;
  sub_1B1419B20();
  v32 = v43;
  sub_1B16B9F68();
  v33 = (uint64_t *)(v27 + *(_QWORD *)(*(_QWORD *)v27 + 144));
  v34 = swift_beginAccess();
  v35 = *v33;
  MEMORY[0x1E0C80A78](v34, v36);
  *(&v42 - 2) = (uint64_t)v32;
  *(&v42 - 1) = v27;
  v37 = sub_1B16B9740();
  v38 = sub_1B1628200(v37, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1B1628D14);
  v40 = MEMORY[0x1E0C80A78](v38, v39);
  *(&v42 - 2) = v35;
  *(&v42 - 1) = v27;
  v41 = v45;
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEDE38], v45, v40);
  sub_1B16B9AA0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v48, AssociatedTypeWitness);
  OUTLINED_FUNCTION_0_182();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v32, v41);
}

uint64_t sub_1B1628B20()
{
  uint64_t v0;
  id v2;
  unsigned int v3;

  if ((*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136)) & 1) == 0)
    return 1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_isLowPowerModeEnabled);

  return v3 ^ 1;
}

uint64_t sub_1B1628B8C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for PageBlueprint(255, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PageBlueprint<A>, v7);
  v8 = sub_1B16BAA18();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEDE38], v8);
  result = sub_1B16B9AAC();
  if ((result & 1) == 0)
  {
    v10 = a3[3];
    v11 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    swift_beginAccess();
    sub_1B16B9740();
    sub_1B146DD28();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1B1628D14(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_1B1628B8C(a1, a2, a3);
}

uint64_t sub_1B1628D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = sub_1B16B81B0();
  if (v5 == a2 && v6 == a3)
    v8 = 1;
  else
    v8 = sub_1B16BA910(v5, v6, a2);
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B1628DFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v5 = *a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = sub_1B16B81B0();
  sub_1B146AD50(v14, v6, v7, a2);
  swift_bridgeObjectRelease();
  v8 = v15;
  result = sub_1B1406858((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B14B79EC);
  if (!v8)
  {
    (*(void (**)(__int128 *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)(v5 + 104) + 24))(&v12, a1, *(_QWORD *)(v5 + 88));
    if (v13)
    {
      sub_1B13C06D0(&v12, (uint64_t)v14);
      sub_1B16B81B0();
      sub_1B13B4DC0((uint64_t)v14, (uint64_t)&v12);
      swift_beginAccess();
      sub_1B146DD28();
      swift_endAccess();
      v10 = v15;
      v11 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
    else
    {
      return sub_1B1406858((uint64_t)&v12, (uint64_t (*)(_QWORD))sub_1B14B79EC);
    }
  }
  return result;
}

uint64_t sub_1B1628FC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1628DFC(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t *ModernPageBlueprintPrewarmer.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *v0;
  v2 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 144));
  swift_beginAccess();
  v3 = sub_1B16B9740();
  sub_1B16283B4(v3);
  swift_bridgeObjectRelease();
  sub_1B14B795C();
  *v2 = sub_1B16B9728();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 112), *(_QWORD *)(v1 + 80));
  OUTLINED_FUNCTION_92((uint64_t)v0 + *(_QWORD *)(*v0 + 120), *(_QWORD *)(v1 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModernPageBlueprintPrewarmer.__deallocating_deinit()
{
  ModernPageBlueprintPrewarmer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B16290D4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B16290F4(uint64_t a1)
{
  return ModernPageBlueprintPrewarmer.prewarmPages(neighboring:)(a1);
}

uint64_t sub_1B1629114()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void type metadata accessor for ModernPageBlueprintPrewarmer()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t method lookup function for ModernPageBlueprintPrewarmer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModernPageBlueprintPrewarmer.__allocating_init(blueprintProvider:prewarmerProvider:prewarmRange:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_1B16291E8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF36200)
  {
    sub_1B14B795C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF36200);
  }
}

uint64_t sub_1B1629250(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1628D1C(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56)) & 1;
}

id sub_1B1629274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  id v23;
  uint64_t v25;

  v6 = sub_1B16B7D60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(a1 + 16) != 1)
  {
    v14 = (void (*)(uint64_t, uint64_t))sub_1B16B7D48();
    v15 = sub_1B16B7D48();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a3, v6);
    if (v14 == (void (*)(uint64_t, uint64_t))v15)
    {
      v16 = sub_1B16B7D3C();
      if (v16 < v12)
      {
        OUTLINED_FUNCTION_10_1();
LABEL_14:
        v23 = objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_1_163()), sel_initWithDropOperation_intent_, 3, 1);
LABEL_16:
        v20 = v23;
        v14(a3, v6);
        v14(a2, v6);
        return v20;
      }
      v22 = v16;
      OUTLINED_FUNCTION_10_1();
      if (v11 < v22)
        goto LABEL_14;
    }
    else
    {
      OUTLINED_FUNCTION_10_1();
    }
    v23 = objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_1_163()), sel_initWithDropOperation_, 0);
    goto LABEL_16;
  }
  if (v12 | v11)
  {
    if (v12 ^ 1 | v11)
    {
      v18 = sub_1B16B7D48();
      v19 = sub_1B16B7D48();
      v13 = objc_allocWithZone((Class)OUTLINED_FUNCTION_1_163());
      if (v18 != v19)
      {
        v17 = objc_msgSend(v13, sel_initWithDropOperation_, 0);
        goto LABEL_12;
      }
    }
    else
    {
      v13 = objc_allocWithZone((Class)OUTLINED_FUNCTION_1_163());
    }
    v17 = objc_msgSend(v13, sel_initWithDropOperation_intent_, 3, 1);
  }
  else
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_1_163()), sel_initWithDropOperation_intent_, 3, 0);
  }
LABEL_12:
  v20 = v17;
  v21 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v21(a3, v6);
  v21(a2, v6);
  return v20;
}

BOOL static DropProposal.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  if (*((_BYTE *)a1 + 16) == 1)
  {
    if (v3 | v2)
    {
      if (v3 ^ 1 | v2)
        return *((_BYTE *)a2 + 16) && __PAIR128__(v4, v5) >= 2;
      if (!*((_BYTE *)a2 + 16))
        return 0;
      v5 ^= 1uLL;
    }
    else if (!*((_BYTE *)a2 + 16))
    {
      return 0;
    }
    return !(v5 | v4);
  }
  if ((a2[2] & 1) != 0)
    return 0;
  return v3 == v5 && v2 == v4;
}

uint64_t sub_1B16294F4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

ValueMetadata *type metadata accessor for DropProposal()
{
  return &type metadata for DropProposal;
}

uint64_t dispatch thunk of Droppable.dropProposal()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t static PillViewSystemImage.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  BOOL v8;
  char v9;
  uint64_t result;
  id v11;
  id v12;
  char v13;

  v4 = *a1;
  v5 = a1[1];
  v6 = (void *)a1[2];
  v7 = (void *)a2[2];
  v8 = v4 == *a2 && v5 == a2[1];
  if (v8 || (v9 = sub_1B16BA910(v4, v5, *a2), result = 0, (v9 & 1) != 0))
  {
    if (v6)
    {
      if (v7)
      {
        sub_1B13A2864();
        v11 = v7;
        v12 = v6;
        v13 = sub_1B16BA214();

        if ((v13 & 1) != 0)
          return 1;
      }
    }
    else if (!v7)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t PillViewSystemImage.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B16B9740();
  return v1;
}

void *PillViewSystemImage.color.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t PillViewSystemImage.init(name:color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void destroy for PillViewSystemImage(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s5TeaUI19PillViewSystemImageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  sub_1B16B9740();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for PillViewSystemImage(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for PillViewSystemImage(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for PillViewSystemImage()
{
  return &type metadata for PillViewSystemImage;
}

id PillViewColorPalette.iconColor.getter()
{
  id *v0;

  return *v0;
}

id PillViewColorPalette.titleColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id PillViewColorPalette.backgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id PillViewColorPalette.selectedColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

TeaUI::PillViewColorPalette __swiftcall PillViewColorPalette.init(iconColor:titleColor:backgroundColor:selectedColor:)(UIColor iconColor, UIColor titleColor, UIColor backgroundColor, UIColor selectedColor)
{
  UIColor *v4;
  TeaUI::PillViewColorPalette result;

  v4->super.isa = iconColor.super.isa;
  v4[1].super.isa = titleColor.super.isa;
  v4[2].super.isa = backgroundColor.super.isa;
  v4[3].super.isa = selectedColor.super.isa;
  result.selectedColor = selectedColor;
  result.backgroundColor = backgroundColor;
  result.titleColor = titleColor;
  result.iconColor = iconColor;
  return result;
}

id sub_1B1629780()
{
  id v0;
  id v1;
  id v2;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v1 = OUTLINED_FUNCTION_32_0((uint64_t)v0, sel_labelColor);
  v2 = OUTLINED_FUNCTION_32_0((uint64_t)v1, sel_secondarySystemBackgroundColor);
  result = OUTLINED_FUNCTION_32_0((uint64_t)v2, sel_systemPinkColor);
  qword_1EEF36208 = (uint64_t)v0;
  unk_1EEF36210 = v1;
  qword_1EEF36218 = (uint64_t)v2;
  unk_1EEF36220 = result;
  return result;
}

id static PillViewColorPalette.default.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  if (qword_1EEF2F940 != -1)
    swift_once();
  v2 = (void *)qword_1EEF36208;
  v3 = (void *)unk_1EEF36210;
  v5 = (void *)qword_1EEF36218;
  v4 = unk_1EEF36220;
  v10 = (id)unk_1EEF36220;
  *a1 = qword_1EEF36208;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  v6 = v2;
  v7 = v3;
  v8 = v5;
  return v10;
}

uint64_t dispatch thunk of PillViewColorPaletteProviding.iconColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PillViewColorPaletteProviding.titleColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PillViewColorPaletteProviding.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PillViewColorPaletteProviding.selectedColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void destroy for PillViewColorPalette(id *a1)
{

}

_QWORD *initializeWithCopy for PillViewColorPalette(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t assignWithCopy for PillViewColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t assignWithTake for PillViewColorPalette(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for PillViewColorPalette()
{
  return &type metadata for PillViewColorPalette;
}

uint64_t PageViewControllerDelegateType.pageBlueprint(_:didShow:newViewController:previousViewController:scrollDirection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 24))(a1, a2, a3, a4, a6, a7);
}

uint64_t sub_1B1629A3C@<X0>(uint64_t a1@<X8>)
{
  return PageViewControllerDelegateType.pageBlueprint(_:mapPage:from:)(a1);
}

uint64_t PageViewControllerDelegateType.pageBlueprint(_:mapPage:from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, AssociatedTypeWitness);
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:didShow:newViewController:previousViewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:didShow:newViewController:previousViewController:scrollDirection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:primaryVisiblePageDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:page:changedVisibilityFactor:scrollDirection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:willShow:fromScroll:newViewController:previousViewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:didHide:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:mapPage:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of PageViewControllerDelegateType.pageBlueprint(_:didUpdateFrom:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_1B1629AD8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1B1629B30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  int v14;
  int v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 84);
  if (v8)
    v9 = *(_QWORD *)(v6 + 64);
  else
    v9 = v7 + 1;
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
    return a1;
  }
  if (!v8)
  {
    if (!*((_BYTE *)a2 + v7))
      goto LABEL_26;
    v14 = (*((unsigned __int8 *)a2 + v7) - 1) << (8 * v7);
    if (v7 > 3)
      v14 = 0;
    if ((_DWORD)v7)
    {
      if (v7 <= 3)
        v15 = *(_QWORD *)(v6 + 64);
      else
        v15 = 4;
      __asm { BR              X11 }
    }
    if (v14 == -1)
      goto LABEL_26;
LABEL_25:
    memcpy(a1, a2, v9);
    return a1;
  }
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    goto LABEL_25;
LABEL_26:
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (!v8)
    *((_BYTE *)a1 + v7) = 0;
  return a1;
}

uint64_t sub_1B1629C84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v5)
  {
    result = __swift_getEnumTagSinglePayload(a1, v5, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 64);
    if (!*(_BYTE *)(a1 + v7))
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v8 = (*(unsigned __int8 *)(a1 + v7) - 1) << (8 * v7);
    if (v7 > 3)
      v8 = 0;
    if ((_DWORD)v7)
    {
      if (v7 > 3)
        LODWORD(v7) = 4;
      __asm { BR              X11 }
    }
    result = (v8 + 1);
    if (v8 == -1)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

_BYTE *sub_1B1629D64(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      if (!v7)
        a1[v8] = 0;
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
      goto LABEL_17;
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_1B1629E78(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  int EnumTagSinglePayload;
  int v10;
  char v11;
  int v12;
  int v13;
  int v14;
  int v15;
  size_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if ((_DWORD)v7)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
    v10 = __swift_getEnumTagSinglePayload((uint64_t)a2, v7, v5);
    if (EnumTagSinglePayload)
    {
      if (!v10)
        goto LABEL_33;
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  v11 = 8 * v8;
  if (!a1[v8])
    goto LABEL_16;
  v12 = (a1[v8] - 1) << v11;
  if (v8 > 3)
    v12 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v13 = *(_QWORD *)(v6 + 64);
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  if (v12 == -1)
  {
LABEL_16:
    if (!a2[v8])
      goto LABEL_31;
    v14 = (a2[v8] - 1) << v11;
    if (v8 > 3)
      v14 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v15 = *(_QWORD *)(v6 + 64);
      else
        v15 = 4;
      __asm { BR              X11 }
    }
    v10 = v14 + 1;
LABEL_25:
    if (v10)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(a1, a2, v5);
    return a1;
  }
  if (!a2[v8] || (a2[v8] - 1) << v11 == -1)
  {
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
    if (!(_DWORD)v7)
      a1[v8] = 0;
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v16 = v8;
  else
    v16 = v8 + 1;
  memcpy(a1, a2, v16);
  return a1;
}

_BYTE *sub_1B162A0CC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      if (!v7)
        a1[v8] = 0;
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
      goto LABEL_17;
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_1B162A1E0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  int EnumTagSinglePayload;
  int v10;
  char v11;
  int v12;
  int v13;
  int v14;
  int v15;
  size_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if ((_DWORD)v7)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
    v10 = __swift_getEnumTagSinglePayload((uint64_t)a2, v7, v5);
    if (EnumTagSinglePayload)
    {
      if (!v10)
        goto LABEL_33;
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  v11 = 8 * v8;
  if (!a1[v8])
    goto LABEL_16;
  v12 = (a1[v8] - 1) << v11;
  if (v8 > 3)
    v12 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v13 = *(_QWORD *)(v6 + 64);
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  if (v12 == -1)
  {
LABEL_16:
    if (!a2[v8])
      goto LABEL_31;
    v14 = (a2[v8] - 1) << v11;
    if (v8 > 3)
      v14 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v15 = *(_QWORD *)(v6 + 64);
      else
        v15 = 4;
      __asm { BR              X11 }
    }
    v10 = v14 + 1;
LABEL_25:
    if (v10)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 40))(a1, a2, v5);
    return a1;
  }
  if (!a2[v8] || (a2[v8] - 1) << v11 == -1)
  {
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
    if (!(_DWORD)v7)
      a1[v8] = 0;
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v16 = v8;
  else
    v16 = v8 + 1;
  memcpy(a1, a2, v16);
  return a1;
}

uint64_t sub_1B162A434(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_1B162A560(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_1B162A760()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1B162A768()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1B162A788()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1B162A790()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1B162A7A0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1B162A7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int *)(v3 + 84);
  if ((_DWORD)v4)
    return __swift_getEnumTagSinglePayload(a1, v4, v2);
  v6 = *(_QWORD *)(v3 + 64);
  if (!*(_BYTE *)(a1 + v6))
    return 0;
  v7 = (*(unsigned __int8 *)(a1 + v6) - 1) << (8 * v6);
  if (v6 > 3)
    v7 = 0;
  if (!(_DWORD)v6)
    return (v7 + 1);
  if (v6 > 3)
    LODWORD(v6) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B162A80C + 4 * byte_1B16DC15A[(v6 - 1)]))();
}

void sub_1B162A844(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
    {
      if (!(_DWORD)a2)
        return;
    }
    else
    {
      a1[v7] = 0;
      if (!(_DWORD)a2)
        return;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v6, v4);
    return;
  }
  v8 = ~(_DWORD)v6 + a2;
  if (v7 >= 4)
  {
    bzero(a1, v7);
    *(_DWORD *)a1 = v8;
    LOBYTE(v9) = 1;
    if ((_DWORD)v6)
      return;
    goto LABEL_17;
  }
  v9 = (v8 >> (8 * v7)) + 1;
  if (!(_DWORD)v7)
  {
LABEL_16:
    if ((_DWORD)v6)
      return;
    goto LABEL_17;
  }
  v10 = v8 & ~(-1 << (8 * v7));
  bzero(a1, v7);
  if ((_DWORD)v7 == 3)
  {
    *(_WORD *)a1 = v10;
    a1[2] = BYTE2(v10);
    goto LABEL_16;
  }
  if ((_DWORD)v7 == 2)
  {
    *(_WORD *)a1 = v10;
    if ((_DWORD)v6)
      return;
    goto LABEL_17;
  }
  *a1 = v10;
  if (!(_DWORD)v6)
LABEL_17:
    a1[v7] = v9;
}

uint64_t type metadata accessor for PageViewControllerShowTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageViewControllerShowTrigger);
}

void MultiCollectionViewDelegate.removeDelegate<A>(_:)(uint64_t a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_removeObject_, a1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_79(MEMORY[0x1E0DEE9E0]);
  OUTLINED_FUNCTION_55_3();
}

id MultiCollectionViewDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MultiCollectionViewDelegate.replaceDelegate<A>(_:withDelegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates);
  objc_msgSend(v4, sel_removeObject_, a1);
  objc_msgSend(v4, sel_addObject_, a2);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_79(MEMORY[0x1E0DEE9E0]);
  OUTLINED_FUNCTION_89_0();
}

id sub_1B162AA68(int a1, unsigned int a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id result;
  void *v17;
  void *v18;
  uint64_t v19;
  unsigned int v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v10 = sub_1B16B7A3C();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v13 = MEMORY[0x1E0C80A78](v10, v12).n128_u64[0];
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v13);
  if (result)
  {
    v17 = result;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    if (v24)
    {
      v20 = a2;
      do
      {
        sub_1B143D3E0(&v23, &v21);
        __swift_project_boxed_opaque_existential_1(&v21, v22);
        v18 = (void *)sub_1B16BA8F8();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
        if ((objc_msgSend(v18, sel_respondsToSelector_, sel_collectionView_shouldUpdateFocusInContext_) & 1) != 0)
        {
          a2 = objc_msgSend(v18, sel_collectionView_shouldUpdateFocusInContext_, a4, a5);
          swift_unknownObjectRelease();
          if (((a2 ^ a1) & 1) == 0)
            goto LABEL_10;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        sub_1B16B7A30();
      }
      while (v24);
      LOBYTE(a2) = v20;
    }
LABEL_10:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);

    return (id)(a2 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B162ABF8(int a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id result;
  void *v15;
  void *v16;
  unsigned int v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v8 = sub_1B16B7A3C();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v8, v10).n128_u64[0];
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v11);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v15 = result;
  sub_1B16BA1F0();

  sub_1B16B7A30();
  if (!v21)
    goto LABEL_8;
  while (1)
  {
    sub_1B143D3E0(&v20, &v18);
    __swift_project_boxed_opaque_existential_1(&v18, v19);
    v16 = (void *)sub_1B16BA8F8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    if ((objc_msgSend(v16, sel_respondsToSelector_, sel_scrollViewShouldScrollToTop_) & 1) == 0)
    {
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
    v17 = objc_msgSend(v16, sel_scrollViewShouldScrollToTop_, a4);
    swift_unknownObjectRelease();
    if (((v17 ^ a1) & 1) == 0)
      break;
LABEL_7:
    sub_1B16B7A30();
    if (!v21)
      goto LABEL_8;
  }
  a2 = v17;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);

  return (id)(a2 & 1);
}

id sub_1B162AD7C(int a1, char a2, void (*a3)(_BYTE *__return_ptr, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _BYTE v19[33];

  v7 = sub_1B16B7A3C();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v7, v9).n128_u64[0];
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v10);
  if (result)
  {
    v14 = result;
    sub_1B16BA1F0();

    while (1)
    {
      sub_1B16B7A30();
      if (!*(_QWORD *)&v19[25])
        break;
      sub_1B143D3E0(&v19[1], &v17);
      __swift_project_boxed_opaque_existential_1(&v17, v18);
      v15 = sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      a3(v19, v15);
      swift_unknownObjectRelease();
      if (v19[0] != 2 && ((v19[0] ^ a1) & 1) == 0)
      {
        a2 = v19[0];
        break;
      }
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    return (id)(a2 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id MultiCollectionViewDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B162AF30(uint64_t a1, void *a2, void *a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  __int128 v18;
  uint64_t v19;

  OUTLINED_FUNCTION_17_47();
  OUTLINED_FUNCTION_8_55();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_149();
  v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects));
  if (v12)
  {
    v13 = v12;
    sub_1B16BA1F0();

    OUTLINED_FUNCTION_33_31();
    while (v19)
    {
      sub_1B143D3E0(&v18, &v16);
      v14 = v17;
      OUTLINED_FUNCTION_3_126(&v16);
      v15 = OUTLINED_FUNCTION_36_25();
      if ((OUTLINED_FUNCTION_2_0(v15, sel_respondsToSelector_) & 1) != 0)
        objc_msgSend(v14, *a5, a2, a3, a4);
      OUTLINED_FUNCTION_63_0();
      OUTLINED_FUNCTION_33_31();
    }
    OUTLINED_FUNCTION_19_57();

    OUTLINED_FUNCTION_90_0();
    OUTLINED_FUNCTION_47();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B162B034(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v8 = sub_1B16B7A3C();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v8, v10).n128_u64[0];
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v11));
  if (v14)
  {
    v15 = v14;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    while (v20)
    {
      sub_1B143D3E0(&v19, &v17);
      __swift_project_boxed_opaque_existential_1(&v17, v18);
      v16 = (void *)sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      if ((objc_msgSend(v16, sel_respondsToSelector_, sel_collectionView_didUpdateFocusInContext_withAnimationCoordinator_) & 1) != 0)objc_msgSend(v16, sel_collectionView_didUpdateFocusInContext_withAnimationCoordinator_, a2, a3, a4);
      swift_unknownObjectRelease();
      sub_1B16B7A30();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_1B162B1A4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v8 = sub_1B16B7A3C();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v8, v10).n128_u64[0];
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v11));
  if (v14)
  {
    v15 = v14;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    while (v20)
    {
      sub_1B143D3E0(&v19, &v17);
      __swift_project_boxed_opaque_existential_1(&v17, v18);
      v16 = (void *)sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      if ((objc_msgSend(v16, sel_respondsToSelector_, sel_collectionView_willPerformPreviewActionForMenuWithConfiguration_animator_) & 1) != 0)objc_msgSend(v16, sel_collectionView_willPerformPreviewActionForMenuWithConfiguration_animator_, a2, a3, a4);
      swift_unknownObjectRelease();
      sub_1B16B7A30();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B162B318(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v6 = sub_1B16B7A3C();
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v6, v8).n128_u64[0];
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v9));
  if (v12)
  {
    v13 = v12;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    while (v18)
    {
      sub_1B143D3E0(&v17, &v15);
      __swift_project_boxed_opaque_existential_1(&v15, v16);
      v14 = (void *)sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
      if ((objc_msgSend(v14, sel_respondsToSelector_, sel_scrollViewWillBeginZooming_withView_) & 1) != 0)
        objc_msgSend(v14, sel_scrollViewWillBeginZooming_withView_, a2, a3);
      swift_unknownObjectRelease();
      sub_1B16B7A30();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);

  }
  else
  {
    __break(1u);
  }
}

void sub_1B162B474(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v6 = sub_1B16B7A3C();
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v6, v8).n128_u64[0];
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v9));
  if (v12)
  {
    v13 = v12;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    if (v19)
    {
      v14 = a3 & 1;
      do
      {
        sub_1B143D3E0(&v18, &v16);
        __swift_project_boxed_opaque_existential_1(&v16, v17);
        v15 = (void *)sub_1B16BA8F8();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
        if ((objc_msgSend(v15, sel_respondsToSelector_, sel_scrollViewDidEndDragging_willDecelerate_) & 1) != 0)
          objc_msgSend(v15, sel_scrollViewDidEndDragging_willDecelerate_, a2, v14);
        swift_unknownObjectRelease();
        sub_1B16B7A30();
      }
      while (v19);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);

  }
  else
  {
    __break(1u);
  }
}

void sub_1B162B5D0(uint64_t a1, void *a2, void *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v8 = sub_1B16B7A3C();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v8, v10).n128_u64[0];
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v11));
  if (v14)
  {
    v15 = v14;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    while (v20)
    {
      sub_1B143D3E0(&v19, &v17);
      __swift_project_boxed_opaque_existential_1(&v17, v18);
      v16 = (void *)sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      if ((objc_msgSend(v16, sel_respondsToSelector_, sel_scrollViewDidEndZooming_withView_atScale_) & 1) != 0)
        objc_msgSend(v16, sel_scrollViewDidEndZooming_withView_atScale_, a2, a3, a4);
      swift_unknownObjectRelease();
      sub_1B16B7A30();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_1B162B73C(uint64_t a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v10 = sub_1B16B7A3C();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v13 = MEMORY[0x1E0C80A78](v10, v12).n128_u64[0];
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v13));
  if (v16)
  {
    v17 = v16;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    while (v22)
    {
      sub_1B143D3E0(&v21, &v19);
      __swift_project_boxed_opaque_existential_1(&v19, v20);
      v18 = (void *)sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
      if ((objc_msgSend(v18, sel_respondsToSelector_, sel_scrollViewWillEndDragging_withVelocity_targetContentOffset_) & 1) != 0)objc_msgSend(v18, sel_scrollViewWillEndDragging_withVelocity_targetContentOffset_, a2, a3, a4, a5);
      swift_unknownObjectRelease();
      sub_1B16B7A30();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);

  }
  else
  {
    __break(1u);
  }
}

void sub_1B162B8AC(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v10 = sub_1B16B7A3C();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v13 = MEMORY[0x1E0C80A78](v10, v12).n128_u64[0];
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v13));
  if (v16)
  {
    v17 = v16;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    if (v22)
    {
      while (1)
      {
        sub_1B143D3E0(&v21, &v19);
        __swift_project_boxed_opaque_existential_1(&v19, v20);
        v18 = (void *)sub_1B16BA8F8();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
        if ((objc_msgSend(v18, sel_respondsToSelector_, sel_collectionView_targetContentOffsetForProposedContentOffset_) & 1) != 0)break;
        swift_unknownObjectRelease();
        sub_1B16B7A30();
        if (!v22)
          goto LABEL_7;
      }
      objc_msgSend(v18, sel_collectionView_targetContentOffsetForProposedContentOffset_, a2, a5, a6);
      swift_unknownObjectRelease();
    }
LABEL_7:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);

  }
  else
  {
    __break(1u);
  }
}

id sub_1B162BA40@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  sub_1B14107A8();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B16B7A3C();
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v14 = MEMORY[0x1E0C80A78](v11, v13).n128_u64[0];
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v14);
  if (result)
  {
    v18 = result;
    sub_1B16BA1F0();

    while (1)
    {
      sub_1B16B7A30();
      if (!v25)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
        v21 = sub_1B16B7D60();
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a3, a1, v21);
      }
      sub_1B143D3E0(&v24, &v22);
      __swift_project_boxed_opaque_existential_1(&v22, v23);
      v19 = sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
      a2(v19);
      swift_unknownObjectRelease();
      v20 = sub_1B16B7D60();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v20) != 1)
        break;
      sub_1B13EFECC((uint64_t)v10);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a3, v10, v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B162BC18(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id result;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v20 = a1;
  v9 = sub_1B16B7A3C();
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v12 = MEMORY[0x1E0C80A78](v9, v11).n128_u64[0];
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v12);
  if (result)
  {
    v16 = result;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    while (v24)
    {
      sub_1B143D3E0(&v23, &v21);
      __swift_project_boxed_opaque_existential_1(&v21, v22);
      v17 = (void *)sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
      if ((objc_msgSend(v17, sel_respondsToSelector_, sel_collectionView_transitionLayoutForOldLayout_newLayout_) & 1) != 0)
      {
        v18 = objc_msgSend(v17, sel_collectionView_transitionLayoutForOldLayout_newLayout_, a3, a4, a5);
        swift_unknownObjectRelease();
        if (v18)
        {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
          goto LABEL_9;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
      sub_1B16B7A30();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    v18 = v20;
LABEL_9:

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B162BDCC(uint64_t a1, void *a2, void *a3, SEL *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  void *v16;
  __int128 v17;
  uint64_t v18;

  OUTLINED_FUNCTION_17_47();
  OUTLINED_FUNCTION_8_55();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_0_1();
  result = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates], sel_allObjects);
  if (result)
  {
    OUTLINED_FUNCTION_16_62();

    OUTLINED_FUNCTION_18_51();
    while (v18)
    {
      sub_1B143D3E0(&v17, &v15);
      v12 = v16;
      OUTLINED_FUNCTION_3_126(&v15);
      v13 = OUTLINED_FUNCTION_36_25();
      if ((OUTLINED_FUNCTION_2_0(v13, sel_respondsToSelector_) & 1) != 0)
      {
        v14 = objc_msgSend(v12, *a4, a2, a3);
        OUTLINED_FUNCTION_63_0();
        if (v14)
          goto LABEL_9;
      }
      else
      {
        OUTLINED_FUNCTION_63_0();
      }
      OUTLINED_FUNCTION_18_51();
    }
    v14 = 0;
LABEL_9:
    OUTLINED_FUNCTION_21_2(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B162BEFC(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v3 = sub_1B16B7A3C();
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v3, v5).n128_u64[0];
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v6);
  if (result)
  {
    v10 = result;
    sub_1B16BA1F0();

    while (1)
    {
      sub_1B16B7A30();
      if (!v17)
        break;
      sub_1B143D3E0(&v16, &v13);
      __swift_project_boxed_opaque_existential_1(&v13, v14);
      v11 = sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
      a1(&v15, v11);
      swift_unknownObjectRelease();
      if (v15)
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
        return (id)v15;
      }
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B162C03C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v33 = a3;
  sub_1B14107A8();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v32 - v11;
  v13 = sub_1B16B7A3C();
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)&v16 = MEMORY[0x1E0C80A78](v13, v15).n128_u64[0];
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v16));
  if (v19)
  {
    v20 = v19;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    if (v37)
    {
      while (1)
      {
        sub_1B143D3E0(&v36, &v34);
        __swift_project_boxed_opaque_existential_1(&v34, v35);
        v21 = (void *)sub_1B16BA8F8();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
        if ((objc_msgSend(v21, sel_respondsToSelector_, sel_indexPathForPreferredFocusedViewInCollectionView_) & 1) != 0)
        {
          v22 = objc_msgSend((id)swift_unknownObjectRetain(), sel_indexPathForPreferredFocusedViewInCollectionView_, a2);
          if (v22)
          {
            v23 = v22;
            sub_1B16B7D0C();

            v24 = 0;
          }
          else
          {
            v24 = 1;
          }
          v26 = sub_1B16B7D60();
          __swift_storeEnumTagSinglePayload((uint64_t)v8, v24, 1, v26);
          sub_1B162DEB4((uint64_t)v8, (uint64_t)v12);
          swift_unknownObjectRelease();
        }
        else
        {
          v25 = sub_1B16B7D60();
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v25);
        }
        swift_unknownObjectRelease();
        v27 = sub_1B16B7D60();
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v27) != 1)
          break;
        sub_1B13EFECC((uint64_t)v12);
        sub_1B16B7A30();
        if (!v37)
          goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
      v31 = v33;
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v33, v12, v27);
      v29 = v31;
      v30 = 0;
      v28 = v27;
    }
    else
    {
LABEL_11:
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
      v28 = sub_1B16B7D60();
      v29 = v33;
      v30 = 1;
    }
    __swift_storeEnumTagSinglePayload(v29, v30, 1, v28);

  }
  else
  {
    __break(1u);
  }
}

id sub_1B162C2EC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  void *v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = sub_1B16B7A3C();
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v4, v6).n128_u64[0];
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates), sel_allObjects, v7);
  if (result)
  {
    v11 = result;
    sub_1B16BA1F0();

    sub_1B16B7A30();
    while (v17)
    {
      sub_1B143D3E0(&v16, &v14);
      __swift_project_boxed_opaque_existential_1(&v14, v15);
      v12 = (void *)sub_1B16BA8F8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
      if ((objc_msgSend(v12, sel_respondsToSelector_, sel_viewForZoomingInScrollView_) & 1) != 0)
      {
        v13 = objc_msgSend(v12, sel_viewForZoomingInScrollView_, a2);
        swift_unknownObjectRelease();
        if (v13)
          goto LABEL_9;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      sub_1B16B7A30();
    }
    v13 = 0;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void MultiCollectionViewDelegate.collectionView(_:shouldHighlightItemAt:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_1_164(a1, a2, (void (*)(_BYTE *__return_ptr, uint64_t))sub_1B162DCF4);
  OUTLINED_FUNCTION_62_0();
}

Swift::Void __swiftcall MultiCollectionViewDelegate.collectionViewDidEndMultipleSelectionInteraction(_:)(UICollectionView *a1)
{
  UICollectionView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_collectionViewDidEndMultipleSelectionInteraction_);
}

void MultiCollectionViewDelegate.collectionView(_:didSelectItemAt:)()
{
  OUTLINED_FUNCTION_13_64((void (*)(uint64_t))sub_1B162DD14);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:didDeselectItemAt:)()
{
  OUTLINED_FUNCTION_13_64((void (*)(uint64_t))sub_1B162DD34);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:didHighlightItemAt:)()
{
  OUTLINED_FUNCTION_13_64((void (*)(uint64_t))sub_1B162DD54);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:didUnhighlightItemAt:)()
{
  OUTLINED_FUNCTION_13_64((void (*)(uint64_t))sub_1B162DD74);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:didBeginMultipleSelectionInteractionAt:)()
{
  OUTLINED_FUNCTION_13_64((void (*)(uint64_t))sub_1B162DD94);
  OUTLINED_FUNCTION_62_0();
}

void sub_1B162C5F0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;

  if ((objc_msgSend(a1, sel_respondsToSelector_, *a4) & 1) != 0)
  {
    OUTLINED_FUNCTION_158_0();
    v7 = (id)sub_1B16B7CDC();
    objc_msgSend(a1, *a4, a2, v7);
    OUTLINED_FUNCTION_34_0();

  }
  else
  {
    OUTLINED_FUNCTION_55_3();
  }
}

void sub_1B162C680()
{
  void (*v0)(id, uint64_t);
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_12_6();
  v6 = v1;
  v7 = v2;
  v0(v6, v3);

  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_27();
}

void MultiCollectionViewDelegate.collectionView(_:canEditItemAt:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_7_88(a1, a2, (void (*)(_BYTE *__return_ptr, uint64_t))sub_1B162DDB4);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:canFocusItemAt:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_7_88(a1, a2, (void (*)(_BYTE *__return_ptr, uint64_t))sub_1B162DDD4);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:shouldSelectItemAt:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_1_164(a1, a2, (void (*)(_BYTE *__return_ptr, uint64_t))sub_1B162DDF4);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:shouldDeselectItemAt:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_1_164(a1, a2, (void (*)(_BYTE *__return_ptr, uint64_t))sub_1B162DE14);
  OUTLINED_FUNCTION_62_0();
}

void MultiCollectionViewDelegate.collectionView(_:shouldBeginMultipleSelectionInteractionAt:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_7_88(a1, a2, (void (*)(_BYTE *__return_ptr, uint64_t))sub_1B162DE34);
  OUTLINED_FUNCTION_62_0();
}

void sub_1B162C7E0(void *a1@<X0>, uint64_t a2@<X1>, SEL *a3@<X3>, unsigned __int8 *a4@<X8>)
{
  void *v8;
  unsigned __int8 v9;

  if ((objc_msgSend(a1, sel_respondsToSelector_, *a3) & 1) != 0)
  {
    swift_unknownObjectRetain();
    v8 = (void *)sub_1B16B7CDC();
    v9 = objc_msgSend(a1, *a3, a2, v8);
    OUTLINED_FUNCTION_90_0();

  }
  else
  {
    v9 = 2;
  }
  *a4 = v9;
  OUTLINED_FUNCTION_67();
}

uint64_t sub_1B162C86C()
{
  uint64_t (*v0)(id, uint64_t);
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  char v8;

  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_12_6();
  v6 = v1;
  v7 = v2;
  v8 = v0(v6, v3);

  OUTLINED_FUNCTION_34_3();
  return v8 & 1;
}

Swift::Bool __swiftcall MultiCollectionViewDelegate.collectionView(_:shouldUpdateFocusIn:)(UICollectionView *_, UICollectionViewFocusUpdateContext shouldUpdateFocusIn)
{
  uint64_t v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_39_25(_);
  v4 = OUTLINED_FUNCTION_131_0();
  return sub_1B162AA68(0, 1u, v2, v3, v4);
}

CGPoint __swiftcall MultiCollectionViewDelegate.collectionView(_:targetContentOffsetForProposedContentOffset:)(UICollectionView *_, CGPoint targetContentOffsetForProposedContentOffset)
{
  uint64_t v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  CGPoint result;

  v5 = OUTLINED_FUNCTION_28_36(_);
  sub_1B162B8AC(v2, v5, v4, v3, v4, v3);
  result.y = v7;
  result.x = v6;
  return result;
}

void MultiCollectionViewDelegate.collectionView(_:willDisplayContextMenu:animator:)(void *a1, void *a2, uint64_t a3)
{
  sub_1B162CA4C(a1, a2, a3, (SEL *)&selRef_collectionView_willDisplayContextMenuWithConfiguration_animator_);
}

void MultiCollectionViewDelegate.collectionView(_:willEndContextMenuInteraction:animator:)(void *a1, void *a2, uint64_t a3)
{
  sub_1B162CA4C(a1, a2, a3, (SEL *)&selRef_collectionView_willEndContextMenuInteractionWithConfiguration_animator_);
}

void sub_1B162CA4C(void *a1, void *a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;

  swift_unknownObjectRetain();
  sub_1B162AF30(v4, a1, a2, a3, a4);
  OUTLINED_FUNCTION_67();
}

void sub_1B162CAB0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, uint64_t))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain();
  v12 = a1;
  a6(v10, v11, a5);

  OUTLINED_FUNCTION_90_0();
  OUTLINED_FUNCTION_26_2(v12);
}

UITargetedPreview_optional __swiftcall MultiCollectionViewDelegate.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(UICollectionView *_, UIContextMenuConfiguration previewForDismissingContextMenuWithConfiguration)
{
  id v2;
  uint64_t v3;
  objc_class *v4;
  Swift::Bool v5;
  UITargetedPreview_optional result;

  OUTLINED_FUNCTION_39_25(_);
  v2 = OUTLINED_FUNCTION_131_0();
  OUTLINED_FUNCTION_29_35((uint64_t)v2, v3, v2, (SEL *)&selRef_collectionView_previewForDismissingContextMenuWithConfiguration_);
  OUTLINED_FUNCTION_31();
  result.value.super.isa = v4;
  result.is_nil = v5;
  return result;
}

UITargetedPreview_optional __swiftcall MultiCollectionViewDelegate.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(UICollectionView *_, UIContextMenuConfiguration previewForHighlightingContextMenuWithConfiguration)
{
  id v2;
  uint64_t v3;
  objc_class *v4;
  Swift::Bool v5;
  UITargetedPreview_optional result;

  OUTLINED_FUNCTION_39_25(_);
  v2 = OUTLINED_FUNCTION_131_0();
  OUTLINED_FUNCTION_29_35((uint64_t)v2, v3, v2, (SEL *)&selRef_collectionView_previewForHighlightingContextMenuWithConfiguration_);
  OUTLINED_FUNCTION_31();
  result.value.super.isa = v4;
  result.is_nil = v5;
  return result;
}

Swift::Void __swiftcall MultiCollectionViewDelegate.collectionView(_:didUpdateFocusIn:with:)(UICollectionView *_, UICollectionViewFocusUpdateContext didUpdateFocusIn, UIFocusAnimationCoordinator with)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  OUTLINED_FUNCTION_38_29(_);
  OUTLINED_FUNCTION_32_34();
  v6 = OUTLINED_FUNCTION_131_0();
  sub_1B162B034(v3, v5, v4, v6);
}

void MultiCollectionViewDelegate.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_38_29(a1);
  v4 = OUTLINED_FUNCTION_32_34();
  OUTLINED_FUNCTION_158_0();
  sub_1B162B1A4(v2, v3, v4, v1);
}

id MultiCollectionViewDelegate.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  return sub_1B162BEFC((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B162DE54);
}

void sub_1B162CE00(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  void *v10;
  id v11;

  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_collectionView_contextMenuConfigurationForItemAtIndexPath_point_) & 1) != 0)
  {
    swift_unknownObjectRetain();
    v10 = (void *)sub_1B16B7CDC();
    v11 = objc_msgSend(a1, sel_collectionView_contextMenuConfigurationForItemAtIndexPath_point_, a2, v10, a4, a5);
    swift_unknownObjectRelease();

  }
  else
  {
    v11 = 0;
  }
  *a3 = v11;
}

unint64_t MultiCollectionViewDelegate.collectionView(_:shouldSpringLoadItemAt:with:)(uint64_t a1, uint64_t a2)
{
  return (unint64_t)OUTLINED_FUNCTION_1_164(a1, a2, (void (*)(_BYTE *__return_ptr, uint64_t))sub_1B162DE60) & 1;
}

void sub_1B162CFB0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unsigned __int8 *a4@<X8>)
{
  void *v8;
  unsigned __int8 v9;

  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_collectionView_shouldSpringLoadItemAtIndexPath_withContext_) & 1) != 0)
  {
    swift_unknownObjectRetain();
    v8 = (void *)sub_1B16B7CDC();
    v9 = objc_msgSend(a1, sel_collectionView_shouldSpringLoadItemAtIndexPath_withContext_, a2, v8, a3);
    swift_unknownObjectRelease();

  }
  else
  {
    v9 = 2;
  }
  *a4 = v9;
}

void MultiCollectionViewDelegate.collectionView(_:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:)(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  sub_1B162BA40(a1, (void (*)(uint64_t))sub_1B162DE6C, a2);
  OUTLINED_FUNCTION_55_3();
}

uint64_t sub_1B162D158@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_collectionView_targetIndexPathForMoveOfItemFromOriginalIndexPath_atCurrentIndexPath_toProposedIndexPath_) & 1) != 0)
  {
    swift_unknownObjectRetain();
    v6 = (void *)sub_1B16B7CDC();
    v7 = (void *)sub_1B16B7CDC();
    v8 = (void *)sub_1B16B7CDC();
    v9 = objc_msgSend(a1, sel_collectionView_targetIndexPathForMoveOfItemFromOriginalIndexPath_atCurrentIndexPath_toProposedIndexPath_, a2, v6, v7, v8);

    sub_1B16B7D0C();
    swift_unknownObjectRelease();

    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  v11 = sub_1B16B7D60();
  return __swift_storeEnumTagSinglePayload(a3, v10, 1, v11);
}

UICollectionViewTransitionLayout __swiftcall MultiCollectionViewDelegate.collectionView(_:transitionLayoutForOldLayout:newLayout:)(UICollectionView *_, UICollectionViewLayout transitionLayoutForOldLayout, UICollectionViewLayout newLayout)
{
  uint64_t v3;
  uint64_t v4;
  objc_class *v8;
  objc_class *v9;
  id v10;
  id v11;

  v4 = v3;
  sub_1B162DE78();
  v8 = transitionLayoutForOldLayout.super.isa;
  v9 = newLayout.super.isa;
  v10 = sub_1B162D46C(v8, v9);
  v11 = sub_1B162BC18(v10, v4, _, v8, v9);

  return (UICollectionViewTransitionLayout)v11;
}

id sub_1B162D46C(void *a1, void *a2)
{
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCurrentLayout_nextLayout_, a1, a2);

  return v4;
}

void MultiCollectionViewDelegate.indexPathForPreferredFocusedView(in:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1B162C03C(v2, a1, a2);
}

void __swiftcall MultiCollectionViewDelegate.viewForZooming(in:)(UIView_optional *__return_ptr retstr, UIScrollView *in)
{
  uint64_t v2;

  sub_1B162C2EC(v2, in);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewDidZoom(_:)(UIScrollView *a1)
{
  UIScrollView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_scrollViewDidZoom_);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewWillBeginDragging(_:)(UIScrollView *a1)
{
  UIScrollView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_scrollViewWillBeginDragging_);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewDidEndDecelerating(_:)(UIScrollView *a1)
{
  UIScrollView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_scrollViewDidEndDecelerating_);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewWillBeginDecelerating(_:)(UIScrollView *a1)
{
  UIScrollView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_scrollViewWillBeginDecelerating_);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewDidScrollToTop(_:)(UIScrollView *a1)
{
  UIScrollView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_scrollViewDidScrollToTop_);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewDidEndScrollingAnimation(_:)(UIScrollView *a1)
{
  UIScrollView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_scrollViewDidEndScrollingAnimation_);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewDidChangeAdjustedContentInset(_:)(UIScrollView *a1)
{
  UIScrollView *v1;

  v1 = a1;
  OUTLINED_FUNCTION_2_140((uint64_t)v1, v1, (SEL *)&selRef_scrollViewDidChangeAdjustedContentInset_);
}

Swift::Bool __swiftcall MultiCollectionViewDelegate.scrollViewShouldScrollToTop(_:)(UIScrollView *a1)
{
  uint64_t v1;

  return sub_1B162ABF8(0, 1, v1, a1);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewWillBeginZooming(_:with:)(UIScrollView *_, UIView_optional *with)
{
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_131_0();
  sub_1B162B318(v2, v3, with);
}

Swift::Void __swiftcall MultiCollectionViewDelegate.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView *_, Swift::Bool willDecelerate)
{
  uint64_t v2;

  sub_1B162B474(v2, _, willDecelerate);
}

void MultiCollectionViewDelegate.scrollViewDidEndZooming(_:with:atScale:)(double a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  void *v4;

  OUTLINED_FUNCTION_131_0();
  sub_1B162B5D0(v3, v4, a3, a1);
}

void MultiCollectionViewDelegate.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  id v6;

  v6 = OUTLINED_FUNCTION_28_36(a1);
  sub_1B162B73C(v2, v6, a2, v4, v3);
}

void sub_1B162DCF4(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;

  sub_1B162C7E0(a1, *(_QWORD *)(v2 + 16), (SEL *)&selRef_collectionView_shouldHighlightItemAtIndexPath_, a2);
}

void sub_1B162DD14(void *a1)
{
  uint64_t v1;

  sub_1B162C5F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (SEL *)&selRef_collectionView_didSelectItemAtIndexPath_);
}

void sub_1B162DD34(void *a1)
{
  uint64_t v1;

  sub_1B162C5F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (SEL *)&selRef_collectionView_didDeselectItemAtIndexPath_);
}

void sub_1B162DD54(void *a1)
{
  uint64_t v1;

  sub_1B162C5F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (SEL *)&selRef_collectionView_didHighlightItemAtIndexPath_);
}

void sub_1B162DD74(void *a1)
{
  uint64_t v1;

  sub_1B162C5F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (SEL *)&selRef_collectionView_didUnhighlightItemAtIndexPath_);
}

void sub_1B162DD94(void *a1)
{
  uint64_t v1;

  sub_1B162C5F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (SEL *)&selRef_collectionView_didBeginMultipleSelectionInteractionAtIndexPath_);
}

void sub_1B162DDB4(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;

  sub_1B162C7E0(a1, *(_QWORD *)(v2 + 16), (SEL *)&selRef_collectionView_canEditItemAtIndexPath_, a2);
}

void sub_1B162DDD4(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;

  sub_1B162C7E0(a1, *(_QWORD *)(v2 + 16), (SEL *)&selRef_collectionView_canFocusItemAtIndexPath_, a2);
}

void sub_1B162DDF4(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;

  sub_1B162C7E0(a1, *(_QWORD *)(v2 + 16), (SEL *)&selRef_collectionView_shouldSelectItemAtIndexPath_, a2);
}

void sub_1B162DE14(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;

  sub_1B162C7E0(a1, *(_QWORD *)(v2 + 16), (SEL *)&selRef_collectionView_shouldDeselectItemAtIndexPath_, a2);
}

void sub_1B162DE34(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;

  sub_1B162C7E0(a1, *(_QWORD *)(v2 + 16), (SEL *)&selRef_collectionView_shouldBeginMultipleSelectionInteractionAtIndexPath_, a2);
}

void sub_1B162DE54(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1B162CE00(a1, *(_QWORD *)(v2 + 16), a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

void sub_1B162DE60(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;

  sub_1B162CFB0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1B162DE6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B162D158(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1B162DE78()
{
  unint64_t result;

  result = qword_1EEF362C0;
  if (!qword_1EEF362C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF362C0);
  }
  return result;
}

uint64_t sub_1B162DEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B14107A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B162DEF8(unint64_t a1)
{
  sub_1B13A7BBC(a1, (void (*)(uint64_t, uint64_t))sub_1B1455714);
}

void sub_1B162DF04(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B162F464();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_1B13FFB90((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

id TabBarController.tabBarNavigationController(identifier:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  TabBarController.tabBarNavigationControllers.getter();
  v5 = v4;
  if (v4 >> 62)
    goto LABEL_18;
  for (i = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1B16BA76C())
  {
    v7 = 4;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_37_27();
      v8 = *(id *)(v5 + 8 * v7);
      v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_43_25();
      v10 = OUTLINED_FUNCTION_11_69();
      if (v10 == a1 && v11 == a2)
      {
        OUTLINED_FUNCTION_20_0();
LABEL_15:
        swift_bridgeObjectRelease();
        return v8;
      }
      v13 = OUTLINED_FUNCTION_28(v10, v11, a1, a2);
      OUTLINED_FUNCTION_7_0();
      if ((v13 & 1) != 0)
        goto LABEL_15;

      ++v7;
      if (v9 == i)
        goto LABEL_13;
    }
    __break(1u);
LABEL_18:
    ;
  }
LABEL_13:
  OUTLINED_FUNCTION_20_0();
  return 0;
}

Swift::Void __swiftcall TabBarController.selectTabBarNavigationController(withIdentifier:popToRoot:)(Swift::String withIdentifier, Swift::Bool popToRoot)
{
  void *v2;
  unint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  char v24;
  void *v25;

  LOBYTE(v3) = popToRoot;
  object = withIdentifier._object;
  countAndFlagsBits = withIdentifier._countAndFlagsBits;
  TabBarController.tabBarNavigationControllers.getter();
  v7 = v6;
  if (!(v6 >> 62))
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
LABEL_26:
    OUTLINED_FUNCTION_20();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_25:
  v8 = sub_1B16BA76C();
  if (!v8)
    goto LABEL_26;
LABEL_3:
  v25 = v2;
  v24 = v3;
  v9 = 0;
  v3 = v7 & 0xC000000000000001;
  while (1)
  {
    if (v3)
      v10 = (id)MEMORY[0x1B5E1DF60](v9, v7);
    else
      v10 = OUTLINED_FUNCTION_3_22(v7 + 8 * (_QWORD)v9);
    v11 = v10;
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    OUTLINED_FUNCTION_30();
    swift_getObjectType();
    v13 = OUTLINED_FUNCTION_12_65();
    if (v13 == countAndFlagsBits && v14 == (_QWORD)object)
      break;
    v2 = (void *)v14;
    v16 = OUTLINED_FUNCTION_28(v13, v14, countAndFlagsBits, (uint64_t)object);
    OUTLINED_FUNCTION_7_0();
    if ((v16 & 1) != 0)
      goto LABEL_16;

    ++v9;
    if (v12 == (char *)v8)
    {
      swift_bridgeObjectRelease();
LABEL_23:
      OUTLINED_FUNCTION_20();
      return;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  v17 = OUTLINED_FUNCTION_113();
  v18 = OUTLINED_FUNCTION_32_0(v17, sel_tabBar);
  v19 = objc_msgSend(v18, sel_isHidden);

  if (!v19)
    goto LABEL_20;
  v21 = (char *)OUTLINED_FUNCTION_32_0(v20, sel_selectedIndex);
  if (v21 == v9)
    goto LABEL_20;
  v22 = OUTLINED_FUNCTION_32_0((uint64_t)v21, sel_selectedViewController);
  if (v22)
  {
    v23 = v22;
    OUTLINED_FUNCTION_8_87();

LABEL_20:
    objc_msgSend(v25, sel_setSelectedIndex_, v9);
    if ((v24 & 1) != 0)

    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_1B162E30C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC5TeaUI16TabBarController_extendedDelegate;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B162E364(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC5TeaUI16TabBarController_extendedDelegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t TabBarController.extendedDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI16TabBarController_extendedDelegate;
  OUTLINED_FUNCTION_30();
  return MEMORY[0x1B5E1F2F8](v1);
}

void (*TabBarController.extendedDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5TeaUI16TabBarController_extendedDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1B5E1F2F8](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1B14C6484;
}

void TabBarController.__allocating_init(tabBarNavigationControllers:primaryTabBarItemIndex:styler:useCustomBarView:)(unint64_t a1, int64_t a2, uint64_t a3, char a4)
{
  OUTLINED_FUNCTION_13_1();
  TabBarController.init(tabBarNavigationControllers:primaryTabBarItemIndex:styler:useCustomBarView:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_67();
}

id TabBarController.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);

  return v2;
}

void TabBarController.init(coder:)()
{
  void *v0;

  OUTLINED_FUNCTION_39_1((uint64_t)v0 + OBJC_IVAR____TtC5TeaUI16TabBarController_extendedDelegate);

  OUTLINED_FUNCTION_32_35();
  __break(1u);
}

void TabBarController.viewControllers.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = TabBarController.viewControllers.getter();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B162E618(unint64_t *a1, char a2)
{
  unint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_49();
    TabBarController.viewControllers.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    TabBarController.viewControllers.setter(*a1);
  }
}

id TabBarController.selectedTabBarNavigationController.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_selectedViewController);
  if (result)
  {
    OUTLINED_FUNCTION_8_87();
    OUTLINED_FUNCTION_22_42();
    return (id)OUTLINED_FUNCTION_10_76();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void TabBarController.__allocating_init(tabs:)()
{
  id v0;
  void *v1;

  v0 = OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_10((uint64_t)v0, &qword_1EEF362F8);
  v1 = (void *)sub_1B16B9B48();
  OUTLINED_FUNCTION_29();
  objc_msgSend(v0, sel_initWithTabs_, v1);

  OUTLINED_FUNCTION_31();
}

void TabBarController.init(tabs:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TabBarController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    OUTLINED_FUNCTION_52();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_31();
}

void TabBarController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TabBarController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall TabBarController.tabBarController(_:shouldSelect:)(UITabBarController *_, UIViewController *shouldSelect)
{
  char *v2;
  char *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  objc_class *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  UIViewController *v15;
  id v16;
  NSArray *v17;
  unint64_t v18;
  uint64_t v19;
  UIViewController *v20;
  UIViewController *v21;
  UIViewController *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  objc_super v28;

  v4 = &v2[OBJC_IVAR____TtC5TeaUI16TabBarController_extendedDelegate];
  OUTLINED_FUNCTION_30();
  if (MEMORY[0x1B5E1F2F8](v4))
  {
    v5 = OUTLINED_FUNCTION_34_32();
    (*((void (**)(char *, UIViewController *, uint64_t, char *))v4 + 1))(v2, shouldSelect, v5, v4);
    OUTLINED_FUNCTION_63_0();
  }
  v6 = objc_msgSend(v2, sel_selectedIndex);
  v7 = TabBarController.viewControllers.getter();
  if (v7)
  {
    v8 = sub_1B161EEC4((uint64_t)shouldSelect, v7);
    v10 = v9;
    OUTLINED_FUNCTION_7_0();
    if ((v10 & 1) == 0 && v6 == (id)v8)
    {
      v11 = (objc_class *)OUTLINED_FUNCTION_8_87();
      v12 = swift_dynamicCastClass();
      if (v12)
      {
        v13 = (void *)v12;
        v14 = (void *)objc_opt_self();
        v15 = shouldSelect;
        v16 = objc_msgSend(v14, sel_areAnimationsEnabled);
        v28.receiver = v13;
        v28.super_class = v11;
        v17 = -[UITabBarController viewControllers](&v28, sel_viewControllers);
        OUTLINED_FUNCTION_10((uint64_t)v17, (unint64_t *)&qword_1ED183800);
        v18 = sub_1B16B9B54();

        if (v18 >> 62)
        {
          OUTLINED_FUNCTION_119_0();
          v19 = sub_1B16BA76C();
          OUTLINED_FUNCTION_52();
        }
        else
        {
          v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        OUTLINED_FUNCTION_52();
        if (v19 < 2)
        {
          v21 = (UIViewController *)sub_1B15EAC20(v15);
          if (!v21)
          {
LABEL_19:

            return 1;
          }
          v22 = v21;
          v23 = (uint64_t)-[UIViewController ts_scrollToTop:dismissKeyboard:](v21, sel_ts_scrollToTop_dismissKeyboard_, v16, 1);
          if ((v23 & 1) == 0)
          {
            v24 = OUTLINED_FUNCTION_2_0(v23, sel_topViewController);
            if (!v24 || (v25 = v24, v26 = (void *)sub_1B16532E0(v24), v25, !v26))
            {
              v20 = v22;
              goto LABEL_18;
            }
            objc_msgSend(v26, sel_scrollToTopAnimated_, v16);
            OUTLINED_FUNCTION_63_0();
          }
          v20 = v15;
          v15 = v22;
        }
        else
        {
          v20 = (UIViewController *)objc_msgSend(v13, sel_popToRootViewControllerAnimated_, v16);
        }
LABEL_18:

        goto LABEL_19;
      }
    }
  }
  return 1;
}

id sub_1B162EB18(uint64_t a1, void *a2)
{
  id v3;
  char v4;
  id result;

  v3 = OUTLINED_FUNCTION_32_0(a1, sel_scrollsToTop);
  if ((_DWORD)v3)
  {
    v3 = OUTLINED_FUNCTION_32_0((uint64_t)v3, sel_isUserInteractionEnabled);
    v4 = (char)v3;
  }
  else
  {
    v4 = 0;
  }
  result = OUTLINED_FUNCTION_32_0((uint64_t)v3, sel_isScrollEnabled);
  if ((_DWORD)result)
  {
    if ((v4 & 1) == 0)
      return sub_1B162EB80(a2);
  }
  return result;
}

id sub_1B162EB80(void *a1)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_msgSend(a1, sel_delegate);
  if (!v2)
    return 0;
  v3 = v2;
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_scrollViewShouldScrollToTop_) & 1) != 0)
    v4 = objc_msgSend(v3, sel_scrollViewShouldScrollToTop_, a1);
  else
    v4 = 0;
  swift_unknownObjectRelease();
  return v4;
}

Swift::Void __swiftcall TabBarController.tabBarController(_:didSelect:)(UITabBarController *_, UIViewController *didSelect)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  UIViewController *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __int128 v14[2];
  uint64_t v15;
  UIViewController *v16;
  _QWORD v17[3];

  v4 = v2 + OBJC_IVAR____TtC5TeaUI16TabBarController_extendedDelegate;
  OUTLINED_FUNCTION_30();
  v5 = MEMORY[0x1B5E1F2F8](v4);
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_34_32();
    (*(void (**)(uint64_t, UIViewController *, uint64_t, uint64_t))(v4 + 16))(v2, didSelect, v6, v4);
    v5 = OUTLINED_FUNCTION_63_0();
  }
  v7 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI16TabBarController_barView);
  if (v7)
  {
    v16 = didSelect;
    OUTLINED_FUNCTION_10(v5, (unint64_t *)&qword_1ED183800);
    OUTLINED_FUNCTION_197(v8, (unint64_t *)&unk_1ED186840);
    v9 = v7;
    v10 = didSelect;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1B13C06D0(v14, (uint64_t)v17);
      OUTLINED_FUNCTION_13_65(v17);
      if (v11)
      {
        v12 = (void *)sub_1B16B983C();
        v13 = OUTLINED_FUNCTION_7_0();
        OUTLINED_FUNCTION_47_28(v13, sel_ts_setGroupName_);

      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
    else
    {
      v15 = 0;
      memset(v14, 0, sizeof(v14));

      sub_1B13F15EC((uint64_t)v14, &qword_1ED186850, (unint64_t *)&unk_1ED186840);
    }
  }
  OUTLINED_FUNCTION_10_21();
}

id TabBarController.responder.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_selectedViewController);
  if (result)
  {
    OUTLINED_FUNCTION_8_87();
    OUTLINED_FUNCTION_22_42();
    return (id)OUTLINED_FUNCTION_10_76();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall TabBarController.textBeginEditing()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7[4];
  _BYTE v8[40];

  TabBarController.primaryTabBarNavigationController.getter();
  v2 = v1;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_31_36();

  v3 = OUTLINED_FUNCTION_29_36();
  OUTLINED_FUNCTION_197(v3, &qword_1EEF31768);
  if ((OUTLINED_FUNCTION_9_85() & 1) != 0)
  {
    sub_1B13C06D0(v7, (uint64_t)v8);
    OUTLINED_FUNCTION_24_41();
    OUTLINED_FUNCTION_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    v4 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_100_1(v5, (unint64_t *)&unk_1EEF36310, &qword_1EEF31768, (uint64_t)&protocol descriptor for TextEditObserving, v6, v4);
  }
  OUTLINED_FUNCTION_23_43();
}

Swift::Void __swiftcall TabBarController.textEndEditing()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7[4];
  _BYTE v8[40];

  TabBarController.primaryTabBarNavigationController.getter();
  v2 = v1;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_31_36();

  v3 = OUTLINED_FUNCTION_29_36();
  OUTLINED_FUNCTION_197(v3, &qword_1EEF31768);
  if ((OUTLINED_FUNCTION_9_85() & 1) != 0)
  {
    sub_1B13C06D0(v7, (uint64_t)v8);
    OUTLINED_FUNCTION_24_41();
    OUTLINED_FUNCTION_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    v4 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_100_1(v5, (unint64_t *)&unk_1EEF36310, &qword_1EEF31768, (uint64_t)&protocol descriptor for TextEditObserving, v6, v4);
  }
  OUTLINED_FUNCTION_23_43();
}

void sub_1B162EFB4()
{
  TabBarController.textBeginEditing()();
}

void sub_1B162EFD4()
{
  TabBarController.textEndEditing()();
}

uint64_t sub_1B162EFF4(void **a1, void **a2, unint64_t a3, void **a4, char *a5)
{
  void **v5;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void *v15;
  void **v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  void **v27;
  void **v28;
  BOOL v29;
  void **v32;
  void **v33;
  void *v34;
  void **v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void **v45;
  uint64_t v46;
  BOOL v47;
  BOOL v48;
  uint64_t result;
  unint64_t v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  void **v56;
  unint64_t v57;
  void **v58;
  unint64_t v59;
  void **v60;

  v5 = a4;
  v7 = a2;
  v8 = a1;
  v9 = (char *)a2 - (char *)a1;
  v10 = a2 - a1;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v10 >= v12)
  {
    sub_1B1455714(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v13 = &v5[v12];
    if (v8 >= v7 || v11 <= 7)
      goto LABEL_47;
    v52 = v5;
    v54 = OBJC_IVAR____TtC5TeaUI16TabBarController_tabBarOrder;
    v32 = (void **)(a3 - 8);
    v59 = (unint64_t)v8;
    while (1)
    {
      v57 = (unint64_t)v13;
      v33 = v13 - 1;
      v34 = *(v13 - 1);
      v60 = v7;
      v35 = v7 - 1;
      v36 = *(v7 - 1);
      v37 = *(_QWORD *)&a5[v54];
      swift_beginAccess();
      swift_getObjectType();
      v38 = v34;
      v39 = v36;
      sub_1B16B81B0();
      if (!*(_QWORD *)(v37 + 16))
        goto LABEL_50;
      v40 = sub_1B14477CC();
      if ((v41 & 1) == 0)
        goto LABEL_50;
      v42 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v40);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_getObjectType();
      sub_1B16B81B0();
      if (!*(_QWORD *)(v37 + 16))
        goto LABEL_51;
      v43 = sub_1B14477CC();
      if ((v44 & 1) == 0)
        goto LABEL_51;
      v45 = v32 + 1;
      v46 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v43);

      swift_bridgeObjectRelease();
      if (v42 >= v46)
      {
        v48 = v45 != (void **)v57 || (unint64_t)v32 >= v57;
        v35 = v33;
        v13 = v33;
        v7 = v60;
        if (!v48)
          goto LABEL_43;
      }
      else
      {
        v47 = v45 != v60 || v32 >= v60;
        v7 = v35;
        v13 = (void **)v57;
        if (!v47)
          goto LABEL_43;
      }
      *v32 = *v35;
LABEL_43:
      --v32;
      v5 = v52;
      if ((unint64_t)v7 <= v59 || v13 <= v52)
        goto LABEL_47;
    }
  }
  sub_1B1455714(a1, a2 - a1, a4);
  v13 = &v5[v10];
  if ((unint64_t)v7 >= a3 || v9 <= 7)
  {
LABEL_21:
    v7 = v8;
LABEL_47:
    sub_1B1455714(v5, v13 - v5, v7);

    return 1;
  }
  v53 = OBJC_IVAR____TtC5TeaUI16TabBarController_tabBarOrder;
  v56 = &v5[v10];
  v51 = a3;
  while (1)
  {
    v58 = v8;
    v15 = *v7;
    v16 = v5;
    v17 = *v5;
    v18 = *(_QWORD *)&a5[v53];
    swift_beginAccess();
    swift_getObjectType();
    v19 = v15;
    v20 = v17;
    sub_1B16B81B0();
    if (!*(_QWORD *)(v18 + 16))
      break;
    v21 = sub_1B14477CC();
    if ((v22 & 1) == 0)
      break;
    v23 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v21);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_getObjectType();
    sub_1B16B81B0();
    if (!*(_QWORD *)(v18 + 16))
      goto LABEL_49;
    v24 = sub_1B14477CC();
    if ((v25 & 1) == 0)
      goto LABEL_49;
    v26 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v24);

    swift_bridgeObjectRelease();
    v5 = v16;
    if (v23 >= v26)
    {
      v27 = v16;
      v28 = v58;
      v29 = v58 == v16;
      v5 = v16 + 1;
    }
    else
    {
      v27 = v7;
      v28 = v58;
      v29 = v58 == v7++;
    }
    if (!v29)
      *v28 = *v27;
    v8 = v28 + 1;
    v13 = v56;
    if (v5 >= v56 || (unint64_t)v7 >= v51)
      goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_49:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_50:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_51:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1B162F428()
{
  sub_1B13A333C();
}

void sub_1B162F43C()
{
  sub_1B13E47DC();
}

void sub_1B162F450()
{
  sub_1B14D0EA0();
}

void sub_1B162F464()
{
  sub_1B1410EE8();
}

unint64_t sub_1B162F478()
{
  unint64_t result;

  result = qword_1EEF36300;
  if (!qword_1EEF36300)
  {
    sub_1B13A1818(255, (unint64_t *)&qword_1ED183800);
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF36300);
  }
  return result;
}

uint64_t method lookup function for TabBarController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TabBarController.__allocating_init(tabBarNavigationControllers:primaryTabBarItemIndex:styler:useCustomBarView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t static Commands.~= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  __int128 v15[2];
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)&v15[0] = a1;
  type metadata accessor for Commands();
  sub_1B162F684();
  swift_retain();
  if ((OUTLINED_FUNCTION_0_183() & 1) == 0)
  {
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    sub_1B162F6D8((uint64_t)&v18);
LABEL_10:
    v13 = 0;
    return v13 & 1;
  }
  sub_1B13C06D0(&v18, (uint64_t)v21);
  v17 = a2;
  swift_retain();
  if ((OUTLINED_FUNCTION_0_183() & 1) == 0)
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_1B162F6D8((uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    goto LABEL_10;
  }
  sub_1B13C06D0(v15, (uint64_t)&v18);
  v3 = v22;
  v4 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7 = v6;
  v8 = *((_QWORD *)&v19 + 1);
  v9 = v20;
  __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  if (v5 == v10 && v7 == v11)
    v13 = 1;
  else
    v13 = sub_1B16BA910(v5, v7, v10, v11, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v13 & 1;
}

unint64_t sub_1B162F684()
{
  unint64_t result;

  result = qword_1ED179980;
  if (!qword_1ED179980)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED179980);
  }
  return result;
}

uint64_t sub_1B162F6D8(uint64_t a1)
{
  uint64_t v2;

  sub_1B162F714();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B162F714()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF36380)
  {
    sub_1B162F684();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF36380);
  }
}

uint64_t Commands.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Commands.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for Commands()
{
  return swift_lookUpClassMethod();
}

id sub_1B162F78C()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_134());
  return sub_1B162F864();
}

uint64_t LayeredView.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1EEF36388);
  sub_1B16B9740();
  return v1;
}

void sub_1B162F800()
{
  sub_1B16BA724();
  __break(1u);
}

void sub_1B162F858()
{
  sub_1B162F800();
}

id sub_1B162F864()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  id v7;
  id v9;
  objc_super v10;

  OUTLINED_FUNCTION_0_134();
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v1[qword_1EEF36388];
  *(_QWORD *)v5 = v3;
  *((_QWORD *)v5 + 1) = v2;
  *(_QWORD *)&v1[qword_1EEF36390] = v0;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  sub_1B16B9740();
  v9 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = sub_1B16B9C68();
  v7 = v9;
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF38], v6);
  sub_1B16B9AA0();
  swift_bridgeObjectRelease();

  return v7;
}

void sub_1B162F960(uint64_t a1, _QWORD *a2)
{
  void *v3;

  v3 = (void *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xC0) + 24))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xB8));
  objc_msgSend(a2, sel_addSubview_, v3);

}

id LayeredView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void LayeredView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B162FA4C()
{
  LayeredView.init(frame:)();
}

uint64_t sub_1B162FA58()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id LayeredView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B162FABC()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B162FAF8()
{
  return LayeredView.identifier.getter();
}

uint64_t sub_1B162FB18()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LayeredView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LayeredView);
}

uint64_t method lookup function for LayeredView()
{
  return swift_lookUpClassMethod();
}

void sub_1B162FB7C(uint64_t a1)
{
  uint64_t v1;

  sub_1B162F960(a1, *(_QWORD **)(v1 + 16));
}

void *_s5TeaUI16StatusBannerablePAAE26statusBannerViewControllerAA0cF19VisibilityProviding_So06UIViewH0CXcSgvg_0()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;

  type metadata accessor for StatusBannerContainerController();
  v1 = swift_dynamicCastClass();
  if (v1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI31StatusBannerContainerController_statusBannerViewController);
    v3 = v2;
  }
  else
  {
    v4 = objc_msgSend(v0, sel_ts_parentVC);
    if (v4)
    {
      v5 = v4;
      v2 = (void *)_s5TeaUI16StatusBannerablePAAE26statusBannerViewControllerAA0cF19VisibilityProviding_So06UIViewH0CXcSgvg_0();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

id StatusBannerable<>.onStatusBannerTap()()
{
  void *v0;

  return objc_msgSend(v0, sel_scrollToTopAnimated_, 1);
}

uint64_t dispatch thunk of StatusBannerable.statusBannerViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of StatusBannerable.canShowStatusBanner.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StatusBannerable.onStatusBannerTap()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void static MotionTransform.Transform.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1B162FCA4@<X0>(unint64_t a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  __n128 v6;
  __n128 v7;
  char v8;
  __n128 v10[2];
  unint64_t v11;
  unsigned __int8 v12;
  __n128 v13[2];
  unint64_t v14;
  unsigned __int8 v15;

  if (a1 >> 61)
  {
    v8 = 0;
  }
  else
  {
    v2 = v1[3].n128_u8[8];
    v3 = v1[3].n128_u64[0];
    v4 = *(_QWORD *)(a1 + 48);
    v5 = *(_BYTE *)(a1 + 56);
    v6 = v1[2];
    v13[0] = v1[1];
    v13[1] = v6;
    v14 = v3;
    v15 = v2;
    v7 = *(__n128 *)(a1 + 32);
    v10[0] = *(__n128 *)(a1 + 16);
    v10[1] = v7;
    v11 = v4;
    v12 = v5;
    v8 = static MotionTransform.== infix(_:_:)(v13, v10);
  }
  return v8 & 1;
}

Swift::Double __swiftcall MotionTransform.scaleX(for:)(__C::CGRect a1)
{
  Swift::Double result;

  __asm { BR              X11 }
  return result;
}

void sub_1B162FE28(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = v4;
  CGRectGetWidth(*(CGRect *)(&a2 - 1));
  OUTLINED_FUNCTION_0_62();
  OUTLINED_FUNCTION_7_2();
}

Swift::Double __swiftcall MotionTransform.scaleY(for:)(__C::CGRect a1)
{
  Swift::Double result;

  __asm { BR              X11 }
  return result;
}

void sub_1B162FEB4()
{
  OUTLINED_FUNCTION_7_2();
}

void MotionTransform.rangeX(for:)()
{
  __asm { BR              X10 }
}

void sub_1B162FF34()
{
  OUTLINED_FUNCTION_2_141();
}

void sub_1B162FF44(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  char v8;

  v5 = v4;
  CGRectGetWidth(*(CGRect *)&a1);
  v6 = OUTLINED_FUNCTION_0_62();
  OUTLINED_FUNCTION_4_108(v6);
  if (v7 != v8)
  {
    __break(1u);
    JUMPOUT(0x1B162FF80);
  }
  sub_1B162FF34();
}

uint64_t sub_1B162FF98()
{
  _QWORD *v0;
  char v1;

  if (*v0 >> 61 == 3)
    v1 = sub_1B162FF98() ^ 1;
  else
    v1 = 0;
  return v1 & 1;
}

void MotionTransform.rangeY(for:)()
{
  __asm { BR              X10 }
}

void sub_1B1630028()
{
  OUTLINED_FUNCTION_2_141();
}

uint64_t static MotionTransform.== infix(_:_:)(__n128 *a1, __n128 *a2)
{
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, double))((char *)sub_1B16300BC
                                                                         + 4 * byte_1B16DC335[a1[2].n128_u8[8]]))(a1[1], a2[1], *a2, *a1, a2[2].n128_f64[0]);
}

BOOL sub_1B16300BC@<W0>(int a1@<W8>, double a2@<D2>, double a3@<D3>)
{
  return !a1 && a3 == a2;
}

uint64_t MotionTransform.isInverted.getter()
{
  return 0;
}

uint64_t sub_1B163019C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1B16301A4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MotionTransform()
{
  return &type metadata for MotionTransform;
}

ValueMetadata *type metadata accessor for MotionTransform.Transform()
{
  return &type metadata for MotionTransform.Transform;
}

void TransitionFactory.__allocating_init(factory:fallbackTransition:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1B13C06D0(a1, v4 + 16);
  *(_QWORD *)(v4 + 56) = a2;
  OUTLINED_FUNCTION_31();
}

uint64_t TransitionFactory.init(factory:fallbackTransition:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B13C06D0(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  return v2;
}

void TransitionFactory.presentationTransition()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2))
  {
    v3 = *(void (**)(uint64_t))(v0[7] + OBJC_IVAR____TtC5TeaUI10Transition_presentationTransitionFactory);
    v4 = OUTLINED_FUNCTION_32();
    v3(v4);
    OUTLINED_FUNCTION_0_184();
  }
  OUTLINED_FUNCTION_31();
}

uint64_t TransitionFactory.dismissalTransition(interactive:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  void (*v6)(uint64_t);

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
  if (!result)
  {
    v6 = *(void (**)(uint64_t))(v1[7] + OBJC_IVAR____TtC5TeaUI10Transition_dismissalTransitionFactory);
    OUTLINED_FUNCTION_32();
    v6(a1 & 1);
    OUTLINED_FUNCTION_0_184();
    return a1;
  }
  return result;
}

UIPresentationController_optional __swiftcall TransitionFactory.presentationController(presented:presenting:source:)(UIViewController *presented, UIViewController_optional *presenting, UIViewController *source)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  Swift::Bool v10;
  uint64_t (*v11)(UIViewController *, UIViewController_optional *, UIViewController *);
  uint64_t v12;
  UIPresentationController_optional result;

  v7 = v3[5];
  v8 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v7);
  v9 = (objc_class *)(*(uint64_t (**)(UIViewController *, UIViewController_optional *, UIViewController *, uint64_t, uint64_t))(v8 + 24))(presented, presenting, source, v7, v8);
  if (!v9)
  {
    v11 = *(uint64_t (**)(UIViewController *, UIViewController_optional *, UIViewController *))(v3[7] + OBJC_IVAR____TtC5TeaUI10Transition_presentationControllerFactory);
    if (v11)
    {
      OUTLINED_FUNCTION_32();
      v12 = v11(presented, presenting, source);
      sub_1B13B9100((uint64_t)v11);
      v9 = (objc_class *)v12;
    }
    else
    {
      v9 = 0;
    }
  }
  result.value.super.isa = v9;
  result.is_nil = v10;
  return result;
}

uint64_t TransitionFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return v0;
}

uint64_t TransitionFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

void sub_1B1630448()
{
  TransitionFactory.presentationTransition()();
}

uint64_t sub_1B1630468(uint64_t a1)
{
  return TransitionFactory.dismissalTransition(interactive:)(a1);
}

unint64_t sub_1B1630488(UIViewController *a1, UIViewController_optional *a2, UIViewController *a3)
{
  return (unint64_t)TransitionFactory.presentationController(presented:presenting:source:)(a1, a2, a3);
}

uint64_t dispatch thunk of TransitionFactoryType.presentationTransition()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TransitionFactoryType.dismissalTransition(interactive:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TransitionFactoryType.presentationController(presented:presenting:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t type metadata accessor for TransitionFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for TransitionFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransitionFactory.__allocating_init(factory:fallbackTransition:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

double PillViewLayoutAttributes.iconFrame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double PillViewLayoutAttributes.titleFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double PillViewLayoutAttributes.contentFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double PillViewLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

double PillViewLayoutAttributes.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

id PillViewLayoutAttributes.backgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 136);
}

uint64_t PillViewLayoutAttributes.init(iconFrame:titleFrame:contentFrame:frame:cornerRadius:backgroundColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, __int128 a11, __int128 a12, __int128 a13, __int128 a14, uint64_t a15)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(double *)(a2 + 40) = a8;
  *(double *)(a2 + 48) = a9;
  *(double *)(a2 + 56) = a10;
  *(_OWORD *)(a2 + 64) = a11;
  *(_OWORD *)(a2 + 80) = a12;
  *(_OWORD *)(a2 + 96) = a13;
  *(_OWORD *)(a2 + 112) = a14;
  *(_QWORD *)(a2 + 128) = a15;
  *(_QWORD *)(a2 + 136) = result;
  return result;
}

void destroy for PillViewLayoutAttributes(uint64_t a1)
{

}

uint64_t initializeWithCopy for PillViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  id v8;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v7;
  v8 = v7;
  return a1;
}

_QWORD *assignWithCopy for PillViewLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  v3 = (void *)a2[17];
  v4 = (void *)a1[17];
  a1[17] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for PillViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  return a1;
}

uint64_t getEnumTagSinglePayload for PillViewLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 144))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 136);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 136) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PillViewLayoutAttributes()
{
  return &type metadata for PillViewLayoutAttributes;
}

uint64_t BlueprintSelectionOptions.init(modifierFlags:scene:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t BlueprintSelectionOptions.modifierFlags.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void *BlueprintSelectionOptions.scene.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void BlueprintSelectionOptions.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t initializeBufferWithCopyOfBuffer for BlueprintSelectionOptions(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for BlueprintSelectionOptions(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = *(void **)(a1 + 16);
  v5 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for BlueprintSelectionOptions(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintSelectionOptions(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintSelectionOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintSelectionOptions()
{
  return &type metadata for BlueprintSelectionOptions;
}

uint64_t TipSourceManager.__allocating_init(tipManager:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 24) = a1;
  return v2;
}

void TipSourceManager.sourceViewController.getter()
{
  OUTLINED_FUNCTION_0_98();
  OUTLINED_FUNCTION_23();
}

void TipSourceManager.sourceViewController.setter(void *a1)
{
  OUTLINED_FUNCTION_13();
  swift_unknownObjectWeakAssign();

}

void TipSourceManager.sourceViewController.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void (*sub_1B1630A48(uint64_t a1))(id **a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_1B1630A68;
}

void sub_1B1630A68(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t TipSourceManager.init(tipManager:)(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

void TipSourceManager.register(placement:)()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_13();
  v1 = (void *)MEMORY[0x1B5E1F2F8](v0 + 16);
  swift_unknownObjectWeakAssign();

  TipManager.register(placement:)();
  OUTLINED_FUNCTION_90();
}

Swift::Void __swiftcall TipSourceManager.dismissTips(animated:)(Swift::Bool animated)
{
  OUTLINED_FUNCTION_0_98();
  OUTLINED_FUNCTION_23();
}

void sub_1B1630B78(UIViewController *a1)
{
  NSObject *p_super;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (a1)
  {
    p_super = &a1->super.super;
    TipManager.dismissTips(for:animated:)(a1, 1);
  }
  else
  {
    if (qword_1ED187590 != -1)
      swift_once();
    v2 = sub_1B16B8BC4();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED187570);
    p_super = sub_1B16B8BAC();
    v3 = sub_1B16BA040();
    if (os_log_type_enabled(p_super, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1B139E000, p_super, v3, "Attempted to dismiss tips but source view controller was nil", v4, 2u);
      MEMORY[0x1B5E1F1FC](v4, -1, -1);
    }
  }

  OUTLINED_FUNCTION_90();
}

uint64_t TipSourceManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t TipSourceManager.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TipSourceManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for TipSourceManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TipSourceManager.__allocating_init(tipManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t static Commands.sharingPlaceholderIdentifier.getter()
{
  return 0xD000000000000012;
}

void static ContextMenuItem.sharePlaceHolder()()
{
  if (qword_1ED17B6C8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  ContextMenuItem.init(command:title:image:options:willExecute:)();
}

id static UIButton.closeButton.getter()
{
  id v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActionButton()), sel_init);
  sub_1B13C0F64();
  v1 = OUTLINED_FUNCTION_1_165();
  if (v1
    && (v2 = v1,
        v3 = (void *)objc_opt_self(),
        v4 = OUTLINED_FUNCTION_0_185(v3, sel_configurationWithPointSize_weight_scale_),
        v5 = objc_msgSend(v2, sel_imageByApplyingSymbolConfiguration_, v4),
        v2,
        v4,
        v5))
  {
    v6 = v5;
    v7 = v6;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_1_165();
    v7 = 0;
  }
  OUTLINED_FUNCTION_6_7(v0, sel_setImage_forState_, (uint64_t)v6);

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  v10 = v0;
  v11 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = sub_1B16B79B8();
  v14 = v13;

  sub_1B13A2780(v12, v14, v10);
  objc_msgSend(v10, sel_setShowsLargeContentViewer_, 1, 0x80000001B16F3CE0);
  v15 = v10;
  sub_1B163109C(v15);
  if (v16)
  {
    v17 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v15, sel_setLargeContentTitle_, v17);

  return v15;
}

id static UIButton.disclosureIndicator.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  if (qword_1EEF2F8D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_6_7(v0, sel_setBackgroundImage_forState_, qword_1EEF522D0);
  if ((byte_1EEF364E0 & 1) != 0)
  {
    objc_msgSend(v0, sel_sizeToFit);
    objc_msgSend(v0, sel_frame);
    qword_1EEF364C0 = v1;
    *(_QWORD *)algn_1EEF364C8 = v2;
    qword_1EEF364D0 = v3;
    dbl_1EEF364D8 = v4;
    byte_1EEF364E0 = 0;
  }
  else
  {
    objc_msgSend(v0, sel_setFrame_, *(double *)&qword_1EEF364C0, *(double *)algn_1EEF364C8, *(double *)&qword_1EEF364D0, dbl_1EEF364D8);
  }
  return v0;
}

uint64_t sub_1B163109C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_accessibilityLabel);

  if (!v2)
    return 0;
  v3 = sub_1B16B9860();

  return v3;
}

void sub_1B1631108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;

  sub_1B13DE608(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v35 - v10;
  v12 = sub_1B16B7D60();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v40 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v35 - v18;
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v44 = (char *)&v35 - v23;
  v46 = MEMORY[0x1E0DEE9D8];
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v24 = 0;
    v37 = a1;
    v38 = a2;
    v36 = v11;
    while (v24 < *(_QWORD *)(a1 + 16))
    {
      v42 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v43 = *(_QWORD *)(v13 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16);
      v25(v11, a1 + v42 + v43 * v24, v12, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
        goto LABEL_21;
      v45 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v45(v44, v11, v12);
      v26 = a2;
      v27 = *(_QWORD *)(a2 + 16);
      v41 = v24;
      if (v27)
      {
        v28 = v26 + v42;
        sub_1B16B9740();
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v25)(v7, v28, v12);
          __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v12);
          if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v12) == 1)
            break;
          v45(v19, v7, v12);
          sub_1B145E334();
          v29 = sub_1B16B9830();
          v30 = v13;
          v31 = *(void (**)(char *, uint64_t))(v13 + 8);
          v31(v19, v12);
          if ((v29 & 1) != 0)
          {
            a2 = v38;
            swift_bridgeObjectRelease();
            v31(v44, v12);
            v13 = v30;
            goto LABEL_19;
          }
          v28 += v43;
          --v27;
          v13 = v30;
          if (!v27)
            goto LABEL_12;
        }
      }
      else
      {
        sub_1B16B9740();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v12);
      }
      a2 = v38;
      swift_bridgeObjectRelease();
      v45(v40, v44, v12);
      v32 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B141E4C0(0, *(_QWORD *)(v32 + 16) + 1, 1);
        v32 = v46;
      }
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1B141E4C0(v33 > 1, v34 + 1, 1);
        v32 = v46;
      }
      *(_QWORD *)(v32 + 16) = v34 + 1;
      v45((char *)(v32 + v42 + v34 * v43), v40, v12);
      v46 = v32;
LABEL_19:
      v24 = v41 + 1;
      v11 = v36;
      a1 = v37;
      if (v41 + 1 == v39)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
LABEL_21:
    swift_bridgeObjectRelease();
    sub_1B13EFECC((uint64_t)v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t BlueprintViewAppearanceState.hash(into:)()
{
  return sub_1B16BAA54();
}

BOOL static BlueprintViewAppearanceState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BlueprintViewAppearanceState.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

void BlueprintViewController.blueprintBookmarkManager.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_95_9();
  OUTLINED_FUNCTION_113_4(v0);
  v1 = OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_158_3(v1, v2, qword_1ED1817C8, &qword_1ED1817C0);
  OUTLINED_FUNCTION_48();
}

void BlueprintViewController.blueprintBookmarkManager.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintViewController.blueprintLayoutTransitionManager.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_95_9();
  OUTLINED_FUNCTION_72_8(v0);
  v1 = OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_158_3(v1, v2, &qword_1ED185FB0, &qword_1ED185A98);
  OUTLINED_FUNCTION_48();
}

void BlueprintViewController.blueprintLayoutTransitionManager.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_72_8(v0);
  v1 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_162_2(v1, v2, &qword_1ED185FB0, &qword_1ED185A98);
  swift_endAccess();
  OUTLINED_FUNCTION_48();
}

void sub_1B1631684(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_98_9(a1, a2, a3, a4);
  OUTLINED_FUNCTION_127(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  OUTLINED_FUNCTION_0_0();
}

void BlueprintViewController.blueprintLayoutTransitionManager.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintViewController.gutterViewManager.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_48();
}

void BlueprintViewController.gutterViewManager.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_64_2();
  v3 = (_QWORD *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0x90));
  OUTLINED_FUNCTION_13();
  *v3 = v0;
  swift_release();
  OUTLINED_FUNCTION_48();
}

void BlueprintViewController.gutterViewManager.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id BlueprintViewController.backgroundContainerView.getter()
{
  _QWORD *v0;

  return OUTLINED_FUNCTION_4_4(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98));
}

void BlueprintViewController.responderBehavior.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  OUTLINED_FUNCTION_95_9();
  v3 = (_BYTE *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0xA0));
  OUTLINED_FUNCTION_30();
  *v0 = *v3;
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B1631854@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0xA0));
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B16318B4(char *a1)
{
  char v1;

  v1 = *a1;
  BlueprintViewController.responderBehavior.setter(&v1);
}

void BlueprintViewController.responderBehavior.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1631938(uint64_t a1, char a2)
{
  sub_1B14D9404(a1, a2, (void (*)(uint64_t))sub_1B13BE2B0);
}

void BlueprintViewController.viewCellResizingProvider.getter()
{
  OUTLINED_FUNCTION_30();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B1631990@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  _OWORD *v3;

  v3 = (_OWORD *)(*a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0xA8));
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t sub_1B16319F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  return BlueprintViewController.viewCellResizingProvider.setter(v2, v1);
}

uint64_t sub_1B1631A30(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v1);
  if (result)
    sub_1B1631A8C();
  return result;
}

void sub_1B1631A8C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

uint64_t sub_1B1631B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  _BYTE *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t ObjectType;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void *, uint64_t, uint64_t, uint64_t, _QWORD, void (*)(), uint64_t, _QWORD, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  void *v39;
  uint64_t v40;

  v9 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v40 - v10;
  v12 = *v3;
  CoverViewManager.layoutIfNeeded()();
  v13 = (char *)v4 + *(_QWORD *)((*v6 & *v4) + 0xE8);
  result = swift_beginAccess();
  if (*v13 == 1)
  {
    if (v12 == 6)
    {
      v15 = (uint64_t)v4 + *(_QWORD *)((*v6 & *v4) + 0x88);
      swift_beginAccess();
      sub_1B13F7728(v15, v2 + 1256, &qword_1ED185FB0, &qword_1ED185A98);
      if (*(_QWORD *)(v2 + 1280))
      {
        sub_1B13C06D0((__int128 *)(v2 + 1256), v2 + 152);
        v16 = (char *)v4 + *(_QWORD *)((*v6 & *v4) + 0xB8);
        swift_beginAccess();
        v17 = *((_QWORD *)v16 + 1);
        v18 = v6;
        ObjectType = swift_getObjectType();
        v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        swift_unknownObjectRetain();
        v20(ObjectType, v17);
        swift_unknownObjectRelease();
        memcpy((void *)(v2 + 1256), (const void *)(v2 + 680), 0x20DuLL);
        v21 = *(_QWORD *)(v2 + 176);
        v22 = *(_QWORD *)(v2 + 184);
        *(_QWORD *)(v2 + 24) = v21;
        *(_QWORD *)(v2 + 8) = v22;
        *(_QWORD *)(v2 + 16) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 152), v21);
        swift_beginAccess();
        v23 = v7[14];
        v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 56);
        v25 = v7[11];
        swift_unknownObjectRetain();
        v26 = (void *)v24(v25, v23);
        swift_unknownObjectRelease();
        swift_getAssociatedTypeWitness();
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        memcpy((void *)(v2 + 680), (const void *)(v2 + 1256), 0x20DuLL);
        v28 = (uint64_t)v4 + *(_QWORD *)((*v18 & *v4) + 0x80);
        swift_beginAccess();
        sub_1B13F7728(v28, v2 + 40, qword_1ED1817C8, &qword_1ED1817C0);
        v29 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = v5;
        *(_QWORD *)(v30 + 24) = v25;
        v31 = *(_QWORD *)(v2 + 32);
        *(_QWORD *)(v30 + 32) = v7[12];
        *(_QWORD *)(v30 + 40) = v31;
        *(_QWORD *)(v30 + 48) = v23;
        *(_QWORD *)(v30 + 56) = v7[15];
        *(_QWORD *)(v30 + 64) = v29;
        memcpy((void *)(v30 + 72), (const void *)(v2 + 1256), 0x20DuLL);
        *(_BYTE *)(v30 + 597) = 6;
        v32 = *(_QWORD *)(v2 + 8);
        v33 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, _QWORD, void (*)(), uint64_t, _QWORD, uint64_t))(v32 + 16);
        swift_retain();
        sub_1B1424D1C(v2 + 1256);
        v33(v26, AssociatedConformanceWitness, v2 + 680, v2 + 40, 0, sub_1B1635AC8, v30, *(_QWORD *)(v2 + 24), v32);

        swift_release();
        sub_1B145975C(v2 + 40, qword_1ED1817C8, &qword_1ED1817C0);
        swift_release();
        sub_1B1417ADC(v2 + 1256);
        return __swift_destroy_boxed_opaque_existential_1(v2 + 152);
      }
      sub_1B145975C(v2 + 1256, &qword_1ED185FB0, &qword_1ED185A98);
    }
    v34 = (char *)v4 + *(_QWORD *)((*v6 & *v4) + 0x118);
    swift_beginAccess();
    result = MEMORY[0x1B5E1F2F8](v34);
    if (result)
    {
      *(_QWORD *)(v2 + 24) = result;
      BlueprintProviderType.blueprint.getter(v5, *(_QWORD *)(v2 + 32));
      v35 = (char *)v4 + *(_QWORD *)((*v6 & *v4) + 0xB8);
      swift_beginAccess();
      *(_DWORD *)(v2 + 32) = v12;
      v36 = *((_QWORD *)v35 + 1);
      v37 = swift_getObjectType();
      v38 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      swift_unknownObjectRetain();
      v38(v37, v36);
      swift_unknownObjectRelease();
      memcpy((void *)(v2 + 1256), (const void *)(v2 + 680), 0x20DuLL);
      memcpy((void *)(v2 + 152), (const void *)(v2 + 680), 0x20DuLL);
      *(_BYTE *)(v2 + 104) = *(_DWORD *)(v2 + 32);
      v39 = *(void **)(v2 + 24);
      (*(void (**)(char *, uint64_t, uint64_t, _QWORD))(v7[15] + 152))(v11, v2 + 152, v2 + 104, v7[12]);

      sub_1B1417ADC(v2 + 1256);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, a1);
    }
  }
  return result;
}

void BlueprintViewController.viewCellResizingProvider.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1632094(uint64_t a1, char a2)
{
  sub_1B14D9404(a1, a2, (void (*)(uint64_t))sub_1B13AF5D4);
}

void BlueprintViewController.keyCommandManager.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_48();
}

void BlueprintViewController.delegate.getter()
{
  OUTLINED_FUNCTION_95_10();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B163211C()
{
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B1632124@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0x118);
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  *a2 = result;
  return result;
}

void sub_1B1632188(id *a1)
{
  id v1;

  v1 = *a1;
  BlueprintViewController.delegate.setter();
}

void BlueprintViewController.delegate.modify(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x118);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B1632210(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_31();
}

void sub_1B1632228(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    sub_1B13D0F94();
  }
  free(v3);
}

id BlueprintViewController.pluginView.getter()
{
  _QWORD *v0;

  return OUTLINED_FUNCTION_4_4(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120));
}

void BlueprintViewController.appearanceState.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  OUTLINED_FUNCTION_95_9();
  v3 = (_BYTE *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0x130));
  OUTLINED_FUNCTION_30();
  *v0 = *v3;
  OUTLINED_FUNCTION_48();
}

void BlueprintViewController.__allocating_init(provider:viewProvider:layoutOptionsProvider:app:impressionManager:keyCommandManager:commandCenter:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  objc_class *v10;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v18 = objc_allocWithZone(v10);
  BlueprintViewController.init(provider:viewProvider:layoutOptionsProvider:app:impressionManager:keyCommandManager:commandCenter:tracker:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v19, a8, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30);
}

void BlueprintViewController.__allocating_init(coder:)(uint64_t a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintViewController.init(coder:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  _BYTE v13[544];

  v2 = v0;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80);
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v5 = (char *)v0 + *(_QWORD *)((*v3 & *v0) + 0x88);
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)((char *)v0 + *(_QWORD *)((*v3 & *v0) + 0x90)) = 0;
  v6 = *(_QWORD *)((*v3 & *v0) + 0x98);
  v7 = objc_allocWithZone((Class)type metadata accessor for GradientView());
  *(_QWORD *)((char *)v2 + v6) = OUTLINED_FUNCTION_0_5(v7, sel_initWithFrame_);
  *((_BYTE *)v2 + *(_QWORD *)((*v3 & *v2) + 0xA0)) = 0;
  v8 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0xA8));
  *v8 = 0;
  v8[1] = 0;
  OUTLINED_FUNCTION_142_3();
  OUTLINED_FUNCTION_25();
  *(_QWORD *)((char *)v2 + v1) = CoverViewManager.init()();
  *((_BYTE *)v2 + *(_QWORD *)((*v3 & *v2) + 0xE8)) = 0;
  v9 = (_OWORD *)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0xF8));
  *v9 = 0u;
  v9[1] = 0u;
  v10 = (_OWORD *)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0x100));
  v11 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  *v10 = *MEMORY[0x1E0DC49E8];
  v10[1] = v11;
  *((_BYTE *)v2 + *(_QWORD *)((*v3 & *v2) + 0x108)) = 0;
  sub_1B1593E08(v13);
  OUTLINED_FUNCTION_154_3((uint64_t)v13);
  swift_unknownObjectWeakInit();
  v12 = *(_QWORD *)((*v3 & *v2) + 0x120);
  *(_QWORD *)((char *)v2 + v12) = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_);
  *((_BYTE *)v2 + *(_QWORD *)((*v3 & *v2) + 0x130)) = 0;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B16325F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  BlueprintViewController.init(coder:)();
}

void BlueprintViewController.__deallocating_deinit()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  OUTLINED_FUNCTION_31_37(v2, v3, v4, *MEMORY[0x1E0DC48E8]);

  v5 = OUTLINED_FUNCTION_43_26();
  OUTLINED_FUNCTION_31_37(v5, v6, v7, *MEMORY[0x1E0DC4508]);

  v8 = OUTLINED_FUNCTION_43_26();
  OUTLINED_FUNCTION_31_37(v8, v9, v10, *MEMORY[0x1E0DC45B8]);

  v11 = OUTLINED_FUNCTION_43_26();
  OUTLINED_FUNCTION_31_37(v11, v12, v13, *MEMORY[0x1E0DC44E0]);

  v14 = OUTLINED_FUNCTION_43_26();
  OUTLINED_FUNCTION_31_37(v14, v15, v16, *MEMORY[0x1E0DC4528]);

  v17 = OUTLINED_FUNCTION_43_26();
  OUTLINED_FUNCTION_31_37(v17, v18, v19, *MEMORY[0x1E0DC44D0]);

  v20.receiver = v0;
  v20.super_class = v1;
  objc_msgSendSuper2(&v20, sel_dealloc);
  OUTLINED_FUNCTION_15_2();
}

void sub_1B1632738(void *a1)
{
  id v1;

  v1 = a1;
  BlueprintViewController.__deallocating_deinit();
}

void sub_1B163275C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[544];

  v2 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1;
  sub_1B145975C((uint64_t)&a1[*(_QWORD *)(v2 + 0x80)], qword_1ED1817C8, &qword_1ED1817C0);
  OUTLINED_FUNCTION_1_26();
  sub_1B145975C((uint64_t)&a1[*(_QWORD *)(v3 + 136)], &qword_1ED185FB0, &qword_1ED185A98);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_43(*(_QWORD *)(v4 + 152));
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(&a1[*(_QWORD *)(v5 + 208)]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_43(*(_QWORD *)(v6 + 224));
  OUTLINED_FUNCTION_1_26();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)(v7 + 240)]);
  OUTLINED_FUNCTION_1_26();
  sub_1B15FEF2C((uint64_t)&a1[*(_QWORD *)(v8 + 272)], (uint64_t)v10);
  sub_1B1593C78((uint64_t)v10);
  OUTLINED_FUNCTION_1_26();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_43(*(_QWORD *)(v9 + 288));
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B16328BC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B16328E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  char v4;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v1);
  if (result)
  {
    v3 = (void *)result;
    swift_retain();

    v4 = 0;
    BlueprintImpressionManager.endSession(trigger:)((TeaUI::BlueprintImpressionSessionTrigger)&v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1632964()
{
  return sub_1B1635B08((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B16328E0);
}

void sub_1B1632970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void *v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v8 = a1 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x1B5E1F2F8](v8);
  if (v9)
  {
    v10 = (void *)v9;
    BlueprintImpressionManager.startSession(triggerSource:)();
    LOBYTE(v17) = 0;
    sub_1B1415494();
    swift_beginAccess();
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 56);
    swift_unknownObjectRetain();
    v12 = (void *)v11(a3, a6);
    swift_unknownObjectRelease();
    objc_msgSend(v12, sel_contentOffset, v17);
    v14 = v13;

    if (v14 < 0.0)
    {
      swift_unknownObjectRetain();
      v15 = (void *)v11(a3, a6);
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      v16 = (void *)v11(a3, a6);
      swift_unknownObjectRelease();
      objc_msgSend(v16, sel_adjustedContentInset);

      objc_msgSend(v15, sel_contentOffset);
      objc_msgSend(v15, sel_setContentOffset_);

      v10 = v15;
    }

  }
}

uint64_t sub_1B1632B18()
{
  return sub_1B1635B08((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1632970);
}

uint64_t sub_1B1632B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v2);
  if (result)
  {
    swift_beginAccess();
    swift_retain();
    KeyCommandManager.invalidate(clearState:)(0);
    swift_release();
    sub_1B14111EC();
  }
  return result;
}

uint64_t sub_1B1632C40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1632C64(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1632B24(a1, *(_QWORD *)(v1 + 64));
}

void sub_1B1632C7C()
{
  sub_1B1632CB8();
}

void sub_1B1632CA8()
{
  OUTLINED_FUNCTION_189();
}

void sub_1B1632CB0()
{
  sub_1B1632C7C();
}

void sub_1B1632CB8()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1632CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  void *v5;
  id v6;

  if (a1)
  {
    OUTLINED_FUNCTION_61_19();
    OUTLINED_FUNCTION_30();
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 56);
    OUTLINED_FUNCTION_146();
    v5 = (void *)v4(v1, v3);
    v6 = objc_msgSend(v5, sel_traitCollection);

    (*(void (**)(uint64_t, id, uint64_t))(*(_QWORD *)(v3 + 24) + 8))(v2, v6, v1);
    OUTLINED_FUNCTION_63_0();

    sub_1B1631A8C();
  }
  OUTLINED_FUNCTION_1_160();
}

void sub_1B1632D98()
{
  sub_1B1632C7C();
}

Swift::Void __swiftcall BlueprintViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  objc_class *v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  objc_super v7;

  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *MEMORY[0x1E0DEEDD8] & *v1;
  v7.receiver = v1;
  v7.super_class = v3;
  objc_msgSendSuper2(&v7, sel_viewWillDisappear_, a1);
  v6 = (char *)v1 + *(_QWORD *)((*v4 & *v1) + 0x130);
  OUTLINED_FUNCTION_13();
  *v6 = 3;
  OUTLINED_FUNCTION_30();
  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v5 + 112) + 8) + 32))(*(_QWORD *)(v5 + 88));
}

void sub_1B1632E68(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  BlueprintViewController.viewWillDisappear(_:)(a3);

}

Swift::Void __swiftcall BlueprintViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t *v1;
  char v2;
  objc_class *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  Swift::Bool v9;
  objc_super v10;

  v3 = (objc_class *)OUTLINED_FUNCTION_57_21();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *v1;
  v6 = *MEMORY[0x1E0DEEDD8];
  v10.receiver = v1;
  v10.super_class = v3;
  objc_msgSendSuper2(&v10, sel_viewDidDisappear_, v2 & 1);
  v7 = (char *)v1 + *(_QWORD *)((*v4 & *v1) + 0x130);
  OUTLINED_FUNCTION_13();
  *v7 = 4;
  OUTLINED_FUNCTION_50_21();
  BlueprintImpressionManager.endSession(triggerSource:)();
  objc_msgSend((id)objc_opt_self(), sel_isHardwareKeyboardAttached);
  OUTLINED_FUNCTION_50_21();
  if (v8)
  {
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_32();
    v9 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_32();
    v9 = 1;
  }
  KeyCommandManager.invalidate(clearState:)(v9);
  OUTLINED_FUNCTION_45();
  objc_msgSend((id)OUTLINED_FUNCTION_19_58(*v1), sel_setIsActive_, 0);
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_30();
  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)((v6 & v5) + 0x70) + 8) + 40))(*(_QWORD *)((v6 & v5) + 0x58));
}

void sub_1B1633014(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  BlueprintViewController.viewDidDisappear(_:)(a3);

}

void BlueprintViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  _QWORD *v3;
  void *v4;
  objc_class *v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(double);
  double v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char aBlock[8];
  uint64_t v34;
  uint64_t v35;
  _QWORD *(*v36)(uint64_t);
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  objc_super v41;

  v4 = v3;
  v8 = (objc_class *)OUTLINED_FUNCTION_4();
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v41.receiver = v3;
  v41.super_class = v8;
  objc_msgSendSuper2(&v41, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  v10 = (char *)v3 + *(_QWORD *)((*v9 & *v3) + 0x80);
  v11 = OUTLINED_FUNCTION_30();
  if (*((_QWORD *)v10 + 3))
  {
    OUTLINED_FUNCTION_159_2(v11, (uint64_t)v38);
    v12 = v39;
    v13 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v14 = objc_msgSend(v4, sel_view);
    if (!v14)
    {
      __break(1u);
      return;
    }
    v15 = v14;
    objc_msgSend(v14, sel_bounds);
    v17 = v16;
    v19 = v18;

    (*(void (**)(char *__return_ptr, uint64_t, uint64_t, double, double, double, double))(v13 + 8))(aBlock, v12, v13, v17, v19, a2, a3);
    sub_1B15D79B8((uint64_t)aBlock);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  OUTLINED_FUNCTION_61_19();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_146();
  v20 = (void *)OUTLINED_FUNCTION_149_3();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_146();
  v21 = (void *)OUTLINED_FUNCTION_149_3();
  OUTLINED_FUNCTION_63_0();
  objc_msgSend(v21, sel_bounds);
  OUTLINED_FUNCTION_13_2();

  OUTLINED_FUNCTION_42_2();
  v22 = *(uint64_t (**)(double))(OUTLINED_FUNCTION_41() + 48);
  OUTLINED_FUNCTION_164_3();
  v23 = OUTLINED_FUNCTION_14_0();
  v24 = v22(v23);

  if (v24)
    v25 = v24;
  else
    v25 = MEMORY[0x1E0DEE9D8];
  v36 = (_QWORD *(*)(uint64_t))nullsub_1;
  v37 = 0;
  v26 = MEMORY[0x1E0C809B0];
  v27 = OUTLINED_FUNCTION_140_4((uint64_t)&block_descriptor_37_2, v31, MEMORY[0x1E0C809B0], 1107296256, v34, v35);
  v28 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v28 + 16) = v4;
  *(_QWORD *)(v28 + 24) = v25;
  v36 = sub_1B1635908;
  v37 = v28;
  v29 = OUTLINED_FUNCTION_140_4((uint64_t)&block_descriptor_43_1, v32, v26, 1107296256, v34, v35);
  v30 = v4;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransitionInView_animation_completion_, 0, v27, v29);
  _Block_release(v29);
  _Block_release(v27);
}

_QWORD *sub_1B1633324(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *result;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v39)(uint64_t, uint64_t, double, double, double, double);
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void (*v54)(_QWORD, _QWORD, _QWORD);
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD, _QWORD, _QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  char v69;
  uint64_t v70[4];

  v67 = a3;
  v4 = *a2;
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *MEMORY[0x1E0DEEDD8];
  v7 = sub_1B16B7D60();
  v68 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B13DE608(0, (unint64_t *)&qword_1ED17E140, v11);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v57 - v18;
  v20 = v6 & v4;
  v21 = (_QWORD *)((char *)a2 + *(_QWORD *)((v6 & v4) + 0xF0));
  v22 = v21[3];
  v23 = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v22);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v23 + 16))(v70, v22, v23);
  if (LOBYTE(v70[0]) != 2)
  {
    v25 = (char *)a2 + *(_QWORD *)((*v5 & *a2) + 0xB0);
    swift_beginAccess();
    v26 = *(_QWORD *)(v20 + 112);
    v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 56);
    v28 = *(_QWORD *)(v20 + 88);
    swift_unknownObjectRetain();
    v61 = (void (*)(_QWORD, _QWORD, _QWORD))v27(v28, v26);
    swift_unknownObjectRelease();
    v66 = v25;
    swift_unknownObjectRetain();
    v64 = v27;
    v29 = (void *)v27(v28, v26);
    swift_unknownObjectRelease();
    objc_msgSend(v29, sel_bounds);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;

    swift_getAssociatedTypeWitness();
    v65 = v26;
    v63 = v28;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v39 = *(uint64_t (**)(uint64_t, uint64_t, double, double, double, double))(AssociatedConformanceWitness + 48);
    v40 = swift_checkMetadataState();
    v41 = v61;
    v62 = v40;
    v42 = v39(v40, AssociatedConformanceWitness, v31, v33, v35, v37);

    if (v42)
      v43 = v42;
    else
      v43 = MEMORY[0x1E0DEE9D8];
    sub_1B16B9740();
    v44 = (uint64_t)v67;
    v45 = sub_1B16B9740();
    sub_1B1631108(v45, v43);
    v47 = v46;
    sub_1B16B9740();
    sub_1B1631108(v43, v44);
    v57 = v47;
    v58 = v48;
    v49 = *(_QWORD *)(v47 + 16);
    v67 = a2;
    v50 = v68;
    if (v49)
    {
      v51 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xD8);
      v52 = v57 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
      v59 = *(_QWORD *)(v68 + 72);
      v60 = v51;
      v61 = *(void (**)(_QWORD, _QWORD, _QWORD))(v68 + 16);
      v61(v19, v52, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v7);
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v10, v19, v7);
        swift_unknownObjectRetain();
        v53 = (void *)v64(v63, v65);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v10, v62, AssociatedConformanceWitness);

        v69 = 2;
        BlueprintImpressionManager.endImpression(at:view:triggerSource:)();
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v58 + 16))
    {
      v54 = *(void (**)(_QWORD, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v67) + 0xD8);
      v55 = v58 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
      v60 = *(_QWORD *)(v50 + 72);
      v61 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v15, v55, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v7);
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v10, v15, v7);
        swift_unknownObjectRetain();
        v56 = (void *)v64(v63, v65);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v10, v62, AssociatedConformanceWitness);

        v69 = 2;
        BlueprintImpressionManager.startImpression(at:view:triggerSource:)();
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v7);
    }
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B1633880(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain();
  v9 = a1;
  BlueprintViewController.viewWillTransition(to:with:)(a5, a2, a3);
  swift_unknownObjectRelease();

}

uint64_t BlueprintViewController.shouldAutomaticallyForwardAppearanceMethods.getter()
{
  return 0;
}

Swift::Void __swiftcall BlueprintViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  _QWORD *v2;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  char v13;
  void *v14;
  void *v15;
  Swift::Bool v16;
  _BOOL4 v18;
  _BOOL4 v19;
  objc_super v20;

  v5 = (objc_class *)OUTLINED_FUNCTION_4();
  v6 = *MEMORY[0x1E0DEEDD8] & *v2;
  v20.receiver = v2;
  v20.super_class = v5;
  v16 = animated;
  v18 = animated;
  v19 = _;
  objc_msgSendSuper2(&v20, sel_setEditing_animated_);
  OUTLINED_FUNCTION_61_19();
  OUTLINED_FUNCTION_30();
  v7 = *(_QWORD *)(v6 + 112);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 56);
  v9 = *(_QWORD *)(v6 + 88);
  OUTLINED_FUNCTION_146();
  v10 = (void *)v8(v9, v7);
  OUTLINED_FUNCTION_63_0();
  swift_getAssociatedTypeWitness();
  v11 = OUTLINED_FUNCTION_167_3();
  v12 = *(uint64_t (**)(void))(v11 + 112);
  OUTLINED_FUNCTION_97_10();
  v13 = v12();

  if ((v13 & 1) != 0 && _)
  {
    OUTLINED_FUNCTION_146();
    v14 = (void *)OUTLINED_FUNCTION_123_8();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_108_9(0, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 120));

  }
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_32();
  KeyCommandManager.isEnabled.setter(!_);
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_151_3();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_146();
  v15 = (void *)OUTLINED_FUNCTION_123_8();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_108_9(v19, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 120));

}

void sub_1B1633AD4(void *a1, uint64_t a2, Swift::Bool a3, Swift::Bool a4)
{
  id v6;

  v6 = a1;
  BlueprintViewController.setEditing(_:animated:)(a3, a4);

}

void sub_1B1633B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_28_37(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_52_26();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_24_42();
  OUTLINED_FUNCTION_12_66();
  OUTLINED_FUNCTION_55_21();
}

#error "1B1633BC8: call analysis failed (funcsize=7)"

void sub_1B1633BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 120) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_8_88();
}

void sub_1B1633BEC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1633C2C(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  if (a1)
  {
    OUTLINED_FUNCTION_64_2();
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_17_48();
    OUTLINED_FUNCTION_7_89();
    OUTLINED_FUNCTION_22_43(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 120) + 96));

    OUTLINED_FUNCTION_34_33();
    OUTLINED_FUNCTION_21_45();
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1633C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_28_37(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_52_26();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_24_42();
  v6 = OUTLINED_FUNCTION_12_66();
  OUTLINED_FUNCTION_51_19(v6);
  type metadata accessor for BlueprintImpressionSection();
}

#error "1B1633D00: call analysis failed (funcsize=8)"

void sub_1B1633D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 120) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_8_88();
}

void sub_1B1633D28()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1633D68(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  if (a1)
  {
    OUTLINED_FUNCTION_64_2();
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_17_48();
    OUTLINED_FUNCTION_7_89();
    OUTLINED_FUNCTION_22_43(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 120) + 104));

    OUTLINED_FUNCTION_34_33();
    OUTLINED_FUNCTION_21_45();
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1633DAC()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_121_7();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_4_49();
  OUTLINED_FUNCTION_12_66();
  OUTLINED_FUNCTION_38_2();
}

void sub_1B1633E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = v0 + *(_QWORD *)(v1 + 280);
  OUTLINED_FUNCTION_30();
  v5 = MEMORY[0x1B5E1F2F8](v4);
  if (v5)
  {
    v6 = (void *)v5;
    OUTLINED_FUNCTION_35_29();
    OUTLINED_FUNCTION_74_14(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 120) + 112));

    OUTLINED_FUNCTION_104_6();
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1633EB0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  void *v31;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  OUTLINED_FUNCTION_6();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = *v0;
  v8 = *MEMORY[0x1E0DEEDD8];
  v9 = OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_2();
  v44 = v12;
  OUTLINED_FUNCTION_117_0(v13, (unint64_t *)&qword_1ED17E140, v14);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)v36 - v17;
  v19 = *(_QWORD *)(v6 + 16);
  v36[0] = v6;
  if (v19)
  {
    v20 = *v4;
    v21 = v8 & v7;
    v22 = (char *)v2 + *(_QWORD *)((v8 & v7) + 0xB0);
    v41 = v21;
    v39 = *(_QWORD *)(v21 + 216);
    OUTLINED_FUNCTION_70_19();
    v24 = v6 + v23;
    sub_1B16B9740();
    v40 = v22;
    OUTLINED_FUNCTION_30();
    v38 = *(_QWORD *)(v1 + 72);
    v25 = *(_QWORD *)(v1 + 16);
    v42 = v9;
    v43 = v25;
    v37 = 0x4030200u >> (8 * v20);
    v36[1] = v18;
    v26 = v44;
    OUTLINED_FUNCTION_131_9((uint64_t)v18, v24);
    OUTLINED_FUNCTION_27_44();
    if (!v27)
    {
      OUTLINED_FUNCTION_119(v26, (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
      v28 = *(_QWORD *)(v41 + 112);
      v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 56);
      v30 = *(_QWORD *)(v41 + 88);
      OUTLINED_FUNCTION_146();
      v31 = (void *)v29(v30, v28);
      OUTLINED_FUNCTION_63_0();
      swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
      v34 = OUTLINED_FUNCTION_97_10();
      v35 = v33(v26, v34, AssociatedConformanceWitness);

      v45 = v37;
      BlueprintImpressionManager.endImpression(at:view:trigger:)(v26, v35, &v45);
    }
  }
  else
  {
    sub_1B16B9740();
    OUTLINED_FUNCTION_42_28((uint64_t)v18);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
}

void sub_1B16340FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_28_37(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_52_26();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_3_127();
  OUTLINED_FUNCTION_24_42();
  OUTLINED_FUNCTION_12_66();
  OUTLINED_FUNCTION_55_21();
}

#error "1B1634194: call analysis failed (funcsize=7)"

void sub_1B1634198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 120) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_8_88();
}

void sub_1B16341B8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B16341F8(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  if (a1)
  {
    OUTLINED_FUNCTION_64_2();
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_17_48();
    OUTLINED_FUNCTION_7_89();
    OUTLINED_FUNCTION_22_43(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 120) + 144));

    OUTLINED_FUNCTION_34_33();
    OUTLINED_FUNCTION_21_45();
  }
  OUTLINED_FUNCTION_47();
}

uint64_t BlueprintViewController.canBecomeFirstResponder.getter()
{
  return 1;
}

BOOL sub_1B1634244(void *a1)
{
  id v1;
  Swift::Bool v2;

  v1 = a1;
  v2 = BlueprintViewController.becomeFirstResponder()();

  return v2;
}

id BlueprintViewController.responder.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v17;

  v1 = objc_msgSend(v0, sel_childViewControllers);
  OUTLINED_FUNCTION_10((uint64_t)v1, (unint64_t *)&qword_1ED183800);
  v2 = sub_1B16B9B54();

  if (v2 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B5E1DF60](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      swift_getObjectType();
      if (dynamic_cast_existential_1_conditional((uint64_t)v6))
      {
        v9 = v8;
        swift_getObjectType();
        v10 = v3;
        v11 = *(uint64_t (**)(uint64_t))(v9 + 8);
        v12 = v6;
        v13 = OUTLINED_FUNCTION_129_6();
        v14 = (void *)v11(v13);
        v3 = v10;
        v15 = v14;
        LODWORD(v9) = objc_msgSend(v14, sel_isFirstResponder);

        if ((_DWORD)v9)
        {
          OUTLINED_FUNCTION_180();
          return v12;
        }
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_11;
    }
    __break(1u);
LABEL_14:
    sub_1B16B9740();
    v3 = sub_1B16BA76C();
    OUTLINED_FUNCTION_180();
  }
LABEL_11:
  OUTLINED_FUNCTION_180();
  return v17;
}

void sub_1B1634428()
{
  UIKeyCommand v0;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_32();
  KeyCommandManager.handle(keyCommand:)(v0);
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_48();
}

void sub_1B163447C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1B1634428();

}

void BlueprintViewController.keyCommandScrollProviderDidPerformScroll(_:)()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_151_3();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_48();
}

void BlueprintViewController.keyCommandScrollExclusionProvider(_:handleKeyCommand:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;

  v6 = OUTLINED_FUNCTION_2_0(a1, sel_parentViewController);
  if (v6)
  {
    v7 = v6;
    while (1)
    {
      v8 = swift_dynamicCastObjCProtocolConditional();
      if (v8)
        break;
      v9 = objc_msgSend(v7, sel_parentViewController);

      v7 = v9;
      if (!v9)
        return;
    }
    v10 = (void *)v8;
    v11 = v7;
    v12 = (void *)sub_1B16B983C();
    objc_msgSend(v10, sel_childTraversable_didExcludeScrollKeyCommand_flags_, v4, v12, a4);

  }
}

void BlueprintViewController.keyCommandTraverseProviderDidTraverse<A, B>(_:)()
{
  sub_1B13BE314(1);
}

void _s5TeaUI23BlueprintViewControllerC32keyCommandFocusSelectionProvider_11didSelectAtyAA03KeyghiJ0Cyqd__qd_0_G_10Foundation9IndexPathVtAA0cdJ4TypeRd__AA0ng21TraversableCollectionjR0Rd_0_r0_lF_0()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38_2();
}

void sub_1B16346DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = OUTLINED_FUNCTION_144_2();
  v8 = type metadata accessor for BlueprintItem(v6, v1, v0, v7);
  *(_QWORD *)(v3 - 160) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 - 152) = v8;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v9, v10);
  *(_QWORD *)(v3 - 168) = v2;
  OUTLINED_FUNCTION_86_6();
  Blueprint.subscript.getter();
}

void sub_1B1634750()
{
  OUTLINED_FUNCTION_127_8();
  OUTLINED_FUNCTION_95_10();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_1();
}

void sub_1B1634780(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (a1)
  {
    OUTLINED_FUNCTION_86_6();
    *(_QWORD *)(v3 - 136) = 0;
    *(_BYTE *)(v3 - 128) = 1;
    *(_QWORD *)(v3 - 120) = 0;
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 - 168) + 120) + 56))(v1, v2, *(_QWORD *)(v3 - 144), v3 - 136, *(_QWORD *)(*(_QWORD *)(v3 - 168) + 96));

    OUTLINED_FUNCTION_127_8();
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 160) + 8))(v2, *(_QWORD *)(v3 - 152));
  OUTLINED_FUNCTION_47();
}

void BlueprintViewController.keyCommandTraverseProvider<A, B>(_:commitDeleteAt:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6();
  v1 = type metadata accessor for BlueprintViewAction.Action(0);
  MEMORY[0x1E0C80A78](v1, v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38_2();
}

void sub_1B16348DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v5 - 160) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  v8 = OUTLINED_FUNCTION_144_2();
  v10 = type metadata accessor for BlueprintItem(v8, v3, v1, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  MEMORY[0x1E0C80A78](v12, v13);
  v14 = *(_QWORD *)(v5 - 152) + *(_QWORD *)(*(_QWORD *)(v5 - 120) + 208);
  *(_QWORD *)(v5 - 176) = v2;
  *(_QWORD *)(v5 - 192) = v14;
  BlueprintProviderType.blueprint.getter(v4, v2);
  Blueprint.subscript.getter();
}

void sub_1B1634990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 160) + 8);
  *(_QWORD *)(v7 - 160) = v2;
  *(_QWORD *)(v7 - 184) = v8;
  v8(v5, v2);
  type metadata accessor for BlueprintViewActionRequest(0, v1, *(_QWORD *)(v7 - 168), v9);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v7 - 144) = v3;
  v10(v4, v3, v0);
  v11 = *(_QWORD *)(v7 - 136);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v7 - 112) = 3;
  BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)(v4, v11, (char *)(v7 - 112), 0, (uint64_t)nullsub_1, 0);
  OUTLINED_FUNCTION_95_10();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_1();
}

void sub_1B1634A40(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    BlueprintProviderType.blueprint.getter(v5, *(_QWORD *)(v6 - 176));
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v6 - 120) + 120) + 72))(v3, v2, *(_QWORD *)(*(_QWORD *)(v6 - 120) + 96));
    swift_release();

    (*(void (**)(uint64_t, _QWORD))(v6 - 184))(v3, *(_QWORD *)(v6 - 160));
  }
  else
  {
    swift_release();
  }
  (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v6 - 144), v1);
  OUTLINED_FUNCTION_47();
}

void BlueprintViewController.keyCommandTraverseProvider<A, B>(_:didTraversePastEdgeOfContent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = OUTLINED_FUNCTION_2_0(a1, sel_parentViewController);
  if (v4)
  {
    v5 = v4;
    while (1)
    {
      v6 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v6)
        break;
      v7 = objc_msgSend(v5, sel_parentViewController);

      v5 = v7;
      if (!v7)
        goto LABEL_7;
    }
    objc_msgSend(v6, sel_childTraversable_didExitTraversalWithDirection_, v2, a2);

  }
LABEL_7:
  OUTLINED_FUNCTION_15_2();
}

void BlueprintViewController.startTraversing(direction:)()
{
  void *v0;
  objc_class *v1;
  uint64_t v2;
  __n128 *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  objc_super v33;

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  v33.receiver = v0;
  v33.super_class = v1;
  if ((objc_msgSendSuper2(&v33, sel_becomeFirstResponder) & 1) == 0)
  {
    v2 = sub_1B16BA040();
    OUTLINED_FUNCTION_45_8(v2, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80);
    v3 = (__n128 *)OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_126_5(v3, (__n128)xmmword_1B16C51D0);
    MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB2120], v1);
    OUTLINED_FUNCTION_88_10();
    v4 = v32[0];
    v5 = v32[1];
    v3[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v6 = sub_1B140493C();
    v3[4].n128_u64[0] = v6;
    v3[2].n128_u64[0] = v4;
    v3[2].n128_u64[1] = v5;
    OUTLINED_FUNCTION_10(v6, (unint64_t *)&qword_1ED188F60);
    v7 = (void *)OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_75_15();
    OUTLINED_FUNCTION_113();

  }
  OUTLINED_FUNCTION_30();
  v8 = OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_99_6(v8, v9, (unint64_t *)&qword_1ED180748, &qword_1ED180740, (uint64_t)&protocol descriptor for KeyCommandTraverserType, v10, v11, v12, v22);
  if (v24)
  {
    OUTLINED_FUNCTION_19_19(v13, v14, v15, v16, v17, v18, v19, v20, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32[0]);
    sub_1B13BE314(1);
    v21 = v32[4];
    __swift_project_boxed_opaque_existential_1(v32, v32[3]);
    OUTLINED_FUNCTION_115_7(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  else
  {
    OUTLINED_FUNCTION_136_3(v13, (unint64_t *)&qword_1ED180748, &qword_1ED180740, (uint64_t)&protocol descriptor for KeyCommandTraverserType, v17, v18, v19, v20, v22);
  }
  OUTLINED_FUNCTION_81_16();
}

void sub_1B1634D0C(void *a1)
{
  id v1;

  v1 = a1;
  BlueprintViewController.startTraversing(direction:)();

}

void BlueprintViewController.childTraversable(_:didExcludeScrollKeyCommand:flags:)(uint64_t a1, uint64_t a2, void *a3, __C::UIKeyModifierFlags a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  objc_super v15;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  OUTLINED_FUNCTION_30();
  swift_retain();
  v10._countAndFlagsBits = a2;
  v10._object = a3;
  LOBYTE(a4.rawValue) = KeyCommandManager.handle(key:flags:)(v10, a4);
  OUTLINED_FUNCTION_47_1();
  if ((a4.rawValue & 1) != 0)
  {
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_151_3();
    OUTLINED_FUNCTION_45();
    v15.receiver = v5;
    v15.super_class = ObjectType;
    if ((objc_msgSendSuper2(&v15, sel_becomeFirstResponder) & 1) == 0)
    {
      v11 = sub_1B16BA040();
      OUTLINED_FUNCTION_45_8(v11, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80);
      v12 = OUTLINED_FUNCTION_25();
      *(_OWORD *)(v12 + 16) = xmmword_1B16C51D0;
      MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB2120], ObjectType);
      sub_1B16BA8E0();
      *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
      v13 = sub_1B140493C();
      *(_QWORD *)(v12 + 64) = v13;
      *(_QWORD *)(v12 + 32) = 0;
      *(_QWORD *)(v12 + 40) = 0xE000000000000000;
      OUTLINED_FUNCTION_10(v13, (unint64_t *)&qword_1ED188F60);
      v14 = (void *)OUTLINED_FUNCTION_51_0();
      sub_1B16B8B58();
      OUTLINED_FUNCTION_17();

    }
  }
  OUTLINED_FUNCTION_1_160();
}

uint64_t sub_1B1634EE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5)
{
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  __C::UIKeyModifierFlags v11;

  v7 = sub_1B16B9860();
  v9 = v8;
  swift_unknownObjectRetain();
  v10 = a1;
  v11.rawValue = a5;
  BlueprintViewController.childTraversable(_:didExcludeScrollKeyCommand:flags:)((uint64_t)v10, v7, v9, v11);
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void BlueprintViewController.childTraversable(_:didExitTraversalWithDirection:)()
{
  void *v0;
  objc_class *v1;
  uint64_t v2;
  __n128 *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  objc_super v33;

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  v33.receiver = v0;
  v33.super_class = v1;
  if ((objc_msgSendSuper2(&v33, sel_becomeFirstResponder) & 1) == 0)
  {
    v2 = sub_1B16BA040();
    OUTLINED_FUNCTION_45_8(v2, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80);
    v3 = (__n128 *)OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_126_5(v3, (__n128)xmmword_1B16C51D0);
    MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB2120], v1);
    OUTLINED_FUNCTION_88_10();
    v4 = v32[0];
    v5 = v32[1];
    v3[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v6 = sub_1B140493C();
    v3[4].n128_u64[0] = v6;
    v3[2].n128_u64[0] = v4;
    v3[2].n128_u64[1] = v5;
    OUTLINED_FUNCTION_10(v6, (unint64_t *)&qword_1ED188F60);
    v7 = (void *)OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_75_15();
    OUTLINED_FUNCTION_113();

  }
  OUTLINED_FUNCTION_30();
  v8 = OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_99_6(v8, v9, (unint64_t *)&qword_1ED180748, &qword_1ED180740, (uint64_t)&protocol descriptor for KeyCommandTraverserType, v10, v11, v12, v22);
  if (v24)
  {
    OUTLINED_FUNCTION_19_19(v13, v14, v15, v16, v17, v18, v19, v20, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32[0]);
    v21 = v32[4];
    __swift_project_boxed_opaque_existential_1(v32, v32[3]);
    OUTLINED_FUNCTION_115_7(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 24));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  else
  {
    OUTLINED_FUNCTION_136_3(v13, (unint64_t *)&qword_1ED180748, &qword_1ED180740, (uint64_t)&protocol descriptor for KeyCommandTraverserType, v17, v18, v19, v20, v22);
  }
  OUTLINED_FUNCTION_81_16();
}

void sub_1B16350F8(void *a1)
{
  id v2;

  swift_unknownObjectRetain();
  v2 = a1;
  BlueprintViewController.childTraversable(_:didExitTraversalWithDirection:)();
  swift_unknownObjectRelease();

}

void sub_1B1635154()
{
  OUTLINED_FUNCTION_76_13(1);
}

void sub_1B1635168()
{
  OUTLINED_FUNCTION_189();
}

void sub_1B1635170(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B16351CC(a1, a2, a3, (void (*)(void))sub_1B1635154);
}

void sub_1B163517C()
{
  OUTLINED_FUNCTION_76_13(2);
}

void sub_1B1635190()
{
  OUTLINED_FUNCTION_189();
}

void sub_1B1635198(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B16351CC(a1, a2, a3, (void (*)(void))sub_1B163517C);
}

void sub_1B16351A4()
{
  OUTLINED_FUNCTION_76_13(3);
}

void sub_1B16351B8()
{
  OUTLINED_FUNCTION_189();
}

void sub_1B16351C0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B16351CC(a1, a2, a3, (void (*)(void))sub_1B16351A4);
}

void sub_1B16351CC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  id v8;

  v6 = sub_1B16B7910();
  MEMORY[0x1E0C80A78](v6, v7);
  sub_1B16B78E0();
  v8 = a1;
  a4();
  JUMPOUT(0x1B163523CLL);
}

void sub_1B1635268()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B163533C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  int v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v9 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v22 - v10;
  v12 = *v6;
  swift_beginAccess();
  v13 = (_QWORD *)MEMORY[0x1B5E1F2F8](v4 + 16);
  if (v13)
  {
    v14 = v13;
    if (v12)
    {
      v15 = *(_QWORD *)(v7 + 24);
      if (v12 == 1)
      {
        v16 = (char *)v13 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v13) + 0x118);
        swift_beginAccess();
        v17 = MEMORY[0x1B5E1F2F8](v16);
        if (v17)
        {
          v18 = (void *)v17;
          BlueprintProviderType.blueprint.getter(v3, v5);
          memcpy((void *)(v2 + 40), *(const void **)(v2 + 16), 0x20DuLL);
          LOBYTE(v19) = 7;
LABEL_8:
          *(_BYTE *)(v2 + 39) = v19;
          (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t))(v15 + 152))(v11, v2 + 40, v2 + 39, *(_QWORD *)(v2 + 24), v15);

          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
          return;
        }
      }
      else
      {
        v20 = (char *)v13 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v13) + 0x118);
        swift_beginAccess();
        v21 = MEMORY[0x1B5E1F2F8](v20);
        if (v21)
        {
          v18 = (void *)v21;
          BlueprintProviderType.blueprint.getter(v3, v5);
          memcpy((void *)(v2 + 40), *(const void **)(v2 + 16), 0x20DuLL);
          v19 = *(_DWORD *)(v2 + 12);
          goto LABEL_8;
        }
      }
    }

  }
}

id BlueprintViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void BlueprintViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B16355A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  if (a3)
    sub_1B16B9860();
  v5 = a4;
  BlueprintViewController.init(nibName:bundle:)();
}

void sub_1B16355C8()
{
  sub_1B1633B30();
}

void sub_1B16355DC()
{
  sub_1B1633C70();
}

void sub_1B16355F8()
{
  sub_1B16340FC();
}

id sub_1B1635624()
{
  return BlueprintViewController.pluginView.getter();
}

void __swiftcall BlueprintViewController.sourceView(identifier:)(UIView_optional *__return_ptr retstr, Swift::String identifier)
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_93_7();
  OUTLINED_FUNCTION_93_7();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_38_2();
}

void sub_1B16356EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_117_0(v6, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v7, v8);
  v9 = OUTLINED_FUNCTION_3_12();
  *(_QWORD *)(v3 - 144) = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_6_3();
  *(_QWORD *)(v3 - 136) = v0;
  BlueprintProviderType.blueprint.getter(v2, v1);
  Blueprint.indexPath(for:)();
}

void sub_1B16357A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v6, v4);
  if (__swift_getEnumTagSinglePayload(v5, 1, v1) == 1)
  {
    sub_1B13EFECC(v5);
  }
  else
  {
    v8 = *(_QWORD *)(v7 - 144);
    OUTLINED_FUNCTION_119(v2, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    OUTLINED_FUNCTION_61_19();
    OUTLINED_FUNCTION_30();
    v9 = *(_QWORD *)(v3 + 112);
    v10 = *(void (**)(uint64_t, uint64_t))(v9 + 56);
    v11 = *(_QWORD *)(v3 + 88);
    OUTLINED_FUNCTION_146();
    v10(v11, v9);
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_42_2();
    v12 = OUTLINED_FUNCTION_41();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 72);
    v14 = OUTLINED_FUNCTION_164_3();
    v13(v2, v14, v12);
    OUTLINED_FUNCTION_155_2();
    OUTLINED_FUNCTION_23_44(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B16358BC(uint64_t a1@<X0>, UIView_optional *a2@<X8>)
{
  BlueprintViewController.sourceView(identifier:)(a2, *(Swift::String *)&a1);
}

uint64_t sub_1B16358DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1B1635908(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1633324(a1, *(_QWORD **)(v1 + 16), *(_QWORD **)(v1 + 24));
}

unint64_t sub_1B1635914()
{
  unint64_t result;

  result = qword_1EEF364E8;
  if (!qword_1EEF364E8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintViewAppearanceState, &type metadata for BlueprintViewAppearanceState);
    atomic_store(result, (unint64_t *)&qword_1EEF364E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BlueprintViewAppearanceState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B16359CC + 4 * byte_1B16DC505[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B1635A00 + 4 * byte_1B16DC500[v4]))();
}

uint64_t sub_1B1635A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1635A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1635A10);
  return result;
}

uint64_t sub_1B1635A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1635A24);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B1635A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1635A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintViewAppearanceState()
{
  return &type metadata for BlueprintViewAppearanceState;
}

uint64_t method lookup function for BlueprintViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintViewController.__allocating_init(provider:viewProvider:layoutOptionsProvider:app:impressionManager:keyCommandManager:commandCenter:tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t sub_1B1635A68()
{
  uint64_t v0;

  swift_release();

  sub_1B14262CC(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312), *(_BYTE *)(v0 + 320));
  sub_1B14262CC(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336), *(_BYTE *)(v0 + 344));
  sub_1B14262CC(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), *(_BYTE *)(v0 + 368));
  return swift_deallocObject();
}

void sub_1B1635AC8()
{
  sub_1B1635268();
}

void sub_1B1635AF4()
{
  OUTLINED_FUNCTION_189();
}

uint64_t sub_1B1635AFC()
{
  return sub_1B1635B08((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1631A30);
}

uint64_t sub_1B1635B08(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t OUTLINED_FUNCTION_104_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_113_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return v2 + *(_QWORD *)((v1 & a1) + 0x80);
}

uint64_t OUTLINED_FUNCTION_123_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

double OUTLINED_FUNCTION_124_6()
{
  CGRect *v0;

  return CGRectGetHeight(*v0);
}

double OUTLINED_FUNCTION_125_6()
{
  CGRect *v0;

  return CGRectGetWidth(*v0);
}

__n128 *OUTLINED_FUNCTION_126_5(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_127_8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_129_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_130_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_131_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 128))(a1, a2, v2);
}

_QWORD *OUTLINED_FUNCTION_132_6()
{
  uint64_t v0;
  _QWORD *v1;

  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_135_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

void OUTLINED_FUNCTION_136_3(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1B145975C((uint64_t)&a9, a2, a3);
}

void OUTLINED_FUNCTION_138_4()
{
  sub_1B1631A8C();
}

uint64_t OUTLINED_FUNCTION_139_4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 - 152))(*(_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 144));
}

void *OUTLINED_FUNCTION_140_4@<X0>(uint64_t a1@<X8>, uint64_t a2, char aBlock, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  a5 = v6;
  a6 = a1;
  return _Block_copy(&aBlock);
}

void *OUTLINED_FUNCTION_141_4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char aBlock, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  a18 = v19;
  a19 = a1;
  return _Block_copy(&aBlock);
}

uint64_t OUTLINED_FUNCTION_142_3()
{
  return type metadata accessor for CoverViewManager();
}

uint64_t OUTLINED_FUNCTION_144_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_146_6()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_149_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_151_3()
{
  KeyCommandManager.invalidate(clearState:)(1);
}

id OUTLINED_FUNCTION_153_3(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, (SEL)(v2 + 2632), v1);
}

uint64_t OUTLINED_FUNCTION_154_3(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15FEF2C(a1, v1);
}

void OUTLINED_FUNCTION_155_2()
{
  void *v0;

}

void OUTLINED_FUNCTION_158_3(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;

  sub_1B13F7728(v5, v4, a3, a4);
}

void OUTLINED_FUNCTION_159_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B13E2FE4(v2, a2);
}

void OUTLINED_FUNCTION_162_2(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;

  sub_1B1631684(v4, v5, a3, a4);
}

uint64_t OUTLINED_FUNCTION_164_3()
{
  return swift_checkMetadataState();
}

uint64_t OUTLINED_FUNCTION_167_3()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1B1635D10(uint64_t a1)
{

  sub_1B1481EDC(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_1B1481EDC(*(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t sub_1B1635D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  unint64_t v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  unint64_t v10;

  v2 = a2;
  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  v8 = v4;
  sub_1B1481DC0(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v9 = *(void **)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1B1481DC0(v9, v10, v2);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t sub_1B1635DD8(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  __int16 v7;
  void *v8;
  unint64_t v9;
  unsigned __int8 v10;
  void *v11;
  unint64_t v12;
  unsigned __int8 v13;
  void *v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  unsigned __int8 v18;

  v2 = a2;
  v4 = *a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v6 = v4;

  v7 = *((_WORD *)v2 + 4);
  *(_BYTE *)(a1 + 10) = *((_BYTE *)v2 + 10);
  *(_WORD *)(a1 + 8) = v7;
  v8 = v2[2];
  v9 = (unint64_t)v2[3];
  v10 = *((_BYTE *)v2 + 32);
  sub_1B1481DC0(v8, v9, v10);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v10;
  sub_1B1481EDC(v11, v12, v13);
  v14 = v2[5];
  v15 = (unint64_t)v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_1B1481DC0(v14, v15, v2);
  v16 = *(void **)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v15;
  v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_1B1481EDC(v16, v17, v18);
  return a1;
}

uint64_t sub_1B1635E88(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  unint64_t v7;
  unsigned __int8 v8;
  char v9;
  void *v10;
  unint64_t v11;
  unsigned __int8 v12;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1B1481EDC(v6, v7, v8);
  v9 = *(_BYTE *)(a2 + 56);
  v10 = *(void **)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v9;
  sub_1B1481EDC(v10, v11, v12);
  return a1;
}

uint64_t sub_1B1635F04(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B1635F44(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TabBarSplitViewModalContext()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B1635FA0(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 >= 0xFE)
  {
    v2 = (a2 + 16776962) >> 24 == 255 ? 2 : 1;
    v3 = (a2 + 16776962) >> 24 ? v2 : 0;
    if (v3)
    {
      if (v3 == 2)
      {
        v4 = *(unsigned __int16 *)((char *)a1 + 3);
        if (*(unsigned __int16 *)((char *)a1 + 3))
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776962;
      }
      else
      {
        v4 = *((unsigned __int8 *)a1 + 3);
        if (*((_BYTE *)a1 + 3))
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776962;
      }
    }
  }
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  if (v8 + 1 >= 2)
    return v8;
  else
    return 0;
}

uint64_t sub_1B1636038(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  int v4;
  unsigned int v5;

  if ((a3 + 16776962) >> 24 == 255)
    v3 = 2;
  else
    v3 = 1;
  if ((a3 + 16776962) >> 24)
    v4 = v3;
  else
    v4 = 0;
  if (a3 < 0xFE)
    v4 = 0;
  if (a2 > 0xFD)
  {
    *(_WORD *)result = a2 - 254;
    *(_BYTE *)(result + 2) = (a2 - 254) >> 16;
    if (v4)
    {
      v5 = ((a2 - 254) >> 24) + 1;
      if (v4 == 2)
        *(_WORD *)(result + 3) = v5;
      else
        *(_BYTE *)(result + 3) = v5;
    }
  }
  else
  {
    if (!v4)
      goto LABEL_13;
    if (v4 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_13:
      if (!a2)
        return result;
LABEL_19:
      *(_BYTE *)result = a2 + 2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_19;
  }
  return result;
}

uint64_t sub_1B16360C8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for TabBarSplitViewModalContext.PresentationStyle()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B1636100(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  BOOL v5;

  if (!a2)
  {
    v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        goto LABEL_5;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
      {
LABEL_5:
        v3 = (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v3 = -1;
  return (v3 + 1);
}

uint64_t sub_1B1636178(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

void type metadata accessor for TabBarSplitViewModalContext.SheetPresentationOptions()
{
  OUTLINED_FUNCTION_11_0();
}

BOOL static BlueprintLayoutSectionFramePosition.DescriptorSolver.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintLayoutSectionFramePosition.DescriptorSolver.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t BlueprintLayoutSectionFramePosition.DescriptorSolver.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B16362A4()
{
  unint64_t result;

  result = qword_1EEF36500;
  if (!qword_1EEF36500)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutSectionFramePosition.DescriptorSolver, &type metadata for BlueprintLayoutSectionFramePosition.DescriptorSolver);
    atomic_store(result, (unint64_t *)&qword_1EEF36500);
  }
  return result;
}

uint64_t *assignWithCopy for BlueprintLayoutSectionFramePosition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B1636450(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1B14033B0, (void (*)(uint64_t, uint64_t))sub_1B14032D0);
}

uint64_t assignWithTake for BlueprintLayoutSectionFramePosition(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1B14032D0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutSectionFramePosition(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3D && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 60;
    }
    else
    {
      v2 = (*(_BYTE *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
      if (v2 >= 0x3C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutSectionFramePosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 61;
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1B16363CC(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 8) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t initializeBufferWithCopyOfBuffer for BlueprintLayoutSectionFramePosition.Solver(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1B1403480(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for BlueprintLayoutSectionFramePosition.Solver(uint64_t a1)
{
  return sub_1B1403494(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t *assignWithCopy for BlueprintLayoutSectionFramePosition.Solver(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B1636450(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1B1403480, (void (*)(uint64_t, uint64_t))sub_1B1403494);
}

uint64_t *sub_1B1636450(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a2;
  v8 = *((_BYTE *)a2 + 8);
  a4(*a2, v8);
  v9 = *a1;
  *a1 = v7;
  v10 = *((unsigned __int8 *)a1 + 8);
  *((_BYTE *)a1 + 8) = v8;
  a5(v9, v10);
  return a1;
}

uint64_t assignWithTake for BlueprintLayoutSectionFramePosition.Solver(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1B1403494(v4, v5);
  return a1;
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutSectionFramePosition.DescriptorSolver(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B163652C + 4 * byte_1B16DC839[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1636560 + 4 * byte_1B16DC834[v4]))();
}

uint64_t sub_1B1636560(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1636568(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1636570);
  return result;
}

uint64_t sub_1B163657C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1636584);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1636588(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1636590(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

id MastheadTitleViewBarCompressionAnimator.__allocating_init(navigationBar:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MastheadTitleViewBarCompressionAnimator.init(navigationBar:)(a1);
}

double MastheadTitleViewBarCompressionAnimator.topOffset.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_50();
  return *(double *)v0;
}

uint64_t MastheadTitleViewBarCompressionAnimator.topOffset.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_topOffset);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*MastheadTitleViewBarCompressionAnimator.topOffset.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id MastheadTitleViewBarCompressionAnimator.init(navigationBar:)(uint64_t a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_topOffset] = 0;
  v1[OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_shouldAnimate] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_compressibleTitleView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_navigationBar] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t MastheadTitleViewBarCompressionAnimator.shouldCompressAtTop.getter()
{
  return 0;
}

uint64_t MastheadTitleViewBarCompressionAnimator.shouldCloseGapOnScroll.getter()
{
  return 0;
}

Swift::Void __swiftcall MastheadTitleViewBarCompressionAnimator.prepareForUpdates()()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_navigationBar), sel_ts_fetchCompressibleTitleView);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_compressibleTitleView);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_compressibleTitleView) = v1;

}

void MastheadTitleViewBarCompressionAnimator.update(withPercentage:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  id v8;
  double v9;
  CGFloat v10;
  id v11;
  void *v12;
  SEL v13;
  id v14;
  CATransform3D v15;
  CATransform3D v16;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_shouldAnimate) == 1)
  {
    v1 = OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_compressibleTitleView;
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_compressibleTitleView);
    if (v2
      || (v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_navigationBar), sel_ts_fetchCompressibleTitleView), v4 = *(void **)(v0 + v1), *(_QWORD *)(v0 + v1) = v3, v4, (v2 = *(void **)(v0 + v1)) != 0))
    {
      v14 = v2;
      v5 = sub_1B1636988(MEMORY[0x1E0CD3048], 0.0, 2.0);
      OUTLINED_FUNCTION_2_143(v5);
      v7 = v6;

      v8 = sub_1B1636988(MEMORY[0x1E0CD3058], 0.7, 1.38);
      OUTLINED_FUNCTION_2_143(v8);
      v10 = v9;

      objc_msgSend(v14, sel_setContentAlpha_, v7);
      v11 = objc_msgSend(v14, sel_view);
      if (v11)
      {
        v12 = v11;
        CATransform3DMakeScale(&v16, v10, v10, 1.0);
        OUTLINED_FUNCTION_1_167();
        CATransform3DTranslate(&v15, &v16, 0.0, 0.0, 0.0);
        OUTLINED_FUNCTION_1_167();
        objc_msgSend(v12, v13, &v16);

      }
      else
      {

      }
    }
  }
}

id sub_1B1636988(_QWORD *a1, double a2, double a3)
{
  id v5;
  id v6;

  v5 = objc_msgSend((id)objc_opt_self(), sel_functionWithName_, *a1);
  v6 = objc_msgSend(objc_allocWithZone((Class)TUAnimationFloatFunction), sel_initWithTimingFunction_startValue_endValue_speed_, v5, a2, 1.0, a3);

  return v6;
}

void MastheadTitleViewBarCompressionAnimator.scrollViewIs(atTop:offset:)(char a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  CGAffineTransform v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_compressibleTitleView);
  if (v3 && (*(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_shouldAnimate) & 1) == 0)
  {
    if ((a1 & 1) != 0)
    {
      objc_msgSend(v3, sel_setContentAlpha_, 0.0);
    }
    else
    {
      v4 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_navigationBar);
      v5 = v3;
      objc_msgSend(v4, sel_transform);
      if (CGAffineTransformIsIdentity(&v12))
      {
        objc_msgSend(v5, sel_setContentAlpha_, 1.0);
        v6 = objc_msgSend(v5, sel_view);
        if (v6)
        {
          v7 = v6;
          v8 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
          *(_OWORD *)&v12.a = *MEMORY[0x1E0CD2610];
          *(_OWORD *)&v12.c = v8;
          v9 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
          *(_OWORD *)&v12.tx = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
          v13 = v9;
          v10 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
          v14 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
          v15 = v10;
          v11 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
          v16 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
          v17 = v11;
          objc_msgSend(v6, sel_setTransform3D_, &v12);

        }
      }

    }
  }
}

Swift::Bool __swiftcall MastheadTitleViewBarCompressionAnimator.animationShouldBegin(for:currentlyFullyCompressed:)(UIScrollView *a1, Swift::Bool currentlyFullyCompressed)
{
  double *v2;
  uint64_t v3;
  double v4;
  double v5;
  Swift::Bool result;

  -[UIScrollView contentOffset](a1, sel_contentOffset);
  v5 = v4;
  OUTLINED_FUNCTION_0_50();
  result = v5 < *v2;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_shouldAnimate) = result;
  return result;
}

double MastheadTitleViewBarCompressionAnimator.maximumBarHeight(for:)()
{
  uint64_t v0;
  CGRect v2;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI39MastheadTitleViewBarCompressionAnimator_navigationBar), sel_bounds);
  return CGRectGetHeight(v2);
}

double MastheadTitleViewBarCompressionAnimator.minimumBarHeight(for:)()
{
  return 0.0;
}

id MastheadTitleViewBarCompressionAnimator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MastheadTitleViewBarCompressionAnimator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MastheadTitleViewBarCompressionAnimator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MastheadTitleViewBarCompressionAnimator()
{
  return objc_opt_self();
}

uint64_t method lookup function for MastheadTitleViewBarCompressionAnimator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MastheadTitleViewBarCompressionAnimator.__allocating_init(navigationBar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t ActivityIndicatorCoverStyler.indicatorStyle.getter()
{
  return 100;
}

id ActivityIndicatorCoverStyler.indicatorColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    if (v1 != (void *)1)
    {
      v3 = *(id *)(v0 + 16);
      goto LABEL_7;
    }
    v2 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  }
  v3 = v2;
LABEL_7:
  sub_1B161DD34(v1);
  return v3;
}

id ActivityIndicatorCoverStyler.backgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  SEL *v3;
  char **v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (void *)objc_opt_self();
  v3 = (SEL *)&selRef_whiteColor;
  v4 = &selRef_blackColor;
  if (v1 != 1)
    v4 = &selRef_systemBackgroundColor;
  if (v1)
    v3 = (SEL *)v4;
  return objc_msgSend(v2, *v3);
}

uint64_t ActivityIndicatorCoverStyler.deinit()
{
  uint64_t v0;

  sub_1B161DD44(*(id *)(v0 + 16));
  return v0;
}

uint64_t ActivityIndicatorCoverStyler.__deallocating_deinit()
{
  uint64_t v0;

  sub_1B161DD44(*(id *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_1B1636F08()
{
  return 100;
}

id sub_1B1636F10()
{
  return ActivityIndicatorCoverStyler.indicatorColor.getter();
}

id sub_1B1636F30()
{
  return ActivityIndicatorCoverStyler.backgroundColor.getter();
}

uint64_t static ActivityIndicatorCoverStyler.lightTheme.getter()
{
  return swift_initStaticObject();
}

uint64_t static ActivityIndicatorCoverStyler.darkTheme.getter()
{
  return swift_initStaticObject();
}

uint64_t sub_1B1636F70()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_ts_activityIndicatorColor);
  type metadata accessor for ActivityIndicatorCoverStyler();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  qword_1ED181708 = result;
  return result;
}

uint64_t static ActivityIndicatorCoverStyler.dynamicTheme.getter()
{
  if (qword_1ED184A40 != -1)
    swift_once();
  return swift_retain();
}

uint64_t dispatch thunk of ActivityIndicatorCoverStylerType.indicatorStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityIndicatorCoverStylerType.indicatorColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ActivityIndicatorCoverStylerType.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for ActivityIndicatorCoverStyler()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActivityIndicatorCoverStyler()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for ActivityIndicatorCoverStyler.Style()
{
  return &type metadata for ActivityIndicatorCoverStyler.Style;
}

_BYTE *ToggleRequest.init(state:cancel:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_BYTE *)a4 = *result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

BOOL static ToggleState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ToggleState.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t ToggleState.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

void ToggleRequest.state.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ToggleRequest.cancel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_retain();
  return v1;
}

Swift::Void __swiftcall Togglable.set(toggleState:animated:)(TeaUI::ToggleState toggleState, Swift::Bool animated)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  char v8;
  char v9;
  uint64_t v10;

  v4 = v3;
  v5 = v2;
  v7 = *(unsigned __int8 *)toggleState;
  (*(void (**)(uint64_t *__return_ptr))(v3 + 8))(&v10);
  if (v7 != v10)
  {
    v9 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(&v9, v5, v4);
    v8 = v7;
    (*(void (**)(char *, Swift::Bool, uint64_t, uint64_t))(v4 + 56))(&v8, animated, v5, v4);
  }
}

Swift::Void __swiftcall Togglable.toggle()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;

  v2 = v1;
  v3 = v0;
  (*(void (**)(char *__return_ptr))(v1 + 8))((char *)&v8 + 2);
  if ((v8 & 0x10000) != 0)
  {
    BYTE1(v8) = 0;
    OUTLINED_FUNCTION_0_188((TeaUI::ToggleState)((char *)&v8 + 1));
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2))
    {
      v5 = v4;
      swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr))(v5 + 8))(&v8);
      if ((v8 & 1) == 0)
      {
        v7 = 1;
        OUTLINED_FUNCTION_0_188((TeaUI::ToggleState)&v7);
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v6 = 1;
    OUTLINED_FUNCTION_0_188((TeaUI::ToggleState)&v6);
  }
}

uint64_t Togglable.makeToggleRequest()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(uint64_t *__return_ptr);
  char v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v6 = *(void (**)(uint64_t *__return_ptr))(a2 + 8);
  v6((uint64_t *)((char *)&v11 + 1));
  v7 = BYTE1(v11);
  ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v6)(&v11, a1, a2);
  v8 = v11;
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = v7;
  *(_QWORD *)(result + 40) = v9;
  *(_BYTE *)a3 = v8;
  *(_QWORD *)(a3 + 8) = sub_1B1637430;
  *(_QWORD *)(a3 + 16) = result;
  return result;
}

uint64_t sub_1B163733C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B1637360(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = a2 + 16;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    result = MEMORY[0x1B5E1F2F8](v2);
    if (!result)
      return result;
    v4 = 0;
  }
  else
  {
    swift_beginAccess();
    result = MEMORY[0x1B5E1F2F8](v2);
    if (!result)
      return result;
    v4 = 1;
  }
  Togglable.set(toggleState:animated:)((TeaUI::ToggleState)&v4, 1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B163740C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1637430()
{
  uint64_t v0;

  return sub_1B1637360(*(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1B1637444()
{
  unint64_t result;

  result = qword_1EEF36528[0];
  if (!qword_1EEF36528[0])
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ToggleState, &type metadata for ToggleState);
    atomic_store(result, qword_1EEF36528);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ToggleState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B16374CC + 4 * byte_1B16DCA0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1637500 + 4 * asc_1B16DCA08[v4]))();
}

uint64_t sub_1B1637500(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1637508(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1637510);
  return result;
}

uint64_t sub_1B163751C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1637524);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1637528(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1637530(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToggleState()
{
  return &type metadata for ToggleState;
}

uint64_t destroy for ToggleRequest()
{
  return swift_release();
}

uint64_t _s5TeaUI13ToggleRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ToggleRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ToggleRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ToggleRequest()
{
  return &type metadata for ToggleRequest;
}

uint64_t dispatch thunk of Togglable.toggleState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Togglable.toggleState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Togglable.toggleState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Togglable.linkedToggle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Togglable.linkedToggle.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of Togglable.linkedToggle.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of Togglable.didUpdateToggleState(toggleState:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t LayeredViewRenderer.__allocating_init(layerViewRenderer:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  LayeredViewRenderer.init(layerViewRenderer:)(a1);
  return v2;
}

uint64_t LayeredViewRenderer.init(layerViewRenderer:)(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1);
  return v1;
}

