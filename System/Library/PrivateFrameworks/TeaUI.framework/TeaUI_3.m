void RoundedRectButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RoundedRectButton.__deallocating_deinit()
{
  return sub_1B15219E8(type metadata accessor for RoundedRectButton);
}

id sub_1B15219E8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for RoundedRectButton()
{
  return objc_opt_self();
}

void sub_1B1521A38(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = sub_1B1520FA8();
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t method lookup function for PaddedShapeButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaddedShapeButton.contentOffset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PaddedShapeButton.contentOffset.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PaddedShapeButton.contentOffset.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t method lookup function for RoundedRectButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RoundedRectButton.__allocating_init(frame:cornerRadius:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t BlueprintLayoutVisualRankBuilder.__allocating_init()()
{
  return swift_allocObject();
}

void sub_1B1521AF0()
{
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1521B28(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v2 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v2 + 40))
    __swift_destroy_boxed_opaque_existential_1(v1 + v2 + 16);
  type metadata accessor for BlueprintSection();
}

void sub_1B1521B94()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B1521BA4()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B1521BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B16B848C();
  OUTLINED_FUNCTION_5_7(v2);
  type metadata accessor for BlueprintItem(255, v0, v1, v3);
  OUTLINED_FUNCTION_20_2();
}

void sub_1B1521BF8()
{
  OUTLINED_FUNCTION_10_5();
}

void sub_1B1521C08()
{
  OUTLINED_FUNCTION_10_5();
}

uint64_t sub_1B1521C18()
{
  uint64_t v0;

  v0 = sub_1B16B875C();
  OUTLINED_FUNCTION_5_7(v0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t BlueprintLayoutVisualRankBuilder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BlueprintLayoutVisualRankBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1B1521CA0()
{
  BlueprintLayoutVisualRankBuilder.build<A, B, C, D>(blueprint:layoutBlueprint:)();
}

void (*sub_1B1521CB8())()
{
  return sub_1B141CFD4;
}

void BlueprintLayoutVisualRankBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutOptions:)()
{
  BlueprintLayoutVisualRankBuilder.build<A, B, C, D>(blueprint:layoutBlueprint:)();
}

void (*sub_1B1521D00())()
{
  return sub_1B141CFD4;
}

void sub_1B1521D14()
{
  BlueprintLayoutVisualRankBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutOptions:)();
}

void (*sub_1B1521D34())()
{
  return sub_1B141CFD4;
}

uint64_t dispatch thunk of BlueprintLayoutVisualRankBuilderType.build<A, B, C, D>(blueprint:layoutBlueprint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(void))(a12 + 8))();
}

uint64_t method lookup function for BlueprintLayoutVisualRankBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintLayoutVisualRankBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t CardSplitViewPanable.cardSplitViewShouldBePreserved.getter()
{
  return 0;
}

uint64_t dispatch thunk of CardSplitViewPanable.cardSplitViewShouldBePreserved.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CardSplitViewPanable.cardSplitViewPresentation(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void sub_1B1521D8C(unint64_t a1, unint64_t a2, uint64_t (*a3)(id, char *))
{
  void *v3;
  void *v4;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v46;
  uint64_t v47;
  uint64_t i;
  unint64_t v49;
  char v50[8];
  uint64_t v51;

  v4 = v3;
  v6 = a1;
  v49 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_48;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = *(_QWORD **)(a2 + 16);
    if ((uint64_t)v8 >= v7)
      v9 = v7;
    else
      v9 = *(_QWORD *)(a2 + 16);
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1B1490EAC(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
    {
      __break(1u);
LABEL_50:

LABEL_51:
      __break(1u);
      return;
    }
    v10 = v51;
    v39 = (_QWORD *)a2;
    v44 = v6;
    v11 = v6 & 0xFFFFFFFFFFFFFF8;
    if (!v9)
      break;
    v46 = v6 & 0xC000000000000001;
    v42 = (_QWORD *)(a2 + 32);
    sub_1B16B9740();
    sub_1B16B9740();
    a2 = 0;
    v41 = v8;
    v47 = v6 & 0xFFFFFFFFFFFFFF8;
    while (v9 != a2)
    {
      if (v49)
      {
        sub_1B16B9740();
        v12 = sub_1B16BA76C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v12 = *(_QWORD *)(v11 + 16);
      }
      if (a2 == v12)
        goto LABEL_51;
      if (v46)
      {
        v13 = (id)MEMORY[0x1B5E1DF60](a2, v6);
      }
      else
      {
        if (a2 >= *(_QWORD *)(v11 + 16))
          goto LABEL_44;
        v13 = *(id *)(v6 + 8 * a2 + 32);
      }
      v4 = v13;
      if (v8 == (_QWORD *)a2)
        goto LABEL_50;
      v50[0] = *((_BYTE *)v42 + a2);
      if (!v13)
        goto LABEL_51;
      v14 = (_QWORD *)v9;
      v15 = a3(v13, v50);
      v17 = v16;
      v19 = v18;
      v21 = v20;

      v51 = v10;
      v23 = *(_QWORD *)(v10 + 16);
      v22 = *(_QWORD *)(v10 + 24);
      v4 = (void *)(v23 + 1);
      if (v23 >= v22 >> 1)
      {
        sub_1B1490EAC(v22 > 1, v23 + 1, 1);
        v10 = v51;
      }
      ++a2;
      *(_QWORD *)(v10 + 16) = v4;
      v24 = (_QWORD *)(v10 + 32 * v23);
      v24[4] = v15;
      v24[5] = v17;
      v24[6] = v19;
      v24[7] = v21;
      v9 = (uint64_t)v14;
      v25 = v14 == (_QWORD *)a2;
      v6 = v44;
      v8 = v41;
      v11 = v47;
      if (v25)
      {
        a2 = (unint64_t)v39;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    sub_1B16B9740();
    v7 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  v46 = v6 & 0xC000000000000001;
  sub_1B16B9740();
  sub_1B16B9740();
LABEL_26:
  v43 = v6 + 32;
  v40 = (_QWORD *)(a2 + 32);
  for (i = v11; ; v11 = i)
  {
    if (v49)
    {
      sub_1B16B9740();
      v26 = sub_1B16BA76C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = *(_QWORD *)(v11 + 16);
    }
    if (v9 == v26)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    if (v46)
    {
      v27 = (_QWORD *)MEMORY[0x1B5E1DF60](v9, v6);
    }
    else
    {
      if ((unint64_t)v9 >= *(_QWORD *)(v11 + 16))
        goto LABEL_45;
      v27 = *(id *)(v43 + 8 * v9);
    }
    a2 = (unint64_t)v27;
    if (v9 == 0x7FFFFFFFFFFFFFFFLL)
      goto LABEL_46;
    if (v8 == (_QWORD *)v9)
      break;
    if (v9 >= (unint64_t)v8)
      goto LABEL_47;
    v50[0] = *((_BYTE *)v40 + v9);
    v28 = v9;
    v29 = a3(v27, v50);
    v31 = v30;
    v33 = v32;
    v35 = v34;

    v51 = v10;
    v37 = *(_QWORD *)(v10 + 16);
    v36 = *(_QWORD *)(v10 + 24);
    v4 = (void *)(v37 + 1);
    if (v37 >= v36 >> 1)
    {
      sub_1B1490EAC(v36 > 1, v37 + 1, 1);
      v10 = v51;
    }
    *(_QWORD *)(v10 + 16) = v4;
    v38 = (_QWORD *)(v10 + 32 * v37);
    v38[4] = v29;
    v38[5] = v31;
    v38[6] = v33;
    v38[7] = v35;
    v9 = v28 + 1;
    a2 = (unint64_t)v39;
    v6 = v44;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void sub_1B152217C(_BYTE *a1@<X8>)
{
  void *v1;

  *a1 = objc_msgSend(v1, sel_isCollapsed) ^ 1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15221AC()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

void CardSplitViewController.__allocating_init(cardContainerController:commandContainer:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  CardSplitViewController.init(cardContainerController:commandContainer:)(a1, a2);
  OUTLINED_FUNCTION_31();
}

void CardSplitViewController.__allocating_init(coder:)()
{
  uint64_t v0;

  objc_msgSend(OUTLINED_FUNCTION_4_20(), sel_initWithCoder_, v0);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void CardSplitViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_preservedItems] = MEMORY[0x1E0DEE9D8];
  v1 = OBJC_IVAR____TtC5TeaUI23CardSplitViewController_eventManager;
  sub_1B145D760();
  OUTLINED_FUNCTION_29_0();
  *(_QWORD *)&v0[v1] = sub_1B16B8198();

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15222EC(unint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v24[2];
  uint64_t v25;
  id v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1B16B9740();
    if (v7)
      goto LABEL_3;
LABEL_16:
    OUTLINED_FUNCTION_22_20();
    swift_bridgeObjectRelease();
    return;
  }
  OUTLINED_FUNCTION_17_1();
  v7 = sub_1B16BA76C();
  if (!v7)
    goto LABEL_16;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    v8 = 0;
    v23 = MEMORY[0x1E0DEE9B0] + 8;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1B5E1DF60](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v26 = v9;
      sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
      sub_1B13CC6B4(0, &qword_1ED17ABF0);
      v11 = v10;
      if (swift_dynamicCast())
      {
        sub_1B13C06D0(v24, (uint64_t)v27);
        v13 = v28;
        v12 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        LOBYTE(v24[0]) = a3;
        (*(void (**)(__int128 *, uint64_t, uint64_t))(v12 + 24))(v24, v13, v12);
        v14 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      else
      {
        v25 = 0;
        memset(v24, 0, sizeof(v24));
        sub_1B140625C((uint64_t)v24, (uint64_t)&unk_1ED17ABF8, (uint64_t)&qword_1ED17ABF0, (uint64_t)&protocol descriptor for CardSplitViewAutoObserver, (uint64_t (*)(_QWORD))sub_1B13E4534);
      }
      v15 = OUTLINED_FUNCTION_132(v14, sel_presentedViewController);
      if (v15)
      {
        v16 = v15;
        sub_1B13C5C9C(0, (unint64_t *)&qword_1ED186F90, v23, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1B16C95D0;
        *(_QWORD *)(inited + 32) = v16;
        v27[0] = inited;
        sub_1B16B9B78();
        v18 = v27[0];
        v19 = v16;
        a4(v18, a2);
        OUTLINED_FUNCTION_7_0();

      }
      ++v8;
      v20 = OUTLINED_FUNCTION_132((uint64_t)v15, sel_childViewControllers);
      v21 = sub_1B16B9B54();

      a4(v21, a2);
      OUTLINED_FUNCTION_52();
    }
    while (v7 != v8);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_22_20();
  }
}

void sub_1B1522588(unint64_t a1, uint64_t a2)
{
  sub_1B15222EC(a1, a2, 0, (void (*)(uint64_t, uint64_t))sub_1B1522588);
}

void sub_1B1522598(unint64_t a1, uint64_t a2)
{
  sub_1B15222EC(a1, a2, 1, (void (*)(uint64_t, uint64_t))sub_1B1522598);
}

void sub_1B15225A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1B5E1F2F8](v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_togglePrimaryViewVisibilityAnimated_, 1);

  }
}

uint64_t sub_1B1522604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1B5E1F2F8](v3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_presentedViewController);
  if (v6)
  {
    v7 = v6;
    v8 = (uint64_t)objc_msgSend(v6, sel_isBeingDismissed);

    v5 = v7;
  }
  else
  {
    v8 = 1;
  }

  return v8;
}

void sub_1B15226A0(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  void *v5;
  unint64_t v6;
  unsigned int v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1B5E1F2F8](v3);
  if (!v4)
  {
    LOBYTE(v7) = 0;
    goto LABEL_5;
  }
  v5 = v4;
  v6 = (unint64_t)objc_msgSend(v4, sel_displayMode);
  if (v6 < 4)
  {
    v7 = 0x100u >> (8 * v6);

LABEL_5:
    *a2 = v7;
    return;
  }
  sub_1B16BA724();
  __break(1u);
}

void sub_1B1522770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  char v9;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1B5E1F2F8](v3);
  if (v4)
  {
    v5 = v4;
    v9 = objc_msgSend(v4, sel_isCollapsed) ^ 1;
    v6 = (void *)sub_1B1522810(&v9);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_popViewControllerAnimated_, 1);

      v5 = v8;
    }

  }
}

uint64_t sub_1B1522810(char *a1)
{
  void *v1;
  char v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v2 = *a1;
  v3 = objc_msgSend(v1, sel_viewControllers);
  sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
  v4 = sub_1B16B9B54();

  v5 = v4 >> 62;
  if ((v2 & 1) == 0)
  {
    if (v5)
    {
      sub_1B16B9740();
      v12 = sub_1B16BA76C();
      swift_bridgeObjectRelease();
      if (v12)
        goto LABEL_9;
    }
    else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_9:
      sub_1B13C6B9C(0, (v4 & 0xC000000000000001) == 0, v4);
      if ((v4 & 0xC000000000000001) == 0)
      {
        v8 = *(void **)(v4 + 32);
        goto LABEL_11;
      }
      v13 = 0;
LABEL_21:
      v9 = (id)MEMORY[0x1B5E1DF60](v13, v4);
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v5)
  {
    sub_1B16B9740();
    v6 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6 < 2)
    return 0;
  v7 = objc_msgSend(v1, sel_viewControllers);
  v4 = sub_1B16B9B54();

  sub_1B13C6B9C(1uLL, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0)
  {
    v13 = 1;
    goto LABEL_21;
  }
  v8 = *(void **)(v4 + 40);
LABEL_11:
  v9 = v8;
LABEL_12:
  v10 = v9;
  swift_bridgeObjectRelease();
  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (result)
    return result;

  return 0;
}

void *sub_1B15229D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *result;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  char v14;

  v3 = a3 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x1B5E1F2F8](v3);
  if (!result)
    return result;
  v5 = result;
  v14 = objc_msgSend(result, sel_isCollapsed) ^ 1;
  v6 = (void *)sub_1B1522810(&v14);
  if (!v6)
  {

    return 0;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_presentedViewController);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_isBeingDismissed);

    if ((v10 & 1) == 0)
    {

      return 0;
    }
  }
  v11 = objc_msgSend(v7, sel_viewControllers);
  sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
  v12 = sub_1B16B9B54();

  if (v12 >> 62)
  {
    sub_1B16B9740();
    v13 = sub_1B16BA76C();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  return (void *)(v13 > 1);
}

void CardSplitViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    OUTLINED_FUNCTION_52();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_31();
}

void CardSplitViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CardSplitViewController.__allocating_init(style:)()
{
  uint64_t v0;

  return objc_msgSend(OUTLINED_FUNCTION_4_20(), sel_initWithStyle_, v0);
}

void CardSplitViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void CardSplitViewController.__deallocating_deinit()
{
  sub_1B1459B98((const char **)&selRef_dealloc);
}

uint64_t sub_1B1522CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_commands);
  v2 = *(_QWORD *)(v1 + 24);
  OUTLINED_FUNCTION_4();
  v3 = qword_1ED1849B0;
  OUTLINED_FUNCTION_146();
  if (v3 != -1)
    swift_once();
  OUTLINED_FUNCTION_77_0(qword_1ED183488, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 144));
  OUTLINED_FUNCTION_63_0();
  v4 = *(_QWORD *)(v1 + 24);
  OUTLINED_FUNCTION_4();
  v5 = qword_1ED188A20;
  OUTLINED_FUNCTION_146();
  if (v5 != -1)
    swift_once();
  OUTLINED_FUNCTION_77_0(qword_1ED186DC8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 144));
  return swift_unknownObjectRelease();
}

uint64_t sub_1B1522E30(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_1B16B863C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1523F50(a1, (uint64_t)&v22);
  if (v23)
  {
    sub_1B13C06D0(&v22, (uint64_t)v24);
    LOBYTE(v22) = objc_msgSend(v1, sel_isCollapsed) ^ 1;
    v9 = (void *)sub_1B1522810((char *)&v22);
    v10 = v25;
    v11 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v21 = objc_msgSend(v1, sel_isCollapsed) ^ 1;
    (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t))(v11 + 16))(&v22, &v21, v10, v11);
    LOBYTE(v22) = objc_msgSend(v1, sel_isCollapsed) ^ 1;
    v12 = (void *)sub_1B1522810((char *)&v22);

    if (v12
      || (v13 = v25,
          v14 = v26,
          __swift_project_boxed_opaque_existential_1(v24, v25),
          v21 = objc_msgSend(v2, sel_isCollapsed) ^ 1,
          (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t))(v14 + 16))(&v22, &v21, v13, v14),
          (v22 & 0xC0) != 0x40)
      || (v22 & 1) == 0
      || (objc_opt_self(), !swift_dynamicCastObjCClass()))
    {
      sub_1B1455DA4(0, &qword_1ED183970, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1B16C51E0;
      sub_1B16B8630();
      sub_1B16B8624();
      *(_QWORD *)&v22 = v15;
      sub_1B1525508();
      sub_1B1455DA4(0, &qword_1ED1836C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1B13D6788();
      sub_1B16BA448();
      v16 = swift_allocObject();
      swift_unknownObjectUnownedInit();
      sub_1B13E2FE4((uint64_t)v24, (uint64_t)&v22);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = a1;
      sub_1B13C06D0(&v22, v17 + 24);
      *(_QWORD *)(v17 + 64) = v16;
      v18 = a1;
      swift_retain();
      sub_1B16B8174();
      swift_release();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      return 1;
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  else
  {
    sub_1B140625C((uint64_t)&v22, (uint64_t)&unk_1ED17B630, (uint64_t)&qword_1ED17A9F8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(_QWORD))sub_1B13E4534);
  }
  return 0;
}

uint64_t CardSplitViewController.splitViewController(_:showDetail:sender:)(uint64_t a1, void *a2)
{
  return sub_1B1522E30(a2);
}

uint64_t sub_1B1523194(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(id, void *))
{
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  char v16;
  _OWORD v18[2];

  if (a5)
  {
    v10 = a3;
    v11 = a4;
    v12 = a1;
    swift_unknownObjectRetain();
    sub_1B16BA3AC();
    v13 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    v14 = a3;
    v15 = a4;
    v13 = a1;
  }
  v16 = a6(v13, a4);

  sub_1B140625C((uint64_t)v18, (uint64_t)&qword_1ED188590, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B13C5C9C);
  return v16 & 1;
}

void __swiftcall CardSplitViewController.splitViewController(_:separateSecondaryFrom:)(UIViewController_optional *__return_ptr retstr, UISplitViewController *_, UIViewController *separateSecondaryFrom)
{
  unint64_t v3;
  void *v5;
  UIViewController *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t i;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  UIViewController *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;

  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = separateSecondaryFrom;
    OUTLINED_FUNCTION_10((uint64_t)objc_msgSend(v5, sel_viewControllers), (unint64_t *)&qword_1ED183800);
    sub_1B16B9B54();
    OUTLINED_FUNCTION_12_0();
    if (v3 >> 62)
    {
      OUTLINED_FUNCTION_16_30();
      v55 = OUTLINED_FUNCTION_95_1();
      OUTLINED_FUNCTION_7_0();
      if (v55)
      {
LABEL_4:
        sub_1B13C6B9C(0, (v3 & 0xC000000000000001) == 0, v3);
        if ((v3 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1B5E1DF60](0);
        else
          v7 = *(id *)(v3 + 32);
        v60 = v7;
        v8 = OUTLINED_FUNCTION_7_0();
        v9 = *(void **)(v59 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController);
        sub_1B14C67D8(v8);
        if (!v10)
        {

          return;
        }
        v11 = (void *)v10;
        v56 = v6;
        v12 = sub_1B13C1830(v10);
        v13 = sub_1B13C7E9C();
        MEMORY[0x1E0C80A78](v13, v14);
        sub_1B1521D8C(v12, v13, sub_1B152535C);
        v16 = v15;
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_29();
        v17 = *(_QWORD *)(v16 + 16);
        v57 = v5;
        v58 = v11;
        if (v17)
        {
          sub_1B16B9740();
          v18 = (uint64_t *)(v16 + 56);
          v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v20 = v59;
          do
          {
            v21 = (void *)*(v18 - 3);
            if (v21)
            {
              v22 = *(v18 - 2);
              v23 = *(v18 - 1);
              v24 = *v18;
              v25 = v21;
              sub_1B13C4AEC(v23);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_51_10();
                v19 = v28;
              }
              v26 = v19[2];
              if (v26 >= v19[3] >> 1)
              {
                OUTLINED_FUNCTION_51_10();
                v19 = v29;
              }
              v19[2] = v26 + 1;
              v27 = &v19[4 * v26];
              v27[4] = v25;
              v27[5] = v22;
              v27[6] = v23;
              v27[7] = v24;
              v20 = v59;
            }
            v18 += 4;
            --v17;
          }
          while (v17);
          OUTLINED_FUNCTION_29();
        }
        else
        {
          v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v20 = v59;
        }
        OUTLINED_FUNCTION_29();
        objc_msgSend(v9, sel_popCards);
        v30 = v19[2];
        if (v30)
        {
          v31 = v19 + 7;
          do
          {
            v32 = *(v31 - 2);
            v33 = *(v31 - 1);
            v34 = *v31;
            v35 = (id)*(v31 - 3);
            sub_1B13C4AEC(v33);
            sub_1B152395C(v35, v32, v33, v34, 1);

            sub_1B13B9100(v33);
            v31 += 4;
            --v30;
          }
          while (v30);
        }
        OUTLINED_FUNCTION_20_0();
        v36 = objc_msgSend(v58, sel_view);
        if (!v36)
        {
LABEL_41:
          __break(1u);
          return;
        }
        v37 = v36;
        objc_msgSend(v36, sel_setHidden_, 0);

        v38 = *(_QWORD *)(v20 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_commands);
        v39 = *(_QWORD *)(v38 + 16);
        v40 = *(_QWORD *)(v38 + 24);
        v41 = (unint64_t)objc_allocWithZone((Class)type metadata accessor for CardNavigationController());
        v42 = v58;
        swift_unknownObjectRetain();
        v43 = v40;
        v44 = v41;
        v45 = CardNavigationController.init(rootViewController:commandCenter:)(v42, v39, v43);
        v46 = objc_msgSend(v57, sel_childViewControllers);
        sub_1B16B9B54();
        OUTLINED_FUNCTION_12_0();
        if (v41 >> 62)
        {
          OUTLINED_FUNCTION_16_30();
          v47 = OUTLINED_FUNCTION_95_1();
          OUTLINED_FUNCTION_7_0();
          if (v47)
            goto LABEL_25;
        }
        else
        {
          v47 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v47)
          {
LABEL_25:
            if (v47 >= 1)
            {
              for (i = 0; i != v47; ++i)
              {
                if ((v44 & 0xC000000000000001) != 0)
                  v49 = (id)MEMORY[0x1B5E1DF60](i, v44);
                else
                  v49 = *(id *)(v44 + 8 * i + 32);
                v50 = v49;
                v51 = v60;
                if (v49 != v60)
                {
                  objc_msgSend(v45, sel_pushViewController_animated_, v49, 0);
                  v51 = v50;
                }

              }
              goto LABEL_33;
            }
            __break(1u);
            goto LABEL_41;
          }
        }
LABEL_33:
        OUTLINED_FUNCTION_7_0();
        sub_1B13C5C9C(0, (unint64_t *)&qword_1ED186F90, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v52 = OUTLINED_FUNCTION_25();
        *(_OWORD *)(v52 + 16) = xmmword_1B16C95D0;
        *(_QWORD *)(v52 + 32) = v60;
        v61 = v52;
        sub_1B16B9B78();
        v53 = v60;
        OUTLINED_FUNCTION_51_7();
        v54 = (void *)sub_1B16B9B48();
        OUTLINED_FUNCTION_29();
        objc_msgSend(v57, sel_setViewControllers_, v54);

        return;
      }
    }
    else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }

    OUTLINED_FUNCTION_7_0();
  }
}

uint64_t sub_1B1523768(void *a1, char *a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  id v12;
  id v13;

  v3 = *a2;
  v4 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = a1;
  *(_BYTE *)(v5 + 32) = v3;
  swift_getObjectType();
  v6 = dynamic_cast_existential_1_conditional((uint64_t)a1);
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    ObjectType = swift_getObjectType();
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    v12 = a1;
    if ((v11(ObjectType, v9) & 1) != 0)
      return v8;
  }
  else
  {
    v13 = a1;
  }

  swift_release();
  return 0;
}

void sub_1B1523880(uint64_t a1, uint64_t a2)
{
  char *Strong;
  id v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  id v9;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v4 = *(id *)&Strong[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

  v6 = sub_1B13C1830(v5);
  sub_1B161EEC4(a2, v6);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
  {
    v8 = (char *)swift_unknownObjectUnownedLoadStrong();
    v9 = *(id *)&v8[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

    CardContainerController.setCard(at:to:animated:completion:)();
  }
}

id sub_1B152395C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char *v5;
  char *v6;
  id result;
  id v13;
  char *v14;
  uint64_t v15;
  id *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;

  v6 = v5;
  if ((a5 & 1) != 0)
  {
    objc_msgSend(a1, sel_willMoveToParentViewController_, 0);
    result = objc_msgSend(a1, sel_view);
    if (!result)
    {
      __break(1u);
      goto LABEL_16;
    }
    v13 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    objc_msgSend(a1, sel_removeFromParentViewController);
  }
  v14 = &v6[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_preservedItems];
  result = (id)swift_beginAccess();
  v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
  if (v15)
  {
    v16 = (id *)(*(_QWORD *)v14 + 32);
    while (*v16 != a1)
    {
      v16 += 4;
      if (!--v15)
        goto LABEL_8;
    }
  }
  else
  {
LABEL_8:
    swift_beginAccess();
    v17 = a1;
    sub_1B13C4AEC(a3);
    sub_1B1481CE4();
    v18 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    sub_1B1481D74(v18);
    v19 = *(_QWORD *)v14;
    *(_QWORD *)(v19 + 16) = v18 + 1;
    v20 = (_QWORD *)(v19 + 32 * v18);
    v20[4] = v17;
    v20[5] = a2;
    v20[6] = a3;
    v20[7] = a4;
    result = (id)swift_endAccess();
  }
  if ((a5 & 1) != 0)
  {
    objc_msgSend(a1, sel_willMoveToParentViewController_, v6);
    objc_msgSend(v6, sel_addChildViewController_, a1);
    result = objc_msgSend(a1, sel_view);
    if (result)
    {
      v21 = result;
      objc_msgSend(result, sel_setHidden_, 1);

      result = objc_msgSend(v6, sel_view);
      if (result)
      {
        v22 = result;
        result = objc_msgSend(a1, sel_view);
        if (result)
        {
          v23 = result;
          objc_msgSend(v22, sel_insertSubview_atIndex_, result, 0);

          return objc_msgSend(a1, sel_didMoveToParentViewController_, v6);
        }
LABEL_18:
        __break(1u);
        return result;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return result;
}

id CardSplitViewController.show(_:sender:transitionIdentifier:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  UIView_optional *v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  id (*v28)(uint64_t, void *);
  void *v29;
  void *(*v30)(uint64_t);
  uint64_t v31;

  v4 = v3;
  v8 = *(uint64_t (**)(uint64_t))a3;
  v7 = *(_QWORD *)(a3 + 8);
  v9 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    if (v9 == 1)
    {
      v14 = sub_1B14B4A94(*(_QWORD *)a3, *(_QWORD *)(a3 + 8), 1);
      v11 = v8(v14);
      v12 = v15;
    }
    else
    {
      if (v9 != 2)
        return objc_msgSend(v4, sel_showViewController_sender_, a1, a2);
      OUTLINED_FUNCTION_23_21();
      v10 = OUTLINED_FUNCTION_23_21();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v8)(&v26, v10);
      v11 = v26;
      v12 = (void *)v27;
      swift_bridgeObjectRelease();
      sub_1B1525364((uint64_t)v8, v7, 2);
    }
  }
  else
  {
    OUTLINED_FUNCTION_24_17();
    OUTLINED_FUNCTION_24_17();
    v11 = (uint64_t)v8;
    v12 = (void *)v7;
  }
  v16._countAndFlagsBits = v11;
  v16._object = v12;
  UIViewController.findSourceView(identifier:)(v13, v16);
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    v19 = (void *)objc_opt_self();
    v20 = OUTLINED_FUNCTION_0_12();
    swift_unknownObjectWeakInit();
    v21 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v8;
    *(_QWORD *)(v21 + 32) = v7;
    *(_BYTE *)(v21 + 40) = v9;
    *(_QWORD *)(v21 + 48) = v18;
    v30 = sub_1B15253D4;
    v31 = v21;
    v26 = MEMORY[0x1E0C809B0];
    v27 = 1107296256;
    v28 = sub_1B1523F00;
    v29 = &block_descriptor_26;
    v22 = _Block_copy(&v26);
    sub_1B15253E8((uint64_t)v8, v7, v9);
    v23 = v18;
    swift_release();
    v24 = objc_msgSend(v19, sel_zoomWithSourceViewProvider_, v22);
    _Block_release(v22);
    objc_msgSend(a1, sel__setPreferredTransition_, v24);

  }
  sub_1B1525364((uint64_t)v8, v7, v9);
  return objc_msgSend(v4, sel_showViewController_sender_, a1, a2);
}

void *sub_1B1523DF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void *a4, char a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  UIView_optional *v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v26[3];

  v10 = a2 + 16;
  swift_beginAccess();
  v11 = MEMORY[0x1B5E1F2F8](v10);
  if (!v11)
    goto LABEL_9;
  v12 = (void *)v11;
  if (a5)
  {
    v13 = swift_retain();
    if (a5 == 1)
    {
      v14 = a3(v13);
      v16 = v15;
      v17 = (uint64_t)a3;
      v18 = (uint64_t)a4;
      v19 = 1;
    }
    else
    {
      ((void (*)(_QWORD *__return_ptr, uint64_t))a3)(v26, v13);
      v14 = v26[0];
      v16 = (void *)v26[1];
      swift_bridgeObjectRelease();
      v17 = (uint64_t)a3;
      v18 = (uint64_t)a4;
      v19 = 2;
    }
    sub_1B14B497C(v17, v18, v19);
    a3 = (uint64_t (*)(uint64_t))v14;
    a4 = v16;
  }
  else
  {
    sub_1B16B9740();
  }
  v21._countAndFlagsBits = (uint64_t)a3;
  v21._object = a4;
  UIViewController.findSourceView(identifier:)(v20, v21);
  v23 = v22;

  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_9:
    v24 = a6;
    return a6;
  }
  return (void *)v23;
}

id sub_1B1523F00(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

double sub_1B1523F50@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  double result;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  void *v11;
  id v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  if (a1)
  {
    sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
    sub_1B13CC6B4(0, &qword_1ED17A9F8);
    v4 = a1;
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*((_QWORD *)&v14 + 1))
      {
        sub_1B13C06D0(&v13, a2);
        return result;
      }
    }
    else
    {
      v15 = 0;
      v13 = 0u;
      v14 = 0u;
    }
    sub_1B140625C((uint64_t)&v13, (uint64_t)&unk_1ED17B630, (uint64_t)&qword_1ED17A9F8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(_QWORD))sub_1B13E4534);
    objc_opt_self();
    v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v4;
      v9 = objc_msgSend(v7, sel_childViewControllers);
      v10 = sub_1B16B9B54();

      if (v10 >> 62)
      {
        sub_1B16B9740();
        v11 = (void *)sub_1B16BA76C();
        swift_bridgeObjectRelease();
        if (v11)
          goto LABEL_10;
      }
      else
      {
        v11 = *(void **)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v11)
        {
LABEL_10:
          sub_1B13C6B9C(0, (v10 & 0xC000000000000001) == 0, v10);
          if ((v10 & 0xC000000000000001) != 0)
            v12 = (id)MEMORY[0x1B5E1DF60](0, v10);
          else
            v12 = *(id *)(v10 + 32);
          v11 = v12;
        }
      }
      swift_bridgeObjectRelease();
      sub_1B1523F50(v11);

      return result;
    }
  }
  else
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    sub_1B140625C((uint64_t)&v13, (uint64_t)&unk_1ED17B630, (uint64_t)&qword_1ED17A9F8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(_QWORD))sub_1B13E4534);
  }
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void sub_1B1524168(void *a1, _QWORD *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  unsigned __int8 v9;
  char v10;
  int v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  unsigned int v18;
  void *v19;
  void *v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  unsigned __int8 v35;
  void *v36;
  id v37;
  char v38;
  id v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  char v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  unsigned __int8 v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  char v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  char v71;

  v4 = objc_msgSend(a1, sel_view);
  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x1B15249B4);
  }
  v5 = v4;
  objc_msgSend(v4, sel_setHidden_, 0);

  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v9 = objc_msgSend(Strong, sel_isCollapsed);

  v71 = v9 ^ 1;
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v7 + 16))(&v70, &v71, v6, v7);
  v10 = v70;
  v11 = v70 >> 6;
  if ((v11 - 2) < 2)
  {
    v12 = objc_msgSend(a1, sel_presentationController);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_ts_containerIgnoresDirectTouchEvents_, 1);

    }
    v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_1ED1855B0 != -1)
      swift_once();
    v15 = sub_1B16B7910();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED185598);
    v16 = (void *)sub_1B16B78D4();
    objc_msgSend(v14, sel_postNotification_, v16);

    v17 = (void *)swift_unknownObjectUnownedLoadStrong();
    v18 = objc_msgSend(v17, sel_isCollapsed);

    v19 = (void *)swift_unknownObjectUnownedLoadStrong();
    LOBYTE(v70) = (v10 & 1) != 0 && !v18;
    v29 = (void *)sub_1B1522810((char *)&v70);

    if (v29)
    {
      v69 = v29;
      UIViewController.topPresentedViewController.getter();
      v31 = v30;

      v32 = v31;
      objc_msgSend(v32, sel_presentViewController_animated_completion_, a1, 1, 0);

LABEL_16:
      return;
    }
    return;
  }
  if (!v11)
  {
    v20 = (void *)swift_unknownObjectUnownedLoadStrong();
    v21 = (char *)swift_unknownObjectUnownedLoadStrong();
    v22 = *(id *)&v21[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

    sub_1B14C67D8(v23);
    v25 = v24;

    LOBYTE(v22) = sub_1B15249D4(v25, a1);
    v26 = (char *)swift_unknownObjectUnownedLoadStrong();
    v27 = *(id *)&v26[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

    if ((v22 & 1) != 0)
    {
      sub_1B13ACABC(v28, (char *)&v70);

      __asm { BR              X10 }
    }
    LOBYTE(v70) = v10;
    CardContainerController.pushCard(_:to:animated:completion:)();

    return;
  }
  v33 = (void *)swift_unknownObjectUnownedLoadStrong();
  v34 = (void *)swift_unknownObjectUnownedLoadStrong();
  v35 = objc_msgSend(v34, sel_isCollapsed);

  LOBYTE(v70) = v35 ^ 1;
  v69 = (id)sub_1B1522810((char *)&v70);

  if (!v69)
    return;
  if ((v10 & 1) == 0)
  {
    v36 = (void *)swift_unknownObjectUnownedLoadStrong();
    v37 = objc_msgSend(v69, sel_visibleViewController);
    v38 = sub_1B15249D4(v37, a1);

    if ((v38 & 1) == 0)
      objc_msgSend(v69, sel_showViewController_sender_, a1, 0);
    goto LABEL_16;
  }
  v39 = objc_msgSend(v69, sel_viewControllers);
  sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
  v40 = sub_1B16B9B54();

  if (v40 >> 62)
  {
    sub_1B16B9740();
    v42 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
    if (v42)
      goto LABEL_25;
LABEL_29:
    swift_bridgeObjectRelease();
    v68 = 0;
    goto LABEL_30;
  }
  if (!*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_29;
LABEL_25:
  sub_1B13C6B9C(0, (v40 & 0xC000000000000001) == 0, v40);
  if ((v40 & 0xC000000000000001) != 0)
    v41 = (id)MEMORY[0x1B5E1DF60](0, v40);
  else
    v41 = *(id *)(v40 + 32);
  v68 = v41;
  swift_bridgeObjectRelease();
LABEL_30:
  objc_opt_self();
  v43 = (void *)swift_dynamicCastObjCClass();
  if (v43)
  {
    v44 = objc_msgSend(v43, sel_topViewController);
    if (!v44)
      goto LABEL_39;
  }
  else
  {
    v44 = a1;
  }
  static Accessibility.Notifications.blockNotification(_:forInterval:)(*MEMORY[0x1E0DC45C0], 1.0);
  v45 = (void *)swift_unknownObjectUnownedLoadStrong();
  v46 = v44;
  v47 = sub_1B15249D4(v68, v44);

  if ((v47 & 1) != 0)
  {
    v48 = objc_msgSend(v69, sel_viewControllers);
    v49 = sub_1B16B9B54();

    if (v49 >> 62)
    {
      sub_1B16B9740();
      v50 = sub_1B16BA76C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v50 < 2)
    {

      goto LABEL_46;
    }

LABEL_39:
LABEL_46:

    return;
  }
  v51 = (void *)swift_unknownObjectUnownedLoadStrong();
  v52 = objc_msgSend(v51, sel_isCollapsed);

  LOBYTE(v70) = v52 ^ 1;
  if (!sub_1B1524CE8((char *)&v70))
    objc_msgSend(v69, sel_dismissViewControllerAnimated_completion_, 0, 0);
  sub_1B13C5C9C(0, (unint64_t *)&qword_1ED186F90, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1B16C95D0;
  *(_QWORD *)(v53 + 32) = v46;
  v70 = v53;
  sub_1B16B9B78();
  v67 = v46;
  v54 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_setViewControllers_, v54);

  if (v68)
  {
    v55 = v68;
    v56 = sub_1B14AD740(v55, 0);
    if (v56)
    {
      v60 = (void *)v56;
      v61 = v57;
      v62 = v58;
      v63 = v59;
      v64 = (void *)swift_unknownObjectUnownedLoadStrong();
      v65 = v67;
      v66 = sub_1B16BA214();

      sub_1B152395C(v60, v61, v62, v63, (v66 & 1) == 0);
      sub_1B13B9100(v62);
      goto LABEL_16;
    }

  }
  else
  {

  }
}

uint64_t sub_1B15249D4(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;

  if (!a1
    || (v28[0] = a1,
        sub_1B13A1818(0, (unint64_t *)&qword_1ED183800),
        sub_1B13CC6B4(0, (unint64_t *)&qword_1ED17E230),
        v4 = a1,
        (swift_dynamicCast() & 1) == 0))
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    goto LABEL_23;
  }
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_23:
    sub_1B140625C((uint64_t)&v25, (uint64_t)&qword_1ED184C10, (uint64_t)&qword_1ED17E230, MEMORY[0x1E0DB3548], (uint64_t (*)(_QWORD))sub_1B13E4534);
LABEL_24:
    v20 = 0;
    return v20 & 1;
  }
  sub_1B13C06D0(&v25, (uint64_t)v28);
  if (!a2 || (v5 = a2, (swift_dynamicCast() & 1) == 0))
  {
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
    goto LABEL_27;
  }
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_27:
    sub_1B140625C((uint64_t)&v22, (uint64_t)&qword_1ED184C10, (uint64_t)&qword_1ED17E230, MEMORY[0x1E0DB3548], (uint64_t (*)(_QWORD))sub_1B13E4534);
LABEL_28:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    goto LABEL_24;
  }
  sub_1B13C06D0(&v22, (uint64_t)&v25);
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v6 = sub_1B16B81B0();
  if (v6 == 0x296C6C756E28 && v7 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    sub_1B13E2FE4((uint64_t)&v25, (uint64_t)&v22);
    goto LABEL_30;
  }
  v9 = sub_1B16BA910(v6, v7, 0x296C6C756E28);
  swift_bridgeObjectRelease();
  sub_1B13E2FE4((uint64_t)&v25, (uint64_t)&v22);
  if ((v9 & 1) != 0)
  {
LABEL_30:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    goto LABEL_31;
  }
  __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
  v10 = sub_1B16B81B0();
  if (v10 == 0x296C6C756E28 && v11 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  v13 = sub_1B16BA910(v10, v11, 0x296C6C756E28);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  if ((v13 & 1) != 0)
  {
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
    goto LABEL_28;
  }
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v14 = sub_1B16B81B0();
  v16 = v15;
  __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
  v17 = sub_1B16B81B0();
  if (v14 == v17 && v16 == v18)
    v20 = 1;
  else
    v20 = sub_1B16BA910(v14, v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v20 & 1;
}

BOOL sub_1B1524CE8(char *a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  __int128 v7[2];
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = *a1;
  UIViewController.topPresentedViewController.getter();
  v9 = v2;
  sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
  sub_1B13CC6B4(0, &qword_1ED17A9F8);
  if (swift_dynamicCast())
  {
    sub_1B13C06D0(v7, (uint64_t)v10);
    v3 = v11;
    v4 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    LOBYTE(v9) = v1;
    (*(void (**)(__int128 *__return_ptr, uint64_t *, uint64_t, uint64_t))(v4 + 16))(v7, &v9, v3, v4);
    v5 = LOBYTE(v7[0]) > 0xBFu;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    sub_1B140625C((uint64_t)v7, (uint64_t)&unk_1ED17B630, (uint64_t)&qword_1ED17A9F8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(_QWORD))sub_1B13E4534);
    return 0;
  }
  return v5;
}

void CardSplitViewController.currentSplitViewFocus.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus);
}

Swift::Void __swiftcall CardSplitViewController.toggleSplitViewFocus(to:)(TeaUI::CardSplitViewFocus to)
{
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  id v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;

  v3 = *(_BYTE *)to;
  v4 = (uint64_t)OUTLINED_FUNCTION_2_0(to, sel_viewControllers);
  OUTLINED_FUNCTION_10(v4, (unint64_t *)&qword_1ED183800);
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_15_4();
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_6_18();
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = OUTLINED_FUNCTION_20_0();
  if (v4 < 2)
  {
    OUTLINED_FUNCTION_15_2();
    return;
  }
  if ((v3 & 1) != 0)
  {
    v6 = OUTLINED_FUNCTION_2_0(v5, sel_viewControllers);
    OUTLINED_FUNCTION_9_6();
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_17_24();
    if (v6)
      OUTLINED_FUNCTION_40_11();
    v7 = *(id *)(v2 + 40);
    OUTLINED_FUNCTION_6_18();
    v49 = sub_1B13A3950(0);

    v15 = OUTLINED_FUNCTION_12_1(v8, sel_canBecomeFirstResponder, v9, v10, v11, v12, v13, v14, v45, v49);
    if (!v15)
      goto LABEL_16;
    v22 = (uint64_t)OUTLINED_FUNCTION_12_1(v15, sel_isFirstResponder, v16, v17, v18, v19, v20, v21, v46, v50);
    if ((v22 & 1) == 0)
      v22 = (uint64_t)OUTLINED_FUNCTION_12_1(v22, sel_becomeFirstResponder, v23, v24, v25, v26, v27, v28, v47, v50);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus) = 1;
    v29 = OUTLINED_FUNCTION_2_0(v22, sel_childViewControllers);
    OUTLINED_FUNCTION_9_6();
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_19_27();
    goto LABEL_15;
  }
  v50 = sub_1B13A3950(*(void **)(v1 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController));
  v30 = objc_msgSend(v50, sel_canBecomeFirstResponder);
  if (v30)
  {
    v37 = (uint64_t)OUTLINED_FUNCTION_12_1(v30, sel_isFirstResponder, v31, v32, v33, v34, v35, v36, v45, v50);
    if ((v37 & 1) == 0)
      v37 = (uint64_t)OUTLINED_FUNCTION_12_1(v37, sel_becomeFirstResponder, v38, v39, v40, v41, v42, v43, v48, v50);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus) = 0;
    v44 = OUTLINED_FUNCTION_2_0(v37, sel_childViewControllers);
    OUTLINED_FUNCTION_9_6();
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_47_14();
LABEL_15:
    OUTLINED_FUNCTION_29();
  }
LABEL_16:
  OUTLINED_FUNCTION_26_2(v50);
}

void sub_1B1524FCC(_BYTE *a1@<X8>)
{
  CardSplitViewController.currentSplitViewFocus.getter(a1);
}

void sub_1B1524FEC(TeaUI::CardSplitViewFocus a1)
{
  CardSplitViewController.toggleSplitViewFocus(to:)(a1);
}

uint64_t CardSplitViewController.keyCommands.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (uint64_t)objc_msgSend(v0, sel_isCollapsed);
  if ((v1 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_10(v1, (unint64_t *)&qword_1ED1837A8);
  sub_1B14485F4(9, 0xE100000000000000, 0, (uint64_t)sel_toggleResponderPane);
  v4 = v3;
  sub_1B14485F4(9, 0xE100000000000000, 0x20000, (uint64_t)sel_toggleResponderPane);
  v6 = v5;
  sub_1B14485F4(83, 0xE100000000000000, 1572864, (uint64_t)sel_toggleSideBarVisibility);
  v8 = v7;
  sub_1B13C5C9C(0, (unint64_t *)&qword_1ED186F90, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = OUTLINED_FUNCTION_25();
  *(_OWORD *)(v9 + 16) = xmmword_1B16CE8A0;
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v8;
  v10 = v9;
  sub_1B16B9B78();
  return v10;
}

void sub_1B152517C()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;

  v2 = (uint64_t)OUTLINED_FUNCTION_2_0((uint64_t)objc_msgSend(v0, sel_togglePrimaryViewVisibilityAnimated_, 1), sel_viewControllers);
  OUTLINED_FUNCTION_10(v2, (unint64_t *)&qword_1ED183800);
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_15_4();
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_6_18();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = OUTLINED_FUNCTION_20_0();
  if (v2 < 2)
  {
    OUTLINED_FUNCTION_15_2();
  }
  else
  {
    v4 = OUTLINED_FUNCTION_2_0(v3, sel_viewControllers);
    OUTLINED_FUNCTION_9_6();
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_17_24();
    if (v4)
      OUTLINED_FUNCTION_40_11();
    v5 = *(id *)(v1 + 40);
    OUTLINED_FUNCTION_6_18();
    v32 = sub_1B13A3950(0);

    v13 = OUTLINED_FUNCTION_12_1(v6, sel_canBecomeFirstResponder, v7, v8, v9, v10, v11, v12, v29, v32);
    if (v13)
    {
      v20 = OUTLINED_FUNCTION_12_1(v13, sel_isFirstResponder, v14, v15, v16, v17, v18, v19, v30, v33);
      if ((v20 & 1) == 0)
      {
        v27 = OUTLINED_FUNCTION_12_1(v20, sel_becomeFirstResponder, v21, v22, v23, v24, v25, v26, v31, v33);
        *((_BYTE *)v0 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus) = 1;
        v28 = OUTLINED_FUNCTION_2_0((uint64_t)v27, sel_childViewControllers);
        OUTLINED_FUNCTION_9_6();
        OUTLINED_FUNCTION_38_3();
        OUTLINED_FUNCTION_19_27();
        OUTLINED_FUNCTION_29();
      }
    }
    OUTLINED_FUNCTION_26_2(v33);
  }
}

uint64_t sub_1B1525304()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_1B1525338()
{
  uint64_t v0;
  void (*v1)(void);

  v1 = *(void (**)(void))(v0 + 32);
  if (v1)
    v1();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B152535C(void *a1, char *a2)
{
  return sub_1B1523768(a1, a2);
}

uint64_t sub_1B1525364(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B14B497C(a1, a2, a3);
  return a1;
}

uint64_t sub_1B1525378()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B152539C()
{
  uint64_t v0;

  swift_release();
  sub_1B14B497C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));

  return swift_deallocObject();
}

void *sub_1B15253D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1523DF4(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void **)(v1 + 32), *(_BYTE *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1B15253E8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B14B4A94(a1, a2, a3);
  return a1;
}

uint64_t method lookup function for CardSplitViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CardSplitViewController.__allocating_init(cardContainerController:commandContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t storeEnumTagSinglePayload for CardSplitViewController.Event(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1525450 + 4 * byte_1B16CE8B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1525470 + 4 * byte_1B16CE8B5[v4]))();
}

_BYTE *sub_1B1525450(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1525470(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1525478(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1525480(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1525488(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1525490(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CardSplitViewController.Event()
{
  return &type metadata for CardSplitViewController.Event;
}

uint64_t sub_1B15254AC()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15254D0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1B15254FC()
{
  uint64_t v0;

  sub_1B1523880(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1B1525508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED17E268;
  if (!qword_1ED17E268)
  {
    v1 = sub_1B16B863C();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DB4258], v1);
    atomic_store(result, (unint64_t *)&qword_1ED17E268);
  }
  return result;
}

uint64_t sub_1B1525548()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

void sub_1B152557C()
{
  uint64_t v0;

  sub_1B1524168(*(void **)(v0 + 16), (_QWORD *)(v0 + 24));
}

void sub_1B152558C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B15225A8(a1, a2, v2);
}

uint64_t sub_1B1525594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B1522604(a1, a2, v2);
}

void sub_1B152559C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1B15226A0(v1, a1);
}

void sub_1B15255A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B1522770(a1, a2, v2);
}

void *sub_1B15255AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B15229D0(a1, a2, v2);
}

BOOL static HighlightStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HighlightStyle.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t HighlightStyle.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B152564C()
{
  unint64_t result;

  result = qword_1EEF32E40;
  if (!qword_1EEF32E40)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for HighlightStyle, &type metadata for HighlightStyle);
    atomic_store(result, (unint64_t *)&qword_1EEF32E40);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HighlightStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15256D4 + 4 * byte_1B16CE985[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1525708 + 4 * byte_1B16CE980[v4]))();
}

uint64_t sub_1B1525708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1525710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1525718);
  return result;
}

uint64_t sub_1B1525724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B152572CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1525730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1525738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HighlightStyle()
{
  return &type metadata for HighlightStyle;
}

uint64_t dispatch thunk of Highlightable.highlightStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlightable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlighted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlighted.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlighted.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

id sub_1B152577C(uint64_t a1)
{
  return sub_1B15257C0(a1, (SEL *)&selRef_ts_presentationTransitionDidEndNotification, &qword_1ED183828);
}

id static NSNotificationName.presentationTransitionDidEnd.getter()
{
  return sub_1B13A666C(&qword_1ED184950, (id *)&qword_1ED183828);
}

id sub_1B15257AC(uint64_t a1)
{
  return sub_1B15257C0(a1, (SEL *)&selRef_ts_dismissalTransitionDidEndNotification, &qword_1ED183820);
}

id sub_1B15257C0(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id result;
  uint64_t v5;

  result = objc_msgSend((id)objc_opt_self(), *a2);
  v5 = (uint64_t)result;
  if (!result)
  {
    sub_1B16B9860();
    v5 = sub_1B16B983C();
    result = (id)swift_bridgeObjectRelease();
  }
  *a3 = v5;
  return result;
}

id static NSNotificationName.dismissalTransitionDidEnd.getter()
{
  return sub_1B13A666C(&qword_1ED184A78, (id *)&qword_1ED183820);
}

uint64_t BlueprintTraversalCollectionBuilder.__allocating_init(collectionProvider:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_1B1525874(char *a1, uint64_t (*a2)(uint64_t, char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t TupleTypeMetadata2;

  v12 = *(_QWORD *)a1;
  type metadata accessor for BlueprintItem(255, a6, a10, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v12, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t BlueprintTraversalCollectionBuilder.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t BlueprintTraversalCollectionBuilder.__deallocating_deinit()
{
  BlueprintTraversalCollectionBuilder.deinit();
  return swift_deallocClassInstance();
}

void BlueprintTraversalCollectionBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutOptions:)()
{
  BlueprintTraversalCollectionBuilder.build<A, B, C, D>(blueprint:layoutBlueprint:)();
}

uint64_t (*sub_1B152596C())()
{
  return sub_1B141D1AC;
}

void sub_1B1525980()
{
  BlueprintTraversalCollectionBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutOptions:)();
}

uint64_t (*sub_1B15259A8())()
{
  return sub_1B141D1AC;
}

uint64_t sub_1B15259C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15259EC()
{
  uint64_t v0;
  __n128 v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OUTLINED_FUNCTION_1_69();
  return sub_1B1525874(v2, *(uint64_t (**)(uint64_t, char *))(v0 + 88), *(_QWORD *)(v0 + 96), v3, v4, v5, v6, v7, v1.n128_i64[0], v1.n128_i64[1]);
}

uint64_t method lookup function for BlueprintTraversalCollectionBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintTraversalCollectionBuilder.__allocating_init(collectionProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1B1525A2C(uint64_t a1)
{
  uint64_t v2;

  sub_1B1525A68();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B1525A68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF32E08)
  {
    sub_1B13EAE04();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF32E08);
  }
}

BOOL static ScrollDirection.Horizontal.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ScrollDirection.Horizontal.hash(into:)()
{
  return sub_1B16BAA54();
}

void ScrollDirection.horizontal.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void ScrollDirection.vertical.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

TeaUI::ScrollDirection __swiftcall ScrollDirection.init(horizontal:vertical:)(TeaUI::ScrollDirection::Horizontal horizontal, TeaUI::ScrollDirection::Vertical vertical)
{
  _BYTE *v2;
  char v3;
  TeaUI::ScrollDirection result;

  v3 = *(_BYTE *)vertical;
  *v2 = *(_BYTE *)horizontal;
  v2[1] = v3;
  result.horizontal = horizontal;
  return result;
}

TeaUI::ScrollDirection __swiftcall ScrollDirection.init(fromContentOffset:toContentOffset:)(CGPoint fromContentOffset, CGPoint toContentOffset)
{
  char *v2;
  char v3;
  char v4;
  TeaUI::ScrollDirection result;

  v3 = 2 * (toContentOffset.x >= fromContentOffset.x);
  if (fromContentOffset.x < toContentOffset.x)
    v3 = 1;
  v4 = 2 * (toContentOffset.y >= fromContentOffset.y);
  if (fromContentOffset.y < toContentOffset.y)
    v4 = 1;
  *v2 = v3;
  v2[1] = v4;
  return result;
}

unint64_t sub_1B1525B70()
{
  unint64_t result;

  result = qword_1EEF32E48;
  if (!qword_1EEF32E48)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ScrollDirection.Vertical, &type metadata for ScrollDirection.Vertical);
    atomic_store(result, (unint64_t *)&qword_1EEF32E48);
  }
  return result;
}

unint64_t sub_1B1525BB0()
{
  unint64_t result;

  result = qword_1EEF32E50;
  if (!qword_1EEF32E50)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ScrollDirection.Horizontal, &type metadata for ScrollDirection.Horizontal);
    atomic_store(result, (unint64_t *)&qword_1EEF32E50);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScrollDirection(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 65282 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65282 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65283;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrollDirection(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1525CC4 + 4 * byte_1B16CEAB9[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1B1525CF8 + 4 * asc_1B16CEAB4[v4]))();
}

uint64_t sub_1B1525CF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1B1525D00(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1B1525D08);
  return result;
}

uint64_t sub_1B1525D14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1B1525D1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1525D20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1B1525D28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for ScrollDirection()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for ScrollDirection.Vertical()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t _s5TeaUI15ScrollDirectionV10HorizontalOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1525D9C + 4 * byte_1B16CEAC3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1525DD0 + 4 * byte_1B16CEABE[v4]))();
}

uint64_t sub_1B1525DD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1525DD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1525DE0);
  return result;
}

uint64_t sub_1B1525DEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1525DF4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1525DF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1525E00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ScrollDirection.Horizontal()
{
  OUTLINED_FUNCTION_11_0();
}

BOOL static CoverView.Animation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CoverView.Animation.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t CoverView.Animation.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

Swift::Void __swiftcall CoverView.layout(with:)(TeaUI::CoverViewOptions with)
{
  unsigned __int8 *v1;
  char __dst[88];

  sub_1B13E3404(v1, __dst);
  __asm { BR              X10 }
}

uint64_t sub_1B1525F00()
{
  void *v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v2);
}

unint64_t sub_1B1526004()
{
  unint64_t result;

  result = qword_1EEF32E58;
  if (!qword_1EEF32E58)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CoverView.Animation, &type metadata for CoverView.Animation);
    atomic_store(result, (unint64_t *)&qword_1EEF32E58);
  }
  return result;
}

id *assignWithTake for CoverView(id *__dst, id *__src)
{
  id *v2;
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = __dst;
  if (__dst != __src)
  {
    v4 = *((unsigned __int8 *)__dst + 81);
    if (v4 >= 7)
      v4 = *(_DWORD *)__dst + 7;
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        __dst = v2 + 5;
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v2 + 2));
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __dst = v2 + 4;
        goto LABEL_8;
      case 3u:
      case 6u:
LABEL_8:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        break;
      case 4u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
LABEL_10:
        swift_bridgeObjectRelease();
        break;
      case 5u:

        break;
      default:
        break;
    }
    v5 = *((unsigned __int8 *)__src + 81);
    if (v5 >= 7)
      v5 = *(_DWORD *)__src + 7;
    switch(v5)
    {
      case 0u:
        memcpy(v2, __src, 0x51uLL);
        *((_BYTE *)v2 + 81) = 0;
        return v2;
      case 1u:
        memcpy(v2, __src, 0x48uLL);
        v6 = 1;
        goto LABEL_23;
      case 2u:
        memcpy(v2, __src, 0x49uLL);
        v6 = 2;
        goto LABEL_23;
      case 3u:
        v7 = *((_OWORD *)__src + 1);
        *(_OWORD *)v2 = *(_OWORD *)__src;
        *((_OWORD *)v2 + 1) = v7;
        v2[4] = __src[4];
        v6 = 3;
        goto LABEL_23;
      case 4u:
        v8 = *((_OWORD *)__src + 1);
        *(_OWORD *)v2 = *(_OWORD *)__src;
        *((_OWORD *)v2 + 1) = v8;
        *((_OWORD *)v2 + 2) = *((_OWORD *)__src + 2);
        v2[6] = __src[6];
        v6 = 4;
        goto LABEL_23;
      case 5u:
        *v2 = *__src;
        v6 = 5;
        goto LABEL_23;
      case 6u:
        v9 = *((_OWORD *)__src + 1);
        *(_OWORD *)v2 = *(_OWORD *)__src;
        *((_OWORD *)v2 + 1) = v9;
        v2[4] = __src[4];
        v6 = 6;
LABEL_23:
        *((_BYTE *)v2 + 81) = v6;
        break;
      default:
        memcpy(v2, __src, 0x52uLL);
        break;
    }
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for CoverView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 82))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 81);
  if (v3 >= 8)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CoverView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_WORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 82) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 82) = 0;
    if (a2)
      *(_BYTE *)(result + 81) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B15262A0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 81);
  if (result >= 7)
    return (*(_DWORD *)a1 + 7);
  return result;
}

uint64_t storeEnumTagSinglePayload for CoverView.Animation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1526308 + 4 * byte_1B16CEC23[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B152633C + 4 * byte_1B16CEC1E[v4]))();
}

uint64_t sub_1B152633C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1526344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B152634CLL);
  return result;
}

uint64_t sub_1B1526358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1526360);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1526364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B152636C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

id TappableLabel.onTap.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5TeaUI13TappableLabel_onTap);
}

id static TappableLabel.tappableLabel()()
{
  objc_class *v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(v0), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setUserInteractionEnabled_, 1);

  return v1;
}

id TappableLabel.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id TappableLabel.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;
  id v7;
  char *v8;
  double v9;
  objc_super *v10;
  SEL v11;

  OUTLINED_FUNCTION_57();
  v1 = OUTLINED_FUNCTION_4();
  v2 = OBJC_IVAR____TtC5TeaUI13TappableLabel_onTap;
  sub_1B13F279C(0, v3, v4, v5);
  v7 = objc_allocWithZone(v6);
  v8 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v7, sel_init);

  v9 = OUTLINED_FUNCTION_54();
  return objc_msgSendSuper2(v10, v11, v9, v8, v1);
}

id TappableLabel.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TappableLabel.init(coder:)(void *a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class v8;
  id v9;
  char *v10;
  id v11;
  objc_super v13;

  v3 = (objc_class *)OUTLINED_FUNCTION_4();
  v4 = OBJC_IVAR____TtC5TeaUI13TappableLabel_onTap;
  sub_1B13F279C(0, v5, v6, v7);
  v9 = objc_allocWithZone(v8);
  v10 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v9, sel_init);

  v13.receiver = v10;
  v13.super_class = v3;
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

void sub_1B15265EC()
{
  uint64_t v0;

}

id TappableLabel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall TappableLabel.prepareForReuse()()
{

}

void sub_1B1526664()
{
  TappableLabel.prepareForReuse()();
}

uint64_t TappableLabel.isAccessibilityElement.getter()
{
  return 1;
}

uint64_t (*TappableLabel.isAccessibilityElement.modify(_BYTE *a1))(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  *a1 = 1;
  return nullsub_1;
}

uint64_t TappableLabel.accessibilityTraits.getter()
{
  return *MEMORY[0x1E0DC4688];
}

uint64_t (*TappableLabel.accessibilityTraits.modify(_QWORD *a1))(_QWORD, _QWORD, _QWORD, _QWORD, double)
{
  *a1 = *MEMORY[0x1E0DC4688];
  return nullsub_1;
}

uint64_t TappableLabel.accessibilityLabel.getter()
{
  void *v0;

  return sub_1B15267F8(v0);
}

uint64_t TappableLabel.accessibilityLabel.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*TappableLabel.accessibilityLabel.modify(uint64_t *a1))()
{
  void *v1;
  uint64_t v3;

  *a1 = sub_1B15267F8(v1);
  a1[1] = v3;
  return destroy for TabBarSplitViewPresentation.BarItem;
}

uint64_t sub_1B15267F8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B16B9860();

  return v3;
}

uint64_t type metadata accessor for TappableLabel()
{
  return objc_opt_self();
}

void SettingsNavigationController.__allocating_init(rootViewController:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithRootViewController_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void SettingsViewController.__allocating_init(layout:actionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_13_1();
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  OUTLINED_FUNCTION_93_3();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_18_28(v5, v6, v7);
  OUTLINED_FUNCTION_31_16();
  __swift_destroy_boxed_opaque_existential_1(a2);
  OUTLINED_FUNCTION_67();
}

id SettingsNavigationController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;

  v2 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v2);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v2)
LABEL_3:
    v2 = OUTLINED_FUNCTION_48_11();
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v2);
}

id SettingsNavigationController.init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *v5;
  uint64_t ObjCClassFromMetadata;
  objc_super v8;

  v5 = (objc_class *)OUTLINED_FUNCTION_4();
  if (a1)
    a1 = OUTLINED_FUNCTION_48_11();
  if (a2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  else
    ObjCClassFromMetadata = 0;
  v8.receiver = v2;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, sel_initWithNavigationBarClass_toolbarClass_, a1, ObjCClassFromMetadata);
}

void SettingsNavigationController.init(rootViewController:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_73_0((uint64_t)v7.super_class, sel_initWithRootViewController_, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_7();
}

id SettingsNavigationController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  objc_class *v6;
  void *v7;
  id v8;
  objc_super v10;

  v6 = (objc_class *)OUTLINED_FUNCTION_4();
  if (a2)
  {
    v7 = (void *)sub_1B16B983C();
    OUTLINED_FUNCTION_17();
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = v6;
  v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, v7, a3);

  return v8;
}

void SettingsNavigationController.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_73_0((uint64_t)v7.super_class, sel_initWithCoder_, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_7();
}

void SettingsViewController.init(layout:actionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  OUTLINED_FUNCTION_93_3();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_18_28(v5, v6, v7);
  OUTLINED_FUNCTION_31_16();
  __swift_destroy_boxed_opaque_existential_1(a2);
  OUTLINED_FUNCTION_67();
}

void SettingsViewController.__allocating_init(coder:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void SettingsViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;
  void (**v2)(uint64_t, void *);

  v1 = OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v2 = (void (**)(uint64_t, void *))&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame];
  *v2 = sub_1B1527488;
  v2[1] = 0;

  OUTLINED_FUNCTION_61_9();
  __break(1u);
}

Swift::Void __swiftcall SettingsViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  BOOL v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  char *v30;
  void *v31;
  id v32;
  _QWORD v33[3];
  objc_class *v34;
  objc_super v35;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_4();
  v35.receiver = v0;
  v35.super_class = v2;
  objc_msgSendSuper2(&v35, sel_viewDidLoad);
  v3 = objc_msgSend(v0, sel_navigationItem);
  v4 = OUTLINED_FUNCTION_32_0((uint64_t)v3, sel_navigationItem);
  sub_1B152A798(v4);
  if (!v6)
  {
    v5 = 0x73676E6974746553;
    v6 = 0xE800000000000000;
  }
  sub_1B152A808(v5, v6, v3, (SEL *)&selRef_setTitle_);

  v7 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView];
  OUTLINED_FUNCTION_89_6();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)OUTLINED_FUNCTION_11_5();
  objc_msgSend(v7, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v9);

  type metadata accessor for SwitchTableViewCell();
  swift_getObjCClassFromMetadata();
  v10 = OUTLINED_FUNCTION_23_22();
  OUTLINED_FUNCTION_2_62(v10);

  type metadata accessor for StepperTableViewCell();
  swift_getObjCClassFromMetadata();
  v11 = OUTLINED_FUNCTION_30_20();
  OUTLINED_FUNCTION_2_62(v11);

  type metadata accessor for SliderTableViewCell();
  swift_getObjCClassFromMetadata();
  v12 = OUTLINED_FUNCTION_23_22();
  OUTLINED_FUNCTION_2_62(v12);

  OUTLINED_FUNCTION_5(v13, &qword_1ED17B030);
  swift_getObjCClassFromMetadata();
  v14 = OUTLINED_FUNCTION_45_9();
  OUTLINED_FUNCTION_2_62(v14);

  v15 = OUTLINED_FUNCTION_23_22();
  OUTLINED_FUNCTION_2_62(v15);

  v16 = OUTLINED_FUNCTION_23_22();
  OUTLINED_FUNCTION_2_62(v16);

  type metadata accessor for OptionTableViewCell();
  swift_getObjCClassFromMetadata();
  v17 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_2_62(v17);

  v19 = OUTLINED_FUNCTION_32_0(v18, sel_view);
  if (v19)
  {
    v20 = v19;
    OUTLINED_FUNCTION_6_12(v19, sel_addSubview_);

    v22 = OUTLINED_FUNCTION_32_0(v21, sel_navigationController);
    if (v22
      && ((v23 = v22, v24 = objc_msgSend(v22, sel_modalPresentationStyle), v23, v24 != (id)7)
        ? (v25 = v24 == (id)2)
        : (v25 = 1),
          v25))
    {
      v26 = OUTLINED_FUNCTION_32_0((uint64_t)v22, sel_navigationItem);
      OUTLINED_FUNCTION_5((uint64_t)v26, (unint64_t *)&qword_1ED1838D0);
      v27 = sub_1B13AB3B4();
      v34 = v2;
      v33[0] = v1;
      objc_allocWithZone(MEMORY[0x1E0DC34F0]);
      v28 = v1;
      sub_1B152A5B0(v27, 0, v33, (uint64_t)sel_doDone);
    }
    else
    {
      v26 = OUTLINED_FUNCTION_32_0((uint64_t)v22, sel_navigationItem);
      v34 = v2;
      v33[0] = v1;
      objc_allocWithZone(MEMORY[0x1E0DC34F0]);
      v30 = v1;
      sub_1B152A65C(1701736260, 0xE400000000000000, 2, v33, (uint64_t)sel_doDone);
    }
    v31 = v29;
    OUTLINED_FUNCTION_6_12(v26, sel_setRightBarButtonItem_);

    v32 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter, v33[0]);
    objc_msgSend(v32, sel_addObserver_selector_name_object_, v1, sel_keyboardWillChangeFrameWithNotification_, *MEMORY[0x1E0DC4FD8], 0);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SettingsViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_8_11((uint64_t)v8.super_class, sel_viewWillAppear_, v2, v3, v4, v5, v6, v7, v8);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView], sel_reloadData);
  OUTLINED_FUNCTION_7();
}

Swift::Void __swiftcall SettingsViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_8_11((uint64_t)v8.super_class, sel_viewWillDisappear_, v2, v3, v4, v5, v6, v7, v8);
  objc_msgSend(v1, sel_becomeFirstResponder);
  objc_msgSend(v1, sel_resignFirstResponder);
  OUTLINED_FUNCTION_7();
}

Swift::Void __swiftcall SettingsViewController.viewDidLayoutSubviews()()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v4, sel_viewDidLayoutSubviews);
  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_bounds);

    OUTLINED_FUNCTION_22_10(v3, sel_setFrame_);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B15272F8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v1);
  v3 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v3 + 16) = v0;
  (*(void (**)(char *, id (*)(), uint64_t, uint64_t, uint64_t))(v2 + 24))(v0, sub_1B152AFBC, v3, v1, v2);
  return swift_release();
}

uint64_t sub_1B15273B0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1
                                                    + OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame))(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView));
}

void sub_1B1527488(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  double Height;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  id v11;
  double v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  void *v23;
  _BYTE v24[40];
  _BYTE v25[24];
  uint64_t v26;
  CGRect v27;
  CGRect v28;

  if (sub_1B16B7904())
  {
    v23 = (void *)sub_1B16B9860();
    sub_1B16BA520();
    sub_1B146AD18();
    OUTLINED_FUNCTION_7_0();
    v3 = sub_1B148EA44((uint64_t)v24);
    if (v26)
    {
      OUTLINED_FUNCTION_5(v3, qword_1ED17BEC0);
      v4 = swift_dynamicCast();
      if ((v4 & 1) != 0)
      {
        OUTLINED_FUNCTION_32_0(v4, sel_contentInset);
        OUTLINED_FUNCTION_74_6();
        Height = CGRectGetHeight(v27);
        v7 = OUTLINED_FUNCTION_32_0(v6, sel_safeAreaInsets);
        v11 = OUTLINED_FUNCTION_41_16(v9, v10, Height - v8, (uint64_t)v7, sel_setContentInset_);
        OUTLINED_FUNCTION_32_0((uint64_t)v11, sel_verticalScrollIndicatorInsets);
        OUTLINED_FUNCTION_74_6();
        v12 = CGRectGetHeight(v28);
        v14 = OUTLINED_FUNCTION_32_0(v13, sel_safeAreaInsets);
        OUTLINED_FUNCTION_41_16(v16, v17, v12 - v15, (uint64_t)v14, sel_setVerticalScrollIndicatorInsets_);

        return;
      }
    }
    else
    {
      sub_1B152AFD4((uint64_t)v25, (uint64_t)&qword_1ED188590, MEMORY[0x1E0DEE9B8] + 8, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_1B13C2E28);
    }
    v22 = OUTLINED_FUNCTION_22_10(v4, sel_setContentInset_);
    OUTLINED_FUNCTION_22_10((uint64_t)v22, sel_setVerticalScrollIndicatorInsets_);
  }
  else
  {
    v18 = *MEMORY[0x1E0DC49E8];
    v19 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v20 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v21 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    OUTLINED_FUNCTION_22_10(0, sel_setContentInset_);
    objc_msgSend(a2, sel_setVerticalScrollIndicatorInsets_, v18, v19, v20, v21);
  }
}

id _s5TeaUI28SettingsNavigationControllerC7nibName6bundleACSSSg_So8NSBundleCSgtcfC_0(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  id v6;

  v4 = v3;
  if (a2)
  {
    sub_1B16B983C();
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v3 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v3, a3);

  return v6;
}

void SettingsViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t SettingsViewController.tableView(_:shouldHighlightRowAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v12[4];

  OUTLINED_FUNCTION_33_12();
  OUTLINED_FUNCTION_96_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_6_3();
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout);
  result = sub_1B16B7D48();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(_QWORD *)(v6 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_65_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6 + v8 + *(_QWORD *)(v3 + 72) * v9, v1);
  v10 = sub_1B16B7F04();
  OUTLINED_FUNCTION_36_1(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  result = sub_1B16B7D3C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(_QWORD *)(v10 + 16))
  {
    sub_1B13E2FE4(v10 + 40 * result + 32, (uint64_t)v12);
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_88(v12, v12[3]);
    v11 = sub_1B16B7FA0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return v11 & 1;
  }
LABEL_9:
  __break(1u);
  return result;
}

unint64_t SettingsViewController.tableView(_:didSelectRowAt:)(void *a1)
{
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  id v68;
  id v69;
  id v70;
  void (*v71)(uint64_t *);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v90[40];
  _BYTE v91[40];

  v4 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OUTLINED_FUNCTION_90_6();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_0_1();
  v9 = OUTLINED_FUNCTION_33_12();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  OUTLINED_FUNCTION_52_10();
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout];
  result = sub_1B16B7D48();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (result >= *(_QWORD *)(v12 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_25_18(v3, v12 + v14 + *(_QWORD *)(v10 + 72) * v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v16 = sub_1B16B7F04();
  OUTLINED_FUNCTION_34_8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  result = sub_1B16B7D3C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (result < *(_QWORD *)(v16 + 16))
  {
    sub_1B13E2FE4(v16 + 40 * result + 32, (uint64_t)v91);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_15();
    sub_1B16B7F94();
    v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v2, v6);
    if (v17 == *MEMORY[0x1E0DB56B0])
    {
      OUTLINED_FUNCTION_7_45();
      v18 = *v2;
      v19 = (void (*)(uint64_t))v2[3];
      swift_release();
      v19(1);
      v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
      v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
      OUTLINED_FUNCTION_88(&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, v20, v21);
      OUTLINED_FUNCTION_113();
      v22 = a1;
      objc_msgSend(a1, sel_reloadData);
      OUTLINED_FUNCTION_58_0();
      goto LABEL_14;
    }
    v22 = a1;
    if (v17 == *MEMORY[0x1E0DB5690])
    {
      OUTLINED_FUNCTION_7_45();
      OUTLINED_FUNCTION_72_6((uint64_t)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler]);
      v23 = objc_allocWithZone(ObjectType);
      OUTLINED_FUNCTION_37_13();
      OUTLINED_FUNCTION_54_11();
      MEMORY[0x1E0C80A78](v24, v25);
      OUTLINED_FUNCTION_20_29(v26, v27, v86);
      v28 = OUTLINED_FUNCTION_35_15();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      v29 = OUTLINED_FUNCTION_27_21();
      sub_1B152A808(v29, v30, v28, (SEL *)&selRef_setTitle_);
      v32 = OUTLINED_FUNCTION_52_0(v31, sel_navigationController);
    }
    else
    {
      if (v17 != *MEMORY[0x1E0DB56B8])
      {
        if (v17 == *MEMORY[0x1E0DB5698])
        {
          OUTLINED_FUNCTION_7_45();
          sub_1B152ABB4();
          v45 = *(uint64_t *)((char *)v2 + *(int *)(v44 + 48));
          (*(void (**)(void))((char *)v2 + *(int *)(v44 + 64)))();
          v46 = &v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler];
          v47 = *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
          v48 = *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
          OUTLINED_FUNCTION_88(&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v47);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v45, v47, v48);
          OUTLINED_FUNCTION_113();
          objc_msgSend(a1, sel_reloadData);
          v49 = *((_QWORD *)v46 + 3);
          v50 = *((_QWORD *)v46 + 4);
          OUTLINED_FUNCTION_88(v46, v49);
          (*(void (**)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, double), _QWORD, uint64_t, uint64_t))(v50 + 24))(v1, nullsub_1, 0, v49, v50);
          swift_release();
        }
        else
        {
          if (v17 != *MEMORY[0x1E0DB5688])
          {
            if (v17 != *MEMORY[0x1E0DB5680])
            {
              OUTLINED_FUNCTION_28_0((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
            }
            OUTLINED_FUNCTION_7_45();
            v73 = *v2;
            v72 = v2[1];
            v74 = v2[2];
            v75 = v2[3];
            v76 = OUTLINED_FUNCTION_25();
            OUTLINED_FUNCTION_98_7();
            v77 = (_QWORD *)OUTLINED_FUNCTION_15_1();
            v77[2] = v74;
            v77[3] = v75;
            v77[4] = v76;
            v77[5] = v72;
            v78 = *(_QWORD *)&v4[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame];
            v79 = *(_QWORD *)&v4[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame + 8];
            objc_allocWithZone((Class)type metadata accessor for StringArrayViewController());
            swift_retain();
            swift_retain();
            swift_retain();
            v80 = sub_1B15C9390(v73, v78, v79, (uint64_t)sub_1B152AA10, (uint64_t)v77);
            OUTLINED_FUNCTION_47_15();
            v81 = sub_1B16B7F88();
            sub_1B152A808(v81, v82, v80, (SEL *)&selRef_setTitle_);
            v84 = OUTLINED_FUNCTION_52_0(v83, sel_navigationController);
            if (v84)
            {
              v85 = v84;
              OUTLINED_FUNCTION_68_9(v84, sel_pushViewController_animated_, (uint64_t)v80);

            }
            swift_release();
            OUTLINED_FUNCTION_58_0();
            v22 = a1;
LABEL_14:
            v43 = (void *)sub_1B16B7CDC();
            OUTLINED_FUNCTION_68_9(v22, sel_deselectRowAtIndexPath_animated_, (uint64_t)v43);

            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
          }
          OUTLINED_FUNCTION_7_45();
          sub_1B152AA1C(0, v51);
          v53 = (uint64_t *)((char *)v2 + v52[12]);
          v87 = v53[1];
          v88 = *v53;
          v54 = (uint64_t *)((char *)v2 + v52[16]);
          v55 = *v54;
          v56 = v54[1];
          v57 = (uint64_t *)((char *)v2 + v52[20]);
          v59 = *v57;
          v58 = v57[1];
          v60 = *(uint64_t *)((char *)v2 + v52[24]);
          v61 = (uint64_t *)((char *)v2 + v52[28]);
          v63 = *v61;
          v62 = v61[1];
          OUTLINED_FUNCTION_5((uint64_t)v52, &qword_1EEF32EC0);
          sub_1B1528044(v55, v56, v59, v58, 1);
          v65 = (void *)v64;
          OUTLINED_FUNCTION_5(v64, &qword_1EEF32EC8);
          v66 = OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_98_7();
          v67 = (_QWORD *)OUTLINED_FUNCTION_25();
          v67[2] = v66;
          v67[3] = v63;
          v67[4] = v62;
          v67[5] = v60;
          v67[6] = a1;
          swift_retain();
          v68 = a1;
          v69 = sub_1B1528264(v88, v87, 2, (uint64_t)sub_1B152ABA4, (uint64_t)v67);
          objc_msgSend(v65, sel_addAction_, v69);

          v70 = sub_1B1528264(0x6C65636E6143, 0xE600000000000000, 1, 0, 0);
          OUTLINED_FUNCTION_6_12(v65, sel_addAction_);

          objc_msgSend(v4, sel_presentViewController_animated_completion_, v65, 1, 0);
          swift_release();

        }
        sub_1B16B7EB0();
        OUTLINED_FUNCTION_53_0();
        v71(v2);
        goto LABEL_14;
      }
      OUTLINED_FUNCTION_7_45();
      swift_release();
      OUTLINED_FUNCTION_72_6((uint64_t)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler]);
      v33 = objc_allocWithZone(ObjectType);
      OUTLINED_FUNCTION_37_13();
      OUTLINED_FUNCTION_54_11();
      MEMORY[0x1E0C80A78](v34, v35);
      OUTLINED_FUNCTION_20_29(v36, v37, v86);
      v28 = OUTLINED_FUNCTION_35_15();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      v38 = OUTLINED_FUNCTION_27_21();
      sub_1B152A808(v38, v39, v28, (SEL *)&selRef_setTitle_);
      v32 = OUTLINED_FUNCTION_52_0(v40, sel_navigationController);
    }
    v41 = v32;
    if (v41)
    {
      v42 = v41;
      OUTLINED_FUNCTION_68_9(v41, sel_pushViewController_animated_, (uint64_t)v28);

    }
    goto LABEL_14;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1B1528044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  void *v8;
  id v9;

  if (!a2)
  {
    v7 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)OUTLINED_FUNCTION_75_8();
  OUTLINED_FUNCTION_113();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v8 = (void *)sub_1B16B983C();
  OUTLINED_FUNCTION_17();
LABEL_6:
  v9 = objc_msgSend((id)OUTLINED_FUNCTION_48_11(), sel_alertControllerWithTitle_message_preferredStyle_, v7, v8, a5);

  OUTLINED_FUNCTION_67();
}

void sub_1B15280DC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = a2 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1B5E1F2F8](v9);
  if (v10)
  {
    v11 = (char *)v10;
    a3();
    v12 = &v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler];
    v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
    v14 = *(_QWORD *)&v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
    __swift_project_boxed_opaque_existential_1(&v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a5, v13, v14);
    v15 = *((_QWORD *)v12 + 3);
    v16 = *((_QWORD *)v12 + 4);
    __swift_project_boxed_opaque_existential_1(v12, v15);
    sub_1B13C2E28(0, (unint64_t *)&qword_1ED186F90, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B16C95D0;
    sub_1B16B7E44();
    *(_QWORD *)(v17 + 32) = sub_1B16B7E80();
    sub_1B16B9B78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v15, v16);
    swift_bridgeObjectRelease();
    objc_msgSend(a6, sel_reloadData);
    v18 = *((_QWORD *)v12 + 3);
    v19 = *((_QWORD *)v12 + 4);
    __swift_project_boxed_opaque_existential_1(v12, v18);
    (*(void (**)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, double), _QWORD, uint64_t, uint64_t))(v19 + 24))(v11, nullsub_1, 0, v18, v19);

  }
}

id sub_1B1528264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  if (!a2)
  {
    v8 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = (void *)OUTLINED_FUNCTION_75_8();
  OUTLINED_FUNCTION_113();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1B13A2674;
  v12[3] = &block_descriptor_27;
  v9 = _Block_copy(v12);
  swift_release();
LABEL_6:
  v10 = objc_msgSend((id)OUTLINED_FUNCTION_48_11(), sel_actionWithTitle_style_handler_, v8, a3, v9);
  _Block_release(v9);

  return v10;
}

void sub_1B1528344(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4 + 16;
  a2();
  swift_beginAccess();
  v7 = MEMORY[0x1B5E1F2F8](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (_QWORD *)(v7 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
    v10 = v9[3];
    v11 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a5, v10, v11);

  }
}

Swift::Int __swiftcall SettingsViewController.numberOfSections(in:)(UITableView *in)
{
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout) + 16);
}

Swift::Int __swiftcall SettingsViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int result;
  uint64_t v9;

  v5 = OUTLINED_FUNCTION_33_12();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  OUTLINED_FUNCTION_6_3();
  if (numberOfRowsInSection < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout);
    if (*(_QWORD *)(v9 + 16) > (unint64_t)numberOfRowsInSection)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(v3, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * numberOfRowsInSection, v5);
      sub_1B16B7F04();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
      OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_67();
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t SettingsViewController.tableView(_:cellForRowAt:)(void *a1, uint64_t a2)
{
  char *v2;
  unsigned __int8 *v3;
  char *v4;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  char *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t (*v47)(void);
  void *v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char v57;
  uint64_t v58;
  int v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  uint64_t result;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;
  char *v119;
  id v120;
  uint64_t v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  char v126;
  void *v127;
  id v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  void *v132;
  char *v133;
  id v134;
  void *v135;
  _QWORD *v136;
  void *v137;
  id v138;
  int v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  void *v150;
  void *v151;
  id v152;
  char *v153;
  void *v154;
  double v155;
  double v156;
  double v157;
  char v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  void *v166;
  id v167;
  void *v168;
  _QWORD *v169;
  void *v170;
  id v171;
  void *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  id v179;
  void *v180;
  void *v181;
  id v182;
  void *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  void *v188;
  id v189;
  void *v190;
  _QWORD *v191;
  void *v192;
  id v193;
  void *v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  void *v198;
  id v199;
  uint64_t *v200;
  void (*v201)(uint64_t *__return_ptr);
  void *v202;
  void *v203;
  id v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  id v210;
  int v211;
  int v212;
  int v213;
  uint64_t v214;
  char *v215;
  _QWORD *v216;
  void *v217;
  uint64_t v218;
  id v219;
  uint64_t (*v220)(uint64_t, uint64_t);
  void *v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  void *v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  id v232;
  id v233;
  void *v234;
  uint64_t v235;
  id v236;
  void *v237;
  id v238;
  void *v239;
  char v240;
  uint64_t v241;
  id v242;
  void *v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  void *v251;
  uint64_t v252;
  void *v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD v263[3];
  uint64_t v264;
  void *v265;

  v4 = v2;
  v256 = a1;
  sub_1B152AC54();
  v251 = v6;
  v250 = *((_QWORD *)v6 - 1);
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v249 = (char *)&v245 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v10);
  v252 = (uint64_t)&v245 - v11;
  v254 = OUTLINED_FUNCTION_3_12();
  v12 = *(_QWORD *)(v254 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v254, v14);
  v15 = (char *)&v245 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OUTLINED_FUNCTION_90_6();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  OUTLINED_FUNCTION_52_10();
  v247 = sub_1B16B7EB0();
  v246 = *(_QWORD *)(v247 - 8);
  MEMORY[0x1E0C80A78](v247, v19);
  OUTLINED_FUNCTION_2();
  v248 = v20;
  v21 = OUTLINED_FUNCTION_33_12();
  v257 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_2();
  v258 = v23;
  v259 = a2;
  v24 = *(_QWORD *)&v4[OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout];
  v25 = sub_1B16B7D48();
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_132;
  }
  if (v25 >= *(_QWORD *)(v24 + 16))
  {
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  v26 = v258;
  OUTLINED_FUNCTION_65_0();
  v30 = v24 + v27 + *(_QWORD *)(v28 + 72) * v29;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v255 = v21;
  v31(v26, v30, v21);
  v21 = sub_1B16B7F04();
  v25 = sub_1B16B7D3C();
  if ((v25 & 0x8000000000000000) != 0)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  if (v25 >= *(_QWORD *)(v21 + 16))
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  OUTLINED_FUNCTION_72_6(v21 + 40 * v25 + 32);
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_71_7();
  sub_1B16B7F94();
  LODWORD(v25) = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v17 + 88))(v3, v16);
  if ((_DWORD)v25 == *MEMORY[0x1E0DB56A8])
  {
    v253 = v4;
    OUTLINED_FUNCTION_3_50();
    v32 = *v3;
    v250 = *((_QWORD *)v3 + 1);
    v249 = (char *)*((_QWORD *)v3 + 2);
    v252 = *((_QWORD *)v3 + 3);
    v33 = (void *)OUTLINED_FUNCTION_23_22();
    v34 = (void *)OUTLINED_FUNCTION_17_25();
    v35 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v33);

    type metadata accessor for SwitchTableViewCell();
    v36 = (char *)OUTLINED_FUNCTION_10_38();
    OUTLINED_FUNCTION_0_43(v36, sel_setSelectionStyle_);
    v37 = *(void **)&v36[OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_switchControl];
    objc_msgSend(v37, sel_setOn_, v32);
    v38 = v265;
    OUTLINED_FUNCTION_71_7();
    v39 = v37;
    objc_msgSend(v39, sel_setEnabled_, sub_1B16B7FA0() & 1);

    v41 = OUTLINED_FUNCTION_52_0(v40, sel_textLabel);
    if (v41)
    {
      OUTLINED_FUNCTION_39_11();
      v42 = sub_1B16B7F88();
      sub_1B152A808(v42, v43, v38, (SEL *)&selRef_setText_);

    }
    v251 = v36;
    v44 = OUTLINED_FUNCTION_29_6((uint64_t)v41, sel_textLabel);
    v45 = v253;
    if (v44)
    {
      OUTLINED_FUNCTION_39_11();
      if ((sub_1B16B7FA0() & 1) != 0)
      {
        v46 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      }
      else
      {
        if (qword_1EEF2F918 != -1)
          swift_once();
        v46 = (id)qword_1EEF35A50;
      }
      v81 = v46;
      OUTLINED_FUNCTION_6_12(v38, sel_setTextColor_);

    }
    v82 = v254;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v245 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v259, v254);
    v83 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v84 = (v13 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
    v85 = (char *)swift_allocObject();
    v86 = v252;
    *((_QWORD *)v85 + 2) = v249;
    *((_QWORD *)v85 + 3) = v86;
    v87 = v256;
    *((_QWORD *)v85 + 4) = v256;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v85[v83], v15, v82);
    *(_QWORD *)&v85[v84] = v45;
    *(_QWORD *)&v85[(v84 + 15) & 0xFFFFFFFFFFFFFFF8] = v250;
    swift_retain();
    v88 = v87;
    v89 = v45;
    v56 = v251;
    sub_1B160D514((uint64_t)sub_1B152AF24, (uint64_t)v85);
    goto LABEL_31;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB56B0])
  {
    OUTLINED_FUNCTION_3_50();
    v47 = (uint64_t (*)(void))*((_QWORD *)v3 + 1);
    swift_bridgeObjectRelease();
    swift_release();
    v48 = (void *)OUTLINED_FUNCTION_23_22();
    v49 = (void *)OUTLINED_FUNCTION_17_25();
    v50 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v48);

    OUTLINED_FUNCTION_0_43(v50, sel_setSelectionStyle_);
    v51 = objc_msgSend(v50, sel_textLabel);
    if (v51)
    {
      v52 = v51;
      OUTLINED_FUNCTION_88(v263, v264);
      v53 = sub_1B16B7F88();
      OUTLINED_FUNCTION_87_7(v53, v54, v55, (SEL *)&selRef_setText_);

    }
    OUTLINED_FUNCTION_88(v263, v264);
    v56 = v50;
    v57 = sub_1B16B7FA0();
    OUTLINED_FUNCTION_83_5(v57, sel_setUserInteractionEnabled_);

    if ((v47() & 1) != 0)
      v58 = 3;
    else
      v58 = 0;
    objc_msgSend(v56, sel_setAccessoryType_, v58);
    goto LABEL_31;
  }
  v59 = *MEMORY[0x1E0DB56D0];
  v253 = v4;
  if ((_DWORD)v25 == v59)
  {
    OUTLINED_FUNCTION_3_50();
    v60 = *(void **)v3;
    v61 = *((_QWORD *)v3 + 2);
    v62 = *((_QWORD *)v3 + 3);
    v63 = *((_QWORD *)v3 + 4);
    v64 = (void *)OUTLINED_FUNCTION_11_5();
    v65 = (void *)OUTLINED_FUNCTION_17_25();
    v66 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v64);

    OUTLINED_FUNCTION_89_6();
    v56 = (id)OUTLINED_FUNCTION_10_38();
    v67 = OUTLINED_FUNCTION_0_43(v56, sel_setSelectionStyle_);
    v68 = OUTLINED_FUNCTION_132((uint64_t)v67, sel_ts_editableTextField);
    if (v68)
    {
      v71 = v68;
      OUTLINED_FUNCTION_49_10((uint64_t)v68, v69, v70, (SEL *)&selRef_setText_);

      if (OUTLINED_FUNCTION_132(v72, sel_ts_editableTextField))
      {
        v73 = OUTLINED_FUNCTION_0_88();
        OUTLINED_FUNCTION_81_6(v73, sel_setEnabled_);

        v75 = OUTLINED_FUNCTION_132(v74, sel_textLabel);
        if (v75)
        {
          v76 = OUTLINED_FUNCTION_4_48();
          OUTLINED_FUNCTION_43_10(v76, v77, v78, (SEL *)&selRef_setText_);

        }
        v79 = OUTLINED_FUNCTION_132((uint64_t)v75, sel_textLabel);
        v21 = v255;
        if (v79)
        {
          if ((OUTLINED_FUNCTION_0_88() & 1) != 0)
          {
            v80 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
          }
          else
          {
            if (qword_1EEF2F918 != -1)
              swift_once();
            v80 = (id)qword_1EEF35A50;
          }
          v135 = v80;
          OUTLINED_FUNCTION_6_12(v60, sel_setTextColor_);

        }
        v136 = (_QWORD *)OUTLINED_FUNCTION_15_1();
        v136[2] = v62;
        v136[3] = v63;
        v137 = v253;
        v136[4] = v253;
        v136[5] = v61;
        v138 = v137;
        swift_retain();
        OUTLINED_FUNCTION_85_4((uint64_t)sub_1B152AD00);
        OUTLINED_FUNCTION_0_9();
        goto LABEL_54;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_139;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB5678])
  {
    OUTLINED_FUNCTION_3_50();
    v91 = *(void **)v3;
    v93 = *((_QWORD *)v3 + 2);
    v92 = *((_QWORD *)v3 + 3);
    v94 = *((_QWORD *)v3 + 4);
    v95 = (void *)OUTLINED_FUNCTION_11_5();
    v96 = (void *)OUTLINED_FUNCTION_17_25();
    v97 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v95);

    OUTLINED_FUNCTION_89_6();
    v98 = (void *)OUTLINED_FUNCTION_10_38();
    v99 = OUTLINED_FUNCTION_0_43(v98, sel_setSelectionStyle_);
    v100 = OUTLINED_FUNCTION_29_6((uint64_t)v99, sel_ts_editableTextField);
    if (v100)
    {
      v103 = v100;
      v259 = v92;
      OUTLINED_FUNCTION_49_10((uint64_t)v100, v101, v102, (SEL *)&selRef_setText_);

      if (OUTLINED_FUNCTION_29_6(v104, sel_ts_editableTextField))
      {
        v105 = OUTLINED_FUNCTION_0_88();
        OUTLINED_FUNCTION_81_6(v105, sel_setEnabled_);

        v56 = v98;
        v107 = OUTLINED_FUNCTION_29_6(v106, sel_textLabel);
        if (v107)
        {
          v108 = OUTLINED_FUNCTION_4_48();
          OUTLINED_FUNCTION_43_10(v108, v109, v110, (SEL *)&selRef_setText_);

        }
        v111 = OUTLINED_FUNCTION_132((uint64_t)v107, sel_textLabel);
        if (v111)
        {
          if ((OUTLINED_FUNCTION_0_88() & 1) != 0)
          {
            v112 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
          }
          else
          {
            if (qword_1EEF2F918 != -1)
              swift_once();
            v112 = (id)qword_1EEF35A50;
          }
          v166 = v112;
          OUTLINED_FUNCTION_6_12(v91, sel_setTextColor_);

        }
        v167 = OUTLINED_FUNCTION_132((uint64_t)v111, sel_ts_editableTextField);
        if (v167)
        {
          v168 = v167;
          objc_msgSend(v167, sel_setSecureTextEntry_, 1);

          v169 = (_QWORD *)OUTLINED_FUNCTION_15_1();
          v169[2] = v259;
          v169[3] = v94;
          v170 = v253;
          v169[4] = v253;
          v169[5] = v93;
          v171 = v170;
          swift_retain();
          OUTLINED_FUNCTION_85_4((uint64_t)sub_1B152B014);
LABEL_31:
          swift_release();
LABEL_32:
          (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v258, v255);
LABEL_33:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
          return (uint64_t)v56;
        }
        goto LABEL_141;
      }
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB56C0])
  {
    OUTLINED_FUNCTION_3_50();
    v113 = *((_QWORD *)v3 + 2);
    v114 = *((_QWORD *)v3 + 3);
    v115 = *((_QWORD *)v3 + 4);
    v116 = (void *)OUTLINED_FUNCTION_30_20();
    v117 = (void *)OUTLINED_FUNCTION_17_25();
    v118 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v116);

    type metadata accessor for StepperTableViewCell();
    v119 = (char *)OUTLINED_FUNCTION_10_38();
    v120 = OUTLINED_FUNCTION_0_43(v119, sel_setSelectionStyle_);
    v121 = OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_stepper;
    v122 = *(void **)&v119[OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_stepper];
    v123 = OUTLINED_FUNCTION_32_0((uint64_t)v120, sel_setStepValue_);
    v124 = OUTLINED_FUNCTION_32_0((uint64_t)v123, sel_setMinimumValue_);
    v125 = OUTLINED_FUNCTION_32_0((uint64_t)v124, sel_setMaximumValue_);
    OUTLINED_FUNCTION_32_0((uint64_t)v125, sel_setValue_);
    OUTLINED_FUNCTION_1_71();
    v126 = OUTLINED_FUNCTION_5_52();
    OUTLINED_FUNCTION_82_5(v126, sel_setEnabled_);

    v127 = *(void **)&v119[v121];
    OUTLINED_FUNCTION_1_71();
    v128 = 0;
    if ((OUTLINED_FUNCTION_5_52() & 1) == 0)
    {
      if (qword_1EEF2F918 != -1)
        swift_once();
      v128 = (id)qword_1EEF35A50;
    }
    OUTLINED_FUNCTION_6_12(v127, sel_setTintColor_);

    v129 = OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_valueLabel;
    v130 = OUTLINED_FUNCTION_97_6(*(void **)&v119[OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_valueLabel]);
    OUTLINED_FUNCTION_95_7();
    OUTLINED_FUNCTION_100_8(v260, v261, v131, (SEL *)&selRef_setText_);

    v132 = *(void **)&v119[v129];
    OUTLINED_FUNCTION_1_71();
    if ((OUTLINED_FUNCTION_5_52() & 1) != 0)
    {
      v133 = v119;
      v134 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    }
    else
    {
      if (qword_1EEF2F918 != -1)
        swift_once();
      v133 = v119;
      v134 = (id)qword_1EEF35A50;
    }
    v172 = v134;
    OUTLINED_FUNCTION_6_12(v132, sel_setTextColor_);

    v173 = OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_label;
    v174 = *(void **)&v133[OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_label];
    OUTLINED_FUNCTION_46_9();
    v175 = OUTLINED_FUNCTION_42_13();
    OUTLINED_FUNCTION_87_7(v175, v176, v177, (SEL *)&selRef_setText_);

    v178 = *(void **)&v133[v173];
    v56 = v133;
    OUTLINED_FUNCTION_1_71();
    if ((OUTLINED_FUNCTION_5_52() & 1) != 0)
    {
      v179 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    }
    else
    {
      if (qword_1EEF2F918 != -1)
        swift_once();
      v179 = (id)qword_1EEF35A50;
    }
    v190 = v179;
    OUTLINED_FUNCTION_6_12(v178, sel_setTextColor_);

    v191 = (_QWORD *)OUTLINED_FUNCTION_15_1();
    v191[2] = v114;
    v191[3] = v115;
    v192 = v253;
    v191[4] = v253;
    v191[5] = v113;
    v193 = v192;
    swift_retain();
    sub_1B1670274((uint64_t)sub_1B152AE68, (uint64_t)v191);
    goto LABEL_31;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB56A0])
  {
    OUTLINED_FUNCTION_3_50();
    v139 = *(_DWORD *)v3;
    sub_1B152AD1C(0, v140);
    v142 = v141[12];
    v143 = *(_DWORD *)&v3[v141[16]];
    v144 = *(_DWORD *)&v3[v141[20]];
    v254 = *(_QWORD *)&v3[v141[24]];
    v145 = (uint64_t)&v3[v142];
    v146 = (uint64_t *)&v3[v141[28]];
    v147 = v146[1];
    v248 = *v146;
    v148 = v250;
    v149 = v251;
    OUTLINED_FUNCTION_25_18(v252, v145, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 32));
    v150 = (void *)OUTLINED_FUNCTION_23_22();
    v151 = (void *)OUTLINED_FUNCTION_17_25();
    v152 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v150);

    type metadata accessor for SliderTableViewCell();
    v153 = (char *)OUTLINED_FUNCTION_10_38();
    OUTLINED_FUNCTION_0_43(v153, sel_setSelectionStyle_);
    v154 = *(void **)&v153[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_slider];
    LODWORD(v155) = v143;
    objc_msgSend(v154, sel_setMinimumValue_, v155);
    LODWORD(v156) = v144;
    objc_msgSend(v154, sel_setMaximumValue_, v156);
    LODWORD(v157) = v139;
    objc_msgSend(v154, sel_setValue_, v157);
    OUTLINED_FUNCTION_1_71();
    v158 = OUTLINED_FUNCTION_5_52();
    OUTLINED_FUNCTION_82_5(v158, sel_setEnabled_);

    v159 = OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_label;
    v160 = *(void **)&v153[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_label];
    OUTLINED_FUNCTION_46_9();
    v161 = OUTLINED_FUNCTION_42_13();
    OUTLINED_FUNCTION_87_7(v161, v162, v163, (SEL *)&selRef_setText_);

    v164 = *(void **)&v153[v159];
    OUTLINED_FUNCTION_1_71();
    if ((OUTLINED_FUNCTION_5_52() & 1) != 0)
    {
      v165 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    }
    else
    {
      if (qword_1EEF2F918 != -1)
        swift_once();
      v165 = (id)qword_1EEF35A50;
    }
    v194 = v165;
    OUTLINED_FUNCTION_6_12(v164, sel_setTextColor_);

    v195 = OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_valueLabel;
    v196 = OUTLINED_FUNCTION_97_6(*(void **)&v153[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_valueLabel]);
    OUTLINED_FUNCTION_95_7();
    OUTLINED_FUNCTION_100_8(v260, v261, v197, (SEL *)&selRef_setText_);

    v198 = *(void **)&v153[v195];
    OUTLINED_FUNCTION_1_71();
    if ((OUTLINED_FUNCTION_5_52() & 1) != 0)
    {
      v199 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      v200 = (uint64_t *)v249;
    }
    else
    {
      v200 = (uint64_t *)v249;
      if (qword_1EEF2F918 != -1)
        swift_once();
      v199 = (id)qword_1EEF35A50;
    }
    OUTLINED_FUNCTION_6_12(v198, sel_setTextColor_);

    OUTLINED_FUNCTION_25_18((uint64_t)v200, v252, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v148 + 16));
    v211 = (*(uint64_t (**)(uint64_t *, void *))(v148 + 88))(v200, v149);
    v212 = v211;
    v213 = *MEMORY[0x1E0DB5738];
    if (v211 == *MEMORY[0x1E0DB5738])
    {
      OUTLINED_FUNCTION_34_8((uint64_t)v200, *(uint64_t (**)(uint64_t, uint64_t))(v148 + 96));
      v214 = *v200;
    }
    else
    {
      if (v211 != *MEMORY[0x1E0DB5730])
      {
LABEL_142:
        sub_1B16BA904();
        __break(1u);
        goto LABEL_143;
      }
      v214 = 0;
    }
    v215 = &v153[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_precision];
    *(_QWORD *)v215 = v214;
    v215[8] = v212 != v213;
    v216 = (_QWORD *)OUTLINED_FUNCTION_15_1();
    v216[2] = v248;
    v216[3] = v147;
    v217 = v253;
    v218 = v254;
    v216[4] = v253;
    v216[5] = v218;
    v219 = v217;
    swift_retain();
    sub_1B1656CC4((uint64_t)sub_1B152B010, (uint64_t)v216);
    OUTLINED_FUNCTION_58_0();
    v220 = *(uint64_t (**)(uint64_t, uint64_t))(v148 + 8);
    v56 = v153;
    OUTLINED_FUNCTION_34_8(v252, v220);
    goto LABEL_32;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB5690])
  {
    OUTLINED_FUNCTION_3_50();
    v21 = v255;
LABEL_71:
    swift_bridgeObjectRelease();
    v180 = (void *)OUTLINED_FUNCTION_45_9();
    v181 = (void *)OUTLINED_FUNCTION_17_25();
    v56 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v180);

    v182 = OUTLINED_FUNCTION_132((uint64_t)objc_msgSend(v56, sel_setAccessoryType_, 1), sel_textLabel);
    if (v182)
    {
      v183 = v182;
      __swift_project_boxed_opaque_existential_1(v263, v264);
      v184 = sub_1B16B7F88();
      OUTLINED_FUNCTION_100_8(v184, v185, v186, (SEL *)&selRef_setText_);

    }
    v187 = OUTLINED_FUNCTION_132((uint64_t)v182, sel_textLabel);
    if (v187)
    {
      v188 = v187;
      __swift_project_boxed_opaque_existential_1(v263, v264);
      if ((OUTLINED_FUNCTION_6_54() & 1) != 0)
      {
        v189 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      }
      else
      {
        if (qword_1EEF2F918 != -1)
          swift_once();
        v189 = (id)qword_1EEF35A50;
      }
      v221 = v189;
      OUTLINED_FUNCTION_6_12(v188, sel_setTextColor_);

    }
    goto LABEL_54;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB56B8])
  {
    OUTLINED_FUNCTION_3_50();
    v201 = (void (*)(uint64_t *__return_ptr))*((_QWORD *)v3 + 1);
    swift_bridgeObjectRelease();
    v202 = (void *)OUTLINED_FUNCTION_28_22();
    v203 = (void *)OUTLINED_FUNCTION_17_25();
    v204 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v202);

    type metadata accessor for OptionTableViewCell();
    v205 = (void *)OUTLINED_FUNCTION_10_38();
    objc_msgSend(v205, sel_setAccessoryType_, 1);
    if (objc_msgSend(v205, sel_textLabel))
    {
      v206 = OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_43_10(v206, v207, v208, (SEL *)&selRef_setText_);

    }
    v209 = objc_msgSend(v205, sel_textLabel);
    if (v209)
    {
      if ((OUTLINED_FUNCTION_0_88() & 1) != 0)
      {
        v210 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      }
      else
      {
        if (qword_1EEF2F918 != -1)
          swift_once();
        v210 = (id)qword_1EEF35A50;
      }
      v237 = v210;
      OUTLINED_FUNCTION_6_12(v202, sel_setTextColor_);

    }
    v238 = OUTLINED_FUNCTION_29_6((uint64_t)v209, sel_detailTextLabel);
    if (v238)
    {
      v202 = v238;
      v201(&v260);
      if (v262)
      {
        __swift_project_boxed_opaque_existential_1(&v260, v262);
        v239 = (void *)sub_1B16B7F88();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v260);
        sub_1B16B983C();
        OUTLINED_FUNCTION_12();
      }
      else
      {
        sub_1B152AFD4((uint64_t)&v260, (uint64_t)&unk_1EEF32EE8, (uint64_t)sub_1B152ACA4, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_1B13D6584);
        v239 = 0;
      }
      OUTLINED_FUNCTION_6_12(v202, sel_setText_);

    }
    if (OUTLINED_FUNCTION_29_6((uint64_t)v238, sel_detailTextLabel))
    {
      v240 = OUTLINED_FUNCTION_0_88();
      v241 = v255;
      if ((v240 & 1) != 0)
      {
        v242 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      }
      else
      {
        if (qword_1EEF2F918 != -1)
          swift_once();
        v242 = (id)qword_1EEF35A50;
      }
      v243 = v242;
      v56 = v205;
      OUTLINED_FUNCTION_6_12(v202, sel_setTextColor_);

      OUTLINED_FUNCTION_0_9();
      (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v258, v241);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v258, v255);
      OUTLINED_FUNCTION_0_9();
      v56 = v205;
    }
    goto LABEL_33;
  }
  v21 = v255;
  if ((_DWORD)v25 == *MEMORY[0x1E0DB5698])
  {
    OUTLINED_FUNCTION_3_50();
    sub_1B152ABB4();
    swift_bridgeObjectRelease();
LABEL_107:
    swift_release();
    v223 = v246;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v246 + 32))(v248, v3, v247);
    v224 = (void *)OUTLINED_FUNCTION_23_22();
    v225 = (void *)OUTLINED_FUNCTION_17_25();
    v226 = OUTLINED_FUNCTION_13_32(v256, sel_dequeueReusableCellWithIdentifier_forIndexPath_, (uint64_t)v224);

    if (OUTLINED_FUNCTION_32_0(v227, sel_textLabel))
    {
      v228 = OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_43_10(v228, v229, v230, (SEL *)&selRef_setText_);

    }
    v56 = OUTLINED_FUNCTION_1_71();
    v231 = OUTLINED_FUNCTION_6_54();
    OUTLINED_FUNCTION_83_5(v231, sel_setUserInteractionEnabled_);

    v232 = OUTLINED_FUNCTION_0_43(v56, sel_setAccessoryType_);
    v233 = OUTLINED_FUNCTION_132((uint64_t)v232, sel_textLabel);
    if (v233)
    {
      v234 = v233;
      v235 = v248;
      v236 = sub_1B1529F88(v248);
      OUTLINED_FUNCTION_28_0(v235, *(uint64_t (**)(uint64_t, uint64_t))(v223 + 8));
      OUTLINED_FUNCTION_6_12(v234, sel_setTextColor_);

    }
    else
    {
      OUTLINED_FUNCTION_28_0(v248, *(uint64_t (**)(uint64_t, uint64_t))(v223 + 8));
    }
    goto LABEL_32;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB5688])
  {
    OUTLINED_FUNCTION_3_50();
    sub_1B152AA1C(0, v222);
    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_36_10();
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
  if ((_DWORD)v25 == *MEMORY[0x1E0DB5680])
  {
    OUTLINED_FUNCTION_3_50();
    swift_release();
    OUTLINED_FUNCTION_7_0();
    goto LABEL_71;
  }
LABEL_135:
  if ((_DWORD)v25 == *MEMORY[0x1E0DB56C8])
  {
    v244 = objc_allocWithZone(MEMORY[0x1E0DC3D50]);
    v56 = sub_1B152A71C(0, 0x6C6172656E6567, 0xE700000000000000);
LABEL_54:
    (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v258, v21);
    goto LABEL_33;
  }
LABEL_143:
  result = OUTLINED_FUNCTION_61_9();
  __break(1u);
  return result;
}

uint64_t sub_1B1529D88(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  id v27;
  uint64_t v28;

  v27 = a4;
  v28 = a7;
  v26[1] = a5;
  v10 = sub_1B16B7CB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B16B7E74();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v20 != *MEMORY[0x1E0DB55F8])
  {
    if (v20 == *MEMORY[0x1E0DB55F0])
    {
      sub_1B16B7D48();
      sub_1B16B7C7C();
      v21 = (void *)sub_1B16B7C40();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      objc_msgSend(v27, sel_reloadSections_withRowAnimation_, v21, 0);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    }
  }
  v22 = (_QWORD *)(a6 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
  v23 = *(_QWORD *)(a6 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24);
  v24 = v22[4];
  __swift_project_boxed_opaque_existential_1(v22, v23);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v28, v23, v24);
}

void sub_1B1529F20(void (*a1)(void))
{
  a1();
  OUTLINED_FUNCTION_24_18(OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
  OUTLINED_FUNCTION_31();
}

void sub_1B1529F54(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  OUTLINED_FUNCTION_24_18(OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
  OUTLINED_FUNCTION_31();
}

id sub_1B1529F88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  id v8;
  int v9;
  int v10;
  void *v11;
  id v12;
  uint64_t v14;

  v2 = sub_1B16B7EB0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E0DB5668])
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  }
  else
  {
    v9 = v7;
    v10 = *MEMORY[0x1E0DB5660];
    v11 = (void *)objc_opt_self();
    if (v9 != v10)
    {
      v12 = objc_msgSend(v11, sel_systemBlueColor);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return v12;
    }
    v8 = objc_msgSend(v11, sel_redColor);
  }
  return v8;
}

unint64_t SettingsViewController.tableView(_:heightForRowAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *);
  _QWORD v21[4];

  v1 = OUTLINED_FUNCTION_90_6();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_33_12();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v21[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout);
  result = sub_1B16B7D48();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result >= *(_QWORD *)(v11 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_65_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11 + v13 + *(_QWORD *)(v7 + 72) * v14, v6);
  v15 = sub_1B16B7F04();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  result = sub_1B16B7D3C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >= *(_QWORD *)(v15 + 16))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  sub_1B13E2FE4(v15 + 40 * result + 32, (uint64_t)v21);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  sub_1B16B7F94();
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v5, v1) == *MEMORY[0x1E0DB56A0])
  {
    OUTLINED_FUNCTION_36_1((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    sub_1B152AD1C(0, v16);
    v18 = &v5[*(int *)(v17 + 48)];
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B152AC54();
    OUTLINED_FUNCTION_53_0();
    v19(v18);
  }
  else
  {
    OUTLINED_FUNCTION_36_1((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForHeaderInSection:)(UITableView *_, Swift::Int titleForHeaderInSection)
{
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  sub_1B152A468((uint64_t)_, titleForHeaderInSection, MEMORY[0x1E0DB57B8]);
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForFooterInSection:)(UITableView *_, Swift::Int titleForFooterInSection)
{
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  sub_1B152A468((uint64_t)_, titleForFooterInSection, MEMORY[0x1E0DB57C0]);
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

void sub_1B152A468(uint64_t a1, unint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_33_12();
  OUTLINED_FUNCTION_96_1();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_0_1();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout);
    if (*(_QWORD *)(v11 + 16) > a2)
    {
      v12 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(v5, v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * a2, v4);
      a3(v12);
      OUTLINED_FUNCTION_36_1(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      return;
    }
  }
  __break(1u);
}

id sub_1B152A530(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v7 = a3;
  v8 = a1;
  a5();
  v10 = v9;

  if (v10)
  {
    v11 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  return v11;
}

void sub_1B152A5B0(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = v4;
  if (a3[3])
  {
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    OUTLINED_FUNCTION_55_10();
    MEMORY[0x1E0C80A78](v10, v11);
    OUTLINED_FUNCTION_19_28(v12, v13, v14);
    OUTLINED_FUNCTION_80_7();
    OUTLINED_FUNCTION_40_12();
    OUTLINED_FUNCTION_88_6();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v6, sel_initWithImage_style_target_action_, a1, a2, v5, a4);
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_47();
}

void sub_1B152A65C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  void *v7;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = v5;
  if (a2)
  {
    v11 = (void *)OUTLINED_FUNCTION_75_8();
    OUTLINED_FUNCTION_113();
  }
  else
  {
    v11 = 0;
  }
  if (a4[3])
  {
    __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    OUTLINED_FUNCTION_55_10();
    MEMORY[0x1E0C80A78](v12, v13);
    OUTLINED_FUNCTION_19_28(v14, v15, v16);
    OUTLINED_FUNCTION_80_7();
    OUTLINED_FUNCTION_40_12();
    OUTLINED_FUNCTION_88_6();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v7, sel_initWithTitle_style_target_action_, v11, a3, v6, a5);

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_47();
}

id sub_1B152A71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;

  if (a3)
  {
    v5 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v3, sel_initWithStyle_reuseIdentifier_, a1, v5);

  return v6;
}

void sub_1B152A78C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B152A808(a1, a2, a3, (SEL *)&selRef_setText_);
}

void sub_1B152A798(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_title);

  if (v2)
  {
    sub_1B16B9860();

  }
  OUTLINED_FUNCTION_31();
}

void sub_1B152A7FC(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B152A808(a1, a2, a3, (SEL *)&selRef_setTitle_);
}

void sub_1B152A808(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6;

  v6 = (id)sub_1B16B983C();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);

}

char *sub_1B152A860(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  objc_class *ObjectType;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  id v13;
  char *v14;
  void (**v15)(uint64_t, void *);
  char *v16;
  void *v17;
  char *v18;
  objc_super v20;
  uint64_t v21[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v21[3] = a4;
  v21[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v12 = OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView;
  v13 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v14 = a3;
  *(_QWORD *)&a3[v12] = objc_msgSend(v13, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v15 = (void (**)(uint64_t, void *))&v14[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame];
  *v15 = sub_1B1527488;
  v15[1] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout] = a1;
  sub_1B13E2FE4((uint64_t)v21, (uint64_t)&v14[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler]);

  v20.receiver = v14;
  v20.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, 0, 0);
  v17 = *(void **)&v16[OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView];
  v18 = v16;
  objc_msgSend(v17, sel_setDelegate_, v18);
  objc_msgSend(v17, sel_setDataSource_, v18);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v18;
}

uint64_t sub_1B152A9C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B152A9E4()
{
  OUTLINED_FUNCTION_82();
  swift_release();
  OUTLINED_FUNCTION_66_7();
  return swift_deallocObject();
}

void sub_1B152AA10(uint64_t a1)
{
  uint64_t v1;

  sub_1B1528344(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1B152AA1C(uint64_t a1, uint64_t a2)
{
  unint64_t TupleTypeMetadata;
  uint64_t v3;

  if (!qword_1EEF32EA8)
  {
    MEMORY[0x1E0C80A78](0, a2);
    sub_1B16B7EB0();
    sub_1B13D6584(255, (unint64_t *)&unk_1EEF32EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB55A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B13FFB34();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v3)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EEF32EA8);
  }
}

uint64_t sub_1B152AB6C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  OUTLINED_FUNCTION_66_7();

  return swift_deallocObject();
}

void sub_1B152ABA4(uint64_t a1)
{
  uint64_t v1;

  sub_1B15280DC(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

void sub_1B152ABB4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EEF32ED0)
  {
    sub_1B16B7EB0();
    sub_1B13D6584(255, (unint64_t *)&unk_1EEF32EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB55A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B13FFB34();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EEF32ED0);
  }
}

void sub_1B152AC54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF32EE0)
  {
    v0 = sub_1B16B7EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF32EE0);
  }
}

unint64_t sub_1B152ACA4()
{
  unint64_t result;

  result = qword_1EEF32EF0;
  if (!qword_1EEF32EF0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF32EF0);
  }
  return result;
}

void sub_1B152AD00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B1529F54(a1, a2, *(void (**)(void))(v2 + 16));
}

void sub_1B152AD1C(uint64_t a1, uint64_t a2)
{
  unint64_t TupleTypeMetadata;
  uint64_t v3;

  if (!qword_1EEF32EF8)
  {
    MEMORY[0x1E0C80A78](0, a2);
    sub_1B152AC54();
    sub_1B13D6584(255, (unint64_t *)&unk_1EEF32EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB55A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B13FFB34();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v3)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EEF32EF8);
  }
}

void sub_1B152AE68()
{
  uint64_t v0;

  sub_1B1529F20(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1B152AE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = OUTLINED_FUNCTION_3_12();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_82();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B152AF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_3_12() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1B1529D88(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t method lookup function for SettingsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SettingsViewController.__allocating_init(layout:actionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B152AF98()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B152AFBC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1B152AFD4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))
{
  void (*v5)(uint64_t);

  a4(0, a2, a3, MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_53_0();
  v5(a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t static PresentationHandlerError.== infix(_:_:)()
{
  return 1;
}

void PresentationHandlerError.hash(into:)()
{
  OUTLINED_FUNCTION_32_20();
  OUTLINED_FUNCTION_0_0();
}

void PresentationHandlerError.hashValue.getter()
{
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_16_31();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

void sub_1B152B060()
{
  PresentationHandlerError.hashValue.getter();
}

void sub_1B152B074()
{
  PresentationHandlerError.hash(into:)();
}

void __swiftcall PresentationOperation.init(handlerUID:operationUID:requiredAppLaunchCount:maxPrecedingSameSessionPresentations:maxPresentationAttempts:endsPresentationSession:ignoreAfterSuccessfulPresentation:maxRetries:)(TeaUI::PresentationOperation *__return_ptr retstr, Swift::String handlerUID, Swift::String operationUID, Swift::Int requiredAppLaunchCount, Swift::Int_optional maxPrecedingSameSessionPresentations, Swift::Int_optional maxPresentationAttempts, Swift::Bool endsPresentationSession, Swift::Bool ignoreAfterSuccessfulPresentation, Swift::Int_optional maxRetries)
{
  retstr->handlerUID = handlerUID;
  retstr->operationUID = operationUID;
  retstr->requiredAppLaunchCount = requiredAppLaunchCount;
  retstr->maxPrecedingSameSessionPresentations.value = maxPrecedingSameSessionPresentations.value;
  retstr->maxPrecedingSameSessionPresentations.is_nil = maxPrecedingSameSessionPresentations.is_nil;
  retstr->maxPresentationAttempts.value = maxPresentationAttempts.value;
  retstr->maxPresentationAttempts.is_nil = maxPresentationAttempts.is_nil;
  retstr->endsPresentationSession = endsPresentationSession;
  retstr->suppressOnLaunchConditions.rawValue = 0;
  OUTLINED_FUNCTION_14_22((uint64_t)retstr);
}

void __swiftcall PresentationOperation.init(handlerUID:operationUID:requiredAppLaunchCount:maxPrecedingSameSessionPresentations:maxPresentationAttempts:endsPresentationSession:suppressOnLaunchConditions:ignoreAfterSuccessfulPresentation:maxRetries:)(TeaUI::PresentationOperation *__return_ptr retstr, Swift::String handlerUID, Swift::String operationUID, Swift::Int requiredAppLaunchCount, Swift::Int_optional maxPrecedingSameSessionPresentations, Swift::Int_optional maxPresentationAttempts, Swift::Bool endsPresentationSession, TeaUI::PresentationOperation::LaunchConditions suppressOnLaunchConditions, Swift::Bool ignoreAfterSuccessfulPresentation, Swift::Int_optional maxRetries)
{
  Swift::UInt v10;

  v10 = *(_QWORD *)suppressOnLaunchConditions.rawValue;
  retstr->handlerUID = handlerUID;
  retstr->operationUID = operationUID;
  retstr->requiredAppLaunchCount = requiredAppLaunchCount;
  retstr->maxPrecedingSameSessionPresentations.value = maxPrecedingSameSessionPresentations.value;
  retstr->maxPrecedingSameSessionPresentations.is_nil = maxPrecedingSameSessionPresentations.is_nil;
  retstr->maxPresentationAttempts.value = maxPresentationAttempts.value;
  retstr->maxPresentationAttempts.is_nil = maxPresentationAttempts.is_nil;
  retstr->endsPresentationSession = endsPresentationSession;
  retstr->suppressOnLaunchConditions.rawValue = v10;
  OUTLINED_FUNCTION_14_22((uint64_t)retstr);
}

uint64_t PresentationOperation.LaunchConditions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaUI::PresentationOperation::LaunchConditions __swiftcall PresentationOperation.LaunchConditions.init(rawValue:)(TeaUI::PresentationOperation::LaunchConditions rawValue)
{
  TeaUI::PresentationOperation::LaunchConditions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PresentationOperation.LaunchConditions.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static PresentationOperation.LaunchConditions.didOnboardThroughBootstrapper.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

void static PresentationOperation.LaunchConditions.launchedByNotificationInteraction.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

void static PresentationOperation.LaunchConditions.launchedByWidgetInteraction.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

void static PresentationOperation.LaunchConditions.indirectLaunch.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_1(a1);
}

TeaUI::PresentationOperation::LaunchConditions sub_1B152B14C(Swift::UInt *a1)
{
  return PresentationOperation.LaunchConditions.init(rawValue:)(*a1);
}

TeaUI::PresentationOperation::LaunchConditions sub_1B152B154@<X0>(Swift::UInt *a1@<X0>, uint64_t a2@<X8>)
{
  TeaUI::PresentationOperation::LaunchConditions result;

  result.rawValue = PresentationOperation.LaunchConditions.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1B152B17C(uint64_t *a1@<X8>)
{
  *a1 = PresentationOperation.LaunchConditions.rawValue.getter();
  OUTLINED_FUNCTION_0_0();
}

void PresentationProcessingStatus.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

void PresentationProcessingStatus.hashValue.getter()
{
  OUTLINED_FUNCTION_17_3();
  sub_1B16BAA54();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

void sub_1B152B1EC()
{
  OUTLINED_FUNCTION_32_20();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B152B204()
{
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_16_31();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

void sub_1B152B228()
{
  PresentationProcessingStatus.hashValue.getter();
}

void sub_1B152B230()
{
  PresentationProcessingStatus.hash(into:)();
}

void sub_1B152B240()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_16_31();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

uint64_t PresentationOperationManager.presentationProcessingStatus.getter()
{
  return swift_retain();
}

uint64_t PresentationOperationManager.disablePresentationProcessing.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t PresentationOperationManager.disablePresentationProcessing.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_13();
  *(_BYTE *)(v1 + 56) = a1;
  return result;
}

void PresentationOperationManager.disablePresentationProcessing.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:launchConditionProvider:dataStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_25();
  PresentationOperationManager.init(bootstrapper:launchPresentationConfigurationProvider:launchConditionProvider:dataStore:)(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1B152B368()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 232) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_1B152B3B4()
{
  uint64_t result;
  id v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 232) = 1;
    sub_1B16B82DC();
    if (v7 == 1)
    {
      v1 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v2 = objc_msgSend(v1, sel_applicationState);

      if (v2 != (id)2)
      {
        if (qword_1ED186090 != -1)
          swift_once();
        v3 = sub_1B16B8BC4();
        __swift_project_value_buffer(v3, (uint64_t)qword_1ED190460);
        v4 = sub_1B16B8BAC();
        v5 = sub_1B16BA058();
        if (os_log_type_enabled(v4, v5))
        {
          v6 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v6 = 0;
          _os_log_impl(&dword_1B139E000, v4, v5, "Processing was suspended while app is in the foreground during keyboard dismissal. Resuming processing...", v6, 2u);
          MEMORY[0x1B5E1F1FC](v6, -1, -1);
        }

        sub_1B13C7910(0);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:dataStore:)(uint64_t a1, __int128 *a2, __int128 *a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_25();
  PresentationOperationManager.init(bootstrapper:launchPresentationConfigurationProvider:dataStore:)(a1, a2, a3);
  return v6;
}

uint64_t PresentationOperationManager.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();

  OUTLINED_FUNCTION_29_18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  sub_1B14587EC(v0 + 176, &qword_1ED186978, (uint64_t)&unk_1ED186970, (uint64_t)&protocol descriptor for LaunchConditionProviderType);
  swift_release();
  return v0;
}

uint64_t PresentationOperationManager.__deallocating_deinit()
{
  PresentationOperationManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t (*sub_1B152B61C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B152B658(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v13 = (uint64_t)a1;
  v2 = a1;
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED1839E0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_1ED186090 != -1)
      swift_once();
    v3 = sub_1B16B8BC4();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED190460);
    v4 = a1;
    v5 = a1;
    v6 = sub_1B16B8BAC();
    v7 = sub_1B16BA058();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v13 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue();
      v10 = sub_1B16BA9DC();
      sub_1B13E208C(v10, v11, &v13);
      sub_1B16BA34C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B139E000, v6, v7, "Failed during app launch configuration retrieval with the following error: %s. | Presentation operations will NOT be processed.", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v9, -1, -1);
      MEMORY[0x1B5E1F1FC](v8, -1, -1);
    }
    else
    {

    }
  }
  return sub_1B14584B0();
}

uint64_t sub_1B152B860(double a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  sub_1B13A3DB4();
  sub_1B16B8A8C();
  v2 = (void *)sub_1B16B8918();
  sub_1B16B8A14();
  swift_release();

  *(double *)(swift_allocObject() + 16) = a1;
  v3 = (void *)sub_1B16B8918();
  v4 = sub_1B16B8978();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_1B152B930(_BYTE *a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;

  if ((*a1 & 1) != 0)
  {
    a3[8] = 0;
    swift_beginAccess();
    sub_1B145615C(0, &qword_1ED186DE0, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DEA000]);
    sub_1B16B9740();
    sub_1B16B9764();
    swift_endAccess();
    v5 = a3 + 17;
    v6 = a3[20];
    v7 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    v8 = a3[20];
    v9 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    v10 = a3[20];
    v11 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    v13 = a3[20];
    v12 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v13);
    (*(void (**)(uint64_t, uint64_t))(v12 + 56))(v13, v12);
    v15 = a3[20];
    v14 = a3[21];
    __swift_project_boxed_opaque_existential_1(v5, v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 72))(v15, v14);
    sub_1B13C5C9C(0, &qword_1ED186070, (uint64_t)&type metadata for LaunchPresentationConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1B16B89F0();
    v3 = sub_1B16B8A44();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1ED186090 != -1)
        swift_once();
      v16 = sub_1B16B8BC4();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED190460);
      v17 = sub_1B16B8BAC();
      v18 = sub_1B16BA058();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_1B139E000, v17, v18, ". . .Resuming presentation processing from suspension.", v19, 2u);
        MEMORY[0x1B5E1F1FC](v19, -1, -1);
      }

      v20 = sub_1B16B8A8C();
      sub_1B13A1818(0, (unint64_t *)&qword_1ED188560);
      v21 = (void *)sub_1B16BA0DC();
      swift_retain();
      v3 = v20;
      sub_1B16B89B4();
      swift_release();
      swift_release();

      swift_release();
    }
    sub_1B152F0A0();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1B152BCB0()
{
  uint64_t v0;

  swift_allocObject();
  swift_weakInit();
  sub_1B13C5C9C(0, (unint64_t *)&qword_1ED186080, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v0 = sub_1B16B8A2C();
  swift_release();
  return v0;
}

uint64_t sub_1B152BD54(uint64_t (*a1)(uint64_t))
{
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B13C3704();
    Strong = swift_release();
  }
  return a1(Strong);
}

uint64_t sub_1B152BDC0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  swift_beginAccess();
  a2[6] = v4;
  swift_beginAccess();
  a2[9] = v5;
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  a2[10] = v6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  a2[11] = v7;
  result = swift_bridgeObjectRelease();
  v11 = a2[6];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    if (v8 <= v3)
      v14 = v3;
    else
      v14 = v8;
    a2[6] = v13;
    swift_beginAccess();
    a2[5] = v9;
    swift_bridgeObjectRelease();
    v15 = a2[20];
    v16 = a2[21];
    __swift_project_boxed_opaque_existential_1(a2 + 17, v15);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 32))(a2[6], v15, v16);
    v17 = a2[20];
    v18 = a2[21];
    __swift_project_boxed_opaque_existential_1(a2 + 17, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v14, v17, v18);
    sub_1B13E0BEC();
    v19 = sub_1B16B8A50();
    swift_release();
    swift_release();
    swift_release();
    return v19;
  }
  return result;
}

uint64_t sub_1B152BF90(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  if (qword_1ED186090 != -1)
    swift_once();
  v4 = sub_1B16B8BC4();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED190460);
  v5 = a1;
  v6 = a1;
  sub_1B13E1DF0(a2);
  v7 = sub_1B16B8BAC();
  v8 = sub_1B16BA058();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
    sub_1B16B9740();
    sub_1B13E208C(v11, v12, &v16);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();
    sub_1B13E2058(a2);
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    v13 = sub_1B16BA9DC();
    sub_1B13E208C(v13, v14, &v16);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B139E000, v7, v8, "Presentation handler for operation (%s) encountered the following error: %s. | Its operation will NOT be presented.", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v10, -1, -1);
    MEMORY[0x1B5E1F1FC](v9, -1, -1);
  }
  else
  {
    sub_1B13E2058(a2);

  }
  LOBYTE(v16) = 0;
  sub_1B13C5C9C(0, (unint64_t *)&qword_1ED186078, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1B16B89F0();
}

void sub_1B152C1FC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25[3];
  uint64_t v26;

  v5 = *a1;
  if (v5 == 1)
  {
    v6 = *(_QWORD *)(a4 + 16);
    v7 = *(_QWORD *)(a4 + 24);
    swift_beginAccess();
    sub_1B16B9740();
    sub_1B152ED40(v6, v7);
    swift_endAccess();
  }
  else
  {
    v9 = *(_QWORD *)(a4 + 16);
    v10 = *(_QWORD *)(a4 + 24);
    swift_beginAccess();
    v11 = *(_QWORD *)(a2 + 80);
    sub_1B16B9740();
    sub_1B13A92D8(v9, v10, v11);
    v13 = v12;
    v15 = v14;
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      swift_endAccess();
      goto LABEL_8;
    }
    swift_endAccess();
    v16 = __OFADD__(v13, 1);
    v17 = v13 + 1;
    if (v16)
    {
      __break(1u);
      return;
    }
    swift_beginAccess();
    sub_1B16B9740();
    sub_1B1447A5C(v17, v9, v10);
    swift_endAccess();
  }
  swift_bridgeObjectRelease();
LABEL_8:
  if (qword_1ED186090 != -1)
    swift_once();
  v18 = sub_1B16B8BC4();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED190460);
  sub_1B13E1DF0(a4);
  v19 = sub_1B16B8BAC();
  v20 = sub_1B16BA058();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v25[0] = v22;
    *(_DWORD *)v21 = 136315394;
    v23 = *(_QWORD *)(a4 + 16);
    v24 = *(_QWORD *)(a4 + 24);
    sub_1B16B9740();
    v26 = sub_1B13E208C(v23, v24, v25);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();
    sub_1B13E2058(a4);
    *(_WORD *)(v21 + 12) = 1024;
    LODWORD(v26) = v5;
    sub_1B16BA34C();
    _os_log_impl(&dword_1B139E000, v19, v20, "(%s) Presentation Required: %{BOOL}d", (uint8_t *)v21, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v22, -1, -1);
    MEMORY[0x1B5E1F1FC](v21, -1, -1);
  }
  else
  {
    sub_1B13E2058(a4);
  }

}

uint64_t sub_1B152C4B8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[5];

  v4 = (uint64_t *)(a3 + 16);
  v5 = a2 + 5;
  swift_beginAccess();
  v6 = sub_1B152E7D4(v5, v4);
  if (*(_QWORD *)(a2[5] + 16) < v6)
  {
    __break(1u);
  }
  else
  {
    sub_1B13A4A18(v6);
    swift_endAccess();
    if (qword_1ED186090 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v7 = sub_1B16B8BC4();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED190460);
  swift_retain_n();
  v8 = sub_1B16B8BAC();
  v9 = sub_1B16BA058();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    v11 = v22[0];
    *(_DWORD *)v10 = 136315138;
    v12 = sub_1B16B9740();
    v13 = MEMORY[0x1B5E1D4F8](v12, &type metadata for PresentationOperation);
    v15 = v14;
    swift_bridgeObjectRelease();
    v22[4] = sub_1B13E208C(v13, v15, v22);
    sub_1B16BA34C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B139E000, v8, v9, "Completed required presentation filtering. Operations requiring presentation: %s.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v11, -1, -1);
    MEMORY[0x1B5E1F1FC](v10, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v16 = a2[20];
  v17 = a2[21];
  __swift_project_boxed_opaque_existential_1(a2 + 17, v16);
  swift_beginAccess();
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 64);
  v19 = sub_1B16B9740();
  v20 = v18(v19, v16, v17);
  swift_bridgeObjectRelease();
  return v20;
}

void sub_1B152C734(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  if (qword_1ED186090 != -1)
    swift_once();
  v2 = sub_1B16B8BC4();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED190460);
  v3 = a1;
  v4 = a1;
  oslog = sub_1B16B8BAC();
  v5 = sub_1B16BA058();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_1B16BA9DC();
    sub_1B13E208C(v8, v9, &v11);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B139E000, oslog, v5, "Encountered error during required operation filtering: %s. | Operations will NOT be presented.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v7, -1, -1);
    MEMORY[0x1B5E1F1FC](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1B152C90C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = a1[20];
  v2 = a1[21];
  __swift_project_boxed_opaque_existential_1(a1 + 17, v1);
  swift_beginAccess();
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v4 = sub_1B16B9740();
  v5 = v3(v4, v1, v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B152C9A0(void *a1, char a2, uint64_t a3, const void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v7 = sub_1B16B95D8();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B16B9620();
  v11 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B13A1818(0, (unint64_t *)&qword_1ED188560);
  v15 = (void *)sub_1B16BA0DC();
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  memcpy((void *)(v17 + 24), a4, 0x61uLL);
  *(_QWORD *)(v17 + 128) = a1;
  LOBYTE(v16) = a2 & 1;
  *(_BYTE *)(v17 + 136) = a2 & 1;
  aBlock[4] = sub_1B152EC6C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = &block_descriptor_28;
  v18 = _Block_copy(aBlock);
  sub_1B13E1DF0((uint64_t)a4);
  sub_1B152EC80(a1, v16);
  swift_release();
  sub_1B16B95F0();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13B146C((unint64_t *)&qword_1ED183670, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED183708, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B149AF40();
  sub_1B16BA448();
  MEMORY[0x1B5E1DA80](0, v14, v10, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v21);
}

uint64_t sub_1B152CC10(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B152CC88(*(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4 & 1);
    return swift_release();
  }
  return result;
}

void sub_1B152CC88(uint64_t a1, unint64_t a2, id a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  NSObject *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  uint64_t v58[3];

  v5 = v4;
  v8 = &unk_1B16CE000;
  if ((a4 & 1) != 0)
  {
    v10 = a3;
    if (qword_1ED186090 != -1)
      swift_once();
    v11 = sub_1B16B8BC4();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED190460);
    sub_1B152EC80(a3, 1);
    sub_1B16B9740();
    sub_1B152EC80(a3, 1);
    sub_1B16B9740();
    v12 = sub_1B16B8BAC();
    v13 = sub_1B16BA040();
    if (os_log_type_enabled(v12, v13))
    {
      v52 = v5;
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v58[0] = v51;
      *(_DWORD *)v14 = 136315394;
      sub_1B16B9740();
      sub_1B13E208C(a1, a2, v58);
      sub_1B16BA34C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2112;
      v16 = a3;
      v57[0] = _swift_stdlib_bridgeErrorToNSError();
      v8 = (_QWORD *)&unk_1B16CE000;
      sub_1B16BA34C();
      *v15 = v57[0];
      sub_1B152EC60(a3, 1);
      sub_1B152EC60(a3, 1);
      _os_log_impl(&dword_1B139E000, v12, v13, "Presentation operation (%s) encountered the following error during presentation: %@.\nIts presentation count will not be incremented.", (uint8_t *)v14, 0x16u);
      sub_1B13FD1BC(0, &qword_1ED183900, (uint64_t)&qword_1ED1838F0, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B13A1818);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v51, -1, -1);
      v17 = v14;
      v5 = v52;
      MEMORY[0x1B5E1F1FC](v17, -1, -1);

      sub_1B152EC60(a3, 1);
    }
    else
    {
      sub_1B152EC60(a3, 1);
      swift_bridgeObjectRelease_n();
      sub_1B152EC60(a3, 1);
      sub_1B152EC60(a3, 1);

    }
  }
  swift_beginAccess();
  v18 = *(_QWORD *)(v5 + 40);
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = v8;
    v20 = *(_QWORD **)(v18 + 40);
    v21 = *(uint64_t **)(v18 + 48);
    v22 = *(NSObject **)(v18 + 56);
    v53 = *(_BYTE *)(v18 + 97);
    v23 = v21 == (uint64_t *)a1 && v22 == a2;
    v50 = a1;
    if (!v23 && (sub_1B16BA910(v21, v22, a1, a2, 0) & 1) == 0)
    {
      v44 = qword_1ED186090;
      sub_1B16B9740();
      sub_1B16B9740();
      if (v44 == -1)
        goto LABEL_37;
      goto LABEL_45;
    }
    if ((a4 & 1) != 0)
    {
      sub_1B16B9740();
      sub_1B16B9740();
    }
    else
    {
      v21 = &qword_1ED186000;
      swift_beginAccess();
      v24 = *(_QWORD *)(v5 + 72);
      sub_1B16B9740();
      v19 = v20;
      sub_1B16B9740();
      sub_1B16B9740();
      sub_1B13A92D8(a1, a2, v24);
      v26 = v25;
      v28 = v27;
      swift_endAccess();
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
        v29 = 0;
      else
        v29 = v26;
      v30 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        swift_once();
LABEL_37:
        v45 = sub_1B16B8BC4();
        __swift_project_value_buffer(v45, (uint64_t)qword_1ED190460);
        swift_bridgeObjectRetain_n();
        sub_1B16B9740();
        sub_1B16B9740();
        v46 = sub_1B16B8BAC();
        v47 = sub_1B16BA040();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc();
          v55 = swift_slowAlloc();
          v57[0] = v55;
          *(_DWORD *)v48 = v19[444];
          sub_1B16B9740();
          v56 = sub_1B13E208C(v50, a2, v57);
          sub_1B16BA34C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v48 + 12) = 2080;
          sub_1B16B9740();
          v56 = sub_1B13E208C((uint64_t)v21, (unint64_t)v22, v57);
          sub_1B16BA34C();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1B139E000, v46, v47, "Presentation operation (%s) has completed execution but doesn't match the UID that's currently pending completion (%s)! | This queue is in a bad state so no further items will be processed.", (uint8_t *)v48, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1B5E1F1FC](v55, -1, -1);
          MEMORY[0x1B5E1F1FC](v48, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        goto LABEL_41;
      }
      swift_beginAccess();
      sub_1B16B9740();
      sub_1B1447A5C(v30, a1, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1B16B9740();
      sub_1B14274DC(&v56, a1, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    if (qword_1ED186090 != -1)
      swift_once();
    v36 = sub_1B16B8BC4();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED190460);
    swift_bridgeObjectRetain_n();
    v22 = sub_1B16B8BAC();
    v37 = sub_1B16BA058();
    if (os_log_type_enabled(v22, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v57[0] = v39;
      *(_DWORD *)v38 = 136315138;
      sub_1B16B9740();
      v56 = sub_1B13E208C(a1, a2, v57);
      sub_1B16BA34C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B139E000, v22, v37, "Presentation operation (%s) has reported that its presentation is now complete! | Please review the associated presentation handler log channel for details about the presentation process.", v38, 0xCu);
      v21 = (uint64_t *)MEMORY[0x1E0DEE9B8];
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v39, -1, -1);
      MEMORY[0x1B5E1F1FC](v38, -1, -1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      v21 = (uint64_t *)MEMORY[0x1E0DEE9B8];
    }
    v19 = (_QWORD *)(v5 + 40);
    if ((v53 & 1) != 0)
    {
      swift_bridgeObjectRetain_n();
      v40 = sub_1B16B8BAC();
      v41 = sub_1B16BA058();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v57[0] = v43;
        *(_DWORD *)v42 = 136315138;
        sub_1B16B9740();
        v56 = sub_1B13E208C(a1, a2, v57);
        sub_1B16BA34C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B139E000, v40, v41, "Presentation operation (%s) is flagged to terminate the current presentation session.  Presentation queue will be emptied. . .", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B5E1F1FC](v43, -1, -1);
        MEMORY[0x1B5E1F1FC](v42, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
LABEL_41:
      *(_QWORD *)(v5 + 40) = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      sub_1B13A1944(0, &qword_1ED17D8D0);
      goto LABEL_42;
    }
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v5 + 40) + 16))
    {
      sub_1B16B9740();
      sub_1B16B9740();
      sub_1B13A4A18(0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B13A1944(0, &qword_1ED17D8D0);
      goto LABEL_42;
    }
    goto LABEL_44;
  }
  if (qword_1ED186090 != -1)
    swift_once();
  v31 = sub_1B16B8BC4();
  __swift_project_value_buffer(v31, (uint64_t)qword_1ED190460);
  swift_bridgeObjectRetain_n();
  v32 = sub_1B16B8BAC();
  v33 = sub_1B16BA040();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v57[0] = v35;
    *(_DWORD *)v34 = 136315138;
    sub_1B16B9740();
    v56 = sub_1B13E208C(a1, a2, v57);
    sub_1B16BA34C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B139E000, v32, v33, "Presentation operation (%s) just completed execution but the pending operation queue is already empty!", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v35, -1, -1);
    MEMORY[0x1B5E1F1FC](v34, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1B13A1944(0, &qword_1ED17D8D0);
LABEL_42:
  sub_1B16B8A8C();
  sub_1B13A1818(0, (unint64_t *)&qword_1ED188560);
  v49 = (void *)sub_1B16BA0DC();
  sub_1B16B899C();
  swift_release();
  swift_release();

}

uint64_t sub_1B152D890(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[20];
  v2 = a1[21];
  __swift_project_boxed_opaque_existential_1(a1 + 17, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2);
}

uint64_t sub_1B152D8E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;

  sub_1B13A3DB4();
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED186090 != -1)
    swift_once();
  v7 = sub_1B16B8BC4();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED190460);
  v8 = a1;
  v9 = a1;
  v10 = sub_1B16B8BAC();
  v11 = sub_1B16BA058();
  if (os_log_type_enabled(v10, v11))
  {
    v18[0] = v1;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v19 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_getErrorValue();
    v14 = sub_1B16BA9DC();
    v18[1] = sub_1B13E208C(v14, v15, &v19);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B139E000, v10, v11, "Failed to retrieve app background date and / or required background time interval because of the following error: %s. | Assuming background date in distant past and proceeding with app launch processing. . .", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v13, -1, -1);
    MEMORY[0x1B5E1F1FC](v12, -1, -1);
  }
  else
  {

  }
  sub_1B16B7B2C();
  v16 = sub_1B16B7BB0();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v16);
  sub_1B13DE5B0(0, &qword_1EEF32F78, (uint64_t (*)(uint64_t))sub_1B13A3DB4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1B16B89F0();
}

uint64_t sub_1B152DB40(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  BOOL v22;

  sub_1B13A3DB4();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B16B7BB0();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (char *)&v21 - v15;
  sub_1B16B7BA4();
  sub_1B150E110(a1, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    sub_1B16B7B2C();
    sub_1B152F140((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
  }
  sub_1B16B7B38();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v19(v16, v8);
  v22 = sub_1B152DCE0(v18, a2);
  sub_1B13C5C9C(0, (unint64_t *)&qword_1ED186078, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1B16B89F0();
}

BOOL sub_1B152DCE0(double a1, double a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;

  if (a2 >= a1)
  {
    if (qword_1ED186090 != -1)
      swift_once();
    v9 = sub_1B16B8BC4();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED190460);
    v5 = sub_1B16B8BAC();
    v6 = sub_1B16BA058();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      *(_DWORD *)v7 = 134218240;
      sub_1B16BA34C();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1B16BA34C();
      v8 = "Time interval since last background date: %f | Minimum time interval since last background: %f | An insuffici"
           "ent amount of time has passed to treat this scene activation as an application launch.";
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_1ED186090 != -1)
      swift_once();
    v4 = sub_1B16B8BC4();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED190460);
    v5 = sub_1B16B8BAC();
    v6 = sub_1B16BA058();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      *(_DWORD *)v7 = 134218240;
      sub_1B16BA34C();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1B16BA34C();
      v8 = "Time interval since last background date: %f | Minimum time interval since last background: %f | Enough time "
           "has passed to treat this scene activation as an application launch.";
LABEL_10:
      _os_log_impl(&dword_1B139E000, v5, v6, v8, (uint8_t *)v7, 0x16u);
      MEMORY[0x1B5E1F1FC](v7, -1, -1);
    }
  }

  return a2 < a1;
}

uint64_t sub_1B152DEE4()
{
  return sub_1B16B86A8();
}

uint64_t sub_1B152DEEC()
{
  return sub_1B16B86A8();
}

Swift::Void __swiftcall PresentationOperationManager.sceneDidEnterBackground()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_1B16B7BB0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v6);
  sub_1B16B7BA4();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 96))(v5, v6, v7);
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  *(_BYTE *)(v0 + 216) = 1;
}

uint64_t sub_1B152DFB0()
{
  return sub_1B16B84E0();
}

uint64_t sub_1B152DFB8()
{
  return sub_1B16B8504();
}

uint64_t sub_1B152DFC4()
{
  return sub_1B16B8504();
}

uint64_t sub_1B152DFCC()
{
  return sub_1B16B84E0();
}

uint64_t sub_1B152DFD4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v2 = a1 + 17;
  v3 = a1[20];
  v4 = a1[21];
  __swift_project_boxed_opaque_existential_1(a1 + 17, v3);
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = sub_1B16B9740();
  v5(v6, v3, v4);
  swift_bridgeObjectRelease();
  v7 = a1[20];
  v8 = a1[21];
  __swift_project_boxed_opaque_existential_1(v2, v7);
  swift_beginAccess();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 80);
  v10 = sub_1B16B9740();
  v9(v10, v7, v8);
  swift_bridgeObjectRelease();
  v11 = sub_1B16B8A5C();
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_1B152E0E0()
{
  return sub_1B13C3704();
}

uint64_t sub_1B152E108()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B152E12C()
{
  return sub_1B152B368();
}

uint64_t sub_1B152E134()
{
  return sub_1B152B3B4();
}

unint64_t sub_1B152E140()
{
  unint64_t result;

  result = qword_1EEF32F60;
  if (!qword_1EEF32F60)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PresentationHandlerError, &type metadata for PresentationHandlerError);
    atomic_store(result, (unint64_t *)&qword_1EEF32F60);
  }
  return result;
}

unint64_t sub_1B152E180()
{
  unint64_t result;

  result = qword_1EEF32F68;
  if (!qword_1EEF32F68)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PresentationOperation.LaunchConditions, &type metadata for PresentationOperation.LaunchConditions);
    atomic_store(result, (unint64_t *)&qword_1EEF32F68);
  }
  return result;
}

unint64_t sub_1B152E1C0()
{
  unint64_t result;

  result = qword_1EEF32F70;
  if (!qword_1EEF32F70)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PresentationOperation.LaunchConditions, &type metadata for PresentationOperation.LaunchConditions);
    atomic_store(result, (unint64_t *)&qword_1EEF32F70);
  }
  return result;
}

uint64_t dispatch thunk of PresentationHandlerType.requiresPresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void type metadata accessor for PresentationHandlerError()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t assignWithCopy for PresentationOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v6;
  return a1;
}

void *__swift_memcpy97_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t assignWithTake for PresentationOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationOperation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationOperation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

_QWORD *assignWithCopy for LaunchPresentationConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for LaunchPresentationConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchPresentationConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchPresentationConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeLastKnownConfigVersion(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storePresentationAttempts(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveRetryCounts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveSuccessfulPresentations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeSuccessfulPresentations(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveAppBackgroundDate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeAppBackgroundDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of LaunchConditionProviderType.launchConditions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t storeEnumTagSinglePayload for PresentationProcessingStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B152E5C0 + 4 * byte_1B16CEDF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B152E5F4 + 4 * byte_1B16CEDF0[v4]))();
}

uint64_t sub_1B152E5F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B152E5FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B152E604);
  return result;
}

uint64_t sub_1B152E610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B152E618);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B152E61C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B152E624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PresentationProcessingStatus()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t dispatch thunk of PresentationOperationManagerType.disablePresentationProcessing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PresentationOperationManagerType.disablePresentationProcessing.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t method lookup function for PresentationOperationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:launchConditionProvider:dataStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:dataStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1B152E670()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B152E694(_BYTE *a1)
{
  uint64_t v1;

  return sub_1B152B930(a1, *(_BYTE *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

void sub_1B152E6B0()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1ED187638)
  {
    sub_1B145615C(255, &qword_1ED186DF0, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DEA048]);
    sub_1B14885E0();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED187638);
  }
}

uint64_t sub_1B152E74C(uint64_t *a1)
{
  _QWORD *v1;

  return sub_1B152BDC0(a1, v1);
}

uint64_t sub_1B152E764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13C5C9C(0, &qword_1ED186E28, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B152E7C4(void *a1, char a2)
{
  uint64_t v2;

  return sub_1B152C9A0(a1, a2 & 1, *(_QWORD *)(v2 + 16), (const void *)(v2 + 24));
}

uint64_t sub_1B152E7D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v33;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  if (!v3)
    return 0;
  sub_1B16B9740();
  swift_beginAccess();
  v5 = 0;
  v6 = 0;
  while (1)
  {
    v7 = v2;
    v8 = *(_QWORD *)(v2 + v5 + 48);
    v9 = *(_QWORD *)(v2 + v5 + 56);
    v10 = a2;
    v11 = *a2;
    sub_1B16B9740();
    swift_bridgeObjectRetain_n();
    sub_1B16B9740();
    sub_1B13FD970(v8, v9, v11);
    LOBYTE(v8) = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      break;
    ++v6;
    v5 += 104;
    a2 = v10;
    v2 = v7;
    if (v3 == v6)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v7 + 16);
    }
  }
  v13 = v7;
  result = swift_bridgeObjectRelease();
  v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 == *(_QWORD *)(v13 + 16))
      return v6;
    v16 = v5 + 232;
    v17 = v10;
    result = swift_beginAccess();
    while (v15 < *(_QWORD *)(v13 + 16))
    {
      v58 = v13;
      v18 = v13 + v16;
      v19 = *(_QWORD *)(v13 + v16 - 80);
      v20 = *(_QWORD *)(v13 + v16 - 72);
      v21 = *v17;
      sub_1B16B9740();
      swift_bridgeObjectRetain_n();
      sub_1B16B9740();
      sub_1B13FD970(v19, v20, v21);
      LOBYTE(v19) = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      result = swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        if (v15 == v6)
        {
          v17 = v10;
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0)
            goto LABEL_28;
          v23 = *(_QWORD *)(v13 + 16);
          if (v6 >= v23)
            goto LABEL_29;
          if (v15 >= v23)
            goto LABEL_30;
          v24 = v13 + 32 + 104 * v6;
          v45 = *(_QWORD *)v24;
          v25 = *(_QWORD *)(v24 + 24);
          v43 = *(_QWORD *)(v24 + 16);
          v46 = *(_OWORD *)(v24 + 32);
          v42 = *(_BYTE *)(v24 + 48);
          v41 = *(_QWORD *)(v24 + 56);
          v39 = *(_BYTE *)(v24 + 65);
          v40 = *(_BYTE *)(v24 + 64);
          v38 = *(_QWORD *)(v24 + 72);
          v37 = *(_BYTE *)(v24 + 80);
          v36 = *(_QWORD *)(v24 + 88);
          v35 = *(_BYTE *)(v24 + 96);
          v26 = *(_QWORD *)(v18 - 88);
          v27 = *(_QWORD *)(v18 - 72);
          v56 = *(_QWORD *)(v18 - 80);
          v57 = *(_QWORD *)(v18 - 96);
          v55 = *(_QWORD *)(v18 - 64);
          v54 = *(_QWORD *)(v18 - 56);
          v53 = *(_BYTE *)(v18 - 48);
          v52 = *(_QWORD *)(v18 - 40);
          v50 = *(_BYTE *)(v18 - 31);
          v51 = *(_BYTE *)(v18 - 32);
          v49 = *(_QWORD *)(v18 - 24);
          v28 = *(_BYTE *)(v18 - 16);
          v29 = *(_QWORD *)(v18 - 8);
          v47 = *(_BYTE *)(v13 + v16);
          v48 = v28;
          v44 = *(_QWORD *)(v24 + 8);
          sub_1B16B9740();
          sub_1B16B9740();
          sub_1B16B9740();
          sub_1B16B9740();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B162F428();
            v58 = v33;
          }
          v30 = v58 + 104 * v6;
          v13 = v58;
          *(_QWORD *)(v30 + 32) = v57;
          *(_QWORD *)(v30 + 40) = v26;
          *(_QWORD *)(v30 + 48) = v56;
          *(_QWORD *)(v30 + 56) = v27;
          *(_QWORD *)(v30 + 64) = v55;
          *(_QWORD *)(v30 + 72) = v54;
          *(_BYTE *)(v30 + 80) = v53;
          *(_QWORD *)(v30 + 88) = v52;
          *(_BYTE *)(v30 + 96) = v51;
          *(_BYTE *)(v30 + 97) = v50;
          *(_QWORD *)(v30 + 104) = v49;
          *(_BYTE *)(v30 + 112) = v48;
          *(_QWORD *)(v30 + 120) = v29;
          *(_BYTE *)(v30 + 128) = v47;
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if (v15 >= *(_QWORD *)(v58 + 16))
            goto LABEL_31;
          v31 = (_BYTE *)(v58 + v16);
          *((_QWORD *)v31 - 12) = v45;
          *((_QWORD *)v31 - 11) = v44;
          *((_QWORD *)v31 - 10) = v43;
          *((_QWORD *)v31 - 9) = v25;
          *((_OWORD *)v31 - 4) = v46;
          *(v31 - 48) = v42;
          *((_QWORD *)v31 - 5) = v41;
          *(v31 - 32) = v40;
          *(v31 - 31) = v39;
          *((_QWORD *)v31 - 3) = v38;
          *(v31 - 16) = v37;
          *((_QWORD *)v31 - 1) = v36;
          *v31 = v35;
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          *a1 = v58;
          v17 = v10;
        }
        if (__OFADD__(v6++, 1))
          goto LABEL_27;
      }
      else
      {
        v17 = v10;
      }
      ++v15;
      v16 += 104;
      if (v15 == *(_QWORD *)(v13 + 16))
        return v6;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B152EC10()
{
  _QWORD *v0;

  return sub_1B152C90C(v0);
}

uint64_t sub_1B152EC28()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_29_18();
  swift_bridgeObjectRelease();
  sub_1B152EC60(*(id *)(v0 + 128), *(_BYTE *)(v0 + 136));
  return swift_deallocObject();
}

void sub_1B152EC60(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_1B152EC6C()
{
  uint64_t v0;

  return sub_1B152CC10(*(_QWORD *)(v0 + 16), v0 + 24, *(void **)(v0 + 128), *(_BYTE *)(v0 + 136));
}

id sub_1B152EC80(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_1B152EC8C()
{
  return OUTLINED_FUNCTION_21_22();
}

uint64_t sub_1B152ECA0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B152ECC4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1B152C4B8(a1, a2, v2);
}

uint64_t sub_1B152ECDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B152ED08(void *a1)
{
  uint64_t v1;

  return sub_1B152BF90(a1, v1 + 16);
}

void sub_1B152ED24(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B152C1FC(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

uint64_t sub_1B152ED40(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v9;

  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  *v2 = 0x8000000000000000;
  v7 = sub_1B152EDC0(a1, a2, isUniquelyReferenced_nonNull_native);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B152EDC0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t *v34;
  uint64_t result;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;

  v4 = v3;
  v8 = *v3;
  sub_1B16BAA48();
  sub_1B16B98FC();
  v9 = sub_1B16BAA78();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v13 = *(_QWORD *)(v8 + 48);
    v14 = (_QWORD *)(v13 + 16 * v11);
    v15 = v14[1];
    v16 = *v14 == a1 && v15 == a2;
    if (v16 || (sub_1B16BA910(*v14, v15, a1, a2, 0) & 1) != 0)
    {
LABEL_7:
      v17 = 0;
      v18 = 1;
      goto LABEL_18;
    }
    v19 = ~v10;
    v11 = (v11 + 1) & ~v10;
    if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v17 = 1;
      while (1)
      {
        v20 = (_QWORD *)(v13 + 16 * v11);
        v21 = v20[1];
        v22 = *v20 == a1 && v21 == a2;
        if (v22 || (sub_1B16BA910(*v20, v21, a1, a2, 0) & 1) != 0)
          goto LABEL_7;
        v11 = (v11 + 1) & v19;
        if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        {
          v18 = 0;
          goto LABEL_18;
        }
      }
    }
  }
  v18 = 0;
  v17 = 1;
LABEL_18:
  v23 = *(_QWORD *)(v8 + 16);
  v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v25 = *(_QWORD *)(v8 + 24);
  if (v25 >= v24 && (a3 & 1) != 0)
  {
    if (!v18)
      goto LABEL_46;
    goto LABEL_36;
  }
  if ((a3 & 1) != 0)
  {
    sub_1B14277B8();
  }
  else
  {
    if (v25 >= v24)
    {
      sub_1B14D4344(v24);
      if (!v18)
      {
LABEL_46:
        v40 = *v4;
        *(_QWORD *)(*v4 + 8 * (v11 >> 6) + 56) |= 1 << v11;
        v41 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v11);
        *v41 = a1;
        v41[1] = a2;
        v42 = *(_QWORD *)(v40 + 16);
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (!v43)
        {
          result = 0;
          *(_QWORD *)(v40 + 16) = v44;
          return result;
        }
        goto LABEL_49;
      }
LABEL_36:
      v34 = (uint64_t *)(*(_QWORD *)(*v4 + 48) + 16 * v11);
      result = *v34;
      *v34 = a1;
      v34[1] = a2;
      return result;
    }
    sub_1B1427B80();
  }
  v26 = *v4;
  sub_1B16BAA48();
  sub_1B16B98FC();
  v27 = sub_1B16BAA78();
  v28 = -1 << *(_BYTE *)(v26 + 32);
  v11 = v27 & ~v28;
  v29 = v26 + 56;
  if (((*(_QWORD *)(v26 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    goto LABEL_45;
  v30 = *(_QWORD *)(v26 + 48);
  v31 = (_QWORD *)(v30 + 16 * v11);
  v32 = v31[1];
  v33 = *v31 == a1 && v32 == a2;
  if (!v33 && (sub_1B16BA910(*v31, v32, a1, a2, 0) & 1) == 0)
  {
    v36 = ~v28;
    while (1)
    {
      v11 = (v11 + 1) & v36;
      if (((*(_QWORD *)(v29 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        break;
      v37 = (_QWORD *)(v30 + 16 * v11);
      v38 = v37[1];
      v39 = *v37 == a1 && v38 == a2;
      if (v39 || (sub_1B16BA910(*v37, v38, a1, a2, 0) & 1) != 0)
        goto LABEL_35;
    }
LABEL_45:
    if ((v18 & 1) == 0)
      goto LABEL_46;
    goto LABEL_50;
  }
LABEL_35:
  if ((v18 & 1) != 0)
    goto LABEL_36;
LABEL_50:
  result = sub_1B16BA9AC();
  __break(1u);
  return result;
}

unint64_t sub_1B152F0A0()
{
  unint64_t result;

  result = qword_1ED17CB28;
  if (!qword_1ED17CB28)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16CF45C, &unk_1E6319450);
    atomic_store(result, (unint64_t *)&qword_1ED17CB28);
  }
  return result;
}

uint64_t sub_1B152F0DC()
{
  return sub_1B152BCB0();
}

uint64_t sub_1B152F0F8(uint64_t (*a1)(uint64_t))
{
  return sub_1B152BD54(a1);
}

uint64_t sub_1B152F100()
{
  _QWORD *v0;

  return sub_1B152D890(v0);
}

uint64_t sub_1B152F118()
{
  return swift_deallocObject();
}

uint64_t sub_1B152F128(uint64_t a1)
{
  uint64_t v1;

  return sub_1B152DB40(a1, *(double *)(v1 + 16));
}

uint64_t sub_1B152F140(uint64_t a1)
{
  uint64_t v2;

  sub_1B13A3DB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s5TeaUI24PresentationHandlerErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B152F1BC + 4 * byte_1B16CEDFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B152F1DC + 4 * byte_1B16CEDFF[v4]))();
}

_BYTE *sub_1B152F1BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B152F1DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B152F1E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B152F1EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B152F1F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B152F1FC(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for PresentationOperationManager.PresentationOperationManagerError()
{
  OUTLINED_FUNCTION_11_0();
}

unint64_t sub_1B152F218()
{
  unint64_t result;

  result = qword_1EEF32F80;
  if (!qword_1EEF32F80)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16CF434, &unk_1E6319450);
    atomic_store(result, (unint64_t *)&qword_1EEF32F80);
  }
  return result;
}

uint64_t sub_1B152F260()
{
  return sub_1B152E0E0();
}

uint64_t sub_1B152F274(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _BYTE v18[32];
  _QWORD v19[5];
  uint64_t v20;

  sub_1B13C5AF4(a1, v19);
  v3 = v19[0];
  v20 = v19[1];
  v4 = v19[3];
  v5 = v19[4];
  v6 = (unint64_t)(v19[2] + 64) >> 6;
  result = sub_1B16B9740();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v9 = v8 | (v4 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    sub_1B14297B8(*(_QWORD *)(v3 + 56) + 32 * v9, (uint64_t)v18);
    v17[0] = v15;
    v17[1] = v16;
    sub_1B16B9740();
    a2(v15, v16, v18);
    result = sub_1B1531C18((uint64_t)v17);
    if (v5)
      goto LABEL_2;
LABEL_3:
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v10 >= v6)
      return swift_release();
    v11 = *(_QWORD *)(v20 + 8 * v10);
    v12 = v4 + 1;
    if (!v11)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v6)
        return swift_release();
      v11 = *(_QWORD *)(v20 + 8 * v12);
      if (!v11)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v6)
          return swift_release();
        v11 = *(_QWORD *)(v20 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v6)
            return swift_release();
          v11 = *(_QWORD *)(v20 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v6)
              return swift_release();
            v11 = *(_QWORD *)(v20 + 8 * v12);
            if (!v11)
            {
              v13 = v4 + 6;
              while (v13 < v6)
              {
                v11 = *(_QWORD *)(v20 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v4 = v12;
  }
  __break(1u);
  return result;
}

UIImage __swiftcall UIImage.with(tintColor:size:)(UIColor tintColor, CGSize_optional size)
{
  double v2;
  char v3;
  objc_class *v4;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  UIColor *v11;
  uint64_t v12;
  void *v13;
  objc_class *v14;
  objc_class *v15;
  id v16;
  char v17;
  UIImage result;
  uint64_t v19;
  uint64_t v20;

  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_0((uint64_t)tintColor.super.isa, sel_size);
    v6 = v8;
    v7 = v9;
  }
  else
  {
    v6 = *(double *)&size.is_nil;
    v7 = v2;
  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v6, v7);
  v11 = (UIColor *)OUTLINED_FUNCTION_25();
  v11[2].super.isa = tintColor.super.isa;
  v11[3].super.isa = v4;
  v11[4].super.isa = 0;
  v11[5].super.isa = 0;
  *(double *)&v11[6].super.isa = v6;
  *(double *)&v11[7].super.isa = v7;
  v12 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v12 + 16) = sub_1B152F8B8;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13CC30C, MEMORY[0x1E0C809B0], 1107296256, v19, v20);
  v14 = tintColor.super.isa;
  v15 = v4;
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v10, sel_imageWithActions_, v13);

  _Block_release(v13);
  v17 = OUTLINED_FUNCTION_8_38();
  swift_release();
  result.super.isa = (Class)OUTLINED_FUNCTION_58_0();
  if ((v17 & 1) != 0)
    __break(1u);
  else
    OUTLINED_FUNCTION_6_55();
  return result;
}

id sub_1B152F588(void *a1, id a2, void *a3, double a4, double a5, double a6, double a7)
{
  objc_msgSend(a2, sel_setFill);
  objc_msgSend(a3, sel_drawInRect_, a4, a5, a6, a7);
  return objc_msgSend(a1, sel_fillRect_blendMode_, 22, a4, a5, a6, a7);
}

void UIImage.blend(with:blendMode:)(void *a1, int a2)
{
  void *v2;
  void *v3;
  id v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_imageRendererFormat);
  objc_msgSend(v3, sel_scale);
  objc_msgSend(v6, sel_setScale_);
  OUTLINED_FUNCTION_151(v6, sel_setOpaque_);
  objc_msgSend(v3, sel_size);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v6, v7, v8);
  v10 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = a1;
  *(_DWORD *)(v10 + 32) = a2;
  v11 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v11 + 16) = sub_1B152F8F0;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13CC30C, MEMORY[0x1E0C809B0], 1107296256, v16, v17);
  v13 = v3;
  v14 = a1;
  swift_retain();
  swift_release();
  v15 = objc_msgSend(v9, sel_imageWithActions_, v12);

  _Block_release(v12);
  LOBYTE(v6) = OUTLINED_FUNCTION_8_38();
  OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_58_0();
  if ((v6 & 1) != 0)
    __break(1u);
  else
    OUTLINED_FUNCTION_6_55();
}

id sub_1B152F7D0(void *a1, id a2, void *a3, uint64_t a4)
{
  double v8;
  double v9;
  double v10;
  double v11;

  objc_msgSend(a2, sel_size);
  v9 = v8;
  v11 = v10;
  objc_msgSend(a3, sel_setFill);
  objc_msgSend(a2, sel_drawInRect_, 0.0, 0.0, v9, v11);
  return objc_msgSend(a1, sel_fillRect_blendMode_, a4, 0.0, 0.0, v9, v11);
}

uint64_t sub_1B152F870()
{
  OUTLINED_FUNCTION_43_0();
  return swift_deallocObject();
}

uint64_t sub_1B152F894()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_140_0();
  return swift_deallocObject();
}

id sub_1B152F8B8(void *a1)
{
  uint64_t v1;

  return sub_1B152F588(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_1B152F8CC()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_140_0();
  return swift_deallocObject();
}

id sub_1B152F8F0(void *a1)
{
  uint64_t v1;

  return sub_1B152F7D0(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(unsigned int *)(v1 + 32));
}

void sub_1B152F900(uint64_t a1, void *a2, void *a3, double a4, double a5)
{
  double v9;
  uint64_t v10;
  double Alpha;
  CGContext *v12;
  CGContext *v13;
  id v14;
  CGContext *v15;
  CGContext *v16;
  CGColor *color;
  CGRect v18;
  CGRect v19;

  v9 = *(double *)a1;
  v10 = *(char *)(a1 + 16);
  color = (CGColor *)*(id *)(a1 + 8);
  Alpha = CGColorGetAlpha(color);
  v12 = (CGContext *)objc_msgSend(a2, sel_CGContext);
  CGContextSetFillColorWithColor(v12, color);

  v13 = (CGContext *)objc_msgSend(a2, sel_CGContext);
  CGContextSetStrokeColorWithColor(v13, color);

  if (a3)
  {
    v14 = a3;
    objc_msgSend(v14, sel_setLineWidth_, v9 + v9);
    objc_msgSend(v14, sel_strokeWithBlendMode_alpha_, dword_1B16CF550[v10], Alpha);
  }
  else
  {
    v15 = (CGContext *)objc_msgSend(a2, sel_CGContext);
    CGContextSetAlpha(v15, Alpha);

    v16 = (CGContext *)objc_msgSend(a2, sel_CGContext);
    CGContextSetBlendMode(v16, dword_1B16CF550[v10]);

    v14 = objc_msgSend(a2, sel_CGContext);
    v18.origin.x = v9 * 0.5;
    v18.origin.y = v9 * 0.5;
    v18.size.width = a4 - v9;
    v18.size.height = a5 - v9;
    v19 = CGRectIntegral(v18);
    CGContextStrokeRectWithWidth((CGContextRef)v14, v19, v9);
  }

}

void UIImage.roundedCornerImage(of:scale:cornerRadius:)(double a1, double a2, double a3)
{
  _QWORD v3[2];
  char v4;

  v3[0] = 0;
  v3[1] = 0;
  v4 = 0;
  UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:imageScaleFactor:)(0, a1, a2, a3, (uint64_t)v3, 0);
  OUTLINED_FUNCTION_62_0();
}

uint64_t UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:imageScaleFactor:)(char a1, double a2, double a3, double a4, uint64_t a5, void *a6)
{
  void *v6;
  double v7;
  double v8;
  uint64_t v11;
  double v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  char v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char v23;
  double v24;
  id v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  id v35;
  double v36;
  double v37;
  void *v38;
  const char *v39;
  double v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_12_29();
  v14 = *v13;
  v15 = (void *)v13[1];
  v16 = *((_BYTE *)v13 + 16);
  v17 = 0.0;
  v19 = v18;
  v20 = 0.0;
  v22 = v21;
  if ((v23 & 1) == 0)
  {
    v24 = v12;
    v20 = (v7 - v7 * v12) * 0.5;
    v17 = (v8 - v8 * v12) * 0.5;
    v25 = OUTLINED_FUNCTION_2_0(v11, sel_size);
    v27 = v26;
    v28 = OUTLINED_FUNCTION_2_0((uint64_t)v25, sel_size);
    v30 = v29;
    v31 = OUTLINED_FUNCTION_2_0((uint64_t)v28, sel_size);
    if (v30 < v27)
      v32 = v33;
    v34 = v8 / v32;
    v35 = OUTLINED_FUNCTION_2_0((uint64_t)v31, sel_size);
    v19 = v34 * v36 * v24;
    OUTLINED_FUNCTION_2_0((uint64_t)v35, sel_size);
    v22 = v34 * v37 * v24;
  }
  objc_opt_self();
  v40 = OUTLINED_FUNCTION_15_24();
  if ((a1 & 1) != 0)
    v41 = objc_msgSend(v38, v39, -1, v40);
  else
    v41 = objc_msgSend(v38, v39, v40);
  v42 = v41;
  OUTLINED_FUNCTION_5((uint64_t)v42, &qword_1ED187290);
  v43 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_preferredFormat);
  OUTLINED_FUNCTION_151(v43, sel_setOpaque_);
  objc_msgSend(v43, sel_setScale_, a4);
  v44 = OUTLINED_FUNCTION_11_33(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_);
  v45 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v45 + 16) = v6;
  *(_QWORD *)(v45 + 24) = a6;
  *(_QWORD *)(v45 + 32) = v42;
  *(double *)(v45 + 40) = v17;
  *(double *)(v45 + 48) = v20;
  *(double *)(v45 + 56) = v19;
  *(double *)(v45 + 64) = v22;
  *(_QWORD *)(v45 + 72) = v14;
  *(_QWORD *)(v45 + 80) = v15;
  *(_BYTE *)(v45 + 88) = v16;
  *(double *)(v45 + 96) = v8;
  *(double *)(v45 + 104) = v7;
  v46 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v46 + 16) = sub_1B1531A30;
  *(_QWORD *)(v46 + 24) = v45;
  v47 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13CC30C, v54, *(uint64_t *)&a4, MEMORY[0x1E0C809B0], 1107296256, v56, v57);
  v48 = v15;
  swift_retain();
  v49 = v6;
  v50 = a6;
  v51 = v42;
  swift_release();
  v52 = objc_msgSend(v44, sel_imageWithActions_, v47);

  _Block_release(v47);
  LOBYTE(v51) = OUTLINED_FUNCTION_8_38();
  OUTLINED_FUNCTION_58_0();
  result = swift_release();
  if ((v51 & 1) == 0)
    return (uint64_t)v52;
  __break(1u);
  return result;
}

void UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:)(char a1, __int128 *a2, void *a3, double a4, double a5, double a6)
{
  char v6;
  __int128 v7;
  char v8;

  v6 = *((_BYTE *)a2 + 16);
  v7 = *a2;
  v8 = v6;
  UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:imageScaleFactor:)(a1, a4, a5, a6, (uint64_t)&v7, a3);
  OUTLINED_FUNCTION_62_0();
}

void sub_1B152FDD8(void *a1, void *a2, void *a3, id a4, uint64_t a5, void *a6, char a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11, double a12, double a13)
{
  id v25;
  CGContext *v26;
  CGColor *v27;
  id v28;
  _QWORD v29[2];
  char v30;
  CGRect v31;
  CGRect v32;

  if (a3)
  {
    v25 = a3;
    if ((sub_1B152FF3C(a2) & 1) != 0)
    {
      v26 = (CGContext *)objc_msgSend(a1, sel_CGContext);
      v27 = (CGColor *)objc_msgSend(v25, sel_CGColor);
      CGContextSetFillColorWithColor(v26, v27);

      objc_msgSend(a4, sel_fill);
    }

  }
  objc_msgSend(a4, sel_addClip);
  v31.origin.x = a8;
  v31.origin.y = a9;
  v31.size.width = a10;
  v31.size.height = a11;
  v32 = CGRectIntegral(v31);
  objc_msgSend(a2, sel_drawInRect_, v32.origin.x, v32.origin.y, v32.size.width, v32.size.height);
  if (a6)
  {
    v29[0] = a5;
    v29[1] = a6;
    v30 = a7;
    v28 = a6;
    sub_1B152F900((uint64_t)v29, a1, a4, a12, a13);

  }
}

unint64_t sub_1B152FF3C(void *a1)
{
  unint64_t result;
  void *v2;
  CGImageAlphaInfo AlphaInfo;

  result = (unint64_t)objc_msgSend(a1, sel_CGImage);
  if (result)
  {
    v2 = (void *)result;
    AlphaInfo = CGImageGetAlphaInfo((CGImageRef)result);

    if (AlphaInfo > kCGImageAlphaNoneSkipFirst)
      return 1;
    else
      return (0x1Eu >> AlphaInfo) & 1;
  }
  return result;
}

void *UIImage.scaledImage(with:targetScale:clipPath:)(void *a1, double a2, double a3, double a4)
{
  void *v4;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  id v16;
  uint64_t v18;
  CGImage *v19;
  CGImage *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  id v28;
  uint64_t v30;

  OUTLINED_FUNCTION_2_0((uint64_t)a1, sel_size);
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v4, sel_scale);
  v15 = v14;
  v16 = OUTLINED_FUNCTION_2_0((uint64_t)v13, sel_imageOrientation);
  if (v10 < a2 && v12 < a3)
  {
    v28 = v4;
  }
  else
  {
    v18 = (uint64_t)v16;
    v19 = (CGImage *)OUTLINED_FUNCTION_2_0((uint64_t)v16, sel_CGImage);
    if (v19)
    {
      v20 = v19;
      v21 = a2 / v10;
      if (a3 / v12 < a2 / v10)
        v21 = a3 / v12;
      v22 = a4 / v15 * v21;
      v23 = v10 * v15 * v22;
      v24 = v12 * v15 * v22;
      v25 = v22 * (double)(uint64_t)CGImageGetWidth(v19);
      v26 = v22 * (double)(uint64_t)CGImageGetHeight(v20);
      v30 = 0;
      v27 = (void *)MEMORY[0x1B5E1E968]();
      sub_1B15300FC(v4, a1, v20, (uint64_t)&v30, v18, v25, v26, v23, v24, a4);
      objc_autoreleasePoolPop(v27);

      return (void *)v30;
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_1B15300FC(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10)
{
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t result;
  _QWORD v28[6];

  v19 = objc_msgSend(a1, sel_imageRendererFormat);
  objc_msgSend(v19, sel_setScale_, 1.0);
  objc_msgSend(v19, sel_setOpaque_, 0);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v19, a6, a7);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a2;
  *(double *)(v21 + 24) = a7;
  *(_QWORD *)(v21 + 32) = a3;
  *(double *)(v21 + 40) = a8;
  *(double *)(v21 + 48) = a9;
  *(_QWORD *)(v21 + 56) = a4;
  *(double *)(v21 + 64) = a10;
  *(_QWORD *)(v21 + 72) = a5;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1B1531E90;
  *(_QWORD *)(v22 + 24) = v21;
  v28[4] = sub_1B13CC4AC;
  v28[5] = v22;
  v28[0] = MEMORY[0x1E0C809B0];
  v28[1] = 1107296256;
  v28[2] = sub_1B13CC30C;
  v28[3] = &block_descriptor_83;
  v23 = _Block_copy(v28);
  v24 = a2;
  v25 = a3;
  swift_retain();
  swift_release();
  v26 = objc_msgSend(v20, sel_imageWithActions_, v23);

  _Block_release(v23);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v19 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1B153030C(void *a1, id a2, double a3, double a4, double a5, double a6, uint64_t a7, void **a8, uint64_t a9)
{
  CGImageRef Image;
  CGImageRef v15;
  id v16;
  void *v17;
  CGContext *c;

  objc_msgSend(a2, sel_addClip);
  c = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetInterpolationQuality(c, kCGInterpolationHigh);
  CGContextScaleCTM(c, 1.0, -1.0);
  CGContextTranslateCTM(c, 0.0, -a3);
  sub_1B16B9FF8();
  Image = CGBitmapContextCreateImage(c);
  if (Image)
  {
    v15 = Image;
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_scale_orientation_, Image, a9, a6);

    v17 = *a8;
    *a8 = v16;
  }
  else
  {
    v17 = c;
  }

}

id UIImage.applying(descriptor:)()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v14;
  id v15;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9DDC8]), sel_initWithImage_, v15);
  if (!v0)
    return v15;
  v1 = v0;
  sub_1B16686B0();
  v2 = (void *)sub_1B16B983C();
  OUTLINED_FUNCTION_7_0();
  sub_1B16688A4();
  v3 = (void *)sub_1B16B96EC();
  OUTLINED_FUNCTION_7_0();
  v4 = objc_msgSend(v1, sel_imageByApplyingFilter_withInputParameters_, v2, v3);

  v5 = objc_allocWithZone(MEMORY[0x1E0C9DD90]);
  v6 = OUTLINED_FUNCTION_22_21();
  objc_msgSend(v4, sel_extent);
  v7 = objc_msgSend(v6, sel_createCGImage_fromRect_, v4);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v15, sel_scale);
    v10 = v9;
    v11 = objc_msgSend(v15, sel_imageOrientation);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_scale_orientation_, v8, v11, v10);

    return v12;
  }
  else
  {
    v14 = v15;

    return v14;
  }
}

void UIImage.applyingOverlay(gradient:blendMode:)(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  char __src[144];

  v9 = OUTLINED_FUNCTION_10_39(a1, a2, a3, a4, a5, a6, a7, a8, v18, (uint64_t)v20, __src[0]);
  OUTLINED_FUNCTION_12_1(v9, sel_size, v10, v11, v12, v13, v14, v15, v19, v21);
  if (sub_1B1530664(__src, v22, a2, v16, v17))
    OUTLINED_FUNCTION_13_34();
  else
    OUTLINED_FUNCTION_1_73(v22);
}

id sub_1B1530664(void *__src, void *a2, int a3, double a4, double a5)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id result;
  _QWORD v17[6];
  _BYTE __dst[144];

  memcpy(__dst, __src, sizeof(__dst));
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, a4, a5);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 16) = a2;
  *(double *)(v11 + 40) = a4;
  *(double *)(v11 + 48) = a5;
  memcpy((void *)(v11 + 56), __src, 0x90uLL);
  *(_DWORD *)(v11 + 200) = a3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1B1531CEC;
  *(_QWORD *)(v12 + 24) = v11;
  v17[4] = sub_1B13CC4AC;
  v17[5] = v12;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1B13CC30C;
  v17[3] = &block_descriptor_73;
  v13 = _Block_copy(v17);
  v14 = a2;
  sub_1B1531D08((uint64_t)__dst);
  swift_retain();
  swift_release();
  v15 = objc_msgSend(v10, sel_imageWithActions_, v13);

  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = (id)swift_release();
  if ((v10 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

void UIImage.applyingAlphaMask(gradient:)(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  UIImage v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  char __src[144];

  v8 = OUTLINED_FUNCTION_10_39(a1, a2, a3, a4, a5, a6, a7, a8, v21, (uint64_t)v23, __src[0]);
  OUTLINED_FUNCTION_12_1(v8, sel_size, v9, v10, v11, v12, v13, v14, v22, v24);
  v17 = sub_1B1530664(__src, 0, 2, v15, v16);
  if (v17 && (v18 = v17, v19.super.isa = (Class)v25, v20 = OUTLINED_FUNCTION_29_19(v19), v18, v20))
    OUTLINED_FUNCTION_13_34();
  else
    OUTLINED_FUNCTION_1_73(v25);
}

UIImage_optional __swiftcall UIImage.blendWithAlphaMask(image:with:)(UIImage image, UIImage with)
{
  uint64_t v2;
  id v5;
  Swift::Bool v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  objc_class *isa;
  objc_class *v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  UIImage v33;
  UIImage_optional result;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9DDC8]), sel_initWithImage_, v2);
  if (!v5)
    goto LABEL_10;
  v7 = v5;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9DDC8]), sel_initWithImage_, with.super.isa);
  if (!v8)
  {

LABEL_10:
    v33.super.isa = 0;
    goto LABEL_11;
  }
  v9 = v8;
  OUTLINED_FUNCTION_5((uint64_t)v8, &qword_1EEF32F88);
  v10 = v7;
  v11 = v9;
  isa = (objc_class *)sub_1B15318E4();
  if (!isa)
  {
    __break(1u);
    goto LABEL_13;
  }
  v13 = isa;
  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED1855F8, (uint64_t (*)(uint64_t))sub_1B1510AB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C51E0;
  v15 = sub_1B16B9860();
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 40) = v16;
  v17 = OUTLINED_FUNCTION_5(v15, &qword_1ED17D540);
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 80) = sub_1B16B9860();
  *(_QWORD *)(inited + 88) = v18;
  *(_QWORD *)(inited + 120) = v17;
  *(_QWORD *)(inited + 96) = v11;
  v19 = v10;
  v20 = v11;
  v21 = sub_1B16B9728();
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  sub_1B152F274(v23, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1B1531A54);

  OUTLINED_FUNCTION_7_0();
  v24 = -[objc_class outputImage](v13, sel_outputImage);
  if (!v24)
  {

    goto LABEL_10;
  }
  v25 = v24;
  v26 = objc_allocWithZone(MEMORY[0x1E0C9DD90]);
  v27 = OUTLINED_FUNCTION_22_21();
  objc_msgSend(v25, sel_extent);
  v28 = objc_msgSend(v27, sel_createCGImage_fromRect_, v25);
  if (!v28)
  {

    goto LABEL_10;
  }
  v29 = v28;
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_, v28);
  -[objc_class size](image.super.isa, sel_size);
  v33.super.isa = UIImage.with(size:)((CGSize)__PAIR128__(v32, v31)).super.isa;

LABEL_11:
  isa = v33.super.isa;
LABEL_13:
  result.value.super.isa = isa;
  result.is_nil = v6;
  return result;
}

id UIImage.applyingOverlay(gradient:blendMode:)(__int128 *a1, int a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  double v12;
  id result;
  __int128 v14;
  __int128 v15;
  id v16;
  _OWORD __src[2];
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v3 = v2;
  v14 = a1[1];
  v15 = *a1;
  v5 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((_BYTE *)a1 + 48);
  v8 = *((_QWORD *)a1 + 7);
  v9 = *((_QWORD *)a1 + 8);
  v10 = *((_BYTE *)a1 + 72);
  OUTLINED_FUNCTION_25_23((int)a1, sel_size, v3);
  __src[0] = v15;
  __src[1] = v14;
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  result = sub_1B1530C10(__src, v16, a2, v11, v12);
  if (!result)
    return v16;
  return result;
}

id sub_1B1530C10(void *__src, void *a2, int a3, double a4, double a5)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id result;
  _QWORD v17[6];
  _BYTE __dst[80];

  memcpy(__dst, __src, 0x49uLL);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, a4, a5);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(double *)(v11 + 24) = a4;
  *(double *)(v11 + 32) = a5;
  memcpy((void *)(v11 + 40), __src, 0x49uLL);
  *(_DWORD *)(v11 + 116) = a3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1B1531BD0;
  *(_QWORD *)(v12 + 24) = v11;
  v17[4] = sub_1B13CC4AC;
  v17[5] = v12;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1B13CC30C;
  v17[3] = &block_descriptor_63_0;
  v13 = _Block_copy(v17);
  v14 = a2;
  sub_1B1531BE8((uint64_t)__dst);
  swift_retain();
  swift_release();
  v15 = objc_msgSend(v10, sel_imageWithActions_, v13);

  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = (id)swift_release();
  if ((v10 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

void UIImage.applyingAlphaMask(gradient:)(__int128 *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  UIImage v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  _OWORD __src[2];
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v2 = v1;
  v15 = a1[1];
  v16 = *a1;
  v3 = *((_QWORD *)a1 + 4);
  v4 = *((_QWORD *)a1 + 5);
  v5 = *((_BYTE *)a1 + 48);
  v6 = *((_QWORD *)a1 + 7);
  v7 = *((_QWORD *)a1 + 8);
  v8 = *((_BYTE *)a1 + 72);
  OUTLINED_FUNCTION_25_23((int)a1, sel_size, v2);
  __src[0] = v16;
  __src[1] = v15;
  v19 = v3;
  v20 = v4;
  v21 = v5;
  v22 = v6;
  v23 = v7;
  v24 = v8;
  v11 = sub_1B1530C10(__src, 0, 2, v9, v10);
  if (v11 && (v12 = v11, v13.super.isa = (Class)v17, v14 = OUTLINED_FUNCTION_29_19(v13), v12, v14))
    OUTLINED_FUNCTION_13_34();
  else
    OUTLINED_FUNCTION_1_73(v17);
}

void sub_1B1530E7C(void *a1, void *a2, uint64_t a3, CGBlendMode a4, CGFloat a5, double a6)
{
  CGColorSpace *DeviceRGB;
  const __CFArray *v12;
  uint64_t v13;
  const CGFloat *v14;
  CGGradient *v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGFloat v26;
  CGContext *v27;
  CGContext *v28;
  id v29;
  _BYTE __dst[73];
  CGPoint v31;
  CGPoint v32;

  if (a2)
  {
    v29 = a2;
    objc_msgSend(v29, sel_drawInRect_blendMode_alpha_, 0, 0.0, 0.0, a5, a6, 1.0);
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    memcpy(__dst, (const void *)a3, sizeof(__dst));
    GradientDescriptor.cgColors.getter();
    type metadata accessor for CGColor(0);
    v12 = (const __CFArray *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
    memcpy(__dst, (const void *)a3, sizeof(__dst));
    v13 = GradientDescriptor.cgLocations.getter();
    if (v13)
      v14 = (const CGFloat *)(v13 + 32);
    else
      v14 = 0;
    v15 = CGGradientCreateWithColors(DeviceRGB, v12, v14);

    swift_bridgeObjectRelease();
    if (!v15)
      goto LABEL_17;
    v16 = *(double *)(a3 + 16);
    v17 = *(double *)(a3 + 24);
    v19 = *(double *)(a3 + 32);
    v18 = *(_QWORD *)(a3 + 40);
    if (*(_BYTE *)(a3 + 48) == 1)
    {
      v20 = *(_QWORD *)&v19 | *(_QWORD *)&v17;
      if (!(v20 | *(_QWORD *)&v16 | v18))
      {
        v23 = 0.5;
        v22 = a5 * 0.5;
        goto LABEL_14;
      }
      v21 = v20 | v18;
      if (*(_QWORD *)&v16 == 1 && !v21)
      {
        v22 = a5 * 0.5;
        v23 = 0.0;
LABEL_14:
        v25 = a6 * v23;
        v24 = 1.0;
LABEL_15:
        a5 = v22;
        goto LABEL_16;
      }
      if (*(_QWORD *)&v16 == 2 && !v21)
      {
        v22 = a5 * 0.5;
        v24 = 0.0;
        v25 = a6;
        goto LABEL_15;
      }
      if (*(_QWORD *)&v16 != 3 || v21)
      {
        if (*(_QWORD *)&v16 != 4 || v21)
        {
          if (*(_QWORD *)&v16 != 5 || v21)
          {
            if (*(_QWORD *)&v16 != 6 || v21)
            {
              if (*(_QWORD *)&v16 != 7 || v21)
              {
                v24 = 0.0;
                v22 = a5;
                a5 = a5 * 0.0;
              }
              else
              {
                v24 = 0.0;
                v22 = a5 * 0.0;
              }
              v25 = a6;
              goto LABEL_16;
            }
            v25 = a6 * 0.0;
            v22 = a5;
            a5 = a5 * 0.0;
          }
          else
          {
            v22 = a5 * 0.0;
            v25 = a6 * 0.0;
          }
          v24 = 1.0;
        }
        else
        {
          v24 = 0.5;
          v25 = a6 * 0.5;
          v22 = a5;
          a5 = a5 * 0.0;
        }
      }
      else
      {
        v22 = a5 * 0.0;
        v24 = 0.5;
        v25 = a6 * 0.5;
      }
    }
    else
    {
      v22 = v16 * a5;
      v24 = *(double *)(a3 + 40);
      v25 = v17 * a6;
      a5 = v19 * a5;
    }
LABEL_16:
    v26 = v24 * a6;
    v27 = (CGContext *)objc_msgSend(a1, sel_CGContext);
    CGContextSetBlendMode(v27, a4);

    v28 = (CGContext *)objc_msgSend(a1, sel_CGContext);
    v31.x = v22;
    v31.y = v25;
    v32.x = a5;
    v32.y = v26;
    CGContextDrawLinearGradient(v28, v15, v31, v32, 0);

LABEL_17:
  }
}

void sub_1B1531154(void *a1, void *a2, uint64_t a3, CGBlendMode a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  id v15;
  CGColorSpace *DeviceRGB;
  const __CFArray *v17;
  const CGFloat *v18;
  CGGradient *v19;
  CGContext *v20;
  CGContext *v21;
  CGPoint v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat Height;
  __int128 v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  CGFloat v37;
  CGPoint v38[9];
  CGPoint v39;
  _OWORD v40[2];
  char v41;
  _BYTE v42[40];
  _BYTE v43[40];
  _BYTE v44[8];
  uint64_t v45;
  double v46[4];
  char v47;
  double v48[4];
  char v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;

  if (a2)
  {
    v15 = a2;
    objc_msgSend(v15, sel_drawInRect_blendMode_alpha_, 0, a5, a6, a7, a8, 1.0);
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    memcpy(v38, (const void *)a3, sizeof(v38));
    v17 = (const __CFArray *)sub_1B1670E1C();
    sub_1B1531D4C(a3 + 136, (uint64_t)v44);
    sub_1B1531D4C((uint64_t)v44, (uint64_t)&v45);
    if (v45)
      v18 = (const CGFloat *)(v45 + 32);
    else
      v18 = 0;
    v19 = CGGradientCreateWithColors(DeviceRGB, v17, v18);

    if (v19)
    {
      v20 = (CGContext *)objc_msgSend(a1, sel_CGContext);
      CGContextSetBlendMode(v20, a4);

      v21 = (CGContext *)objc_msgSend(a1, sel_CGContext);
      v22 = *(CGPoint *)(a3 + 32);
      v38[0] = *(CGPoint *)(a3 + 16);
      v38[1] = v22;
      v38[2] = *(CGPoint *)(a3 + 48);
      LOBYTE(v38[3].x) = *(_BYTE *)(a3 + 64);
      sub_1B1531DF0((uint64_t)&v38[1], (uint64_t)v43);
      sub_1B1531DF0((uint64_t)v43, (uint64_t)v46);
      v23 = v46[0];
      if (v47 == 1)
      {
        v24 = v46[1];
        v25 = v46[3];
        v26 = vabdd_f64(v46[0], v46[2]);
        v50.origin.x = a5;
        v50.origin.y = a6;
        v50.size.width = a7;
        v50.size.height = a8;
        v27 = v26 * CGRectGetWidth(v50);
        v28 = vabdd_f64(v24, v25);
        v51.origin.x = a5;
        v51.origin.y = a6;
        v51.size.width = a7;
        v51.size.height = a8;
        Height = CGRectGetHeight(v51);
        v23 = sqrt(v27 * v27 + v28 * Height * (v28 * Height));
      }
      v30 = *(_OWORD *)(a3 + 88);
      v39 = *(CGPoint *)(a3 + 72);
      v40[0] = v30;
      v40[1] = *(_OWORD *)(a3 + 104);
      v41 = *(_BYTE *)(a3 + 120);
      sub_1B1531DF0((uint64_t)v40, (uint64_t)v42);
      sub_1B1531DF0((uint64_t)v42, (uint64_t)v48);
      v31 = v48[0];
      if (v49 == 1)
      {
        v32 = v48[1];
        v33 = v48[3];
        v34 = vabdd_f64(v48[0], v48[2]);
        v52.origin.x = a5;
        v52.origin.y = a6;
        v52.size.width = a7;
        v52.size.height = a8;
        v35 = v34 * CGRectGetWidth(v52);
        v36 = vabdd_f64(v32, v33);
        v53.origin.x = a5;
        v53.origin.y = a6;
        v53.size.width = a7;
        v53.size.height = a8;
        v37 = CGRectGetHeight(v53);
        v31 = sqrt(v35 * v35 + v36 * v37 * (v36 * v37));
      }
      CGContextDrawRadialGradient(v21, v19, v38[0], v23, v39, v31, 0);

    }
  }
}

uint64_t UIImage.Scaling.description.getter()
{
  return 0x6946746365707361;
}

BOOL static UIImage.Scaling.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void UIImage.Scaling.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

uint64_t UIImage.Scaling.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t sub_1B15314BC()
{
  UIImage.Scaling.description.getter();
  return 0x6946746365707361;
}

UIImage *UIImage.scaled(to:scaling:)()
{
  double v0;
  double v1;
  unsigned __int8 *v2;
  int v3;
  id v4;
  double v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _BOOL4 v13;
  double v14;
  double v15;
  double v16;
  int v17;
  double v18;
  double v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  double v27;
  double v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  double v36;
  double v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  double v44;
  double v45;
  UIImage *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  CGSize v57;

  OUTLINED_FUNCTION_12_29();
  v3 = *v2;
  OUTLINED_FUNCTION_25_23((int)v2, sel_size, v4);
  v14 = OUTLINED_FUNCTION_27_23(v5);
  if (!v3)
    v13 = v14 <= v15;
  if (v13)
    v16 = v15;
  else
    v16 = v14;
  v17 = OUTLINED_FUNCTION_12_1(v6, sel_size, v7, v8, v9, v10, v11, v12, v48, v52);
  v19 = (v1 - v16 * v18) * 0.5;
  v26 = OUTLINED_FUNCTION_12_1(v17, sel_size, v20, v21, v22, v23, v24, v25, v49, v53);
  v28 = (v0 - v16 * v27) * 0.5;
  v35 = OUTLINED_FUNCTION_12_1(v26, sel_size, v29, v30, v31, v32, v33, v34, v50, v54);
  v37 = v16 * v36;
  OUTLINED_FUNCTION_12_1(v35, sel_size, v38, v39, v40, v41, v42, v43, v51, v55);
  v45 = v16 * v44;
  v57.width = v1;
  v57.height = v0;
  UIGraphicsBeginImageContextWithOptions(v57, 0, 0.0);
  objc_msgSend(v56, sel_drawInRect_, v19, v28, v37, v45);
  v46 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (v46)
    return v46;
  else
    return (UIImage *)v56;
}

void UIImage.scaleImage(to:scaling:)()
{
  double v0;
  double v1;
  unsigned __int8 *v2;
  int v3;
  void *v4;
  id v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  void *v12;
  double v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  _BOOL4 v21;
  double v22;
  double v23;
  double v24;
  int v25;
  double v26;
  double v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  double v34;
  double v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_12_29();
  v3 = *v2;
  v47 = v4;
  v5 = objc_msgSend(v4, sel_CGImage);
  if (v5)
  {
    v12 = v5;
    OUTLINED_FUNCTION_12_1((int)v5, sel_size, v6, v7, v8, v9, v10, v11, v43, v47);
    v22 = OUTLINED_FUNCTION_27_23(v13);
    if (!v3)
      v21 = v22 <= v23;
    if (v21)
      v24 = v23;
    else
      v24 = v22;
    v25 = OUTLINED_FUNCTION_12_1(v14, sel_size, v15, v16, v17, v18, v19, v20, v44, v48);
    v27 = v24 * v26;
    OUTLINED_FUNCTION_12_1(v25, sel_size, v28, v29, v30, v31, v32, v33, v45, v49);
    v35 = round((v0 - v24 * v34) * 0.5);
    v36 = round(v24 * v34);
    v37 = OUTLINED_FUNCTION_16_32(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_);
    v38 = OUTLINED_FUNCTION_25();
    *(double *)(v38 + 16) = v1;
    *(double *)(v38 + 24) = v0;
    *(_QWORD *)(v38 + 32) = v12;
    *(double *)(v38 + 40) = round((v1 - v27) * 0.5);
    *(double *)(v38 + 48) = v35;
    *(double *)(v38 + 56) = round(v27);
    *(double *)(v38 + 64) = v36;
    v39 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v39 + 16) = sub_1B1531A7C;
    *(_QWORD *)(v39 + 24) = v38;
    v40 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13CC30C, v46, (uint64_t)v50, MEMORY[0x1E0C809B0], 1107296256, v51, v52);
    v41 = v12;
    swift_retain();
    OUTLINED_FUNCTION_59();
    v42 = objc_msgSend(v37, sel_imageWithActions_, v40);

    _Block_release(v40);
    LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v37 & 1) != 0)
      __break(1u);
    else
      OUTLINED_FUNCTION_13_34();
  }
  else
  {
    OUTLINED_FUNCTION_1_73(v47);
  }
}

void sub_1B1531830(void *a1, double a2, double a3)
{
  CGContext *c;

  c = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetInterpolationQuality(c, kCGInterpolationHigh);
  CGContextScaleCTM(c, 1.0, -1.0);
  CGContextTranslateCTM(c, 0.0, -a3);
  sub_1B16B9FF8();

}

id sub_1B15318E4()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_filterWithName_, v0);

  return v1;
}

id sub_1B1531944(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;

  if (a1)
  {
    type metadata accessor for CIContextOption(0);
    sub_1B1531E2C();
    v2 = (void *)sub_1B16B96EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend(v1, sel_initWithOptions_, v2);

  return v3;
}

uint64_t sub_1B15319CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();

  return swift_deallocObject();
}

uint64_t sub_1B1531A00()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_41_3();

  return swift_deallocObject();
}

void sub_1B1531A30(void *a1)
{
  uint64_t v1;

  sub_1B152FDD8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(id *)(v1 + 32), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_BYTE *)(v1 + 88), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(double *)(v1 + 96), *(double *)(v1 + 104));
}

void sub_1B1531A54(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  sub_1B1668C00(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_1B1531A5C()
{
  OUTLINED_FUNCTION_41_3();
  return swift_deallocObject();
}

void sub_1B1531A7C(void *a1)
{
  uint64_t v1;

  sub_1B1531830(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

unint64_t sub_1B1531A98()
{
  unint64_t result;

  result = qword_1EEF32F90;
  if (!qword_1EEF32F90)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for UIImage.Scaling, &type metadata for UIImage.Scaling);
    atomic_store(result, (unint64_t *)&qword_1EEF32F90);
  }
  return result;
}

uint64_t _s7ScalingOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1531B20 + 4 * byte_1B16CF4A1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1531B54 + 4 * byte_1B16CF49C[v4]))();
}

uint64_t sub_1B1531B54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1531B5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1531B64);
  return result;
}

uint64_t sub_1B1531B70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1531B78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1531B7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1531B84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIImage.Scaling()
{
  return &type metadata for UIImage.Scaling;
}

uint64_t sub_1B1531BA0()
{
  OUTLINED_FUNCTION_43_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B1531BD0(void *a1)
{
  uint64_t v1;

  sub_1B1530E7C(a1, *(void **)(v1 + 16), v1 + 40, *(CGBlendMode *)(v1 + 116), *(CGFloat *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1B1531BE8(uint64_t a1)
{
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t sub_1B1531C18(uint64_t a1)
{
  uint64_t v2;

  sub_1B1531C54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B1531C54()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED1836B0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED1836B0);
  }
}

uint64_t sub_1B1531CB4()
{
  OUTLINED_FUNCTION_43_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B1531CEC(void *a1)
{
  uint64_t v1;

  sub_1B1531154(a1, *(void **)(v1 + 16), v1 + 56, *(CGBlendMode *)(v1 + 200), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

uint64_t sub_1B1531D08(uint64_t a1)
{
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t sub_1B1531D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DE5B0(0, &qword_1ED17D4E8, (uint64_t (*)(uint64_t))sub_1B1531DA8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B1531DA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17D4E0)
  {
    v0 = sub_1B16B9C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED17D4E0);
  }
}

uint64_t sub_1B1531DF0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

unint64_t sub_1B1531E2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF2FE98;
  if (!qword_1EEF2FE98)
  {
    type metadata accessor for CIContextOption(255);
    result = MEMORY[0x1B5E1F0E8](&unk_1B16C4F5C, v1);
    atomic_store(result, (unint64_t *)&qword_1EEF2FE98);
  }
  return result;
}

uint64_t sub_1B1531E6C()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_41_3();
  return swift_deallocObject();
}

void sub_1B1531E90(void *a1)
{
  uint64_t v1;

  sub_1B153030C(a1, *(id *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 64), *(_QWORD *)(v1 + 32), *(void ***)(v1 + 56), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1B1531EE4()
{
  return sub_1B16BAA54();
}

uint64_t sub_1B1531F08()
{
  return OUTLINED_FUNCTION_105();
}

uint64_t sub_1B1531F1C()
{
  return sub_1B14DFD7C();
}

uint64_t sub_1B1531F30()
{
  return sub_1B1531EE4();
}

uint64_t sub_1B1531F44()
{
  sub_1B16BAA48();
  sub_1B1531EE4();
  return sub_1B16BAA78();
}

BOOL sub_1B1531F8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1453C54(*a1, *a2);
}

uint64_t sub_1B1531FA8()
{
  return sub_1B146E310();
}

uint64_t sub_1B1531FC0()
{
  return sub_1B146E210();
}

uint64_t sub_1B1531FD8()
{
  sub_1B16BAA48();
  sub_1B146E210();
  return sub_1B16BAA78();
}

uint64_t sub_1B1532024()
{
  swift_unknownObjectRetain();
  return sub_1B153209C();
}

void sub_1B153204C()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1B5E1F2F8](v1);
  OUTLINED_FUNCTION_55_3();
}

uint64_t sub_1B153209C()
{
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_13();
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_34_0();
}

void (*sub_1B15320F8(_QWORD *a1))(void **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  char *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x80);
  v3[5] = v4;
  v5 = (char *)v1 + v4;
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_9_5();
  v3[3] = MEMORY[0x1B5E1F2F8](v5);
  return sub_1B1495998;
}

id sub_1B1532170()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90)), sel_pageGutter);
}

id sub_1B1532198()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90)), sel_setPageGutter_);
}

void sub_1B15321C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_1B1532170();
  *a1 = v3;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15321F0()
{
  sub_1B1532198();
  OUTLINED_FUNCTION_0_0();
}

id sub_1B1532210()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90)), sel_pagingEnabled);
}

id sub_1B1532248(char a1)
{
  _QWORD *v1;

  return objc_msgSend(*(id *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90)), sel_setPagingEnabled_, a1 & 1);
}

void sub_1B1532278(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1B1532210() & 1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15322AC(uint64_t a1)
{
  sub_1B1532248(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15322CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  v2 = sub_1B16BA328();
  MEMORY[0x1E0C80A78](v2, v3);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - v5, a1);
  sub_1B15323D4();
}

void sub_1B1532370()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_56_12(*v0);
  OUTLINED_FUNCTION_13();
  swift_getAssociatedTypeWitness();
  v1 = OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_1_12(v1);
  OUTLINED_FUNCTION_90();
}

void sub_1B15323D4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_56_12(v0);
  OUTLINED_FUNCTION_9_5();
  swift_getAssociatedTypeWitness();
  v1 = OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_33_14(v1);
  swift_endAccess();
  OUTLINED_FUNCTION_90();
}

void sub_1B1532438()
{
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1532480(uint64_t a1@<X8>)
{
  sub_1B1532530((SEL *)&selRef_visibleViewController, a1);
}

void sub_1B153248C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  id v4;

  if (a1)
  {
    v4 = a1;
    sub_1B1534DA8(v4, a2);

  }
  else
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    __swift_storeEnumTagSinglePayload(a2, 1, 1, AssociatedTypeWitness);
  }
}

id sub_1B1532518()
{
  return sub_1B1532584((SEL *)&selRef_visibleViewController);
}

void sub_1B1532524(uint64_t a1@<X8>)
{
  sub_1B1532530((SEL *)&selRef_secondaryVisibleViewController, a1);
}

void sub_1B1532530(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  id v4;

  v4 = OUTLINED_FUNCTION_37_14(a1, *v2);
  sub_1B153248C(v4, a2);
  OUTLINED_FUNCTION_1_5(v4);
}

id sub_1B1532578()
{
  return sub_1B1532584((SEL *)&selRef_secondaryVisibleViewController);
}

id sub_1B1532584(SEL *a1)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_37_14(a1, *v1);
}

void sub_1B15325AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_66_8(*v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_14_23();
  v1 = OUTLINED_FUNCTION_4_49();
  OUTLINED_FUNCTION_24_19(v1, v2, v3, v4);
  v5 = OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_1_12(v5);
  OUTLINED_FUNCTION_11();
}

void sub_1B1532628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_66_8(v0);
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_14_23();
  v1 = OUTLINED_FUNCTION_4_49();
  OUTLINED_FUNCTION_24_19(v1, v2, v3, v4);
  v5 = OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_33_14(v5);
  swift_endAccess();
  OUTLINED_FUNCTION_11();
}

void sub_1B15326A4()
{
  OUTLINED_FUNCTION_13();
  sub_1B16B9740();
  OUTLINED_FUNCTION_55_3();
}

uint64_t sub_1B15326F4()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8));
}

uint64_t sub_1B1532714(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8)) = result;
  return result;
}

void sub_1B1532734()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0);
  if (!*(_QWORD *)((char *)v0 + v1))
  {
    *(_QWORD *)((char *)v0 + v1) = sub_1B15327A0(v0);
    swift_retain();
    swift_release();
  }
  swift_retain();
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B15327A0(void *a1)
{
  type metadata accessor for PageSheetPresentationObserver();
  swift_allocObject();
  return PageSheetPresentationObserver.init(viewController:)(a1);
}

id PageViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PageViewController.init(coder:)()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_42_3();
  v3 = (uint64_t)v0 + *(_QWORD *)((*v2 & *v0) + 0x88);
  v4 = OUTLINED_FUNCTION_14_23();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  OUTLINED_FUNCTION_6_56();
  v6 = *(_QWORD *)(v5 + 144);
  v7 = objc_allocWithZone((Class)TUPageViewController);
  *(_QWORD *)((char *)v1 + v6) = OUTLINED_FUNCTION_55_11();
  v8 = OUTLINED_FUNCTION_4_49();
  v10 = type metadata accessor for PageBlueprint(0, v4, v8, v9);
  OUTLINED_FUNCTION_43_11(v10);
  OUTLINED_FUNCTION_6_56();
  type metadata accessor for PageViewController.Event();
}

void sub_1B1532934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x1B5E1F0E8](&unk_1B16CF770, a1);
  OUTLINED_FUNCTION_53_13();
  *(_QWORD *)(v1 + v2) = sub_1B16B818C();
  OUTLINED_FUNCTION_6_56();
  type metadata accessor for PageViewController.NavigationAction();
}

void sub_1B1532980()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)((char *)v0 + v1) = sub_1B16B96E0();
  OUTLINED_FUNCTION_6_56();
  *((_BYTE *)v0 + *(_QWORD *)(v3 + 200)) = 0;
  *(_QWORD *)((char *)v0 + *(_QWORD *)((*v2 & *v0) + 0xD0)) = 0;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B1532A00(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  PageViewController.init(coder:)();
}

void PageViewController.__allocating_init(blueprintProvider:prewarmer:sessionManager:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  OUTLINED_FUNCTION_27_4();
  PageViewController.init(blueprintProvider:prewarmer:sessionManager:)();
}

void sub_1B1532A4C()
{
  OUTLINED_FUNCTION_31();
}

void PageViewController.init(blueprintProvider:prewarmer:sessionManager:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_93_4();
  v3 = (uint64_t)&v0[*(_QWORD *)(v2 + 136)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, AssociatedTypeWitness);
  OUTLINED_FUNCTION_93_4();
  v6 = *(_QWORD *)(v5 + 144);
  v7 = objc_allocWithZone((Class)TUPageViewController);
  v1;
  *(_QWORD *)&v1[v6] = OUTLINED_FUNCTION_55_11();
  OUTLINED_FUNCTION_93_4();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = type metadata accessor for PageBlueprint(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  OUTLINED_FUNCTION_43_11(v10);
  OUTLINED_FUNCTION_93_4();
  type metadata accessor for PageViewController.Event();
}

void sub_1B1532B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x1B5E1F0E8](&unk_1B16CF770, a1);
  OUTLINED_FUNCTION_53_13();
  *(_QWORD *)(v2 + v1) = sub_1B16B818C();
  type metadata accessor for PageViewController.NavigationAction();
}

void sub_1B1532BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)&v17[v14] = sub_1B16B96E0();
  OUTLINED_FUNCTION_23_0();
  v17[*(_QWORD *)(v18 + 200)] = 0;
  OUTLINED_FUNCTION_23_0();
  *(_QWORD *)&v17[*(_QWORD *)(v19 + 208)] = 0;
  OUTLINED_FUNCTION_23_0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(&v17[*(_QWORD *)(v20 + 152)], a14, v15);
  OUTLINED_FUNCTION_23_0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(&v17[*(_QWORD *)(v21 + 168)], a12, v16);
  OUTLINED_FUNCTION_23_0();
  sub_1B13B4DC0(a13, (uint64_t)&v17[*(_QWORD *)(v22 + 184)]);

  OUTLINED_FUNCTION_39_12();
}

id sub_1B1532C7C(objc_class *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, objc_super a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;

  v44.receiver = v36;
  v44.super_class = a1;
  -[objc_class initWithNibName:bundle:](&v44, sel_initWithNibName_bundle_, 0, 0);
  OUTLINED_FUNCTION_108_0();
  v38 = v37;
  v39 = OUTLINED_FUNCTION_92_5((uint64_t)v38, sel_setDataSource_);
  OUTLINED_FUNCTION_92_5((uint64_t)v39, sel_setDelegate_);

  __swift_destroy_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v33, v35);
  OUTLINED_FUNCTION_120(v43, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
  return v38;
}

void sub_1B1532D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_41_17();
  OUTLINED_FUNCTION_41();
  v0 = OUTLINED_FUNCTION_54_12();
  type metadata accessor for PageBlueprint(v0, v1, v2, v3);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_39_12();
}

id sub_1B1532DE4(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id result;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v6 - 128) = v1;
  *(_QWORD *)(v6 - 120) = a1;
  objc_msgSendSuper2((objc_super *)(v6 - 128), sel_viewDidLoad);
  OUTLINED_FUNCTION_108_0();
  v8 = *(void **)&v1[v7];
  result = OUTLINED_FUNCTION_2_0(v9, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  result = OUTLINED_FUNCTION_96_4();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v12 = result;
  objc_msgSend(result, sel_bounds);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  objc_msgSend(v11, sel_setFrame_, v14, v16, v18, v20);
  objc_msgSend(v1, sel_addChildViewController_, v8);
  result = OUTLINED_FUNCTION_96_4();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v21 = result;
  result = OUTLINED_FUNCTION_2_0((uint64_t)result, sel_view);
  if (result)
  {
    v22 = result;
    objc_msgSend(v21, sel_addSubview_, result);

    objc_msgSend(v8, sel_didMoveToParentViewController_, v1);
    OUTLINED_FUNCTION_49_1();
    OUTLINED_FUNCTION_62_7();
    OUTLINED_FUNCTION_45_10();
    OUTLINED_FUNCTION_45();
    sub_1B153300C(v4);
    OUTLINED_FUNCTION_120(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_62_7();
    v23 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_54_1();
    v24 = (_QWORD *)OUTLINED_FUNCTION_25();
    v25 = *(_QWORD *)(v6 - 200);
    v24[2] = v3;
    v24[3] = v25;
    v24[4] = *(_QWORD *)(v6 - 208);
    v24[5] = v2;
    v26 = *(_QWORD *)(v6 - 192);
    v24[6] = *(_QWORD *)(v6 - 184);
    v24[7] = v26;
    v24[8] = v23;
    OUTLINED_FUNCTION_0();
    sub_1B16B82E8();
    OUTLINED_FUNCTION_45();
    swift_release();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 176), *(_QWORD *)(v6 - 152));
    OUTLINED_FUNCTION_191();
    sub_1B16B806C();
    return (id)__swift_destroy_boxed_opaque_existential_1(v6 - 176);
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1B153300C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int EnumTagSinglePayload;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  id v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  char *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  char *v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v148 = a1;
  v128 = *MEMORY[0x1E0DEEDD8] & *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedTypeWitness();
  v133 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v132 = (char *)&v117 - v6;
  v134 = AssociatedConformanceWitness;
  v8 = type metadata accessor for PageBlueprint(255, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  v146 = sub_1B16BA328();
  v144 = *(_QWORD *)(v146 - 8);
  v10 = MEMORY[0x1E0C80A78](v146, v9);
  v142 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v129 = (char *)&v117 - v14;
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v136 = (char *)&v117 - v17;
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v122 = (char *)&v117 - v20;
  v143 = (void (*)(char *, uint64_t))v8;
  v141 = *(_QWORD *)(v8 - 8);
  v22 = MEMORY[0x1E0C80A78](v19, v21);
  v135 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22, v24);
  v127 = (char *)&v117 - v26;
  MEMORY[0x1E0C80A78](v25, v27);
  v29 = (char *)&v117 - v28;
  v147 = sub_1B16BA328();
  v138 = *(_QWORD *)(v147 - 8);
  v31 = MEMORY[0x1E0C80A78](v147, v30);
  v145 = (char *)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v31, v33);
  v137 = (char *)&v117 - v35;
  v37 = MEMORY[0x1E0C80A78](v34, v36);
  v130 = (uint64_t)&v117 - v38;
  v40 = MEMORY[0x1E0C80A78](v37, v39);
  v131 = (char *)&v117 - v41;
  v43 = MEMORY[0x1E0C80A78](v40, v42);
  v45 = (char *)&v117 - v44;
  v47 = MEMORY[0x1E0C80A78](v43, v46);
  v49 = (char *)&v117 - v48;
  v50 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v52 = MEMORY[0x1E0C80A78](v47, v51);
  v125 = (char *)&v117 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x1E0C80A78](v52, v54);
  v123 = (char *)&v117 - v56;
  v58 = MEMORY[0x1E0C80A78](v55, v57);
  v124 = (char *)&v117 - v59;
  v61 = MEMORY[0x1E0C80A78](v58, v60);
  v63 = (char *)&v117 - v62;
  MEMORY[0x1E0C80A78](v61, v64);
  v66 = (char *)&v117 - v65;
  v67 = v1;
  v68 = sub_1B1532518();
  v139 = v50;
  if (!v68)
    goto LABEL_6;
  v69 = v68;
  v121 = v29;
  swift_getObjectType();
  v70 = dynamic_cast_existential_1_conditional((uint64_t)v69);
  if (!v70)
  {

LABEL_6:
    v140 = 0;
    v126 = 0;
    v76 = (uint64_t)v67;
    v75 = (uint64_t)v143;
    goto LABEL_10;
  }
  v72 = v70;
  v119 = v63;
  v120 = v4;
  v73 = v71;
  swift_getObjectType();
  v140 = (void *)v72;
  v149 = v72;
  v74 = v69;
  v126 = v73;
  sub_1B16B81B0();
  v75 = (uint64_t)v143;
  PageBlueprint.page(for:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, AssociatedTypeWitness) == 1)
  {

    (*(void (**)(char *, uint64_t))(v138 + 8))(v49, v147);
    v76 = (uint64_t)v67;
    v50 = v139;
  }
  else
  {
    v118 = v74;
    v50 = v139;
    (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v66, v49, AssociatedTypeWitness);
    v77 = (uint64_t)v122;
    v76 = (uint64_t)v67;
    sub_1B15325AC();
    if (__swift_getEnumTagSinglePayload(v77, 1, v75) != 1)
    {
      v79 = v141;
      v109 = (uint64_t)v121;
      (*(void (**)(char *, uint64_t, uint64_t))(v141 + 32))(v121, v77, v75);
      v80 = v140;
      objc_msgSend(*(id *)((char *)v67 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v67) + 0x90)), sel_setVisibleViewController_, v140);
      sub_1B1536F1C(v109, v148, (uint64_t)v66);

      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v109, v75);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v66, AssociatedTypeWitness);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v66, AssociatedTypeWitness);

    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v77, v146);
  }
  v4 = v120;
  v63 = v119;
LABEL_10:
  sub_1B1532370();
  if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, AssociatedTypeWitness) == 1)
  {
    v78 = *(void (**)(char *, uint64_t))(v138 + 8);
    v78(v45, v147);
    v80 = v140;
    v79 = v141;
    v81 = (uint64_t)v145;
  }
  else
  {
    v82 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    v82(v63, v45, AssociatedTypeWitness);
    v83 = (uint64_t)v132;
    (*(void (**)(uint64_t))(v134 + 40))(AssociatedTypeWitness);
    v84 = PageBlueprint.pagesMatching(marker:)(v83, v75);
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v83, v4);
    v149 = v84;
    v85 = sub_1B16B9C68();
    MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF50], v85);
    v86 = (uint64_t)v131;
    sub_1B16B9F20();
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v86, 1, AssociatedTypeWitness) != 1)
    {
      v92 = (uint64_t)v124;
      v82(v124, (char *)v86, AssociatedTypeWitness);
      PageViewController.show(page:animated:)(v92);
      v93 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      v93(v92, AssociatedTypeWitness);
      v93((uint64_t)v63, AssociatedTypeWitness);
      v79 = v141;
      v94 = (uint64_t)v142;
      v80 = v140;
      goto LABEL_32;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v63, AssociatedTypeWitness);
    v78 = *(void (**)(char *, uint64_t))(v138 + 8);
    v78((char *)v86, v147);
    v80 = v140;
    v79 = v141;
    v81 = (uint64_t)v145;
  }
  v87 = (uint64_t)v136;
  if (!v80)
    goto LABEL_27;
  sub_1B15325AC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v87, 1, v75);
  v143 = v78;
  if (EnumTagSinglePayload)
  {
    v89 = v79;
    v90 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
    v91 = v80;
    v90(v87, v146);
    __swift_storeEnumTagSinglePayload((uint64_t)v137, 1, 1, AssociatedTypeWitness);
LABEL_19:
    v101 = (uint64_t)v129;
    sub_1B15325AC();
    v102 = v101;
    if (__swift_getEnumTagSinglePayload(v101, 1, v75))
    {
      v90(v101, v146);
      v103 = v130;
      __swift_storeEnumTagSinglePayload(v130, 1, 1, AssociatedTypeWitness);
      v81 = (uint64_t)v145;
      v79 = v89;
    }
    else
    {
      v104 = v127;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v127, v102, v75);
      v90(v102, v146);
      swift_getObjectType();
      v149 = (uint64_t)v80;
      v105 = sub_1B16B81B0();
      v106 = v130;
      PageBlueprint.page(before:)(v105, v107);
      v103 = v106;
      swift_bridgeObjectRelease();
      v108 = v104;
      v79 = v89;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v108, v75);
      v81 = (uint64_t)v145;
    }
    v78 = v143;
    v143(v137, v147);
    goto LABEL_25;
  }
  v95 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v89 = v79;
  v96 = v127;
  v95(v127, v87, v75);
  v90 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
  v97 = v80;
  v90(v87, v146);
  swift_getObjectType();
  v149 = (uint64_t)v97;
  v98 = sub_1B16B81B0();
  v99 = (uint64_t)v137;
  PageBlueprint.page(after:)(v98, v100);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v96, v75);
  if (__swift_getEnumTagSinglePayload(v99, 1, AssociatedTypeWitness) == 1)
    goto LABEL_19;
  v103 = v130;
  (*(void (**)(uint64_t, char *, uint64_t))(v139 + 32))(v130, v137, AssociatedTypeWitness);
  __swift_storeEnumTagSinglePayload(v103, 0, 1, AssociatedTypeWitness);
  v81 = (uint64_t)v145;
  v79 = v89;
  v78 = v143;
LABEL_25:
  if (__swift_getEnumTagSinglePayload(v103, 1, AssociatedTypeWitness) == 1)
  {

    v78((char *)v103, v147);
LABEL_27:
    MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PageBlueprint<A>, v75);
    sub_1B16B9F20();
    if (__swift_getEnumTagSinglePayload(v81, 1, AssociatedTypeWitness) == 1)
    {
      v78((char *)v81, v147);
    }
    else
    {
      v110 = v139;
      v111 = (uint64_t)v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v125, v81, AssociatedTypeWitness);
      PageViewController.show(page:animated:)(v111);
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, AssociatedTypeWitness);
    }
    goto LABEL_31;
  }
  v112 = v139;
  v113 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v123, v103, AssociatedTypeWitness);
  PageViewController.show(page:animated:)(v113);

  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v113, AssociatedTypeWitness);
LABEL_31:
  v94 = (uint64_t)v142;
LABEL_32:
  sub_1B15325AC();
  if (__swift_getEnumTagSinglePayload(v94, 1, v75) == 1)
  {

    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v94, v146);
LABEL_37:
    v116 = v148;
    goto LABEL_38;
  }
  v114 = v135;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v135, v94, v75);
  sub_1B153204C();
  if (!v115)
  {
    (*(void (**)(char *, uint64_t))(v79 + 8))(v114, v75);

    goto LABEL_37;
  }
  v116 = v148;
  (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v128 + 112) + 80))(v148, v114, *(_QWORD *)(v128 + 88));
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v79 + 8))(v114, v75);
LABEL_38:
  sub_1B1536E0C(v76, v116);
}

void sub_1B1533B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v35 = a4;
  v36 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = type metadata accessor for PageBlueprint(0, AssociatedTypeWitness, AssociatedConformanceWitness, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&v32 - v20;
  swift_beginAccess();
  v22 = (_QWORD *)MEMORY[0x1B5E1F2F8](a2 + 16);
  if (v22)
  {
    v23 = v22;
    v34 = *(id *)((char *)v22 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v22) + 0x90));
    v24 = swift_allocObject();
    v33 = a8;
    v25 = v24;
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
    v26 = (*(unsigned __int8 *)(v18 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v27 = (char *)swift_allocObject();
    v28 = v35;
    *((_QWORD *)v27 + 2) = a3;
    *((_QWORD *)v27 + 3) = v28;
    *((_QWORD *)v27 + 4) = v36;
    *((_QWORD *)v27 + 5) = a6;
    v29 = v33;
    *((_QWORD *)v27 + 6) = a7;
    *((_QWORD *)v27 + 7) = v29;
    *((_QWORD *)v27 + 8) = v25;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v27[v26], v21, v17);
    aBlock[4] = sub_1B1538038;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B13F00E4;
    aBlock[3] = &block_descriptor_30;
    v30 = _Block_copy(aBlock);
    v31 = v34;
    swift_release();
    objc_msgSend(v31, sel_performWhenIdle_, v30);
    _Block_release(v30);

    sub_1B16B815C();
  }
}

void sub_1B1533DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1B5E1F2F8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1B153300C(a2);

  }
}

void sub_1B1533E14(void *a1)
{
  a1;
  sub_1B1532D1C();
}

void sub_1B1533E34()
{
  void *v0;

}

void sub_1B1533E48()
{
  OUTLINED_FUNCTION_39_12();
}

uint64_t sub_1B1533E8C(uint64_t a1)
{
  char v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[14];

  *(_QWORD *)(v4 - 48) = v2;
  *(_QWORD *)(v4 - 40) = a1;
  objc_msgSendSuper2((objc_super *)(v4 - 48), sel_viewDidAppear_, v1 & 1);
  *((_BYTE *)v2 + *(_QWORD *)((*v3 & *v2) + 0xC8)) = 1;
  sub_1B1533FCC();
  v5 = sub_1B1532518();
  if (!v5
    || (v22[0] = v5,
        OUTLINED_FUNCTION_10((uint64_t)v5, (unint64_t *)&qword_1ED183800),
        OUTLINED_FUNCTION_197(v6, &qword_1ED17E728),
        v7 = OUTLINED_FUNCTION_3_19(),
        (v7 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    return OUTLINED_FUNCTION_57_4(v7, qword_1ED17E730, &qword_1ED17E728, (uint64_t)&protocol descriptor for PageViewable, v8, v9, v10, v11, v20);
  }
  if (!v21)
    return OUTLINED_FUNCTION_57_4(v7, qword_1ED17E730, &qword_1ED17E728, (uint64_t)&protocol descriptor for PageViewable, v8, v9, v10, v11, v20);
  sub_1B13C06D0(&v20, (uint64_t)v22);
  v12 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0xB8));
  v13 = v12[3];
  v14 = v12[4];
  v15 = (_QWORD *)OUTLINED_FUNCTION_191();
  __swift_project_boxed_opaque_existential_1(v15, v16);
  if (((*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v14 + 40))(v22, v13, v14) & 1) == 0)
  {
    v17 = v12[3];
    v18 = v12[4];
    __swift_project_boxed_opaque_existential_1(v12, v17);
    LOBYTE(v20) = 0;
    PageSessionManagerType.startSession(for:trigger:)((uint64_t)v22, (char *)&v20, v17, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_1B1533FCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  sub_1B1532734();
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v1 + 80);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(v1 + 96);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v3 + 64) = v2;
  swift_retain();
  swift_retain();
  sub_1B14A09EC((uint64_t)sub_1B1537F58, v3);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1B15340A4(void *a1)
{
  a1;
  sub_1B1533E48();
}

void sub_1B15340D0()
{
  void *v0;

}

void sub_1B15340E4()
{
  OUTLINED_FUNCTION_39_12();
}

uint64_t sub_1B1534130(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v21[128];

  *(_QWORD *)(v4 - 64) = v1;
  *(_QWORD *)(v4 - 56) = a1;
  objc_msgSendSuper2((objc_super *)(v4 - 64), sel_viewDidDisappear_, v2 & 1);
  v5 = objc_msgSend(v1, sel_ts_isVideoPlayerPresentedFullScreen);
  if ((v5 & 1) == 0)
    *((_BYTE *)v1 + *(_QWORD *)((*v3 & *v1) + 0xC8)) = 0;
  v6 = sub_1B1532518();
  if (!v6
    || (OUTLINED_FUNCTION_10((uint64_t)v6, (unint64_t *)&qword_1ED183800),
        OUTLINED_FUNCTION_197(v7, &qword_1ED17E728),
        v8 = OUTLINED_FUNCTION_3_0(),
        (v8 & 1) == 0))
  {
    v10 = OUTLINED_FUNCTION_0_39();
    goto LABEL_9;
  }
  if (!v20)
  {
LABEL_9:
    OUTLINED_FUNCTION_100_1(v8, qword_1ED17E730, &qword_1ED17E728, (uint64_t)&protocol descriptor for PageViewable, v9, v10);
    return sub_1B153429C();
  }
  sub_1B13C06D0(&v19, (uint64_t)v21);
  v11 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v3 & *v1) + 0xB8));
  v12 = v11[3];
  v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  if (v5 & 1 | (((*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 40))(v21, v12, v13) & 1) == 0))
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v15 = v11[3];
  v16 = v11[4];
  v17 = (_QWORD *)OUTLINED_FUNCTION_27_4();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 32))(v21, v15, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1B153429C();
}

uint64_t sub_1B153429C()
{
  sub_1B1532734();
  PageSheetPresentationObserver.endObserving()();
  return swift_release();
}

void sub_1B15342C4(void *a1)
{
  a1;
  sub_1B15340E4();
}

void sub_1B15342F0()
{
  void *v0;

}

id sub_1B1534304(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  sub_1B1534370((uint64_t)v1);
  v3 = v2;

  if (v3)
  {
    sub_1B13A1818(0, (unint64_t *)&qword_1ED1837A8);
    v4 = (void *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

void sub_1B1534370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  OUTLINED_FUNCTION_10(a1, (unint64_t *)&qword_1ED1837A8);
  v1 = sub_1B16B9860();
  v4 = OUTLINED_FUNCTION_97_7(v1, v2, v3, (uint64_t)sel_previousPage);
  MEMORY[0x1B5E1D4C8]();
  OUTLINED_FUNCTION_84_9();
  if (v5)
    OUTLINED_FUNCTION_36_11();
  sub_1B16B9C08();
  sub_1B16B9B78();
  v6 = sub_1B16B9860();
  v9 = OUTLINED_FUNCTION_97_7(v6, v7, v8, (uint64_t)sel_nextPage);
  MEMORY[0x1B5E1D4C8]();
  OUTLINED_FUNCTION_84_9();
  if (v5)
    OUTLINED_FUNCTION_36_11();
  OUTLINED_FUNCTION_27_4();
  sub_1B16B9C08();
  sub_1B16B9B78();

  OUTLINED_FUNCTION_55_3();
}

Swift::Void __swiftcall PageViewController.previous()()
{
  sub_1B15344C4();
}

void sub_1B153447C(void *a1)
{
  a1;
  sub_1B1534468();
}

void sub_1B153449C()
{
  void *v0;

}

Swift::Void __swiftcall PageViewController.next()()
{
  sub_1B15344C4();
}

void sub_1B15344C4()
{
  OUTLINED_FUNCTION_9_5();
  type metadata accessor for PageViewController.NavigationAction();
}

id sub_1B153452C()
{
  SEL *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_7();
  sub_1B16B9C2C();
  swift_endAccess();
  OUTLINED_FUNCTION_108_0();
  return objc_msgSend(*(id *)(v1 + v2), *v0);
}

void sub_1B1534574(void *a1)
{
  a1;
  sub_1B15344B0();
}

void sub_1B1534594()
{
  void *v0;

}

void sub_1B15345A8()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, char *, uint64_t);
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  void *v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;

  OUTLINED_FUNCTION_6();
  v88 = v2;
  v83 = v3;
  v4 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v5 = v4[13];
  v6 = (void *)v4[10];
  v7 = OUTLINED_FUNCTION_89_7();
  sub_1B16BA328();
  v89 = OUTLINED_FUNCTION_25_24();
  v80 = *(_QWORD *)(v89 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_134();
  v87 = v10;
  v93 = v6;
  v94 = v5;
  swift_getAssociatedConformanceWitness();
  v11 = OUTLINED_FUNCTION_54_12();
  v78 = v12;
  v86 = type metadata accessor for PageBlueprint(v11, v13, v12, v14);
  v85 = *(_QWORD *)(v86 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_134();
  v84 = v17;
  v91 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_47_0();
  v81 = v20;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_190();
  v79 = v23;
  OUTLINED_FUNCTION_45_0();
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  v28 = (char *)&v74 - v27;
  MEMORY[0x1E0C80A78](v26, v29);
  OUTLINED_FUNCTION_190();
  v90 = v30;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v31, v32);
  v34 = (char *)&v74 - v33;
  v92 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_3();
  v37 = MEMORY[0x1E0C80A78](v35, v36);
  v39 = (char *)&v74 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0C80A78](v37, v40);
  v43 = (char *)&v74 - v42;
  v44 = OUTLINED_FUNCTION_2_0(v41, sel_visibleViewController);
  if (!v44)
    goto LABEL_31;
  v45 = v44;
  sub_1B1534DA8(v44, (uint64_t)v34);
  OUTLINED_FUNCTION_18_4((uint64_t)v34, 1, v7);
  if (v63)
  {

    (*(void (**)(char *, uint64_t))(v91 + 8))(v34, v1);
    goto LABEL_31;
  }
  v77 = v28;
  v75 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
  v75(v43, v34, v7);
  sub_1B153204C();
  v82 = v43;
  v76 = v39;
  v47 = v83;
  if (v46)
  {
    OUTLINED_FUNCTION_19_30();
    v48 = v84;
    sub_1B16B82DC();
    OUTLINED_FUNCTION_45();
    (*(void (**)(uint64_t, char *, void *, void *, void (*)(uint64_t, char *, uint64_t), _QWORD))(v4[14] + 32))(v48, v82, v45, v47, v88, v4[11]);
    OUTLINED_FUNCTION_34_0();
    v43 = v82;
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v48, v86);
  }
  v49 = (*(uint64_t (**)(char *, _QWORD))(v4[15] + 24))(v43, v4[12]);
  if (v47
    && (v99 = v47,
        OUTLINED_FUNCTION_10(v49, (unint64_t *)&qword_1ED183800),
        OUTLINED_FUNCTION_197(v50, &qword_1ED17E728),
        v51 = v47,
        (OUTLINED_FUNCTION_3_0() & 1) != 0))
  {
    v52 = (uint64_t)v77;
    if (*((_QWORD *)&v97 + 1))
    {
      sub_1B13C06D0(&v96, (uint64_t)&v99);
      v53 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8));
      v54 = v53[3];
      v55 = v53[4];
      __swift_project_boxed_opaque_existential_1(v53, v54);
      (*(void (**)(void **, uint64_t, uint64_t))(v55 + 32))(&v99, v54, v55);
      v56 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v99);
      goto LABEL_13;
    }
  }
  else
  {
    v98 = 0;
    v96 = 0u;
    v97 = 0u;
    v52 = (uint64_t)v77;
  }
  v56 = sub_1B13F15EC((uint64_t)&v96, qword_1ED17E730, &qword_1ED17E728);
LABEL_13:
  v95 = v45;
  OUTLINED_FUNCTION_10(v56, (unint64_t *)&qword_1ED183800);
  OUTLINED_FUNCTION_197(v57, &qword_1ED17E728);
  v83 = v45;
  if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
  {
    sub_1B13C06D0(&v96, (uint64_t)&v99);
    v58 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8));
    __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    sub_1B1534F74();
  }
  v98 = 0;
  v96 = 0u;
  v97 = 0u;
  sub_1B13F15EC((uint64_t)&v96, qword_1ED17E730, &qword_1ED17E728);
  v59 = v87;
  v60 = v90;
  sub_1B1532370();
  v88 = *(void (**)(uint64_t, char *, uint64_t))(v92 + 16);
  v88(v52, v82, v7);
  OUTLINED_FUNCTION_58_9(v52);
  v61 = v59 + *(int *)(v89 + 48);
  OUTLINED_FUNCTION_77_5(v59, v60);
  OUTLINED_FUNCTION_77_5(v61, v52);
  OUTLINED_FUNCTION_18_4(v59, 1, v7);
  if (v63)
  {
    OUTLINED_FUNCTION_42_14(v52);
    OUTLINED_FUNCTION_42_14(v60);
    OUTLINED_FUNCTION_18_4(v61, 1, v7);
    if (v63)
    {
      OUTLINED_FUNCTION_42_14(v59);
LABEL_28:
      OUTLINED_FUNCTION_87_8((uint64_t)v82);
LABEL_30:
      OUTLINED_FUNCTION_81_7();
      goto LABEL_31;
    }
  }
  else
  {
    v62 = v79;
    OUTLINED_FUNCTION_77_5(v79, v59);
    OUTLINED_FUNCTION_18_4(v61, 1, v7);
    if (!v63)
    {
      v73 = (uint64_t)v76;
      v75(v76, (char *)v61, v7);
      LODWORD(v89) = sub_1B16B9830();
      OUTLINED_FUNCTION_87_8(v73);
      OUTLINED_FUNCTION_79_6(v52);
      OUTLINED_FUNCTION_79_6(v90);
      OUTLINED_FUNCTION_87_8(v62);
      OUTLINED_FUNCTION_79_6(v59);
      if ((v89 & 1) != 0)
        goto LABEL_28;
      goto LABEL_24;
    }
    v64 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
    v64(v52, v1);
    v64(v90, v1);
    v65 = OUTLINED_FUNCTION_83_6();
    OUTLINED_FUNCTION_120(v65, v66);
  }
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v59, v89);
LABEL_24:
  v67 = v81;
  v68 = (uint64_t)v82;
  v88(v81, v82, v7);
  OUTLINED_FUNCTION_58_9(v67);
  sub_1B15323D4();
  sub_1B153204C();
  if (!v69)
  {
    OUTLINED_FUNCTION_120(v68, *(uint64_t (**)(uint64_t, uint64_t))(v92 + 8));
    goto LABEL_30;
  }
  OUTLINED_FUNCTION_19_30();
  v70 = v84;
  OUTLINED_FUNCTION_73_6();
  OUTLINED_FUNCTION_45();
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4[14] + 40))(v70, v68, v4[11]);
  OUTLINED_FUNCTION_81_7();
  OUTLINED_FUNCTION_34_0();
  v71 = OUTLINED_FUNCTION_83_6();
  v72(v71, v86);
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v68, v7);
LABEL_31:
  OUTLINED_FUNCTION_9_5();
  v99 = v93;
  v100 = *(_OWORD *)(v4 + 11);
  v101 = v94;
  v102 = *((_OWORD *)v4 + 7);
  type metadata accessor for PageViewController.NavigationAction();
}

void sub_1B1534D84()
{
  OUTLINED_FUNCTION_9_7();
  sub_1B16B9C5C();
  swift_endAccess();
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B1534DA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  id v17;
  uint64_t v19[2];

  v19[0] = a2;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x68);
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = type metadata accessor for PageBlueprint(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v19 - v12;
  swift_getObjectType();
  v14 = dynamic_cast_existential_1_conditional((uint64_t)a1);
  if (!v14)
    return __swift_storeEnumTagSinglePayload(v19[0], 1, 1, AssociatedTypeWitness);
  v15 = v14;
  v16 = *(void (**)(uint64_t, uint64_t))(v4 + 24);
  v17 = a1;
  v16(v5, v4);
  sub_1B16B82DC();
  swift_release();
  swift_getObjectType();
  v19[1] = v15;
  sub_1B16B81B0();
  PageBlueprint.page(for:)();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

void sub_1B1534F74()
{
  sub_1B15326A4();
  type metadata accessor for PageViewController.NavigationAction();
}

uint64_t sub_1B1534FD4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v5;
  char v6;

  v2 = sub_1B16B9C68();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF20], v2);
  sub_1B16B97E8();
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0 || v6 == 2)
    v5 = v1 != 0;
  else
    v5 = 3;
  *v0 = v5;
  return result;
}

void sub_1B1535048(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a4;
  a1;
  sub_1B15345A8();
}

id sub_1B15350C0()
{
  return sub_1B153544C();
}

id sub_1B15350CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id result;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v5 = *MEMORY[0x1E0DEEDD8] & *v2;
  v34 = sub_1B16B77F0();
  v6 = *(_QWORD *)(v34 - 8);
  v8 = MEMORY[0x1E0C80A78](v34, v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)&v32 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v16);
  v18 = (char *)&v32 - v17;
  v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 512))(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, AssociatedTypeWitness);
  sub_1B13CC6B4(0, &qword_1ED1875B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    sub_1B13F15EC((uint64_t)&v37, &qword_1ED1872E0, &qword_1ED1875B0);
    return v19;
  }
  sub_1B13C06D0(&v37, (uint64_t)v40);
  v20 = v41;
  v21 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v21 + 8))(&v35, v20, v21);
  if (!v36)
  {
    sub_1B13F15EC((uint64_t)&v35, &qword_1ED185F40, &qword_1ED185CC0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return v19;
  }
  sub_1B13C06D0(&v35, (uint64_t)&v37);
  sub_1B16B77B4();
  v33 = v19;
  result = objc_msgSend(v19, sel_view);
  if (result)
  {
    v23 = result;
    v24 = *((_QWORD *)&v38 + 1);
    v25 = __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
    v26 = sub_1B16B8B4C();
    MEMORY[0x1E0C80A78](v26, v27);
    (*(void (**)(char *, _QWORD *, uint64_t))(v29 + 16))((char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v24);
    v30 = v34;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v13, v34);
    v31 = (void *)sub_1B16B8B40();
    sub_1B16BA1D8();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return v33;
  }
  __break(1u);
  return result;
}

id sub_1B15353E4(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = sub_1B15350C0();

  return v9;
}

id sub_1B1535440()
{
  return sub_1B153544C();
}

id sub_1B153544C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  id v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_6();
  v52 = v1;
  v53 = v2;
  v50 = v3;
  v5 = v4;
  v6 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68);
  v7 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50);
  v8 = OUTLINED_FUNCTION_102_0();
  v46 = OUTLINED_FUNCTION_101_1();
  v10 = type metadata accessor for PageBlueprint(0, v8, v46, v9);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)v44 - v13;
  v15 = sub_1B16BA328();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  OUTLINED_FUNCTION_47_0();
  v49 = v18;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)v44 - v21;
  v51 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_47_0();
  v45 = v25;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (char *)v44 - v28;
  sub_1B1534DA8(v5, (uint64_t)v22);
  OUTLINED_FUNCTION_18_4((uint64_t)v22, 1, v8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    return 0;
  }
  v44[1] = v16;
  v44[2] = v15;
  v44[0] = *(_QWORD *)(v51 + 32);
  ((void (*)(char *, char *, uint64_t))v44[0])(v29, v22, v8);
  OUTLINED_FUNCTION_49_1();
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v7, v6);
  sub_1B16B82DC();
  OUTLINED_FUNCTION_45();
  v30 = sub_1B16B81B0();
  v32 = v48;
  v31 = v49;
  v50(v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v32);
  OUTLINED_FUNCTION_18_4(v31, 1, v8);
  if (v33)
  {
    v34 = OUTLINED_FUNCTION_27_4();
    v35(v34);
    v36 = OUTLINED_FUNCTION_60_8();
    v38(v36, v37);
    return 0;
  }
  v39 = v45;
  ((void (*)(uint64_t, uint64_t, uint64_t))v44[0])(v45, v31, v8);
  v40 = sub_1B15350CC(v39, 0);
  v41 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v41(v39, v8);
  v42 = OUTLINED_FUNCTION_27_4();
  ((void (*)(uint64_t))v41)(v42);
  return v40;
}

id sub_1B1535708(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = sub_1B1535440();

  return v9;
}

void sub_1B1535764()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  OUTLINED_FUNCTION_6();
  v44 = v0;
  v40 = v1;
  v41 = v2;
  v4 = v3;
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68);
  v39 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v6 = v39[10];
  v7 = OUTLINED_FUNCTION_41_17();
  v37 = v5;
  v35 = v6;
  v8 = OUTLINED_FUNCTION_41();
  v38 = OUTLINED_FUNCTION_52_11(v8, v9, v10, v11);
  v36 = *(_QWORD *)(v38 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_70_9(v14, v34[0]);
  v15 = sub_1B16B77F0();
  v42 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_77();
  v18 = OUTLINED_FUNCTION_19_0();
  v19 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v34 - v22;
  v24 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)v34 - v27;
  sub_1B1534DA8(v4, (uint64_t)v23);
  OUTLINED_FUNCTION_3_52((uint64_t)v23);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
LABEL_8:
    OUTLINED_FUNCTION_47();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v23, v7);
  v30 = objc_msgSend(v4, sel_view);
  if (v30)
  {
    v31 = v30;
    sub_1B16B77D8();
    sub_1B16BA1CC();

    OUTLINED_FUNCTION_82_6(v42);
    sub_1B153204C();
    if (v32)
    {
      OUTLINED_FUNCTION_49_1();
      (*(void (**)(uint64_t))(v37 + 24))(v35);
      v33 = v34[1];
      sub_1B16B82DC();
      OUTLINED_FUNCTION_45();
      (*(void (**)(uint64_t, char *, _QWORD, void *, uint64_t, _QWORD))(v39[14] + 56))(v33, v28, v40 & 1, v4, v41, v39[11]);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v38);
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v7);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1B15359BC(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id v11;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = a1;
  sub_1B1535764();

}

void sub_1B1535A40()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  id v27;
  void *v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  OUTLINED_FUNCTION_6();
  v44 = v0;
  v3 = v2;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68);
  v41 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v5 = v41[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = v4;
  v38 = v5;
  v7 = OUTLINED_FUNCTION_41();
  v39 = OUTLINED_FUNCTION_52_11(v7, v8, v9, v10);
  v37 = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_134();
  v36 = v13;
  v14 = sub_1B16B77F0();
  v42 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_77();
  v17 = OUTLINED_FUNCTION_19_0();
  v18 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_71_0();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v35 - v24;
  sub_1B1534DA8(v3, v1);
  OUTLINED_FUNCTION_3_52(v1);
  if (v26)
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v17);
LABEL_8:
    OUTLINED_FUNCTION_47();
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v25, v1, AssociatedTypeWitness);
  v27 = objc_msgSend(v3, sel_view);
  if (v27)
  {
    v28 = v27;
    sub_1B16B77B4();
    sub_1B16BA1CC();

    v29 = OUTLINED_FUNCTION_60_8();
    v30(v29);
    sub_1B153204C();
    if (v31)
    {
      OUTLINED_FUNCTION_49_1();
      (*(void (**)(uint64_t))(v40 + 24))(v38);
      v32 = v36;
      OUTLINED_FUNCTION_73_6();
      OUTLINED_FUNCTION_45();
      (*(void (**)(uint64_t, char *, _QWORD))(v41[14] + 64))(v32, v25, v41[11]);
      swift_unknownObjectRelease();
      v33 = OUTLINED_FUNCTION_83_6();
      v34(v33, v39);
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, AssociatedTypeWitness);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1B1535CA8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_1B1535A40();

}

uint64_t sub_1B1535D08(double a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  void (*v67)(char *, char *, uint64_t);
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;

  v6 = v4;
  v75 = (char *)a4;
  v9 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v6) + 0x68);
  v84 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v6);
  v10 = v84[10];
  v11 = OUTLINED_FUNCTION_102_0();
  sub_1B16BA328();
  v78 = OUTLINED_FUNCTION_25_24();
  v73 = *(_QWORD *)(v78 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_134();
  v74 = v14;
  v82 = v10;
  v83 = v9;
  v72 = OUTLINED_FUNCTION_101_1();
  v16 = type metadata accessor for PageBlueprint(0, v11, v72, v15);
  v80 = *(_QWORD *)(v16 - 8);
  v81 = v16;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_134();
  v79 = v19;
  v20 = *(_QWORD *)(v5 - 8);
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v23, v26);
  v29 = (char *)&v67 - v28;
  MEMORY[0x1E0C80A78](v27, v30);
  OUTLINED_FUNCTION_190();
  v76 = v31;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v32, v33);
  OUTLINED_FUNCTION_190();
  v77 = (char *)v34;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v35, v36);
  v38 = (char *)&v67 - v37;
  v85 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v39, v40);
  OUTLINED_FUNCTION_47_0();
  v71 = v41;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v42, v43);
  v45 = (char *)&v67 - v44;
  sub_1B1534DA8(a3, (uint64_t)v38);
  OUTLINED_FUNCTION_3_52((uint64_t)v38);
  if (v54)
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v38, v5);
  v70 = v20;
  v68 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
  v68(v45, v38, v11);
  sub_1B153204C();
  if (v47)
  {
    OUTLINED_FUNCTION_38_16();
    v69 = v29;
    v48 = v79;
    sub_1B16B82DC();
    OUTLINED_FUNCTION_45();
    (*(void (**)(uint64_t, char *, char *, _QWORD, double))(v84[14] + 48))(v48, v45, v75, v84[11], a1);
    swift_unknownObjectRelease();
    v29 = v69;
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v48, v81);
  }
  if (a1 <= 0.5)
    return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v45, v11);
  v69 = v25;
  v49 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v50 = (uint64_t)v77;
  v75 = v45;
  v67 = v49;
  v49(v77, v45, v11);
  OUTLINED_FUNCTION_59_7(v50);
  v51 = v76;
  sub_1B1532370();
  v52 = v74;
  v53 = v74 + *(int *)(v78 + 48);
  OUTLINED_FUNCTION_76_6(v74, v50);
  OUTLINED_FUNCTION_76_6(v53, v51);
  OUTLINED_FUNCTION_3_52(v52);
  if (v54)
  {
    OUTLINED_FUNCTION_34_16(v51);
    OUTLINED_FUNCTION_34_16(v50);
    OUTLINED_FUNCTION_3_52(v53);
    if (v54)
    {
      OUTLINED_FUNCTION_34_16(v52);
      return OUTLINED_FUNCTION_90_1((uint64_t)v75);
    }
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_76_6((uint64_t)v29, v52);
  OUTLINED_FUNCTION_3_52(v53);
  if (v54)
  {
    OUTLINED_FUNCTION_42_14(v76);
    OUTLINED_FUNCTION_42_14((uint64_t)v77);
    v55 = OUTLINED_FUNCTION_60_8();
    v56(v55, v11);
LABEL_16:
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v52, v78);
    goto LABEL_19;
  }
  v57 = v71;
  v68((char *)v71, (char *)v53, v11);
  v58 = sub_1B16B9830();
  OUTLINED_FUNCTION_90_1(v57);
  OUTLINED_FUNCTION_34_16(v76);
  OUTLINED_FUNCTION_34_16((uint64_t)v77);
  OUTLINED_FUNCTION_90_1((uint64_t)v29);
  OUTLINED_FUNCTION_34_16(v52);
  if ((v58 & 1) != 0)
    return OUTLINED_FUNCTION_90_1((uint64_t)v75);
LABEL_19:
  v59 = (uint64_t)v69;
  v60 = (uint64_t)v75;
  v67(v69, v75, v11);
  OUTLINED_FUNCTION_59_7(v59);
  sub_1B15323D4();
  sub_1B153204C();
  if (v61)
  {
    OUTLINED_FUNCTION_38_16();
    v62 = v79;
    OUTLINED_FUNCTION_73_6();
    OUTLINED_FUNCTION_45();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v84[14] + 40))(v62, v60, v84[11]);
    swift_unknownObjectRelease();
    v63 = OUTLINED_FUNCTION_83_6();
    v64(v63);
  }
  v65 = OUTLINED_FUNCTION_60_8();
  return v66(v65, v11);
}

void sub_1B1536228(void *a1, double a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  id v10;
  id v11;
  id v12;

  v10 = a4;
  v11 = a5;
  v12 = a1;
  sub_1B1535D08(a2, (uint64_t)v12, v11, a6);

}

uint64_t sub_1B15362A8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_102_0();
  v0 = OUTLINED_FUNCTION_101_1();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32);
  OUTLINED_FUNCTION_54_12();
  v2 = swift_checkMetadataState();
  return v1(v2, v0);
}

void PageViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_31();
}

void PageViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B15363DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  if (a3)
    sub_1B16B9860();
  v5 = a4;
  PageViewController.init(nibName:bundle:)();
}

void PageViewController.__deallocating_deinit()
{
  OUTLINED_FUNCTION_39_12();
}

id sub_1B1536438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 16) = v1;
  *(_QWORD *)(v2 - 8) = a1;
  return objc_msgSendSuper2((objc_super *)(v2 - 16), sel_dealloc);
}

uint64_t sub_1B1536458(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1;
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_6_56();
  v3 = *(_QWORD *)(v2 + 80);
  OUTLINED_FUNCTION_14_23();
  v4 = sub_1B16BA328();
  OUTLINED_FUNCTION_40_0(v4);
  OUTLINED_FUNCTION_6_56();

  OUTLINED_FUNCTION_6_56();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(&a1[*(_QWORD *)(v6 + 152)], v3);
  v7 = OUTLINED_FUNCTION_4_49();
  OUTLINED_FUNCTION_24_19(v7, v8, v9, v10);
  v11 = OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_40_0(v11);
  OUTLINED_FUNCTION_6_56();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v2 + 96) - 8) + 8))(&a1[*(_QWORD *)(v12 + 168)]);
  OUTLINED_FUNCTION_6_56();
  swift_release();
  OUTLINED_FUNCTION_6_56();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)(v13 + 184)]);
  OUTLINED_FUNCTION_6_56();
  swift_bridgeObjectRelease();
  return swift_release();
}

void PageViewController.show(page:animated:)(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  id v3;

  v2 = *(void **)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90));
  v3 = sub_1B15350CC(a1, 1);
  objc_msgSend(v2, sel_setVisibleViewController_, v3);
  OUTLINED_FUNCTION_1_5(v3);
}

Swift::Bool __swiftcall PageViewController.showPage(for:animated:)(Swift::String a1, Swift::Bool animated)
{
  _QWORD *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(uint64_t, uint64_t);
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  Swift::Bool v31;
  char v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_6();
  v45 = v3;
  v46 = v4;
  v47 = v5;
  v6 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v2);
  v7 = v6[13];
  v8 = v6[10];
  v9 = OUTLINED_FUNCTION_89_7();
  v10 = sub_1B16BA328();
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_134();
  v42 = v13;
  v41 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_70_9(v16, v37);
  v43 = sub_1B16B863C();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_77();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v44 = v9;
  v21 = type metadata accessor for PageBlueprint(0, v9, AssociatedConformanceWitness, v20);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v22, v23);
  OUTLINED_FUNCTION_71_0();
  v24 = v2;
  v25 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
  v25(v8, v7);
  OUTLINED_FUNCTION_45_10();
  OUTLINED_FUNCTION_45();
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PageBlueprint<A>, v21);
  v26 = sub_1B16B9F44();
  OUTLINED_FUNCTION_88_7();
  if ((v26 & 1) != 0)
  {
    sub_1B16B8630();
    v27 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_54_1();
    v28 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v28 + 16) = v8;
    *(_QWORD *)(v28 + 24) = v6[11];
    *(_QWORD *)(v28 + 32) = v6[12];
    *(_QWORD *)(v28 + 40) = v7;
    *(_QWORD *)(v28 + 48) = v6[14];
    *(_QWORD *)(v28 + 56) = v6[15];
    *(_QWORD *)(v28 + 64) = v27;
    *(_QWORD *)(v28 + 72) = v46;
    *(_QWORD *)(v28 + 80) = v47;
    *(_BYTE *)(v28 + 88) = v45 & 1;
    swift_retain();
    sub_1B16B9740();
    sub_1B16B8174();
    swift_release();
    v29 = OUTLINED_FUNCTION_60_8();
    v30(v29, v43);
    swift_release();
    return 1;
  }
  else
  {
    v25(v8, v7);
    OUTLINED_FUNCTION_45_10();
    OUTLINED_FUNCTION_45();
    PageBlueprint.page(for:)();
    OUTLINED_FUNCTION_88_7();
    OUTLINED_FUNCTION_18_4(v42, 1, v44);
    if (v32)
    {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v39);
      return 0;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v40, v42, v44);
      OUTLINED_FUNCTION_108_0();
      v34 = *(void **)((char *)v24 + v33);
      v31 = 1;
      v35 = sub_1B15350CC(v40, 1);
      objc_msgSend(v34, sel_setVisibleViewController_, v35);

      OUTLINED_FUNCTION_120(v40, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    }
  }
  return v31;
}

void sub_1B1536958(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1B5E1F2F8](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10._countAndFlagsBits = a2;
    v10._object = a3;
    PageViewController.showPage(for:animated:)(v10, a4 & 1);

  }
}

uint64_t PageViewController.identifier.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD v9[4];

  v0 = sub_1B1532518();
  if (!v0
    || (OUTLINED_FUNCTION_10((uint64_t)v0, (unint64_t *)&qword_1ED183800),
        OUTLINED_FUNCTION_197(v1, (unint64_t *)&qword_1ED17E230),
        v2 = OUTLINED_FUNCTION_3_19(),
        (v2 & 1) == 0))
  {
    v5 = OUTLINED_FUNCTION_0_39();
    goto LABEL_6;
  }
  if (!v8)
  {
LABEL_6:
    OUTLINED_FUNCTION_100_1(v2, (unint64_t *)&qword_1ED184C10, (unint64_t *)&qword_1ED17E230, MEMORY[0x1E0DB3548], v4, v5);
    return 0;
  }
  OUTLINED_FUNCTION_101_7(v2, v3);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  OUTLINED_FUNCTION_191();
  v6 = sub_1B16B81B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_1B1536AAC()
{
  return PageViewController.identifier.getter();
}

Swift::Void __swiftcall PageViewController.sceneWillEnterForeground()()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char v9[24];
  uint64_t v10;
  _BYTE v11[40];

  v1 = MEMORY[0x1E0DEEDD8];
  if (*((_BYTE *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8)) == 1)
  {
    v2 = sub_1B1532518();
    if (v2
      && (OUTLINED_FUNCTION_10((uint64_t)v2, (unint64_t *)&qword_1ED183800),
          v4 = v3,
          OUTLINED_FUNCTION_197(v3, &qword_1ED17E728),
          v5 = OUTLINED_FUNCTION_3_19(),
          (v5 & 1) != 0))
    {
      if (v10)
      {
        OUTLINED_FUNCTION_101_7(v5, v6);
        OUTLINED_FUNCTION_1_74(*v0);
        v9[0] = 2;
        (*(void (**)(_BYTE *, char *, uint64_t, uint64_t, double))(v1 + 8))(v11, v9, v4, v1, 1.0);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
        return;
      }
    }
    else
    {
      v8 = OUTLINED_FUNCTION_0_39();
    }
    OUTLINED_FUNCTION_100_1(v5, qword_1ED17E730, &qword_1ED17E728, (uint64_t)&protocol descriptor for PageViewable, v7, v8);
  }
}

Swift::Void __swiftcall PageViewController.sceneWillResignActive()()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18[5];

  v2 = sub_1B1532518();
  if (!v2
    || (v18[0] = v2,
        OUTLINED_FUNCTION_10((uint64_t)v2, (unint64_t *)&qword_1ED183800),
        OUTLINED_FUNCTION_197(v3, &qword_1ED17E728),
        v4 = OUTLINED_FUNCTION_7_5(),
        (v4 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    goto LABEL_6;
  }
  if (!v16)
  {
LABEL_6:
    OUTLINED_FUNCTION_57_4(v4, qword_1ED17E730, &qword_1ED17E728, (uint64_t)&protocol descriptor for PageViewable, v5, v6, v7, v8, v14);
    goto LABEL_7;
  }
  sub_1B13C06D0(&v14, (uint64_t)v18);
  OUTLINED_FUNCTION_1_74(*v0);
  v9 = OUTLINED_FUNCTION_26_22(*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  OUTLINED_FUNCTION_80(v9, v10, v11, v12, v13);
LABEL_7:
  OUTLINED_FUNCTION_21_1();
}

Swift::Void __swiftcall PageViewController.sceneDidBecomeActive()()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18[5];

  v2 = sub_1B1532518();
  if (!v2
    || (v18[0] = v2,
        OUTLINED_FUNCTION_10((uint64_t)v2, (unint64_t *)&qword_1ED183800),
        OUTLINED_FUNCTION_197(v3, &qword_1ED17E728),
        v4 = OUTLINED_FUNCTION_7_5(),
        (v4 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    goto LABEL_6;
  }
  if (!v16)
  {
LABEL_6:
    OUTLINED_FUNCTION_57_4(v4, qword_1ED17E730, &qword_1ED17E728, (uint64_t)&protocol descriptor for PageViewable, v5, v6, v7, v8, v14);
    goto LABEL_7;
  }
  sub_1B13C06D0(&v14, (uint64_t)v18);
  OUTLINED_FUNCTION_1_74(*v0);
  v9 = OUTLINED_FUNCTION_26_22(*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 24), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  OUTLINED_FUNCTION_80(v9, v10, v11, v12, v13);
LABEL_7:
  OUTLINED_FUNCTION_21_1();
}

Swift::Void __swiftcall PageViewController.sceneDidEnterBackground()()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18[5];

  v2 = sub_1B1532518();
  if (!v2
    || (v18[0] = v2,
        OUTLINED_FUNCTION_10((uint64_t)v2, (unint64_t *)&qword_1ED183800),
        OUTLINED_FUNCTION_197(v3, &qword_1ED17E728),
        v4 = OUTLINED_FUNCTION_7_5(),
        (v4 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    goto LABEL_6;
  }
  if (!v16)
  {
LABEL_6:
    OUTLINED_FUNCTION_57_4(v4, qword_1ED17E730, &qword_1ED17E728, (uint64_t)&protocol descriptor for PageViewable, v5, v6, v7, v8, v14);
    goto LABEL_7;
  }
  sub_1B13C06D0(&v14, (uint64_t)v18);
  OUTLINED_FUNCTION_1_74(*v0);
  v9 = OUTLINED_FUNCTION_26_22(*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 32), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  OUTLINED_FUNCTION_80(v9, v10, v11, v12, v13);
LABEL_7:
  OUTLINED_FUNCTION_21_1();
}

void sub_1B1536E0C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = type metadata accessor for PageBlueprint(255, AssociatedTypeWitness, AssociatedConformanceWitness, v5);
  v7 = sub_1B16BA328();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v11 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((char *)&v11 - v9, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  sub_1B1532628();
}

uint64_t sub_1B1536F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t AssociatedConformanceWitness;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t result;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  int EnumTagSinglePayload;
  uint64_t v63;
  _BYTE *v64;
  int v65;
  _BYTE *v66;
  _BYTE *v67;
  _QWORD *v68;
  uint64_t v69;
  void (*v70)(_BYTE *, uint64_t);
  _QWORD *v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t);
  _BYTE *v82;
  int v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  char v91;
  void (*v92)(_BYTE *, uint64_t);
  _BYTE v93[4];
  int v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  _QWORD *v103;
  _BYTE *v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t TupleTypeMetadata2;
  uint64_t v113;
  uint64_t v114;

  v111 = a3;
  v113 = a1;
  v114 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v107 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v4);
  v102 = &v93[-v5];
  v6 = sub_1B16BA328();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v106 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v8 = MEMORY[0x1E0C80A78](TupleTypeMetadata2, v7);
  v108 = &v93[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v104 = &v93[-v12];
  v103 = *(_QWORD **)(v6 - 8);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v101 = &v93[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v105 = &v93[-v18];
  v20 = MEMORY[0x1E0C80A78](v17, v19);
  v109 = &v93[-v21];
  v23 = MEMORY[0x1E0C80A78](v20, v22);
  v25 = &v93[-v24];
  v27 = MEMORY[0x1E0C80A78](v23, v26);
  v29 = &v93[-v28];
  MEMORY[0x1E0C80A78](v27, v30);
  v32 = &v93[-v31];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v35 = type metadata accessor for PageBlueprint(0, AssociatedTypeWitness, AssociatedConformanceWitness, v34);
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35, v37);
  v39 = &v93[-v38];
  result = static PageBlueprint.== infix(_:_:)();
  if ((result & 1) == 0)
  {
    v99 = v29;
    v100 = v32;
    v96 = v25;
    v98 = AssociatedTypeWitness;
    v41 = TupleTypeMetadata2;
    MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for PageBlueprint<A>, v35);
    v42 = sub_1B16B9F44();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v36 + 16))(v39, v114, v35);
    if ((v42 & 1) != 0)
    {
      v43 = sub_1B16B9F44();
      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v39, v35);
      v44 = v41;
      v45 = v6;
      v46 = v35;
      v47 = v98;
      v48 = v100;
      if ((v43 & 1) == 0)
        return (uint64_t)objc_msgSend(*(id *)((char *)v110 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v110) + 0x90)), sel_reindexViewControllers);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v39, v35);
      v44 = v41;
      v45 = v6;
      v46 = v35;
      v47 = v98;
      v48 = v100;
    }
    v95 = *(_QWORD *)(AssociatedConformanceWitness + 8);
    v49 = *(_QWORD *)(v95 + 16);
    v50 = sub_1B16B81B0();
    PageBlueprint.page(before:)(v50, v51);
    swift_bridgeObjectRelease();
    v97 = v49;
    v52 = sub_1B16B81B0();
    v98 = v46;
    v53 = v99;
    PageBlueprint.page(before:)(v52, v54);
    swift_bridgeObjectRelease();
    v55 = *(int *)(v44 + 48);
    v57 = v103;
    v56 = (uint64_t)v104;
    v58 = (uint64_t)&v104[v55];
    v59 = (void (*)(_BYTE *, _BYTE *, uint64_t))v103[2];
    v59(v104, v48, v45);
    v59((_BYTE *)v58, v53, v45);
    v60 = v45;
    if (__swift_getEnumTagSinglePayload(v56, 1, v47) == 1)
    {
      v61 = (_QWORD *)v57[1];
      ((void (*)(_BYTE *, uint64_t))v61)(v53, v45);
      ((void (*)(_BYTE *, uint64_t))v61)(v48, v45);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v58, 1, v47);
      v63 = (uint64_t)v108;
      if (EnumTagSinglePayload == 1)
      {
        v103 = v61;
        ((void (*)(uint64_t, uint64_t))v61)(v56, v45);
        goto LABEL_14;
      }
    }
    else
    {
      v64 = v96;
      v59(v96, (_BYTE *)v56, v45);
      v65 = __swift_getEnumTagSinglePayload(v58, 1, v47);
      v66 = v108;
      v67 = v102;
      if (v65 != 1)
      {
        v68 = v57;
        v69 = v107;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v107 + 32))(v102, v58, v47);
        v94 = sub_1B16B9830();
        v70 = *(void (**)(_BYTE *, uint64_t))(v69 + 8);
        v70(v67, v47);
        v71 = (_QWORD *)v68[1];
        ((void (*)(_BYTE *, uint64_t))v71)(v99, v60);
        ((void (*)(_BYTE *, uint64_t))v71)(v100, v60);
        v70(v64, v47);
        v103 = v71;
        ((void (*)(uint64_t, uint64_t))v71)(v56, v60);
        v63 = (uint64_t)v66;
        if ((v94 & 1) != 0)
          goto LABEL_14;
        goto LABEL_13;
      }
      v61 = (_QWORD *)v57[1];
      ((void (*)(_BYTE *, uint64_t))v61)(v99, v45);
      ((void (*)(_BYTE *, uint64_t))v61)(v100, v45);
      (*(void (**)(_BYTE *, uint64_t))(v107 + 8))(v64, v47);
      v63 = (uint64_t)v66;
    }
    v103 = v61;
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v56, TupleTypeMetadata2);
LABEL_13:
    objc_msgSend(*(id *)((char *)v110 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v110) + 0x90)), sel_reindexPreviousViewControllers);
LABEL_14:
    v72 = sub_1B16B81B0();
    v73 = v109;
    PageBlueprint.page(after:)(v72, v74);
    swift_bridgeObjectRelease();
    v75 = sub_1B16B81B0();
    v76 = v105;
    PageBlueprint.page(after:)(v75, v77);
    v78 = v73;
    swift_bridgeObjectRelease();
    v79 = TupleTypeMetadata2;
    v80 = v63 + *(int *)(TupleTypeMetadata2 + 48);
    v59((_BYTE *)v63, v78, v60);
    v59((_BYTE *)v80, v76, v60);
    if (__swift_getEnumTagSinglePayload(v63, 1, v47) == 1)
    {
      v81 = (uint64_t (*)(uint64_t, uint64_t))v103;
      ((void (*)(_BYTE *, uint64_t))v103)(v76, v60);
      v81((uint64_t)v78, v60);
      if (__swift_getEnumTagSinglePayload(v80, 1, v47) == 1)
        return v81(v63, v60);
    }
    else
    {
      v82 = v101;
      v59(v101, (_BYTE *)v63, v60);
      v83 = __swift_getEnumTagSinglePayload(v80, 1, v47);
      v84 = (uint64_t (*)(uint64_t, uint64_t))v103;
      if (v83 != 1)
      {
        v87 = v107;
        v88 = v102;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v107 + 32))(v102, v80, v47);
        v89 = v76;
        v90 = v82;
        v91 = sub_1B16B9830();
        v92 = *(void (**)(_BYTE *, uint64_t))(v87 + 8);
        v92(v88, v47);
        v84((uint64_t)v89, v60);
        v84((uint64_t)v109, v60);
        v92(v90, v47);
        result = v84(v63, v60);
        v85 = v110;
        v86 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        if ((v91 & 1) != 0)
          return result;
        return (uint64_t)objc_msgSend(*(id *)((char *)v85 + *(_QWORD *)((*v86 & *v85) + 0x90)), sel_reindexNextViewControllers);
      }
      ((void (*)(_BYTE *, uint64_t))v103)(v76, v60);
      v84((uint64_t)v109, v60);
      (*(void (**)(_BYTE *, uint64_t))(v107 + 8))(v82, v47);
    }
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v63, v79);
    v85 = v110;
    v86 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    return (uint64_t)objc_msgSend(*(id *)((char *)v85 + *(_QWORD *)((*v86 & *v85) + 0x90)), sel_reindexNextViewControllers);
  }
  return result;
}

void sub_1B15376F0(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _BYTE v17[40];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1B5E1F2F8](v3);
  if (v4)
  {
    v5 = (_QWORD *)v4;
    if ((v2 & 1) != 0)
    {
      if (sub_1B1532518())
      {
        sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
        sub_1B13CC6B4(0, &qword_1ED17E728);
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (*((_QWORD *)&v15 + 1))
          {
            sub_1B13C06D0(&v14, (uint64_t)v17);
            v6 = (_QWORD *)((char *)v5 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0xB8));
            v7 = v6[3];
            v8 = v6[4];
            __swift_project_boxed_opaque_existential_1(v6, v7);
            if (((*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 40))(v17, v7, v8) & 1) != 0)
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);

              return;
            }
            v12 = v6[3];
            v13 = v6[4];
            __swift_project_boxed_opaque_existential_1(v6, v12);
            LOBYTE(v14) = 0;
            PageSessionManagerType.startSession(for:trigger:)((uint64_t)v17, (char *)&v14, v12, v13);
            goto LABEL_16;
          }
          goto LABEL_13;
        }
      }
    }
    else if (sub_1B1532518())
    {
      sub_1B13A1818(0, (unint64_t *)&qword_1ED183800);
      sub_1B13CC6B4(0, &qword_1ED17E728);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*((_QWORD *)&v15 + 1))
        {
          sub_1B13C06D0(&v14, (uint64_t)v17);
          v9 = (_QWORD *)((char *)v5 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0xB8));
          v10 = v9[3];
          v11 = v9[4];
          __swift_project_boxed_opaque_existential_1(v9, v10);
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 32))(v17, v10, v11);
LABEL_16:

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
          return;
        }
        goto LABEL_13;
      }
    }
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
LABEL_13:

    sub_1B13F15EC((uint64_t)&v14, qword_1ED17E730, &qword_1ED17E728);
  }
}

id sub_1B1537944(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  if (a2)
  {
    v5 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v3, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

void type metadata accessor for PageViewController.Event()
{
  JUMPOUT(0x1B5E1F034);
}

void type metadata accessor for PageViewController.NavigationAction()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t sub_1B15379C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B15379EC()
{
  OUTLINED_FUNCTION_78_3();
  return swift_deallocObject();
}

void sub_1B1537A0C(uint64_t a1)
{
  uint64_t *v1;

  sub_1B1533B68(a1, v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1B1537A20()
{
  OUTLINED_FUNCTION_78_3();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B1537A48()
{
  uint64_t v0;

  sub_1B1536958(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(_BYTE *)(v0 + 88));
}

void sub_1B1537A80(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1B153204C();
  *a1 = v2;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1537AB0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1B1532170();
  *a1 = v2;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1537AD4()
{
  sub_1B1532198();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1537AFC(_BYTE *a1@<X8>)
{
  *a1 = sub_1B1532210() & 1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1537B24(char *a1)
{
  sub_1B1532248(*a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1537B4C()
{
  sub_1B1532370();
  OUTLINED_FUNCTION_0_0();
}

uint64_t method lookup function for PageViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PageViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of PageViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of PageViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of PageViewController.pageGutter.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PageViewController.pageGutter.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PageViewController.pageGutter.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PageViewController.pagingEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of PageViewController.pagingEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of PageViewController.pagingEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of PageViewController.primaryVisiblePage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PageViewController.primaryVisiblePage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of PageViewController.primaryVisiblePage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of PageViewController.currentVisiblePage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of PageViewController.currentViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of PageViewController.secondaryVisiblePage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of PageViewController.secondaryVisibleViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of PageViewController.__allocating_init(blueprintProvider:prewarmer:sessionManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:didChangeVisibleViewControllerFrom:direction:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:viewControllerBefore:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:viewControllerAfter:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:willShow:previousViewController:fromScroll:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:didHide:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:viewController:changedVisibilityFactor:scroll:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t sub_1B1537DF0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1537E3C + 4 * byte_1B16CF565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1537E70 + 4 * byte_1B16CF560[v4]))();
}

uint64_t sub_1B1537E70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1537E78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1537E80);
  return result;
}

uint64_t sub_1B1537E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1537E94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1537E98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1537EA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1537EAC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1537EEC + 4 * byte_1B16CF56A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1537F0C + 4 * byte_1B16CF56F[v4]))();
}

_BYTE *sub_1B1537EEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1537F0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1537F14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1537F1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1537F24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1537F2C(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1B1537F38()
{
  JUMPOUT(0x1B5E1F0E8);
}

void sub_1B1537F48()
{
  JUMPOUT(0x1B5E1F0E8);
}

void sub_1B1537F58(char *a1)
{
  uint64_t v1;

  sub_1B15376F0(a1, *(_QWORD *)(v1 + 64));
}

uint64_t sub_1B1537F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_102_0();
  v0 = OUTLINED_FUNCTION_101_1();
  v1 = OUTLINED_FUNCTION_54_12();
  type metadata accessor for PageBlueprint(v1, v2, v0, v3);
  OUTLINED_FUNCTION_78_3();
  OUTLINED_FUNCTION_54_12();
  v4 = sub_1B16B848C();
  OUTLINED_FUNCTION_82_6(*(_QWORD *)(v4 - 8));
  return swift_deallocObject();
}

void sub_1B1538038()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageBlueprint(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3)- 8)+ 80);
  sub_1B1533DBC(*(_QWORD *)(v0 + 64), v0 + ((v4 + 72) & ~v4));
}

BOOL static CloseButton.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CloseButton.Style.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t CloseButton.Style.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

__n128 sub_1B153818C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  xmmword_1ED17BDF0 = (__int128)result;
  return result;
}

uint64_t sub_1B15381A0()
{
  uint64_t result;

  sub_1B13A2864();
  result = sub_1B16BA1FC();
  qword_1ED17C680 = result;
  return result;
}

uint64_t sub_1B15381E4()
{
  uint64_t result;

  sub_1B13A2864();
  result = sub_1B16BA1FC();
  qword_1ED17C668 = result;
  return result;
}

id sub_1B1538228(uint64_t a1)
{
  return sub_1B1538248(a1, 0, &qword_1ED17C650);
}

id sub_1B1538238(uint64_t a1)
{
  return sub_1B1538248(a1, 2, &qword_1ED17C638);
}

id sub_1B1538248(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, a2);
  *a3 = result;
  return result;
}

Swift::Void __swiftcall CloseButton.transition(to:duration:)(TeaUI::CloseButton::Style to, Swift::Double duration)
{
  void *v2;
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v4 = *(_BYTE *)to;
  v5 = (void *)objc_opt_self();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_BYTE *)(v6 + 24) = v4;
  v9[4] = sub_1B1538CF0;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1B13F00E4;
  v9[3] = &block_descriptor_31;
  v7 = _Block_copy(v9);
  v8 = v2;
  swift_release();
  objc_msgSend(v5, sel_animateWithDuration_delay_options_animations_completion_, 4, v7, 0, duration, 0.0);
  _Block_release(v7);
}

void sub_1B1538374(uint64_t a1, char a2)
{
  char v2;

  v2 = a2 & 1;
  sub_1B15383A8(&v2);
}

void sub_1B15383A8(_BYTE *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI11CloseButton_style);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI11CloseButton_style) = *a1;
  v3 = v2;
  sub_1B15383E0(&v3);
}

void sub_1B15383E0(unsigned __int8 *a1)
{
  uint64_t v1;

  if (*a1 != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI11CloseButton_style))
    sub_1B1538418();
}

void sub_1B1538418()
{
  _BYTE *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  char v5;
  char v6;

  v1 = sub_1B15384AC();
  v2 = OBJC_IVAR____TtC5TeaUI11CloseButton_style;
  v6 = v0[OBJC_IVAR____TtC5TeaUI11CloseButton_style];
  v3 = sub_1B1538604(&v6);
  objc_msgSend(v1, sel_setEffect_, v3);

  v5 = v0[v2];
  v4 = sub_1B1538974(&v5);
  objc_msgSend(v0, sel_setTintColor_, v4);

}

id sub_1B15384AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  char v10;

  v1 = OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing);
  }
  else
  {
    v10 = *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI11CloseButton_style);
    v4 = sub_1B1538604(&v10);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v4);

    objc_msgSend(v5, sel_setClipsToBounds_, 1);
    v6 = objc_msgSend(v5, sel_layer);
    if (qword_1ED17BE08 != -1)
      swift_once();
    objc_msgSend(v6, sel_setCornerRadius_, *(double *)&xmmword_1ED17BDF0 * 0.5);

    objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(v5, sel_setFrame_, 0.0, 0.0, xmmword_1ED17BDF0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1B1538604(_BYTE *a1)
{
  uint64_t *v1;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED17C648 != -1)
      swift_once();
    v1 = &qword_1ED17C638;
  }
  else
  {
    if (qword_1ED17C660 != -1)
      swift_once();
    v1 = &qword_1ED17C650;
  }
  return (id)*v1;
}

id CloseButton.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CloseButton.init()()
{
  _BYTE *v0;
  objc_class *ObjectType;
  id v2;
  id v3;
  id v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR____TtC5TeaUI11CloseButton_style] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing] = 0;
  if (qword_1ED17BE08 != -1)
    swift_once();
  v23.receiver = v0;
  v23.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v23, sel_initWithFrame_, 0.0, 0.0, xmmword_1ED17BDF0);
  OUTLINED_FUNCTION_1_7(v2, sel_setContentEdgeInsets_);
  OUTLINED_FUNCTION_1_7(v2, sel_setTitleEdgeInsets_);
  v3 = OUTLINED_FUNCTION_1_7(v2, sel_setImageEdgeInsets_);
  v4 = OUTLINED_FUNCTION_1_75((uint64_t)v3, sel_setContentHorizontalAlignment_);
  OUTLINED_FUNCTION_1_75((uint64_t)v4, sel_setContentVerticalAlignment_);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = v2;
  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  v9 = sub_1B16B79B8();
  v11 = v10;

  sub_1B13A2780(v9, v11, v7);
  v22 = *((_BYTE *)v7 + OBJC_IVAR____TtC5TeaUI11CloseButton_style);
  v12 = v7;
  v13 = sub_1B1538974(&v22);
  objc_msgSend(v12, sel_setTintColor_, v13, 0x80000001B16EC400);

  v14 = qword_1ED17C748;
  v15 = v12;
  if (v14 != -1)
    swift_once();
  v16 = objc_msgSend((id)qword_1ED190398, sel_imageWithRenderingMode_, 2);
  objc_msgSend(v15, sel_setImage_forState_, v16, 0);

  v17 = objc_msgSend(v15, sel_imageView);
  if (v17)
  {
    v18 = v17;
    v19 = v15;
    v20 = sub_1B15384AC();
    objc_msgSend(v19, sel_insertSubview_belowSubview_, v20, v18);

  }
  return v15;
}

id sub_1B1538974(_BYTE *a1)
{
  uint64_t *v1;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED17C678 != -1)
      swift_once();
    v1 = &qword_1ED17C668;
  }
  else
  {
    if (qword_1ED17C690 != -1)
      swift_once();
    v1 = &qword_1ED17C680;
  }
  return (id)*v1;
}

void sub_1B1538A14()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC5TeaUI11CloseButton_style] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing] = 0;

  sub_1B16BA724();
  __break(1u);
}

double CloseButton.intrinsicContentSize.getter()
{
  if (qword_1ED17BE08 != -1)
    swift_once();
  return *(double *)&xmmword_1ED17BDF0;
}

CGSize __swiftcall CloseButton.sizeThatFits(_:)(CGSize a1)
{
  double v1;
  double v2;
  CGSize result;

  if (qword_1ED17BE08 != -1)
    swift_once();
  v2 = *((double *)&xmmword_1ED17BDF0 + 1);
  v1 = *(double *)&xmmword_1ED17BDF0;
  result.height = v2;
  result.width = v1;
  return result;
}

id CloseButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void CloseButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CloseButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall CloseButton.accessibilityActivate()()
{
  void *v0;

  objc_msgSend(v0, sel_sendActionsForControlEvents_, 64);
  return 1;
}

uint64_t sub_1B1538CCC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B1538CF0()
{
  uint64_t v0;

  sub_1B1538374(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_1B1538D00()
{
  unint64_t result;

  result = qword_1EEF33070;
  if (!qword_1EEF33070)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CloseButton.Style, &type metadata for CloseButton.Style);
    atomic_store(result, (unint64_t *)&qword_1EEF33070);
  }
  return result;
}

uint64_t type metadata accessor for CloseButton()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for CloseButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1538DA8 + 4 * byte_1B16CF7B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1538DDC + 4 * byte_1B16CF7B0[v4]))();
}

uint64_t sub_1B1538DDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1538DE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1538DECLL);
  return result;
}

uint64_t sub_1B1538DF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1538E00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1538E04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1538E0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloseButton.Style()
{
  return &type metadata for CloseButton.Style;
}

uint64_t GradientView.gradientLayer.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  return swift_dynamicCastObjCClassUnconditional();
}

uint64_t GradientView.gradientDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor;
  OUTLINED_FUNCTION_30();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v13;
  return OUTLINED_FUNCTION_12_30(v4);
}

uint64_t sub_1B1538EEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = *a1 + OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 72) = v13;
  return sub_1B1407B94(v4);
}

void sub_1B1538F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)&v10 = *(_QWORD *)a1;
  *((_QWORD *)&v10 + 1) = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  sub_1B1407B94(v10);
  GradientView.gradientDescriptor.setter(&v10);
}

void (*GradientView.gradientDescriptor.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  OUTLINED_FUNCTION_30();
  v4 = OUTLINED_FUNCTION_4_50();
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  v3[4] = v8;
  v3[5] = v9;
  v3[6] = v10;
  v3[7] = v11;
  v3[8] = v12;
  *((_BYTE *)v3 + 72) = v13;
  OUTLINED_FUNCTION_12_30(v4);
  return sub_1B1539064;
}

void sub_1B1539064(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5[5];

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_55();
    sub_1B1407B94(v3);
    GradientView.gradientDescriptor.setter(v5);
    v4 = OUTLINED_FUNCTION_4_50();
    sub_1B14079A4(v4);
  }
  else
  {
    OUTLINED_FUNCTION_5_55();
    GradientView.gradientDescriptor.setter(v5);
  }
  free(v2);
}

uint64_t GradientView.dynamicGradientDescriptor.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[160];

  v1 = v0 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  OUTLINED_FUNCTION_30();
  sub_1B1539148(v1, (uint64_t)v3);
  OUTLINED_FUNCTION_6_57((uint64_t)v3);
  return sub_1B15393A8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
}

uint64_t sub_1B1539148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13D6584(0, &qword_1ED185F68, (uint64_t (*)(uint64_t))sub_1B15391A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B15391A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED185F60)
  {
    v4 = type metadata accessor for DynamicValue(0, (uint64_t)&type metadata for GradientDescriptor, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED185F60);
  }
}

uint64_t sub_1B15391EC(uint64_t result)
{
  if (result)
  {
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    return sub_1B16B9740();
  }
  return result;
}

uint64_t sub_1B1539238@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[160];

  v3 = *a1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  swift_beginAccess();
  sub_1B1539148(v3, (uint64_t)v5);
  sub_1B1539148((uint64_t)v5, a2);
  return sub_1B15393A8((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
}

uint64_t sub_1B15392A8(uint64_t a1)
{
  _BYTE v2[160];
  _BYTE v3[160];

  sub_1B1539148(a1, (uint64_t)v3);
  sub_1B1539148((uint64_t)v3, (uint64_t)v2);
  sub_1B15393A8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
  return GradientView.dynamicGradientDescriptor.setter((uint64_t)v2);
}

uint64_t GradientView.dynamicGradientDescriptor.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[160];
  _BYTE v5[160];
  _BYTE v6[160];
  _BYTE v7[168];

  sub_1B1539148(a1, (uint64_t)v5);
  v2 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  OUTLINED_FUNCTION_0_25();
  sub_1B1539148(v2, (uint64_t)v6);
  sub_1B1539148(v2, (uint64_t)v7);
  OUTLINED_FUNCTION_6_57((uint64_t)v5);
  sub_1B15393A8((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
  sub_1B15393A8((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B1539414);
  sub_1B1539148((uint64_t)v6, (uint64_t)v4);
  sub_1B153945C((uint64_t)v4);
  return sub_1B15393A8((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B1539414);
}

uint64_t sub_1B15393A8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 152);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    v4);
  return a1;
}

uint64_t sub_1B1539414(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B153945C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  _BYTE __src[160];
  _BYTE v5[160];
  uint64_t v6[20];
  uint64_t __dst[20];
  uint64_t v8;
  _BYTE v9[160];
  _BYTE v10[160];
  _BYTE v11[160];
  uint64_t v12[20];

  sub_1B1539148(a1, (uint64_t)v10);
  v2 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  swift_beginAccess();
  sub_1B1539148(v2, (uint64_t)v11);
  sub_1B1539148((uint64_t)v10, (uint64_t)v12);
  if (sub_1B1452D34(v12) != 1)
  {
    sub_1B1539148((uint64_t)v11, (uint64_t)v6);
    if (sub_1B1452D34(v6) != 1)
    {
      sub_1B1539148((uint64_t)v11, (uint64_t)__src);
      memcpy(__dst, __src, 0x99uLL);
      sub_1B1539148((uint64_t)v10, (uint64_t)v5);
      memcpy(v9, v5, 0x99uLL);
      sub_1B15393A8((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
      sub_1B15393A8((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
      v3 = sub_1B1539A60(v9, __dst);
      sub_1B15393A8((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B1539414);
      sub_1B15393A8((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B1539414);
      if (v3)
        return;
      goto LABEL_7;
    }
LABEL_5:
    sub_1B1539148((uint64_t)v10, (uint64_t)__dst);
    sub_1B1539148((uint64_t)v11, (uint64_t)&v8);
    sub_1B15393A8((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
    sub_1B15393A8((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
    sub_1B153994C(__dst);
LABEL_7:
    sub_1B14074C4();
    return;
  }
  sub_1B1539148((uint64_t)v11, (uint64_t)__dst);
  if (sub_1B1452D34(__dst) != 1)
    goto LABEL_5;
}

void GradientView.dynamicGradientDescriptor.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x340uLL);
  *a1 = v3;
  v3[103] = v1;
  v4 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_7_46(v4);
  OUTLINED_FUNCTION_6_57((uint64_t)v3);
  sub_1B15393A8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
  OUTLINED_FUNCTION_31();
}

void sub_1B1539660(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 160;
  v4 = (uint64_t)*a1 + 320;
  v5 = (uint64_t)*a1 + 480;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_8_39();
    sub_1B1539148(v5, (uint64_t)v2 + 640);
    sub_1B15393A8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B15391EC);
    GradientView.dynamicGradientDescriptor.setter((uint64_t)v2 + 640);
    OUTLINED_FUNCTION_7_46(v3);
    sub_1B15393A8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B1539414);
  }
  else
  {
    OUTLINED_FUNCTION_8_39();
    OUTLINED_FUNCTION_7_46(v5);
    GradientView.dynamicGradientDescriptor.setter(v4);
  }
  free(v2);
}

id GradientView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

void sub_1B1539734(void *a1)
{
  bzero(a1, 0x99uLL);
}

uint64_t sub_1B153973C()
{
  return swift_deallocObject();
}

id GradientView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void GradientView.init(coder:)()
{
  char *v0;
  char *v1;
  _BYTE v2[160];

  v1 = &v0[OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *(_OWORD *)(v1 + 57) = 0u;
  sub_1B1539734(v2);
  OUTLINED_FUNCTION_6_57((uint64_t)v2);

  sub_1B16BA724();
  __break(1u);
}

id GradientView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B1539900(uint64_t a1)
{
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t *sub_1B153994C(uint64_t *a1)
{
  uint64_t v3;

  v3 = a1[20];
  sub_1B1539414(*a1);
  sub_1B1539414(v3);
  return a1;
}

BOOL sub_1B1539A60(void *__src, const void *a2)
{
  _BYTE v5[160];
  _BYTE __dst[160];

  memcpy(__dst, __src, 0x99uLL);
  memcpy(v5, a2, 0x99uLL);
  return static GradientDescriptor.== infix(_:_:)((uint64_t)__dst, (uint64_t)v5)
      && static GradientDescriptor.== infix(_:_:)((uint64_t)&__dst[80], (uint64_t)&v5[80]);
}

uint64_t *sub_1B1539ADC(uint64_t *a1)
{
  uint64_t v3;

  v3 = a1[10];
  sub_1B14079A4(*a1);
  sub_1B14079A4(v3);
  return a1;
}

uint64_t Menu.groups.getter()
{
  return sub_1B16B9740();
}

TeaUI::Menu __swiftcall Menu.init(remove:_:)(Swift::OpaquePointer remove, Swift::OpaquePointer _)
{
  Swift::OpaquePointer *v2;
  TeaUI::Menu result;

  v2->_rawValue = remove._rawValue;
  v2[1]._rawValue = _._rawValue;
  result.groups = _;
  result.groupsToRemove = remove;
  return result;
}

_QWORD *sub_1B1539BA4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

_QWORD *assignWithCopy for BlueprintInfiniteScrollManager.InflightRequests(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for BlueprintInfiniteScrollManager.InflightRequests(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

void Navigator.navigate(to:)()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_9_44();
  OUTLINED_FUNCTION_5_56();
  v1 = v0();
  OUTLINED_FUNCTION_1_76(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_0_89();
}

uint64_t Navigator.navigate(to:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_6_17(a1, a2, 0, 0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(a4 + 24));
}

void Navigator.navigate(to:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[4];

  OUTLINED_FUNCTION_2_64();
  v4 = OUTLINED_FUNCTION_6_17(v1, (uint64_t)v12, v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(v0 + 24));
  OUTLINED_FUNCTION_1_76(v4, v5, v6, v7, v8, v9, v10, v11, v12[0]);
  OUTLINED_FUNCTION_0_89();
}

uint64_t Navigator.navigate(to:metadata:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return OUTLINED_FUNCTION_6_17(a1, a2, a3, a4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(a6 + 24));
}

void Navigator.navigate(to:setup:)()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_3_54();
  OUTLINED_FUNCTION_12_31();
  v1 = v0();
  OUTLINED_FUNCTION_1_76(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_0_89();
}

uint64_t Navigator.navigate(to:metadata:setup:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_40();
  return (*(uint64_t (**)(void))(v0 + 24))();
}

void Navigator.navigateWithoutAnimation(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_9_44();
  OUTLINED_FUNCTION_5_56();
  v8 = Navigator.navigateWithoutAnimation(to:metadata:context:setup:)(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_1_76(v8, v9, v10, v11, v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_0_89();
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:context:setup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t result;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  _QWORD aBlock[6];
  _BYTE v52[40];
  id v53;

  v44 = a2;
  v45 = a8;
  v46 = a3;
  v48 = a5;
  v49 = a6;
  v47 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v41 = AssociatedTypeWitness;
  v12 = *(_QWORD *)(v11 + 64);
  v13 = v11;
  v39 = v11;
  v15 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v14);
  v17 = (char *)&v38 - v16;
  v42 = (char *)&v38 - v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v15, v20);
  v40 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = 0;
  v50 = (id)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v43, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, a1, AssociatedTypeWitness);
  sub_1B1405FC4(v44, (uint64_t)v52);
  v21 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v22 = (v19 + v21 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 39) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  v27 = v45;
  *(_QWORD *)(v26 + 16) = a7;
  *(_QWORD *)(v26 + 24) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v26 + v21, v40, a7);
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v26 + v22, v42, v41);
  sub_1B13F77B0((uint64_t)v52, v26 + v23);
  v28 = (uint64_t *)(v26 + v24);
  v30 = v46;
  v29 = v47;
  *v28 = v46;
  v28[1] = v29;
  v31 = (uint64_t *)(v26 + v25);
  v33 = v48;
  v32 = v49;
  *v31 = v48;
  v31[1] = v32;
  *(_QWORD *)(v26 + ((v25 + 23) & 0xFFFFFFFFFFFFFFF8)) = &v53;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_1B153A30C;
  *(_QWORD *)(v34 + 24) = v26;
  aBlock[4] = sub_1B140AA30;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B140AA14;
  aBlock[3] = &block_descriptor_32;
  v35 = _Block_copy(aBlock);
  swift_retain();
  sub_1B13C4AEC(v30);
  sub_1B13C4AEC(v33);
  swift_release();
  objc_msgSend(v50, sel_performWithoutAnimation_, v35);
  _Block_release(v35);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v35 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v53)
    {
      v37 = v53;
      swift_willThrow();

    }
    return swift_release();
  }
  return result;
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return OUTLINED_FUNCTION_8_40(a1, a2, 0, 0, a5, a6, a3, a4);
}

void Navigator.navigateWithoutAnimation(to:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[4];

  OUTLINED_FUNCTION_2_64();
  v7 = OUTLINED_FUNCTION_8_40(v0, (uint64_t)v15, v1, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_76(v7, v8, v9, v10, v11, v12, v13, v14, v15[0]);
  OUTLINED_FUNCTION_0_89();
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return OUTLINED_FUNCTION_8_40(a1, a2, a3, a4, a5, a6, a5, a6);
}

void Navigator.navigateWithoutAnimation(to:setup:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_3_54();
  OUTLINED_FUNCTION_12_31();
  v8 = Navigator.navigateWithoutAnimation(to:metadata:context:setup:)(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_1_76(v8, v9, v10, v11, v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_0_89();
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:setup:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_10_40();
  return Navigator.navigateWithoutAnimation(to:metadata:context:setup:)(v0, v1, 0, 0, v2, v3, v4, v5);
}

uint64_t sub_1B153A168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 24))(a2, a3, a4, a5, a6, a7, a9);
}

uint64_t sub_1B153A1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);
  if (*(_QWORD *)(v0 + v8 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v8);
  if (*(_QWORD *)(v0 + v9))
    swift_release();
  if (*(_QWORD *)(v0 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B153A30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  return sub_1B153A168(v0 + v4, v0 + v7, v0 + v8, *(_QWORD *)(v0 + v9), *(_QWORD *)(v0 + v9 + 8), *(_QWORD *)(v0 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)), v1, v2);
}

uint64_t sub_1B153A3D4()
{
  return swift_deallocObject();
}

void Navigator.preview(for:)()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_9_44();
  OUTLINED_FUNCTION_5_56();
  v1 = v0();
  OUTLINED_FUNCTION_4_51(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_48();
}

uint64_t Navigator.preview(for:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_6_17(a1, a2, 0, 0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(a4 + 40));
}

void Navigator.preview(for:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[4];

  OUTLINED_FUNCTION_2_64();
  v4 = OUTLINED_FUNCTION_6_17(v1, (uint64_t)v12, v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(v0 + 40));
  OUTLINED_FUNCTION_4_51(v4, v5, v6, v7, v8, v9, v10, v11, v12[0]);
  OUTLINED_FUNCTION_48();
}

uint64_t Navigator.preview(for:metadata:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return OUTLINED_FUNCTION_6_17(a1, a2, a3, a4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(a6 + 40));
}

void Navigator.preview(for:setup:)()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_3_54();
  OUTLINED_FUNCTION_12_31();
  v1 = v0();
  OUTLINED_FUNCTION_4_51(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_48();
}

uint64_t Navigator.preview(for:metadata:setup:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_40();
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t dispatch thunk of Navigator.navigate(to:metadata:context:setup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of Navigator.navigate(to:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of Navigator.preview(for:metadata:context:setup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 40))();
}

uint64_t sub_1B153A54C()
{
  OUTLINED_FUNCTION_0_90();
  swift_getObjectType();
  return OUTLINED_FUNCTION_105();
}

uint64_t dispatch thunk of CommandHandlerType.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of CommandHandlerType.canHandle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t sub_1B153A5BC()
{
  OUTLINED_FUNCTION_0_90();
  swift_getObjectType();
  return OUTLINED_FUNCTION_105();
}

uint64_t sub_1B153A608()
{
  return OUTLINED_FUNCTION_105() & 1;
}

uint64_t sub_1B153A634()
{
  const void *v0;
  _BYTE __dst[97];

  OUTLINED_FUNCTION_0_90();
  memcpy(__dst, v0, sizeof(__dst));
  return OUTLINED_FUNCTION_105() & 1;
}

uint64_t dispatch thunk of StackNavigatingRouter.navigateStack(toward:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StackNavigatingRouter.preview(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1B153A6AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v4[8];

  sub_1B153A83C();
  v2 = MEMORY[0x1B5E1F2F8](v4);
  result = sub_1B13C076C((uint64_t)v4);
  *a1 = v2;
  return result;
}

void TraitEnvironmentBackgroundSelectionStyle.traitEnvironment.getter()
{
  JUMPOUT(0x1B5E1F2F8);
}

uint64_t TraitEnvironmentBackgroundSelectionStyle.traitEnvironment.setter()
{
  OUTLINED_FUNCTION_12_4();
  return OUTLINED_FUNCTION_0_91();
}

void TraitEnvironmentBackgroundSelectionStyle.traitEnvironment.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  OUTLINED_FUNCTION_24_1();
}

uint64_t (*sub_1B153A734(uint64_t a1))()
{
  _QWORD *v1;

  *v1 = a1;
  return sub_1B153A750;
}

uint64_t sub_1B153A750()
{
  OUTLINED_FUNCTION_12_4();
  return OUTLINED_FUNCTION_0_91();
}

Swift::Bool __swiftcall TraitEnvironmentBackgroundSelectionStyle.shouldRenderSelection(isSelected:isHighlighted:)(Swift::Bool isSelected, Swift::Bool isHighlighted)
{
  if (!isHighlighted && isSelected)
    OUTLINED_FUNCTION_24_1();
  return isHighlighted;
}

uint64_t sub_1B153A820()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1B153A83C()
{
  return swift_unknownObjectWeakCopyInit();
}

void GradientSectionDecorationItem.Size.Value.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t static GradientSectionDecorationItem.Size.Value.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

void sub_1B153A888(double *a1@<X0>, uint64_t a2@<X8>)
{
  GradientSectionDecorationItem.Size.Value.init(floatLiteral:)(a2, *a1);
}

void GradientSectionDecorationItem.Size.init(width:height:)(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_2_65(a1);
}

uint64_t static GradientSectionDecorationItem.Size.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *(_BYTE *)(a2 + 8);
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t GradientSectionDecorationItem.gradientDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 72) = v4;
  sub_1B16B9740();
  return sub_1B16B9740();
}

uint64_t GradientSectionDecorationItem.darkGradientDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112);
  v7 = *(_QWORD *)(v1 + 120);
  v8 = *(_QWORD *)(v1 + 128);
  v9 = *(_QWORD *)(v1 + 136);
  v10 = *(_QWORD *)(v1 + 144);
  v11 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v11;
  return sub_1B1407B94(v2);
}

void GradientSectionDecorationItem.gradientSize.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_2_65(a1);
}

void GradientSectionDecorationItem.overscrollPinPosition.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 185);
}

void GradientSectionDecorationItem.init(gradientDescriptor:gradientSize:ordering:pinTrait:)()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  OUTLINED_FUNCTION_7_47();
  v1 = *v0;
  v2 = *((_BYTE *)v0 + 8);
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)v5 = v6;
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(v7 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v7 + 24);
  *(_QWORD *)(v5 + 40) = v8;
  *(_BYTE *)(v5 + 48) = v9;
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(v7 + 56);
  *(_BYTE *)(v5 + 72) = v10;
  *(_OWORD *)(v5 + 137) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_QWORD *)(v5 + 160) = v11;
  *(_BYTE *)(v5 + 168) = v12;
  *(_QWORD *)(v5 + 176) = v13;
  *(_BYTE *)(v5 + 184) = v14;
  *(_BYTE *)(v5 + 185) = 3;
  *(_QWORD *)(v5 + 192) = v1;
  *(_BYTE *)(v5 + 200) = v2;
  *(_QWORD *)(v5 + 208) = v4;
  *(_BYTE *)(v5 + 216) = (_BYTE)v3;
  OUTLINED_FUNCTION_62_0();
}

void GradientSectionDecorationItem.init(gradientDescriptor:darkGradientDescriptor:gradientSize:overscrollPinPosition:ordering:pinTrait:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v7 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 72);
  v11 = *a3;
  v12 = a3[2];
  v13 = *a4;
  v14 = *a5;
  v15 = *a6;
  v16 = *((_BYTE *)a6 + 8);
  v8 = *(_BYTE *)(a1 + 48);
  v22 = *(_BYTE *)(a1 + 72);
  v21 = *((_BYTE *)a3 + 8);
  v20 = *((_BYTE *)a3 + 24);
  v19 = *((_BYTE *)a5 + 8);
  *(_QWORD *)a7 = *(_QWORD *)a1;
  *(_OWORD *)(a7 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a7 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a7 + 40) = v7;
  *(_BYTE *)(a7 + 48) = v8;
  *(_OWORD *)(a7 + 56) = *(_OWORD *)(a1 + 56);
  *(_BYTE *)(a7 + 72) = v22;
  v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a7 + 80) = *(_OWORD *)a2;
  *(_OWORD *)(a7 + 96) = v17;
  v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a7 + 112) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a7 + 128) = v18;
  *(_QWORD *)(a7 + 144) = v9;
  *(_BYTE *)(a7 + 152) = v10;
  *(_QWORD *)(a7 + 160) = v11;
  *(_BYTE *)(a7 + 168) = v21;
  *(_QWORD *)(a7 + 176) = v12;
  *(_BYTE *)(a7 + 184) = v20;
  *(_BYTE *)(a7 + 185) = v13;
  *(_QWORD *)(a7 + 192) = v14;
  *(_BYTE *)(a7 + 200) = v19;
  *(_QWORD *)(a7 + 208) = v15;
  *(_BYTE *)(a7 + 216) = v16;
  OUTLINED_FUNCTION_62_0();
}

void GradientSectionDecorationItem.init(gradientDescriptor:gradientSize:overscrollPinPosition:ordering:pinTrait:)()
{
  char *v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_7_47();
  v1 = *v0;
  v3 = *v2;
  LOBYTE(v0) = *((_BYTE *)v2 + 8);
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)v6 = v7;
  *(_OWORD *)(v6 + 8) = *(_OWORD *)(v8 + 8);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(v8 + 24);
  *(_QWORD *)(v6 + 40) = v9;
  *(_BYTE *)(v6 + 48) = v10;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v8 + 56);
  *(_BYTE *)(v6 + 72) = v11;
  *(_OWORD *)(v6 + 137) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_QWORD *)(v6 + 160) = v12;
  *(_BYTE *)(v6 + 168) = v13;
  *(_QWORD *)(v6 + 176) = v14;
  *(_BYTE *)(v6 + 184) = v15;
  *(_BYTE *)(v6 + 185) = v1;
  *(_QWORD *)(v6 + 192) = v3;
  *(_BYTE *)(v6 + 200) = (_BYTE)v0;
  *(_QWORD *)(v6 + 208) = v5;
  *(_BYTE *)(v6 + 216) = (_BYTE)v4;
  OUTLINED_FUNCTION_62_0();
}

id GradientSectionDecorationView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id GradientSectionDecorationView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void GradientSectionDecorationView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  _QWORD *v3;

  v1 = OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = &v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientSize];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *((_QWORD *)v2 + 2) = 0;
  v2[24] = 1;
  v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_overscrollPinPosition] = 3;
  v3 = &v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_offset];
  *v3 = 0;
  v3[1] = 0;

  sub_1B16BA724();
  __break(1u);
}

void GradientSectionDecorationView.__deallocating_deinit()
{
  sub_1B13A4BD0((SEL *)&selRef_dealloc);
}

uint64_t GradientSectionDecorationView.shouldMonitorMotion.getter()
{
  return 0;
}

void GradientSectionDecorationView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v4;

  if (v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_overscrollPinPosition] != 3)
  {
    v4 = *(id *)&v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView];
    sub_1B167467C(v4, v2, a2);

  }
}

uint64_t sub_1B153ADF4(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B14079A4(v3);
  return a1;
}

uint64_t sub_1B153AE94()
{
  return MEMORY[0x1E0DEB0F0];
}

uint64_t assignWithCopy for GradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 80);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  v7 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  if (!v6)
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 80) = v8;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v12 = *(_OWORD *)(a2 + 96);
      v13 = *(_OWORD *)(a2 + 112);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v12;
      *(_OWORD *)(a1 + 112) = v13;
      v14 = *(_OWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = v14;
      sub_1B16B9740();
      sub_1B16B9740();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x49uLL);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_1B153B028(a1 + 80);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 80) = v8;
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v9 = *(_OWORD *)(a2 + 96);
  v10 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  v11 = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v11;
LABEL_8:
  v15 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v16;
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  v17 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v17;
  v18 = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v18;
  return a1;
}

uint64_t sub_1B153B028(uint64_t a1)
{
  destroy for GradientDescriptor();
  return a1;
}

uint64_t assignWithTake for GradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 80);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v5)
    goto LABEL_5;
  if (!v4)
  {
    sub_1B153B028(a1 + 80);
LABEL_5:
    memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x49uLL);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
LABEL_6:
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientSectionDecorationItem(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 217))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientSectionDecorationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 216) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 217) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 217) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for GradientSectionDecorationItem.Size()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for GradientSectionDecorationItem.Size.Value()
{
  OUTLINED_FUNCTION_11_0();
}

double sub_1B153B244()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_50();
  return *(double *)v0;
}

uint64_t sub_1B153B274(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC5TeaUI12ProgressView_overrideHeight);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B153B2C4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_1B153B308(double a1, double a2)
{
  void *v2;
  double v5;
  double v6;
  objc_super v8;

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ProgressView();
  objc_msgSendSuper2(&v8, sel_sizeThatFits_, a1, a2);
  v6 = v5;
  OUTLINED_FUNCTION_0_50();
  return v6;
}

uint64_t type metadata accessor for ProgressView()
{
  return objc_opt_self();
}

id ProgressView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id ProgressView.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t v5;

  OUTLINED_FUNCTION_57();
  v5 = OUTLINED_FUNCTION_1_77(OBJC_IVAR____TtC5TeaUI12ProgressView_overrideHeight);
  v1 = OUTLINED_FUNCTION_54();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

id ProgressView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ProgressView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_1_77(OBJC_IVAR____TtC5TeaUI12ProgressView_overrideHeight);
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ProgressView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B153B570(double *a1@<X8>)
{
  *a1 = sub_1B153B244();
}

uint64_t sub_1B153B598(double *a1)
{
  return sub_1B153B274(*a1);
}

uint64_t method lookup function for ProgressView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProgressView.overrideHeight.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ProgressView.overrideHeight.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ProgressView.overrideHeight.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of RadarAttachmentResolverType.resolveAttachments(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B153B624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1B16B9740();
    v5 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 8 * v5 + 32);
      swift_retain();
      sub_1B153B82C((uint64_t)&v9);
      if (v1)
        break;
      v6 = swift_release();
      if (v8)
      {
        MEMORY[0x1B5E1D4C8](v6);
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B16B9BCC();
        sub_1B16B9C08();
        sub_1B16B9B78();
      }
      if (v3 == ++v5)
      {
        swift_bridgeObjectRelease();
        v2 = v10;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    v2 = v10;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_release();
  }
  return v2;
}

uint64_t sub_1B153B76C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  swift_retain();
  sub_1B153B624(a1);
  v2 = (void *)sub_1B16B8918();
  sub_1B16B8AF8();

  swift_bridgeObjectRelease();
  v3 = (void *)sub_1B16B8918();
  sub_1B13C5CDC(0, (unint64_t *)&qword_1ED183718, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  v4 = sub_1B16B8984();
  swift_release();

  return v4;
}

void sub_1B153B82C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1B16B98A8();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = sub_1B16B7AE4();
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  __asm { BR              X11 }
}

uint64_t sub_1B153B938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v1 - 112) = v2;
  sub_1B13C5CDC(0, &qword_1EEF33118, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1B16B9740();
  result = sub_1B16B89F0();
  **(_QWORD **)(v1 - 144) = result;
  return result;
}

uint64_t sub_1B153C6C8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1B16B7874();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0];
  MEMORY[0x1E0C80A78](v0, v2);
  sub_1B16B78A4();
  swift_allocObject();
  sub_1B16B7898();
  sub_1B13DE5B0(0, &qword_1EEF33120, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B16C6D10;
  sub_1B16B785C();
  sub_1B16B7850();
  sub_1B16B7868();
  sub_1B13AD67C(&qword_1EEF33128, v1, MEMORY[0x1E0CAE0F8]);
  sub_1B13DE5B0(0, &qword_1EEF33130, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B153E42C();
  sub_1B16BA448();
  sub_1B16B7880();
  v3 = sub_1B16B788C();
  swift_release();
  return v3;
}

uint64_t sub_1B153C87C(uint64_t *a1, uint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  char *v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD v93[3];
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  id v103;
  uint64_t v104;
  char *v105;
  char *i;
  uint64_t aBlock;
  unint64_t v108;
  uint64_t (*v109)(uint64_t);
  void *v110;
  uint64_t (*v111)();
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;

  v102 = a4;
  v104 = a2;
  v115 = *MEMORY[0x1E0C80C00];
  v6 = sub_1B16B7A54();
  v99 = *(_QWORD *)(v6 - 8);
  v100 = v6;
  MEMORY[0x1E0C80A78](v6, v7);
  v98 = (char *)v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B16B7AE4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v13 = MEMORY[0x1E0C80A78](v9, v12);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)v93 - v16;
  MEMORY[0x1E0C80A78](v15, v18);
  v20 = (char *)v93 - v19;
  v21 = *a1;
  v22 = (uint64_t)a3;
  v23 = i;
  sub_1B153D3A8(a3, v102, (uint64_t)v93 - v19);
  if (!v23)
  {
    v94 = v11;
    v95 = (char *)v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v97 = v9;
    v93[2] = 0;
    v33 = *(_QWORD *)(v21 + 16);
    v105 = v20;
    v96 = v17;
    if (v33)
    {
      v101 = v22;
      v104 = v10;
      v103 = (id)objc_opt_self();
      sub_1B16B9740();
      v93[1] = v21;
      v34 = v21 + 40;
      for (i = (char *)(v33 - 1); ; i = v44 - 1)
      {
        sub_1B16B9740();
        v35 = (void *)sub_1B16B7AB4();
        v37 = v36;
        v38 = (void *)sub_1B16B983C();
        v39 = objc_msgSend(v38, sel_lastPathComponent);

        sub_1B16B9860();
        aBlock = 47;
        v108 = 0xE100000000000000;
        _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
        swift_bridgeObjectRelease();
        v113 = v35;
        v114 = v37;
        sub_1B16B9740();
        v113 = (id)sub_1B16B99D4();
        v114 = v40;
        sub_1B16B9938();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = objc_msgSend(v103, sel_defaultManager);
        v42 = (void *)sub_1B16B983C();
        swift_bridgeObjectRelease();
        v43 = (void *)sub_1B16B983C();
        swift_bridgeObjectRelease();
        aBlock = 0;
        LODWORD(v35) = objc_msgSend(v41, sel_copyItemAtPath_toPath_error_, v42, v43, &aBlock);

        if (!(_DWORD)v35)
        {
          v46 = (id)aBlock;
          swift_bridgeObjectRelease();
          v24 = (void *)sub_1B16B7A0C();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v97);
          goto LABEL_3;
        }
        v10 = v104;
        v44 = i;
        if (!i)
          break;
        v34 += 16;
        v45 = (id)aBlock;
      }
      v47 = (id)aBlock;
      swift_bridgeObjectRelease();
      v20 = v105;
      v17 = v96;
      v22 = v101;
    }
    v113 = 0;
    v48 = v95;
    sub_1B16B7A90();
    aBlock = v22;
    v108 = v102;
    sub_1B16B9740();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    v50 = v98;
    v49 = v99;
    v51 = v100;
    (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v98, *MEMORY[0x1E0CAFD68], v100);
    sub_1B14AA9C8();
    sub_1B16B7ACC();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    swift_bridgeObjectRelease();
    v52 = *(char **)(v10 + 8);
    v53 = v97;
    ((void (*)(char *, uint64_t))v52)(v48, v97);
    v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_init);
    v55 = sub_1B16B7A78();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v17, v53);
    v56 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v57 = (v94 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    v58 = swift_allocObject();
    v59 = v10;
    v60 = v58;
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v58 + v56, v48, v53);
    *(_QWORD *)(v60 + v57) = &v113;
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = sub_1B153E4EC;
    *(_QWORD *)(v61 + 24) = v60;
    v111 = sub_1B140E614;
    v112 = v61;
    aBlock = MEMORY[0x1E0C809B0];
    v108 = 1107296256;
    v109 = sub_1B153E0E8;
    v110 = &block_descriptor_33;
    v62 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    aBlock = 0;
    objc_msgSend(v54, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v55, 8, &aBlock, v62);
    _Block_release(v62);

    v63 = (id)aBlock;
    LOBYTE(v55) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v55 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if (!v63)
      {
        if (v113)
        {
          i = v52;
          v73 = qword_1EEF2F818;
          v74 = v113;
          if (v73 != -1)
            swift_once();
          v75 = (id)qword_1EEF522C8;
          sub_1B16BA040();
          sub_1B13E6FA8();
          v76 = swift_allocObject();
          *(_OWORD *)(v76 + 16) = xmmword_1B16C51D0;
          v77 = objc_msgSend(v74, sel_description);
          v78 = sub_1B16B9860();
          v80 = v79;

          *(_QWORD *)(v76 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v76 + 64) = sub_1B140493C();
          *(_QWORD *)(v76 + 32) = v78;
          *(_QWORD *)(v76 + 40) = v80;
          sub_1B16B8B58();

          swift_bridgeObjectRelease();
          sub_1B13C5CDC(0, &qword_1EEF33118, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DB4D08]);
          swift_allocObject();
          v32 = sub_1B16B89D8();
          v81 = v97;
          v82 = i;
          ((void (*)(char *, uint64_t))i)(v96, v97);
          ((void (*)(char *, uint64_t))v82)(v105, v81);
        }
        else
        {
          if (qword_1EEF2F818 != -1)
            swift_once();
          v83 = (void *)qword_1EEF522C8;
          sub_1B13E6FA8();
          v84 = swift_allocObject();
          *(_OWORD *)(v84 + 16) = xmmword_1B16C51D0;
          sub_1B13AD67C(&qword_1EEF2FFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v85 = v83;
          v87 = v96;
          v86 = v97;
          v88 = sub_1B16BA8B0();
          v90 = v89;
          *(_QWORD *)(v84 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v84 + 64) = sub_1B140493C();
          *(_QWORD *)(v84 + 32) = v88;
          *(_QWORD *)(v84 + 40) = v90;
          sub_1B16BA058();
          sub_1B16B8B58();

          swift_bridgeObjectRelease();
          aBlock = sub_1B16B7AB4();
          v108 = v91;
          sub_1B13C5CDC(0, &qword_1EEF33118, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DB4D08]);
          swift_allocObject();
          v32 = sub_1B16B89F0();
          ((void (*)(char *, uint64_t))v52)(v87, v86);
          ((void (*)(char *, uint64_t))v52)(v20, v86);
        }

        swift_release();
        return v32;
      }
      i = v52;
      v48 = v96;
      v64 = qword_1EEF2F818;
      v63 = v63;
      if (v64 == -1)
      {
LABEL_16:
        v65 = (id)qword_1EEF522C8;
        sub_1B16BA040();
        sub_1B13E6FA8();
        v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_1B16C51D0;
        v67 = objc_msgSend(v63, sel_description);
        v68 = sub_1B16B9860();
        v70 = v69;

        *(_QWORD *)(v66 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v66 + 64) = sub_1B140493C();
        *(_QWORD *)(v66 + 32) = v68;
        *(_QWORD *)(v66 + 40) = v70;
        sub_1B16B8B58();

        swift_bridgeObjectRelease();
        sub_1B13C5CDC(0, &qword_1EEF33118, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v32 = sub_1B16B89D8();
        v71 = v97;
        v72 = i;
        ((void (*)(char *, uint64_t))i)(v48, v97);
        ((void (*)(char *, uint64_t))v72)(v105, v71);

        swift_release();
        return v32;
      }
    }
    swift_once();
    goto LABEL_16;
  }
  v101 = (uint64_t)a3;
  v24 = v23;
LABEL_3:
  v25 = v102;
  if (qword_1EEF2F818 != -1)
    swift_once();
  v26 = (id)qword_1EEF522C8;
  sub_1B16BA040();
  sub_1B13E6FA8();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1B16C51E0;
  v28 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  v29 = sub_1B140493C();
  *(_QWORD *)(v27 + 64) = v29;
  *(_QWORD *)(v27 + 32) = v101;
  *(_QWORD *)(v27 + 40) = v25;
  aBlock = 0;
  v108 = 0xE000000000000000;
  v113 = v24;
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED1839E0);
  sub_1B16B9740();
  sub_1B16BA6B8();
  v30 = aBlock;
  v31 = v108;
  *(_QWORD *)(v27 + 96) = v28;
  *(_QWORD *)(v27 + 104) = v29;
  *(_QWORD *)(v27 + 72) = v30;
  *(_QWORD *)(v27 + 80) = v31;
  sub_1B16B8B58();

  swift_bridgeObjectRelease();
  sub_1B13C5CDC(0, &qword_1EEF33118, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1B16B89D8();
}

void sub_1B153D3A8(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t inited;
  void *v20;
  id v21;
  id v22;
  id *v23;
  void *v24;
  id v25;
  id *v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  int v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  unsigned int v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  unint64_t v82;
  id v83;
  id v84;
  id v85;
  _QWORD v86[2];
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  id v92;
  id v93;
  id v94;
  unint64_t v95;
  uint64_t v96;

  v87 = a3;
  v96 = *MEMORY[0x1E0C80C00];
  v5 = sub_1B16B79D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B16B7A54();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B16B7AE4();
  v89 = *(_QWORD *)(v15 - 8);
  v90 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v94 = a1;
  v95 = a2;
  v18 = (char *)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0CAFD60], v10);
  sub_1B14AA9C8();
  sub_1B16B7ACC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_1B13DE5B0(0, &qword_1EEF33140, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v91 = xmmword_1B16C51D0;
  *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
  v20 = (void *)*MEMORY[0x1E0C999D0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C999D0];
  v21 = v20;
  sub_1B14C9374(inited);
  v22 = v88;
  sub_1B16B7A6C();
  v23 = (id *)&unk_1EEF52000;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    v36 = sub_1B16B79C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (v36 != 2)
    {
      if (qword_1EEF2F818 != -1)
        swift_once();
      v37 = (void *)qword_1EEF522C8;
      sub_1B13E6FA8();
      v88 = v38;
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = v91;
      v40 = sub_1B13AD67C(&qword_1EEF2FFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v41 = v37;
      v86[1] = v40;
      v42 = sub_1B16BA8B0();
      v44 = v43;
      *(_QWORD *)(v39 + 56) = MEMORY[0x1E0DEA968];
      v45 = v18;
      v46 = sub_1B140493C();
      *(_QWORD *)(v39 + 64) = v46;
      *(_QWORD *)(v39 + 32) = v42;
      *(_QWORD *)(v39 + 40) = v44;
      sub_1B16BA058();
      sub_1B16B8B58();

      swift_bridgeObjectRelease();
      v47 = (void *)objc_opt_self();
      v48 = objc_msgSend(v47, (SEL)0x1F25F12B7);
      v49 = (void *)sub_1B16B7A78();
      v94 = 0;
      LODWORD(v44) = objc_msgSend(v48, sel_removeItemAtURL_error_, v49, &v94);

      v50 = v94;
      if ((_DWORD)v44)
      {
        v51 = (void *)qword_1EEF522C8;
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = v91;
        v53 = v50;
        v54 = v51;
        v55 = sub_1B16BA8B0();
        *(_QWORD *)(v52 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v52 + 64) = v46;
        *(_QWORD *)(v52 + 32) = v55;
        *(_QWORD *)(v52 + 40) = v56;
        sub_1B16BA058();
        sub_1B16B8B58();

        swift_bridgeObjectRelease();
        v57 = objc_msgSend(v47, sel_defaultManager);
        v58 = (void *)sub_1B16B7A78();
        v94 = 0;
        v59 = objc_msgSend(v57, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v58, 1, 0, &v94);

        v18 = v45;
        if (v59)
        {
          v60 = v94;
          goto LABEL_16;
        }
        v85 = v94;
        v24 = (void *)sub_1B16B7A0C();

        swift_willThrow();
      }
      else
      {
        v83 = v94;
        v24 = (void *)sub_1B16B7A0C();

        swift_willThrow();
        v18 = v45;
      }
      v23 = (id *)&unk_1EEF52000;
      goto LABEL_3;
    }
LABEL_16:
    if (qword_1EEF2F818 != -1)
      swift_once();
    v61 = (void *)qword_1EEF522C8;
    sub_1B13E6FA8();
    v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v91;
    sub_1B13AD67C(&qword_1EEF2FFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v63 = v61;
    v64 = v90;
    v65 = sub_1B16BA8B0();
    v67 = v66;
    *(_QWORD *)(v62 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v62 + 64) = sub_1B140493C();
    *(_QWORD *)(v62 + 32) = v65;
    *(_QWORD *)(v62 + 40) = v67;
    sub_1B16BA058();
    sub_1B16B8B58();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v87, v18, v64);
    return;
  }
  swift_bridgeObjectRelease();
  v24 = v22;
LABEL_3:
  v94 = v24;
  v25 = v24;
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED1839E0);
  sub_1B13A1BE4(0, &qword_1EEF33148);
  if (!swift_dynamicCast())
  {
LABEL_27:

    v78 = MEMORY[0x1E0DEA968];
    if (qword_1EEF2F818 != -1)
      swift_once();
    v79 = v23[89];
    sub_1B16BA040();
    sub_1B13E6FA8();
    v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v91;
    v94 = 0;
    v95 = 0xE000000000000000;
    v93 = v24;
    sub_1B16BA6B8();
    v81 = v94;
    v82 = v95;
    *(_QWORD *)(v80 + 56) = v78;
    *(_QWORD *)(v80 + 64) = sub_1B140493C();
    *(_QWORD *)(v80 + 32) = v81;
    *(_QWORD *)(v80 + 40) = v82;
    sub_1B16B8B58();

    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v18, v90);
    return;
  }
  v26 = v23;
  v27 = v18;
  v88 = v93;
  v28 = objc_msgSend(v93, sel_domain);
  v29 = sub_1B16B9860();
  v31 = v30;

  v32 = sub_1B16B9860();
  if (v29 == v32 && v31 == v33)
  {
    swift_bridgeObjectRelease_n();
    v18 = v27;
  }
  else
  {
    v35 = sub_1B16BA910(v29, v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v27;
    if ((v35 & 1) == 0)
      goto LABEL_26;
  }
  if (objc_msgSend(v88, sel_code) != (id)260)
  {
LABEL_26:

    v23 = v26;
    goto LABEL_27;
  }

  if (qword_1EEF2F818 != -1)
    swift_once();
  v68 = v26[89];
  sub_1B13E6FA8();
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v91;
  sub_1B13AD67C(&qword_1EEF2FFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  v70 = v68;
  v71 = v90;
  v72 = sub_1B16BA8B0();
  v74 = v73;
  *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v69 + 64) = sub_1B140493C();
  *(_QWORD *)(v69 + 32) = v72;
  *(_QWORD *)(v69 + 40) = v74;
  sub_1B16BA058();
  sub_1B16B8B58();

  swift_bridgeObjectRelease();
  v75 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v76 = (void *)sub_1B16B7A78();
  v92 = 0;
  LODWORD(v74) = objc_msgSend(v75, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v76, 1, 0, &v92);

  if ((_DWORD)v74)
  {
    v77 = v92;

    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v87, v18, v71);
  }
  else
  {
    v84 = v92;
    sub_1B16B7A0C();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v18, v71);
  }

}

void sub_1B153DD60(uint64_t a1, uint64_t a2, void **a3)
{
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  unsigned int v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v34[2];

  v34[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1EEF2F818 != -1)
    swift_once();
  v3 = (void *)qword_1EEF522C8;
  sub_1B13E6FA8();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B16C51D0;
  sub_1B16B7AE4();
  sub_1B13AD67C(&qword_1EEF2FFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  v5 = v3;
  v6 = sub_1B16BA8B0();
  v8 = v7;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1B140493C();
  *(_QWORD *)(v4 + 64) = v10;
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v8;
  sub_1B16BA058();
  sub_1B16B8B58();

  swift_bridgeObjectRelease();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_defaultManager);
  v13 = (void *)sub_1B16B7A78();
  v34[0] = 0;
  LODWORD(v4) = objc_msgSend(v12, sel_removeItemAtURL_error_, v13, v34);

  if ((_DWORD)v4)
  {
    v14 = v34[0];
  }
  else
  {
    v15 = v34[0];
    v16 = (void *)sub_1B16B7A0C();

    swift_willThrow();
  }
  v17 = (void *)qword_1EEF522C8;
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B16C51E0;
  v19 = v17;
  v20 = sub_1B16BA8B0();
  *(_QWORD *)(v18 + 56) = v9;
  *(_QWORD *)(v18 + 64) = v10;
  *(_QWORD *)(v18 + 32) = v20;
  *(_QWORD *)(v18 + 40) = v21;
  v22 = sub_1B16BA8B0();
  *(_QWORD *)(v18 + 96) = v9;
  *(_QWORD *)(v18 + 104) = v10;
  *(_QWORD *)(v18 + 72) = v22;
  *(_QWORD *)(v18 + 80) = v23;
  sub_1B16BA058();
  sub_1B16B8B58();

  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v11, sel_defaultManager);
  v25 = (void *)sub_1B16B7A78();
  v26 = (void *)sub_1B16B7A78();
  v34[0] = 0;
  v27 = objc_msgSend(v24, sel_moveItemAtURL_toURL_error_, v25, v26, v34);

  if (v27)
  {
    v28 = v34[0];
  }
  else
  {
    v29 = v34[0];
    v30 = (void *)sub_1B16B7A0C();

    swift_willThrow();
    v31 = sub_1B16B7A00();

    v32 = *a3;
    *a3 = (void *)v31;

  }
}

uint64_t sub_1B153E0E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *);
  uint64_t v9;

  v2 = sub_1B16B7AE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *))(a1 + 32);
  sub_1B16B7AA8();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1B153E180@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1B153E17C(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1B153E1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI23RadarAttachmentResolver_temporaryDirectory;
  v2 = OUTLINED_FUNCTION_53();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1B153E200()
{
  return type metadata accessor for RadarAttachmentResolver();
}

uint64_t sub_1B153E208(uint64_t a1)
{
  return sub_1B153B76C(a1);
}

uint64_t sub_1B153E228()
{
  uint64_t v0;

  return sub_1B153B76C(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1B153E254()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B153E280(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B153C87C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1B153E29C(void *a1@<X0>, UIImage **a2@<X8>)
{
  id v4;
  id v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  double v12;
  CGFloat v13;
  CGContext *v14;
  CGContext *v15;
  id v16;
  UIImage *v17;
  CGSize v18;

  if (a1)
  {
    v4 = a1;
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v4 = objc_msgSend(v5, sel_key_window);

    if (!v4)
    {
      v17 = 0;
      goto LABEL_8;
    }
  }
  v6 = a1;
  objc_msgSend(v4, sel_bounds);
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v11, sel_scale);
  v13 = v12;

  v18.width = v8;
  v18.height = v10;
  UIGraphicsBeginImageContextWithOptions(v18, 0, v13);
  v14 = UIGraphicsGetCurrentContext();
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v4, sel_layer);
    objc_msgSend(v16, sel_renderInContext_, v15);

    v17 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

  }
  else
  {
    v17 = 0;
  }

LABEL_8:
  *a2 = v17;
}

uint64_t sub_1B153E400()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B153E424(UIImage **a1@<X8>)
{
  uint64_t v1;

  sub_1B153E29C(*(void **)(v1 + 16), a1);
}

unint64_t sub_1B153E42C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF33138;
  if (!qword_1EEF33138)
  {
    sub_1B13DE5B0(255, &qword_1EEF33130, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF33138);
  }
  return result;
}

uint64_t sub_1B153E484()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_53();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1B153E4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_53() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1B153DD60(a1, v1 + v4, *(void ***)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1B153E538()
{
  return swift_deallocObject();
}

uint64_t destroy for JSArrayValueView()
{
  swift_release();
  return swift_release();
}

void _s5TeaUI16JSArrayValueViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_0_0();
}

_QWORD *assignWithCopy for JSArrayValueView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for JSArrayValueView(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for JSArrayValueView()
{
  return &type metadata for JSArrayValueView;
}

uint64_t sub_1B153E64C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B153E65C()
{
  sub_1B16B9170();
  sub_1B153EBC0();
  sub_1B153EDA4();
  return sub_1B16B9548();
}

uint64_t sub_1B153E704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (**v18)(uint64_t);
  uint64_t (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1B153EC24();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v23 = a2;
  sub_1B141E500(0, &qword_1EEF331A0, type metadata accessor for JSONSchemaValueArray);
  sub_1B16B9440();
  sub_1B1483014();
  v13 = v12;
  swift_release();
  v14 = sub_1B153F044(v13);
  swift_bridgeObjectRelease();
  v22 = v14;
  swift_getKeyPath();
  sub_1B153F310(0, &qword_1EEF33160, &qword_1EEF33168, type metadata accessor for JSONSchemaValue);
  sub_1B153ECCC();
  sub_1B16B9530();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1B153F274;
  *(_QWORD *)(v16 + 24) = v15;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a3, v11, v7);
  sub_1B153EBC0();
  v18 = (void (**)(uint64_t))(a3 + *(int *)(v17 + 36));
  *v18 = sub_1B13CC35C;
  v18[1] = (void (*)(uint64_t))v16;
  v19 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  swift_retain();
  return v19(v11, v7);
}

uint64_t sub_1B153E8F0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)a2 + 96))();
  sub_1B14AA9C8();
  return sub_1B16B9320();
}

uint64_t sub_1B153E940@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  result = sub_1B153E8F0(*a1, a1[1]);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  *(_QWORD *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1B153E978()
{
  sub_1B16B956C();
  sub_1B16B8FB4();
  return swift_release();
}

uint64_t sub_1B153E9D8()
{
  sub_1B141E500(0, &qword_1EEF331A0, type metadata accessor for JSONSchemaValueArray);
  sub_1B16B9440();
  swift_getKeyPath();
  sub_1B13A457C(&qword_1EEF31060, (void (*)(uint64_t))type metadata accessor for JSONSchemaValueArray);
  sub_1B16B7D90();
  swift_release();
  swift_getKeyPath();
  sub_1B16B7DA8();
  swift_release();
  swift_beginAccess();
  sub_1B141E500(0, &qword_1EEF310F0, type metadata accessor for JSONSchemaValue);
  sub_1B153F2C4(&qword_1EEF331A8);
  sub_1B153F2C4(&qword_1EEF331B0);
  sub_1B16B9FBC();
  swift_endAccess();
  sub_1B1483E5C();
  swift_getKeyPath();
  sub_1B16B7D9C();
  swift_release();
  return swift_release();
}

uint64_t sub_1B153EBB0()
{
  return sub_1B153E65C();
}

uint64_t sub_1B153EBB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B153E704(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1B153EBC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF33150)
  {
    sub_1B153EC24();
    sub_1B153ED2C();
    v0 = sub_1B16B9020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF33150);
  }
}

void sub_1B153EC24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF33158)
  {
    sub_1B153F310(255, &qword_1EEF33160, &qword_1EEF33168, type metadata accessor for JSONSchemaValue);
    sub_1B153ECCC();
    v0 = sub_1B16B953C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF33158);
  }
}

unint64_t sub_1B153ECCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF33170;
  if (!qword_1EEF33170)
  {
    sub_1B153F310(255, &qword_1EEF33160, &qword_1EEF33168, type metadata accessor for JSONSchemaValue);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF48], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF33170);
  }
  return result;
}

void sub_1B153ED2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF33178)
  {
    sub_1B16B9044();
    sub_1B13A457C(&qword_1EEF33180, (void (*)(uint64_t))MEMORY[0x1E0CD9F20]);
    v0 = sub_1B16B9230();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF33178);
  }
}

unint64_t sub_1B153EDA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEF33188;
  if (!qword_1EEF33188)
  {
    sub_1B153EBC0();
    v2 = v1;
    v3 = sub_1B153EE24();
    sub_1B13A457C(&qword_1EEF33198, (void (*)(uint64_t))sub_1B153ED2C);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CD9C20], v2, v5);
    atomic_store(result, (unint64_t *)&qword_1EEF33188);
  }
  return result;
}

unint64_t sub_1B153EE24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF33190;
  if (!qword_1EEF33190)
  {
    sub_1B153EC24();
    v2 = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF33190);
  }
  return result;
}

uint64_t sub_1B153EE7C(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    result = sub_1B16B9740();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v23 = v1;
    v6 = (uint64_t *)(result + 56);
    while (1)
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      if (v3)
      {
        OUTLINED_FUNCTION_192();
        result = OUTLINED_FUNCTION_184();
      }
      else
      {
        v11 = v2[3];
        if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
        v13 = v12 <= 1 ? 1 : v12;
        sub_1B153F310(0, &qword_1EEF331C0, &qword_1EEF315D0, (uint64_t (*)(uint64_t))sub_1B14AA8AC);
        v14 = (_QWORD *)swift_allocObject();
        v15 = (uint64_t)(_swift_stdlib_malloc_size(v14) - 32) / 40;
        v14[2] = v13;
        v14[3] = 2 * v15;
        v16 = v14 + 4;
        v17 = v2[3] >> 1;
        v5 = &v14[5 * v17 + 4];
        v3 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v2[2])
        {
          if (v14 != v2 || v16 >= &v2[5 * v17 + 4])
            memmove(v16, v2 + 4, 40 * v17);
          OUTLINED_FUNCTION_192();
          OUTLINED_FUNCTION_184();
          v2[2] = 0;
        }
        else
        {
          OUTLINED_FUNCTION_192();
          OUTLINED_FUNCTION_184();
        }
        result = swift_release();
        v2 = v14;
        v1 = v23;
      }
      v19 = __OFSUB__(v3--, 1);
      if (v19)
        break;
      v6 += 4;
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5[3] = v9;
      v5[4] = v10;
      v5 += 5;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v3 = 0;
LABEL_23:
  v20 = v2[3];
  if (v20 < 2)
    return (uint64_t)v2;
  v21 = v20 >> 1;
  v19 = __OFSUB__(v21, v3);
  v22 = v21 - v3;
  if (!v19)
  {
    v2[2] = v22;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1B153F044(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_33;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1B16B9740();
LABEL_3:
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    if (v2 >= 1)
    {
      v5 = 0;
      v6 = 0;
      v7 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      v8 = v1 & 0xC000000000000001;
      v25 = v1 & 0xC000000000000001;
      while (1)
      {
        if (v8)
        {
          v9 = MEMORY[0x1B5E1DF60](v6, v1);
          if (v5)
            goto LABEL_23;
        }
        else
        {
          v9 = *(_QWORD *)(v1 + 8 * v6 + 32);
          swift_retain();
          if (v5)
            goto LABEL_23;
        }
        v10 = v4[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_32;
        v11 = v2;
        v12 = v1;
        v13 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1)
          v14 = 1;
        else
          v14 = v13;
        sub_1B153F310(0, &qword_1EEF331B8, &qword_1EEF33168, type metadata accessor for JSONSchemaValue);
        v15 = (_QWORD *)swift_allocObject();
        v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 16;
        v15[2] = v14;
        v15[3] = 2 * v16;
        v17 = (unint64_t)(v15 + 4);
        v18 = v4[3];
        v19 = v18 >> 1;
        if (v4[2])
        {
          if (v15 != v4 || v17 >= (unint64_t)&v4[2 * v19 + 4])
            memmove(v15 + 4, v4 + 4, 16 * v19);
          v4[2] = 0;
        }
        v7 = (_QWORD *)(v17 + 16 * v19);
        v5 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - (v18 >> 1);
        swift_release();
        v4 = v15;
        v1 = v12;
        v2 = v11;
        v8 = v25;
LABEL_23:
        v21 = __OFSUB__(v5--, 1);
        if (v21)
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          sub_1B16B9740();
          result = sub_1B16BA76C();
          v2 = result;
          goto LABEL_3;
        }
        *v7 = v6;
        v7[1] = v9;
        v7 += 2;
        if (v2 == ++v6)
          goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_35;
  }
  v5 = 0;
LABEL_27:
  result = swift_bridgeObjectRelease();
  v22 = v4[3];
  if (v22 < 2)
    return (uint64_t)v4;
  v23 = v22 >> 1;
  v21 = __OFSUB__(v23, v5);
  v24 = v23 - v5;
  if (!v21)
  {
    v4[2] = v24;
    return (uint64_t)v4;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1B153F248()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B153F274()
{
  return sub_1B153E978();
}

uint64_t sub_1B153F27C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B153F2A0()
{
  return sub_1B153E9D8();
}

void sub_1B153F2C4(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1B141E500(255, &qword_1EEF310F0, type metadata accessor for JSONSchemaValue);
    OUTLINED_FUNCTION_117();
  }
  OUTLINED_FUNCTION_0_0();
}

void sub_1B153F310(uint64_t a1, unint64_t *a2, _QWORD *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1B153F820(255, a3, a4);
    v6 = OUTLINED_FUNCTION_188(v5);
    if (!v7)
      atomic_store(v6, a2);
  }
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B153F360(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    result = sub_1B16B9740();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (uint64_t *)(result + 40);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if (v3)
      {
        result = OUTLINED_FUNCTION_112();
      }
      else
      {
        v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        v11 = v10 <= 1 ? 1 : v10;
        sub_1B141E500(0, &qword_1EEF331D8, (uint64_t (*)(uint64_t))sub_1B153F8CC);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 24;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = v12 + 4;
        v15 = v2[3] >> 1;
        v5 = &v12[3 * v15 + 4];
        v3 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        if (v2[2])
        {
          if (v12 != v2 || v14 >= &v2[3 * v15 + 4])
            memmove(v14, v2 + 4, 24 * v15);
          OUTLINED_FUNCTION_112();
          v2[2] = 0;
        }
        else
        {
          OUTLINED_FUNCTION_112();
        }
        result = swift_release();
        v2 = v12;
      }
      v17 = __OFSUB__(v3--, 1);
      if (v17)
        break;
      v6 += 2;
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v3 = 0;
LABEL_23:
  v18 = v2[3];
  if (v18 < 2)
    return (uint64_t)v2;
  v19 = v18 >> 1;
  v17 = __OFSUB__(v19, v3);
  v20 = v19 - v3;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

size_t sub_1B153F500(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  size_t result;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;

  sub_1B153F820(0, &qword_1EEF331C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v58 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v6);
  v57 = (_QWORD *)((char *)v49 - v7);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)v49 - v10;
  v59 = v12;
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(a1 + 16);
  sub_1B16B9740();
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v56 = v14;
  v49[0] = a1;
  if (v14)
  {
    v50 = (v13 + 32) & ~v13;
    v16 = MEMORY[0x1E0DEE9D8] + v50;
    v17 = sub_1B16B87C8();
    v18 = 0;
    v19 = 0;
    v20 = *(_QWORD *)(v17 - 8);
    v21 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v22 = *(_QWORD *)(v20 + 72);
    v54 = v20;
    v55 = v17;
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v52 = v22;
    v53 = v23;
    v49[1] = v13 | 7;
    v24 = v15;
    v25 = v51;
    while (1)
    {
      v26 = &v58[*(int *)(v25 + 48)];
      v27 = v55;
      v53(v26, v21, v55);
      v28 = v57;
      v29 = (char *)v57 + *(int *)(v25 + 48);
      *v57 = v18;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v29, v26, v27);
      v30 = (uint64_t)v28;
      v31 = (uint64_t)v11;
      result = sub_1B153F878(v30, (uint64_t)v11);
      if (v19)
      {
        v15 = v24;
      }
      else
      {
        v33 = v24[3];
        if ((uint64_t)((v33 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_34;
        v34 = v33 & 0xFFFFFFFFFFFFFFFELL;
        if (v34 <= 1)
          v35 = 1;
        else
          v35 = v34;
        sub_1B153F310(0, &qword_1EEF331D0, &qword_1EEF331C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v36 = *(_QWORD *)(v59 + 72);
        v37 = v50;
        v15 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v15);
        if (!v36)
          goto LABEL_35;
        v38 = result - v37;
        if (result - v37 == 0x8000000000000000 && v36 == -1)
          goto LABEL_36;
        v40 = v38 / v36;
        v15[2] = v35;
        v15[3] = 2 * (v38 / v36);
        v41 = (char *)v15 + v37;
        v42 = v24[3];
        v43 = (v42 >> 1) * v36;
        if (v24[2])
        {
          if (v15 < v24 || v41 >= (char *)v24 + v50 + v43)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v15 != v24)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v24[2] = 0;
        }
        v16 = (uint64_t)&v41[v43];
        v19 = (v40 & 0x7FFFFFFFFFFFFFFFLL) - (v42 >> 1);
        result = swift_release();
        v25 = v51;
      }
      v45 = __OFSUB__(v19--, 1);
      if (v45)
        break;
      ++v18;
      v11 = (char *)v31;
      sub_1B153F878(v31, v16);
      v16 += *(_QWORD *)(v59 + 72);
      v21 += v52;
      v24 = v15;
      if (v56 == v18)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v19 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v46 = v15[3];
  if (v46 < 2)
    return (size_t)v15;
  v47 = v46 >> 1;
  v45 = __OFSUB__(v47, v19);
  v48 = v47 - v19;
  if (!v45)
  {
    v15[2] = v48;
    return (size_t)v15;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1B153F820(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t *v3;
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    OUTLINED_FUNCTION_61_0(0, (uint64_t)a2, a3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, v3);
  }
}

uint64_t sub_1B153F878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B153F820(0, &qword_1EEF331C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B153F8CC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF331E0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF331E0);
  }
}

unint64_t sub_1B153F92C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  result = qword_1EEF331E8;
  if (!qword_1EEF331E8)
  {
    sub_1B153F9A0();
    v2 = v1;
    v3 = sub_1B153EDA4();
    v4[0] = MEMORY[0x1E0CDDD58];
    v4[1] = v3;
    v4[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDFF98], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF331E8);
  }
  return result;
}

void sub_1B153F9A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF331F0)
  {
    sub_1B153EBC0();
    v0 = sub_1B16B9560();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF331F0);
  }
}

void sub_1B153FA04(id *a1)
{
  sub_1B153FA70(*a1);
}

id sub_1B153FA2C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + qword_1ED1871C8);
  swift_beginAccess();
  return *v1;
}

void sub_1B153FA70(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + qword_1ED1871C8);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

double sub_1B153FAC0()
{
  uint64_t v0;

  return *(double *)(v0 + qword_1ED1871B8);
}

uint64_t sub_1B153FAD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1ED17C040);
  sub_1B13C4AEC(v1);
  return v1;
}

uint64_t sub_1B153FB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + qword_1ED17C040);
  v4 = *(_QWORD *)(v2 + qword_1ED17C040);
  *v3 = a1;
  v3[1] = a2;
  return sub_1B13B9100(v4);
}

id CompositionalListReusableView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id CompositionalListReusableView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CompositionalListReusableView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = qword_1ED1871C8;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
  *(_QWORD *)&v0[qword_1ED1871B8] = 0;
  v2 = &v0[qword_1ED17C040];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B153FC44(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  CompositionalListReusableView.init(coder:)();
}

void sub_1B153FC5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t);
  id v10;
  objc_super v11;

  OUTLINED_FUNCTION_0_92(a4, *v4);
  objc_msgSendSuper2(&v11, sel_applyLayoutAttributes_, a1);
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  v6 = swift_dynamicCastClass();
  if (v6)
  {
    v7 = v6;
    v8 = sub_1B153FAD0();
    if (v8)
    {
      v9 = (void (*)(uint64_t *, uint64_t))v8;
      v10 = a1;
      v9(v4, v7);
      sub_1B13B9100((uint64_t)v9);

    }
  }
}

void sub_1B153FD0C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v4 = a3;
  v7 = a1;
  sub_1B153FC5C(v4, (uint64_t)v7, v5, v6);

}

uint64_t sub_1B153FD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50);
  v6 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58);
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for CompositionalListReusableView(0, v5, v6, a4);
  objc_msgSendSuper2(&v8, sel_prepareForReuse);
  sub_1B153FA70(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init));
  sub_1B153FB0C(0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
}

void sub_1B153FE10(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1B153FD60((uint64_t)v4, v1, v2, v3);

}

id CompositionalListReusableView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  objc_super v6;

  OUTLINED_FUNCTION_0_92(a4, *v4);
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_1B153FE80(uint64_t a1)
{

  return sub_1B13B9100(*(_QWORD *)(a1 + qword_1ED17C040));
}

uint64_t CompositionalListReusableView.keyCommandBlocks.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int128 v6[2];
  uint64_t v7;
  id v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  v8 = *(id *)(v0 + qword_1ED1871C0);
  sub_1B153FFB0();
  v1 = v8;
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1B13C06D0(v6, (uint64_t)v9);
    v2 = v10;
    v3 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    sub_1B1492298(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1B14921E4((uint64_t)v6);
  }
  return v12;
}

unint64_t sub_1B153FFB0()
{
  unint64_t result;

  result = qword_1ED1816F8;
  if (!qword_1ED1816F8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1816F8);
  }
  return result;
}

uint64_t sub_1B1540004()
{
  return CompositionalListReusableView.keyCommandBlocks.getter();
}

uint64_t CompositionalListReusableView.registerForChanges(block:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  return sub_1B153FB0C(a1, a2);
}

uint64_t sub_1B154005C(uint64_t a1, uint64_t a2)
{
  return CompositionalListReusableView.registerForChanges(block:)(a1, a2);
}

uint64_t CompositionalListReusableView<>.shouldMonitorScroll.getter(uint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 16))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50), a1) & 1;
}

uint64_t CompositionalListReusableView<>.shouldMonitorMotion.getter(uint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50), a1) & 1;
}

void CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a3 + 24))(a1, a2, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50), a3);
  OUTLINED_FUNCTION_0_0();
}

void CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a3 + 32))(a1, a2, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50), a3);
  OUTLINED_FUNCTION_0_0();
}

void CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a3 + 40))(a1, a2, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50), a3);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15401E0(uint64_t a1, uint64_t a2)
{
  return CompositionalListReusableView<>.shouldMonitorMotion.getter(*(_QWORD *)(a2 - 8));
}

uint64_t sub_1B15401E8(uint64_t a1, uint64_t a2)
{
  return CompositionalListReusableView<>.shouldMonitorScroll.getter(*(_QWORD *)(a2 - 8));
}

void sub_1B15401F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(a1, a2, *(_QWORD *)(a4 - 8));
}

void sub_1B15401F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)(a1, a2, *(_QWORD *)(a4 - 8));
}

void sub_1B1540200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionEnabled:)(a1, a2, *(_QWORD *)(a4 - 8));
}

void sub_1B1540208(id *a1@<X8>)
{
  *a1 = sub_1B153FA2C();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B1540230()
{
  return 16;
}

__n128 sub_1B154023C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for CompositionalListReusableView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CompositionalListReusableView.token.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1B1540270(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
    type metadata accessor for BlueprintModifierResult();
  v5 = *a2;
  *a1 = *a2;
  v6 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v6;
}

uint64_t sub_1B15426EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
    type metadata accessor for BlueprintModifierResult();
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1B1544CE0()
{
  type metadata accessor for BlueprintModifierResult();
}

_OWORD *sub_1B1544D28(uint64_t a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_QWORD *)(v8 - 144) = a1;
      *(_QWORD *)(v8 - 136) = v7;
      v10 = v2[1];
      *v1 = *v2;
      v1[1] = v10;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 1u:
      *(_QWORD *)(v8 - 144) = a1;
      *(_QWORD *)(v8 - 136) = v7;
      v11 = v2[1];
      *v1 = *v2;
      v1[1] = v11;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 2u:
      *(_QWORD *)(v8 - 144) = a1;
      *(_QWORD *)(v8 - 136) = v7;
      v12 = v2[1];
      *v1 = *v2;
      v1[1] = v12;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 3u:
      *(_QWORD *)(v8 - 144) = a1;
      *(_QWORD *)(v8 - 136) = v7;
      v18 = v2[1];
      *v1 = *v2;
      v1[1] = v18;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 4u:
      *(_QWORD *)(v8 - 144) = a1;
      *(_QWORD *)(v8 - 136) = v7;
      v19 = v2[1];
      *v1 = *v2;
      v1[1] = v19;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 5u:
      *(_QWORD *)(v8 - 144) = a1;
      *(_QWORD *)(v8 - 136) = v7;
      v13 = v2[1];
      *v1 = *v2;
      v1[1] = v13;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 6u:
      v14 = v2[1];
      *v1 = *v2;
      v1[1] = v14;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 136) = v7;
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 7u:
      v15 = v2[1];
      *v1 = *v2;
      v1[1] = v15;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 136) = v7;
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 8u:
      v20 = v2[1];
      *v1 = *v2;
      v1[1] = v20;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 136) = v7;
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 9u:
      v21 = type metadata accessor for BlueprintBookmark();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v25 = sub_1B16B7D60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v1, v2, v25);
        sub_1B140E774();
        *(_OWORD *)((char *)v1 + *(int *)(v26 + 48)) = *(_OWORD *)((char *)v2 + *(int *)(v26 + 48));
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          goto LABEL_22;
        }
        v23 = sub_1B16B7D60();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v23))
        {
          sub_1B13ECA5C(0, (unint64_t *)&qword_1ED17E140, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
          memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v1, v2, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, v23);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_22:
      swift_storeEnumTagMultiPayload();
LABEL_23:
      v27 = *(int *)(v3 + 56);
      *(_QWORD *)((char *)v1 + *(int *)(v3 + 52)) = *(_QWORD *)((char *)v2 + *(int *)(v3 + 52));
      *(_QWORD *)((char *)v1 + v27) = *(_QWORD *)((char *)v2 + v27);
      return v1;
    case 0xBu:
      *(_QWORD *)(v8 - 144) = a1;
      *(_QWORD *)(v8 - 136) = v7;
      v16 = v2[1];
      *v1 = *v2;
      v1[1] = v16;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    case 0xCu:
      v17 = v2[1];
      *v1 = *v2;
      v1[1] = v17;
      v1[2] = v2[2];
      *(_QWORD *)(v8 - 136) = v7;
      *(_QWORD *)(v8 - 128) = v6;
      *(_QWORD *)(v8 - 120) = v4;
      *(_QWORD *)(v8 - 112) = v5;
      type metadata accessor for Blueprint();
    default:
      memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
      goto LABEL_23;
  }
}

uint64_t sub_1B15469B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
    type metadata accessor for BlueprintModifierResult();
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B15486F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B15486FC()
{
  OUTLINED_FUNCTION_0_93();
}

uint64_t sub_1B1548728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;

  if (*(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) == (_DWORD)v2)
    return __swift_getEnumTagSinglePayload(v1, v2, a1);
  v5 = *(_QWORD *)(v1 + *(int *)(v3 + 52));
  if (v5 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  return (v5 + 1);
}

uint64_t sub_1B1548778()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B1548784()
{
  OUTLINED_FUNCTION_0_93();
}

uint64_t sub_1B15487B4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == v4)
    return __swift_storeEnumTagSinglePayload(v2, v1, v1, result);
  *(_QWORD *)(v2 + *(int *)(v3 + 52)) = (v1 - 1);
  return result;
}

void sub_1B15487FC()
{
  OUTLINED_FUNCTION_0_93();
}

void sub_1B1548844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
  type metadata accessor for BlueprintPipelineProcessingResult();
}

uint64_t sub_1B1548870(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + *(int *)(result + 52)) = v2;
  *(_QWORD *)(v3 + *(int *)(result + 56)) = v1;
  return result;
}

double TabBarDefaultCompressionAnimation.topOffset.getter()
{
  return 0.0;
}

uint64_t TabBarDefaultCompressionAnimation.shouldCompressAtTop.getter()
{
  return 0;
}

uint64_t TabBarDefaultCompressionAnimation.shouldCloseGapOnScroll.getter()
{
  return 1;
}

void TabBarDefaultCompressionAnimation.__allocating_init(tabBar:)()
{
  OUTLINED_FUNCTION_13_1();
  TabBarDefaultCompressionAnimation.init(tabBar:)();
}

void TabBarDefaultCompressionAnimation.init(tabBar:)()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_topOffset] = 0;
  v0[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCompressAtTop] = 0;
  v0[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCloseGapOnScroll] = 1;

  sub_1B16BA724();
  __break(1u);
}

id TabBarDefaultCompressionAnimation.__allocating_init(tabBarController:)(uint64_t a1)
{
  OUTLINED_FUNCTION_13_1();
  return TabBarDefaultCompressionAnimation.init(tabBarController:)(a1);
}

id TabBarDefaultCompressionAnimation.init(tabBarController:)(uint64_t a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_topOffset] = 0;
  v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCompressAtTop] = 0;
  v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCloseGapOnScroll] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

void TabBarDefaultCompressionAnimation.update(withPercentage:)()
{
  uint64_t v0;
  id v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  double v18;
  uint64_t v19;
  id v20;
  id v21;
  CGRect v22;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController), sel_view);
  if (v1)
  {
    OUTLINED_FUNCTION_2_66(v1);
    OUTLINED_FUNCTION_4_52();
    OUTLINED_FUNCTION_3_55();
    v2 = OUTLINED_FUNCTION_1_78();
    OUTLINED_FUNCTION_2_66(v2);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v22.origin.x = v4;
    v22.origin.y = v6;
    v22.size.width = v8;
    v22.size.height = v10;
    CGRectGetHeight(v22);
    v20 = OUTLINED_FUNCTION_1_78();
    v11 = OUTLINED_FUNCTION_2_66(v20);
    OUTLINED_FUNCTION_5_57(v11, sel_setFrame_, v12, v13, v14, v15, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_0_94(v21);
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool __swiftcall TabBarDefaultCompressionAnimation.animationShouldBegin(for:currentlyFullyCompressed:)(UIScrollView *a1, Swift::Bool currentlyFullyCompressed)
{
  return 1;
}

double TabBarDefaultCompressionAnimation.maximumBarHeight(for:)()
{
  uint64_t v0;
  id v1;
  CGRect v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController), sel_tabBar);
  objc_msgSend(v1, sel_frame);
  OUTLINED_FUNCTION_13_2();

  v3.origin.x = OUTLINED_FUNCTION_14_0();
  return CGRectGetHeight(v3);
}

double TabBarDefaultCompressionAnimation.minimumBarHeight(for:)()
{
  return 0.0;
}

Swift::Void __swiftcall TabBarDefaultCompressionAnimation.reload(with:)(UITraitCollection_optional with)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  double v12;
  uint64_t v13;
  id v14;
  id v15;
  CGRect v16;

  v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController), sel_view);
  if (v2)
  {
    v3 = v2;
    OUTLINED_FUNCTION_2_66(v2);
    OUTLINED_FUNCTION_13_2();

    v16.origin.x = OUTLINED_FUNCTION_14_0();
    CGRectGetHeight(v16);
    v4 = OUTLINED_FUNCTION_1_78();
    OUTLINED_FUNCTION_2_66(v4);
    OUTLINED_FUNCTION_4_52();
    OUTLINED_FUNCTION_3_55();
    v14 = OUTLINED_FUNCTION_1_78();
    v5 = OUTLINED_FUNCTION_2_66(v14);
    OUTLINED_FUNCTION_5_57(v5, sel_setFrame_, v6, v7, v8, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_0_94(v15);
  }
  else
  {
    __break(1u);
  }
}

id TabBarDefaultCompressionAnimation.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

void TabBarDefaultCompressionAnimation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TabBarDefaultCompressionAnimation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TabBarDefaultCompressionAnimation()
{
  return objc_opt_self();
}

uint64_t method lookup function for TabBarDefaultCompressionAnimation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TabBarDefaultCompressionAnimation.__allocating_init(tabBar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TabBarDefaultCompressionAnimation.__allocating_init(tabBarController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

Swift::tuple___C__NSRange_CGSize __swiftcall NSAttributedString.sizeAndRangeForString(constrainedTo:)(CGSize constrainedTo)
{
  const __CFAttributedString *v1;
  double height;
  double width;
  const __CTFramesetter *v4;
  CFRange *v5;
  CGSize v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  Swift::Int length;
  Swift::Int location;
  Swift::Int v14;
  Swift::Int v15;
  double v16;
  double v17;
  CFRange v18;
  CGSize v19;
  Swift::tuple___C__NSRange_CGSize result;

  height = constrainedTo.height;
  width = constrainedTo.width;
  v4 = CTFramesetterCreateWithAttributedString(v1);
  v5 = (CFRange *)swift_slowAlloc();
  v18.location = 0;
  v18.length = 0;
  v19.width = width;
  v19.height = height;
  v6 = CTFramesetterSuggestFrameSizeWithConstraints(v4, v18, 0, v19, v5);
  v7 = -[__CFAttributedString attributedSubstringFromRange:](v1, sel_attributedSubstringFromRange_, v5->location, v5->length, v6.width, v6.height);
  objc_msgSend(v7, sel_boundingRectWithSize_options_context_, 3, 0, width, height);
  v9 = v8;
  v11 = v10;
  location = v5->location;
  length = v5->length;

  v14 = location;
  v15 = length;
  v16 = v9;
  v17 = v11;
  result._1.height = v17;
  result._1.width = v16;
  result._0.length = v15;
  result._0.location = v14;
  return result;
}

__C::CGRect __swiftcall NSAttributedString.boundingRect(with:)(CGSize with)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  __C::CGRect result;

  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 35, 0, with.width, with.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CGSize __swiftcall NSAttributedString.integralSize()()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  CGSize result;

  objc_msgSend(v0, sel_size);
  v2 = ceil(v1);
  v4 = ceil(v3);
  result.height = v4;
  result.width = v2;
  return result;
}

uint64_t sub_1B1548F00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0x90);
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B1548F64()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void BlueprintTableViewDataSource.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_108_0();
  v2 = v0 + v1;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1B5E1F2F8](v2);
  OUTLINED_FUNCTION_48();
}

void BlueprintTableViewDataSource.delegate.setter()
{
  void *v0;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_13();
  swift_unknownObjectWeakAssign();

  OUTLINED_FUNCTION_48();
}

void BlueprintTableViewDataSource.delegate.modify(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  char *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90);
  v3[5] = v4;
  v5 = (char *)v1 + v4;
  OUTLINED_FUNCTION_13();
  v3[3] = MEMORY[0x1B5E1F2F8](v5);
  OUTLINED_FUNCTION_31();
}

void BlueprintTableViewDataSource.sectionCollapsibleStateManager.getter()
{
  OUTLINED_FUNCTION_13();
  swift_retain();
  OUTLINED_FUNCTION_48();
}

void BlueprintTableViewDataSource.sectionCollapsibleStateManager.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_64_2();
  v3 = (_QWORD *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0x98));
  OUTLINED_FUNCTION_13();
  *v3 = v0;
  swift_release();
  OUTLINED_FUNCTION_48();
}

void BlueprintTableViewDataSource.sectionCollapsibleStateManager.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t BlueprintTableViewDataSource.dragReorderDelegate.getter()
{
  OUTLINED_FUNCTION_13();
  return swift_unknownObjectRetain();
}

uint64_t BlueprintTableViewDataSource.dragReorderDelegate.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xA0));
  OUTLINED_FUNCTION_13();
  *v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

void BlueprintTableViewDataSource.dragReorderDelegate.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

double BlueprintTableViewDataSource.diffableReorderDataSource.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

id BlueprintTableViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return BlueprintTableViewDataSource.init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)(a1, a2, a3);
}

id BlueprintTableViewDataSource.init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_class *ObjectType;
  objc_super v25;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v4);
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_5_58();
  *(_QWORD *)&v4[*(_QWORD *)(v9 + 152)] = 0;
  OUTLINED_FUNCTION_5_58();
  v11 = &v4[*(_QWORD *)(v10 + 160)];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  OUTLINED_FUNCTION_5_58();
  *(_QWORD *)&v4[*(_QWORD *)(v12 + 192)] = 0;
  OUTLINED_FUNCTION_5_58();
  v14 = v8[10];
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(&v4[*(_QWORD *)(v13 + 168)], a1, v14);
  OUTLINED_FUNCTION_5_58();
  v17 = v8[11];
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(&v4[*(_QWORD *)(v16 + 176)], a2, v17);
  OUTLINED_FUNCTION_5_58();
  v20 = v8[12];
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(&v4[*(_QWORD *)(v19 + 184)], a3, v20);
  v25.receiver = v4;
  v25.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  return v22;
}

Swift::Void __swiftcall BlueprintTableViewDataSource.register(in:)(UITableView *in)
{
  void *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;

  OUTLINED_FUNCTION_64_2();
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & v4);
  objc_msgSend(v6, sel_setDataSource_, v2);
  v14 = v1;
  v7 = v5[16];
  v8 = v5[12];
  (*(void (**)(void **, uint64_t, uint64_t))(v7 + 56))(&v14, v8, v7);
  v9 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0x98));
  OUTLINED_FUNCTION_13();
  v10 = *v9;
  if (*v9)
  {
    swift_retain();
    sub_1B15496CC(0, 0, sub_1B154BBF8, sub_1B169991C);
    v11 = OUTLINED_FUNCTION_25();
    swift_unknownObjectWeakInit();
    v12 = (_QWORD *)OUTLINED_FUNCTION_25();
    v12[2] = v5[11];
    v12[3] = v8;
    v12[4] = v5[13];
    v12[5] = v5[15];
    v12[6] = v7;
    v12[7] = v5[17];
    v12[8] = v11;
    v12[9] = v10;
    v12[10] = v1;
    swift_retain();
    swift_retain();
    v13 = v1;
    BlueprintSectionCollapsibleStateManager.onStateChange(_:)((uint64_t)sub_1B1549B28, (uint64_t)v12);
    swift_release();
    OUTLINED_FUNCTION_0_9();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1B1549610()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B1549634(uint64_t a1)
{
  void *v1;
  uint64_t ObjCClassFromMetadata;
  id v4;

  sub_1B13A1818(0, &qword_1ED17B030);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1B16999B4(a1);
  sub_1B16B983C();
  OUTLINED_FUNCTION_48_12();
  objc_msgSend(v1, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

}

void sub_1B15496B8(uint64_t a1, uint64_t a2)
{
  sub_1B15496CC(a1, a2, (void (*)(_QWORD))type metadata accessor for DebugInfoTableViewCell, sub_1B16999A8);
}

void sub_1B15496CC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), void (*a4)(uint64_t, uint64_t))
{
  void *v4;
  uint64_t ObjCClassFromMetadata;
  id v9;

  a3(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  a4(a1, a2);
  sub_1B16B983C();
  OUTLINED_FUNCTION_48_12();
  objc_msgSend(v4, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v9);

}

void sub_1B154974C(uint64_t a1, uint64_t a2)
{
  sub_1B15496CC(a1, a2, (void (*)(_QWORD))type metadata accessor for DebugSubtitleTableViewCell, sub_1B1699928);
}

void sub_1B1549760()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v1, v0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B1549A84()
{
  uint64_t v0;
  char v1;
  void *v2;

  v1 = *(_BYTE *)(v0 - 112);
  v2 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    objc_msgSend(*(id *)(v0 - 208), sel_insertRowsAtIndexPaths_withRowAnimation_, v2, 0);
  else
    objc_msgSend(*(id *)(v0 - 208), sel_deleteRowsAtIndexPaths_withRowAnimation_, v2, 0);

  JUMPOUT(0x1B1549ACCLL);
}

uint64_t sub_1B1549AF4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1B1549B28()
{
  sub_1B1549760();
}

uint64_t BlueprintTableViewDataSource.registerKeyCommandTraversal(observable:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  *(_QWORD *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0xC0)) = v0;
  swift_release();
  return swift_retain();
}

void BlueprintTableViewDataSource.identifiers(for:)()
{
  sub_1B1549D90();
}

void sub_1B1549BB0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintItem(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  v4 = sub_1B16BA328();
  MEMORY[0x1E0C80A78](v4, v3);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B1549CC4()
{
  Blueprint.item(indexPath:)();
}

uint64_t sub_1B1549CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  if (__swift_getEnumTagSinglePayload(v1, 1, v0) == 1)
  {
    result = (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 8))(v1, *(_QWORD *)(v3 - 144));
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v5 = BlueprintItem.identifier.getter();
    v6 = v7;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
  }
  v8 = *(uint64_t **)(v3 - 120);
  *v8 = v5;
  v8[1] = v6;
  return result;
}

void sub_1B1549D5C()
{
  OUTLINED_FUNCTION_30_21();
  sub_1B1549BB0();
}

void BlueprintTableViewDataSource.indexPaths(for:)()
{
  sub_1B1549D90();
}

void sub_1B1549D90()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_28_7();
  OUTLINED_FUNCTION_28_7();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1549E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v16 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&a9 - v19;
  BlueprintProviderType.blueprint.getter(v13, v12);
  *(_QWORD *)(v14 - 192) = v13;
  *(_OWORD *)(v14 - 184) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v14 - 168) = *(_QWORD *)(v9 + 104);
  *(_QWORD *)(v14 - 160) = v12;
  *(_OWORD *)(v14 - 152) = *(_OWORD *)(v9 + 120);
  *(_QWORD *)(v14 - 136) = *(_QWORD *)(v9 + 136);
  *(_QWORD *)(v14 - 128) = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 - 216))(v10, v14 - 208, v11);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, a1);
  OUTLINED_FUNCTION_47();
}

void sub_1B1549EE4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B1549FAC()
{
  Blueprint.indexPath(for:)();
}

void sub_1B1549FE4()
{
  OUTLINED_FUNCTION_30_21();
  sub_1B1549EE4();
}

Swift::Int __swiftcall BlueprintTableViewDataSource.numberOfSections(in:)(UITableView *in)
{
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_13_5();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B154A0B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v11 - v7;
  BlueprintProviderType.blueprint.getter(v2, v1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for Blueprint<A, B>, a1);
  v9 = sub_1B16B9F14();
  OUTLINED_FUNCTION_106_0((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return v9;
}

void sub_1B154A140(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  BlueprintTableViewDataSource.numberOfSections(in:)((UITableView *)a1);
}

uint64_t sub_1B154A168(uint64_t a1)
{
  void *v1;
  void *v2;

  return a1;
}

Swift::Int __swiftcall BlueprintTableViewDataSource.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9_46();
  OUTLINED_FUNCTION_9_46();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_41();
  type metadata accessor for BlueprintSection();
}

void sub_1B154A238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 - 128) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v6, v7);
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v1;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B154A274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v3 - 136) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = (_QWORD *)(v2 + *(_QWORD *)(v1 + 152));
  OUTLINED_FUNCTION_13();
  if (*v6)
  {
    swift_retain();
    OUTLINED_FUNCTION_32_5();
    OUTLINED_FUNCTION_19_3();
  }
  OUTLINED_FUNCTION_32_5();
  OUTLINED_FUNCTION_19_3();
}

void sub_1B154A340()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_20();
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, v0);
  sub_1B16B9F14();
  OUTLINED_FUNCTION_23_23();
  JUMPOUT(0x1B154A374);
}

void sub_1B154A384(void *a1, uint64_t a2, void *a3, Swift::Int a4)
{
  id v6;

  v6 = a3;
  BlueprintTableViewDataSource.tableView(_:numberOfRowsInSection:)((UITableView *)a1, a4);
}

uint64_t sub_1B154A3B4(uint64_t a1)
{
  void *v1;
  void *v2;

  return a1;
}

void BlueprintTableViewDataSource.tableView(_:cellForRowAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6();
  v3 = OUTLINED_FUNCTION_9_46();
  v4 = OUTLINED_FUNCTION_41();
  type metadata accessor for BlueprintLayoutItem(0, v3, v4, v0);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_25_25();
  OUTLINED_FUNCTION_25_25();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B154A514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15_0();
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  *(_QWORD *)(v0 + 8) = OUTLINED_FUNCTION_45_11(v5, v6, v7, v8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v9, v10);
  BlueprintProviderType.blueprint.getter(v2, v1);
  Blueprint.subscript.getter();
}

void sub_1B154A59C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  BlueprintLayoutProviderType.layoutBlueprint.getter(v0[3], v0[4]);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = v0[6];
  v0[12] = AssociatedTypeWitness;
  v0[13] = v6;
  v7 = v0[8];
  v0[14] = AssociatedConformanceWitness;
  v0[15] = v7;
  type metadata accessor for BlueprintLayout();
}

void sub_1B154A63C()
{
  BlueprintLayout.subscript.getter();
}

void sub_1B154A658()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_106_0((uint64_t)(v0 + 16), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  v0[12] = v0[11];
  (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, _QWORD))(*(_QWORD *)(*v0 + 128) + 64))(v1, v4, v0 + 12, v5, *(_QWORD *)(*v0 + 96));
  (*(void (**)(uint64_t, _QWORD))(v0[9] + 8))(v4, v0[10]);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v1, v0[1]);
  OUTLINED_FUNCTION_47();
}

void sub_1B154A6E4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v5, v6);
  sub_1B16B7D0C();
  v7 = a3;
  v8 = a1;
  BlueprintTableViewDataSource.tableView(_:cellForRowAt:)();
}

id sub_1B154A764(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v3);
  return a1;
}

void BlueprintTableViewDataSource.tableView(_:canEditRowAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B154A89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_15_0();
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  v9 = OUTLINED_FUNCTION_43_12(v5, v6, v7, v8);
  *(_QWORD *)(v2 - 192) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v2 - 184) = v9;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v10, v11);
  BlueprintProviderType.blueprint.getter(v1, v0);
  Blueprint.subscript.getter();
}

void sub_1B154A91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_106_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v5 = OUTLINED_FUNCTION_55_12(v3);
  OUTLINED_FUNCTION_17_2(v5, (unint64_t *)&qword_1ED17AAE0);
  if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
  {
    sub_1B13C06D0((__int128 *)(v4 - 160), v4 - 120);
    v6 = *(_QWORD *)(v4 - 96);
    v7 = *(_QWORD *)(v4 - 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 - 120), v6);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7) & 1) != 0)
    {
      OUTLINED_FUNCTION_36_12();
      OUTLINED_FUNCTION_85();
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_85();
  }
  else
  {
    OUTLINED_FUNCTION_35_16();
    OUTLINED_FUNCTION_52_12(v8, (unint64_t *)&qword_1EEF32530, (unint64_t *)&qword_1ED17AAE0, (uint64_t)&protocol descriptor for BlueprintViewActionable);
  }
  if (objc_msgSend(*(id *)(v4 - 200), sel_isEditing))
  {
    v9 = OUTLINED_FUNCTION_55_12(*(_QWORD *)(v4 - 208));
    OUTLINED_FUNCTION_17_2(v9, (unint64_t *)&unk_1EEF33220);
    v10 = OUTLINED_FUNCTION_14_24();
    v11 = *(_QWORD *)(v4 - 192);
    if ((v10 & 1) != 0)
    {
      OUTLINED_FUNCTION_6_58();
      OUTLINED_FUNCTION_106_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_85();
    }
    else
    {
      OUTLINED_FUNCTION_35_16();
      v12 = OUTLINED_FUNCTION_106_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_52_12(v12, (unint64_t *)&unk_1EEF32520, (unint64_t *)&unk_1EEF33220, (uint64_t)&protocol descriptor for Movable);
    }
  }
  else
  {
    OUTLINED_FUNCTION_36_12();
  }
LABEL_11:
  OUTLINED_FUNCTION_47();
}

void sub_1B154AA74(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4;

  sub_1B154AAA4(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_20_1(v4);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B154AAA4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1B13D19B8(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
  OUTLINED_FUNCTION_31();
}

void sub_1B154AB00(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B154B578(a1, a2, a3, a4, (void (*)(id, char *))BlueprintTableViewDataSource.tableView(_:canEditRowAt:));
}

void BlueprintTableViewDataSource.tableView(_:commit:forRowAt:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[14];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_6();
  v30 = v1;
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  type metadata accessor for BlueprintViewAction.Action(0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_2();
  v28[7] = v5;
  v28[5] = v2;
  v6 = OUTLINED_FUNCTION_40_13();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_61_10(v9, v28[0]);
  sub_1B1405F7C(0, &qword_1ED17A980, (void (*)(uint64_t))type metadata accessor for BlueprintViewAction);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_134();
  v28[10] = v12;
  v28[9] = type metadata accessor for BlueprintViewAction(0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_2();
  v28[8] = v15;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v29 = OUTLINED_FUNCTION_45_11(AssociatedConformanceWitness, v17, v18, v19);
  v28[11] = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_47_0();
  v28[6] = v22;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v23, v24);
  v28[13] = (uint64_t)v28 - v25;
  v26 = OUTLINED_FUNCTION_40_13();
  v27 = swift_getAssociatedConformanceWitness();
  v31 = v26;
  v32 = v6;
  v33 = v27;
  v34 = AssociatedConformanceWitness;
  type metadata accessor for BlueprintSection();
}

void sub_1B154ACC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 160) = a1;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_134();
  *(_QWORD *)(v5 - 168) = v8;
  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v2;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B154ACFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v13 - 152) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_47_0();
  *(_QWORD *)(v13 - 256) = v17;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&a9 - v20;
  if (v9 == 2)
  {
    v22 = sub_1B16B7D54();
    v23 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (v22 == 2)
    {
      *(_QWORD *)(v13 - 272) = v11;
      v24 = *(_QWORD *)(v13 - 144) + *(_QWORD *)((*v23 & **(_QWORD **)(v13 - 144)) + 0xA8);
      BlueprintProviderType.blueprint.getter(v12, v10);
      MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for Blueprint<A, B>, a1);
      v25 = (uint64_t)v21;
      v26 = a1;
      v27 = sub_1B16B9F14();
      v28 = sub_1B16B7D48();
      *(_QWORD *)(v13 - 264) = v26;
      if (v28 < v27)
      {
        *(_QWORD *)(v13 - 288) = v24;
        v29 = sub_1B16B7D48();
        *(_QWORD *)(v13 - 280) = v25;
        Blueprint.subscript.getter(v29, v26);
      }
      OUTLINED_FUNCTION_50_11(v25);
    }
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B154B1D8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v5, v6);
  sub_1B16B7D0C();
  v7 = a3;
  v8 = a1;
  BlueprintTableViewDataSource.tableView(_:commit:forRowAt:)();
}

uint64_t sub_1B154B264()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
}

void BlueprintTableViewDataSource.tableView(_:canMoveRowAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_61_10(v2, v3);
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B154B378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15_0();
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  *(_QWORD *)(v2 - 184) = OUTLINED_FUNCTION_43_12(v5, v6, v7, v8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v9, v10);
  BlueprintProviderType.blueprint.getter(v1, v0);
  Blueprint.subscript.getter();
}

void sub_1B154B3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
  if ((sub_1B154B4BC(*(void **)(v6 - 168)) & 1) != 0)
  {
    v7 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 200) + 16))(*(_QWORD *)(v6 - 192), v4, v0);
    OUTLINED_FUNCTION_17_2(v7, (unint64_t *)&unk_1EEF33220);
    if ((OUTLINED_FUNCTION_14_24() & 1) != 0)
    {
      OUTLINED_FUNCTION_6_58();
      OUTLINED_FUNCTION_106_0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      OUTLINED_FUNCTION_85();
    }
    else
    {
      OUTLINED_FUNCTION_35_16();
      v8 = OUTLINED_FUNCTION_106_0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      OUTLINED_FUNCTION_52_12(v8, (unint64_t *)&unk_1EEF32520, (unint64_t *)&unk_1EEF33220, (uint64_t)&protocol descriptor for Movable);
    }
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 8))(v4, *(_QWORD *)(v6 - 184));
  }
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B154B4BC(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  BOOL v7;

  v2 = objc_msgSend(a1, sel_window);
  if (v2
    && (v3 = v2, v4 = objc_msgSend(v2, sel_traitCollection), v3, v4)
    && ((v5 = objc_msgSend(v4, sel_verticalSizeClass),
         v6 = objc_msgSend(v4, sel_horizontalSizeClass),
         v4,
         v5 == (id)2)
      ? (v7 = v6 == (id)2)
      : (v7 = 0),
        v7))
  {
    return 1;
  }
  else
  {
    return (uint64_t)objc_msgSend(a1, sel_isEditing);
  }
}

void sub_1B154B56C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B154B578(a1, a2, a3, a4, (void (*)(id, char *))BlueprintTableViewDataSource.tableView(_:canMoveRowAt:));
}

void sub_1B154B578(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;

  v8 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B16B7D0C();
  v12 = a3;
  v13 = a1;
  a5(v12, v11);
  JUMPOUT(0x1B154B600);
}

void BlueprintTableViewDataSource.tableView(_:moveRowAt:to:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_27_24();
  OUTLINED_FUNCTION_27_24();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B154B6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = type metadata accessor for BlueprintItem(0, v2, v0, v6);
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 - 128) = v7;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v8, v9);
  *(_QWORD *)(v3 - 160) = v1;
  OUTLINED_FUNCTION_24_20();
  Blueprint.subscript.getter();
}

void sub_1B154B76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  OUTLINED_FUNCTION_58_10();
  OUTLINED_FUNCTION_108_0();
  v5 = v0 + v4;
  OUTLINED_FUNCTION_13();
  v6 = MEMORY[0x1B5E1F2F8](v5);
  if (v6)
  {
    v7 = (void *)v6;
    OUTLINED_FUNCTION_24_20();
    (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 - 160) + 136) + 168))(v1, v2, *(_QWORD *)(v3 - 152), *(_QWORD *)(*(_QWORD *)(v3 - 160) + 104));

    OUTLINED_FUNCTION_58_10();
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 136) + 8))(v2, *(_QWORD *)(v3 - 128));
  OUTLINED_FUNCTION_47();
}

void sub_1B154B7F4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  v5 = sub_1B16B7D60();
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  MEMORY[0x1E0C80A78](v7, v8);
  sub_1B16B7D0C();
  sub_1B16B7D0C();
  v9 = a3;
  v10 = a1;
  BlueprintTableViewDataSource.tableView(_:moveRowAt:to:)();
}

uint64_t sub_1B154B8A4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v0);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v4, v0);
}

id BlueprintTableViewDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BlueprintTableViewDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B154B930()
{
  BlueprintTableViewDataSource.init()();
}

id BlueprintTableViewDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B154B970(_QWORD *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)(*MEMORY[0x1E0DEEDD8] & *a1);
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_1_26();
  swift_release();
  OUTLINED_FUNCTION_1_26();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v3 + 168), v2[10]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v4 + 176), v2[11]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v5 + 184), v2[12]);
  OUTLINED_FUNCTION_1_26();
  return swift_release();
}

void (*sub_1B154BA24(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  BlueprintTableViewDataSource.dragReorderDelegate.modify();
  v2[4] = v3;
  return sub_1B13C6AF0;
}

double sub_1B154BA68@<D0>(_OWORD *a1@<X8>)
{
  return BlueprintTableViewDataSource.diffableReorderDataSource.getter(a1);
}

Swift::Void __swiftcall BlueprintTableViewDataSource.traitCollectionDidChange(_:traitCollection:)(UITraitCollection_optional _, UITraitCollection traitCollection)
{
  char *v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD v11[2];

  v3 = *(_QWORD *)&_.is_nil;
  isa = _.value.super.isa;
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v2) + 0x60);
  MEMORY[0x1E0C80A78](_.value.super.isa, *(_QWORD *)&_.is_nil);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v11 - v8, &v2[*(_QWORD *)(v6 + 184)], v5);
  sub_1B13D19B8(0, &qword_1ED181910);
  if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
  {
    v9 = v11[1];
    ObjectType = swift_getObjectType();
    (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(v9 + 8))(isa, v3, ObjectType, v9);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B154BB80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BlueprintViewAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B154BBC4()
{
  return 64;
}

__n128 sub_1B154BBD0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t method lookup function for BlueprintTableViewDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintTableViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

void sub_1B154BBF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EEF33288[0])
  {
    v2 = type metadata accessor for HiddenView();
    v4 = type metadata accessor for TableViewCell(a1, v2, (uint64_t)&protocol witness table for HiddenView, v3);
    if (!v5)
      atomic_store(v4, qword_1EEF33288);
  }
}

void FetchDeduper.__allocating_init()()
{
  OUTLINED_FUNCTION_6_1();
  swift_allocObject();
  FetchDeduper.init()();
  OUTLINED_FUNCTION_0_0();
}

void FetchDeduper.dequeue(key:queueBlock:)(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t);
  uint64_t v18;

  v6 = v4;
  sub_1B16B95D8();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11, v12);
  v13 = OUTLINED_FUNCTION_1_79();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  OUTLINED_FUNCTION_0_1();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v6;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  OUTLINED_FUNCTION_11_34((uint64_t)sub_1B13F00E4);
  OUTLINED_FUNCTION_9_47();
  sub_1B16B9740();
  swift_retain();
  sub_1B16B95F0();
  v17 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B141102C(0, (unint64_t *)&qword_1ED183708, v17);
  sub_1B13FF560((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v17);
  sub_1B16BA448();
  v18 = OUTLINED_FUNCTION_10_41();
  MEMORY[0x1B5E1DA80](v18);
  _Block_release(a3);
  OUTLINED_FUNCTION_3_56();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v5, v13);
  swift_release();
  OUTLINED_FUNCTION_47();
}

void FetchDeduper.queue(key:completion:resultBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)();
  _QWORD *v42;

  v7 = v5;
  v31 = a4;
  v32 = a5;
  v30 = a1;
  v10 = *v5;
  v33 = sub_1B16B95D8();
  v37 = *(_QWORD *)(v33 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11, v12);
  v13 = OUTLINED_FUNCTION_1_79();
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_0_1();
  v16 = *(_QWORD *)(v10 + 80);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v19, v20);
  v21 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v7[3];
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v21, a3, v16);
  v22 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v23 = (char *)((v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v16;
  *(_QWORD *)(v24 + 24) = v7;
  *(_QWORD *)(v24 + 32) = v30;
  *(_QWORD *)(v24 + 40) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v24 + v22, v21, v16);
  v25 = &v23[v24];
  v26 = v32;
  *(_QWORD *)v25 = v31;
  *((_QWORD *)v25 + 1) = v26;
  v41 = sub_1B154CBA0;
  v42 = (_QWORD *)v24;
  v39 = MEMORY[0x1E0C809B0];
  v40 = 1107296256;
  OUTLINED_FUNCTION_11_34((uint64_t)sub_1B13F00E4);
  OUTLINED_FUNCTION_9_47();
  sub_1B16B9740();
  swift_retain();
  sub_1B16B95F0();
  v38 = MEMORY[0x1E0DEE9D8];
  v27 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B141102C(0, (unint64_t *)&qword_1ED183708, v27);
  sub_1B13FF560((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v27);
  sub_1B16BA448();
  v28 = OUTLINED_FUNCTION_10_41();
  MEMORY[0x1B5E1DA80](v28);
  _Block_release(v23);
  OUTLINED_FUNCTION_3_56();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v6, v36);
  swift_release();
  OUTLINED_FUNCTION_47();
}

BOOL static FetchDeduper.Result.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FetchDeduper.Result.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t FetchDeduper.Result.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t sub_1B154C0F8()
{
  sub_1B16BAA48();
  FetchDeduper.Result.hash(into:)();
  return sub_1B16BAA78();
}

_QWORD *FetchDeduper.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1B16BA0D0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v1, v2);
  sub_1B16BA0B8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_0_1();
  sub_1B16B9620();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6, v7);
  sub_1B16B9C68();
  v0[2] = sub_1B16B96D4();
  sub_1B1404978();
  sub_1B16B9614();
  sub_1B13B13B4(&qword_1ED183808, v3, MEMORY[0x1E0DEF828]);
  sub_1B141102C(0, (unint64_t *)&qword_1ED183730, (void (*)(uint64_t))v3);
  sub_1B13FF560(&qword_1ED183738, (unint64_t *)&qword_1ED183730, (void (*)(uint64_t))v3);
  sub_1B16BA448();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_29_5();
  v0[3] = sub_1B16BA100();
  sub_1B16B9614();
  sub_1B16BA0AC();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_29_5();
  v0[4] = sub_1B16BA100();
  return v0;
}

uint64_t sub_1B154C338(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  void (*v39)(uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  void *v57;
  uint64_t (*v58)();
  _QWORD *v59;

  v45 = a5;
  v46 = a6;
  v43 = a4;
  v9 = *a1;
  v10 = sub_1B16B95D8();
  v11 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  v49 = v11;
  MEMORY[0x1E0C80A78](v10, v12);
  v44 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1B16B9620();
  v47 = *(_QWORD *)(v50 - 8);
  v15 = MEMORY[0x1E0C80A78](v50, v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v9 + 80);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v15, v20);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v23 = a1[2];
  v52 = a2;
  v53 = a3;
  v24 = sub_1B16B9C68();
  sub_1B16B9740();
  MEMORY[0x1B5E1D12C](v51, &v52, v23, MEMORY[0x1E0DEA968], v24, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v25 = v51[0];
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v25)
  {
    v26 = v43;
    swift_beginAccess();
    v51[0] = a2;
    v51[1] = a3;
    sub_1B16B9740();
    sub_1B16B9788();
    v27 = (void (*)(uint64_t *, _QWORD))sub_1B16B9794();
    if (*v28)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v26, v18);
      sub_1B16B9C2C();
      v27(&aBlock, 0);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27(&aBlock, 0);
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    v35 = v45;
    v36 = v46;
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = v18;
    v37[3] = v35;
    v37[4] = v36;
    v58 = sub_1B154CD2C;
    v59 = v37;
    aBlock = MEMORY[0x1E0C809B0];
    v55 = 1107296256;
    v34 = &block_descriptor_18_0;
  }
  else
  {
    sub_1B163C4BC(v18, v18);
    swift_allocObject();
    sub_1B16B9740();
    v29 = sub_1B16B9BB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v30, v43, v18);
    v51[0] = sub_1B14EB3D8(v29);
    v52 = a2;
    v53 = a3;
    swift_beginAccess();
    sub_1B16B9788();
    sub_1B16B97AC();
    swift_endAccess();
    v31 = (_QWORD *)swift_allocObject();
    v32 = v45;
    v33 = v46;
    v31[2] = v18;
    v31[3] = v32;
    v31[4] = v33;
    v58 = sub_1B154CD08;
    v59 = v31;
    aBlock = MEMORY[0x1E0C809B0];
    v55 = 1107296256;
    v34 = &block_descriptor_12;
  }
  v56 = sub_1B13F00E4;
  v57 = v34;
  v38 = _Block_copy(&aBlock);
  swift_retain();
  sub_1B16B95F0();
  v52 = MEMORY[0x1E0DEE9D8];
  v39 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B141102C(0, (unint64_t *)&qword_1ED183708, v39);
  sub_1B13FF560((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v39);
  v40 = v44;
  v41 = v48;
  sub_1B16BA448();
  MEMORY[0x1B5E1DA80](0, v17, v40, v38);
  _Block_release(v38);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v50);
  return swift_release();
}

uint64_t sub_1B154C7E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v27 = a4;
  v28 = a5;
  v8 = *a1;
  v9 = sub_1B16B95D8();
  v31 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B16B9620();
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v17 = a1[2];
  v33 = a2;
  v34 = a3;
  v18 = *(_QWORD *)(v8 + 80);
  v19 = sub_1B16B9C68();
  sub_1B16B9740();
  MEMORY[0x1B5E1D12C](&v35, &v33, v17, MEMORY[0x1E0DEA968], v19, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v20 = v35;
  swift_endAccess();
  if (!v20)
    v20 = sub_1B16B9BD8();
  v33 = a2;
  v34 = a3;
  swift_beginAccess();
  sub_1B16B9788();
  sub_1B16B9710();
  swift_endAccess();
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)swift_allocObject();
  v22 = v27;
  v23 = v28;
  v21[2] = v18;
  v21[3] = v22;
  v21[4] = v23;
  v21[5] = v20;
  aBlock[4] = sub_1B154CD90;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = &block_descriptor_24;
  v24 = _Block_copy(aBlock);
  swift_retain();
  sub_1B16B95F0();
  v33 = MEMORY[0x1E0DEE9D8];
  v25 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B141102C(0, (unint64_t *)&qword_1ED183708, v25);
  sub_1B13FF560((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v25);
  sub_1B16BA448();
  MEMORY[0x1B5E1DA80](0, v16, v12, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v30);
  return swift_release();
}

uint64_t sub_1B154CACC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B154CB00()
{
  uint64_t v0;

  return sub_1B154C7E0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1B154CB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B154CBA0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1B154C338(*(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + v2, *v3, v3[1]);
}

uint64_t FetchDeduper.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t FetchDeduper.__deallocating_deinit()
{
  FetchDeduper.deinit();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocClassInstance();
}

void sub_1B154CC1C()
{
  JUMPOUT(0x1B5E1F0E8);
}

uint64_t method lookup function for FetchDeduper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FetchDeduper.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B154CC40(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B154CC8C + 4 * byte_1B16CFF7D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B154CCC0 + 4 * byte_1B16CFF78[v4]))();
}

uint64_t sub_1B154CCC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B154CCC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B154CCD0);
  return result;
}

uint64_t sub_1B154CCDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B154CCE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B154CCE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B154CCF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for FetchDeduper.Result(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchDeduper.Result);
}

uint64_t sub_1B154CD08()
{
  return sub_1B154CD34(1);
}

uint64_t sub_1B154CD10()
{
  swift_release();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocObject();
}

uint64_t sub_1B154CD2C()
{
  return sub_1B154CD34(0);
}

uint64_t sub_1B154CD34(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 24);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1B154CD64()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B154CD90()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 24))(*(_QWORD *)(v0 + 40));
}

void UICollectionView.reload(apply:animated:completion:)(void (*a1)(void), uint64_t a2, char a3)
{
  void *v3;
  id v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t updated;
  id v11;

  if (objc_msgSend(v3, sel_dataSource))
  {
    v6 = v3;
    v7 = sub_1B13F85DC(v6);
    v9 = v8;
    updated = TSAccessibilityBlockPostingOfUpdateElementVisualsNotifications();
    ((void (*)(uint64_t))a1)(updated);
    v11 = v6;
    sub_1B13C4AEC((uint64_t)v7);
    sub_1B15DC44C(a3 & 1, (int)v11, v11, (void (*)(_QWORD))v7, v9);
    OUTLINED_FUNCTION_21_23();
    sub_1B16B80D8();
    sub_1B13B9100((uint64_t)v7);
    swift_unknownObjectRelease();
  }
  else
  {
    a1();
    OUTLINED_FUNCTION_21_23();
    OUTLINED_FUNCTION_47();
  }
}

void sub_1B154CECC(void *a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void (*v41)(_QWORD);
  id v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, unint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v43 = a3;
  v5 = OUTLINED_FUNCTION_3_12();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = sub_1B16B7CB8();
  v46 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v44 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v45 = (char *)&v40 - v17;
  v18 = OUTLINED_FUNCTION_2_0(v16, sel_collectionViewLayout);
  objc_msgSend(v18, sel_invalidateLayout);

  v19 = objc_msgSend(a1, sel_reloadData);
  v42 = a1;
  v20 = OUTLINED_FUNCTION_2_0((uint64_t)v19, sel_indexPathsForVisibleItems);
  v21 = sub_1B16B9B54();

  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v41 = a2;
    v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1B1490D88(0, v22, 0);
    v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v40 = v21;
    v24 = v21 + v23;
    v25 = *(_QWORD *)(v6 + 72);
    v48 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
    v49 = v25;
    v26 = v6;
    do
    {
      v48(v10, v24, v5);
      v27 = sub_1B16B7D48();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
      v28 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B1490D88(0, v28[2] + 1, 1);
        v28 = v51;
      }
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_1B1490D88(v29 > 1, v30 + 1, 1);
        v28 = v51;
      }
      v28[2] = v30 + 1;
      v28[v30 + 4] = v27;
      v24 += v49;
      --v22;
      v6 = v26;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a2 = v41;
  }
  else
  {
    OUTLINED_FUNCTION_52();
    v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1B13B13B4(&qword_1ED17E108, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13E8]);
  v31 = v44;
  v32 = v47;
  sub_1B16BA43C();
  v33 = v28[2];
  if (v33)
  {
    v34 = v28 + 4;
    do
    {
      v35 = *v34++;
      v50 = v35;
      sub_1B16BA424();
      --v33;
    }
    while (v33);
  }
  swift_bridgeObjectRelease();
  v37 = v45;
  v36 = v46;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v45, v31, v32);
  v38 = sub_1B16B7C88();
  if ((v38 & 1) == 0)
  {
    v39 = (void *)sub_1B16B7C40();
    objc_msgSend(v42, sel_reloadSections_, v39);

  }
  if (a2)
    a2(v38);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v32);
  OUTLINED_FUNCTION_47();
}

uint64_t UICollectionView.update(with:apply:response:animated:beforeCompletion:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  void *v9;
  void *v10;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void);
  __int128 v28[2];

  v10 = v9;
  v18 = objc_msgSend(v10, sel_dataSource);
  if (v18)
  {
    v19 = v18;
    v26 = a8;
    v20 = UICollectionView.transition.getter();
    if (v20)
    {
      if (BlueprintCollectionViewLayoutTransition.isTransitioning.getter(v20))
      {
        sub_1B154F5F8();
        v21 = (void *)swift_allocError();
        *(_QWORD *)v22 = 0xD00000000000002ELL;
        *(_QWORD *)(v22 + 8) = 0x80000001B16ECF00;
        *(_BYTE *)(v22 + 16) = 1;
        a8();

        OUTLINED_FUNCTION_34_0();
        return swift_release();
      }
      swift_release();
    }
    v24 = OUTLINED_FUNCTION_25();
    swift_unknownObjectWeakInit();
    sub_1B13B4DC0(a1, (uint64_t)v28);
    v25 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v25 + 16) = v24;
    *(_QWORD *)(v25 + 24) = a2;
    *(_QWORD *)(v25 + 32) = a3;
    *(_QWORD *)(v25 + 40) = v26;
    *(_QWORD *)(v25 + 48) = a9;
    *(_QWORD *)(v25 + 56) = a4;
    *(_BYTE *)(v25 + 64) = a5 & 1;
    sub_1B13C06D0(v28, v25 + 72);
    *(_QWORD *)(v25 + 112) = a6;
    *(_QWORD *)(v25 + 120) = a7;
    *(_QWORD *)(v25 + 128) = v19;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B13F838C(sub_1B154F5B8, v25);
    swift_release();
    swift_release();
    return OUTLINED_FUNCTION_34_0();
  }
  else
  {
    a2();
    return ((uint64_t (*)(_QWORD))a8)(0);
  }
}

uint64_t UICollectionView.transition.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v1 = objc_msgSend(v0, sel_collectionViewLayout);
  swift_getObjectType();
  v3 = dynamic_cast_existential_1_conditional((uint64_t)v1);
  if (v3)
  {
    v4 = v2;
    ObjectType = swift_getObjectType();
    v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  }

  return v3;
}

void sub_1B154D490(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v24[11];
  char v25;
  uint64_t v26;
  int v27;
  char v28;

  v17 = a1 + 16;
  swift_beginAccess();
  v18 = MEMORY[0x1B5E1F2F8](v17);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = UICollectionView.transition.getter();
    if (v20)
    {
      if (BlueprintCollectionViewLayoutTransition.isTransitioning.getter(v20))
      {
        sub_1B154F5F8();
        v22 = (void *)swift_allocError();
        *(_QWORD *)v23 = 0xD00000000000003ELL;
        *(_QWORD *)(v23 + 8) = 0x80000001B16ECF30;
        *(_BYTE *)(v23 + 16) = 1;
        a4();

        swift_release();
        return;
      }
      v20 = swift_release();
    }
    v26 = a5;
    v27 = a7;
    if (a6)
    {
      v28 = 0;
      BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&v28);
    }
    MEMORY[0x1E0C80A78](v20, v21);
    v24[2] = v19;
    v24[3] = a2;
    v24[4] = a3;
    v24[5] = a8;
    v24[6] = a9;
    v24[7] = a10;
    v24[8] = a6;
    v24[9] = a4;
    v24[10] = v26;
    v25 = v27 & 1;
    sub_1B13F8528(v27 & 1, sub_1B154FB68, (uint64_t)v24);
    if (a6)
    {
      v28 = 1;
      BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&v28);
    }

  }
  else
  {
    a2();
    ((void (*)(_QWORD))a4)(0);
  }
}

uint64_t sub_1B154D648(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t result;
  uint64_t aBlock;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  __int128 v32[2];

  sub_1B13B4DC0(a4, (uint64_t)v32);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  sub_1B13C06D0(v32, v17 + 40);
  *(_QWORD *)(v17 + 80) = a5;
  *(_QWORD *)(v17 + 88) = a6;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1B154FBD8;
  *(_QWORD *)(v18 + 24) = v17;
  v30 = sub_1B149DB30;
  v31 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = sub_1B140AA14;
  v29 = &block_descriptor_28_0;
  v19 = _Block_copy(&aBlock);
  v20 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B13B4DC0(a4, (uint64_t)v32);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = a7;
  *(_QWORD *)(v22 + 32) = a8;
  *(_QWORD *)(v22 + 40) = a9;
  sub_1B13C06D0(v32, v22 + 48);
  *(_BYTE *)(v22 + 88) = a10;
  v30 = sub_1B154FC24;
  v31 = v22;
  aBlock = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = sub_1B13F8544;
  v29 = &block_descriptor_35;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_performBatchUpdates_completion_, v19, v23);
  _Block_release(v23);
  _Block_release(v19);
  swift_release();
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v17 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B154D8B0(void *a1, void (*a2)(uint64_t), uint64_t a3, _QWORD *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(uint64_t, uint64_t);
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;

  v79 = a6;
  v80 = a5;
  sub_1B140A844(0);
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B13ECA5C(0, qword_1ED183090, v13);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v76 - v16;
  v18 = sub_1B16B7CB8();
  v19 = *(_QWORD *)(v18 - 8);
  v21 = MEMORY[0x1E0C80A78](v18, v20);
  v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v21);
  v24 = a4[3];
  v25 = a4[4];
  v26 = __swift_project_boxed_opaque_existential_1(a4, v24);
  v27 = *(void (**)(uint64_t, uint64_t))(v25 + 32);
  v76 = v26;
  v81 = (uint64_t)v27;
  v27(v24, v25);
  v28 = sub_1B16B7C88();
  v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v30 = v18;
  v31 = v29;
  v29(v23, v30);
  if ((v28 & 1) == 0)
  {
    ((void (*)(uint64_t, uint64_t))v81)(v24, v25);
    v32 = (void *)sub_1B16B7C40();
    v31(v23, v30);
    objc_msgSend(a1, sel_reloadSections_, v32);

  }
  v33 = a4[3];
  v34 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v33);
  v35 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 72))(v33, v34) + 16);
  swift_bridgeObjectRelease();
  if (v35)
  {
    v36 = a4[3];
    v37 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v36);
    (*(void (**)(uint64_t, uint64_t))(v37 + 72))(v36, v37);
    sub_1B16B7D60();
    v38 = (void *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_reloadItemsAtIndexPaths_, v38);

  }
  v39 = a4[3];
  v40 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v39);
  (*(void (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
  LOBYTE(v39) = sub_1B16B7C88();
  v31(v23, v30);
  if ((v39 & 1) == 0)
  {
    v41 = a4[3];
    v42 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v41);
    (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
    v43 = (void *)sub_1B16B7C40();
    v31(v23, v30);
    objc_msgSend(a1, sel_deleteSections_, v43);

  }
  v44 = a4[3];
  v45 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v44);
  (*(void (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
  LOBYTE(v44) = sub_1B16B7C88();
  v31(v23, v30);
  if ((v44 & 1) == 0)
  {
    v46 = a4[3];
    v47 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v46);
    (*(void (**)(uint64_t, uint64_t))(v47 + 24))(v46, v47);
    v48 = (void *)sub_1B16B7C40();
    v31(v23, v30);
    objc_msgSend(a1, sel_insertSections_, v48);

  }
  v49 = a4[3];
  v50 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v49);
  v51 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v50 + 56))(v49, v50) + 16);
  swift_bridgeObjectRelease();
  if (v51)
  {
    v52 = a4[3];
    v53 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v52);
    (*(void (**)(uint64_t, uint64_t))(v53 + 56))(v52, v53);
    sub_1B16B7D60();
    v54 = (void *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_deleteItemsAtIndexPaths_, v54);

  }
  v55 = a4[3];
  v56 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v55);
  v57 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v56 + 64))(v55, v56) + 16);
  swift_bridgeObjectRelease();
  if (v57)
  {
    v58 = a4[3];
    v59 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v58);
    (*(void (**)(uint64_t, uint64_t))(v59 + 64))(v58, v59);
    sub_1B16B7D60();
    v60 = (void *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_insertItemsAtIndexPaths_, v60);

  }
  v61 = a4[3];
  v62 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v61);
  v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 48))(v61, v62);
  v64 = *(_QWORD *)(v63 + 16);
  if (v64)
  {
    v65 = (_QWORD *)(v63 + 40);
    do
    {
      objc_msgSend(a1, sel_moveSection_toSection_, *(v65 - 1), *v65);
      v65 += 2;
      --v64;
    }
    while (v64);
  }
  swift_bridgeObjectRelease();
  v66 = a4[3];
  v67 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v66);
  v81 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 80))(v66, v67);
  v68 = *(_QWORD *)(v81 + 16);
  v69 = v78;
  if (v68)
  {
    v70 = v81 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
    v71 = *(_QWORD *)(v77 + 72);
    while (1)
    {
      sub_1B154FD14(v70, (uint64_t)v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v69);
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v69) == 1)
        break;
      sub_1B14088A0((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1B140A844);
      v72 = (void *)sub_1B16B7CDC();
      v73 = (void *)sub_1B16B7CDC();
      objc_msgSend(a1, sel_moveItemAtIndexPath_toIndexPath_, v72, v73);

      sub_1B154FD58((uint64_t)v12);
      v70 += v71;
      if (!--v68)
        goto LABEL_20;
    }
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v69);
  }
  v74 = swift_bridgeObjectRelease();
  return v80(v74);
}

void sub_1B154DEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, int a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)();
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _BYTE v46[4];
  int v47;
  uint64_t v48;
  __int128 v49[2];
  uint64_t aBlock;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v13 = sub_1B16B7CB8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = &v46[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v18 = MEMORY[0x1B5E1F2F8](a2 + 16);
  if (v18)
  {
    v19 = (void *)v18;
    v47 = a7;
    v48 = a4;
    v21 = a6[3];
    v20 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v21);
    (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v21, v20);
    v22 = sub_1B16B7C88();
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
    v23 = MEMORY[0x1E0C809B0];
    if ((v22 & 1) != 0)
    {
      v24 = 0;
    }
    else
    {
      v28 = objc_opt_self();
      sub_1B13B4DC0((uint64_t)a6, (uint64_t)v49);
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = v19;
      sub_1B13C06D0(v49, v29 + 24);
      v30 = swift_allocObject();
      v24 = sub_1B154FC5C;
      *(_QWORD *)(v30 + 16) = sub_1B154FC5C;
      *(_QWORD *)(v30 + 24) = v29;
      v54 = sub_1B149DB30;
      v55 = v30;
      aBlock = v23;
      v51 = 1107296256;
      v52 = sub_1B140AA14;
      v53 = &block_descriptor_51;
      v31 = _Block_copy(&aBlock);
      v32 = v19;
      swift_retain();
      swift_release();
      objc_msgSend((id)v28, sel_performWithoutAnimation_, v31);
      _Block_release(v31);
      LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v28 & 1) != 0)
      {
        __break(1u);
        return;
      }
    }
    v33 = a6[3];
    v34 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v33);
    v35 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v33, v34) + 16);
    swift_bridgeObjectRelease();
    if (v35)
    {
      v36 = objc_msgSend(v19, sel_dataSource);
      if (v36)
      {
        v38 = MEMORY[0x1E0C80A78](v36, v37);
        *(_QWORD *)&v46[-48] = v19;
        *(_QWORD *)&v46[-40] = a6;
        v39 = v48;
        *(_QWORD *)&v46[-32] = a3;
        *(_QWORD *)&v46[-24] = v39;
        *(_QWORD *)&v46[-16] = a5;
        *(_QWORD *)&v46[-8] = v38;
        sub_1B13F8528(v47 & 1, sub_1B154FC6C, (uint64_t)&v46[-64]);
        swift_unknownObjectRelease();

        sub_1B13B9100((uint64_t)v24);
        return;
      }
      v40 = (uint64_t)v24;
      if (a3)
      {
        LOBYTE(aBlock) = 2;
        BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&aBlock);
      }
      v41 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = v48;
      *(_QWORD *)(v44 + 24) = a5;
      v54 = sub_1B154FE18;
      v55 = v44;
      aBlock = MEMORY[0x1E0C809B0];
      v51 = 1107296256;
      v52 = sub_1B13F00E4;
      v53 = &block_descriptor_57_0;
      v45 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v41, sel_ts_installCACommitCompletionBlock_, v45);
      _Block_release(v45);

    }
    else
    {
      v40 = (uint64_t)v24;
      if (a3)
      {
        LOBYTE(aBlock) = 2;
        BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&aBlock);
      }
      v41 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = v48;
      *(_QWORD *)(v42 + 24) = a5;
      v54 = sub_1B154FE18;
      v55 = v42;
      aBlock = MEMORY[0x1E0C809B0];
      v51 = 1107296256;
      v52 = sub_1B13F00E4;
      v53 = &block_descriptor_63_1;
      v43 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v41, sel_ts_installCACommitCompletionBlock_, v43);

      _Block_release(v43);
    }

    sub_1B13B9100(v40);
  }
  else
  {
    if (a3)
    {
      LOBYTE(aBlock) = 2;
      BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&aBlock);
    }
    v25 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a4;
    *(_QWORD *)(v26 + 24) = a5;
    v54 = sub_1B154FE18;
    v55 = v26;
    aBlock = MEMORY[0x1E0C809B0];
    v51 = 1107296256;
    v52 = sub_1B13F00E4;
    v53 = &block_descriptor_41_0;
    v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v25, sel_ts_installCACommitCompletionBlock_, v27);
    _Block_release(v27);

  }
}

void sub_1B154E420(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  uint64_t v24;
  id v25;

  v4 = sub_1B16B7CB8();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v7, v10);
  v13 = (char *)&v24 - v12;
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (char *)&v24 - v15;
  if (objc_msgSend(a1, sel_dataSource))
  {
    v17 = a2[3];
    v18 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v17);
    v19 = *(void (**)(uint64_t, uint64_t))(v18 + 40);
    v25 = a1;
    v19(v17, v18);
    v20 = a2[3];
    v21 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v20);
    (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
    sub_1B146B150((uint64_t)v9);
    v22 = *(void (**)(char *, uint64_t))(v5 + 8);
    v22(v9, v4);
    v22(v13, v4);
    v23 = (void *)sub_1B16B7C40();
    v22(v16, v4);
    objc_msgSend(v25, sel_reloadSections_, v23);
    swift_unknownObjectRelease();

  }
}

uint64_t sub_1B154E5B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD *v16;
  void *v17;
  uint64_t result;
  uint64_t aBlock;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  __int128 v25[2];

  sub_1B13B4DC0(a2, (uint64_t)v25);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1B13C06D0(v25, v11 + 24);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1B154FCA8;
  *(_QWORD *)(v12 + 24) = v11;
  v23 = sub_1B149DB30;
  v24 = (_QWORD *)v12;
  v13 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v20 = 1107296256;
  v21 = sub_1B140AA14;
  v22 = &block_descriptor_73_0;
  v14 = _Block_copy(&aBlock);
  v15 = a1;
  swift_retain();
  swift_release();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v23 = sub_1B154FCE4;
  v24 = v16;
  aBlock = v13;
  v20 = 1107296256;
  v21 = sub_1B13F8544;
  v22 = &block_descriptor_79;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v15, sel_performBatchUpdates_completion_, v14, v17);
  _Block_release(v17);
  _Block_release(v14);
  swift_release();
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1B154E7A0(void *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 88))(v3, v4);
  sub_1B16B7D60();
  v5 = (id)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_reloadItemsAtIndexPaths_, v5);

}

void sub_1B154E82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  if (a2)
  {
    LOBYTE(v9[0]) = 2;
    BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)v9);
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  v9[4] = sub_1B154FCF0;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1B13F00E4;
  v9[3] = &block_descriptor_85_0;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_ts_installCACommitCompletionBlock_, v8);
  _Block_release(v8);

}

void __swiftcall UICollectionView.sectionFrame(at:)(__C::CGRect_optional *__return_ptr retstr, Swift::Int at)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  CGSize v8;
  unint64_t v9;
  char v10;
  CGPoint *v11;
  CGPoint v12;
  CGSize v13;
  CGSize v14;
  CGPoint v15;
  _BYTE v16[1112];
  uint64_t v17;

  v5 = OUTLINED_FUNCTION_2_0(at, sel_collectionViewLayout);
  OUTLINED_FUNCTION_14_25();
  v6 = OUTLINED_FUNCTION_23_24();
  if (v6)
  {
    sub_1B154F1B8(v16);
    v7 = v17;
    v8 = (CGSize)0;
    v15 = (CGPoint)0;
    if (*(_QWORD *)(v17 + 16))
    {
      v9 = sub_1B1425D68(at);
      v8 = (CGSize)0;
      if ((v10 & 1) != 0)
      {
        v11 = (CGPoint *)(*(_QWORD *)(v7 + 56) + 32 * v9);
        v15 = *v11;
        v8 = (CGSize)v11[1];
      }
    }
    v14 = v8;

    sub_1B1448694((uint64_t)v16);
    v13 = v14;
    v12 = v15;
  }
  else
  {

    v12 = (CGPoint)0;
    v13 = (CGSize)0;
  }
  retstr->value.origin = v12;
  retstr->value.size = v13;
  retstr->is_nil = v6 == 0;
  OUTLINED_FUNCTION_67();
}

Swift::Int __swiftcall UICollectionView.numberOfSections()()
{
  void *v0;

  return (Swift::Int)objc_msgSend(v0, sel_numberOfSections);
}

Swift::Int __swiftcall UICollectionView.numberOfVisualItems(in:)(Swift::Int in)
{
  void *v1;

  return (Swift::Int)objc_msgSend(v1, sel_numberOfItemsInSection_, in);
}

void UICollectionView.scroll(to:animated:)(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v6;
  char v7;
  void *v8;
  uint64_t v9;
  id v10;
  _BYTE __src[1176];
  _BYTE __dst[1176];

  v4 = v2;
  if ((sub_1B154EB50(a1) & 1) != 0)
  {
    v6 = objc_msgSend(v2, sel_collectionViewLayout);
    OUTLINED_FUNCTION_14_25();
    if (OUTLINED_FUNCTION_23_24())
    {
      sub_1B16B82DC();
      memcpy(__dst, __src, sizeof(__dst));
      sub_1B1448694((uint64_t)__dst);
      v7 = __dst[16];
      v8 = (void *)sub_1B16B7CDC();
      if ((v7 & 1) != 0)
        v9 = 2;
      else
        v9 = 16;
      objc_msgSend(v4, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v8, v9, a2 & 1);

    }
    else
    {

      v10 = (id)sub_1B16B7CDC();
      objc_msgSend(v2, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v10, 2, a2 & 1);

    }
  }
}

uint64_t sub_1B154EB50(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1B16B7D60();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v10);
  v12 = (char *)&v22 - v11;
  v13 = sub_1B16B7D48();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v12, a1, v4);
  if (v13 < 0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  }
  else
  {
    v15 = sub_1B16B7D48();
    v16 = objc_msgSend(v2, sel_numberOfSections);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v12, v4);
    if (v15 < (uint64_t)v16)
    {
      v18 = sub_1B16B7D3C();
      v14(v9, a1, v4);
      if (v18 < 0)
      {
        v17(v9, v4);
      }
      else
      {
        v19 = sub_1B16B7D3C();
        v20 = objc_msgSend(v2, sel_numberOfItemsInSection_, sub_1B16B7D48());
        v17(v9, v4);
        if (v19 < (uint64_t)v20)
          return 1;
      }
    }
  }
  return 0;
}

void UICollectionView.snap(to:direction:animated:)(uint64_t a1, unsigned __int8 *a2, char a3)
{
  void *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = *a2;
  if ((sub_1B154EB50(a1) & 1) != 0)
  {
    v6 = sub_1B16B7CDC();
    v8 = (id)v6;
    if (v5)
      v7 = 1;
    else
      v7 = 8;
    objc_msgSend(v3, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v6, v7, a3 & 1);

  }
}

Swift::Void __swiftcall UICollectionView.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[6];

  if (animated)
  {
    objc_msgSend(v2, sel_setEditing_, _);
  }
  else
  {
    v4 = (void *)objc_opt_self();
    v5 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v5 + 16) = v2;
    *(_BYTE *)(v5 + 24) = _;
    v6 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v6 + 16) = sub_1B154F6B0;
    *(_QWORD *)(v6 + 24) = v5;
    v10[4] = sub_1B140AA30;
    v10[5] = v6;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1B140AA14;
    v10[3] = &block_descriptor_35;
    v7 = _Block_copy(v10);
    v8 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_performWithoutAnimation_, v7);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    OUTLINED_FUNCTION_107();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1B154EEC4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  return UICollectionView.update(with:apply:response:animated:beforeCompletion:completion:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1B154EED8()
{
  void *v0;

  return sub_1B13F8758(v0);
}

uint64_t sub_1B154EEE4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(v1, sel_indexPathForItemAtPoint_);
  if (v3)
  {
    v4 = v3;
    sub_1B16B7D0C();

    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = sub_1B16B7D60();
  return __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
}

uint64_t sub_1B154EF50@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  __C::CGRect_optional v4;

  UICollectionView.sectionFrame(at:)(&v4, a1);
  return sub_1B1408F9C((uint64_t)&v4, a2);
}

id sub_1B154EF94()
{
  void *v0;

  return objc_msgSend(v0, sel_isEditing);
}

id sub_1B154EFBC()
{
  void *v0;

  return objc_msgSend(v0, sel_allowsMultipleSelection);
}

id sub_1B154EFE0(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setAllowsMultipleSelection_, a1 & 1);
}

id (*sub_1B154EFF4(uint64_t a1))(void **a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_allowsMultipleSelection);
  return sub_1B154F034;
}

id sub_1B154F034(void **a1)
{
  return OUTLINED_FUNCTION_26_6(sel_setAllowsMultipleSelection_, *a1);
}

id sub_1B154F04C()
{
  void *v0;

  return objc_msgSend(v0, sel_allowsSelection);
}

id sub_1B154F070(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setAllowsSelection_, a1 & 1);
}

id (*sub_1B154F084(uint64_t a1))(void **a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_allowsSelection);
  return sub_1B154F0C4;
}

id sub_1B154F0C4(void **a1)
{
  return OUTLINED_FUNCTION_26_6(sel_setAllowsSelection_, *a1);
}

void sub_1B154F0E0(uint64_t a1, char a2)
{
  void *v2;
  id v4;

  v4 = (id)sub_1B16B7CDC();
  objc_msgSend(v2, sel_deselectItemAtIndexPath_animated_, v4, a2 & 1);

}

uint64_t sub_1B154F144@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _BYTE v4[1176];

  sub_1B14088A0((uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90), (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1B154F800);
  sub_1B14088A0((uint64_t)v4, a1, (uint64_t (*)(_QWORD))sub_1B154F800);
  return sub_1B154F860((uint64_t)v4);
}

void sub_1B154F1B8(void *a1@<X8>)
{
  _BYTE v2[1176];
  _BYTE v3[1176];
  _BYTE v4[1176];

  sub_1B154F144((uint64_t)v2);
  sub_1B14088A0((uint64_t)v2, (uint64_t)v3, (uint64_t (*)(_QWORD))sub_1B154F800);
  sub_1B14088A0((uint64_t)v3, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1B154F800);
  if (sub_1B154F848((uint64_t)v4) == 1)
    sub_1B154F244(a1);
  else
    sub_1B14088A0((uint64_t)v3, (uint64_t)a1, (uint64_t (*)(_QWORD))sub_1B154F800);
}

uint64_t sub_1B154F244@<X0>(void *a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  _BYTE __dst[1176];

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x98);
  memcpy(__dst, v3, sizeof(__dst));
  memcpy(a1, v3, 0x498uLL);
  return sub_1B1448894((uint64_t)__dst);
}

uint64_t sub_1B154F2B4(void **a1, id *a2, unint64_t a3, void **a4, void *a5)
{
  void **v5;
  id *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id *v25;
  BOOL v26;
  id *v29;
  unint64_t v30;
  void *v31;
  id *v32;
  void *v33;
  id v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  BOOL v43;
  void **v47;
  id *v48;

  v5 = a4;
  v7 = a2;
  v8 = a1;
  v9 = (char *)a2 - (char *)a1;
  v10 = a2 - a1;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v10 >= v12)
  {
    sub_1B1455714(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v13 = &v5[v12];
    if (v8 < v7 && v11 >= 8)
    {
      v29 = (id *)(a3 - 8);
      v47 = v5;
      do
      {
        v48 = v29 + 1;
        v30 = (unint64_t)v13;
        v31 = *--v13;
        v32 = v7 - 1;
        v33 = *(v7 - 1);
        v34 = v31;
        v35 = v33;
        objc_msgSend(v34, sel_frame);
        v38 = sqrt((0.0 - v36) * (0.0 - v36) + (0.0 - v37) * (0.0 - v37));
        objc_msgSend(v35, sel_frame);
        v40 = v39;
        v42 = v41;

        if (v38 <= sqrt((0.0 - v40) * (0.0 - v40) + (0.0 - v42) * (0.0 - v42)))
        {
          v43 = v48 != v7 || v29 >= v7;
          --v7;
          v13 = (void **)v30;
        }
        else
        {
          v43 = v48 != (id *)v30 || (unint64_t)v29 >= v30;
          v32 = v13;
        }
        v5 = v47;
        if (v43)
          *v29 = *v32;
        --v29;
      }
      while (v7 > v8 && v13 > v47);
    }
  }
  else
  {
    sub_1B1455714(a1, a2 - a1, a4);
    v13 = &v5[v10];
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        v15 = *v5;
        v16 = *v7;
        v17 = v15;
        objc_msgSend(v16, sel_frame);
        v20 = sqrt((0.0 - v18) * (0.0 - v18) + (0.0 - v19) * (0.0 - v19));
        objc_msgSend(v17, sel_frame);
        v22 = v21;
        v24 = v23;

        if (v20 > sqrt((0.0 - v22) * (0.0 - v22) + (0.0 - v24) * (0.0 - v24)))
          break;
        v25 = v7;
        v26 = v8 == v7++;
        if (!v26)
          goto LABEL_11;
LABEL_12:
        ++v8;
        if (v5 >= v13 || (unint64_t)v7 >= a3)
          goto LABEL_17;
      }
      v25 = v5;
      v26 = v8 == v5++;
      if (v26)
        goto LABEL_12;
LABEL_11:
      *v8 = *v25;
      goto LABEL_12;
    }
LABEL_17:
    v7 = v8;
  }
  sub_1B1455714(v5, v13 - v5, v7);

  return 1;
}

uint64_t sub_1B154F548()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B154F56C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15_25();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1B154F5B8()
{
  uint64_t v0;

  sub_1B154D490(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

unint64_t sub_1B154F5F8()
{
  unint64_t result;

  result = qword_1ED184C20;
  if (!qword_1ED184C20)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintPipelineError, &type metadata for BlueprintPipelineError);
    atomic_store(result, (unint64_t *)&qword_1ED184C20);
  }
  return result;
}

void sub_1B154F634(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED17B8F0[0])
  {
    v2 = type metadata accessor for BlueprintLayoutCollectionProvider();
    v4 = type metadata accessor for BlueprintCollectionViewLayout(a1, v2, (uint64_t)&protocol witness table for BlueprintLayoutCollectionProvider, v3);
    if (!v5)
      atomic_store(v4, qword_1ED17B8F0);
  }
}

uint64_t sub_1B154F690()
{
  OUTLINED_FUNCTION_43_0();
  return swift_deallocObject();
}

id sub_1B154F6B0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setEditing_, *(unsigned __int8 *)(v0 + 24));
}

void (*sub_1B154F6C8(void *a1))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  UITableView.blueprintViewDataSource.getter();
  if (v3)
  {
    v4 = v2;
    sub_1B169E2A0(a1);
    if (v5)
    {
      v6 = v5;
      ObjectType = swift_getObjectType();
      v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 72))(v6, ObjectType, v4);
      swift_bridgeObjectRelease();
      v9 = OUTLINED_FUNCTION_25();
      *(_QWORD *)(v9 + 24) = &protocol witness table for UITableView;
      swift_unknownObjectWeakInit();

      v10 = OUTLINED_FUNCTION_25();
      *(_QWORD *)(v10 + 24) = v4;
      swift_unknownObjectWeakInit();
      swift_unknownObjectRelease();
      v11 = (_QWORD *)OUTLINED_FUNCTION_25();
      v11[2] = v9;
      v11[3] = v10;
      v11[4] = v8;
      return sub_1B13F85D0;
    }
    swift_unknownObjectRelease();
  }

  return 0;
}

uint64_t sub_1B154F7D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B154F800()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED185FA8)
  {
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED185FA8);
  }
}

uint64_t sub_1B154F848(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1B154F860(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 224);
  sub_1B141FB7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(void **)(a1 + 168),
    *(void **)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(void **)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    SBYTE8(v8),
    v9,
    *((uint64_t *)&v9 + 1),
    *(_OWORD *)(a1 + 336));
  return a1;
}

uint64_t sub_1B154FB68()
{
  uint64_t v0;

  return sub_1B154D648(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
}

uint64_t sub_1B154FBA4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_15_25();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B154FBD8()
{
  uint64_t v0;

  return sub_1B154D8B0(*(void **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), (_QWORD *)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1B154FBF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_82();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocObject();
}

void sub_1B154FC24(uint64_t a1)
{
  uint64_t v1;

  sub_1B154DEB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 88));
}

uint64_t sub_1B154FC38()
{
  OUTLINED_FUNCTION_82();
  return swift_deallocObject();
}

void sub_1B154FC5C()
{
  uint64_t v0;

  sub_1B154E420(*(void **)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1B154FC6C()
{
  uint64_t v0;

  return sub_1B154E5B0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1B154FCA8()
{
  uint64_t v0;

  sub_1B154E7A0(*(void **)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1B154FCB8()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15_25();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1B154FCE4(uint64_t a1)
{
  uint64_t *v1;

  sub_1B154E82C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B154FCF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_1B154FD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B140A844(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B154FD58(uint64_t a1)
{
  uint64_t v2;

  sub_1B140A844(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_17Tm()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_82();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t KeyboardObserver.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  KeyboardObserver.init()();
  return v0;
}

uint64_t KeyboardObserver.onWillHide(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  OUTLINED_FUNCTION_2_67(v3);
  return OUTLINED_FUNCTION_0_95();
}

uint64_t KeyboardObserver.onShow(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_2_67(v3);
  return OUTLINED_FUNCTION_0_95();
}

uint64_t KeyboardObserver.onDidShow(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  OUTLINED_FUNCTION_2_67(v3);
  return OUTLINED_FUNCTION_0_95();
}

uint64_t KeyboardObserver.onHide(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  OUTLINED_FUNCTION_2_67(v3);
  return OUTLINED_FUNCTION_0_95();
}

uint64_t *KeyboardObserver.deinit()
{
  uint64_t *v0;

  sub_1B13B9100(v0[2]);
  sub_1B13B9100(v0[4]);
  sub_1B13B9100(v0[6]);
  sub_1B13B9100(v0[8]);
  sub_1B13B9100(v0[10]);
  sub_1B13B9100(v0[12]);
  return v0;
}

uint64_t KeyboardObserver.__deallocating_deinit()
{
  KeyboardObserver.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for KeyboardObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyboardObserver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B154FF68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_81();
  v0 = OUTLINED_FUNCTION_4_53();
  return OUTLINED_FUNCTION_3_57(v0);
}

void sub_1B154FFA0(void *a1, void (*a2)(double), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  char v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  id v29;
  double Height;
  void *v31;
  double *v32;
  uint64_t v33;
  void *v34;
  double *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t (*v41)();
  double *v42;
  id v43;
  uint64_t v44;
  _BYTE v45[24];
  uint64_t v46;
  CGRect v47;

  if (!sub_1B1550448(a1))
    return;
  v43 = (id)sub_1B16B9860();
  v44 = v12;
  sub_1B16BA520();
  sub_1B146AD18();
  sub_1B148EA44((uint64_t)&v37);
  if (v46)
  {
    sub_1B13A1BE4(0, qword_1ED17BEC0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = v43;
      objc_msgSend(v43, sel_CGRectValue);
      v15 = v14;
      v17 = v16;
      v19 = v18;
      v21 = v20;

      v22 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    sub_1B13F77F4((uint64_t)v45);
  }
  v22 = 1;
  v15 = 0.0;
  v17 = 0.0;
  v19 = 0.0;
  v21 = 0.0;
LABEL_7:
  v43 = (id)sub_1B16B9860();
  v44 = v23;
  sub_1B16BA520();
  sub_1B146AD18();
  sub_1B148EA44((uint64_t)&v37);
  if (v46)
  {
    sub_1B13A1BE4(0, &qword_1ED17A058);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v24 = v43;
      objc_msgSend(v43, sel_doubleValue);
      v26 = v25;

      goto LABEL_12;
    }
  }
  else
  {
    sub_1B13F77F4((uint64_t)v45);
  }
  v26 = 0.0;
LABEL_12:
  v43 = (id)sub_1B16B9860();
  v44 = v27;
  sub_1B16BA520();
  sub_1B146AD18();
  swift_bridgeObjectRelease();
  sub_1B148EA44((uint64_t)&v37);
  if (!v46)
  {
    sub_1B13F77F4((uint64_t)v45);
    goto LABEL_16;
  }
  sub_1B13A1BE4(0, &qword_1ED17A058);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v29 = 0;
    v28 = 0;
    goto LABEL_17;
  }
  v28 = v43;
  v29 = objc_msgSend(v43, sel_unsignedIntegerValue);
LABEL_17:
  Height = 0.0;
  if ((v22 & 1) == 0)
  {
    v47.origin.x = v15;
    v47.origin.y = v17;
    v47.size.width = v19;
    v47.size.height = v21;
    Height = CGRectGetHeight(v47);
  }
  if (a2)
    a2(Height);
  v31 = (void *)objc_opt_self();
  v32 = (double *)swift_allocObject();
  *((_QWORD *)v32 + 2) = a4;
  *((_QWORD *)v32 + 3) = a5;
  v32[4] = Height;
  v41 = sub_1B15504B4;
  v42 = v32;
  v33 = MEMORY[0x1E0C809B0];
  v37 = MEMORY[0x1E0C809B0];
  v38 = 1107296256;
  v39 = sub_1B13F00E4;
  v40 = &block_descriptor_36;
  v34 = _Block_copy(&v37);
  sub_1B13C4AEC(a4);
  swift_release();
  v35 = (double *)swift_allocObject();
  *((_QWORD *)v35 + 2) = a6;
  *((_QWORD *)v35 + 3) = a7;
  v35[4] = Height;
  v41 = sub_1B15504B4;
  v42 = v35;
  v37 = v33;
  v38 = 1107296256;
  v39 = sub_1B13F8544;
  v40 = &block_descriptor_6_2;
  v36 = _Block_copy(&v37);
  sub_1B13C4AEC(a6);
  swift_release();
  objc_msgSend(v31, sel_animateWithDuration_delay_options_animations_completion_, v29, v34, v36, v26, 0.0);
  _Block_release(v36);
  _Block_release(v34);

}

uint64_t sub_1B15503BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_81();
  v0 = OUTLINED_FUNCTION_4_53();
  return OUTLINED_FUNCTION_3_57(v0);
}

uint64_t sub_1B1550400(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5;

  v5 = a3;
  swift_retain();
  a4(v5);

  return swift_release();
}

uint64_t sub_1B1550448(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_userInfo);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B16B96F8();

  return v3;
}

uint64_t sub_1B15504B4()
{
  uint64_t v0;
  uint64_t (*v1)(double);
  uint64_t result;

  v1 = *(uint64_t (**)(double))(v0 + 16);
  if (v1)
    return OUTLINED_FUNCTION_6_59(v1);
  return result;
}

uint64_t *sub_1B15504DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    v11[1] = v12[1];
    v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
    v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_1B16B9740();
    sub_1B16B9740();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_1B15505C8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1B155061C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  sub_1B16B9740();
  sub_1B16B9740();
  v12(v10, v11, v7);
  return a1;
}

_QWORD *sub_1B15506B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_1B1550764(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_1B15507CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1B155085C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 32) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8, v6, v4);
      v16 = *(_QWORD *)(a1 + 8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B1550930 + 4 * byte_1B16D0130[(v10 - 1)]))();
}

void sub_1B15509A4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1B1550B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;

  *a4 = 0x6974616D6F747561;
  a4[1] = 0xEA00000000006E6FLL;
  a4[2] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  a4[3] = v8;
  v10 = (char *)a4 + *(int *)(type metadata accessor for AutomationIdentifier(0, a2, a3, v9) + 40);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v10, a1, a2);
}

uint64_t sub_1B1550C24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1B16BA910(0x696669746E656469, 0xEA00000000007265, a1) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_1B16BA910(1701869940, 0xE400000000000000, a1) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1635017060 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1B16BA910(1635017060, 0xE400000000000000, a1);
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1B1550D64()
{
  return 3;
}

uint64_t sub_1B1550D6C()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t sub_1B1550DB0(char a1)
{
  if (!a1)
    return 0x696669746E656469;
  if (a1 == 1)
    return 1701869940;
  return 1635017060;
}

void sub_1B1550DFC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14[4];
  char v15;
  char v16;
  char v17;

  v6 = *(_QWORD *)(a2 + 16);
  v14[0] = *(_QWORD *)(a2 + 24);
  v14[1] = v6;
  v7 = type metadata accessor for AutomationIdentifier.CodingKeys(255, v6, v14[0], a4);
  MEMORY[0x1B5E1F0E8](&unk_1B16D02B8, v7);
  v8 = sub_1B16BA88C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v14 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B16BAAF0();
  v17 = 0;
  v13 = v14[3];
  sub_1B16BA874();
  if (!v13)
  {
    v16 = 1;
    sub_1B16BA874();
    v15 = 2;
    sub_1B16BA880();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  OUTLINED_FUNCTION_0_2();
}

void sub_1B1550F64(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;

  v32 = a4;
  v31 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v34 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AutomationIdentifier.CodingKeys(255, v8, v9, v10);
  MEMORY[0x1B5E1F0E8](&unk_1B16D02B8, v11);
  v38 = sub_1B16BA85C();
  v33 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v12);
  v14 = (char *)&v30 - v13;
  v35 = a2;
  v36 = a3;
  v16 = type metadata accessor for AutomationIdentifier(0, a2, a3, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (uint64_t *)((char *)&v30 - v19);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v37 = v14;
  v21 = v39;
  sub_1B16BAAD8();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v39 = v17;
    v30 = v16;
    v22 = v35;
    v23 = (uint64_t)a1;
    v24 = v34;
    v42 = 0;
    v25 = v20;
    *v20 = OUTLINED_FUNCTION_2_68();
    v20[1] = v26;
    v41 = 1;
    v20[2] = OUTLINED_FUNCTION_2_68();
    v20[3] = v27;
    v40 = 2;
    sub_1B16BA844();
    OUTLINED_FUNCTION_0_96();
    v28 = v30;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v25 + *(int *)(v30 + 40), v24, v22);
    v29 = v39;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v39 + 16))(v32, v25, v28);
    __swift_destroy_boxed_opaque_existential_1(v23);
    (*(void (**)(uint64_t *, uint64_t))(v29 + 8))(v25, v28);
  }
  OUTLINED_FUNCTION_0_2();
}

BOOL sub_1B15511DC(char *a1, char *a2)
{
  return sub_1B14744A8(*a1, *a2);
}

uint64_t sub_1B15511F0()
{
  return sub_1B1550D6C();
}

uint64_t sub_1B15511FC()
{
  return sub_1B14744B8();
}

uint64_t sub_1B1551208()
{
  sub_1B16BAA48();
  sub_1B14744B8();
  return sub_1B16BAA78();
}

uint64_t sub_1B155124C()
{
  char *v0;

  return sub_1B1550DB0(*v0);
}

uint64_t sub_1B1551258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1550C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1551284()
{
  return sub_1B146E354();
}

uint64_t sub_1B15512A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1550D64();
  *a1 = result;
  return result;
}

uint64_t sub_1B15512D0(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&unk_1B16D02B8, a1);
  return sub_1B16BAB08();
}

uint64_t sub_1B1551304(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&unk_1B16D02B8, a1);
  return sub_1B16BAB14();
}

void sub_1B1551338(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B1550F64(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void sub_1B1551354(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B1550DFC(a1, a2, a3, a4);
}

uint64_t type metadata accessor for AutomationIdentifier.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AutomationIdentifier.CodingKeys);
}

uint64_t sub_1B1551374(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15513C0 + 4 * byte_1B16D0143[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B15513F4 + 4 * byte_1B16D013E[v4]))();
}

uint64_t sub_1B15513F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15513FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1551404);
  return result;
}

uint64_t sub_1B1551410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1551418);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B155141C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1551424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1B1551430()
{
  JUMPOUT(0x1B5E1F0E8);
}

void sub_1B1551440()
{
  JUMPOUT(0x1B5E1F0E8);
}

void sub_1B1551450()
{
  JUMPOUT(0x1B5E1F0E8);
}

uint64_t sub_1B1551460(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  void (*v17)(_QWORD *, _QWORD);
  uint64_t v18;
  _QWORD v21[6];

  v21[5] = a2;
  sub_1B15517AC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1551F74();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v8, a1, v4);
  sub_1B13AD67C(&qword_1EEF334C8, (uint64_t (*)(uint64_t))sub_1B15517AC, MEMORY[0x1E0DB3DB8]);
  sub_1B16B99EC();
  v15 = &v13[*(int *)(v10 + 36)];
  sub_1B13AD67C(&qword_1EEF334C0, (uint64_t (*)(uint64_t))sub_1B15517AC, MEMORY[0x1E0DB3DC0]);
  while (1)
  {
    v16 = *(_QWORD *)v15;
    sub_1B16B9EB4();
    if (v16 == v21[0])
      break;
    v17 = (void (*)(_QWORD *, _QWORD))sub_1B16B9FA4();
    swift_retain();
    v17(v21, 0);
    v14(v8, (uint64_t)v13, v4);
    sub_1B16B9EC0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_1B16B7E38();
    v18 = sub_1B16B7E2C();
    sub_1B1492764(v18);
    swift_release();
  }
  return sub_1B1551FEC((uint64_t)v13);
}

void SettingActionHandler.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  swift_allocObject();
  sub_1B16B7E44();
  OUTLINED_FUNCTION_4_54(&qword_1EEF31180, v0, MEMORY[0x1E0DB55B8]);
  OUTLINED_FUNCTION_4_54((unint64_t *)&unk_1EEF31188, v1, MEMORY[0x1E0DB5568]);
  OUTLINED_FUNCTION_8_41();
}

void sub_1B15516C8()
{
  OUTLINED_FUNCTION_67();
}

void SettingActionHandler.init()()
{
  uint64_t v0;
  uint64_t v1;

  sub_1B16B7E44();
  OUTLINED_FUNCTION_4_54(&qword_1EEF31180, v0, MEMORY[0x1E0DB55B8]);
  OUTLINED_FUNCTION_4_54((unint64_t *)&unk_1EEF31188, v1, MEMORY[0x1E0DB5568]);
  OUTLINED_FUNCTION_8_41();
}

void sub_1B1551748()
{
  OUTLINED_FUNCTION_67();
}

uint64_t SettingActionHandler.push(action:)()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_1_82();
  sub_1B16B842C();
  return swift_endAccess();
}

void sub_1B15517AC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EEF333F8)
  {
    sub_1B16B7E44();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB55A8];
    sub_1B13AD67C(&qword_1EEF31180, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB55A8], MEMORY[0x1E0DB55B8]);
    sub_1B13AD67C((unint64_t *)&unk_1EEF31188, v0, MEMORY[0x1E0DB5568]);
    v1 = sub_1B16B848C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EEF333F8);
  }
}

Swift::Void __swiftcall SettingActionHandler.push(actions:)(Swift::OpaquePointer actions)
{
  char *v1;
  char *rawValue;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char *v15;

  rawValue = v1;
  OUTLINED_FUNCTION_1_82();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  if ((unint64_t)actions._rawValue >> 62)
    goto LABEL_18;
  v11 = *(_QWORD *)(((unint64_t)actions._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  sub_1B16B9740();
LABEL_3:
  v15 = &rawValue[OBJC_IVAR____TtC5TeaUI20SettingActionHandler_actions];
  OUTLINED_FUNCTION_13();
  if (v11)
  {
    v12 = 0;
    do
    {
      if (((unint64_t)actions._rawValue & 0xC000000000000001) != 0)
      {
        MEMORY[0x1B5E1DF60](v12, actions._rawValue);
      }
      else
      {
        if (v12 >= *(_QWORD *)(((unint64_t)actions._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_17:
          __break(1u);
LABEL_18:
          swift_retain();
          sub_1B16B9740();
          v11 = sub_1B16BA76C();
          goto LABEL_3;
        }
        swift_retain();
      }
      v13 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_17;
      rawValue = (char *)actions._rawValue;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v10, v15, v5);
      sub_1B16B7E14();
      v14 = sub_1B16B8468();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
      if ((v14 & 1) != 0)
      {
        swift_release();
      }
      else
      {
        sub_1B16BA61C();
        sub_1B16BA64C();
        sub_1B16BA658();
        sub_1B16BA628();
      }
      ++v12;
    }
    while (v13 != v11);
  }
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13();
  sub_1B16B8420();
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_47();
}

void SettingActionHandler.perform(on:completion:)(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v31;

  v4 = sub_1B16B7E20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_1_82();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v31 = MEMORY[0x1E0DEE9D8];
  v17 = v3 + OBJC_IVAR____TtC5TeaUI20SettingActionHandler_actions;
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v16, v17, v11);
  sub_1B1551460(v16, (uint64_t)&v31);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
  v18 = v31;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v9, *MEMORY[0x1E0DB5578], v4);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v21 = *(_QWORD *)(v5 + 72);
    sub_1B13AD67C(&qword_1EEF33400, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5580], MEMORY[0x1E0DB5588]);
    sub_1B16B9740();
    while ((sub_1B16B9830() & 1) == 0)
    {
      v20 += v21;
      if (!--v19)
        goto LABEL_7;
    }
    OUTLINED_FUNCTION_5_60();
    swift_bridgeObjectRelease();
    sub_1B13A1BE4(0, &qword_1EEF32EC0);
    sub_1B1528044(0xD000000000000013, 0x80000001B16ECFF0, 0xD00000000000004ELL, 0x80000001B16ED010, 1);
    v24 = v23;
    sub_1B13A1BE4(0, &qword_1EEF32EC8);
    v25 = sub_1B1528264(0x707041206C6C694BLL, 0xE800000000000000, 2, (uint64_t)sub_1B1551D9C, 0);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a2;
    *(_QWORD *)(v26 + 24) = a3;
    swift_retain();
    v27 = sub_1B1528264(0x726574614CLL, 0xE500000000000000, 2, (uint64_t)sub_1B140E614, v26);
    objc_msgSend(v24, sel_addAction_, v25);
    objc_msgSend(v24, sel_addAction_, v27);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v24, 1, 0);

  }
  else
  {
    sub_1B16B9740();
LABEL_7:
    OUTLINED_FUNCTION_5_60();
    v22 = swift_bridgeObjectRelease();
    a2(v22);
  }
  OUTLINED_FUNCTION_13();
  sub_1B16B8474();
  swift_endAccess();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
}

void sub_1B1551D9C()
{
  exit(0);
}

uint64_t sub_1B1551DAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t SettingActionHandler.deinit()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_82();
  OUTLINED_FUNCTION_20_1(v1);
  return v0;
}

uint64_t SettingActionHandler.__deallocating_deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_82();
  OUTLINED_FUNCTION_20_1(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_1B1551E3C()
{
  return SettingActionHandler.push(action:)();
}

void sub_1B1551E5C(Swift::OpaquePointer a1)
{
  SettingActionHandler.push(actions:)(a1);
}

void sub_1B1551E7C(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  SettingActionHandler.perform(on:completion:)(a1, a2, a3);
}

uint64_t dispatch thunk of SettingActionHandlerType.push(action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SettingActionHandlerType.push(actions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SettingActionHandlerType.perform(on:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1B1551EB4()
{
  return type metadata accessor for SettingActionHandler();
}

uint64_t type metadata accessor for SettingActionHandler()
{
  uint64_t result;

  result = qword_1EEF33430;
  if (!qword_1EEF33430)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B1551EF4()
{
  unint64_t v0;

  sub_1B15517AC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SettingActionHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SettingActionHandler.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1B1551F74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF334B8)
  {
    sub_1B15517AC();
    sub_1B13AD67C(&qword_1EEF334C0, (uint64_t (*)(uint64_t))sub_1B15517AC, MEMORY[0x1E0DB3DC0]);
    v0 = sub_1B16BA6C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF334B8);
  }
}

uint64_t sub_1B1551FEC(uint64_t a1)
{
  uint64_t v2;

  sub_1B1551F74();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AppURLContext.options.getter()
{
  return sub_1B16B9740();
}

uint64_t AppURLContext.options2.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_97() + 20);
  v4 = OUTLINED_FUNCTION_4_55();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void AppURLContext.route.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_97() + 24));
  OUTLINED_FUNCTION_0_0();
}

void AppURLContext.routeOptions.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_97() + 28));
  OUTLINED_FUNCTION_0_0();
}

void AppURLContext.init(options:options2:route:routeOptions:)(uint64_t a1@<X0>, char *a2@<X2>, char *a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  char v6;
  char v7;
  uint64_t v8;

  v6 = *a2;
  v7 = *a3;
  *a4 = a1;
  OUTLINED_FUNCTION_0_97();
  v8 = OUTLINED_FUNCTION_2_69();
  OUTLINED_FUNCTION_1_83(v8);
  *((_BYTE *)a4 + *(int *)(v4 + 24)) = v6;
  *((_BYTE *)a4 + *(int *)(v4 + 28)) = v7;
  OUTLINED_FUNCTION_67();
}

void AppURLContext.init(options:options2:route:)(uint64_t a1@<X0>, char *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  char v5;
  uint64_t v6;

  v5 = *a2;
  *a3 = a1;
  OUTLINED_FUNCTION_0_97();
  v6 = OUTLINED_FUNCTION_2_69();
  OUTLINED_FUNCTION_1_83(v6);
  *((_BYTE *)a3 + *(int *)(v3 + 24)) = v5;
  *((_BYTE *)a3 + *(int *)(v3 + 28)) = 1;
  OUTLINED_FUNCTION_67();
}

TeaUI::URLHandlerRoute_optional __swiftcall URLHandlerRoute.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  TeaUI::URLHandlerRoute_optional result;

  v2 = v1;
  v3 = sub_1B16BA7F0();
  swift_bridgeObjectRelease();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_31();
  return result;
}

uint64_t URLHandlerRoute.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6974634172657375;
  if (*v0 != 1)
    v1 = 0x6E6F43656E656373;
  if (*v0)
    return v1;
  else
    return 0x4C52556E65706FLL;
}

void sub_1B1552214(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1B14AB928(*a1, *a2);
}

void sub_1B1552220()
{
  sub_1B1679360();
}

uint64_t sub_1B1552228()
{
  return sub_1B149EFB4();
}

void sub_1B1552230()
{
  sub_1B1679824();
}

TeaUI::URLHandlerRoute_optional sub_1B1552238(Swift::String *a1)
{
  return URLHandlerRoute.init(rawValue:)(*a1);
}

void sub_1B1552244(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = URLHandlerRoute.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_0_0();
}

uint64_t URLHandlerRouteOptions.description.getter()
{
  uint64_t v0;
  uint64_t v2;

  sub_1B16BA574();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_35();
  v2 = v0;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_42();
  return v2;
}

uint64_t URLHandlerManager<A>.handle(url:options:route:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;

  v5 = OUTLINED_FUNCTION_0_97();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_77();
  v10 = (_QWORD *)(v9 - v8);
  v11 = *a3;
  swift_bridgeObjectRetain_n();
  URLHandlerOpenOptions.init(options:)();
  *v10 = a2;
  *((_BYTE *)v10 + *(int *)(v5 + 24)) = v11;
  *((_BYTE *)v10 + *(int *)(v5 + 28)) = 1;
  LOBYTE(a3) = sub_1B16B8558();
  sub_1B15523BC((uint64_t)v10);
  return a3 & 1;
}

uint64_t sub_1B15523BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppURLContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t URLHandlerManager<A>.handle(url:options:route:routeOptions:)(uint64_t a1, void *a2, unsigned __int8 *a3, char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;

  v7 = OUTLINED_FUNCTION_0_97();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_77();
  v12 = (uint64_t *)(v11 - v10);
  v13 = *a3;
  v14 = *a4;
  sub_1B13E6FA8();
  v15 = swift_allocObject();
  v16 = (_QWORD *)v15;
  *(_OWORD *)(v15 + 16) = xmmword_1B16C6D10;
  if (v13)
  {
    if (v13 == 1)
    {
      v17 = 0xEC00000079746976;
      v18 = 0x6974634172657375;
    }
    else
    {
      v17 = 0xEC0000007463656ELL;
      v18 = 0x6E6F43656E656373;
    }
  }
  else
  {
    v17 = 0xE700000000000000;
    v18 = 0x4C52556E65706FLL;
  }
  v19 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  v20 = sub_1B140493C();
  v16[8] = v20;
  v16[4] = v18;
  v16[5] = v17;
  v21 = sub_1B16B7A60();
  v16[12] = v19;
  v16[13] = v20;
  v16[9] = v21;
  v16[10] = v22;
  sub_1B16BA574();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_35();
  v30 = v24;
  v31 = v23;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_42();
  v16[17] = v19;
  v16[18] = v20;
  v16[14] = v30;
  v16[15] = v31;
  sub_1B13E6A30();
  v25 = (void *)sub_1B16BA2F8();
  sub_1B16BA058();
  sub_1B16B8B58();
  swift_bridgeObjectRelease();

  if (a2)
  {
    v26 = a2;
    v27 = sub_1B1698CFC((uint64_t)v26);
    sub_1B1698E88();

  }
  else
  {
    type metadata accessor for OpenURLOptionsKey(0);
    sub_1B155267C();
    v27 = OUTLINED_FUNCTION_3_58();
    OUTLINED_FUNCTION_3_58();
    URLHandlerOpenOptions.init(options:)();
  }
  *v12 = v27;
  *((_BYTE *)v12 + *(int *)(v7 + 24)) = v13;
  *((_BYTE *)v12 + *(int *)(v7 + 28)) = v14;
  v28 = sub_1B16B8558();
  sub_1B15523BC((uint64_t)v12);
  return v28 & 1;
}

unint64_t sub_1B155267C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED187258;
  if (!qword_1ED187258)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    result = MEMORY[0x1B5E1F0E8](&unk_1B16C4868, v1);
    atomic_store(result, (unint64_t *)&qword_1ED187258);
  }
  return result;
}

uint64_t URLHandlerManager<A>.handle(url:options:route:)(uint64_t a1, void *a2, unsigned __int8 *a3)
{
  char v4;
  unsigned __int8 v5;

  v5 = *a3;
  v4 = 1;
  return URLHandlerManager<A>.handle(url:options:route:routeOptions:)(a1, a2, &v5, &v4) & 1;
}

uint64_t URLHandlerManager<A>.handle(url:options:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v0 = OUTLINED_FUNCTION_0_97();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_77();
  v5 = (uint64_t *)(v4 - v3);
  v7 = sub_1B1698CFC(v6);
  sub_1B1698E88();
  *v5 = v7;
  *((_BYTE *)v5 + *(int *)(v0 + 24)) = 3;
  *((_BYTE *)v5 + *(int *)(v0 + 28)) = 1;
  v8 = sub_1B16B8558();
  sub_1B15523BC((uint64_t)v5);
  return v8 & 1;
}

unint64_t sub_1B15527A4()
{
  unint64_t result;

  result = qword_1EEF334D0;
  if (!qword_1EEF334D0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for URLHandlerRoute, &type metadata for URLHandlerRoute);
    atomic_store(result, (unint64_t *)&qword_1EEF334D0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppURLContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B16B8684();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1B16B9740();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v7 + v13) = *((_BYTE *)a2 + v13);
  }
  return v7;
}

uint64_t destroy for AppURLContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B16B8684();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for AppURLContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B16B8684();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_1B16B9740();
  v10(v7, v8, v9);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

_QWORD *assignWithCopy for AppURLContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B16B8684();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *initializeWithTake for AppURLContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B16B8684();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

_QWORD *assignWithTake for AppURLContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B16B8684();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppURLContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1552B20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_4_55();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AppURLContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B1552B9C(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_31();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_4_55();
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for URLHandlerRoute(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1552C48 + 4 * byte_1B16D0375[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1552C7C + 4 * byte_1B16D0370[v4]))();
}

uint64_t sub_1B1552C7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1552C84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1552C8CLL);
  return result;
}

uint64_t sub_1B1552C98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1552CA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1552CA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1552CAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for URLHandlerRouteOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1552D04 + 4 * byte_1B16D037F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1552D38 + 4 * byte_1B16D037A[v4]))();
}

uint64_t sub_1B1552D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1552D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1552D48);
  return result;
}

uint64_t sub_1B1552D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1552D5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1552D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1552D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1552D74()
{
  return sub_1B1552D98();
}

uint64_t sub_1B1552D80()
{
  return sub_1B1552D98();
}

uint64_t sub_1B1552D8C()
{
  return sub_1B1552D98();
}

uint64_t sub_1B1552D98()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = v1;
    v3 = v0;
  }
  else
  {
    v4 = v0;
    while (1)
    {
      v5 = objc_msgSend(v4, sel_parentViewController);

      if (!v5)
        break;
      objc_opt_self();
      v6 = swift_dynamicCastObjCClass();
      v4 = v5;
      if (v6)
        return v6;
    }
    return 0;
  }
  return v2;
}

uint64_t sub_1B1552E40@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B1552E8C()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void SceneProvider.windowScene.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_98();
  MEMORY[0x1B5E1F2F8](v0);
  OUTLINED_FUNCTION_48();
}

void SceneProvider.traits.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  SceneProvider.keyWindow.getter();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_rootViewController);

    if (v2)
    {
      v3 = (void *)sub_1B1552D98();
      if (v3)
      {
        v4 = v3;
        objc_msgSend(v3, sel_displayMode);

      }
      else
      {
        v5 = (void *)sub_1B1552D98();
        if (v5)
        {
          v6 = v5;
          v7 = objc_msgSend(v5, sel__uip_sidebar);
          objc_msgSend(v7, sel__isVisible);

        }
        else
        {

        }
      }
    }
  }
}

uint64_t SceneProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t SceneProvider.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t SceneProvider.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

void sub_1B1553068()
{
  SceneProvider.windowScene.getter();
}

void sub_1B1553088()
{
  SceneProvider.traits.getter();
}

uint64_t dispatch thunk of SceneProviderType.windowScene.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SceneProviderType.traits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t method lookup function for SceneProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SceneProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

double BlueprintLayoutCollectionSection.unionFrame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

__n128 BlueprintLayoutCollectionSection.headerUnionFrame.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 64);
  result = *(__n128 *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t BlueprintLayoutCollectionSection.pinnedHeaderFrames.getter()
{
  return sub_1B16B9740();
}

uint64_t initializeWithCopy for BlueprintLayoutCollectionSection(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  v7 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = v7;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutCollectionSection(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 32);
  v5 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 112);
  v7 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = v7;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BlueprintLayoutCollectionSection(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutCollectionSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 160))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 72);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutCollectionSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionSection()
{
  return &type metadata for BlueprintLayoutCollectionSection;
}

uint64_t sub_1B1553350(unint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t i;
  void *v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_13;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1B16B9740();
  for (; v6; v6 = sub_1B16BA76C())
  {
    for (i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (void *)MEMORY[0x1B5E1DF60](i - 4, a1);
      }
      else
      {
        v8 = *(void **)(a1 + 8 * i);
        swift_unknownObjectRetain();
      }
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      if ((objc_msgSend(v8, sel_respondsToSelector_, sel_continueAnimationWithTimingParameters_durationFactor_) & 1) != 0)objc_msgSend(v8, sel_continueAnimationWithTimingParameters_durationFactor_, a2, a3);
      swift_unknownObjectRelease();
      if (v9 == v6)
      {
        swift_unknownObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    sub_1B16B9740();
  }
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void ImplicitAnimationGroup.__allocating_init(animators:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v4;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5TeaUI22ImplicitAnimationGroup_animators] = a1;
  v4.receiver = v3;
  v4.super_class = v1;
  objc_msgSendSuper2(&v4, sel_init);
  OUTLINED_FUNCTION_7();
}

void ImplicitAnimationGroup.init(animators:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI22ImplicitAnimationGroup_animators] = a1;
  v4.receiver = v1;
  v4.super_class = ObjectType;
  objc_msgSendSuper2(&v4, sel_init);
  OUTLINED_FUNCTION_7();
}

id ImplicitAnimationGroup.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ImplicitAnimationGroup.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ImplicitAnimationGroup.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ImplicitAnimationGroup.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_26();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    if (OUTLINED_FUNCTION_31_0())
    {
LABEL_3:
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_28_1();
    }
  }
  else
  {
    OUTLINED_FUNCTION_4_56();
    if (v0)
      goto LABEL_3;
  }
  OUTLINED_FUNCTION_29();
  return 0;
}

void sub_1B1553668()
{
  JUMPOUT(0x1B155361CLL);
}

id ImplicitAnimationGroup.isRunning.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  OUTLINED_FUNCTION_14_26();
  if (v1)
    goto LABEL_12;
  v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_1_84();
  for (; v2; v2 = OUTLINED_FUNCTION_31_0())
  {
    v3 = 4;
    while (1)
    {
      if ((v0 & 0xC000000000000001) != 0)
      {
        v4 = (void *)MEMORY[0x1B5E1DF60](v3 - 4, v0);
      }
      else
      {
        v4 = *(void **)(v0 + 8 * v3);
        swift_unknownObjectRetain();
      }
      v5 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v6 = objc_msgSend(v4, sel_isRunning);
      swift_unknownObjectRelease();
      if ((v6 & 1) == 0)
      {
        ++v3;
        if (v5 != v2)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_1_84();
  }
  v6 = 0;
LABEL_14:
  OUTLINED_FUNCTION_150();
  return v6;
}

id ImplicitAnimationGroup.isReversed.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  OUTLINED_FUNCTION_14_26();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    v0 = OUTLINED_FUNCTION_31_0();
    if (v0)
      goto LABEL_3;
LABEL_6:
    OUTLINED_FUNCTION_29();
    return 0;
  }
  OUTLINED_FUNCTION_4_56();
  if (!v0)
    goto LABEL_6;
LABEL_3:
  OUTLINED_FUNCTION_63();
  if (v0)
    OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_11_36();
  OUTLINED_FUNCTION_29();
  v2 = objc_msgSend(0, sel_isReversed);
  OUTLINED_FUNCTION_63_0();
  return v2;
}

void sub_1B155383C()
{
  JUMPOUT(0x1B15537F0);
}

void ImplicitAnimationGroup.isReversed.setter(char a1)
{
  sub_1B1553CBC(a1, (SEL *)&selRef_setReversed_);
}

void (*ImplicitAnimationGroup.isReversed.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = ImplicitAnimationGroup.isReversed.getter() & 1;
  return sub_1B15538C8;
}

void sub_1B15538C8(uint64_t a1)
{
  ImplicitAnimationGroup.isReversed.setter(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0_0();
}

uint64_t ImplicitAnimationGroup.fractionComplete.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_26();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    if (OUTLINED_FUNCTION_31_0())
    {
LABEL_3:
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_28_1();
    }
  }
  else
  {
    OUTLINED_FUNCTION_4_56();
    if (v0)
      goto LABEL_3;
  }
  return OUTLINED_FUNCTION_29();
}

void sub_1B15539A4()
{
  JUMPOUT(0x1B1553954);
}

uint64_t ImplicitAnimationGroup.fractionComplete.setter(double a1)
{
  return sub_1B1553A9C((SEL *)&selRef_setFractionComplete_, a1);
}

void (*ImplicitAnimationGroup.fractionComplete.modify(_QWORD *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ImplicitAnimationGroup.fractionComplete.getter();
  *a1 = v3;
  return sub_1B1553A30;
}

void sub_1B1553A30(double *a1)
{
  ImplicitAnimationGroup.fractionComplete.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

Swift::Void __swiftcall ImplicitAnimationGroup.startAnimation()()
{
  sub_1B1553BBC((SEL *)&selRef_startAnimation);
}

Swift::Void __swiftcall ImplicitAnimationGroup.startAnimation(afterDelay:)(Swift::Double afterDelay)
{
  sub_1B1553A9C((SEL *)&selRef_startAnimationAfterDelay_, afterDelay);
}

uint64_t sub_1B1553A9C(SEL *a1, double a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;

  OUTLINED_FUNCTION_15_26();
  if (!v6)
  {
    v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_23_4();
    if (v7)
      goto LABEL_3;
    return OUTLINED_FUNCTION_150();
  }
  OUTLINED_FUNCTION_23_4();
  result = OUTLINED_FUNCTION_47_4();
  v7 = result;
  if (!result)
    return OUTLINED_FUNCTION_150();
LABEL_3:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_165();
      OUTLINED_FUNCTION_12_33();
      objc_msgSend(v3, *a1, a2);
      OUTLINED_FUNCTION_20_30();
    }
    return OUTLINED_FUNCTION_150();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ImplicitAnimationGroup.pauseAnimation()()
{
  sub_1B1553BBC((SEL *)&selRef_pauseAnimation);
}

uint64_t sub_1B1553BBC(SEL *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;

  OUTLINED_FUNCTION_15_26();
  if (!v4)
  {
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_23_4();
    if (v5)
      goto LABEL_3;
    return OUTLINED_FUNCTION_150();
  }
  OUTLINED_FUNCTION_23_4();
  result = OUTLINED_FUNCTION_47_4();
  v5 = result;
  if (!result)
    return OUTLINED_FUNCTION_150();
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_165();
      OUTLINED_FUNCTION_12_33();
      objc_msgSend(v2, *a1);
      OUTLINED_FUNCTION_20_30();
    }
    return OUTLINED_FUNCTION_150();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ImplicitAnimationGroup.stopAnimation(_:)(Swift::Bool a1)
{
  sub_1B1553CBC(a1, (SEL *)&selRef_stopAnimation_);
}

void sub_1B1553CBC(char a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  OUTLINED_FUNCTION_15_26();
  if (!v5)
  {
    v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_23_4();
    if (v6)
      goto LABEL_3;
LABEL_8:
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_27();
    return;
  }
  OUTLINED_FUNCTION_23_4();
  v6 = OUTLINED_FUNCTION_47_4();
  if (!v6)
    goto LABEL_8;
LABEL_3:
  if (v6 >= 1)
  {
    v7 = 0;
    v8 = a1 & 1;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_165();
      v9 = *(void **)(v2 + 8 * v7 + 32);
      swift_unknownObjectRetain();
      ++v7;
      objc_msgSend(v9, *a2, v8);
      swift_unknownObjectRelease();
    }
    while (v6 != v7);
    goto LABEL_8;
  }
  __break(1u);
}

void ImplicitAnimationGroup.finishAnimation(at:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;

  OUTLINED_FUNCTION_14_26();
  if (!v4)
  {
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_1_84();
    if (v5)
      goto LABEL_3;
LABEL_9:
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_27();
    return;
  }
  OUTLINED_FUNCTION_1_84();
  v5 = OUTLINED_FUNCTION_31_0();
  if (!v5)
    goto LABEL_9;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v2 = (void *)MEMORY[0x1B5E1DF60](i, v1);
      else
        OUTLINED_FUNCTION_12_33();
      objc_msgSend(v2, sel_finishAnimationAtPosition_, a1);
      OUTLINED_FUNCTION_20_30();
    }
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t ImplicitAnimationGroup.addCompletion(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  dispatch_group_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  dispatch_group_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  _QWORD *v46;

  v32 = a1;
  v33 = a2;
  v3 = sub_1B16B95D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B16B9620();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v34 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = dispatch_group_create();
  v39 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v39 + 16) = 0;
  OUTLINED_FUNCTION_15_26();
  if (v11)
  {
    OUTLINED_FUNCTION_36();
    result = sub_1B16BA76C();
    v12 = result;
  }
  else
  {
    v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_36();
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1B1404978();
    v22 = (void *)sub_1B16BA0DC();
    v23 = (_QWORD *)OUTLINED_FUNCTION_25();
    v24 = v33;
    v23[2] = v32;
    v23[3] = v24;
    v23[4] = v39;
    v45 = sub_1B155452C;
    v46 = v23;
    aBlock = MEMORY[0x1E0C809B0];
    v42 = 1107296256;
    v43 = sub_1B13F00E4;
    v44 = &block_descriptor_37;
    v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v26 = v34;
    sub_1B16B95F0();
    v40 = MEMORY[0x1E0DEE9D8];
    sub_1B13AD67C((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1B141793C();
    sub_1B13AD67C((unint64_t *)&qword_1ED183710, (uint64_t (*)(uint64_t))sub_1B141793C, MEMORY[0x1E0DEAF38]);
    sub_1B16BA448();
    v27 = v38;
    sub_1B16BA094();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
    swift_release();
    return swift_release();
  }
  if (v12 >= 1)
  {
    v29 = v7;
    v30 = v4;
    v31 = v3;
    v14 = 0;
    v15 = v2 & 0xC000000000000001;
    v37 = v2;
    v16 = v38;
    v17 = v39;
    do
    {
      if (v15)
        OUTLINED_FUNCTION_165();
      v18 = *(void **)(v2 + 8 * v14 + 32);
      swift_unknownObjectRetain();
      if ((objc_msgSend(v18, sel_respondsToSelector_, sel_addCompletion_) & 1) != 0)
      {
        swift_unknownObjectRetain();
        dispatch_group_enter(v16);
        v19 = OUTLINED_FUNCTION_25();
        *(_QWORD *)(v19 + 16) = v17;
        *(_QWORD *)(v19 + 24) = v16;
        v45 = sub_1B1554564;
        v46 = (_QWORD *)v19;
        aBlock = MEMORY[0x1E0C809B0];
        v42 = 1107296256;
        v43 = sub_1B13F8544;
        v44 = &block_descriptor_9_0;
        v20 = _Block_copy(&aBlock);
        swift_retain();
        v21 = v16;
        swift_retain();
        objc_msgSend(v18, sel_addCompletion_, v20);
        _Block_release(v20);
        swift_unknownObjectRelease_n();
        v2 = v37;
        swift_release();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v14;
    }
    while (v12 != v14);
    swift_bridgeObjectRelease();
    v4 = v30;
    v3 = v31;
    v7 = v29;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_1B15542C0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 != 1)
  {
    if (a1)
    {
      if (a1 != 2)
      {
        if (a1 == 1)
          goto LABEL_11;
        goto LABEL_10;
      }
      if (v7)
      {
LABEL_10:
        a1 = 0;
        goto LABEL_11;
      }
    }
    else if (v7 != 2)
    {
      goto LABEL_10;
    }
    a1 = 2;
    goto LABEL_11;
  }
  a1 = 1;
LABEL_11:
  swift_beginAccess();
  *v6 = a1;
  dispatch_group_leave(a3);
}

uint64_t sub_1B1554370(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  return a1(*(_QWORD *)(a3 + 16));
}

uint64_t ImplicitAnimationGroup.continueAnimation(withTimingParameters:durationFactor:)(uint64_t a1, double a2)
{
  unint64_t v4;

  swift_unknownObjectRetain();
  v4 = OUTLINED_FUNCTION_36();
  sub_1B1553350(v4, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B15544F0()
{
  return swift_deallocObject();
}

uint64_t sub_1B1554500()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B155452C()
{
  uint64_t v0;

  return sub_1B1554370(*(uint64_t (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1B1554538()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1B1554564(uint64_t a1)
{
  uint64_t v1;

  sub_1B15542C0(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

void sub_1B155456C(_BYTE *a1@<X8>)
{
  *a1 = ImplicitAnimationGroup.isReversed.getter() & 1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1554594(char *a1)
{
  ImplicitAnimationGroup.isReversed.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15545B4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ImplicitAnimationGroup.fractionComplete.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15545D8(double *a1)
{
  ImplicitAnimationGroup.fractionComplete.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t type metadata accessor for ImplicitAnimationGroup()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImplicitAnimationGroup()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImplicitAnimationGroup.__allocating_init(animators:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B155462C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B1554650()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t dispatch thunk of PluginViewControllerProviding.pluginViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id TouchInsetsButton.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

void sub_1B15546A8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_1B15546FC();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

uint64_t sub_1B15546D4()
{
  return sub_1B1554730();
}

double sub_1B15546FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_50();
  return *(double *)v0;
}

uint64_t sub_1B1554730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  OUTLINED_FUNCTION_57();
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI17TouchInsetsButton_touchInsets);
  result = swift_beginAccess();
  *v5 = v4;
  v5[1] = v3;
  v5[2] = v2;
  v5[3] = v1;
  return result;
}

uint64_t (*sub_1B155478C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL sub_1B15547D0(CGFloat a1, CGFloat a2)
{
  double *v2;
  void *v3;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGPoint v15;
  CGRect v16;

  objc_msgSend(v3, sel_bounds);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_0_50();
  v16.origin.x = UIEdgeInsetsInsetRect(v7, v9, v11, v13, *v2, v2[1]);
  v15.x = a1;
  v15.y = a2;
  return CGRectContainsPoint(v16, v15);
}

id TouchInsetsButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TouchInsetsButton.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_2_70(OBJC_IVAR____TtC5TeaUI17TouchInsetsButton_touchInsets);
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id TouchInsetsButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TouchInsetsButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for TouchInsetsButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TouchInsetsButton.touchInsets.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TouchInsetsButton.touchInsets.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TouchInsetsButton.touchInsets.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

void sub_1B1554A14(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1B1554A74(v1);
}

void sub_1B1554A40()
{
  OUTLINED_FUNCTION_32();
  sub_1B16B893C();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_62_0();
}

void sub_1B1554A74(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_32();
  sub_1B16B8948();
  OUTLINED_FUNCTION_45();

}

void sub_1B1554AB8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_32();
  v3[5] = sub_1B16B8930();
  OUTLINED_FUNCTION_31();
}

void sub_1B1554B04(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_19(v1);
}

void sub_1B1554B34()
{
  swift_beginAccess();
  sub_1B16B9740();
  OUTLINED_FUNCTION_62_0();
}

void UserActivityManager.__allocating_init(serializer:)(uint64_t a1)
{
  swift_allocObject();
  UserActivityManager.init(serializer:)(a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B1554B9C(uint64_t a1)
{
  return sub_1B155649C(a1, (uint64_t)&unk_1E631B920, (uint64_t)sub_1B1555AB8, (uint64_t)&block_descriptor_38);
}

uint64_t sub_1B1554BB8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1B1554BDC(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t AssociatedConformanceWitness;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint8_t *);
  uint8_t *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint8_t *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  const void *v66;
  char *v67;
  uint64_t (*v68)(uint64_t);
  char *v69;
  uint64_t v70;
  void *v71;
  const void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint8_t *v78;
  void (*v79)(char *, uint64_t, uint8_t *);
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint8_t *v86;
  void (*v87)(char *, uint64_t, uint8_t *);
  uint8_t *v88;
  char *v89;
  uint64_t v90;
  uint8_t *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  id v98;
  void (*v99)(char *, char *, uint8_t *);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void *v105;
  char *v106;
  void (*v107)(char *, char *, uint8_t *);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t (*v113)(uint8_t *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint8_t *);
  void (*v117)(char *, uint8_t *);
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint8_t *v121;
  char *v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t, uint8_t *);
  char *v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t aBlock;
  uint64_t v144;
  void *v145;
  void *v146;
  void *v147;
  char *v148;

  v139 = a5;
  sub_1B13DE608(0, (unint64_t *)&qword_1ED185D60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v113 - v10;
  v134 = sub_1B16B95D8();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134, v12);
  v132 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1B16B9620();
  v130 = *(_QWORD *)(v131 - 8);
  v15 = MEMORY[0x1E0C80A78](v131, v14);
  v129 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)*((_QWORD *)a3 - 1);
  v18 = v17[8];
  v20 = MEMORY[0x1E0C80A78](v15, v19);
  v138 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v124 = (char *)&v113 - v23;
  v25 = MEMORY[0x1E0C80A78](v22, v24);
  v127 = (char *)&v113 - v26;
  v28 = MEMORY[0x1E0C80A78](v25, v27);
  v30 = (char *)&v113 - v29;
  MEMORY[0x1E0C80A78](v28, v31);
  v33 = (char *)&v113 - v32;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v35 = Strong;
    v122 = v11;
    v125 = v18;
    v126 = v30;
    if (qword_1ED1872D8 != -1)
      swift_once();
    v36 = sub_1B16B8BC4();
    v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED190498);
    v137 = (void (*)(char *, uint64_t, uint8_t *))v17[2];
    v137(v33, a2, a3);
    v128 = v37;
    v38 = sub_1B16B8BAC();
    v39 = sub_1B16BA058();
    v40 = os_log_type_enabled(v38, v39);
    v136 = v35;
    v135 = a4;
    if (v40)
    {
      v41 = swift_slowAlloc();
      v123 = (_QWORD *)a2;
      v42 = (uint8_t *)v41;
      v43 = swift_slowAlloc();
      aBlock = v43;
      *(_DWORD *)v42 = 136446210;
      v121 = v42 + 4;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v45 = (*(uint64_t (**)(uint8_t *, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
      *(_QWORD *)&v141 = sub_1B13E208C(v45, v46, &aBlock);
      sub_1B16BA34C();
      swift_bridgeObjectRelease();
      v47 = (void (*)(char *, uint8_t *))v17[1];
      v47(v33, a3);
      _os_log_impl(&dword_1B139E000, v38, v39, "User activity will become current, identifier=%{public}s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v43, -1, -1);
      v48 = v42;
      a2 = (uint64_t)v123;
      MEMORY[0x1B5E1F1FC](v48, -1, -1);
    }
    else
    {
      v47 = (void (*)(char *, uint8_t *))v17[1];
      ((void (*)(_QWORD *__return_ptr, char *, uint8_t *))v47)(&qword_1B16D0000, v33, a3);
    }

    v49 = (void *)sub_1B1557438(a2, 0);
    v117 = v47;
    v50 = v49;
    v123 = v17;
    v51 = v50;
    sub_1B1554A74(v49);
    v52 = v139;
    v53 = v135;
    v54 = swift_getAssociatedConformanceWitness();
    v55 = *(uint64_t (**)(uint8_t *, uint64_t))(v54 + 32);
    v114 = v54;
    v113 = v55;
    v56 = ((uint64_t (*)(uint8_t *))v55)(a3);
    v58 = v57;
    swift_beginAccess();
    v59 = v51;
    sub_1B148A824((uint64_t)v59, v56, v58);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1B13A1BE4(0, (unint64_t *)&qword_1ED188560);
    v138 = (char *)sub_1B16BA0DC();
    v60 = v126;
    v137(v126, a2, a3);
    v61 = v123;
    v62 = *((unsigned __int8 *)v123 + 80);
    v119 = ~v62;
    v63 = (v62 + 48) & ~v62;
    v118 = v62;
    v115 = v62 | 7;
    v64 = (char *)swift_allocObject();
    *((_QWORD *)v64 + 2) = a3;
    *((_QWORD *)v64 + 3) = v53;
    *((_QWORD *)v64 + 4) = v52;
    *((_QWORD *)v64 + 5) = v59;
    v116 = (void (*)(char *, char *, uint8_t *))v61[4];
    v116(&v64[v63], v60, a3);
    v147 = sub_1B1558324;
    v148 = v64;
    aBlock = MEMORY[0x1E0C809B0];
    v144 = 1107296256;
    v145 = sub_1B13F00E4;
    v146 = &block_descriptor_36_0;
    v65 = _Block_copy(&aBlock);
    v121 = a3;
    v66 = v65;
    v120 = v59;
    swift_release();
    v67 = v129;
    sub_1B16B95F0();
    aBlock = MEMORY[0x1E0DEE9D8];
    v68 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1B13DE608(0, (unint64_t *)&qword_1ED183708, v68);
    sub_1B13FF51C((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v68);
    v69 = v132;
    v70 = v134;
    sub_1B16BA448();
    v71 = v138;
    MEMORY[0x1B5E1DA80](0, v67, v69, v66);
    v72 = v66;
    v73 = v139;
    _Block_release(v72);

    (*(void (**)(char *, uint64_t))(v133 + 8))(v69, v70);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v67, v131);
    v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 80))(a2, v53, v73);
    if (v74)
    {
      v75 = (void *)v74;
      v76 = v127;
      v123 = (_QWORD *)a2;
      v77 = a2;
      v78 = v121;
      v79 = v137;
      v137(v127, v77, v121);
      v80 = sub_1B16B8BAC();
      v81 = sub_1B16BA058();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = (uint8_t *)swift_slowAlloc();
        v83 = swift_slowAlloc();
        aBlock = v83;
        *(_DWORD *)v82 = 136446210;
        v84 = v113(v78, v114);
        *(_QWORD *)&v141 = sub_1B13E208C(v84, v85, &aBlock);
        sub_1B16BA34C();
        swift_bridgeObjectRelease();
        v117(v76, v78);
        _os_log_impl(&dword_1B139E000, v80, v81, "User activity will donate interaction for %{public}s", v82, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B5E1F1FC](v83, -1, -1);
        v86 = v82;
        v73 = v139;
        v87 = v137;
        MEMORY[0x1B5E1F1FC](v86, -1, -1);
      }
      else
      {
        v87 = v79;
        v117(v76, v78);
      }

      v98 = v120;
      v99 = v116;
      v100 = v118;
      v101 = v126;
      v87(v126, (uint64_t)v123, v78);
      v102 = (v100 + 40) & v119;
      v103 = (char *)swift_allocObject();
      v104 = v135;
      *((_QWORD *)v103 + 2) = v78;
      *((_QWORD *)v103 + 3) = v104;
      *((_QWORD *)v103 + 4) = v73;
      v99(&v103[v102], v101, v78);
      v147 = sub_1B1558510;
      v148 = v103;
      aBlock = MEMORY[0x1E0C809B0];
      v144 = 1107296256;
      v145 = sub_1B1555FF4;
      v146 = &block_descriptor_46;
      v105 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v75, sel_donateInteractionWithCompletion_, v105);
      swift_release();

      _Block_release(v105);
    }
    else
    {
      v88 = v121;
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v73 + 88))(&v141, a2, v53, v73);
      if (v142)
      {
        sub_1B13C06D0(&v141, (uint64_t)&aBlock);
        v89 = v124;
        v123 = (_QWORD *)a2;
        v90 = a2;
        v91 = v88;
        v137(v124, v90, v88);
        v92 = sub_1B16B8BAC();
        v93 = sub_1B16BA058();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = (uint8_t *)swift_slowAlloc();
          v95 = swift_slowAlloc();
          *(_QWORD *)&v141 = v95;
          *(_DWORD *)v94 = 136446210;
          v96 = v113(v88, v114);
          v140 = sub_1B13E208C(v96, v97, (uint64_t *)&v141);
          sub_1B16BA34C();
          swift_bridgeObjectRelease();
          v117(v89, v88);
          _os_log_impl(&dword_1B139E000, v92, v93, "User activity will donate app intent for %{public}s", v94, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1B5E1F1FC](v95, -1, -1);
          MEMORY[0x1B5E1F1FC](v94, -1, -1);
        }
        else
        {
          v117(v89, v88);
        }

        v106 = v126;
        v107 = v116;
        v108 = sub_1B16B9CF8();
        v109 = (uint64_t)v122;
        __swift_storeEnumTagSinglePayload((uint64_t)v122, 1, 1, v108);
        sub_1B13B4DC0((uint64_t)&aBlock, (uint64_t)&v141);
        v137(v106, (uint64_t)v123, v91);
        v110 = (v118 + 96) & v119;
        v111 = (char *)swift_allocObject();
        *((_QWORD *)v111 + 2) = 0;
        *((_QWORD *)v111 + 3) = 0;
        v112 = v135;
        *((_QWORD *)v111 + 4) = v91;
        *((_QWORD *)v111 + 5) = v112;
        *((_QWORD *)v111 + 6) = v139;
        sub_1B13C06D0(&v141, (uint64_t)(v111 + 56));
        v107(&v111[v110], v106, v91);
        sub_1B14EF5B4(v109, (uint64_t)&unk_1EEF33620, (uint64_t)v111);

        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      }
      else
      {
        swift_release();

        sub_1B1558354((uint64_t)&v141, &qword_1ED185F48, (uint64_t (*)(uint64_t))sub_1B1558394);
      }
    }
  }
}

uint64_t sub_1B1555AB8()
{
  return sub_1B1558330((uint64_t (*)(_QWORD, uint64_t))sub_1B1554BDC);
}

void sub_1B1555AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v18[1] = a4;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = (void *)MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v7, sel_becomeCurrent);
  if (qword_1ED1872D8 != -1)
    swift_once();
  v10 = sub_1B16B8BC4();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED190498);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, a3);
  v11 = sub_1B16B8BAC();
  v12 = sub_1B16BA058();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v18[0] = v13 + 4;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
    v18[2] = sub_1B13E208C(v16, v17, &v19);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
    _os_log_impl(&dword_1B139E000, v11, v12, "User activity did become current, identifier=%{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v14, -1, -1);
    MEMORY[0x1B5E1F1FC](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
  }

}

void sub_1B1555CEC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
  {
    v10 = a1;
    if (qword_1ED1872D8 != -1)
      swift_once();
    v11 = sub_1B16B8BC4();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED190498);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, a3);
    v12 = a1;
    v13 = a1;
    v14 = sub_1B16B8BAC();
    v15 = sub_1B16BA040();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v16 = 136446466;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
      v26 = sub_1B13E208C(v18, v19, &v27);
      sub_1B16BA34C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
      *(_WORD *)(v16 + 12) = 2114;
      v20 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v26 = v21;
      sub_1B16BA34C();
      v22 = v24;
      *v24 = v21;

      _os_log_impl(&dword_1B139E000, v14, v15, "User activity failed to donate interaction for %{public}s, error=%{public}@", (uint8_t *)v16, 0x16u);
      sub_1B1558290(0, &qword_1ED183900, (unint64_t *)&qword_1ED1838F0);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v22, -1, -1);
      v23 = v25;
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v23, -1, -1);
      MEMORY[0x1B5E1F1FC](v16, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
    }
  }
}

void sub_1B1555FF4(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1B1556048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  v8[9] = *(_QWORD *)(a6 - 8);
  v8[10] = swift_task_alloc();
  v9 = sub_1B16B7808();
  v8[11] = v9;
  v8[12] = *(_QWORD *)(v9 - 8);
  v8[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B15560CC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 32), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_1B1556144;
  return sub_1B16B77FC();
}

uint64_t sub_1B1556144()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    OUTLINED_FUNCTION_23_25(*(_QWORD *)(v2 + 96));
  return swift_task_switch();
}

uint64_t sub_1B15561B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_17();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B15561E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  NSObject *log;
  uint64_t v25;

  if (qword_1ED1872D8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = sub_1B16B8BC4();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED190498);
  OUTLINED_FUNCTION_119(v2, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v6 = v1;
  v7 = v1;
  v8 = sub_1B16B8BAC();
  v9 = sub_1B16BA040();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  if (v10)
  {
    log = v8;
    v14 = *(_QWORD *)(v0 + 48);
    v15 = OUTLINED_FUNCTION_11_3();
    v23 = (_QWORD *)OUTLINED_FUNCTION_11_3();
    v25 = OUTLINED_FUNCTION_11_3();
    *(_DWORD *)v15 = 136446466;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v14, AssociatedConformanceWitness);
    *(_QWORD *)(v0 + 16) = sub_1B13E208C(v17, v18, &v25);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    *(_WORD *)(v15 + 12) = 2114;
    v19 = v11;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v20;
    sub_1B16BA34C();
    *v23 = v20;
    OUTLINED_FUNCTION_5_61();
    OUTLINED_FUNCTION_5_61();
    _os_log_impl(&dword_1B139E000, log, v9, "User activity failed to donate app intent for %{public}s, error=%{public}@", (uint8_t *)v15, 0x16u);
    sub_1B1558290(0, &qword_1ED183900, (unint64_t *)&qword_1ED1838F0);
    OUTLINED_FUNCTION_27_25();
    OUTLINED_FUNCTION_3_29();
  }
  v21 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_5_61();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v21);
  OUTLINED_FUNCTION_5_61();
  OUTLINED_FUNCTION_5_61();

  OUTLINED_FUNCTION_34_17();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B1556480(uint64_t a1)
{
  return sub_1B155649C(a1, (uint64_t)&unk_1E631B970, (uint64_t)sub_1B1556CF8, (uint64_t)&block_descriptor_10_1);
}

uint64_t sub_1B155649C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v31 = a3;
  v32 = a4;
  v30[1] = a2;
  v6 = (_QWORD *)*v4;
  v34 = sub_1B16B95D8();
  v37 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = sub_1B16B9620();
  v35 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v18 = v6[10];
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](v21, v22);
  v33 = *(_QWORD *)((char *)v4 + v6[16]);
  v23 = OUTLINED_FUNCTION_25();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v18);
  v24 = (*(unsigned __int8 *)(v19 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = v18;
  *((_QWORD *)v25 + 3) = v6[11];
  *((_QWORD *)v25 + 4) = v6[12];
  *((_QWORD *)v25 + 5) = v23;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v25[v24], (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  aBlock[4] = v31;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = v32;
  v26 = _Block_copy(aBlock);
  swift_retain();
  sub_1B16B95F0();
  v38 = MEMORY[0x1E0DEE9D8];
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B13DE608(0, (unint64_t *)&qword_1ED183708, v27);
  sub_1B13FF51C((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v27);
  v28 = v34;
  sub_1B16BA448();
  MEMORY[0x1B5E1DA80](0, v17, v11, v26);
  _Block_release(v26);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v11, v28);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v17, v36);
  swift_release();
  return swift_release();
}

uint64_t sub_1B1556730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t AssociatedConformanceWitness;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  char v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;
  char *v47;
  uint64_t (*v48)(uint64_t);
  char *v49;
  uint64_t v50;
  _QWORD v51[2];
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t aBlock[6];

  v61 = a4;
  v62 = a5;
  v64 = a2;
  v6 = sub_1B16B95D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B16B9620();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a3 - 8);
  v19 = MEMORY[0x1E0C80A78](v14, v18);
  v59 = v20;
  v60 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v21);
  v23 = (char *)v51 - v22;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v63 = result;
  if (result)
  {
    v53 = v16;
    v55 = v11;
    v58 = v6;
    if (qword_1ED1872D8 != -1)
      swift_once();
    v25 = sub_1B16B8BC4();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED190498);
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v52(v23, v64, a3);
    v26 = sub_1B16B8BAC();
    v27 = sub_1B16BA058();
    v28 = os_log_type_enabled(v26, v27);
    v56 = v10;
    v57 = v7;
    v54 = v12;
    if (v28)
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      aBlock[0] = v30;
      *(_DWORD *)v29 = 136446210;
      v51[1] = v29 + 4;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
      v65 = sub_1B13E208C(v32, v33, aBlock);
      sub_1B16BA34C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v23, a3);
      _os_log_impl(&dword_1B139E000, v26, v27, "User activity will resign current, identifier=%{public}s)", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E1F1FC](v30, -1, -1);
      MEMORY[0x1B5E1F1FC](v29, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v23, a3);

      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    }
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
    swift_beginAccess();
    sub_1B148A308();
    v35 = v34;
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1B1554A40();
    v37 = v36;
    if (v35)
    {
      if (!v36)
        goto LABEL_14;
      sub_1B13A1BE4(0, &qword_1ED188540);
      v38 = v35;
      v39 = sub_1B16BA214();

      if ((v39 & 1) == 0)
        goto LABEL_14;
    }
    else if (v36)
    {

LABEL_14:
      sub_1B13A1BE4(0, (unint64_t *)&qword_1ED188560);
      v40 = (void *)sub_1B16BA0DC();
      v41 = v60;
      v52(v60, v64, a3);
      v42 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v43 = (char *)swift_allocObject();
      v44 = v61;
      *((_QWORD *)v43 + 2) = a3;
      *((_QWORD *)v43 + 3) = v44;
      *((_QWORD *)v43 + 4) = v62;
      *((_QWORD *)v43 + 5) = v35;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v43[v42], v41, a3);
      aBlock[4] = (uint64_t)sub_1B15582E4;
      aBlock[5] = (uint64_t)v43;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B13F00E4;
      aBlock[3] = (uint64_t)&block_descriptor_30_0;
      v45 = _Block_copy(aBlock);
      v46 = v35;
      swift_release();
      v47 = v53;
      sub_1B16B95F0();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      v48 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1B13DE608(0, (unint64_t *)&qword_1ED183708, v48);
      sub_1B13FF51C((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v48);
      v49 = v56;
      v50 = v58;
      sub_1B16BA448();
      MEMORY[0x1B5E1DA80](0, v47, v49, v45);
      _Block_release(v45);

      swift_release();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v47, v55);
    }
    sub_1B1554A74(0);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1B1556CF8()
{
  return sub_1B1558330((uint64_t (*)(_QWORD, uint64_t))sub_1B1556730);
}

void sub_1B1556D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v18[1] = a4;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = (void *)MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v7, sel_resignCurrent);
  if (qword_1ED1872D8 != -1)
    swift_once();
  v10 = sub_1B16B8BC4();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED190498);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, a3);
  v11 = sub_1B16B8BAC();
  v12 = sub_1B16BA058();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v18[0] = v13 + 4;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
    v18[2] = sub_1B13E208C(v16, v17, &v19);
    sub_1B16BA34C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
    _os_log_impl(&dword_1B139E000, v11, v12, "User activity did resign current, identifier=%{public}s)", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E1F1FC](v14, -1, -1);
    MEMORY[0x1B5E1F1FC](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
  }

}

uint64_t sub_1B1556F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  sub_1B13DE608(0, (unint64_t *)&qword_1ED185D60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = (char *)v11 - v2;
  v4 = sub_1B16B9CF8();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v4);
  v5 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    sub_1B1558354((uint64_t)v3, (unint64_t *)&qword_1ED185D60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
    v6 = 0;
    v7 = 0;
  }
  else
  {
    sub_1B16B9CEC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    if (*(_QWORD *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v6 = sub_1B16B9CA4();
      v7 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      v6 = 0;
      v7 = 0;
    }
  }
  v9 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v9 + 16) = &unk_1EEF33580;
  *(_QWORD *)(v9 + 24) = v5;
  if (v7 | v6)
  {
    v11[0] = 0;
    v11[1] = 0;
    v11[2] = v6;
    v11[3] = v7;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1B15570E8()
{
  return swift_task_switch();
}

uint64_t sub_1B15570FC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[2] = v0;
  v0[3] = sub_1B1557194;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1B1557264;
  v3[3] = &block_descriptor_24_0;
  v3[4] = v2;
  objc_msgSend(v1, sel_deleteAllSavedUserActivitiesWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1B1557194()
{
  return swift_task_switch();
}

uint64_t sub_1B15571E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B15571E8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B155720C()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_35_17(v0);
  OUTLINED_FUNCTION_26_23(v1);
  return sub_1B15570E8();
}

uint64_t sub_1B1557264(uint64_t a1)
{
  return j__swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

void sub_1B1557270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1, a1);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(_QWORD *)(v2 + v4[16]);
  OUTLINED_FUNCTION_119((uint64_t)v8, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v10 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = (v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v5;
  v13 = v4[11];
  v12[3] = v13;
  v14 = v4[12];
  v12[4] = v14;
  OUTLINED_FUNCTION_119((uint64_t)v12 + v10, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  *(_QWORD *)((char *)v12 + v11) = a2;
  sub_1B13A1BE4(0, &qword_1ED188540);
  type metadata accessor for UserActivityManager(0, v5, v13, v14);
  sub_1B16B9740();
  sub_1B16B8A74();
  swift_release();
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15573B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1B1557438(a2, a3);
  if (!v3)
  {
    sub_1B1558290(0, &qword_1EEF33610, &qword_1ED188540);
    swift_allocObject();
    return sub_1B16B89F0();
  }
  return result;
}

uint64_t sub_1B1557438(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v4 = (uint64_t)v2;
  v78 = a2;
  v6 = (_QWORD *)*v2;
  sub_1B13DE608(0, (unint64_t *)&qword_1ED188A30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v7, v8);
  v73 = (char *)&v69 - v9;
  v10 = v6[11];
  v11 = v6[10];
  v74 = v6[12];
  v75 = v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v71 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v72 = AssociatedTypeWitness;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v14, v15);
  v70 = (char *)&v69 - v16;
  v77 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_77();
  v21 = v20 - v19;
  v22 = sub_1B16B9650();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v24);
  OUTLINED_FUNCTION_22_14();
  v25 = *(void **)(v4 + v6[16]);
  *v3 = v25;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v3, *MEMORY[0x1E0DEF740], v22);
  v26 = v25;
  LOBYTE(v25) = sub_1B16B9674();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8))(v3, v22);
  if ((v25 & 1) != 0)
  {
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v11, AssociatedConformanceWitness);
    v30 = v29;
    v76 = v4;
    sub_1B1554B34();
    sub_1B146ADDC(v28, v30, v31);
    v33 = v32;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_0();
    v34 = v77;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v21, a1, v11);
    v69 = AssociatedConformanceWitness;
    if (!v33)
    {
      sub_1B13A1BE4(0, &qword_1ED188540);
      v35 = v70;
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v11, AssociatedConformanceWitness);
      v36 = v72;
      swift_getAssociatedConformanceWitness();
      sub_1B16B9AF4();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v36);
      v33 = sub_1B155799C();
    }
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v21, v11);
    v37 = v79;
    v38 = sub_1B1557A0C(v78, v76, a1);
    if (v37)
    {

    }
    else
    {
      v39 = v38;
      v79 = 0;
      sub_1B1557A70(v38);
      v40 = (void *)sub_1B16B96EC();
      v41 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_20_31(v41, sel_setUserInfo_);

      sub_1B149B214(v39);
      v42 = (void *)sub_1B16B9D58();
      v43 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_20_31(v43, sel_setRequiredUserInfoKeys_);

      v44 = v74;
      v45 = OUTLINED_FUNCTION_11_37();
      v46(v45);
      v47 = (void *)sub_1B16B983C();
      v48 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_20_31(v48, sel_setTitle_);

      v49 = OUTLINED_FUNCTION_11_37();
      v51 = v50(v49);
      sub_1B142AC18(v51);
      v52 = (void *)sub_1B16B9D58();
      v53 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_19_31(v53, sel_setKeywords_);

      v54 = (uint64_t)v73;
      v55 = OUTLINED_FUNCTION_11_37();
      v56(v55);
      v57 = sub_1B16B7AE4();
      v58 = 0;
      if (__swift_getEnumTagSinglePayload(v54, 1, v57) != 1)
      {
        v58 = (void *)sub_1B16B7A78();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v54, v57);
      }
      objc_msgSend(v33, sel_setWebpageURL_, v58, v69);

      v59 = v75;
      v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 72))(a1, v75, v44);
      OUTLINED_FUNCTION_19_31((uint64_t)v60, sel_setContentAttributeSet_);

      v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(a1, v59, v44);
      v62 = v69;
      if (v63)
      {
        v64 = (void *)sub_1B16B983C();
        v61 = OUTLINED_FUNCTION_7_0();
      }
      else
      {
        v64 = 0;
      }
      OUTLINED_FUNCTION_19_31(v61, sel_setPersistentIdentifier_);

      (*(void (**)(uint64_t, uint64_t))(v62 + 40))(v11, v62);
      v65 = OUTLINED_FUNCTION_22_22(0);
      OUTLINED_FUNCTION_15_27(v65, sel_setEligibleForSearch_);
      v66 = OUTLINED_FUNCTION_22_22(1);
      OUTLINED_FUNCTION_15_27(v66, sel_setEligibleForHandoff_);
      v67 = OUTLINED_FUNCTION_22_22(2);
      OUTLINED_FUNCTION_15_27(v67, sel_setEligibleForPublicIndexing_);
      v68 = OUTLINED_FUNCTION_22_22(3);
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_setEligibleForPrediction_, v68 & 1);
      objc_msgSend(v33, sel_setNeedsSave_, 1);
    }
    return (uint64_t)v33;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B155799C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithActivityType_, v1);

  return v2;
}

uint64_t sub_1B1557A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  if (a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 64))(a3, a1, *(_QWORD *)(*(_QWORD *)a2 + 88));
  else
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v3 + 56))(a3, *(_QWORD *)(*(_QWORD *)a2 + 88), v3);
}

uint64_t sub_1B1557A70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1B15581A8();
    v2 = sub_1B16BA790();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  sub_1B16B9740();
  result = swift_retain();
  v8 = 0;
  if (!v5)
    goto LABEL_9;
LABEL_8:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v10 = v9 | (v8 << 6);
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    sub_1B14297B8(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v40);
    *(_QWORD *)&v39 = v17;
    *((_QWORD *)&v39 + 1) = v16;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v17;
    *((_QWORD *)&v37[0] + 1) = v16;
    sub_1B16B9740();
    swift_dynamicCast();
    sub_1B143D3E0(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1B143D3E0(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1B143D3E0(v36, v37);
    sub_1B143D3E0(v37, &v33);
    result = sub_1B16BA508();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v6 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v26 = *(_QWORD *)(v2 + 48) + 40 * v21;
    *(_OWORD *)v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    *(_QWORD *)(v26 + 32) = v31;
    result = (uint64_t)sub_1B143D3E0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v21));
    ++*(_QWORD *)(v2 + 16);
    if (v5)
      goto LABEL_8;
LABEL_9:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_38;
    if (v11 >= v27)
      goto LABEL_36;
    v12 = *(_QWORD *)(v28 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_36;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_36;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_36;
          v12 = *(_QWORD *)(v28 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v8 = v13;
  }
  v14 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_36:
    swift_release();
    sub_1B1488298();
    return v2;
  }
  v12 = *(_QWORD *)(v28 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v27)
      goto LABEL_36;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
  return result;
}

void UserActivityManager.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_25(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8));

  OUTLINED_FUNCTION_0_0();
}

uint64_t UserActivityManager.__deallocating_deinit()
{
  UserActivityManager.deinit();
  return swift_deallocClassInstance();
}

void sub_1B1557EA4()
{
  sub_1B1554A40();
}

void sub_1B1557EC4(void *a1)
{
  sub_1B1554A74(a1);
}

void (*sub_1B1557EE4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1B1554AB8(v2);
  v2[4] = v3;
  return sub_1B13E3774;
}

uint64_t sub_1B1557F2C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)OUTLINED_FUNCTION_35_17(v2);
  v4 = OUTLINED_FUNCTION_26_23(v3);
  return v6(v4);
}

uint64_t sub_1B1557F84()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_5_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B1557FAC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B1557FD0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1B1554A40();
  *a1 = v2;
}

uint64_t sub_1B1557FFC()
{
  return 24;
}

__n128 sub_1B1558008(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for UserActivityManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserActivityManager.stateRestorationActivity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of UserActivityManager.stateRestorationActivity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of UserActivityManager.stateRestorationActivity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of UserActivityManager.__allocating_init(serializer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of UserActivityManager.registerCurrentActivity(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of UserActivityManager.deregisterActivity(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of UserActivityManager.clearAllSavedUserActivities()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_1B155807C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return sub_1B16B9740();
  return result;
}

uint64_t destroy for BlueprintPipelineError(uint64_t a1)
{
  return sub_1B15580A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1B15580A4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s5TeaUI22BlueprintPipelineErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B155807C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BlueprintPipelineError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B155807C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B15580A4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BlueprintPipelineError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B15580A4(v4, v5, v6);
  return a1;
}

uint64_t type metadata accessor for UserActivityManager.DeserializationError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserActivityManager.DeserializationError);
}

void sub_1B15581A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED183938)
  {
    v0 = sub_1B16BA79C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED183938);
  }
}

uint64_t sub_1B1558204()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_27();
  OUTLINED_FUNCTION_23_25(v0);
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_10_42();
}

uint64_t sub_1B1558250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1B15573B4(a1, v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1B1558290(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v4 = sub_1B13A1BE4(255, a3);
    v5 = OUTLINED_FUNCTION_188(v4);
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B15582E4()
{
  return sub_1B1558330((uint64_t (*)(_QWORD, uint64_t))sub_1B1556D04);
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_57();

  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_135();
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B1558324()
{
  return sub_1B1558330((uint64_t (*)(_QWORD, uint64_t))sub_1B1555AC4);
}

uint64_t sub_1B1558330(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 40), v1 + ((v2 + 48) & ~v2));
}

void sub_1B1558354(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1B13DE608(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1B1558394()
{
  unint64_t result;

  result = qword_1ED185880;
  if (!qword_1ED185880)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED185880);
  }
  return result;
}

uint64_t sub_1B15583E8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_135();
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B155843C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[6];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v5 = v0[2];
  v6 = v0[3];
  v7 = (uint64_t)(v0 + 7);
  v8 = (uint64_t)v0 + ((v4 + 96) & ~v4);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_35_17(v9);
  v11 = OUTLINED_FUNCTION_26_23(v10);
  return sub_1B1556048(v11, v5, v6, v7, v8, v1, v2, v3);
}

uint64_t sub_1B15584D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_27();
  OUTLINED_FUNCTION_23_25(v0);
  return OUTLINED_FUNCTION_10_42();
}

void sub_1B1558510(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_1B1555CEC(a1, v1 + ((v3 + 40) & ~v3), v2);
}

void sub_1B1558530()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17E280)
  {
    sub_1B1558290(255, &qword_1ED1837D0, &qword_1ED188540);
    v0 = sub_1B16B8954();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED17E280);
  }
}

uint64_t PillViewImageRequestFactory.createImageRequest(assetHandles:screenScale:size:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, uint64_t a4@<D1>, uint64_t a5@<D2>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11;
  uint64_t v12;
  _BYTE v13[40];

  sub_1B1558690(a1, (uint64_t)&v11, a3);
  if (v12)
  {
    sub_1B13C06D0(&v11, (uint64_t)v13);
    sub_1B13B4DC0((uint64_t)v13, (uint64_t)&v11);
    v8 = type metadata accessor for ProcessedImageRequest();
    swift_allocObject();
    v9 = ProcessedImageRequest.init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(&v11, a4, a5, 0, 2);
    *(_QWORD *)(a2 + 24) = v8;
    *(_QWORD *)(a2 + 32) = &protocol witness table for ProcessedImageRequest;
    *(_QWORD *)a2 = v9;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    result = sub_1B15586C4((uint64_t)&v11);
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B1558690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (a3 < 0.0 || a3 > 1.0)
  {
    if (a3 < 1.0 || a3 > 2.0)
      a1 += 80;
    else
      a1 += 40;
  }
  return sub_1B13B4DC0(a1, a2);
}

uint64_t sub_1B15586C4(uint64_t a1)
{
  uint64_t v2;

  sub_1B1558700();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B1558700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF33628)
  {
    sub_1B14EB2CC();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF33628);
  }
}

double PillViewImageRequestFactory.createImageRequest(iconURL:size:)@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t PillViewImageRequestFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PillViewImageRequestFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B155877C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, uint64_t a4@<D1>, uint64_t a5@<D2>)
{
  return PillViewImageRequestFactory.createImageRequest(assetHandles:screenScale:size:)(a1, a2, a3, a4, a5);
}

double sub_1B1558790@<D0>(uint64_t a1@<X8>)
{
  return PillViewImageRequestFactory.createImageRequest(iconURL:size:)(a1);
}

uint64_t dispatch thunk of PillViewImageRequestFactoryType.createImageRequest(assetHandles:screenScale:size:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PillViewImageRequestFactoryType.createImageRequest(iconURL:size:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for PillViewImageRequestFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for PillViewImageRequestFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1B15587E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t Debounce.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  swift_release();

  return v0;
}

uint64_t Debounce.__deallocating_deinit()
{
  Debounce.deinit();
  OUTLINED_FUNCTION_30_1();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1558854()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_30_1();
  return swift_deallocObject();
}

uint64_t method lookup function for Debounce()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Debounce.__allocating_init(delay:block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t BlueprintCompositionalLayoutOptions.sectionHeaderLayoutOptions.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *a1 = *(_QWORD *)v1;
  a1[1] = v3;
  return OUTLINED_FUNCTION_1_85(v2, v3, *(_BYTE *)(v1 + 16), (uint64_t)a1);
}

uint64_t BlueprintCompositionalLayoutOptions.supplementaryHeaderLayoutOptions.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return OUTLINED_FUNCTION_1_85(v2, v3, *(_BYTE *)(v1 + 40), (uint64_t)a1);
}

uint64_t BlueprintCompositionalLayoutOptions.supplementaryFooterLayoutOptions.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return OUTLINED_FUNCTION_1_85(v2, v3, *(_BYTE *)(v1 + 64), (uint64_t)a1);
}

uint64_t BlueprintCompositionalLayoutOptions.supplementariesFollowContentInsets.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 121);
}

void BlueprintCompositionalLayoutOptions.init(sectionContentInsets:interGroupSpacing:supplementaryHeaderLayoutOptions:supplementaryFooterLayoutOptions:interSectionSpacing:supplementariesFollowContentInsets:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>)
{
  char v11;
  char v12;

  v11 = *(_BYTE *)(a1 + 16);
  v12 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a6 = 0;
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 2;
  *(_OWORD *)(a6 + 24) = *(_OWORD *)a1;
  *(_BYTE *)(a6 + 40) = v11;
  *(_OWORD *)(a6 + 48) = *(_OWORD *)a2;
  *(_BYTE *)(a6 + 64) = v12;
  *(double *)(a6 + 72) = a7;
  *(double *)(a6 + 80) = a8;
  *(double *)(a6 + 88) = a9;
  *(double *)(a6 + 96) = a10;
  *(double *)(a6 + 104) = a11;
  *(_QWORD *)(a6 + 112) = a3;
  *(_BYTE *)(a6 + 120) = a4 & 1;
  *(_BYTE *)(a6 + 121) = a5;
  OUTLINED_FUNCTION_3_59();
}

void static BlueprintCompositionalLayoutOptions.zero.getter(void *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[16];

  if (qword_1ED185228 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_99(v10);
  v2 = OUTLINED_FUNCTION_0_99(a1);
  OUTLINED_FUNCTION_4_58((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10[0]);
  OUTLINED_FUNCTION_2_71();
}

uint64_t sub_1B1558978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 64);
  sub_1B14267E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1B14267E4(v2, v3, v6);
  sub_1B14267E4(v4, v5, v7);
  return a1;
}

void sub_1B15589F0()
{
  qword_1ED17D3A0 = 0;
  *(_QWORD *)algn_1ED17D3A8 = 0;
  byte_1ED17D3B0 = 2;
  qword_1ED17D3B8 = 0;
  unk_1ED17D3C0 = 0;
  byte_1ED17D3C8 = 2;
  qword_1ED17D3D0 = 0;
  unk_1ED17D3D8 = 0;
  byte_1ED17D3E0 = 2;
  unk_1ED17D3E8 = xmmword_1B16D0850;
  unk_1ED17D3F8 = xmmword_1B16D0850;
  qword_1ED17D408 = 0;
  unk_1ED17D410 = 0;
  word_1ED17D418 = 1;
  OUTLINED_FUNCTION_3_59();
}

void static BlueprintCompositionalLayoutOptions.regular.getter(void *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[16];

  if (qword_1ED17D420 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_99(v10);
  v2 = OUTLINED_FUNCTION_0_99(a1);
  OUTLINED_FUNCTION_4_58((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10[0]);
  OUTLINED_FUNCTION_2_71();
}

uint64_t initializeBufferWithCopyOfBuffer for BlueprintCompositionalLayoutSectionSupplementaryViewOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B1558AD8(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1B1558E40);
}

uint64_t *assignWithCopy for BlueprintCompositionalLayoutSectionSupplementaryViewOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B1558B34(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1B1558E40, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1558E44);
}

uint64_t *assignWithTake for BlueprintCompositionalLayoutSectionSupplementaryViewOptions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1558BA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1558E44);
}

void type metadata accessor for BlueprintCompositionalLayoutSectionSupplementaryViewOptions()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B1558AD8(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for BlueprintCompositionalLayoutSectionHeaderOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B1558B34(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1B14267E4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B14262CC);
}

uint64_t *sub_1B1558B34(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for BlueprintCompositionalLayoutSectionHeaderOptions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1558BA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B14262CC);
}

uint64_t *sub_1B1558BA0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for BlueprintCompositionalLayoutOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1B14267E4(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1B14262CC(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 40);
  sub_1B14267E4(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  v15 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v12;
  sub_1B14262CC(v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  v18 = *(_BYTE *)(a2 + 64);
  sub_1B14267E4(v16, v17, v18);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v17;
  v21 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v18;
  sub_1B14262CC(v19, v20, v21);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v22 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v22;
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  return a1;
}

void *__swift_memcpy122_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x7AuLL);
}

uint64_t assignWithTake for BlueprintCompositionalLayoutOptions(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1B14262CC(v5, v6, v7);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1B14262CC(v9, v10, v11);
  v12 = *(_BYTE *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v15 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v12;
  sub_1B14262CC(v13, v14, v15);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintCompositionalLayoutOptions(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 122))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 121);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintCompositionalLayoutOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 122) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 122) = 0;
    if (a2)
      *(_BYTE *)(result + 121) = a2 + 1;
  }
  return result;
}

uint64_t dispatch thunk of Prewarmable.prewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Prewarmable.cancelPrewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t BlueprintActiveImpression.startTrigger.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 60));
  return result;
}

double BlueprintActiveImpression.frame.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 68));
}

uint64_t _s5TeaUI25BlueprintActiveImpressionV9startDate10Foundation0G0Vvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_43();
  v0 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t _s5TeaUI25BlueprintActiveImpressionV17sessionIdentifierSSvg_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 64));
  sub_1B16B9740();
  return v2;
}

uint64_t sub_1B1558EF8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2 + 2;
    v8 = a2[5];
    sub_1B16B9740();
    if (v8)
    {
      *(_QWORD *)(a1 + 40) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, (uint64_t)(a2 + 2), v8);
    }
    else
    {
      v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v7;
      *(_OWORD *)(a1 + 32) = v11;
    }
    type metadata accessor for Blueprint();
  }
  v9 = *a2;
  *(_QWORD *)a1 = *a2;
  v10 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v10;
}

void sub_1B1559178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 40) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
LABEL_8:
  type metadata accessor for Blueprint();
}

void sub_1B1559238()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1559264(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v25, v23, v8);
  v9 = *(int *)(v6 + 60);
  v24 = v2 + v9;
  v26 = v1 + v9;
  v28 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v28);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v28);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v26, v24, v11);
  *(_QWORD *)(v1 + *(int *)(v27 + 64)) = *(_QWORD *)(v2 + *(int *)(v27 + 64));
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(v1 + v3[13], v2 + v3[13], v4);
  v12 = v3[14];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = sub_1B16B7BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_BYTE *)(v1 + v3[15]) = *(_BYTE *)(v2 + v3[15]);
  v16 = v3[16];
  v17 = (_QWORD *)(v1 + v16);
  v18 = (_QWORD *)(v2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v19 = v3[17];
  v20 = (_QWORD *)(v1 + v19);
  v21 = (_QWORD *)(v2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v20[3] = v21[3];
  return v1;
}

void sub_1B1559434(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  type metadata accessor for Blueprint();
}

void sub_1B155948C()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15594B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v24, v22, v8);
  v9 = *(int *)(v6 + 60);
  v23 = v2 + v9;
  v25 = v1 + v9;
  v27 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v27);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v27);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v25, v23, v11);
  *(_QWORD *)(v1 + *(int *)(v26 + 64)) = *(_QWORD *)(v2 + *(int *)(v26 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v1 + v3[13], v2 + v3[13], v4);
  v12 = v3[14];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = sub_1B16B7BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v3[16];
  *(_BYTE *)(v1 + v3[15]) = *(_BYTE *)(v2 + v3[15]);
  *(_OWORD *)(v1 + v16) = *(_OWORD *)(v2 + v16);
  v17 = v3[17];
  v18 = (_OWORD *)(v1 + v17);
  v19 = (_OWORD *)(v2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  return v1;
}

void sub_1B155963C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  type metadata accessor for Blueprint();
}

void sub_1B15596B0()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15596DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v28, v26, v8);
  v9 = *(int *)(v6 + 60);
  v27 = v2 + v9;
  v29 = v1 + v9;
  v31 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v31);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v31);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v29, v27, v11);
  *(_QWORD *)(v1 + *(int *)(v30 + 64)) = *(_QWORD *)(v2 + *(int *)(v30 + 64));
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v1 + v3[13], v2 + v3[13], v4);
  v12 = v3[14];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = sub_1B16B7BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v3[16];
  *(_BYTE *)(v1 + v3[15]) = *(_BYTE *)(v2 + v3[15]);
  v17 = (_QWORD *)(v1 + v16);
  v18 = (uint64_t *)(v2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v3[17];
  v22 = (_OWORD *)(v1 + v21);
  v23 = (_OWORD *)(v2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  return v1;
}

uint64_t sub_1B1559878()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B1559884()
{
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B155993C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B1559948()
{
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B1559A08(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2 + 2;
    v8 = a2[5];
    sub_1B16B9740();
    if (v8)
    {
      *(_QWORD *)(a1 + 40) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, (uint64_t)(a2 + 2), v8);
    }
    else
    {
      v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v7;
      *(_OWORD *)(a1 + 32) = v11;
    }
    type metadata accessor for Blueprint();
  }
  v9 = *a2;
  *(_QWORD *)a1 = *a2;
  v10 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v10;
}

void sub_1B1559CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 40) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
LABEL_8:
  type metadata accessor for Blueprint();
}

void sub_1B1559D84()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1559DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v29, v27, v8);
  v9 = *(int *)(v4 + 60);
  v28 = v2 + v9;
  v30 = v1 + v9;
  v33 = type metadata accessor for BlueprintItem(255, v5, v6, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v33);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v33);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v30, v28, v11);
  *(_QWORD *)(v1 + *(int *)(v31 + 64)) = *(_QWORD *)(v2 + *(int *)(v31 + 64));
  swift_retain();
  swift_release();
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v1 + v12, v2 + v12);
  v15 = *(int *)(a1 + 52);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v3[14];
  v20 = v1 + v19;
  v21 = v2 + v19;
  v22 = sub_1B16B7BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  *(_BYTE *)(v1 + v3[15]) = *(_BYTE *)(v2 + v3[15]);
  v23 = v3[16];
  v24 = (_QWORD *)(v1 + v23);
  v25 = (_QWORD *)(v2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1B1559F98(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  type metadata accessor for Blueprint();
}

void sub_1B1559FF8()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B155A020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v27, v25, v8);
  v9 = *(int *)(v6 + 60);
  v26 = v2 + v9;
  v28 = v1 + v9;
  v30 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v30);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v30);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v28, v26, v11);
  *(_QWORD *)(v1 + *(int *)(v6 + 64)) = *(_QWORD *)(v2 + *(int *)(v6 + 64));
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v1 + v12, v2 + v12);
  v15 = *(int *)(a1 + 52);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = v3[14];
  v20 = v1 + v19;
  v21 = v2 + v19;
  v22 = sub_1B16B7BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = v3[16];
  *(_BYTE *)(v1 + v3[15]) = *(_BYTE *)(v2 + v3[15]);
  *(_OWORD *)(v1 + v23) = *(_OWORD *)(v2 + v23);
  return v1;
}

void sub_1B155A1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  type metadata accessor for Blueprint();
}

void sub_1B155A254()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B155A280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v31, v29, v8);
  v9 = *(int *)(v4 + 60);
  v30 = v2 + v9;
  v32 = v1 + v9;
  v35 = type metadata accessor for BlueprintItem(255, v5, v6, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v35);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v35);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v32, v30, v11);
  *(_QWORD *)(v1 + *(int *)(v33 + 64)) = *(_QWORD *)(v2 + *(int *)(v33 + 64));
  swift_release();
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v1 + v12, v2 + v12);
  v15 = *(int *)(a1 + 52);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = v3[14];
  v20 = v1 + v19;
  v21 = v2 + v19;
  v22 = sub_1B16B7BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = v3[16];
  *(_BYTE *)(v1 + v3[15]) = *(_BYTE *)(v2 + v3[15]);
  v24 = (_QWORD *)(v1 + v23);
  v25 = (uint64_t *)(v2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B155A44C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B155A458()
{
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B155A50C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B155A518()
{
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_27_0();
}

uint64_t TipPlacement.sourceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1B16B9740();
  return v1;
}

BOOL sub_1B155A5FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _BOOL8 v4;
  id v5;
  id v6;

  v1 = MEMORY[0x1B5E1F2F8](v0 + 40);
  if (!v1)
    return 0;
  v2 = (void *)v1;
  v3 = MEMORY[0x1B5E1F2F8](v0 + 32);
  swift_unknownObjectRelease();
  v4 = v3 != 0;
  if (v3)
  {
    v5 = objc_msgSend(v2, sel_viewIfLoaded);
    v6 = objc_msgSend(v5, sel_window);

    v2 = v6;
    if (!v6)
      return 0;
  }

  return v4;
}

BOOL sub_1B155A69C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  _BYTE v41[40];
  CGRect v42;
  char v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  if (!MEMORY[0x1B5E1F2F8](v0 + 32))
    return 0;
  v2 = (void *)MEMORY[0x1B5E1F2F8](v0 + 40);
  if (!v2)
    goto LABEL_20;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_viewIfLoaded);
  if (!v4)
  {
    OUTLINED_FUNCTION_90_0();

    return 0;
  }
  v5 = v4;
  swift_getObjectType();
  sub_1B16BA1A8();
  sub_1B1408F9C((uint64_t)v41, (uint64_t)&v42);
  if ((v43 & 1) == 0)
  {
    x = v42.origin.x;
    y = v42.origin.y;
    width = v42.size.width;
    height = v42.size.height;
    v45.origin.x = 0.0;
    v45.origin.y = 0.0;
    v45.size.width = 0.0;
    v45.size.height = 0.0;
    if (CGRectEqualToRect(v42, v45))
    {
      if (qword_1ED187590 != -1)
        swift_once();
      v10 = OUTLINED_FUNCTION_22_23();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED187570);
      OUTLINED_FUNCTION_14_28();
      sub_1B16B8BAC();
      v11 = OUTLINED_FUNCTION_30_22();
      if (OUTLINED_FUNCTION_13_36(v11))
      {
        OUTLINED_FUNCTION_6_61();
        OUTLINED_FUNCTION_11_3();
        v12 = OUTLINED_FUNCTION_4_59(4.8149e-34);
        OUTLINED_FUNCTION_18_29(v12, v13, v14, v15, v16);
        OUTLINED_FUNCTION_2_72();
        OUTLINED_FUNCTION_9_48();
        OUTLINED_FUNCTION_7_0();
        OUTLINED_FUNCTION_19_32(&dword_1B139E000, v17, v18, "Bounds check invalidating placement=%s, reason='frame is zero'");
        OUTLINED_FUNCTION_23_26();
        OUTLINED_FUNCTION_3_29();
      }

      OUTLINED_FUNCTION_9_48();
LABEL_20:
      OUTLINED_FUNCTION_90_0();
      return 0;
    }
    objc_opt_self();
    v19 = swift_dynamicCastObjCClass();
    if (v19)
    {
      v20 = (void *)v19;
      swift_unknownObjectRetain();
      v21 = objc_msgSend(v20, sel_tabBarController);

      if (!v21)
      {
        if (qword_1ED187590 != -1)
          swift_once();
        v32 = OUTLINED_FUNCTION_22_23();
        __swift_project_value_buffer(v32, (uint64_t)qword_1ED187570);
        OUTLINED_FUNCTION_14_28();
        sub_1B16B8BAC();
        v33 = OUTLINED_FUNCTION_30_22();
        if (OUTLINED_FUNCTION_13_36(v33))
        {
          OUTLINED_FUNCTION_6_61();
          OUTLINED_FUNCTION_11_3();
          v34 = OUTLINED_FUNCTION_4_59(4.8149e-34);
          OUTLINED_FUNCTION_18_29(v34, v35, v36, v37, v38);
          OUTLINED_FUNCTION_2_72();
          OUTLINED_FUNCTION_9_48();
          OUTLINED_FUNCTION_7_0();
          v31 = "Bounds check invalidating placement=%s, reason='tab is removed from view hierarchy'";
LABEL_25:
          OUTLINED_FUNCTION_19_32(&dword_1B139E000, v29, v30, v31);
          OUTLINED_FUNCTION_23_26();
          OUTLINED_FUNCTION_3_29();
        }
LABEL_28:

        OUTLINED_FUNCTION_9_48();
        OUTLINED_FUNCTION_31_19();
        return 0;
      }
      if (objc_msgSend(v20, sel_isHidden))
      {
        if (qword_1ED187590 != -1)
          swift_once();
        v22 = OUTLINED_FUNCTION_22_23();
        __swift_project_value_buffer(v22, (uint64_t)qword_1ED187570);
        OUTLINED_FUNCTION_14_28();
        sub_1B16B8BAC();
        v23 = OUTLINED_FUNCTION_30_22();
        if (OUTLINED_FUNCTION_13_36(v23))
        {
          OUTLINED_FUNCTION_6_61();
          OUTLINED_FUNCTION_11_3();
          v24 = OUTLINED_FUNCTION_4_59(4.8149e-34);
          OUTLINED_FUNCTION_18_29(v24, v25, v26, v27, v28);
          OUTLINED_FUNCTION_2_72();
          OUTLINED_FUNCTION_9_48();
          OUTLINED_FUNCTION_7_0();
          v31 = "Bounds check invalidating placement=%s, reason='tab is hidden'";
          goto LABEL_25;
        }
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_90_0();
    }
    objc_msgSend(v5, sel_bounds);
    v46.origin.x = x;
    v46.origin.y = y;
    v46.size.width = width;
    v46.size.height = height;
    v39 = CGRectContainsRect(v44, v46);
    OUTLINED_FUNCTION_90_0();

    return v39;
  }
  OUTLINED_FUNCTION_90_0();

  return 0;
}

uint64_t TipPlacement.description.getter()
{
  sub_1B16BA574();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16BA6B8();
  OUTLINED_FUNCTION_26_5();
  return 0;
}

void TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:)()
{
  OUTLINED_FUNCTION_1_86();
  OUTLINED_FUNCTION_21_24();
  TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:)();
  OUTLINED_FUNCTION_67();
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:)()
{
  uint64_t v0;
  void *v1;
  void *v2;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  OUTLINED_FUNCTION_16_33();
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_8_43();
  OUTLINED_FUNCTION_25_26();
  OUTLINED_FUNCTION_90_0();

  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = 0;
  *(_BYTE *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_47();
}

void TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)()
{
  OUTLINED_FUNCTION_1_86();
  OUTLINED_FUNCTION_9_10();
  TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)();
  OUTLINED_FUNCTION_27();
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  OUTLINED_FUNCTION_16_33();
  v4 = *v3;
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_8_43();
  OUTLINED_FUNCTION_90_0();
  OUTLINED_FUNCTION_25_26();

  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = 0;
  *(_BYTE *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_47();
}

void TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7)
{
  OUTLINED_FUNCTION_1_86();
  TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_27();
}

uint64_t TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = *a3;
  v12 = a3[1];
  v13 = *a6;
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v7 + 64) = 1;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 48) = v11;
  *(_QWORD *)(v7 + 56) = v12;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();

  *(_QWORD *)(v7 + 72) = v13;
  *(_QWORD *)(v7 + 80) = a7;
  *(_BYTE *)(v7 + 88) = 0;
  return v7;
}

void TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:)()
{
  OUTLINED_FUNCTION_1_86();
  TipPlacement.init(sourceIdentifier:source:sourceItem:)();
  OUTLINED_FUNCTION_67();
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_20_32();
  OUTLINED_FUNCTION_29_21();
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = 0;
  *(_BYTE *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_47();
}

void TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:)()
{
  OUTLINED_FUNCTION_1_86();
  OUTLINED_FUNCTION_21_24();
  TipPlacement.init(sourceIdentifier:source:sourceItem:traits:)();
  OUTLINED_FUNCTION_67();
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:traits:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_27_26();
  v2 = *v1;
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_20_32();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_29_21();
  *(_QWORD *)(v0 + 72) = v2;
  *(_QWORD *)(v0 + 80) = 0;
  *(_BYTE *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_47();
}

void TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)()
{
  OUTLINED_FUNCTION_1_86();
  OUTLINED_FUNCTION_9_10();
  TipPlacement.init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)();
  OUTLINED_FUNCTION_27();
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  OUTLINED_FUNCTION_16_33();
  v4 = *v3;
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_8_43();
  OUTLINED_FUNCTION_90_0();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v2;
  *(_BYTE *)(v0 + 88) = 0;
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B155AFD4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;

  if ((a1 & 1) != 0 && (*(_BYTE *)(v1 + 72) & 1) != 0)
  {
    if (qword_1ED187590 != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_22_23();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED187570);
    swift_retain_n();
    v4 = sub_1B16B8BAC();
    v5 = sub_1B16BA040();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)OUTLINED_FUNCTION_6_61();
      v7 = OUTLINED_FUNCTION_11_3();
      *(_DWORD *)v6 = 136446210;
      v8 = v7;
      sub_1B16B9740();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      OUTLINED_FUNCTION_26_5();
      swift_bridgeObjectRelease();
      sub_1B13E208C(0x6372756F53706954, 0xEA00000000002865, &v8);
      sub_1B16BA34C();
      OUTLINED_FUNCTION_28_24();
      OUTLINED_FUNCTION_7_0();
      _os_log_impl(&dword_1B139E000, v4, v5, "Invalid placement for tip source=%{public}s: keyboard is present", v6, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3_29();
    }

    OUTLINED_FUNCTION_28_24();
  }
  else if (sub_1B155A5FC())
  {
    return *(unsigned __int8 *)(v1 + 64);
  }
  return 0;
}

uint64_t TipPlacement.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1B13C076C(v0 + 32);
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TipPlacement.__deallocating_deinit()
{
  TipPlacement.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B155B1FC()
{
  return TipPlacement.description.getter();
}

uint64_t type metadata accessor for TipPlacement()
{
  return objc_opt_self();
}

uint64_t method lookup function for TipPlacement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t static UIDevice.isSlow.setter(char a1)
{
  uint64_t result;

  if (qword_1ED184970 != -1)
    swift_once();
  result = OUTLINED_FUNCTION_13();
  byte_1ED184B78 = a1 & 1;
  return result;
}

uint64_t (*static UIDevice.isSlow.modify())()
{
  if (qword_1ED184970 != -1)
    swift_once();
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

id SectionFooterViewRenderer.render(for:with:in:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  _QWORD v36[6];
  _QWORD v37[7];

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = (void *)a1[8];
  v28 = a1[7];
  v29 = a1[9];
  v30 = a1[6];
  v12 = a1[10];
  v13 = a1[11];
  v32 = a1[13];
  v33 = (void *)a1[12];
  v35 = a1[14];
  v14 = *(double *)(a2 + 32);
  v15 = *(double *)(a2 + 40);
  v16 = *(double *)(a2 + 48);
  v17 = *(double *)(a2 + 56);
  v31 = *(_QWORD *)(a2 + 96);
  v34 = *(id *)(a3 + OBJC_IVAR____TtC5TeaUI17SectionFooterView_button);
  objc_msgSend(v34, sel_setFrame_, *(double *)(a2 + 64), *(double *)(a2 + 72), *(double *)(a2 + 80), *(double *)(a2 + 88));
  v18 = *(void **)(a3 + OBJC_IVAR____TtC5TeaUI17SectionFooterView_separator);
  objc_msgSend(v18, sel_setFrame_, v14, v15, v16, v17);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v37[0] = v30;
  v37[1] = v28;
  v37[2] = v11;
  v37[3] = v29;
  v37[4] = v12;
  v37[5] = v13;
  v36[0] = v5;
  v36[1] = v6;
  v36[2] = v7;
  v36[3] = v8;
  v36[4] = v9;
  v36[5] = v10;
  sub_1B16B9740();
  v19 = v11;
  v20 = OUTLINED_FUNCTION_0_101();
  sub_1B155B4E4(v20, v21, v22);
  v23 = sub_1B14F405C((uint64_t)v37, (uint64_t)v36, v33, v32, v31);
  v24 = OUTLINED_FUNCTION_0_101();
  sub_1B14F490C(v24, v25, v26);

  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setAttributedTitle_forState_, v23, 0);

  return objc_msgSend(v18, sel_setBackgroundColor_, v35);
}

id sub_1B155B4E4(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a2)
  {
    sub_1B16B9740();
    return a3;
  }
  return result;
}

uint64_t SectionFooterViewRenderer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t SectionFooterViewRenderer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_1B155B554(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return SectionFooterViewRenderer.render(for:with:in:)(a1, a2, a3);
}

uint64_t dispatch thunk of SectionFooterViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for SectionFooterViewRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  id v8;
  id v9;
  id v10;
  char v11;
  void *v13;
  uint64_t v14;
  char v15;
  void *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id v23;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_17;
    sub_1B155B78C(*(id *)a2, *(_QWORD *)(a2 + 8), 0);
    sub_1B155B78C((id)v3, v2, 0);
    sub_1B155B7CC((void *)v3, v2, 0);
    v13 = (void *)v6;
    v14 = v5;
    v15 = 0;
LABEL_26:
    sub_1B155B7CC(v13, v14, v15);
    return 1;
  }
  if (v4 != 1)
  {
    if (v3 | v2)
    {
      if (v7 != 2 || v6 != 1 || v5 != 0)
        goto LABEL_17;
    }
    else if (v7 != 2 || (v5 | v6) != 0)
    {
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_3_60();
    sub_1B155B7CC((void *)v3, v2, 2);
    v13 = (void *)v6;
    v14 = v5;
    v15 = v7;
    goto LABEL_26;
  }
  if (v7 != 1)
  {
LABEL_17:
    OUTLINED_FUNCTION_3_60();
    sub_1B155B78C((id)v3, v2, v4);
    sub_1B155B7CC((void *)v3, v2, v4);
    v18 = (void *)v6;
    v19 = v5;
    v20 = v7;
    goto LABEL_18;
  }
  if (!v3)
  {
    v21 = 1;
    OUTLINED_FUNCTION_0_102(*(void **)a2, *(_QWORD *)(a2 + 8));
    OUTLINED_FUNCTION_0_102(0, v2);
    v23 = (id)v6;
    OUTLINED_FUNCTION_1_87(0);
    OUTLINED_FUNCTION_2_73();
    if (!v6)
      return v21;

    return 0;
  }
  if (v6)
  {
    sub_1B1417F24();
    v8 = (id)v3;
    OUTLINED_FUNCTION_0_102((void *)v6, v5);
    OUTLINED_FUNCTION_0_102((void *)v3, v2);
    v9 = (id)v6;
    v10 = v8;
    v11 = sub_1B16BA214();
    OUTLINED_FUNCTION_1_87((void *)v3);
    OUTLINED_FUNCTION_2_73();

    return v11 & 1;
  }
  OUTLINED_FUNCTION_0_102(0, *(_QWORD *)(a2 + 8));
  OUTLINED_FUNCTION_0_102((void *)v3, v2);
  OUTLINED_FUNCTION_1_87((void *)v3);
  v18 = 0;
  v19 = v5;
  v20 = 1;
LABEL_18:
  sub_1B155B7CC(v18, v19, v20);
  return 0;
}

id sub_1B155B78C(id result, uint64_t a2, char a3)
{
  id v3;

  if (a3 == 1)
  {
    v3 = result;
    sub_1B16B9740();
    return v3;
  }
  else if (!a3)
  {
    return (id)sub_1B16B9740();
  }
  return result;
}

void *sub_1B155B7CC(void *result, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 != 1)
      return result;

  }
  return (void *)swift_bridgeObjectRelease();
}

void NavigatorPresentationContext.init(_:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = a1[2];
  if ((a1[1] & 1) == 0)
  {
    v5 = *a1;
    if (*a1 != 0x100000)
    {
      if (v5 != 1179648)
      {

        if (v5 == 1703936)
        {
          v4 = 2;
          v3 = 1;
          goto LABEL_10;
        }
        goto LABEL_3;
      }

      v3 = 0;
    }
    v4 = 1;
    goto LABEL_10;
  }

LABEL_3:
  v3 = 0;
  v4 = 2;
LABEL_10:
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v4;
}

void *destroy for NavigatorPresentationContext(uint64_t a1)
{
  return sub_1B155B7CC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5TeaUI28NavigatorPresentationContextOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B155B78C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NavigatorPresentationContext(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B155B78C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B155B7CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NavigatorPresentationContext(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B155B7CC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for NavigatorPresentationContext()
{
  return &type metadata for NavigatorPresentationContext;
}

id ImageView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

void sub_1B155B9C8(id *a1)
{
  objc_class *v1;
  id v2;
  UIImage_optional v3;

  v1 = (objc_class *)*a1;
  v2 = *a1;
  v3.value.super.isa = v1;
  sub_1B140032C(v3);
}

id sub_1B155B9F4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI9ImageView_imageView), sel_image);
}

void (*sub_1B155BA20(_QWORD *a1))(UIImage_optional a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI9ImageView_imageView), sel_image);
  return sub_1B155BA70;
}

void sub_1B155BA70(UIImage_optional a1)
{
  void *v1;
  id v2;
  UIImage_optional v3;

  v1 = *(void **)a1.value.super.isa;
  if (a1.is_nil)
  {
    v2 = v1;
    v3.value.super.isa = (Class)v1;
    sub_1B140032C(v3);
    OUTLINED_FUNCTION_1_5(v2);
  }
  else
  {
    a1.value.super.isa = *(Class *)a1.value.super.isa;
    sub_1B140032C(a1);
    OUTLINED_FUNCTION_7();
  }
}

id sub_1B155BAB4()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5TeaUI9ImageView_imageView);
}

id ImageView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ImageView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR____TtC5TeaUI9ImageView_imageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = &v0[OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI9ImageView__backgroundColor] = 0;

  sub_1B16BA724();
  __break(1u);
}

id ImageView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImageView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1B155BC48(char *a1)
{
  void *v1;

  v1 = *(void **)&a1[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
  objc_msgSend(a1, sel_bounds);
  return objc_msgSend(v1, sel_setFrame_);
}

uint64_t sub_1B155BC84()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B155BCA8()
{
  uint64_t v0;

  return sub_1B155BC48(*(char **)(v0 + 16));
}

uint64_t sub_1B155BCB0()
{
  return swift_deallocObject();
}

id ImageView.clipsToBounds.getter()
{
  return sub_1B13E73E4();
}

void ImageView.clipsToBounds.setter(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ImageView();
  objc_msgSendSuper2(&v3, sel_setClipsToBounds_, a1 & 1);
  sub_1B155BD78();
  OUTLINED_FUNCTION_7();
}

id sub_1B155BD78()
{
  char *v0;
  void *v1;
  id v2;
  id result;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
  v2 = objc_msgSend(v0, sel_clipsToBounds);
  result = objc_msgSend(v1, sel_clipsToBounds);
  if ((_DWORD)v2 != (_DWORD)result)
    return objc_msgSend(v1, sel_setClipsToBounds_, v2);
  return result;
}

uint64_t sub_1B155BDEC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B155BE10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

void ImageView.setImage(from:with:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *, uint64_t (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  __int128 v22;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  sub_1B14003B4(v6, v7);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = OUTLINED_FUNCTION_25();
  v11 = swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_14_2(v11);
  v12 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v12 + 16) = v10;
  OUTLINED_FUNCTION_12_35(v12, v13, v14, v15, v16, v17, v18, v19, v21, v22);
  v20 = *(void (**)(_QWORD *, uint64_t (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v9 + 8);
  swift_retain();
  v20(a2, sub_1B155C180, v12, v8, v9);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2_6();
}

uint64_t sub_1B155BF28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  __int128 v25[2];

  v7 = sub_1B16B95D8();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1B16B9620();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1404978();
  v16 = (void *)sub_1B16BA0DC();
  sub_1B13B4DC0(a4, (uint64_t)v25);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  sub_1B13C06D0(v25, v17 + 24);
  *(_QWORD *)(v17 + 64) = a1;
  aBlock[4] = sub_1B155C798;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = &block_descriptor_31;
  v18 = _Block_copy(aBlock);
  v19 = a1;
  swift_retain();
  swift_release();
  sub_1B16B95F0();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1B13AD67C((unint64_t *)&qword_1ED183670, v8, MEMORY[0x1E0DEF510]);
  sub_1B141793C();
  sub_1B13AD67C((unint64_t *)&qword_1ED183710, (uint64_t (*)(uint64_t))sub_1B141793C, MEMORY[0x1E0DEAF38]);
  sub_1B16BA448();
  MEMORY[0x1B5E1DA80](0, v15, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v22);
}

uint64_t sub_1B155C158()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1B155C180(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B155BF28(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

void sub_1B155C18C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v16;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1B5E1F2F8](v5);
  if (v6)
  {
    v7 = (char *)v6;
    v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier);
    v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier + 8);
    v10 = a2[3];
    v11 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v10);
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    sub_1B16B9740();
    v13 = v12(v10, v11);
    if (!v8)
    {

      swift_bridgeObjectRelease();
      return;
    }
    if (v9 == v13 && v8 == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = sub_1B16BA910(v9, v8, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        goto LABEL_12;
    }
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC5TeaUI9ImageView_imageView], sel_setImage_, a3);
LABEL_12:

  }
}

void ImageView.crossFadeImage(_:animated:completion:)(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4)
{
  char *v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  UIImage_optional v23;

  if (!a1)
  {
    if (!a3)
      return;
    v17 = 0;
    goto LABEL_8;
  }
  if ((a2 & 1) != 0)
  {
    v8 = (void *)objc_opt_self();
    v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
    v10 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = a1;
    v11 = MEMORY[0x1E0C809B0];
    v12 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F00E4, MEMORY[0x1E0C809B0], 1107296256, v19, v21);
    v13 = a1;
    v14 = v4;
    OUTLINED_FUNCTION_123();
    v15 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v15 + 16) = a3;
    *(_QWORD *)(v15 + 24) = a4;
    v16 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F8544, v11, 1107296256, v20, v22);
    sub_1B13C4AEC((uint64_t)a3);
    OUTLINED_FUNCTION_123();
    objc_msgSend(v8, sel_transitionWithView_duration_options_animations_completion_, v9, 5308418, v12, v16, 0.25);

    _Block_release(v16);
    _Block_release(v12);
    return;
  }
  v18 = a1;
  v23.value.super.isa = (Class)a1;
  sub_1B140032C(v23);
  if (a3)
  {
    v17 = 1;
LABEL_8:
    a3(v17);
  }
}

void sub_1B155C454(uint64_t a1, void *a2)
{
  id v3;
  UIImage_optional v4;

  v3 = a2;
  v4.value.super.isa = (Class)a2;
  sub_1B140032C(v4);
}

id sub_1B155C480(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id sub_1B155C500(_QWORD *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_1B16BA8F8();
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithLayer_, v4);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

id sub_1B155C60C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_maskedCorners);
}

uint64_t sub_1B155C650()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B155C67C()
{
  uint64_t v0;

  sub_1B155C454(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B155C684()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B155C6B0(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v2 = *(uint64_t (**)(uint64_t))(v1 + 16);
  if (v2)
    return v2(result & 1);
  return result;
}

id sub_1B155C6DC@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1B155B9F4();
  *a1 = result;
  return result;
}

uint64_t method lookup function for ImageView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImageView.image.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ImageView.image.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ImageView.backingView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1B155C768()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocObject();
}

void sub_1B155C798()
{
  uint64_t *v0;

  sub_1B155C18C(v0[2], v0 + 3, v0[8]);
}

uint64_t sub_1B155C7A8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_1();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

uint64_t static MenuItemKey.key(input:modifierFlags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  return sub_1B16B9740();
}

TeaUI::MenuItemKey __swiftcall MenuItemKey.init(input:modifierFlags:)(Swift::String input, __C::UIKeyModifierFlags modifierFlags)
{
  uint64_t v2;
  TeaUI::MenuItemKey result;

  *(Swift::String *)v2 = input;
  *(__C::UIKeyModifierFlags *)(v2 + 16) = modifierFlags;
  result.input = input;
  result.modifierFlags = modifierFlags;
  return result;
}

_QWORD *sub_1B155C818(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1B16B9740();
  return a1;
}

_QWORD *assignWithCopy for MenuItemKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for MenuItemKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for MenuItemKey()
{
  return &type metadata for MenuItemKey;
}

TeaUI::SwipeActionMenu __swiftcall SwipeActionMenu.init(_:)(Swift::OpaquePointer a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  TeaUI::SwipeActionMenu result;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v1;
  v4 = *((_QWORD *)a1._rawValue + 2);
  if (v4)
  {
    v18 = v1;
    sub_1B16B9740();
    v5 = (uint64_t *)((char *)a1._rawValue + 64);
    v6 = MEMORY[0x1E0DEE9D8];
    do
    {
      v7 = *(v5 - 3);
      if (v7)
      {
        v8 = v5[3];
        v22 = *(v5 - 4);
        v23 = v5[4];
        v9 = v5[6];
        v10 = v5[8];
        v24 = v5[7];
        v25 = v5[5];
        v11 = v5[1];
        v12 = *(v5 - 1);
        v20 = *v5;
        v21 = v5[2];
        v19 = *(v5 - 2);
        sub_1B16B9740();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v26 = v10;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_0_103();
          v6 = v15;
        }
        v13 = *(_QWORD *)(v6 + 16);
        if (v13 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          OUTLINED_FUNCTION_0_103();
          v6 = v16;
        }
        *(_QWORD *)(v6 + 16) = v13 + 1;
        v14 = v6 + 104 * v13;
        *(_QWORD *)(v14 + 32) = v22;
        *(_QWORD *)(v14 + 40) = v7;
        *(_QWORD *)(v14 + 48) = v19;
        *(_QWORD *)(v14 + 56) = v12;
        *(_QWORD *)(v14 + 64) = v20;
        *(_QWORD *)(v14 + 72) = v11;
        *(_QWORD *)(v14 + 80) = v21;
        *(_QWORD *)(v14 + 88) = v8;
        *(_BYTE *)(v14 + 96) = v23 & 1;
        *(_BYTE *)(v14 + 97) = BYTE1(v23) & 1;
        *(_QWORD *)(v14 + 104) = v25;
        *(_QWORD *)(v14 + 112) = v9;
        *(_QWORD *)(v14 + 120) = v24;
        *(_QWORD *)(v14 + 128) = v26;
      }
      v5 += 13;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v18;
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  result.actions._rawValue = (void *)swift_bridgeObjectRelease();
  *v3 = v6;
  return result;
}

ValueMetadata *type metadata accessor for SwipeActionMenu()
{
  return &type metadata for SwipeActionMenu;
}

uint64_t CardViewInteractiveState.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B155CAD8 + 4 * byte_1B16D0C20[*v0]))(0x657263736C6C7566, 0xEA00000000006E65);
}

uint64_t sub_1B155CAD8()
{
  return 0x6465646E61707865;
}

uint64_t sub_1B155CAF0()
{
  return 0x657370616C6C6F63;
}

uint64_t sub_1B155CB0C()
{
  return 0x676E696767617264;
}

uint64_t sub_1B155CB24()
{
  return 1701736302;
}

BOOL static CardViewInteractiveState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CardViewInteractiveState.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t CardViewInteractiveState.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B155CBC4()
{
  unint64_t result;

  result = qword_1EEF33650;
  if (!qword_1EEF33650)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardViewInteractiveState, &type metadata for CardViewInteractiveState);
    atomic_store(result, (unint64_t *)&qword_1EEF33650);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CardViewInteractiveState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B155CC50 + 4 * byte_1B16D0C2A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B155CC84 + 4 * byte_1B16D0C25[v4]))();
}

uint64_t sub_1B155CC84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B155CC8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B155CC94);
  return result;
}

uint64_t sub_1B155CCA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B155CCA8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B155CCAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B155CCB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardViewInteractiveState()
{
  return &type metadata for CardViewInteractiveState;
}

__C::UIContentSizeCategory_optional __swiftcall UIContentSizeCategory.larger()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v42;
  id v43;
  void *v44;
  Swift::Bool v45;
  void **v46;
  __C::UIContentSizeCategory_optional result;

  sub_1B16B9860();
  v2 = OUTLINED_FUNCTION_2_74();
  v4 = v1 == v2 && v0 == v3;
  v5 = (void **)MEMORY[0x1E0DC4930];
  if (v4)
    goto LABEL_62;
  OUTLINED_FUNCTION_0_104(v2);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
    goto LABEL_63;
  OUTLINED_FUNCTION_16_34();
  v6 = OUTLINED_FUNCTION_2_74();
  v8 = v1 == v6 && v0 == v7;
  v5 = (void **)MEMORY[0x1E0DC4920];
  if (v8)
    goto LABEL_62;
  OUTLINED_FUNCTION_0_104(v6);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
    goto LABEL_63;
  OUTLINED_FUNCTION_16_34();
  v9 = OUTLINED_FUNCTION_2_74();
  v11 = v1 == v9 && v0 == v10;
  v5 = (void **)MEMORY[0x1E0DC4918];
  if (v11)
    goto LABEL_62;
  OUTLINED_FUNCTION_0_104(v9);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_63:
    v42 = *v5;
LABEL_64:
    v43 = v42;
    goto LABEL_65;
  }
  OUTLINED_FUNCTION_16_34();
  v12 = OUTLINED_FUNCTION_2_74();
  v14 = v1 == v12 && v0 == v13;
  v5 = (void **)MEMORY[0x1E0DC4900];
  if (v14)
  {
LABEL_62:
    OUTLINED_FUNCTION_24_3();
    goto LABEL_63;
  }
  OUTLINED_FUNCTION_0_104(v12);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
    goto LABEL_63;
  OUTLINED_FUNCTION_16_34();
  v15 = OUTLINED_FUNCTION_2_74();
  if (v1 == v15 && v0 == v16)
  {
    OUTLINED_FUNCTION_24_3();
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_104(v15);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_67:
    v46 = (void **)MEMORY[0x1E0DC48F8];
LABEL_68:
    v42 = *v46;
    goto LABEL_64;
  }
  sub_1B16B9860();
  v18 = OUTLINED_FUNCTION_2_74();
  if (v1 == v18 && v0 == v19)
  {
    OUTLINED_FUNCTION_24_3();
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_0_104(v18);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_70:
    v46 = (void **)MEMORY[0x1E0DC48F0];
    goto LABEL_68;
  }
  sub_1B16B9860();
  v21 = OUTLINED_FUNCTION_2_74();
  if (v1 == v21 && v0 == v22)
  {
    OUTLINED_FUNCTION_24_3();
    goto LABEL_72;
  }
  OUTLINED_FUNCTION_0_104(v21);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_72:
    v46 = (void **)MEMORY[0x1E0DC48D8];
    goto LABEL_68;
  }
  sub_1B16B9860();
  v24 = OUTLINED_FUNCTION_2_74();
  if (v1 == v24 && v0 == v25)
  {
    OUTLINED_FUNCTION_24_3();
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_0_104(v24);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_74:
    v46 = (void **)MEMORY[0x1E0DC48D0];
    goto LABEL_68;
  }
  sub_1B16B9860();
  v27 = OUTLINED_FUNCTION_2_74();
  if (v1 == v27 && v0 == v28)
  {
    OUTLINED_FUNCTION_24_3();
    goto LABEL_76;
  }
  OUTLINED_FUNCTION_0_104(v27);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_76:
    v46 = (void **)MEMORY[0x1E0DC48C8];
    goto LABEL_68;
  }
  sub_1B16B9860();
  v30 = OUTLINED_FUNCTION_2_74();
  if (v1 == v30 && v0 == v31)
  {
    OUTLINED_FUNCTION_24_3();
    goto LABEL_78;
  }
  OUTLINED_FUNCTION_0_104(v30);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_78:
    v46 = (void **)MEMORY[0x1E0DC48C0];
    goto LABEL_68;
  }
  sub_1B16B9860();
  v33 = OUTLINED_FUNCTION_2_74();
  if (v1 == v33 && v0 == v34)
  {
    OUTLINED_FUNCTION_24_3();
    goto LABEL_80;
  }
  OUTLINED_FUNCTION_0_104(v33);
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_20_0();
  if ((v1 & 1) != 0)
  {
LABEL_80:
    v46 = (void **)MEMORY[0x1E0DC48B8];
    goto LABEL_68;
  }
  v36 = sub_1B16B9860();
  v38 = v37;
  v39 = OUTLINED_FUNCTION_7_49();
  if (v36 != v39 || v38 != v40)
    OUTLINED_FUNCTION_28(v36, v38, v39, v40);
  OUTLINED_FUNCTION_7_0();
  swift_bridgeObjectRelease();
LABEL_65:
  OUTLINED_FUNCTION_67();
  result.value._rawValue = v44;
  result.is_nil = v45;
  return result;
}

__C::UIContentSizeCategory_optional __swiftcall UIContentSizeCategory.smaller()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  id v48;
  void *v49;
  Swift::Bool v50;
  id v51;
  __C::UIContentSizeCategory_optional result;

  v1 = (void *)*MEMORY[0x1E0DC4908];
  v2 = OUTLINED_FUNCTION_7_49();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_10_43();
  if (v2 == v5 && v4 == v6)
  {
    OUTLINED_FUNCTION_150();
    goto LABEL_66;
  }
  v8 = v6;
  v9 = OUTLINED_FUNCTION_28(v2, v4, v5, v6);
  OUTLINED_FUNCTION_20_0();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    v10 = (void *)*MEMORY[0x1E0DC4930];
    OUTLINED_FUNCTION_9_11();
    v11 = OUTLINED_FUNCTION_3_62();
    if (v0 != v11 || v8 != v12)
    {
      OUTLINED_FUNCTION_1_88(v11);
      OUTLINED_FUNCTION_6_62();
      OUTLINED_FUNCTION_17();
      if ((v0 & 1) != 0)
        goto LABEL_65;
      v1 = (void *)*MEMORY[0x1E0DC4920];
      OUTLINED_FUNCTION_7_49();
      v14 = OUTLINED_FUNCTION_3_62();
      if (v0 == v14 && v8 == v15)
        goto LABEL_67;
      OUTLINED_FUNCTION_1_88(v14);
      OUTLINED_FUNCTION_6_62();
      OUTLINED_FUNCTION_17();
      if ((v0 & 1) != 0)
        goto LABEL_68;
      v10 = (void *)*MEMORY[0x1E0DC4918];
      OUTLINED_FUNCTION_9_11();
      v17 = OUTLINED_FUNCTION_3_62();
      if (v0 != v17 || v8 != v18)
      {
        OUTLINED_FUNCTION_1_88(v17);
        OUTLINED_FUNCTION_6_62();
        OUTLINED_FUNCTION_17();
        if ((v0 & 1) != 0)
          goto LABEL_65;
        v1 = (void *)*MEMORY[0x1E0DC4900];
        OUTLINED_FUNCTION_7_49();
        v20 = OUTLINED_FUNCTION_3_62();
        if (v0 == v20 && v8 == v21)
          goto LABEL_67;
        OUTLINED_FUNCTION_1_88(v20);
        OUTLINED_FUNCTION_6_62();
        OUTLINED_FUNCTION_17();
        if ((v0 & 1) != 0)
          goto LABEL_68;
        v10 = (void *)*MEMORY[0x1E0DC48F8];
        OUTLINED_FUNCTION_9_11();
        v23 = OUTLINED_FUNCTION_3_62();
        if (v0 != v23 || v8 != v24)
        {
          OUTLINED_FUNCTION_1_88(v23);
          OUTLINED_FUNCTION_6_62();
          OUTLINED_FUNCTION_17();
          if ((v0 & 1) != 0)
            goto LABEL_65;
          v1 = (void *)*MEMORY[0x1E0DC48F0];
          OUTLINED_FUNCTION_7_49();
          v26 = OUTLINED_FUNCTION_3_62();
          if (v0 == v26 && v8 == v27)
            goto LABEL_67;
          OUTLINED_FUNCTION_1_88(v26);
          OUTLINED_FUNCTION_6_62();
          OUTLINED_FUNCTION_17();
          if ((v0 & 1) != 0)
            goto LABEL_68;
          v10 = (void *)*MEMORY[0x1E0DC48D8];
          OUTLINED_FUNCTION_9_11();
          v29 = OUTLINED_FUNCTION_3_62();
          if (v0 != v29 || v8 != v30)
          {
            OUTLINED_FUNCTION_1_88(v29);
            OUTLINED_FUNCTION_6_62();
            OUTLINED_FUNCTION_17();
            if ((v0 & 1) != 0)
              goto LABEL_65;
            v1 = (void *)*MEMORY[0x1E0DC48D0];
            OUTLINED_FUNCTION_7_49();
            v32 = OUTLINED_FUNCTION_3_62();
            if (v0 == v32 && v8 == v33)
              goto LABEL_67;
            OUTLINED_FUNCTION_1_88(v32);
            OUTLINED_FUNCTION_6_62();
            OUTLINED_FUNCTION_17();
            if ((v0 & 1) != 0)
              goto LABEL_68;
            v10 = (void *)*MEMORY[0x1E0DC48C8];
            OUTLINED_FUNCTION_9_11();
            v35 = OUTLINED_FUNCTION_3_62();
            if (v0 != v35 || v8 != v36)
            {
              OUTLINED_FUNCTION_1_88(v35);
              OUTLINED_FUNCTION_6_62();
              OUTLINED_FUNCTION_17();
              if ((v0 & 1) == 0)
              {
                v1 = (void *)*MEMORY[0x1E0DC48C0];
                OUTLINED_FUNCTION_7_49();
                v38 = OUTLINED_FUNCTION_3_62();
                if (v0 != v38 || v8 != v39)
                {
                  OUTLINED_FUNCTION_1_88(v38);
                  OUTLINED_FUNCTION_6_62();
                  OUTLINED_FUNCTION_17();
                  if ((v0 & 1) == 0)
                  {
                    v41 = sub_1B16B9860();
                    v43 = v42;
                    v44 = OUTLINED_FUNCTION_10_43();
                    if (v41 != v44 || v43 != v45)
                    {
                      v47 = OUTLINED_FUNCTION_28(v41, v43, v44, v45);
                      OUTLINED_FUNCTION_20_0();
                      OUTLINED_FUNCTION_7_0();
                      if ((v47 & 1) == 0)
                        goto LABEL_66;
                      goto LABEL_65;
                    }
                    goto LABEL_64;
                  }
LABEL_68:
                  v51 = v10;
                  goto LABEL_66;
                }
LABEL_67:
                OUTLINED_FUNCTION_150();
                goto LABEL_68;
              }
LABEL_65:
              v48 = v1;
              goto LABEL_66;
            }
          }
        }
      }
    }
LABEL_64:
    OUTLINED_FUNCTION_150();
    goto LABEL_65;
  }
LABEL_66:
  OUTLINED_FUNCTION_67();
  result.value._rawValue = v49;
  result.is_nil = v50;
  return result;
}

uint64_t sub_1B155D2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v0 = sub_1B16B9860();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_10_43();
  if (v0 == v3 && v2 == v4)
    v6 = 1;
  else
    v6 = OUTLINED_FUNCTION_28(v0, v2, v3, v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_0();
  return v6 & 1;
}

uint64_t LazyViewController.Trigger.hash(into:)()
{
  return sub_1B16BAA54();
}

void LazyViewController.Trigger.hashValue.getter()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_159();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

void sub_1B155D388(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  LazyViewController.loadedViewController.setter(v1);
}

void LazyViewController.loadedViewController.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI18LazyViewController__loadedViewController);
  OUTLINED_FUNCTION_32();
  v3[5] = sub_1B16B85A0();
  OUTLINED_FUNCTION_31();
}

void sub_1B155D408(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  OUTLINED_FUNCTION_45();
  free(v1);
}

void LazyViewController.$loadedViewController.getter()
{
  OUTLINED_FUNCTION_32();
  sub_1B16B85C4();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_0_0();
}

id LazyViewController.__allocating_init(identifier:trigger:_:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return LazyViewController.init(identifier:trigger:_:)(a1, a2, a3, a4, a5);
}

void sub_1B155D4D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC5TeaUI18LazyViewController__loadedViewController;
  sub_1B13D6584(0, (unint64_t *)&qword_1ED1849D0, (uint64_t (*)(uint64_t))sub_1B1455998, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB40C0]);
  OUTLINED_FUNCTION_29_0();
  *(_QWORD *)&v0[v1] = sub_1B16B8594();
  v2 = OBJC_IVAR____TtC5TeaUI18LazyViewController_eventManager;
  sub_1B13D682C();
  OUTLINED_FUNCTION_29_0();
  *(_QWORD *)&v0[v2] = sub_1B16B8198();

  OUTLINED_FUNCTION_12_36();
  __break(1u);
}

Swift::Void __swiftcall LazyViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  void *v2;
  _BOOL8 v5;
  _BOOL8 v6;
  UIViewController *v7;
  void *v8;
  void *v9;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)OUTLINED_FUNCTION_4();
  v5 = _;
  v6 = animated;
  objc_msgSendSuper2(&v10, sel_setEditing_animated_, v5, v6);
  LazyViewController.loadViewController()(v7);
  v9 = v8;
  objc_msgSend(v8, sel_setEditing_animated_, v5, v6);

}

void __swiftcall LazyViewController.loadViewController()(UIViewController *__return_ptr retstr)
{
  uint64_t v1;

  OUTLINED_FUNCTION_17_27();
  LazyViewController.loadedViewController.getter();
  if (v1)
    OUTLINED_FUNCTION_7();
  else
    __break(1u);
}

id LazyViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void LazyViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LazyViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t LazyViewController.description.getter()
{
  sub_1B16BA574();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16BA6B8();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return 0;
}

uint64_t LazyViewController.tabBarSplitViewPresentation(for:)(char a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  LOBYTE(v11[0]) = 2;
  sub_1B16B815C();
  LazyViewController.loadedViewController.getter();
  if (v2 && (v3 = sub_1B13D5C64(), OUTLINED_FUNCTION_197(v3, &qword_1ED179CA0), (OUTLINED_FUNCTION_21_25() & 1) != 0))
  {
    if (*((_QWORD *)&v9 + 1))
    {
      v4 = a1 & 1;
      sub_1B13C06D0(&v8, (uint64_t)v11);
      v5 = v12;
      v6 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v4, v5, v6);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
  }
  else
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
  }
  sub_1B13D5EE4((uint64_t)&v8, &qword_1EEF31760, &qword_1ED179CA0);
  result = OUTLINED_FUNCTION_12_36();
  __break(1u);
  return result;
}

uint64_t sub_1B155DA7C(char a1)
{
  return LazyViewController.tabBarSplitViewPresentation(for:)(a1 & 1);
}

void LazyViewController.responder.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  LazyViewController.loadedViewController.getter();
  if (!v0)
    v1 = v2;
}

Swift::Void __swiftcall LazyViewController.textBeginEditing()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[5];

  LazyViewController.loadedViewController.getter();
  if (!v0
    || (v1 = OUTLINED_FUNCTION_2_75(),
        OUTLINED_FUNCTION_197(v1, &qword_1EEF31768),
        v2 = OUTLINED_FUNCTION_7_5(),
        (v2 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    goto LABEL_6;
  }
  if (!v14)
  {
LABEL_6:
    OUTLINED_FUNCTION_8_45(v2, (unint64_t *)&unk_1EEF36310, &qword_1EEF31768, (uint64_t)&protocol descriptor for TextEditObserving, v3, v4, v5, v6, v13);
    goto LABEL_7;
  }
  sub_1B13C06D0(&v13, (uint64_t)v15);
  v7 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  v8 = OUTLINED_FUNCTION_21(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_80(v8, v9, v10, v11, v12);
LABEL_7:
  OUTLINED_FUNCTION_21_1();
}

Swift::Void __swiftcall LazyViewController.textEndEditing()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];

  LazyViewController.loadedViewController.getter();
  if (!v1
    || (v2 = OUTLINED_FUNCTION_2_75(),
        OUTLINED_FUNCTION_197(v2, &qword_1EEF31768),
        v3 = OUTLINED_FUNCTION_7_5(),
        (v3 & 1) == 0))
  {
    OUTLINED_FUNCTION_16_10();
    goto LABEL_6;
  }
  if (!v23)
  {
LABEL_6:
    OUTLINED_FUNCTION_8_45(v3, (unint64_t *)&unk_1EEF36310, &qword_1EEF31768, (uint64_t)&protocol descriptor for TextEditObserving, v4, v5, v6, v7, v21);
    goto LABEL_7;
  }
  v8 = sub_1B13C06D0(&v21, (uint64_t)v25);
  OUTLINED_FUNCTION_20_3(v8, v9, v10, v11, v12, v13, v14, v15, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25[0], v25[1], v25[2], v25[3]);
  v16 = OUTLINED_FUNCTION_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16));
  OUTLINED_FUNCTION_80(v16, v17, v18, v19, v20);
LABEL_7:
  OUTLINED_FUNCTION_21_1();
}

void sub_1B155DC04()
{
  LazyViewController.textBeginEditing()();
}

void sub_1B155DC24()
{
  LazyViewController.textEndEditing()();
}

uint64_t sub_1B155DC44()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B155DC68()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B155DC94(_QWORD *a1@<X8>)
{
  uint64_t v2;

  LazyViewController.loadedViewController.getter();
  *a1 = v2;
}

uint64_t method lookup function for LazyViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LazyViewController.__allocating_init(identifier:trigger:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void UITableView.register<A>(cell:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B155DCF4(a1, a2, a3, a4, (SEL *)&selRef_registerClass_forCellReuseIdentifier_);
}

void UITableView.register<A>(headerFooterView:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B155DCF4(a1, a2, a3, a4, (SEL *)&selRef_registerClass_forHeaderFooterViewReuseIdentifier_);
}

void sub_1B155DCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v5;
  uint64_t ObjCClassFromMetadata;
  id v8;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1B13EB1A0();
  v8 = (id)sub_1B16B983C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, *a5, ObjCClassFromMetadata, v8);

}

void UITableView.dequeue<A>(headerFooterView:name:)()
{
  void *v0;
  void *v1;
  id v2;

  sub_1B13EB1A0();
  v1 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v1);

  if (v2)
    swift_dynamicCastUnknownClassUnconditional();
  else
    __break(1u);
}

uint64_t UITableView.dequeue<A>(cell:at:name:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = v0;
  sub_1B13EB1A0();
  v2 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1B16B7CDC();
  v4 = objc_msgSend(v1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v2, v3);

  return swift_dynamicCastUnknownClassUnconditional();
}

id ColorSectionDecorationItem.color.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t static ColorSectionDecorationItem.== infix(_:_:)()
{
  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838F0);
  return sub_1B16BA214() & 1;
}

Swift::Void __swiftcall ColorSectionDecorationView.willMove(toSuperview:)(UIView_optional *toSuperview)
{
  void *v1;
  objc_super v2;

  v2.receiver = v1;
  v2.super_class = (Class)OUTLINED_FUNCTION_31_1();
  -[UIView_optional willMoveToSuperview:](&v2, sel_willMoveToSuperview_);
  OUTLINED_FUNCTION_7();
}

Swift::Void __swiftcall ColorSectionDecorationView.didMoveToSuperview()()
{
  sub_1B155E35C();
}

Swift::Void __swiftcall ColorSectionDecorationView.apply(_:)(UICollectionViewLayoutAttributes *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  UICollectionViewLayoutAttributes *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _BYTE v14[24];
  uint64_t v15;
  objc_super v16;

  v2 = v1;
  v16.receiver = v2;
  v16.super_class = (Class)swift_getObjectType();
  -[UICollectionViewLayoutAttributes applyLayoutAttributes:](&v16, sel_applyLayoutAttributes_, a1);
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = v4 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_model;
    swift_beginAccess();
    sub_1B1457354(v5, (uint64_t)v14);
    if (v15)
    {
      sub_1B1406A1C();
      v6 = a1;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v7 = v13;
        v8 = objc_msgSend(v2, sel_backgroundColor);
        if (!v8)
          goto LABEL_11;
        v9 = v8;
        sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838C0);
        v10 = v7;
        v11 = v9;
        LOBYTE(v9) = sub_1B16BA214();

        if ((v9 & 1) != 0)
        {

        }
        else
        {
LABEL_11:
          objc_msgSend(v2, sel_setBackgroundColor_, v7);

        }
        return;
      }

    }
    else
    {
      sub_1B1497A44((uint64_t)v14);
    }
  }
  v12 = objc_msgSend(v2, sel_backgroundColor);
  if (v12)
  {

    objc_msgSend(v2, sel_setBackgroundColor_, 0);
  }
}

id ColorSectionDecorationView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id ColorSectionDecorationView.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_57();
  ObjectType = swift_getObjectType();
  v1 = OUTLINED_FUNCTION_54();
  return objc_msgSendSuper2(v2, v3, v1, v0, ObjectType);
}

id ColorSectionDecorationView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ColorSectionDecorationView.init(coder:)()
{
  void *v0;
  void *v1;
  id v2;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)OUTLINED_FUNCTION_31_1();
  v2 = objc_msgSendSuper2(&v4, sel_initWithCoder_, v0);

  return v2;
}

void ColorSectionDecorationView.__deallocating_deinit()
{
  sub_1B155E35C();
}

void sub_1B155E35C()
{
  SEL *v0;
  void *v1;
  objc_super v2;

  v2.receiver = v1;
  v2.super_class = (Class)OUTLINED_FUNCTION_31_1();
  objc_msgSendSuper2(&v2, *v0);
  OUTLINED_FUNCTION_7();
}

uint64_t assignWithCopy for ColorSectionDecorationItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = (void *)a2[2];
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  v8 = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  return a1;
}

uint64_t assignWithTake for ColorSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorSectionDecorationItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSectionDecorationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

id SelectedBackgroundView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

BOOL static SelectedBackgroundView.Styling.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void SelectedBackgroundView.Styling.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

uint64_t SelectedBackgroundView.Styling.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

double SelectedBackgroundView.insets.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_insets;
  OUTLINED_FUNCTION_13();
  return *(double *)v1;
}

void SelectedBackgroundView.insets.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

double sub_1B155E604@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_cornerRadius);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void SelectedBackgroundView.cornerRadius.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B155E694(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B13DF88C();
  OUTLINED_FUNCTION_0_0();
}

uint64_t SelectedBackgroundView.styling.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_styling);
  result = OUTLINED_FUNCTION_13();
  *a1 = *v3;
  return result;
}

void SelectedBackgroundView.styling.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id SelectedBackgroundView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SelectedBackgroundView.init(coder:)()
{
  _BYTE *v0;
  _OWORD *v1;
  __int128 v2;

  v1 = &v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_insets];
  v2 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  *v1 = *MEMORY[0x1E0DC49E8];
  v1[1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_cornerRadius] = 0x4024000000000000;
  v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_styling] = 0;

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall SelectedBackgroundView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  objc_super v3;

  isa = a1.value.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v3, sel_traitCollectionDidChange_, isa);
  sub_1B13DF88C();
}

id SelectedBackgroundView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B155E900()
{
  unint64_t result;

  result = qword_1EEF33688;
  if (!qword_1EEF33688)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for SelectedBackgroundView.Styling, &type metadata for SelectedBackgroundView.Styling);
    atomic_store(result, (unint64_t *)&qword_1EEF33688);
  }
  return result;
}

void sub_1B155E940(double *a1)
{
  SelectedBackgroundView.cornerRadius.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t storeEnumTagSinglePayload for SelectedBackgroundView.Styling(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B155E9AC + 4 * byte_1B16D0EF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B155E9E0 + 4 * byte_1B16D0EF0[v4]))();
}

uint64_t sub_1B155E9E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B155E9E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B155E9F0);
  return result;
}

uint64_t sub_1B155E9FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B155EA04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B155EA08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B155EA10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1B155EA1C(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;

  if (a1 >> 62)
  {
    sub_1B16B9740();
    v2 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    sub_1B145560C();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      for (i = 0; i != v2; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          MEMORY[0x1B5E1DF60](i, a1);
        else
          swift_unknownObjectRetain();
        sub_1B155ECF8();
        swift_dynamicCast();
        v4 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B145560C();
          v4 = v7;
        }
        v5 = *(_QWORD *)(v4 + 16);
        if (v5 >= *(_QWORD *)(v4 + 24) >> 1)
        {
          sub_1B145560C();
          v4 = v7;
        }
        *(_QWORD *)(v4 + 16) = v5 + 1;
        sub_1B143D3E0(&v6, (_OWORD *)(v4 + 32 * v5 + 32));
      }
    }
  }
}

id SharingActivityProviderType.activityItemsConfiguration.getter(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v10[6];

  v2 = v1;
  sub_1B13A1818(0, &qword_1EEF33690);
  v4 = objc_msgSend(v1, sel_activityItemSources);
  sub_1B155ECF8();
  sub_1B16B9B54();

  v5 = sub_1B155ED4C();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v2;
  v10[4] = sub_1B155EE44;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1B155EE4C;
  v10[3] = &block_descriptor_41;
  v7 = _Block_copy(v10);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v5, sel_setApplicationActivitiesProvider_, v7);
  _Block_release(v7);
  v8 = objc_msgSend(v2, sel_excludedActivityTypes);
  objc_msgSend(v5, sel_ts_setExcludedActivityTypes_, v8);

  return v5;
}

unint64_t sub_1B155ECF8()
{
  unint64_t result;

  result = qword_1EEF33698;
  if (!qword_1EEF33698)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF33698);
  }
  return result;
}

id sub_1B155ED4C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1B155ECF8();
  v1 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initTSWithActivityItemSources_, v1);

  return v2;
}

uint64_t sub_1B155EDC0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_activities);
  sub_1B13A1818(0, &qword_1EEF33748);
  v2 = sub_1B16B9B54();

  return v2;
}

uint64_t sub_1B155EE20()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B155EE44()
{
  uint64_t v0;

  return sub_1B155EDC0(*(void **)(v0 + 24));
}

id sub_1B155EE4C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_1B13A1818(0, &qword_1EEF33748);
  v3 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  return v3;
}

void SharingActivityProvider.activityItemSources.getter()
{
  sub_1B155F094();
}

void SharingActivityProvider.activityItemSources.setter(uint64_t a1)
{
  sub_1B155F154(a1, &OBJC_IVAR___TSSharingActivityProvider_activityItemSources);
}

void SharingActivityProvider.activityItemSources.modify()
{
  OUTLINED_FUNCTION_0_105();
  OUTLINED_FUNCTION_0_0();
}

void SharingActivityProvider.activities.getter()
{
  sub_1B155F094();
}

void SharingActivityProvider.activities.setter(uint64_t a1)
{
  sub_1B155F154(a1, &OBJC_IVAR___TSSharingActivityProvider_activities);
}

void SharingActivityProvider.activities.modify()
{
  OUTLINED_FUNCTION_0_105();
  OUTLINED_FUNCTION_0_0();
}

void (*sub_1B155F044(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(_QWORD)))(_QWORD)
{
  a3();
  a4(0);
  sub_1B16B9B48();
  OUTLINED_FUNCTION_8_46();
  return a4;
}

void SharingActivityProvider.excludedActivityTypes.getter()
{
  sub_1B155F094();
}

void sub_1B155F094()
{
  OUTLINED_FUNCTION_13();
  sub_1B16B9740();
  OUTLINED_FUNCTION_48();
}

void sub_1B155F0E0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(uint64_t))
{
  uint64_t v7;
  id v8;

  a4(0);
  v7 = sub_1B16B9B54();
  v8 = a1;
  a5(v7);

}

void SharingActivityProvider.excludedActivityTypes.setter(uint64_t a1)
{
  sub_1B155F154(a1, &OBJC_IVAR___TSSharingActivityProvider_excludedActivityTypes);
}

void sub_1B155F154(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_6_63(*a2);
  OUTLINED_FUNCTION_13();
  *v2 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48();
}

void SharingActivityProvider.excludedActivityTypes.modify()
{
  OUTLINED_FUNCTION_0_105();
  OUTLINED_FUNCTION_0_0();
}

void SharingActivityProvider.linkPresentationSource.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_6_63(OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource);
  OUTLINED_FUNCTION_13();
  sub_1B1405FC4(v1, a1);
  OUTLINED_FUNCTION_48();
}

void SharingActivityProvider.linkPresentationSource.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_6_63(OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource);
  OUTLINED_FUNCTION_13();
  sub_1B13FCE8C(a1, v1);
  swift_endAccess();
  OUTLINED_FUNCTION_48();
}

void SharingActivityProvider.linkPresentationSource.modify()
{
  OUTLINED_FUNCTION_0_105();
  OUTLINED_FUNCTION_0_0();
}

uint64_t SharingActivityProvider.activityItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  unint64_t v7;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];

  v1 = v0 + OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource;
  OUTLINED_FUNCTION_13();
  sub_1B1405FC4(v1, (uint64_t)&v9);
  if (v10)
  {
    sub_1B143D3E0(&v9, v11);
    OUTLINED_FUNCTION_13();
    v2 = sub_1B16B9740();
    sub_1B155EA1C(v2);
    v4 = v3;
    swift_bridgeObjectRelease();
    sub_1B1429754(0, (unint64_t *)&qword_1ED1839C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
    sub_1B14297B8((uint64_t)v11, inited + 32);
    sub_1B149286C();
    v6 = v4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_1B13F77F4((uint64_t)&v9);
    v6 = v0 + OBJC_IVAR___TSSharingActivityProvider_activityItemSources;
    OUTLINED_FUNCTION_13();
    v7 = sub_1B16B9740();
    sub_1B155EA1C(v7);
    OUTLINED_FUNCTION_8_46();
  }
  return v6;
}

void SharingActivityProvider.__allocating_init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_7_6());
  SharingActivityProvider.init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)();
}

void SharingActivityProvider.init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  objc_super v8;

  OUTLINED_FUNCTION_7_6();
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v1[OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(_QWORD *)&v1[OBJC_IVAR___TSSharingActivityProvider_activities] = v4;
  *(_QWORD *)&v1[OBJC_IVAR___TSSharingActivityProvider_activityItemSources] = v3;
  *(_QWORD *)&v1[OBJC_IVAR___TSSharingActivityProvider_excludedActivityTypes] = v2;
  OUTLINED_FUNCTION_13();
  v7 = v1;
  sub_1B155F620(v0, (uint64_t)v6);
  swift_endAccess();

  v8.receiver = v7;
  v8.super_class = ObjectType;
  objc_msgSendSuper2(&v8, sel_init);
  sub_1B13F77F4(v0);
  OUTLINED_FUNCTION_2_6();
}

uint64_t sub_1B155F620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1429754(0, (unint64_t *)&qword_1ED188590, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void static SharingActivityProvider.empty.getter()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  SharingActivityProvider.init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)();
  OUTLINED_FUNCTION_48();
}

id SharingActivityProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingActivityProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingActivityProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SharingActivityProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingActivityProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingActivityProvider.__allocating_init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t initializeBufferWithCopyOfBuffer for MotionDisabledTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1B13E938C(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for MotionDisabledTransform(uint64_t a1)
{
  return sub_1B13E9374(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for MotionDisabledTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1B13E938C(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1B13E9374(v5, v6);
  return a1;
}

uint64_t assignWithTake for MotionDisabledTransform(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1B13E9374(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for MotionDisabledTransform()
{
  return &type metadata for MotionDisabledTransform;
}

uint64_t ComplexImageProcessorRequest.Mask.identifier.getter()
{
  void *v0;
  void *v1;
  __n128 *v2;
  int v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE __dst[144];
  _BYTE v12[144];
  _BYTE v13[144];

  sub_1B155FAB8(v0, __dst);
  v1 = sub_1B155FAB8(__dst, v12);
  OUTLINED_FUNCTION_4_60((uint64_t)v1, (unint64_t *)&qword_1ED183998, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v2 = (__n128 *)OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_1_90(v2, (__n128)xmmword_1B16C51E0);
  sub_1B155FACC(v12, v13);
  v3 = sub_1B155FB08((uint64_t)v13);
  v4 = (unint64_t *)sub_1B155FB14((uint64_t)v13);
  if (v3 == 1)
  {
    v5 = *v4;
    v6 = sub_1B16B9740();
  }
  else
  {
    OUTLINED_FUNCTION_6_64();
    GradientDescriptor.identifier.getter(v7);
    v5 = v8;
    v6 = v9;
  }
  v2[3].n128_u64[0] = v5;
  v2[3].n128_u64[1] = v6;
  OUTLINED_FUNCTION_4_60(v6, (unint64_t *)&qword_1ED183718, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_2_77();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_66();
}

void *sub_1B155FAB8(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x90uLL);
}

void *sub_1B155FACC(const void *a1, void *a2)
{
  __swift_memcpy144_8(a2, a1);
  return a2;
}

uint64_t sub_1B155FB08(uint64_t a1)
{
  return *(_QWORD *)(a1 + 120) >> 63;
}

uint64_t sub_1B155FB14(uint64_t result)
{
  *(_QWORD *)(result + 120) &= ~0x8000000000000000;
  return result;
}

uint64_t ComplexImageProcessorRequest.Blend.identifier.getter()
{
  void *v0;
  void **v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  __n128 *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE v22[152];
  _BYTE __dst[152];
  _BYTE v24[152];

  sub_1B1560730(v0, __dst);
  sub_1B1560730(__dst, v24);
  if (sub_1B156068C((uint64_t)v24) == 1)
  {
    v1 = (void **)sub_1B1560698((uint64_t)v24);
    v2 = *v1;
    OUTLINED_FUNCTION_4_60((uint64_t)v1, (unint64_t *)&qword_1ED183998, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
    v3 = OUTLINED_FUNCTION_25();
    *(_OWORD *)(v3 + 16) = xmmword_1B16C6D10;
    *(_QWORD *)(v3 + 32) = 0x726F6C6F63;
    *(_QWORD *)(v3 + 40) = 0xE500000000000000;
    sub_1B1560730(__dst, v22);
    v4 = *(id *)sub_1B1560698((uint64_t)v22);
    v5 = objc_msgSend(v2, sel_description);
    v6 = sub_1B16B9860();
    v8 = v7;

    *(_QWORD *)(v3 + 48) = v6;
    *(_QWORD *)(v3 + 56) = v8;
    type metadata accessor for CGBlendMode(0);
    v9 = OUTLINED_FUNCTION_18_30();
    *(_QWORD *)(v3 + 64) = v9;
    *(_QWORD *)(v3 + 72) = v10;
    OUTLINED_FUNCTION_4_60(v9, (unint64_t *)&qword_1ED183718, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    OUTLINED_FUNCTION_10_44();
    OUTLINED_FUNCTION_2_77();
    OUTLINED_FUNCTION_11_39();
    sub_1B156084C();
  }
  else
  {
    v11 = (const void *)sub_1B1560698((uint64_t)v24);
    OUTLINED_FUNCTION_4_60((uint64_t)v11, (unint64_t *)&qword_1ED183998, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
    v12 = (__n128 *)OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_1_90(v12, (__n128)xmmword_1B16C6D10);
    sub_1B155FACC(v11, v22);
    LODWORD(v11) = sub_1B155FB08((uint64_t)v22);
    v13 = (unint64_t *)sub_1B155FB14((uint64_t)v22);
    if ((_DWORD)v11 == 1)
    {
      v14 = *v13;
      v15 = sub_1B16B9740();
    }
    else
    {
      OUTLINED_FUNCTION_6_64();
      GradientDescriptor.identifier.getter(v16);
      v14 = v17;
      v15 = v18;
    }
    v12[3].n128_u64[0] = v14;
    v12[3].n128_u64[1] = v15;
    type metadata accessor for CGBlendMode(0);
    v19 = OUTLINED_FUNCTION_18_30();
    v12[4].n128_u64[0] = v19;
    v12[4].n128_u64[1] = v20;
    OUTLINED_FUNCTION_4_60(v19, (unint64_t *)&qword_1ED183718, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    OUTLINED_FUNCTION_10_44();
    OUTLINED_FUNCTION_2_77();
    OUTLINED_FUNCTION_11_39();
  }
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_66();
}

void ComplexImageProcessorRequest.Instruction.identifier.getter()
{
  void *v0;
  char *v1;
  _BYTE __dst[152];
  _BYTE v3[152];

  sub_1B1560730(v0, __dst);
  sub_1B1560730(__dst, v3);
  v1 = (char *)sub_1B155FDD0 + 4 * byte_1B16D1050[sub_1B1560744((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1B155FDD0()
{
  unint64_t v0;
  void *v1;
  void *v2;
  __n128 *v3;
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  char v21;
  _BYTE v22[144];
  _BYTE v23[144];
  _QWORD v24[20];
  uint64_t v25;

  v1 = (void *)OUTLINED_FUNCTION_7_50();
  v2 = sub_1B155FAB8(v1, v22);
  OUTLINED_FUNCTION_4_60((uint64_t)v2, (unint64_t *)&qword_1ED183998, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v3 = (__n128 *)OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_1_90(v3, (__n128)xmmword_1B16C51E0);
  sub_1B155FACC(v22, v23);
  if (sub_1B155FB08((uint64_t)v23) == 1)
  {
    v4 = (uint64_t **)sub_1B155FB14((uint64_t)v23);
    v5 = *v4;
    v0 = (unint64_t)v4[1];
    OUTLINED_FUNCTION_16_35();
    v6 = sub_1B16B9740();
  }
  else
  {
    sub_1B155FB14((uint64_t)v23);
    OUTLINED_FUNCTION_6_64();
    v15 = v7;
    v16 = *(_OWORD *)(v8 + 8);
    v17 = *(_OWORD *)(v8 + 24);
    v18 = v9;
    v19 = v10;
    v20 = *(_OWORD *)(v8 + 56);
    v21 = v11;
    sub_1B1560730(&v25, v24);
    v12 = (uint64_t *)sub_1B156083C((uint64_t)v24);
    v13 = sub_1B15609F4(v12);
    v5 = &v15;
    GradientDescriptor.identifier.getter((uint64_t)v13);
    OUTLINED_FUNCTION_11_39();
  }
  v3[3].n128_u64[0] = (unint64_t)v5;
  v3[3].n128_u64[1] = v0;
  v24[0] = v3;
  OUTLINED_FUNCTION_4_60(v6, (unint64_t *)&qword_1ED183718, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_2_77();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_16_35();
  return OUTLINED_FUNCTION_66();
}

uint64_t ComplexImageProcessorRequest.assetHandles.getter()
{
  return sub_1B16B9740();
}

uint64_t ComplexImageProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1B16B9740();
  return v1;
}

uint64_t ComplexImageProcessorRequest.__allocating_init(assetHandle:instructions:size:imageRenderingMode:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v11;
  uint64_t v12;

  v11 = a5 & 1;
  v12 = OUTLINED_FUNCTION_25();
  ComplexImageProcessorRequest.init(assetHandle:instructions:size:imageRenderingMode:)(a1, a2, a3, a4, v11, a6);
  return v12;
}

uint64_t ComplexImageProcessorRequest.init(assetHandle:instructions:size:imageRenderingMode:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  char v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = a5 & 1;
  sub_1B14EB214();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
  *(_QWORD *)(inited + 32) = 0x6567616D69;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_1B13B4DC0((uint64_t)a1, inited + 48);
  sub_1B14EB2CC();
  *(_QWORD *)(v6 + 16) = sub_1B16B9728();
  sub_1B13B4DC0((uint64_t)a1, v6 + 40);
  *(_QWORD *)(v6 + 80) = a2;
  v14 = sub_1B16B9740();
  v15 = sub_1B156033C(v14, a3, a4, v12, a1, a6);
  v17 = v16;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)(v6 + 24) = v15;
  *(_QWORD *)(v6 + 32) = v17;
  *(_QWORD *)(v6 + 88) = a3;
  *(_QWORD *)(v6 + 96) = a4;
  *(_BYTE *)(v6 + 104) = v12;
  *(_QWORD *)(v6 + 112) = a6;
  return v6;
}

uint64_t sub_1B156033C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v27[19];
  _QWORD __dst[19];
  uint64_t v29;

  v6 = a6;
  v9 = a3;
  v10 = a2;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1B1490D34();
    v12 = v29;
    v14 = (char *)(a1 + 32);
    do
    {
      sub_1B1560730(v14, __dst);
      sub_1B1560730(__dst, v27);
      ComplexImageProcessorRequest.Instruction.identifier.getter();
      v16 = v15;
      v18 = v17;
      v29 = v12;
      v19 = *(_QWORD *)(v12 + 16);
      if (v19 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_1B1490D34();
        v12 = v29;
      }
      *(_QWORD *)(v12 + 16) = v19 + 1;
      v20 = v12 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v16;
      *(_QWORD *)(v20 + 40) = v18;
      v14 += 152;
      --v11;
    }
    while (v11);
    v9 = a3;
    v6 = a6;
    v10 = a2;
  }
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  v21 = a5[3];
  v22 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    v27[0] = v10;
    v27[1] = v9;
    type metadata accessor for CGSize(0);
    sub_1B16BA6B8();
  }
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  v27[0] = v6;
  type metadata accessor for RenderingMode(0);
  sub_1B16BA6B8();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  v27[0] = v12;
  sub_1B13C5CDC(0, (unint64_t *)&qword_1ED183718, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1B140462C();
  sub_1B16B9800();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  return __dst[0];
}

uint64_t ComplexImageProcessorRequest.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ComplexImageProcessorRequest.__deallocating_deinit()
{
  ComplexImageProcessorRequest.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B156064C()
{
  return ComplexImageProcessorRequest.assetHandles.getter();
}

uint64_t sub_1B156066C()
{
  return ComplexImageProcessorRequest.cacheIdentifier.getter();
}

uint64_t sub_1B156068C(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 120) >> 62) & 1;
}

uint64_t sub_1B1560698(uint64_t result)
{
  *(_QWORD *)(result + 120) &= ~0x4000000000000000uLL;
  return result;
}

void sub_1B15606A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if ((a16 & 0x4000000000000000) != 0)

  else
    sub_1B15606E0((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1B15606E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16 < 0)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1B1560730(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x94uLL);
}

uint64_t sub_1B1560744(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 120) >> 59) & 7;
}

void sub_1B1560750(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  switch((a16 >> 59) & 7)
  {
    case 0uLL:
      sub_1B15606E0((uint64_t)a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16);
      break;
    case 1uLL:
      sub_1B15606A8(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16 & 0xC7FFFFFFFFFFFFFFLL);
      break;
    case 2uLL:
      sub_1B1560808(a1, a2, a3);
      break;
    case 4uLL:

      break;
    default:
      return;
  }
}

void sub_1B1560808(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 <= 1u)
  {

  }
}

uint64_t sub_1B156083C(uint64_t result)
{
  *(_QWORD *)(result + 120) &= 0xC7FFFFFFFFFFFFFFLL;
  return result;
}

void sub_1B156084C()
{
  void (*v0)(void);

  OUTLINED_FUNCTION_9_49();
  OUTLINED_FUNCTION_15_29();
  v0();
  OUTLINED_FUNCTION_14_29();
}

id sub_1B1560894(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  switch((a16 >> 59) & 7)
  {
    case 0uLL:
      result = (id)sub_1B156094C((uint64_t)result, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16);
      break;
    case 1uLL:
      result = sub_1B1560988(result, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16 & 0xC7FFFFFFFFFFFFFFLL);
      break;
    case 2uLL:
      result = sub_1B15609C0(result, a2, a3);
      break;
    case 4uLL:
      result = a11;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B156094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16 < 0)
    sub_1B16B9740();
  sub_1B16B9740();
  return sub_1B16B9740();
}

id sub_1B1560988(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if ((a16 & 0x4000000000000000) != 0)
    return a1;
  else
    return (id)sub_1B156094C((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

id sub_1B15609C0(id result, void *a2, unsigned __int8 a3)
{
  id v3;

  if (a3 <= 1u)
  {
    v3 = result;
    return a2;
  }
  return result;
}

uint64_t *sub_1B15609F4(uint64_t *a1)
{
  sub_1B156094C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

uint64_t type metadata accessor for ComplexImageProcessorRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for ComplexImageProcessorRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ComplexImageProcessorRequest.__allocating_init(assetHandle:instructions:size:imageRenderingMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 + 128))(a1, a2, a3, a4, a5 & 1);
}

uint64_t destroy for Gradient(uint64_t *a1)
{
  return sub_1B15606E0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
}

uint64_t *initializeWithCopy for Gradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  sub_1B156094C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v25 = a2[9];
  v26 = a2[10];
  v27 = a2[11];
  v28 = a2[12];
  v29 = a2[13];
  v30 = a2[14];
  v31 = a2[15];
  v32 = a2[16];
  v33 = a2[17];
  sub_1B156094C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29, v30, v31);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v26;
  *(_QWORD *)(a1 + 88) = v27;
  *(_QWORD *)(a1 + 96) = v28;
  *(_QWORD *)(a1 + 104) = v29;
  *(_QWORD *)(a1 + 112) = v30;
  *(_QWORD *)(a1 + 120) = v31;
  *(_QWORD *)(a1 + 128) = v32;
  *(_QWORD *)(a1 + 136) = v33;
  sub_1B15606E0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1));
  return a1;
}

void *__swift_memcpy144_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t assignWithTake for Gradient(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = *(_OWORD *)(a1 + 112);
  v15 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v16;
  v17 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v17;
  v18 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v18;
  *(_OWORD *)(a1 + 128) = a2[8];
  sub_1B15606E0(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for Gradient(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 144))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 120) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Gradient(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 136) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 2 * -a2;
      *(_QWORD *)(a1 + 128) = 0;
      *(_QWORD *)(a1 + 136) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ComplexImageProcessorRequest.Mask()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t destroy for ComplexImageProcessorRequest.Blend()
{
  return sub_1B1560EF0();
}

uint64_t initializeWithCopy for ComplexImageProcessorRequest.Blend(uint64_t a1, uint64_t *a2)
{
  return sub_1B1560F4C(a1, a2);
}

uint64_t assignWithCopy for ComplexImageProcessorRequest.Blend(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B1561084(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1B1560988, (void (*)(void))sub_1B15606A8);
}

void *__swift_memcpy148_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x94uLL);
}

void assignWithTake for ComplexImageProcessorRequest.Blend(uint64_t a1)
{
  sub_1B15611F0(a1);
}

uint64_t sub_1B1560EC0(uint64_t result, char a2)
{
  *(_QWORD *)(result + 120) = *(_QWORD *)(result + 120) & 0x8000000000000001 | ((unint64_t)(a2 & 1) << 62);
  return result;
}

void type metadata accessor for ComplexImageProcessorRequest.Blend()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t destroy for ComplexImageProcessorRequest.Instruction()
{
  return sub_1B1560EF0();
}

uint64_t sub_1B1560EF0()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  OUTLINED_FUNCTION_15_29();
  return v0(v1);
}

uint64_t initializeWithCopy for ComplexImageProcessorRequest.Instruction(uint64_t a1, uint64_t *a2)
{
  return sub_1B1560F4C(a1, a2);
}

uint64_t sub_1B1560F4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v15 = a2[9];
  v16 = a2[10];
  v17 = a2[11];
  v18 = a2[12];
  v19 = a2[13];
  v20 = a2[14];
  v21 = a2[15];
  v22 = a2[16];
  v23 = a2[17];
  v24 = *((_DWORD *)a2 + 36);
  v12 = OUTLINED_FUNCTION_66();
  v13(v12);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 96) = v18;
  *(_QWORD *)(a1 + 104) = v19;
  *(_QWORD *)(a1 + 112) = v20;
  *(_QWORD *)(a1 + 120) = v21;
  *(_QWORD *)(a1 + 128) = v22;
  *(_QWORD *)(a1 + 136) = v23;
  *(_DWORD *)(a1 + 144) = v24;
  return a1;
}

uint64_t assignWithCopy for ComplexImageProcessorRequest.Instruction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B1561084(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1B1560894, (void (*)(void))sub_1B1560750);
}

uint64_t sub_1B1561084(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int), void (*a5)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v12 = a2[6];
  v13 = a2[7];
  v14 = a2[8];
  v16 = a2[9];
  v17 = a2[10];
  v18 = a2[11];
  v19 = a2[12];
  v20 = a2[13];
  v21 = a2[14];
  v22 = a2[15];
  v23 = a2[16];
  v24 = a2[17];
  v25 = *((_DWORD *)a2 + 36);
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = v20;
  *(_QWORD *)(a1 + 112) = v21;
  *(_QWORD *)(a1 + 120) = v22;
  *(_QWORD *)(a1 + 128) = v23;
  *(_QWORD *)(a1 + 136) = v24;
  *(_DWORD *)(a1 + 144) = v25;
  OUTLINED_FUNCTION_15_29();
  a5();
  return a1;
}

void assignWithTake for ComplexImageProcessorRequest.Instruction(uint64_t a1)
{
  sub_1B15611F0(a1);
}

void sub_1B15611F0(uint64_t a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  int v7;
  void (*v8)(void);

  OUTLINED_FUNCTION_9_49();
  v3 = v2[1];
  *(_OWORD *)a1 = *v2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = v2[3];
  *(_OWORD *)(a1 + 32) = v2[2];
  *(_OWORD *)(a1 + 48) = v4;
  v5 = v2[5];
  *(_OWORD *)(a1 + 64) = v2[4];
  *(_OWORD *)(a1 + 80) = v5;
  v6 = v2[7];
  *(_OWORD *)(a1 + 96) = v2[6];
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = v2[8];
  *(_DWORD *)(a1 + 144) = v7;
  OUTLINED_FUNCTION_15_29();
  v8();
  OUTLINED_FUNCTION_14_29();
}

uint64_t _s5TeaUI28ComplexImageProcessorRequestC5BlendOwet_0(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 148))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 120) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double sub_1B15612B4(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 136) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 144) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 148) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 2 * -a2;
      *(_QWORD *)(a1 + 128) = 0;
      *(_QWORD *)(a1 + 136) = 0;
      *(_DWORD *)(a1 + 144) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 148) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1B156133C(uint64_t result, char a2)
{
  *(_QWORD *)(result + 120) = *(_QWORD *)(result + 120) & 0xC000000000000001 | ((unint64_t)(a2 & 7) << 59);
  return result;
}

void type metadata accessor for ComplexImageProcessorRequest.Instruction()
{
  OUTLINED_FUNCTION_11_0();
}

BOOL static BlueprintResponderBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintResponderBehavior.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t BlueprintResponderBehavior.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B15613F4()
{
  unint64_t result;

  result = qword_1EEF33750;
  if (!qword_1EEF33750)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintResponderBehavior, &type metadata for BlueprintResponderBehavior);
    atomic_store(result, (unint64_t *)&qword_1EEF33750);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BlueprintResponderBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B156147C + 4 * byte_1B16D11A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15614B0 + 4 * byte_1B16D11A0[v4]))();
}

uint64_t sub_1B15614B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15614B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15614C0);
  return result;
}

uint64_t sub_1B15614CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15614D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15614D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15614E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

BOOL static CardViewScrollViewCoordinatorState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CardViewScrollViewCoordinatorState.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t CardViewScrollViewCoordinatorState.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B1561580()
{
  unint64_t result;

  result = qword_1EEF33758;
  if (!qword_1EEF33758)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardViewScrollViewCoordinatorState, &type metadata for CardViewScrollViewCoordinatorState);
    atomic_store(result, (unint64_t *)&qword_1EEF33758);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CardViewScrollViewCoordinatorState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1561608 + 4 * byte_1B16D1255[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B156163C + 4 * byte_1B16D1250[v4]))();
}

uint64_t sub_1B156163C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1561644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B156164CLL);
  return result;
}

uint64_t sub_1B1561658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1561660);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1561664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B156166C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardViewScrollViewCoordinatorState()
{
  return &type metadata for CardViewScrollViewCoordinatorState;
}

BOOL static ToolbarItemVisibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ToolbarItemVisibility.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t ToolbarItemVisibility.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B156171C()
{
  unint64_t result;

  result = qword_1EEF33760;
  if (!qword_1EEF33760)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ToolbarItemVisibility, &type metadata for ToolbarItemVisibility);
    atomic_store(result, (unint64_t *)&qword_1EEF33760);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ToolbarItemVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15617A4 + 4 * byte_1B16D1305[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15617D8 + 4 * byte_1B16D1300[v4]))();
}

uint64_t sub_1B15617D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15617E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15617E8);
  return result;
}

uint64_t sub_1B15617F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15617FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1561800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1561808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolbarItemVisibility()
{
  return &type metadata for ToolbarItemVisibility;
}

uint64_t sub_1B1561824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange);
  *v3 = a1;
  v3[1] = a2;
  return sub_1B13B9100(v4);
}

char *sub_1B1561844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  char *v11;
  char *result;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  objc_super v18;

  v5 = &v3[OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_textField;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3DB8]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_init);

  if (a3)
  {
    v9 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for TextFieldTableViewCell();
  v10 = objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, 1000, v9);

  v11 = (char *)v10;
  result = (char *)objc_msgSend(v11, sel_ts_editableTextField);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v13 = result;
  objc_msgSend(result, sel_setDelegate_, v11);

  result = (char *)OUTLINED_FUNCTION_0_108();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = result;
  objc_msgSend(result, sel_setTextAlignment_, 2);

  result = (char *)OUTLINED_FUNCTION_0_108();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = result;
  objc_msgSend(result, sel_setClearButtonMode_, 1);

  result = (char *)OUTLINED_FUNCTION_0_108();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v16 = result;
  objc_msgSend(result, sel_setAutocorrectionType_, 1);

  result = (char *)OUTLINED_FUNCTION_0_108();
  if (result)
  {
    v17 = result;
    objc_msgSend(result, sel_setAutocapitalizationType_, 0);

    objc_msgSend(v11, sel_setAccessoryView_, *(_QWORD *)&v11[OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_textField]);
    return v11;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_1B1561A64()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_textField;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3DB8]), sel_init);

  sub_1B16BA724();
  __break(1u);
}

uint64_t sub_1B1561B10(void *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  result = sub_1B15267F8(a1);
  if (v3)
  {
    v4 = v3;
    v5 = *(void (**)(uint64_t, uint64_t))(v1 + OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange);
    if (v5)
    {
      v6 = result;
      swift_retain();
      v5(v6, v4);
      sub_1B13B9100((uint64_t)v5);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B1561BE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextFieldTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TextFieldTableViewCell()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of TabBarControllerDelegate.tabBarController(_:willSelect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TabBarControllerDelegate.tabBarController(_:didSelect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

id sub_1B1561C7C()
{
  uint64_t v0;
  id result;

  result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController), sel_view));
  if (!result)
    __break(1u);
  return result;
}

void sub_1B1561CB4(void *a1, void *a2)
{
  char *v2;
  objc_class *v5;
  id v6;
  id v7;
  objc_super v8;

  v5 = (objc_class *)OUTLINED_FUNCTION_4();
  *(_QWORD *)&v2[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController] = a2;
  v8.receiver = v2;
  v8.super_class = v5;
  v6 = a1;
  v7 = a2;
  objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, 0, 0);

  OUTLINED_FUNCTION_44();
}

void sub_1B1561D34()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController] = 0;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B1561DB4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for BootstrapperViewController()
{
  return objc_opt_self();
}

void sub_1B1561E5C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  objc_super v25;

  v25.receiver = v0;
  v25.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_7_1((uint64_t)v25.super_class, sel_viewDidLoad, v1, v2, v3, v4, v5, v6, v25);
  OUTLINED_FUNCTION_6_65();
  v7 = OUTLINED_FUNCTION_34();
  if (!v7)
  {
    __break(1u);
    goto LABEL_15;
  }
  v8 = v7;
  v9 = OUTLINED_FUNCTION_2_1();
  if (!v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = v9;
  OUTLINED_FUNCTION_10_45();

  OUTLINED_FUNCTION_8_47();
  v11 = OUTLINED_FUNCTION_2_1();
  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = v11;
  v13 = OUTLINED_FUNCTION_34();
  if (!v13)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v14 = v13;
  objc_msgSend(v13, sel_bounds);
  OUTLINED_FUNCTION_13_2();

  OUTLINED_FUNCTION_1_7(v12, sel_setFrame_);
  objc_opt_self();
  v15 = (void *)swift_dynamicCastObjCClass();
  if (v15)
    objc_msgSend(v15, sel_ts_columnSeparatorsExtendToTitlebar_, 0);
  v16 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController];
  if (v16)
  {
    v17 = v16;
    OUTLINED_FUNCTION_6_65();
    v18 = OUTLINED_FUNCTION_34();
    if (v18)
    {
      v19 = v18;
      v20 = OUTLINED_FUNCTION_2_1();
      if (v20)
      {
        v21 = v20;
        OUTLINED_FUNCTION_10_45();

        OUTLINED_FUNCTION_8_47();
        v22 = OUTLINED_FUNCTION_2_1();
        if (v22)
        {
          v23 = v22;
          v24 = OUTLINED_FUNCTION_34();
          if (v24)
          {
            objc_msgSend(v24, sel_bounds);
            OUTLINED_FUNCTION_29_1();
            OUTLINED_FUNCTION_1_7(v23, sel_setFrame_);

            return;
          }
LABEL_21:
          __break(1u);
          return;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1B1562084()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_7_1((uint64_t)v12.super_class, sel_viewWillLayoutSubviews, v2, v3, v4, v5, v6, v7, v12);
  v8 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController];
  if (!v8)
    goto LABEL_5;
  if (!objc_msgSend(v8, sel_view))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = OUTLINED_FUNCTION_4_61();
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_bounds);
    OUTLINED_FUNCTION_13_2();

    OUTLINED_FUNCTION_1_7(v0, sel_setFrame_);
LABEL_5:
    if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController], sel_view))
    {
      v11 = OUTLINED_FUNCTION_4_61();
      if (v11)
      {
        objc_msgSend(v11, sel_bounds);
        OUTLINED_FUNCTION_29_1();
        OUTLINED_FUNCTION_1_7(v0, sel_setFrame_);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

void *sub_1B15621F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController);
  v2 = v1;
  if (!v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController);
    v3 = v2;
  }
  v4 = v1;
  return v2;
}

void sub_1B1562284()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController);
  sub_1B1426CBC();
  v2 = OUTLINED_FUNCTION_13_4();
  *(_OWORD *)(v2 + 16) = xmmword_1B16C95D0;
  if (v1)
  {
    OUTLINED_FUNCTION_5_63(v2);
  }
  else
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController);
    OUTLINED_FUNCTION_5_63(v2);
    v4 = v3;
    v1 = 0;
  }
  v5 = v1;
  OUTLINED_FUNCTION_44();
}

unint64_t sub_1B1562310()
{
  unint64_t result;

  result = qword_1EEF33848;
  if (!qword_1EEF33848)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF33848);
  }
  return result;
}

void sub_1B1562364()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v2 = OUTLINED_FUNCTION_34();
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v1 = objc_msgSend(v2, sel_snapshotViewAfterScreenUpdates_, 1);

  if (!v1)
    goto LABEL_6;
  v4 = OUTLINED_FUNCTION_34();
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_window);

  if (v6)
  {
    objc_msgSend(v6, sel_addSubview_, v1);

  }
LABEL_6:
  v7 = OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController;
  v8 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController];
  if (!v8)
    goto LABEL_11;
  objc_msgSend(v8, sel_willMoveToParentViewController_, 0);
  v9 = *(void **)&v0[v7];
  if (!v9)
    goto LABEL_11;
  v10 = objc_msgSend(v9, sel_view);
  if (!v10)
  {
LABEL_17:

    __break(1u);
    return;
  }
  v11 = v10;
  objc_msgSend(v10, sel_removeFromSuperview);

  v12 = *(void **)&v0[v7];
  if (!v12)
  {
LABEL_11:
    v13 = 0;
    goto LABEL_12;
  }
  objc_msgSend(v12, sel_removeFromParentViewController);
  v13 = *(void **)&v0[v7];
LABEL_12:
  *(_QWORD *)&v0[v7] = 0;

  objc_opt_self();
  v14 = (void *)swift_dynamicCastObjCClass();
  if (v14)
    objc_msgSend(v14, sel_ts_columnSeparatorsExtendToTitlebar_, 1);
  objc_msgSend(v0, sel_setNeedsStatusBarAppearanceUpdate);
}

uint64_t dispatch thunk of Previewable.canPreview.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for GradientDescriptor.Direction(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GradientDescriptor.Direction(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t sub_1B1562554(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

ValueMetadata *type metadata accessor for PreviewClipping()
{
  return &type metadata for PreviewClipping;
}

uint64_t CommandCenterWithTracker.__allocating_init(commandCenter:tracker:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1B13C06D0(a3, v6 + 32);
  return v6;
}

uint64_t CommandCenterWithTracker.execute<A>(command:context:location:sourceView:sourceRect:)(uint64_t *a1, uint64_t a2, _BYTE *a3, void *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = *a1;
  HIBYTE(v35) = *a3;
  sub_1B13B4DC0(v4 + 32, (uint64_t)v31);
  type metadata accessor for CommandExecutionSource();
  v8 = swift_allocObject();
  v10 = v32;
  v9 = v33;
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  MEMORY[0x1E0C80A78](v11, v11);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t))(v14 + 16))(v13 - v12);
  v15 = a4;
  OUTLINED_FUNCTION_14_30();
  sub_1B164D160(v16, v17, v18, v19, v20, v21, v22, v8, v10, v9, v27, a2, v30, v31[0], v31[1], v31[2], v32, v33, v34,
    v35,
    v36,
    v37);
  v24 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v25 = OUTLINED_FUNCTION_24_22();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 8))(a1, v29, v24, *(_QWORD *)(v7 + 88), v25, v8);
  return swift_release();
}

void CommandCenterWithTracker.canExecute<A>(command:context:location:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_15_16();
  v2 = v1;
  v4 = (uint64_t)v3;
  v5 = *v3;
  HIBYTE(v28) = *v6;
  sub_1B13B4DC0(v0 + 32, (uint64_t)v25);
  v29 = 0u;
  v30 = 0u;
  LOBYTE(v31) = 1;
  type metadata accessor for CommandExecutionSource();
  v7 = OUTLINED_FUNCTION_19_33();
  v8 = v26;
  v9 = v27;
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  MEMORY[0x1E0C80A78](v10, v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  (*(void (**)(uint64_t))(v14 + 16))(v12 - v11);
  OUTLINED_FUNCTION_14_30();
  sub_1B164D160(v15, v16, v17, v18, v19, v20, v21, v7, v8, v9, v25[0], v25[1], v25[2], v26, v27, v28, v29, *((uint64_t *)&v29 + 1), v30,
    *((uint64_t *)&v30 + 1),
    v31,
    v32);
  v23 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v24 = OUTLINED_FUNCTION_12_38();
  OUTLINED_FUNCTION_23_27(v4, v2, v23, *(_QWORD *)(v5 + 88), v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 120));
  swift_release();
  OUTLINED_FUNCTION_27();
}

void CommandCenterWithTracker.canExecute<A>(command:context:location:closure:)(uint64_t *a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;

  v9 = *a1;
  HIBYTE(v34) = *a3;
  sub_1B13B4DC0(v5 + 32, (uint64_t)v31);
  v35 = 0u;
  v36 = 0u;
  v37 = 1;
  type metadata accessor for CommandExecutionSource();
  v10 = OUTLINED_FUNCTION_19_33();
  v12 = v32;
  v11 = v33;
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  MEMORY[0x1E0C80A78](v13, v13);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t))(v16 + 16))(v15 - v14);
  OUTLINED_FUNCTION_14_30();
  sub_1B164D160(v17, v18, v19, v20, v21, v22, v23, v10, v12, v11, v28, a5, v31[0], v31[1], v31[2], v32, v33, v34, v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1));
  v25 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v26 = *(_QWORD *)(v5 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 128))(a1, a2, v25, a4, v30, *(_QWORD *)(v9 + 88), ObjectType, v26);
  swift_release();
  OUTLINED_FUNCTION_47();
}

uint64_t CommandCenterWithTracker.execute<A>(command:context:source:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  v8 = OUTLINED_FUNCTION_24_22();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 8))(a1, a2, a3, *(_QWORD *)(v7 + 88), v8, v3);
}

void CommandCenterWithTracker.canExecute<A>(command:context:source:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_16();
  v2 = v1;
  v4 = v3;
  v6 = (uint64_t)v5;
  v7 = *v5;
  v8 = OUTLINED_FUNCTION_12_38();
  OUTLINED_FUNCTION_23_27(v6, v4, v2, *(_QWORD *)(v7 + 88), v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 120));
  OUTLINED_FUNCTION_27();
}

void CommandCenterWithTracker.canExecute<A>(command:context:source:closure:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = OUTLINED_FUNCTION_5_64();
  OUTLINED_FUNCTION_6_66(v0, v1, v2, v3, v4, v5, v0);
  OUTLINED_FUNCTION_47();
}

void CommandCenterWithTracker.add<A>(_:for:with:tracker:closure:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_25_2();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *v9;
  v14 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v14 + 16))(v12, v10, v8, v6, v4, v2, *(_QWORD *)(v13 + 88), ObjectType);
  OUTLINED_FUNCTION_7_4();
}

void CommandCenterWithTracker.state<A, B>(for:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_15_16();
  v2 = v1;
  v4 = v3;
  v5 = (_QWORD *)*v3;
  v6 = OUTLINED_FUNCTION_12_38();
  (*(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v0 + 80))(v4, v2, v5[17], v5[18], v5[19], v6, v0);
  OUTLINED_FUNCTION_27();
}

void CommandCenterWithTracker.state<A, B>(for:context:closure:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_2();
  v0 = OUTLINED_FUNCTION_4_62();
  OUTLINED_FUNCTION_3_64(v0);
  OUTLINED_FUNCTION_7_4();
}

void CommandCenterWithTracker.remove(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_22_24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 24))(a1, v3, v1);
  OUTLINED_FUNCTION_31();
}

void CommandCenterWithTracker.remove<A>(_:for:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *a2;
  v6 = OUTLINED_FUNCTION_18_31();
  (*(void (**)(uint64_t, uint64_t *, _QWORD, uint64_t, uint64_t))(v2 + 32))(a1, a2, *(_QWORD *)(v5 + 88), v6, v2);
  OUTLINED_FUNCTION_67();
}

void CommandCenterWithTracker.register<A, B>(handler:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_15_16();
  v6 = OUTLINED_FUNCTION_8_48();
  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 40))(v3, v2, *(_QWORD *)(v5 + 88), v1, v0, v6, v4);
  OUTLINED_FUNCTION_27();
}

void CommandCenterWithTracker.register<A, B, C>(handler:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_15_16();
  v6 = OUTLINED_FUNCTION_8_48();
  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, v2, *(_QWORD *)(v5 + 136), *(_QWORD *)(v5 + 144), v1, v0, v6, v4);
  OUTLINED_FUNCTION_27();
}

void CommandCenterWithTracker.registerHandler<A>(for:handle:canHandle:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = OUTLINED_FUNCTION_5_64();
  OUTLINED_FUNCTION_6_66(v0, v1, v2, v3, v4, v5, v0);
  OUTLINED_FUNCTION_47();
}

uint64_t CommandCenterWithTracker.registerHandler<A, B>(for:handle:canHandle:determineState:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;
  uint64_t v15;
  uint64_t ObjectType;

  v14 = (_QWORD *)*a1;
  v15 = *(_QWORD *)(v7 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v15 + 64))(a1, a2, a3, a4, a5, a6, a7, v14[17], v14[18], v14[19], ObjectType, v15);
}

void CommandCenterWithTracker.context<A>(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = OUTLINED_FUNCTION_18_31();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v1 + 72))(a1, *(_QWORD *)(v3 + 88), v4, v1);
  OUTLINED_FUNCTION_67();
}

void CommandCenterWithTracker.addExecuteObserver<A>(for:closure:)()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_7_51();
  v0 = OUTLINED_FUNCTION_16_36();
  v1(v0);
  OUTLINED_FUNCTION_27();
}

void CommandCenterWithTracker.addExecuteObserver<A, B>(for:closure:)()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_7_51();
  v0 = OUTLINED_FUNCTION_16_36();
  v1(v0);
  OUTLINED_FUNCTION_27();
}

void CommandCenterWithTracker.addStateObserver<A, B>(for:context:closure:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_2();
  v0 = OUTLINED_FUNCTION_4_62();
  OUTLINED_FUNCTION_3_64(v0);
  OUTLINED_FUNCTION_7_4();
}

Swift::Void __swiftcall CommandCenterWithTracker.invalidateCommands()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_21_26();
  OUTLINED_FUNCTION_20_33(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 136));
  OUTLINED_FUNCTION_31();
}

void CommandCenterWithTracker.invalidate<A>(command:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = OUTLINED_FUNCTION_22_24();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v1 + 144))(a1, *(_QWORD *)(v3 + 88), v4, v1);
  OUTLINED_FUNCTION_67();
}

Swift::Void __swiftcall CommandCenterWithTracker.cleanup()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_21_26();
  OUTLINED_FUNCTION_20_33(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 152));
  OUTLINED_FUNCTION_31();
}

uint64_t CommandCenterWithTracker.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t CommandCenterWithTracker.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1B1562EE8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return CommandCenterWithTracker.execute<A>(command:context:source:)(a1, a2, a3);
}

void sub_1B1562F08()
{
  CommandCenterWithTracker.register<A, B>(handler:for:)();
}

void sub_1B1562F14()
{
  CommandCenterWithTracker.register<A, B, C>(handler:for:)();
}

void sub_1B1562F30()
{
  CommandCenterWithTracker.state<A, B>(for:context:closure:)();
}

void sub_1B1562F38()
{
  CommandCenterWithTracker.addStateObserver<A, B>(for:context:closure:)();
}

uint64_t method lookup function for CommandCenterWithTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CommandCenterWithTracker.__allocating_init(commandCenter:tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t Then.init(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t method lookup function for Then()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Then.__allocating_init(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1B1562F94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0xA8);
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B1562FF8()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void BlueprintCollectionViewDelegate.delegate.getter()
{
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1563094()
{
  OUTLINED_FUNCTION_48();
}

void BlueprintCollectionViewDelegate.delegate.modify()
{
  _QWORD *v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_23_6();
  *(_QWORD *)(OUTLINED_FUNCTION_132_1((uint64_t)v1) + 40) = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B15630E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B1563100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1B1563164()
{
  swift_beginAccess();
  return swift_weakAssign();
}

void BlueprintCollectionViewDelegate.keyCommandManager.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_192_0();
  OUTLINED_FUNCTION_48();
}

void BlueprintCollectionViewDelegate.keyCommandManager.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v2 = OUTLINED_FUNCTION_23_6();
  *(_QWORD *)(OUTLINED_FUNCTION_132_1((uint64_t)v2) + 40) = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8);
  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_192_0();
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B1563270@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0xC0);
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B15632D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a2) + 0xC0);
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void BlueprintCollectionViewDelegate.selectionProvider.getter()
{
  OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1563380()
{
  OUTLINED_FUNCTION_48();
}

void BlueprintCollectionViewDelegate.selectionProvider.modify(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  v3[6] = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B15633E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B1563404@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0xC8);
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B1563468()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void BlueprintCollectionViewDelegate.parentViewController.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1563508()
{
  OUTLINED_FUNCTION_48();
}

void BlueprintCollectionViewDelegate.parentViewController.modify()
{
  _QWORD *v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_23_6();
  *(_QWORD *)(OUTLINED_FUNCTION_132_1((uint64_t)v1) + 40) = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B156355C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_31();
}

void BlueprintCollectionViewDelegate.pluginManager.getter()
{
  OUTLINED_FUNCTION_30();
  swift_retain();
  OUTLINED_FUNCTION_48();
}

void BlueprintCollectionViewDelegate.pluginManager.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintCollectionViewDelegate.infiniteScrollManager.getter()
{
  OUTLINED_FUNCTION_30();
  swift_retain();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B1563650@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0xD8));
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

void sub_1B15636B4()
{
  swift_retain();
  BlueprintCollectionViewDelegate.infiniteScrollManager.setter();
}

uint64_t sub_1B15636DC()
{
  _QWORD *v0;
  char *v1;
  uint64_t result;

  v1 = (char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8);
  result = swift_beginAccess();
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(*(_QWORD *)v1 + 24) = &protocol witness table for BlueprintCollectionViewDelegate<A, B, C>;
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

void BlueprintCollectionViewDelegate.infiniteScrollManager.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B156379C(uint64_t a1, char a2)
{
  return sub_1B14BA9DC(a1, a2, (uint64_t (*)(uint64_t))sub_1B15636DC);
}

id sub_1B15637A8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0xE0));
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1B1563808(id *a1)
{
  id v1;

  v1 = *a1;
  BlueprintCollectionViewDelegate.viewportMonitor.setter();
}

void BlueprintCollectionViewDelegate.viewportMonitor.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B1563884(uint64_t a1, char a2)
{
  return sub_1B14BA9DC(a1, a2, (uint64_t (*)(uint64_t))sub_1B13A5E3C);
}

void BlueprintCollectionViewDelegate.dragReorderDelegate.getter()
{
  OUTLINED_FUNCTION_30();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_48();
}

void BlueprintCollectionViewDelegate.dragReorderDelegate.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

double BlueprintCollectionViewDelegate.scrollTriggerDelta.getter()
{
  uint64_t v0;
  uint64_t *v1;

  OUTLINED_FUNCTION_175_1(*v1);
  OUTLINED_FUNCTION_30();
  return *(double *)v0;
}

uint64_t BlueprintCollectionViewDelegate.scrollTriggerDelta.setter(double a1)
{
  double *v1;
  uint64_t *v2;
  uint64_t result;

  OUTLINED_FUNCTION_175_1(*v2);
  result = OUTLINED_FUNCTION_13();
  *v1 = a1;
  return result;
}

void BlueprintCollectionViewDelegate.scrollTriggerDelta.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_13_1();
  v10 = OUTLINED_FUNCTION_88_8();
  return BlueprintCollectionViewDelegate.init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:)(v10, v11, a3, a4, a5, a6);
}

void BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:keyboardInputMonitor:prefetcher:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  OUTLINED_FUNCTION_13_1();
  BlueprintCollectionViewDelegate.init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:keyboardInputMonitor:prefetcher:)(v15, v13, v11, v9, v7, v5, v3, v1);
  OUTLINED_FUNCTION_47();
}

_QWORD *sub_1B1563ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *result;
  char *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = (_QWORD *)MEMORY[0x1B5E1F2F8](v2);
  if (result)
  {
    v4 = (char *)result + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *result) + 0x100);
    *(_QWORD *)v4 = 0;
    *((_QWORD *)v4 + 1) = 0;
    v4[16] = 1;
    swift_unknownObjectUnownedLoadStrong();
    sub_1B1563B5C();
  }
  return result;
}

void sub_1B1563B5C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.viewWillDisappear()()
{
  OUTLINED_FUNCTION_131_7();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.viewDidDisappear()()
{
  OUTLINED_FUNCTION_131_7();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void BlueprintCollectionViewDelegate.collectionView(_:canFocusItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_50_12();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = OUTLINED_FUNCTION_100_2();
  type metadata accessor for BlueprintItem(0, v0, v3, v4);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_50_12();
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B15642A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_97_8();
  *(_QWORD *)(v3 - 184) = v0;
  BlueprintProviderType.blueprint.getter(v2, v1);
  Blueprint.subscript.getter();
}

void sub_1B15642FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_106_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_218_0();
  v4 = v3();
  OUTLINED_FUNCTION_197(v4, &qword_1EEF338B8);
  if (!OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_35_16();
    OUTLINED_FUNCTION_157_2(v5, &qword_1EEF338C0, &qword_1EEF338B8, (uint64_t)&protocol descriptor for Focusable);
    BlueprintCollectionViewDelegate.collectionView(_:shouldSelectItemAt:)();
  }
  OUTLINED_FUNCTION_19_34();
  OUTLINED_FUNCTION_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_118_6();
  OUTLINED_FUNCTION_47();
}

void BlueprintCollectionViewDelegate.collectionView(_:shouldSelectItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_18_32();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_220(v3, v8);
  v4 = OUTLINED_FUNCTION_38_17();
  type metadata accessor for BlueprintItem(0, v0, v4, v5);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_18_32();
  OUTLINED_FUNCTION_38_17();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B15644A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_97_0();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_112_6();
  Blueprint.contains(indexPath:)();
}

void sub_1B15644EC(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_186_0();
  if ((a1 & 1) != 0)
  {
    *v1 = v2;
    OUTLINED_FUNCTION_112_6();
    OUTLINED_FUNCTION_206_1();
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B15647F4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B1569A0C(a1, a2, a3, a4, (void (*)(id, uint64_t))BlueprintCollectionViewDelegate.collectionView(_:canFocusItemAt:));
}

void sub_1B1564800(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B1569A0C(a1, a2, a3, a4, (void (*)(id, uint64_t))BlueprintCollectionViewDelegate.collectionView(_:shouldSelectItemAt:));
}

void BlueprintCollectionViewDelegate.collectionView(_:didSelectItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_183_1();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_47_17();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_158_2();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_158_2();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B15649F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = OUTLINED_FUNCTION_219();
  *(_QWORD *)(v3 - 440) = *(_QWORD *)(OUTLINED_FUNCTION_200_0(v6, v1, v7, v8) - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_97_0();
  v11 = *(_QWORD *)(v3 - 344) + *(_QWORD *)(*(_QWORD *)(v3 - 368) + 136);
  *(_QWORD *)(v3 - 480) = v0;
  *(_QWORD *)(v3 - 464) = v2;
  *(_QWORD *)(v3 - 488) = v11;
  BlueprintProviderType.blueprint.getter(v0, v2);
  Blueprint.subscript.getter();
}

void sub_1B1564A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  id v22;
  void *v23;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  *(_QWORD *)(v5 - 472) = v2;
  v7 = v6(v1, v2);
  OUTLINED_FUNCTION_132_5(v7, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = OUTLINED_FUNCTION_25();
  *(_OWORD *)(v8 + 16) = xmmword_1B16C6D10;
  *(_QWORD *)(v5 - 424) = v3;
  v9 = OUTLINED_FUNCTION_207_0();
  v11 = v10;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1B140493C();
  *(_QWORD *)(v8 + 64) = v13;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v5 - 432) = v4;
  v14 = BlueprintItem.identifier.getter();
  *(_QWORD *)(v8 + 96) = v12;
  *(_QWORD *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 72) = v14;
  *(_QWORD *)(v8 + 80) = v15;
  v16 = sub_1B16B7CC4();
  *(_QWORD *)(v8 + 136) = v12;
  *(_QWORD *)(v8 + 144) = v13;
  v17 = *(_QWORD **)(v5 - 344);
  *(_QWORD *)(v8 + 112) = v16;
  *(_QWORD *)(v8 + 120) = v18;
  OUTLINED_FUNCTION_10(v16, (unint64_t *)&qword_1ED188F60);
  v19 = (void *)OUTLINED_FUNCTION_51_0();
  sub_1B16BA058();
  OUTLINED_FUNCTION_169_2();
  OUTLINED_FUNCTION_29();

  sub_1B13F5FD4((uint64_t)v17 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v17) + 0x118), v5 - 128, qword_1ED17DF60, &qword_1ED180C08, (uint64_t)&protocol descriptor for KeyboardInputMonitorType);
  if (*(_QWORD *)(v5 - 104))
  {
    OUTLINED_FUNCTION_197_0();
    v20 = OUTLINED_FUNCTION_146_4();
    v21(v20);
    OUTLINED_FUNCTION_42_15();
  }
  else
  {
    sub_1B1410C8C(v5 - 128, qword_1ED17DF60, &qword_1ED180C08, (uint64_t)&protocol descriptor for KeyboardInputMonitorType);
  }
  v22 = objc_msgSend(*(id *)(v5 - 328), sel_window);
  if (v22)
  {
    v23 = v22;
    *(_QWORD *)(v5 - 376) = objc_msgSend(v22, sel_windowScene);

  }
  else
  {
    *(_QWORD *)(v5 - 376) = 0;
  }
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_1();
}

uint64_t sub_1B1564CA8(void *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t (*v49)(void);
  char v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;

  if (a1)
  {
    BlueprintProviderType.blueprint.getter(*(_QWORD *)(v6 - 480), *(_QWORD *)(v6 - 464));
    *(_QWORD *)(v6 - 128) = v1;
    *(_BYTE *)(v6 - 120) = v2;
    *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 376);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v6 - 368) + 120) + 56))(v4, v3, *(_QWORD *)(v6 - 336), v6 - 128, *(_QWORD *)(*(_QWORD *)(v6 - 368) + 96));

    v5(v4, *(_QWORD *)(v6 - 472));
  }
  v8 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 416) + 16))(*(_QWORD *)(v6 - 408), v3, *(_QWORD *)(v6 - 424));
  OUTLINED_FUNCTION_197(v8, &qword_1ED184DB0);
  v9 = OUTLINED_FUNCTION_3_0();
  *(_QWORD *)(v6 - 448) = v3;
  if ((v9 & 1) == 0)
  {
    *(_QWORD *)(v6 - 160) = 0;
    *(_OWORD *)(v6 - 192) = 0u;
    *(_OWORD *)(v6 - 176) = 0u;
    sub_1B1410C8C(v6 - 192, &qword_1ED185238, &qword_1ED184DB0, (uint64_t)&protocol descriptor for SeparatorViewIndexOffsetProviderType);
    OUTLINED_FUNCTION_188_0();
    v23 = *(_QWORD *)(v6 - 400);
LABEL_19:
    v36 = objc_msgSend(*(id *)(v6 - 328), sel_allowsMultipleSelection);
    v37 = *(_QWORD *)(v6 - 360);
    v38 = OUTLINED_FUNCTION_176_1();
    OUTLINED_FUNCTION_76_6(v38, v39);
    v40 = *(_QWORD *)(v6 - 352);
    if ((v36 & 1) != 0)
    {
      OUTLINED_FUNCTION_14_3(v23, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
      v41 = (void *)sub_1B16B7CDC();
      v42 = *(void **)(v6 - 328);
      v43 = OUTLINED_FUNCTION_6_12(v42, sel_cellForItemAtIndexPath_);

      if (v43)
      {
        *(_QWORD *)(v6 - 224) = v43;
        OUTLINED_FUNCTION_10(v44, (unint64_t *)&qword_1ED183830);
        OUTLINED_FUNCTION_197(v45, qword_1ED185990);
        v46 = v43;
        if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
        {
          sub_1B13C06D0((__int128 *)(v6 - 192), v6 - 128);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 104));
          v47 = OUTLINED_FUNCTION_1_54();
          v49 = (uint64_t (*)(void))v48(v47);
          v50 = v49();
          OUTLINED_FUNCTION_45();
          if ((v50 & 1) != 0)
          {
            v51 = (void *)sub_1B16B7CDC();
            OUTLINED_FUNCTION_191_1(v42, sel_deselectItemAtIndexPath_animated_);

          }
          OUTLINED_FUNCTION_42_15();
        }
        else
        {
          *(_QWORD *)(v6 - 160) = 0;
          *(_OWORD *)(v6 - 192) = 0u;
          *(_OWORD *)(v6 - 176) = 0u;

          sub_1B1410C8C(v6 - 192, &qword_1ED185F98, qword_1ED185990, (uint64_t)&protocol descriptor for CellSelectionActionable);
        }
      }
      v52 = OUTLINED_FUNCTION_88_8();
      _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(v52, v53);
    }
    OUTLINED_FUNCTION_76_6(*(_QWORD *)(v6 - 352), v23);
    OUTLINED_FUNCTION_63_6(v40);
    OUTLINED_FUNCTION_83_7();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_167_0();
  }
  OUTLINED_FUNCTION_205_0((__int128 *)(v6 - 192));
  v10 = *(_QWORD *)(v6 - 96);
  v11 = OUTLINED_FUNCTION_197_0();
  v12 = *(void **)(v6 - 328);
  v13 = OUTLINED_FUNCTION_109((uint64_t)v11, sel_traitCollection);
  (*(void (**)(void))(v10 + 8))();
  OUTLINED_FUNCTION_15_4();
  v14 = sub_1B16B7D3C();
  v15 = (void *)OUTLINED_FUNCTION_156_3();
  v16 = (void *)sub_1B16B7CDC();
  v17 = (char *)objc_msgSend(v12, sel_supplementaryViewForElementKind_atIndexPath_, v15, v16);

  if (v17)
  {
    sub_1B156C8E4(0);
    v18 = OUTLINED_FUNCTION_125_0();
    if (v18)
    {
      v19 = *(char **)(v18 + qword_1ED1800C0);
      v20 = &v19[OBJC_IVAR____TtC5TeaUI13SeparatorView_hidesOnSelection];
      OUTLINED_FUNCTION_30();
      if (*v20 == 1)
      {
        v21 = &v19[OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected];
        OUTLINED_FUNCTION_13();
        *v21 = 1;
        v22 = v19;
        sub_1B15CC088();

        v17 = v22;
      }
      OUTLINED_FUNCTION_188_0();
    }

  }
  v23 = *(_QWORD *)(v6 - 400);
  if (v14 < v10)
  {
LABEL_17:
    OUTLINED_FUNCTION_42_15();
    goto LABEL_19;
  }
  v24 = (void *)OUTLINED_FUNCTION_156_3();
  result = sub_1B16B7D3C();
  v26 = result - v10;
  if (!__OFSUB__(result, v10))
  {
    v27 = sub_1B16B7D48();
    v28 = *(_QWORD *)(v6 - 512);
    MEMORY[0x1B5E1B6BC](v26, v27);
    v29 = (void *)sub_1B16B7CDC();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 360) + 8))(v28, *(_QWORD *)(v6 - 392));
    v30 = (char *)objc_msgSend(*(id *)(v6 - 328), sel_supplementaryViewForElementKind_atIndexPath_, v24, v29);

    if (v30)
    {
      sub_1B156C8E4(0);
      v31 = OUTLINED_FUNCTION_125_0();
      if (v31)
      {
        v32 = *(char **)(v31 + qword_1ED1800C0);
        v33 = &v32[OBJC_IVAR____TtC5TeaUI13SeparatorView_hidesOnSelection];
        OUTLINED_FUNCTION_30();
        if (*v33 == 1)
        {
          v34 = &v32[OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected];
          OUTLINED_FUNCTION_13();
          *v34 = 1;
          v35 = v32;
          sub_1B15CC088();

          v30 = v35;
        }
      }

    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  _QWORD v9[22];

  v9[4] = a2;
  v9[2] = a1;
  v2 = sub_1B16B77F0();
  MEMORY[0x1E0C80A78](v2, v3);
  v9[1] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = swift_getAssociatedConformanceWitness();
  v9[16] = AssociatedTypeWitness;
  v9[17] = v6;
  v9[18] = AssociatedConformanceWitness;
  v9[19] = v8;
  type metadata accessor for Blueprint();
}

void sub_1B156555C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1, a2);
  v7 = type metadata accessor for BlueprintItem(0, v5, v2, v6);
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  MEMORY[0x1E0C80A78](v9, v10);
  BlueprintProviderType.blueprint.getter(v4, v3);
  Blueprint.subscript.getter();
}

void sub_1B1565618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v6, v1, v2);
  sub_1B13CC6B4(0, &qword_1ED1875B0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1B13C06D0((__int128 *)(v7 - 176), v7 - 128);
    v8 = *(_QWORD *)(v7 - 104);
    v9 = *(_QWORD *)(v7 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 128), v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    if (*(_QWORD *)(v7 - 192))
    {
      sub_1B13C06D0((__int128 *)(v7 - 216), v7 - 176);
      v10 = (void *)sub_1B16B7CDC();
      v11 = objc_msgSend(*(id *)(v7 - 240), sel_cellForItemAtIndexPath_, v10);

      if (v11)
      {
        v12 = *(_QWORD *)(v7 - 152);
        v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 176), v12);
        v14 = sub_1B16B8B4C();
        *(_QWORD *)(v7 - 224) = v0;
        MEMORY[0x1E0C80A78](v14, v15);
        (*(void (**)(char *, _QWORD *, uint64_t))(v17 + 16))((char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v13, v12);
        sub_1B1592684();
        v18 = (void *)sub_1B16B8B40();
        v19 = objc_msgSend(v11, sel_contentView);
        sub_1B16BA1D8();

        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 224) + 8))(v1, v2);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
      }
      __swift_destroy_boxed_opaque_existential_1(v7 - 176);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
      sub_1B1410C8C(v7 - 216, &qword_1ED185F40, &qword_1ED185CC0, MEMORY[0x1E0C904F8]);
    }
    __swift_destroy_boxed_opaque_existential_1(v7 - 128);
  }
  else
  {
    *(_QWORD *)(v7 - 144) = 0;
    *(_OWORD *)(v7 - 176) = 0u;
    *(_OWORD *)(v7 - 160) = 0u;
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
    sub_1B1410C8C(v7 - 176, &qword_1ED1872E0, &qword_1ED1875B0, (uint64_t)&protocol descriptor for AppEntityAnnotationProviding);
  }
}

void sub_1B1565874(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B1569AC0(a1, a2, a3, a4, (void (*)(id, uint64_t))BlueprintCollectionViewDelegate.collectionView(_:didSelectItemAt:));
}

void BlueprintCollectionViewDelegate.collectionView(_:didDeselectItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_183_1();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_47_17();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1565A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_54_0();
  *(_QWORD *)(v12 - 224) = *(_QWORD *)(OUTLINED_FUNCTION_200_0(0, v9, v15, v16) - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v17, v18);
  *(_QWORD *)(v12 - 168) = (char *)&a9 - v19;
  v20 = *(_QWORD *)(v12 - 160) + *(_QWORD *)(*(_QWORD *)(v12 - 176) + 136);
  *(_QWORD *)(v12 - 240) = v10;
  *(_QWORD *)(v12 - 232) = v11;
  v21 = OUTLINED_FUNCTION_87_9();
  *(_QWORD *)(v12 - 264) = v20;
  BlueprintProviderType.blueprint.getter(v21, v22);
  OUTLINED_FUNCTION_88_8();
  Blueprint.subscript.getter();
}

void sub_1B1565AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  *(_QWORD *)(v3 - 256) = v0;
  *(_QWORD *)(v3 - 248) = v1;
  v4 = OUTLINED_FUNCTION_176_1();
  v6 = v5(v4);
  OUTLINED_FUNCTION_132_5(v6, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = OUTLINED_FUNCTION_25();
  *(_OWORD *)(v7 + 16) = xmmword_1B16C6D10;
  v8 = OUTLINED_FUNCTION_207_0();
  v10 = v9;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1B140493C();
  *(_QWORD *)(v7 + 64) = v12;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  *(_QWORD *)(v3 - 216) = v2;
  v13 = BlueprintItem.identifier.getter();
  *(_QWORD *)(v7 + 96) = v11;
  *(_QWORD *)(v7 + 104) = v12;
  *(_QWORD *)(v7 + 72) = v13;
  *(_QWORD *)(v7 + 80) = v14;
  v15 = sub_1B16B7CC4();
  *(_QWORD *)(v7 + 136) = v11;
  *(_QWORD *)(v7 + 144) = v12;
  *(_QWORD *)(v7 + 112) = v15;
  *(_QWORD *)(v7 + 120) = v16;
  OUTLINED_FUNCTION_10(v15, (unint64_t *)&qword_1ED188F60);
  v17 = (void *)OUTLINED_FUNCTION_51_0();
  sub_1B16BA058();
  OUTLINED_FUNCTION_169_2();
  OUTLINED_FUNCTION_29();

  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1565BC8(void *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void (**v7)(uint64_t, id);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  if (a1)
  {
    v5 = *(_QWORD *)(v3 - 256);
    BlueprintProviderType.blueprint.getter(*(_QWORD *)(v3 - 240), *(_QWORD *)(v3 - 232));
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 - 176) + 120) + 64))(v5, *(_QWORD *)(v3 - 168), *(_QWORD *)(v3 - 152), *(_QWORD *)(*(_QWORD *)(v3 - 176) + 96));

    v2(v5, *(_QWORD *)(v3 - 248));
  }
  v6 = *(void **)(v3 - 200);
  v7 = (void (**)(uint64_t, id))objc_msgSend(v6, sel_allowsMultipleSelection);
  v8 = *(_QWORD *)(v3 - 192);
  v9 = *(_QWORD *)(v3 - 184);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v11 = *(_QWORD *)(v3 - 208);
  v10(v8, *(_QWORD *)(v3 - 152), v11);
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_14_3(v8, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    goto LABEL_17;
  }
  v12 = *(_QWORD *)(v3 - 280);
  v10(v12, v8, v11);
  OUTLINED_FUNCTION_63_6(v12);
  OUTLINED_FUNCTION_83_7();
  v14 = v1 + v13;
  OUTLINED_FUNCTION_30();
  if (MEMORY[0x1B5E1F2F8](v14))
  {
    v15 = OUTLINED_FUNCTION_201_1();
    v16 = *(_QWORD *)(v3 - 296);
    v7[1](v15, v7);
    v17 = v16;
    swift_unknownObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)(v3 - 296);
    OUTLINED_FUNCTION_70_1(v17);
  }
  v18 = *(_QWORD *)(v3 - 288);
  v19 = *(_QWORD *)(v3 - 272);
  v20 = v18 + *(int *)(*(_QWORD *)(v3 - 304) + 48);
  v21 = OUTLINED_FUNCTION_87_9();
  sub_1B14107FC(v21, v22);
  sub_1B14107FC(v17, v20);
  OUTLINED_FUNCTION_18_4(v18, 1, v11);
  if (v24)
  {
    OUTLINED_FUNCTION_31_20(v17);
    OUTLINED_FUNCTION_31_20(v12);
    OUTLINED_FUNCTION_14_3(*(_QWORD *)(v3 - 192), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 8));
    v23 = OUTLINED_FUNCTION_18_4(v20, 1, v11);
    if (v24)
    {
      OUTLINED_FUNCTION_208_1(v23, (uint64_t (*)(_QWORD))sub_1B14107A8);
      goto LABEL_19;
    }
  }
  else
  {
    sub_1B14107FC(v18, v19);
    OUTLINED_FUNCTION_18_4(v20, 1, v11);
    if (!v24)
    {
      v25 = *(_QWORD *)(v3 - 320);
      OUTLINED_FUNCTION_79_0(v25, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 32));
      sub_1B145E334();
      *(_DWORD *)(v3 - 176) = OUTLINED_FUNCTION_215_0();
      OUTLINED_FUNCTION_221(v25);
      OUTLINED_FUNCTION_31_20(v17);
      OUTLINED_FUNCTION_31_20(v12);
      OUTLINED_FUNCTION_221(*(_QWORD *)(v3 - 192));
      OUTLINED_FUNCTION_221(*(_QWORD *)(v3 - 272));
      OUTLINED_FUNCTION_31_20(v18);
      if ((*(_DWORD *)(v3 - 176) & 1) == 0)
LABEL_17:
        _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0((uint64_t)v6, *(_QWORD *)(v3 - 152));
LABEL_19:
      if (MEMORY[0x1B5E1F2F8](v14))
      {
        OUTLINED_FUNCTION_201_1();
        OUTLINED_FUNCTION_70_1(*(_QWORD *)(v3 - 312));
        OUTLINED_FUNCTION_110_5();
        OUTLINED_FUNCTION_63_0();
      }
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_167_2(v17);
    OUTLINED_FUNCTION_167_2(v12);
    OUTLINED_FUNCTION_166_2(*(_QWORD *)(v3 - 192));
    v23 = OUTLINED_FUNCTION_166_2(v19);
  }
  OUTLINED_FUNCTION_208_1(v23, (uint64_t (*)(_QWORD))sub_1B1410858);
  goto LABEL_17;
}

void sub_1B1565EB8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B1569AC0(a1, a2, a3, a4, (void (*)(id, uint64_t))BlueprintCollectionViewDelegate.collectionView(_:didDeselectItemAt:));
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.collectionView(_:didUpdateFocusIn:with:)(UICollectionView *_, UICollectionViewFocusUpdateContext didUpdateFocusIn, UIFocusAnimationCoordinator with)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  void (*v25)(void);
  char v26;
  uint64_t v27;
  id v28;
  void *v29;
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_6();
  v32 = v4;
  sub_1B14107A8();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_123_1();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v31 - v9;
  v11 = OUTLINED_FUNCTION_3_12();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v14, v17);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v31 - v21;
  v23 = OUTLINED_FUNCTION_109(v20, sel_previouslyFocusedIndexPath);
  if (v23)
  {
    v24 = v23;
    sub_1B16B7D0C();

    v25 = *(void (**)(void))(v12 + 32);
    OUTLINED_FUNCTION_218_0();
    v25();
    OUTLINED_FUNCTION_162((uint64_t)v10, 0);
    OUTLINED_FUNCTION_18_4((uint64_t)v10, 1, v11);
    if (!v26)
    {
      ((void (*)(char *, char *, uint64_t))v25)(v22, v10, v11);
      _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(v32, (uint64_t)v22);
    }
  }
  else
  {
    OUTLINED_FUNCTION_162((uint64_t)v10, 1);
  }
  sub_1B13E0BC4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1B14107A8);
  v28 = OUTLINED_FUNCTION_109(v27, sel_nextFocusedIndexPath);
  if (v28)
  {
    v29 = v28;
    sub_1B16B7D0C();

    v30 = *(void (**)(void))(v12 + 32);
    OUTLINED_FUNCTION_218_0();
    v30();
    OUTLINED_FUNCTION_162(v3, 0);
    OUTLINED_FUNCTION_18_4(v3, 1, v11);
    if (!v26)
    {
      OUTLINED_FUNCTION_148_2();
      v30();
      _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(v32, (uint64_t)v16);
    }
  }
  else
  {
    OUTLINED_FUNCTION_162(v3, 1);
  }
  sub_1B13E0BC4(v3, (uint64_t (*)(_QWORD))sub_1B14107A8);
  OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_167_0();
}

void sub_1B15660F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!a1
    || (v3 = OUTLINED_FUNCTION_126_1(),
        (*(void (**)(uint64_t, uint64_t))(v1 + 32))(v3, v1),
        OUTLINED_FUNCTION_63_0(),
        (*(_BYTE *)(v2 - 128) & 1) == 0))
  {
    OUTLINED_FUNCTION_141_3();
    OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_192_0())
    {
      OUTLINED_FUNCTION_202_0();
      OUTLINED_FUNCTION_45();
    }
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1566144(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  UICollectionView *v8;
  id v9;
  id v10;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  BlueprintCollectionViewDelegate.collectionView(_:didUpdateFocusIn:with:)(v8, (UICollectionViewFocusUpdateContext)v9, (UIFocusAnimationCoordinator)a1);
}

void sub_1B156619C()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void BlueprintCollectionViewDelegate.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1B15662A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = OUTLINED_FUNCTION_219();
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(OUTLINED_FUNCTION_200_0(v7, v0, v8, v9) - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_16_14();
  v13 = OUTLINED_FUNCTION_109(v12, sel_allowsSelection);
  if ((_DWORD)v13)
  {
    v14 = (uint64_t)OUTLINED_FUNCTION_109((uint64_t)v13, sel_isEditing);
    if ((v14 & 1) == 0 && (OUTLINED_FUNCTION_109(v14, sel_allowsMultipleSelection) & 1) == 0)
    {
      OUTLINED_FUNCTION_133_5();
      if (swift_dynamicCastClass())
      {
        *(_QWORD *)(v2 - 152) = v1;
        if (sub_1B15D99F0())
        {

          return 0;
        }
        sub_1B163D19C();
        sub_1B13A1C1C(1, 0, 0);

      }
      v15 = objc_msgSend(v1, sel_hitTest_withEvent_, 0, v4, v3);
      if (!v15
        || (v16 = v15, *(_DWORD *)(v2 - 152) = sub_1B1581218(), v16, (*(_DWORD *)(v2 - 152) & 1) == 0))
      {
        v17 = (void *)sub_1B16B7CDC();
        *(_QWORD *)(v2 - 152) = OUTLINED_FUNCTION_6_12(v1, sel_cellForItemAtIndexPath_);

        v18 = OUTLINED_FUNCTION_158_2();
        BlueprintProviderType.blueprint.getter(v18, v19);
        Blueprint.subscript.getter();
      }
    }
  }
  return 0;
}

void sub_1B15666FC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B15667F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;

  MEMORY[0x1E0C80A78](a1, a2);
  v9[8] = (char *)&a9 - v13;
  v14 = sub_1B16B7D60();
  v9[9] = *(_QWORD *)(v14 - 8);
  v9[10] = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v9[11] = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = swift_getAssociatedConformanceWitness();
  v9[16] = v10;
  v9[28] = v10;
  v9[29] = v11;
  v9[18] = AssociatedTypeWitness;
  v9[30] = AssociatedTypeWitness;
  v9[31] = v18;
  v9[20] = v18;
  v9[32] = v9[22];
  v9[33] = v12;
  v9[14] = v12;
  v9[34] = AssociatedConformanceWitness;
  v9[35] = v20;
  type metadata accessor for ContextMenuContext();
}

uint64_t sub_1B1566920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  _BYTE v35[64];

  v10 = *(_QWORD *)(a1 - 8);
  v11 = MEMORY[0x1E0C80A78](a1, a2);
  v13 = &v35[-v12];
  MEMORY[0x1E0C80A78](v11, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v15 + 16))(&v35[-v16], *(_QWORD *)(v2 + 168), v4);
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED17FBC0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v2 + 48) = v4;
    *(_QWORD *)(v2 + 56) = v5;
    *(_QWORD *)(v2 + 168) = v6;
    *(_QWORD *)(v2 + 24) = v13;
    *(_QWORD *)(v2 + 32) = v10;
    *(_QWORD *)(v2 + 40) = a1;
    sub_1B13C06D0((__int128 *)(v2 + 224), v8 - 128);
    v17 = *(_QWORD *)(v8 - 104);
    v18 = *(_QWORD *)(v8 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 - 128), v17);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    v21 = *(_QWORD *)(v2 + 144);
    v20 = *(_QWORD *)(v2 + 152);
    v22 = *(_QWORD *)(v2 + 160);
    if ((v19 & 1) != 0)
    {
      BlueprintLayoutProviderType.layoutBlueprint.getter(*(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 168));
      *(_QWORD *)(v2 + 184) = v21;
      *(_QWORD *)(v2 + 192) = v22;
      *(_QWORD *)(v2 + 200) = v3;
      *(_QWORD *)(v2 + 208) = v7;
      type metadata accessor for BlueprintLayout();
    }
    v23 = *(_QWORD *)(v8 - 104);
    v24 = *(_QWORD *)(v8 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 - 128), v23);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    if (!v25)
    {
      v27 = *(_QWORD *)(v8 - 104);
      *(_QWORD *)v2 = *(_QWORD *)(v8 - 96);
      *(_QWORD *)(v2 + 8) = v27;
      *(_QWORD *)(v2 + 16) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 - 128), v27);
      v28 = *(_QWORD *)(v2 + 88);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 72) + 16))(v28, v20, *(_QWORD *)(v2 + 80));
      BlueprintProviderType.blueprint.getter(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
      BlueprintLayoutProviderType.layoutBlueprint.getter(*(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 168));
      v29 = (objc_class *)type metadata accessor for RendererEnvironment();
      v30 = objc_allocWithZone(v29);
      v31 = *(void **)(v2 + 120);
      v32 = v31;
      v33 = RendererEnvironment.init(scrollView:testing:)(v31, 0);
      *(_QWORD *)(v2 + 208) = v29;
      *(_QWORD *)(v2 + 216) = &protocol witness table for RendererEnvironment;
      *(_QWORD *)(v2 + 184) = v33;
      sub_1B151535C(v28, *(_QWORD *)(v2 + 24));
    }
    v26 = v25;
    __swift_destroy_boxed_opaque_existential_1(v8 - 128);
  }
  else
  {
    *(_QWORD *)(v2 + 256) = 0;
    *(_OWORD *)(v2 + 224) = 0u;
    *(_OWORD *)(v2 + 240) = 0u;
    sub_1B1410C8C(v2 + 224, (unint64_t *)&unk_1EEF31320, (unint64_t *)&qword_1ED17FBC0, (uint64_t)&protocol descriptor for ContextMenuProviding);
    return 0;
  }
  return v26;
}

void sub_1B1566C84()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B1566D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;

  MEMORY[0x1E0C80A78](a1, a2);
  v9[9] = (char *)&a9 - v13;
  v14 = sub_1B16B7D60();
  v9[2] = *(_QWORD *)(v14 - 8);
  v9[3] = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v9[17] = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = swift_getAssociatedConformanceWitness();
  v9[15] = v10;
  v9[24] = v10;
  v9[25] = v11;
  v9[7] = v18;
  v9[8] = AssociatedTypeWitness;
  v9[26] = AssociatedTypeWitness;
  v9[27] = v18;
  v9[28] = v9[18];
  v9[29] = v12;
  v9[13] = v12;
  v9[30] = AssociatedConformanceWitness;
  v9[31] = v20;
  v9[5] = v20;
  type metadata accessor for ContextMenuContext();
}

uint64_t sub_1B1566EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[64];

  v9 = *(_QWORD *)(a1 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v2 + 32) = &v26[-v11];
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = &v26[-v14];
  if (objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 16))(v15, *(_QWORD *)(v2 + 128), v3);
    sub_1B13CC6B4(0, (unint64_t *)&qword_1ED17FBC0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1B13C06D0((__int128 *)(v2 + 192), v7 - 128);
      v16 = *(_QWORD *)(v7 - 104);
      *(_QWORD *)v2 = *(_QWORD *)(v7 - 96);
      *(_QWORD *)(v2 + 8) = v16;
      *(_QWORD *)(v2 + 128) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 128), v16);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 + 16) + 16))(*(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 24));
      v17 = *(_QWORD *)(v2 + 88);
      *(_QWORD *)(v2 + 80) = v9;
      BlueprintProviderType.blueprint.getter(*(_QWORD *)(v2 + 48), v17);
      BlueprintLayoutProviderType.layoutBlueprint.getter(v5, v6);
      v18 = (objc_class *)type metadata accessor for RendererEnvironment();
      v19 = objc_allocWithZone(v18);
      v20 = *(void **)(v2 + 112);
      v21 = v20;
      v22 = RendererEnvironment.init(scrollView:testing:)(v20, 0);
      *(_QWORD *)(v2 + 176) = v18;
      *(_QWORD *)(v2 + 184) = &protocol witness table for RendererEnvironment;
      *(_QWORD *)(v2 + 152) = v22;
      v23 = *(_QWORD *)(v2 + 32);
      v24 = *(_QWORD *)(v2 + 136);
      *(_QWORD *)(v2 + 136) = a1;
      sub_1B151535C(v24, v23);
    }
    *(_QWORD *)(v2 + 224) = 0;
    *(_OWORD *)(v2 + 192) = 0u;
    *(_OWORD *)(v2 + 208) = 0u;
    sub_1B1410C8C(v2 + 192, (unint64_t *)&unk_1EEF31320, (unint64_t *)&qword_1ED17FBC0, (uint64_t)&protocol descriptor for ContextMenuProviding);
  }
  return 0;
}

uint64_t sub_1B1567144(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  if (!a1)
    return MEMORY[0x1E0DEE9D8];
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *MEMORY[0x1E0DEEDD8] & *a2;
  HIBYTE(v25) = 2;
  sub_1B13E2FE4((uint64_t)a2 + *(_QWORD *)(v6 + 272), (uint64_t)v22);
  v26 = 0u;
  v27 = 0u;
  LOBYTE(v28) = 1;
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 80);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v6 + 88);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v6 + 104);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(v6 + 112);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v6 + 128);
  *(_QWORD *)(v8 + 72) = v7;
  type metadata accessor for CommandExecutionSource();
  v9 = swift_allocObject();
  v10 = v23;
  v11 = v24;
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  MEMORY[0x1E0C80A78](v12, v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  swift_retain();
  v16 = a3;
  sub_1B164D160((uint64_t)&v25 + 7, (uint64_t)v14, (uint64_t)a3, (uint64_t)&v26, 0, (uint64_t)sub_1B156CC40, v8, v9, v10, v11, v22[0], v22[1], v22[2], v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27,
    *((uint64_t *)&v27 + 1),
    v28,
    v29);
  v18 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  v19 = (_QWORD *)((char *)a2 + *(_QWORD *)((*v5 & *a2) + 0xA0));
  v20 = ContextMenu.build(commandCenter:source:)(*v19, v19[1], v18);
  swift_release();
  swift_release();
  return v20;
}

void sub_1B1567330()
{
  if (qword_1ED17D8E0 != -1)
    swift_once();
  type metadata accessor for BlueprintCollectionViewDelegate();
}

void sub_1B1567484()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

id sub_1B1567570(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v27;
  _QWORD *v28;
  char *v29;
  id result;
  void *v31;
  uint64_t v32;
  UIViewController *v33;
  char *v34;
  void *v35;
  id v36;
  _BYTE v37[96];

  *(_QWORD *)(v2 + 32) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v2 + 24) = &v37[-v9];
  v10 = sub_1B16B7D60();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(&v37[-v18], v6, v3);
  sub_1B13CC6B4(0, (unint64_t *)&qword_1ED17FBC0);
  v19 = swift_dynamicCast();
  *(_QWORD *)(v2 + 40) = a1;
  if ((v19 & 1) != 0)
  {
    sub_1B13C06D0((__int128 *)(v2 + 96), v7 - 128);
    v20 = *(_QWORD *)(v7 - 104);
    v21 = *(_QWORD *)(v7 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 128), v20);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 16))(v15, *(_QWORD *)(v2 + 16), v10);
    if ((v22 & 1) != 0)
    {
      BlueprintLayoutProviderType.layoutBlueprint.getter(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 88), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 112));
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v24 = swift_getAssociatedTypeWitness();
      *(_QWORD *)(v2 + 16) = v6;
      v25 = v24;
      *(_QWORD *)(v2 + 8) = swift_getAssociatedConformanceWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v2 + 64) = AssociatedTypeWitness;
      *(_QWORD *)(v2 + 72) = v25;
      *(_QWORD *)(v2 + 80) = *(_QWORD *)(v2 + 8);
      *(_QWORD *)(v2 + 88) = AssociatedConformanceWitness;
      type metadata accessor for BlueprintLayout();
    }
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v15, v10);
    __swift_destroy_boxed_opaque_existential_1(v7 - 128);
  }
  else
  {
    *(_QWORD *)(v2 + 128) = 0;
    *(_OWORD *)(v2 + 96) = 0u;
    *(_OWORD *)(v2 + 112) = 0u;
    sub_1B1410C8C(v2 + 96, (unint64_t *)&unk_1EEF31320, (unint64_t *)&qword_1ED17FBC0, (uint64_t)&protocol descriptor for ContextMenuProviding);
  }
  v27 = *(_QWORD **)(v2 + 56);
  v28 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v29 = (char *)v27 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v27) + 0xA8);
  swift_beginAccess();
  result = (id)MEMORY[0x1B5E1F2F8](v29);
  if (result)
  {
    v31 = result;
    v32 = *(_QWORD *)(v2 + 24);
    BlueprintProviderType.blueprint.getter(v5, v4);
    v33 = (UIViewController *)(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 48)
                                                                                              + 120)
                                                                                  + 80))(v32, v6, *(_QWORD *)(*(_QWORD *)(v2 + 48) + 96));

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 + 32) + 8))(v32, *(_QWORD *)(v2 + 40));
    if (v33)
    {
      objc_opt_self();
      result = (id)swift_dynamicCastObjCClass();
      if (!result)
      {
        setPreviewing(viewController:previewing:)(v33, 1);
        v34 = (char *)v27 + *(_QWORD *)((*v28 & *v27) + 0xC8);
        swift_beginAccess();
        v35 = (void *)MEMORY[0x1B5E1F2F8](v34);
        v36 = objc_allocWithZone((Class)type metadata accessor for PreviewViewController());
        return PreviewViewController.init(previewedViewController:triggeringViewController:)(v33, v35);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_1B1567960(void *a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  if (!a1)
  {
    if (a2
      && (sub_1B13A1818(0, (unint64_t *)&qword_1ED183830),
          sub_1B13CC6B4(0, (unint64_t *)&unk_1EEF33C80),
          v4 = a2,
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((_QWORD *)&v10 + 1))
      {
        sub_1B13C06D0(&v9, (uint64_t)v12);
        v5 = v13;
        v6 = v14;
        __swift_project_boxed_opaque_existential_1(v12, v13);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(1, v5, v6);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
        goto LABEL_8;
      }
    }
    else
    {
      v11 = 0;
      v9 = 0u;
      v10 = 0u;
    }
    sub_1B1410C8C((uint64_t)&v9, (unint64_t *)&unk_1EEF32510, (unint64_t *)&unk_1EEF33C80, (uint64_t)&protocol descriptor for ContextMenuPreviewable);
  }
LABEL_8:
  v7 = a1;
  return a1;
}

void sub_1B1567A70(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v5, v6);
  sub_1B16B7D0C();
  v7 = a3;
  v8 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:contextMenuConfigurationForItemAt:point:)();
}

id sub_1B1567B04(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v3);
  return a1;
}

id BlueprintCollectionViewDelegate.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(void *a1, void *a2, void *a3)
{
  _QWORD *v3;
  id result;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  _QWORD v13[6];

  result = objc_msgSend(a1, sel_allowsSelection);
  if ((_DWORD)result)
  {
    v7 = OUTLINED_FUNCTION_25();
    v8 = OUTLINED_FUNCTION_8_0(v7, sel_previewViewController);
    if (!v8)
    {
      swift_deallocUninitializedObject();
      sub_1B1567C94((uint64_t)a2, v3);
    }
    *(_QWORD *)(v7 + 16) = v8;
    objc_msgSend(a3, sel_setPreferredCommitStyle_, 1);
    v9 = (_QWORD *)OUTLINED_FUNCTION_25();
    v9[2] = v7;
    v9[3] = v3;
    v9[4] = a2;
    v13[4] = sub_1B156C9D0;
    v13[5] = v9;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1B13F00E4;
    v13[3] = &block_descriptor_42;
    v10 = _Block_copy(v13);
    swift_retain();
    v11 = v3;
    v12 = a2;
    OUTLINED_FUNCTION_59();
    objc_msgSend(a3, sel_addCompletion_, v10);
    _Block_release(v10);
    return (id)swift_release();
  }
  return result;
}

void sub_1B1567C94(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  _QWORD v13[16];

  v13[10] = a2;
  v2 = *MEMORY[0x1E0DEEDD8] & *a2;
  sub_1B14107A8();
  MEMORY[0x1E0C80A78](v3, v4);
  v13[8] = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B16B7D60();
  v13[5] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v13[3] = v2;
  v13[4] = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedConformanceWitness();
  v13[12] = AssociatedTypeWitness;
  v13[13] = v10;
  v13[14] = AssociatedConformanceWitness;
  v13[15] = v12;
  type metadata accessor for Blueprint();
}

uint64_t sub_1B1567DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  MEMORY[0x1E0C80A78](a1, a2);
  v10 = type metadata accessor for BlueprintItem(255, v7, v2, v9);
  v11 = sub_1B16BA328();
  *(_QWORD *)(v8 - 160) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 - 152) = v11;
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v14 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  *(_QWORD *)(v8 - 136) = (char *)&v18 - v16;
  *(_QWORD *)(v8 - 120) = objc_msgSend(v3, sel_identifier);
  sub_1B1505620();
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    *(_QWORD *)(v8 - 192) = v14;
    *(_QWORD *)(v8 - 208) = v4;
    *(_QWORD *)(v8 - 200) = *(_QWORD *)(v8 - 128)
                          + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v8 - 128)) + 0x88);
    BlueprintProviderType.blueprint.getter(v6, v5);
    Blueprint.item(for:)();
  }
  return result;
}

void sub_1B1568120(uint64_t a1)
{
  id *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  UIViewController *v7;

  v2 = (id *)(a1 + 16);
  swift_beginAccess();
  v3 = *(void **)(a1 + 16);
  type metadata accessor for PreviewViewController();
  if (swift_dynamicCastClass())
  {
    v4 = v3;
    v5 = sub_1B14966F8();
    swift_beginAccess();
    v6 = *v2;
    *v2 = v5;

    swift_beginAccess();
    v7 = (UIViewController *)*v2;
    setPreviewing(viewController:previewing:)(v7, 0);

  }
  sub_1B1568304();
}

void sub_1B15681F0()
{
  sub_1B1568304();
}

void sub_1B1568204(void *a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;
  uint64_t v7;
  void *v8;

  if (v2)
  {
    swift_beginAccess();
    objc_msgSend(v2, sel_showViewController_sender_, *v4, v1);
  }
  else if (a1)
  {
    swift_beginAccess();
    objc_msgSend(a1, sel_showViewController_sender_, *v4, v1);
  }
  else
  {
    v6 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8);
    swift_beginAccess();
    v7 = MEMORY[0x1B5E1F2F8](v6);
    if (v7)
    {
      v8 = (void *)v7;
      swift_beginAccess();
      objc_msgSend(v8, sel_showViewController_sender_, *v4, v1);

    }
  }
  sub_1B1567C94(v3, v1);
}

void sub_1B1568304()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_1();
}

uint64_t sub_1B1568348(void *a1)
{
  SEL *v1;
  uint64_t v2;
  id v3;

  if (!a1 || (v3 = objc_msgSend(a1, *v1), OUTLINED_FUNCTION_15_4(), !v2))
    OUTLINED_FUNCTION_24_1();
  return v2;
}

void sub_1B15683C0(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a3;
  v9 = a4;
  swift_unknownObjectRetain();
  v10 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(v8, v9, a5);

  swift_unknownObjectRelease();
}

UITargetedPreview_optional __swiftcall BlueprintCollectionViewDelegate.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(UICollectionView *_, UIContextMenuConfiguration previewForHighlightingContextMenuWithConfiguration)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_6();
  v39 = v3;
  v4 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v2);
  v5 = v4[14];
  v6 = v4[11];
  v7 = OUTLINED_FUNCTION_42_2();
  v31 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_134();
  v32 = v10;
  v29 = v6;
  v30 = v5;
  v33 = v7;
  v27 = OUTLINED_FUNCTION_41();
  type metadata accessor for BlueprintLayoutItem(0, v7, v27, v11);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v12, v13);
  v28 = (char *)&v26 - v14;
  OUTLINED_FUNCTION_47_17();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_2();
  v36 = v17;
  v37 = OUTLINED_FUNCTION_3_12();
  v35 = *(_QWORD *)(v37 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_2();
  v34 = v20;
  v21 = v4[13];
  v22 = OUTLINED_FUNCTION_42_2();
  v23 = OUTLINED_FUNCTION_42_2();
  v24 = OUTLINED_FUNCTION_41();
  v38 = v21;
  OUTLINED_FUNCTION_218_0();
  v25 = OUTLINED_FUNCTION_41();
  v40 = v22;
  v41 = v23;
  v42 = v24;
  v43 = v25;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1568604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v1 + 176) = a1;
  *(_QWORD *)(v1 + 152) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_134();
  *(_QWORD *)(v1 + 160) = v9;
  OUTLINED_FUNCTION_185_0(255, v10, v11, v12);
  v13 = OUTLINED_FUNCTION_142();
  v14 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_97_8();
  v17 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_16_14();
  if (OUTLINED_FUNCTION_109(v20, sel_allowsSelection))
  {
    *(_QWORD *)(v1 + 16) = v14;
    *(_QWORD *)(v1 + 24) = v13;
    *(_QWORD *)(v1 + 40) = v17;
    *(_QWORD *)(v1 + 48) = v6;
    v21 = *(_QWORD *)(v1 + 184);
    *(_QWORD *)(v1 + 8) = v4;
    *(_QWORD *)(v1 + 32) = v2;
    *(_QWORD *)(v1 + 56) = v3;
    OUTLINED_FUNCTION_160_1((uint64_t)objc_msgSend(*(id *)(v1 + 192), sel_identifier));
    if (OUTLINED_FUNCTION_3_0())
    {
      OUTLINED_FUNCTION_227();
      BlueprintProviderType.blueprint.getter(v5, v21);
      OUTLINED_FUNCTION_1_54();
      Blueprint.item(for:)();
    }
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B15688F4()
{
  BlueprintLayout.subscript.getter();
}

void sub_1B1568910()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;

  OUTLINED_FUNCTION_106_0((uint64_t)(v0 + 25), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  v9 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0[12] + 32))(v0[13], v4, v3);
  OUTLINED_FUNCTION_197(v9, (unint64_t *)&qword_1ED17DA00);
  v10 = OUTLINED_FUNCTION_3_0();
  if ((v10 & 1) == 0)
  {
    v11 = (_OWORD *)(v8 - 144);
    *(_QWORD *)(v8 - 112) = 0;
    *v11 = 0u;
    v11[1] = 0u;
  }
  OUTLINED_FUNCTION_10(v10, (unint64_t *)&unk_1ED17DA60);
  OUTLINED_FUNCTION_134_4(v8 - 144, (uint64_t)(v0 + 25));
  sub_1B16AD8C8(v1, (uint64_t)(v0 + 25));
  (*(void (**)(uint64_t, _QWORD))(v5 + 8))(v6, v0[18]);
  (*(void (**)(uint64_t, _QWORD))(v0[5] + 8))(v7, v0[7]);
  OUTLINED_FUNCTION_105_5();
  JUMPOUT(0x1B15687F8);
}

void sub_1B1568A30(void *a1, uint64_t a2, void *a3, void *a4)
{
  UICollectionView *v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(v6, (UIContextMenuConfiguration)v7);
}

id sub_1B1568A6C(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  return a1;
}

UITargetedPreview_optional __swiftcall BlueprintCollectionViewDelegate.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(UICollectionView *_, UIContextMenuConfiguration previewForDismissingContextMenuWithConfiguration)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_148_2();
  v2 = OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_220(v5, v17);
  v18 = OUTLINED_FUNCTION_41();
  type metadata accessor for BlueprintLayoutItem(0, v2, v18, v6);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_47_17();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1568C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  char v34;
  uint64_t v35;

  v9[23] = a1;
  v9[25] = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_99_4();
  type metadata accessor for BlueprintItem(255, v11, v10, v19);
  v20 = OUTLINED_FUNCTION_142();
  v9[16] = *(_QWORD *)(v20 - 8);
  v9[17] = v20;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_47_0();
  v9[18] = v23;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v24, v25);
  v9[20] = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_47_0();
  v9[15] = v28;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (char *)&a9 - v31;
  v33 = (void *)v9[26];
  v9[22] = OUTLINED_FUNCTION_160_1((uint64_t)objc_msgSend(v33, sel_identifier));
  v34 = OUTLINED_FUNCTION_3_0();
  v9[8] = v13;
  if ((v34 & 1) != 0)
  {
    v9[1] = (uint64_t)v32;
    OUTLINED_FUNCTION_227();
    *v9 = v10;
    BlueprintProviderType.blueprint.getter(v15, v14);
    Blueprint.item(for:)();
  }
  *(_QWORD *)(v16 - 144) = objc_msgSend(v33, sel_identifier);
  if (OUTLINED_FUNCTION_3_0())
  {
    v35 = v9[24] + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v9[24]) + 0x88);
    v9[25] = v15;
    v9[26] = v35;
    v9[19] = v12;
    BlueprintProviderType.blueprint.getter(v15, v14);
    Blueprint.item(for:)();
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1569230()
{
  BlueprintLayout.subscript.getter();
}

void sub_1B156924C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_106_0((uint64_t)(v0 + 27), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  v5 = OUTLINED_FUNCTION_168_2(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[6] + 32));
  OUTLINED_FUNCTION_197(v5, (unint64_t *)&qword_1ED17DA00);
  v6 = OUTLINED_FUNCTION_3_0();
  if ((v6 & 1) == 0)
  {
    *(_QWORD *)(v4 - 112) = 0;
    *v3 = 0u;
    v3[1] = 0u;
  }
  OUTLINED_FUNCTION_10(v6, (unint64_t *)&unk_1ED17DA60);
  OUTLINED_FUNCTION_134_4(v4 - 144, (uint64_t)(v0 + 27));
  sub_1B16AD8C8(v1, (uint64_t)(v0 + 27));
  OUTLINED_FUNCTION_78_7();
  (*(void (**)(_QWORD, _QWORD))(v0[20] + 8))(v0[15], v0[19]);
  OUTLINED_FUNCTION_105_5();
  JUMPOUT(0x1B1569060);
}

void sub_1B1569328(void *a1, uint64_t a2, void *a3, void *a4)
{
  UICollectionView *v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(v6, (UIContextMenuConfiguration)v7);
}

id sub_1B1569364(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  return a1;
}

void BlueprintCollectionViewDelegate.collectionView(_:willDisplayContextMenu:animator:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_38_17();
  OUTLINED_FUNCTION_38_17();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B156942C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_150_1();
}

void sub_1B156946C(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v5;

  if (a1)
  {
    OUTLINED_FUNCTION_82_7();
    OUTLINED_FUNCTION_114_5(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 + 120) + 248));

    OUTLINED_FUNCTION_69_8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  OUTLINED_FUNCTION_133_5();
  if (OUTLINED_FUNCTION_125_0())
  {
    v5 = v1;
    sub_1B15D9AC0(0);

  }
  OUTLINED_FUNCTION_47();
}

void sub_1B15694D0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  sub_1B1569630(a1, a2, a3, a4, a5, (void (*)(id))BlueprintCollectionViewDelegate.collectionView(_:willDisplayContextMenu:animator:));
}

void BlueprintCollectionViewDelegate.collectionView(_:willEndContextMenuInteraction:animator:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_38_17();
  OUTLINED_FUNCTION_38_17();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1569580()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_150_1();
}

void sub_1B15695C0(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v5;

  if (a1)
  {
    OUTLINED_FUNCTION_82_7();
    OUTLINED_FUNCTION_114_5(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 + 120) + 240));

    OUTLINED_FUNCTION_69_8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  OUTLINED_FUNCTION_133_5();
  if (OUTLINED_FUNCTION_125_0())
  {
    v5 = v1;
    sub_1B15D9AC0(1);

  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1569624(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  sub_1B1569630(a1, a2, a3, a4, a5, (void (*)(id))BlueprintCollectionViewDelegate.collectionView(_:willEndContextMenuInteraction:animator:));
}

void sub_1B1569630(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id))
{
  id v9;
  id v10;

  v9 = a3;
  v10 = a4;
  swift_unknownObjectRetain();
  a1;
  a6(v9);
  JUMPOUT(0x1B156968CLL);
}

void BlueprintCollectionViewDelegate.collectionView(_:shouldHighlightItemAt:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B15697A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_200_0(0, v0, v5, v6);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v7, v8);
  BlueprintProviderType.blueprint.getter(v2, v1);
  OUTLINED_FUNCTION_206_1();
}

void sub_1B1569828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  v4 = OUTLINED_FUNCTION_168_2(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 16));
  OUTLINED_FUNCTION_197(v4, &qword_1ED17DB88);
  if (OUTLINED_FUNCTION_3_0())
  {
    v5 = *(void **)(v3 - 264);
    OUTLINED_FUNCTION_205_0((__int128 *)(v3 - 176));
    v6 = *(_QWORD *)(v3 - 104);
    v7 = *(_QWORD *)(v3 - 96);
    v8 = OUTLINED_FUNCTION_28_4((_QWORD *)(v3 - 128));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    if (!*(_BYTE *)(v3 - 177) || *(_BYTE *)(v3 - 177) == 1)
      goto LABEL_12;
    v9 = objc_msgSend(v5, sel_cellForItemAtIndexPath_, OUTLINED_FUNCTION_216_0());
    OUTLINED_FUNCTION_145();
    if (v8
      && (*(_QWORD *)(v3 - 232) = v8,
          OUTLINED_FUNCTION_10(v10, (unint64_t *)&qword_1ED183830),
          OUTLINED_FUNCTION_197(v11, &qword_1ED17F300),
          (OUTLINED_FUNCTION_3_0() & 1) != 0))
    {
      if (*(_QWORD *)(v3 - 200))
      {
        sub_1B13C06D0((__int128 *)(v3 - 224), v3 - 176);
        v12 = *(_QWORD *)(v3 - 152);
        v13 = *(_QWORD *)(v3 - 144);
        OUTLINED_FUNCTION_28_4((_QWORD *)(v3 - 176));
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
        OUTLINED_FUNCTION_45_12();
        __swift_destroy_boxed_opaque_existential_1(v3 - 176);
        OUTLINED_FUNCTION_42_15();
        goto LABEL_13;
      }
    }
    else
    {
      *(_QWORD *)(v3 - 192) = 0;
      *(_OWORD *)(v3 - 224) = 0u;
      *(_OWORD *)(v3 - 208) = 0u;
    }
    sub_1B1410C8C(v3 - 224, &qword_1ED17F308, &qword_1ED17F300, (uint64_t)&protocol descriptor for ViewHighlightable);
LABEL_12:
    OUTLINED_FUNCTION_45_12();
    OUTLINED_FUNCTION_42_15();
    goto LABEL_13;
  }
  *(_QWORD *)(v3 - 144) = 0;
  *(_OWORD *)(v3 - 176) = 0u;
  *(_OWORD *)(v3 - 160) = 0u;
  OUTLINED_FUNCTION_45_12();
  sub_1B1410C8C(v3 - 176, qword_1EEF33930, &qword_1ED17DB88, (uint64_t)&protocol descriptor for Highlightable);
LABEL_13:
  OUTLINED_FUNCTION_47();
}

void sub_1B1569A00(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B1569A0C(a1, a2, a3, a4, (void (*)(id, uint64_t))BlueprintCollectionViewDelegate.collectionView(_:shouldHighlightItemAt:));
}

void sub_1B1569A0C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_12_6();
  v11 = a3;
  v12 = a1;
  a5(v11, v5);
  JUMPOUT(0x1B1569A6CLL);
}

void sub_1B1569AA8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B1569AC0(a1, a2, a3, a4, (void (*)(id, uint64_t))BlueprintCollectionViewDelegate.collectionView(_:didHighlightItemAt:));
}

void sub_1B1569AB4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B1569AC0(a1, a2, a3, a4, (void (*)(id, uint64_t))BlueprintCollectionViewDelegate.collectionView(_:didUnhighlightItemAt:));
}

void sub_1B1569AC0(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_22_7();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_12_6();
  v11 = a3;
  v12 = a1;
  a5(v11, v5);
  JUMPOUT(0x1B1569B20);
}

void BlueprintCollectionViewDelegate.collectionView(_:canEditItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_41_18();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_16_14();
  v2 = OUTLINED_FUNCTION_127_5();
  OUTLINED_FUNCTION_121_5(v2, v3, v4, v5);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_99_4();
  OUTLINED_FUNCTION_41_18();
  OUTLINED_FUNCTION_127_5();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1569C20()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_52_13();
  OUTLINED_FUNCTION_108_6();
}

void sub_1B1569C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_159_1();
  v1 = OUTLINED_FUNCTION_95_8();
  OUTLINED_FUNCTION_197(v1, (unint64_t *)&qword_1ED17AAE0);
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_19_34();
    OUTLINED_FUNCTION_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24));
    OUTLINED_FUNCTION_118_6();
  }
  else
  {
    OUTLINED_FUNCTION_35_16();
    OUTLINED_FUNCTION_157_2(v2, (unint64_t *)&qword_1EEF32530, (unint64_t *)&qword_1ED17AAE0, (uint64_t)&protocol descriptor for BlueprintViewActionable);
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B1569CC0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v5, v6);
  sub_1B16B7D0C();
  v7 = a3;
  v8 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:canEditItemAt:)();
}

uint64_t sub_1B1569D3C(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v3);
  return a1 & 1;
}

uint64_t BlueprintCollectionViewDelegate.collectionView(_:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)((char *)v4 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xE8));
  OUTLINED_FUNCTION_30();
  if (!*v7)
    sub_1B14ED8A8();
  v8 = v7[1];
  ObjectType = swift_getObjectType();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
  OUTLINED_FUNCTION_231();
  v10(a2, a4, ObjectType, v8);
  return OUTLINED_FUNCTION_229();
}

id sub_1B1569EAC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  uint64_t v26;
  id v27;

  v27 = a1;
  v4 = sub_1B16B7D60();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v7, v10);
  v13 = (char *)&v26 - v12;
  v15 = MEMORY[0x1E0C80A78](v11, v14);
  v17 = (char *)&v26 - v16;
  MEMORY[0x1E0C80A78](v15, v18);
  v20 = (char *)&v26 - v19;
  sub_1B16B7D0C();
  sub_1B16B7D0C();
  sub_1B16B7D0C();
  v21 = a3;
  v22 = v27;
  BlueprintCollectionViewDelegate.collectionView(_:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:)((uint64_t)v22, (uint64_t)v17, (uint64_t)v13, (uint64_t)v9);

  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v9, v4);
  v23(v13, v4);
  v23(v17, v4);
  v24 = (void *)sub_1B16B7CDC();
  v23(v20, v4);
  return v24;
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.scrollViewWillBeginDragging(_:)(UIScrollView *a1)
{
  OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_167_0();
}

uint64_t sub_1B156A064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (!a1
    || (v2 = OUTLINED_FUNCTION_126_1(),
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v1 + 32))(&v4, v2, v1),
        result = OUTLINED_FUNCTION_63_0(),
        (v4 & 1) == 0))
  {
    OUTLINED_FUNCTION_141_3();
    OUTLINED_FUNCTION_30();
    result = OUTLINED_FUNCTION_192_0();
    if (result)
    {
      OUTLINED_FUNCTION_202_0();
      return OUTLINED_FUNCTION_45();
    }
  }
  return result;
}

void sub_1B156A0BC(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  BlueprintCollectionViewDelegate.scrollViewWillBeginDragging(_:)((UIScrollView *)a1);
}

void sub_1B156A0EC()
{
  void *v0;
  void *v1;

}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView *_, Swift::Bool willDecelerate)
{
  if (!willDecelerate)
    OUTLINED_FUNCTION_144_1();
  OUTLINED_FUNCTION_44();
}

void sub_1B156A144(void *a1, uint64_t a2, void *a3, Swift::Bool a4)
{
  UIScrollView *v6;
  id v7;

  v6 = a3;
  v7 = a1;
  BlueprintCollectionViewDelegate.scrollViewDidEndDragging(_:willDecelerate:)(v6, a4);

}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.scrollViewDidEndDecelerating(_:)(UIScrollView *a1)
{
  OUTLINED_FUNCTION_144_1();
}

void sub_1B156A1B8()
{
  OUTLINED_FUNCTION_77_6();
}

void sub_1B156A1C8()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_57_14();
  OUTLINED_FUNCTION_81_8(v0);
  OUTLINED_FUNCTION_44();
}

void sub_1B156A1D8(void *a1, uint64_t a2, void *a3)
{
  UIScrollView *v4;

  v4 = a3;
  a1;
  BlueprintCollectionViewDelegate.scrollViewDidEndDecelerating(_:)(v4);
}

void sub_1B156A210()
{
  void *v0;
  void *v1;

}

id BlueprintCollectionViewDelegate.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

void BlueprintCollectionViewDelegate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B156A274()
{
  BlueprintCollectionViewDelegate.init()();
}

void BlueprintCollectionViewDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v1, sel_dealloc);
  OUTLINED_FUNCTION_189();
}

uint64_t sub_1B156A2AC(_QWORD *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (uint64_t *)(*MEMORY[0x1E0DEEDD8] & *a1);
  OUTLINED_FUNCTION_92((uint64_t)a1 + v2[17], v2[10]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v3 + 144), v2[11]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_1_26();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_1_26();

  OUTLINED_FUNCTION_1_26();
  swift_weakDestroy();
  OUTLINED_FUNCTION_1_26();
  sub_1B13C076C((uint64_t)a1 + *(_QWORD *)(v5 + 192));
  OUTLINED_FUNCTION_1_26();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();

  OUTLINED_FUNCTION_1_26();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_26();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(_QWORD *)(v7 + 272));
  OUTLINED_FUNCTION_1_26();
  sub_1B1410C8C((uint64_t)a1 + *(_QWORD *)(v8 + 280), qword_1ED17DF60, &qword_1ED180C08, (uint64_t)&protocol descriptor for KeyboardInputMonitorType);
  OUTLINED_FUNCTION_1_26();
  sub_1B1410C8C((uint64_t)a1 + *(_QWORD *)(v9 + 288), (unint64_t *)&unk_1ED17DF50, &qword_1ED17DF48, (uint64_t)&protocol descriptor for BlueprintPrefetcherType);
  OUTLINED_FUNCTION_1_26();
  return swift_unknownObjectWeakDestroy();
}

void sub_1B156A428(void **a1)
{
  *a1 = malloc(0x28uLL);
  BlueprintCollectionViewDelegate.delegate.modify();
}

uint64_t (*sub_1B156A450(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B156A474(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  BlueprintCollectionViewDelegate.keyCommandManager.modify();
  v2[4] = v3;
  return sub_1B13C6B28;
}

void sub_1B156A4C0(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  BlueprintCollectionViewDelegate.selectionProvider.modify(v2);
}

uint64_t (*sub_1B156A4E8(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B156A508(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  BlueprintCollectionViewDelegate.viewportMonitor.modify((uint64_t)v2);
  v2[4] = v3;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B156A550(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  BlueprintCollectionViewDelegate.dragReorderDelegate.modify();
  v2[4] = v3;
  return sub_1B13C6B28;
}

void BlueprintCollectionViewDelegate.blueprintInfiniteScrollManager(_:didCompleteRequestForIdentifier:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;

  if (MEMORY[0x1B5E1F2F8]((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128)))
    sub_1B1563B5C();
  v1 = sub_1B16BA040();
  OUTLINED_FUNCTION_132_5(v1, (unint64_t *)&qword_1ED188F70, (unint64_t *)&qword_1ED188F80, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = OUTLINED_FUNCTION_25();
  *(_OWORD *)(v2 + 16) = xmmword_1B16C51D0;
  swift_getAssociatedTypeWitness();
  v3 = OUTLINED_FUNCTION_207_0();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1B140493C();
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  OUTLINED_FUNCTION_10(v6, (unint64_t *)&qword_1ED188F60);
  v7 = (id)OUTLINED_FUNCTION_51_0();
  sub_1B16B8B58();
  OUTLINED_FUNCTION_20_0();

}

void sub_1B156A6CC()
{
  BlueprintCollectionViewDelegate.viewWillDisappear()();
}

void sub_1B156A6EC()
{
  BlueprintCollectionViewDelegate.viewDidDisappear()();
}

uint64_t sub_1B156A70C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void sub_1B156A72C()
{
  uint64_t v0;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_107_4();
  OUTLINED_FUNCTION_1_54();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintItem(0, v0, AssociatedConformanceWitness, v2);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_107_4();
  OUTLINED_FUNCTION_1_54();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B156A804()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_122_3();
  Blueprint.contains(indexPath:)();
}

uint64_t sub_1B156A840(char a1)
{
  OUTLINED_FUNCTION_209_0();
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_122_3();
    Blueprint.subscript.getter();
  }
  return 0;
}

uint64_t sub_1B156A8C4(uint64_t a1, uint64_t a2)
{
  return sub_1B156A70C(a1, a2);
}

void sub_1B156A8DC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B156A9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;

  MEMORY[0x1E0C80A78](a1, a2);
  v9[14] = (char *)&a9 - v14;
  v15 = sub_1B16B7D60();
  v9[6] = *(_QWORD *)(v15 - 8);
  v9[7] = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v9[13] = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v10 + 112);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[5] = v18;
  v22 = swift_getAssociatedConformanceWitness();
  v9[19] = v11;
  v9[28] = v11;
  v9[29] = v12;
  v23 = v9[22];
  v9[12] = AssociatedTypeWitness;
  v9[30] = AssociatedTypeWitness;
  v9[31] = v20;
  v9[17] = v13;
  v9[32] = v13;
  v9[33] = v23;
  v9[8] = v22;
  v9[9] = AssociatedConformanceWitness;
  v9[34] = AssociatedConformanceWitness;
  v9[35] = v22;
  type metadata accessor for SwipeActionMenuContext();
}

void sub_1B156AAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  _BYTE v24[64];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = &v24[-v9];
  MEMORY[0x1E0C80A78](v8, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 16))(&v24[-v13], *(_QWORD *)(v2 + 160), v4);
  sub_1B13CC6B4(0, &qword_1ED179988);
  *(_QWORD *)(v2 + 160) = v4;
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v2 + 32) = v10;
    sub_1B13C06D0((__int128 *)(v2 + 224), v5 - 128);
    v15 = *(_QWORD *)(v5 - 104);
    v14 = *(_QWORD *)(v5 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 128), v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    v16 = *(_QWORD *)(v2 + 224);
    if (!v16)
    {
      v17 = *(_QWORD *)(v5 - 104);
      *(_QWORD *)(v2 + 8) = *(_QWORD *)(v5 - 96);
      *(_QWORD *)(v2 + 16) = v17;
      *(_QWORD *)(v2 + 24) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 128), v17);
      v18 = *(_QWORD *)(v2 + 104);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 + 48) + 16))(v18, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 56));
      *(_QWORD *)(v2 + 120) = v7;
      BlueprintProviderType.blueprint.getter(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
      BlueprintLayoutProviderType.layoutBlueprint.getter(v3, *(_QWORD *)(v2 + 40));
      v19 = (objc_class *)type metadata accessor for RendererEnvironment();
      v20 = objc_allocWithZone(v19);
      *(_QWORD *)(v2 + 128) = a1;
      v21 = *(void **)(v2 + 144);
      v22 = v21;
      v23 = RendererEnvironment.init(scrollView:testing:)(v21, 0);
      *(_QWORD *)(v2 + 208) = v19;
      *(_QWORD *)(v2 + 216) = &protocol witness table for RendererEnvironment;
      *(_QWORD *)(v2 + 184) = v23;
      sub_1B16A99A0(v18, *(_QWORD *)(v2 + 32));
    }
    **(_QWORD **)(v2 + 168) = v16;
    __swift_destroy_boxed_opaque_existential_1(v5 - 128);
  }
  else
  {
    *(_QWORD *)(v2 + 256) = 0;
    *(_OWORD *)(v2 + 224) = 0u;
    *(_OWORD *)(v2 + 240) = 0u;
    sub_1B1410C8C(v2 + 224, (unint64_t *)&unk_1EEF33A60, &qword_1ED179988, (uint64_t)&protocol descriptor for SwipeActionable);
    **(_QWORD **)(v2 + 168) = 0;
  }
}

uint64_t sub_1B156ADBC@<X0>(void *__src@<X0>, _QWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t __dst[13];
  _BYTE v41[64];

  v7 = *MEMORY[0x1E0DEEDD8] & *a2;
  memcpy(__dst, __src, sizeof(__dst));
  HIBYTE(v39) = 1;
  sub_1B13E2FE4((uint64_t)a2 + *(_QWORD *)(v7 + 272), (uint64_t)v36);
  v8 = (void *)sub_1B16B7CDC();
  v9 = objc_msgSend(a3, sel_cellForItemAtIndexPath_, v8);

  memset(v41, 0, 32);
  v41[32] = 1;
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(v7 + 88);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v7 + 104);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v7 + 112);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v7 + 128);
  *(_QWORD *)(v11 + 72) = v10;
  type metadata accessor for CommandExecutionSource();
  v12 = swift_allocObject();
  v13 = v37;
  v14 = v38;
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  MEMORY[0x1E0C80A78](v15, v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  sub_1B164D160((uint64_t)&v39 + 7, (uint64_t)v17, (uint64_t)v9, (uint64_t)v41, 0, (uint64_t)sub_1B156CC40, v11, v12, v13, v14, v31, v32, v33, v34, v35, v36[0], v36[1], v36[2], v37,
    v38,
    v39,
    __dst[0]);
  v35 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v20 = (_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xA0));
  v21 = *v20;
  v22 = v20[1];
  v34 = ((uint64_t (*)(_QWORD, uint64_t))__dst[4])(*v20, v22);
  v33 = ((uint64_t (*)(uint64_t, uint64_t))__dst[11])(v21, v22);
  LOBYTE(v14) = ((uint64_t (*)(uint64_t, uint64_t))__dst[6])(v21, v22);
  LOBYTE(v17) = BYTE1(__dst[8]);
  v23 = __dst[1];
  v32 = __dst[0];
  v24 = (uint64_t (*)(uint64_t, uint64_t))__dst[2];
  sub_1B16B9740();
  v25 = v24(v21, v22);
  v27 = v26;
  v28 = (_QWORD *)swift_allocObject();
  memcpy(v28 + 2, __dst, 0x68uLL);
  v28[15] = v21;
  v28[16] = v22;
  v28[17] = v35;
  v29 = v33;
  *(_QWORD *)a4 = v34;
  *(_QWORD *)(a4 + 8) = v29;
  *(_BYTE *)(a4 + 16) = v14 & 1;
  *(_BYTE *)(a4 + 17) = (_BYTE)v17;
  *(_QWORD *)(a4 + 24) = v32;
  *(_QWORD *)(a4 + 32) = v23;
  *(_QWORD *)(a4 + 40) = v25;
  *(_QWORD *)(a4 + 48) = v27;
  *(_QWORD *)(a4 + 56) = sub_1B156CD28;
  *(_QWORD *)(a4 + 64) = v28;
  sub_1B156CC58((uint64_t)__dst);
  return swift_unknownObjectRetain();
}

void sub_1B156B0C4()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B156B198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t AssociatedConformanceWitness;

  v9[5] = *(_QWORD *)(a1 - 8);
  v9[6] = a1;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_134();
  v9[4] = v13;
  v17 = OUTLINED_FUNCTION_185_0(0, v14, v15, v16);
  v9[2] = *(_QWORD *)(v17 - 8);
  v9[3] = v17;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v18, v19);
  v9[9] = (char *)&a9 - v20;
  v21 = OUTLINED_FUNCTION_32_21();
  v9[13] = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v22, v23);
  OUTLINED_FUNCTION_54_0();
  v24 = OUTLINED_FUNCTION_38_17();
  type metadata accessor for BlueprintLayoutItem(0, v21, v24, v25);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_97_0();
  v28 = OUTLINED_FUNCTION_153_2();
  BlueprintLayoutProviderType.layoutBlueprint.getter(v28, v29);
  v30 = OUTLINED_FUNCTION_32_21();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 128) = v30;
  *(_QWORD *)(v10 - 120) = v21;
  *(_QWORD *)(v10 - 112) = AssociatedConformanceWitness;
  *(_QWORD *)(v10 - 104) = v24;
  OUTLINED_FUNCTION_71_6();
}

void sub_1B156B2DC()
{
  BlueprintLayout.subscript.getter();
}

void sub_1B156B2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  _OWORD *v13;

  OUTLINED_FUNCTION_36_1(v0 + 168, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
  v5 = OUTLINED_FUNCTION_79_0(v3, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 32));
  OUTLINED_FUNCTION_197(v5, (unint64_t *)&qword_1ED17B738);
  v6 = OUTLINED_FUNCTION_3_0();
  if ((v6 & 1) == 0)
  {
    *(_QWORD *)(v4 - 96) = 0;
    *(_OWORD *)(v4 - 128) = 0u;
    *(_OWORD *)(v4 - 112) = 0u;
  }
  OUTLINED_FUNCTION_196_1(v6, v7, (unint64_t *)&unk_1EEF33A50, (unint64_t *)&qword_1ED17B738, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  if (!*(_QWORD *)(v0 + 192))
  {
    sub_1B1410C8C(v0 + 168, (unint64_t *)&unk_1EEF33A50, (unint64_t *)&qword_1ED17B738, (uint64_t)&protocol descriptor for SwipeActionAppearance);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_28_4((_QWORD *)(v0 + 168));
  v8 = OUTLINED_FUNCTION_27_4();
  v9(v8);
  v10 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(unsigned __int8 *)(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  if (v12 != 1 || v10 | v11)
  {
LABEL_8:
    BlueprintProviderType.blueprint.getter(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    OUTLINED_FUNCTION_206_1();
  }
  v13 = *(_OWORD **)(v0 + 96);
  v13[1] = 0u;
  v13[2] = 0u;
  *v13 = 0u;
  sub_1B1410C8C(v4 - 128, (unint64_t *)&unk_1EEF33A50, (unint64_t *)&qword_1ED17B738, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  OUTLINED_FUNCTION_47();
}

void sub_1B156B520()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B156B60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;

  MEMORY[0x1E0C80A78](a1, a2);
  v9[14] = (char *)&a9 - v14;
  v15 = sub_1B16B7D60();
  v9[6] = *(_QWORD *)(v15 - 8);
  v9[7] = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v9[13] = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v10 + 112);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[5] = v18;
  v22 = swift_getAssociatedConformanceWitness();
  v9[19] = v11;
  v9[28] = v11;
  v9[29] = v12;
  v23 = v9[22];
  v9[12] = AssociatedTypeWitness;
  v9[30] = AssociatedTypeWitness;
  v9[31] = v20;
  v9[17] = v13;
  v9[32] = v13;
  v9[33] = v23;
  v9[8] = v22;
  v9[9] = AssociatedConformanceWitness;
  v9[34] = AssociatedConformanceWitness;
  v9[35] = v22;
  type metadata accessor for SwipeActionMenuContext();
}

void sub_1B156B73C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  _BYTE v24[64];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = &v24[-v9];
  MEMORY[0x1E0C80A78](v8, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 16))(&v24[-v13], *(_QWORD *)(v2 + 160), v4);
  sub_1B13CC6B4(0, &qword_1ED179988);
  *(_QWORD *)(v2 + 160) = v4;
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v2 + 32) = v10;
    sub_1B13C06D0((__int128 *)(v2 + 224), v5 - 128);
    v15 = *(_QWORD *)(v5 - 104);
    v14 = *(_QWORD *)(v5 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 128), v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v15, v14);
    v16 = *(_QWORD *)(v2 + 224);
    if (!v16)
    {
      v17 = *(_QWORD *)(v5 - 104);
      *(_QWORD *)(v2 + 8) = *(_QWORD *)(v5 - 96);
      *(_QWORD *)(v2 + 16) = v17;
      *(_QWORD *)(v2 + 24) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 128), v17);
      v18 = *(_QWORD *)(v2 + 104);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 + 48) + 16))(v18, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 56));
      *(_QWORD *)(v2 + 120) = v7;
      BlueprintProviderType.blueprint.getter(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
      BlueprintLayoutProviderType.layoutBlueprint.getter(v3, *(_QWORD *)(v2 + 40));
      v19 = (objc_class *)type metadata accessor for RendererEnvironment();
      v20 = objc_allocWithZone(v19);
      *(_QWORD *)(v2 + 128) = a1;
      v21 = *(void **)(v2 + 144);
      v22 = v21;
      v23 = RendererEnvironment.init(scrollView:testing:)(v21, 0);
      *(_QWORD *)(v2 + 208) = v19;
      *(_QWORD *)(v2 + 216) = &protocol witness table for RendererEnvironment;
      *(_QWORD *)(v2 + 184) = v23;
      sub_1B16A99A0(v18, *(_QWORD *)(v2 + 32));
    }
    **(_QWORD **)(v2 + 168) = v16;
    __swift_destroy_boxed_opaque_existential_1(v5 - 128);
  }
  else
  {
    *(_QWORD *)(v2 + 256) = 0;
    *(_OWORD *)(v2 + 224) = 0u;
    *(_OWORD *)(v2 + 240) = 0u;
    sub_1B1410C8C(v2 + 224, (unint64_t *)&unk_1EEF33A60, &qword_1ED179988, (uint64_t)&protocol descriptor for SwipeActionable);
    **(_QWORD **)(v2 + 168) = 0;
  }
}

uint64_t sub_1B156BA00@<X0>(void *__src@<X0>, _QWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t __dst[13];
  _BYTE v41[64];

  v7 = *MEMORY[0x1E0DEEDD8] & *a2;
  memcpy(__dst, __src, sizeof(__dst));
  HIBYTE(v39) = 1;
  sub_1B13E2FE4((uint64_t)a2 + *(_QWORD *)(v7 + 272), (uint64_t)v36);
  v8 = (void *)sub_1B16B7CDC();
  v9 = objc_msgSend(a3, sel_cellForItemAtIndexPath_, v8);

  memset(v41, 0, 32);
  v41[32] = 1;
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(v7 + 88);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v7 + 104);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v7 + 112);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v7 + 128);
  *(_QWORD *)(v11 + 72) = v10;
  type metadata accessor for CommandExecutionSource();
  v12 = swift_allocObject();
  v13 = v37;
  v14 = v38;
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  MEMORY[0x1E0C80A78](v15, v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  sub_1B164D160((uint64_t)&v39 + 7, (uint64_t)v17, (uint64_t)v9, (uint64_t)v41, 0, (uint64_t)sub_1B156CC40, v11, v12, v13, v14, v31, v32, v33, v34, v35, v36[0], v36[1], v36[2], v37,
    v38,
    v39,
    __dst[0]);
  v35 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v20 = (_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xA0));
  v21 = *v20;
  v22 = v20[1];
  v34 = ((uint64_t (*)(_QWORD, uint64_t))__dst[4])(*v20, v22);
  v33 = ((uint64_t (*)(uint64_t, uint64_t))__dst[11])(v21, v22);
  LOBYTE(v14) = ((uint64_t (*)(uint64_t, uint64_t))__dst[6])(v21, v22);
  LOBYTE(v17) = BYTE1(__dst[8]);
  v23 = __dst[1];
  v32 = __dst[0];
  v24 = (uint64_t (*)(uint64_t, uint64_t))__dst[2];
  sub_1B16B9740();
  v25 = v24(v21, v22);
  v27 = v26;
  v28 = (_QWORD *)swift_allocObject();
  memcpy(v28 + 2, __dst, 0x68uLL);
  v28[15] = v21;
  v28[16] = v22;
  v28[17] = v35;
  v29 = v33;
  *(_QWORD *)a4 = v34;
  *(_QWORD *)(a4 + 8) = v29;
  *(_BYTE *)(a4 + 16) = v14 & 1;
  *(_BYTE *)(a4 + 17) = (_BYTE)v17;
  *(_QWORD *)(a4 + 24) = v32;
  *(_QWORD *)(a4 + 32) = v23;
  *(_QWORD *)(a4 + 40) = v25;
  *(_QWORD *)(a4 + 48) = v27;
  *(_QWORD *)(a4 + 56) = sub_1B156CC48;
  *(_QWORD *)(a4 + 64) = v28;
  sub_1B156CC58((uint64_t)__dst);
  return swift_unknownObjectRetain();
}

void sub_1B156BD08()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_32_21();
  OUTLINED_FUNCTION_18_32();
  OUTLINED_FUNCTION_38_17();
  OUTLINED_FUNCTION_38_17();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B156BDB8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_99_4();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_150_1();
}

void sub_1B156BDEC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  if (a1)
  {
    *(_QWORD *)(v7 - 152) = v2;
    OUTLINED_FUNCTION_128();
    v11 = v9 + v10;
    OUTLINED_FUNCTION_30();
    v12 = MEMORY[0x1B5E1F2F8](v11);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = *(_QWORD *)(v7 + 16);
      BlueprintProviderType.blueprint.getter(v5, v1);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t))(v14 + 176))(v6, *(_QWORD *)(v7 - 144), v4, *(_QWORD *)(v7 - 152), v14);

      OUTLINED_FUNCTION_69_8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B156BE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_50_12();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_100_2();
  v2 = OUTLINED_FUNCTION_178_0();
  type metadata accessor for BlueprintLayoutItem(v2, v3, v4, v5);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_97_8();
  v8 = OUTLINED_FUNCTION_88_8();
  BlueprintLayoutProviderType.layoutBlueprint.getter(v8, v9);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_127_5();
  OUTLINED_FUNCTION_71_6();
}

void sub_1B156BFA8()
{
  BlueprintLayout.subscript.getter();
}

void sub_1B156BFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + 56, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v5, v1);
  OUTLINED_FUNCTION_197(v6, (unint64_t *)&qword_1ED17B738);
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_120_4();
    v7 = OUTLINED_FUNCTION_1_54();
    v8(v7);
    OUTLINED_FUNCTION_42_15();
  }
  else
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_1B1410C8C(v0 + 16, (unint64_t *)&unk_1EEF33A50, (unint64_t *)&qword_1ED17B738, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B156C074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_50_12();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_100_2();
  v2 = OUTLINED_FUNCTION_178_0();
  type metadata accessor for BlueprintItem(v2, v3, v4, v5);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_50_12();
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B156C160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_97_8();
  v2 = OUTLINED_FUNCTION_88_8();
  BlueprintProviderType.blueprint.getter(v2, v3);
  Blueprint.subscript.getter();
}

void sub_1B156C1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_57_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 184) + 32))(v1, v2, v0);
  OUTLINED_FUNCTION_197(v6, &qword_1ED179988);
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_19_34();
    v7 = OUTLINED_FUNCTION_146_4();
    v8(v7);
    __swift_destroy_boxed_opaque_existential_1(v5 - 120);
  }
  else
  {
    OUTLINED_FUNCTION_35_16();
    OUTLINED_FUNCTION_157_2(v9, (unint64_t *)&unk_1EEF33A60, &qword_1ED179988, (uint64_t)&protocol descriptor for SwipeActionable);
    **(_BYTE **)(v5 - 168) = 1;
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B156C250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_41_18();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_16_14();
  v2 = OUTLINED_FUNCTION_127_5();
  OUTLINED_FUNCTION_121_5(v2, v3, v4, v5);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_99_4();
  OUTLINED_FUNCTION_41_18();
  OUTLINED_FUNCTION_127_5();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B156C330()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_52_13();
  OUTLINED_FUNCTION_108_6();
}

void sub_1B156C354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_159_1();
  v1 = OUTLINED_FUNCTION_95_8();
  OUTLINED_FUNCTION_197(v1, &qword_1ED179988);
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_19_34();
    OUTLINED_FUNCTION_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 48));
    OUTLINED_FUNCTION_118_6();
  }
  else
  {
    OUTLINED_FUNCTION_35_16();
    OUTLINED_FUNCTION_157_2(v2, (unint64_t *)&unk_1EEF33A60, &qword_1ED179988, (uint64_t)&protocol descriptor for SwipeActionable);
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B156C3D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_6();
  v1 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70);
  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_87_9();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintLayoutItem(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v8, v9);
  BlueprintLayoutProviderType.layoutBlueprint.getter(v2, v1);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_87_9();
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_71_6();
}

void sub_1B156C500()
{
  BlueprintLayout.subscript.getter();
}

void sub_1B156C518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_36_1(v0 + 56, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v5, v2);
  OUTLINED_FUNCTION_197(v6, (unint64_t *)&qword_1ED17B738);
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_120_4();
    OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_42_15();
  }
  else
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_1B1410C8C(v0 + 16, (unint64_t *)&unk_1EEF33A50, (unint64_t *)&qword_1ED17B738, (uint64_t)&protocol descriptor for SwipeActionAppearance);
    v7 = *(_QWORD **)(v0 + 8);
    *v7 = 0;
    v7[1] = 0;
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B156C5C0()
{
  sub_1B156B0C4();
}

void sub_1B156C7F8()
{
  sub_1B156B0C4();
}

void sub_1B156C81C()
{
  sub_1B156B0C4();
}

uint64_t sub_1B156C854()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B156C870()
{
  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B156C88C()
{
  OUTLINED_FUNCTION_198_0();
  swift_release();
  return swift_deallocObject();
}

void sub_1B156C8B4(uint64_t a1)
{
  uint64_t v1;

  sub_1B1563ACC(a1, *(_QWORD *)(v1 + 72));
  OUTLINED_FUNCTION_189();
}

void sub_1B156C8E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EEF338C8)
  {
    v2 = type metadata accessor for SeparatorView();
    v4 = type metadata accessor for CollectionReusableView(a1, v2, (uint64_t)&protocol witness table for SeparatorView, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EEF338C8);
  }
}

uint64_t sub_1B156C940()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_140_0();
  return swift_deallocObject();
}

void *sub_1B156C964()
{
  uint64_t v0;

  return sub_1B1567960(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B156C96C()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B156C988()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B156C9A0()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_140_0();

  return swift_deallocObject();
}

void sub_1B156C9D0()
{
  uint64_t v0;

  sub_1B1568120(*(_QWORD *)(v0 + 16));
}

uint64_t method lookup function for BlueprintCollectionViewDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:keyboardInputMonitor:prefetcher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

void sub_1B156CA58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF33A40)
  {
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF33A40);
  }
}

uint64_t sub_1B156CAA0()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_140_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B156CADC()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 32);
  if ((v1 & 1) != 0)
    (*(void (**)(void))(v0 + 72))();
  return v1 & 1;
}

uint64_t sub_1B156CB08(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 8);
  v3 = *(id *)a1;
  v4 = v2;
  sub_1B16B9740();
  sub_1B16B9740();
  swift_retain();
  return a1;
}

uint64_t sub_1B156CB68(uint64_t a1)
{
  destroy for SwipeContextualActionMenu(a1);
  return a1;
}

uint64_t sub_1B156CB9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B156BA00(a1, *(_QWORD **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1B156CBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1410CB8(0, (unint64_t *)&unk_1EEF33A50, (unint64_t *)&qword_1ED17B738, (uint64_t)&protocol descriptor for SwipeActionAppearance, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B156CC20()
{
  OUTLINED_FUNCTION_198_0();
  return swift_deallocObject();
}

uint64_t sub_1B156CC48()
{
  uint64_t *v0;

  return sub_1B1689C2C((uint64_t)(v0 + 2), v0[15], v0[16], v0[17]);
}

uint64_t sub_1B156CC58(uint64_t a1)
{
  sub_1B16B9740();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B156CCCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B156ADBC(a1, *(_QWORD **)(v2 + 16), *(void **)(v2 + 24), a2);
}

void sub_1B156CCEC()
{
  sub_1B156BD08();
}

void sub_1B156CD10()
{
  OUTLINED_FUNCTION_189();
}

uint64_t OUTLINED_FUNCTION_107_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_110_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_118_6()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 120);
}

_QWORD *OUTLINED_FUNCTION_120_4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1B13C06D0((__int128 *)(v0 + 16), v1 - 128);
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 128), *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_121_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for BlueprintItem(0, v4, a1, a4);
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  uint64_t v0;
  uint64_t v1;

  return BlueprintProviderType.blueprint.getter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_124_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_127_5()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_130_6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, __int16 a10, char a11, char a12)
{
  UIViewController *v12;

  ViewControllerTransitionManager.beginTransition(viewController:transition:animated:)(v12, (TeaUI::ViewControllerTransitionManager::Transition)&a12, 0);
}

void OUTLINED_FUNCTION_132_5(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1B1410CB8(0, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_133_5()
{
  return type metadata accessor for SwipeActionCollectionView();
}

void OUTLINED_FUNCTION_134_4(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  unint64_t *v3;
  uint64_t v4;

  sub_1B13F5FD4(a1, a2, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_137_3()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_143_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 24) + 8))(v1, *(_QWORD *)(v0 + 32));
}

void OUTLINED_FUNCTION_144_1()
{
  sub_1B1563B5C();
}

uint64_t OUTLINED_FUNCTION_146_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_153_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_156_3()
{
  return sub_1B16B983C();
}

void OUTLINED_FUNCTION_157_2(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4;

  sub_1B1410C8C(v4 - 160, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_158_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_159_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_160_3()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_166_2(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_167_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1B13E0BC4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_168_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_169_2()
{
  return sub_1B16B8B58();
}

uint64_t OUTLINED_FUNCTION_171_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(v1, *(_QWORD *)(v0 + 136));
}

id OUTLINED_FUNCTION_174_1(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_175_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return v2 + *(_QWORD *)((v1 & a1) + 0xF0);
}

uint64_t OUTLINED_FUNCTION_176_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_178_0()
{
  return 0;
}

void OUTLINED_FUNCTION_183_1()
{
  sub_1B1410858();
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  return type metadata accessor for ViewControllerTransitionManager();
}

uint64_t OUTLINED_FUNCTION_185_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for BlueprintItem(a1, v5, v4, a4);
}

uint64_t OUTLINED_FUNCTION_186_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

id OUTLINED_FUNCTION_191_1(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2, 1);
}

void OUTLINED_FUNCTION_196_1(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  sub_1B13F5FD4(v6 - 128, v5 + 168, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_199_1()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_201_1()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_202_0()
{
  KeyCommandManager.invalidate(clearState:)(1);
}

uint64_t OUTLINED_FUNCTION_205_0(__int128 *a1)
{
  uint64_t v1;

  return sub_1B13C06D0(a1, v1 - 128);
}

void OUTLINED_FUNCTION_206_1()
{
  Blueprint.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_207_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_208_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1B13E0BC4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_209_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

id OUTLINED_FUNCTION_210_0()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_215_0()
{
  return sub_1B16B9830();
}

uint64_t OUTLINED_FUNCTION_216_0()
{
  return sub_1B16B7CDC();
}

uint64_t OUTLINED_FUNCTION_219()
{
  return 0;
}

void OUTLINED_FUNCTION_220(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_221(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_231()
{
  return swift_unknownObjectRetain();
}

double static CGSize.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

double static CGSize.greatestFiniteMagnitude.getter()
{
  return 1.79769313e308;
}

double CGSize.with(aspectRatio:)(double a1, double a2, double a3)
{
  if (a2 / a3 > a1)
    return a1 * a3;
  return a2;
}

double CGSize.adding(height:)(double a1, double a2)
{
  return a2;
}

double CGSize.diagonal.getter(double a1, double a2)
{
  return sqrt(a1 * a1 + a2 * a2);
}

CGSize __swiftcall CGSize.smallerThan(maxSize:)(CGSize maxSize)
{
  double v1;
  double v2;
  double width;
  double v4;
  double height;
  double v7;
  CGSize result;

  width = maxSize.width;
  v4 = 0.0;
  if (v1 <= 0.0 || v2 <= 0.0 || width <= 0.0)
  {
    height = 0.0;
  }
  else
  {
    height = 0.0;
    if (maxSize.height > 0.0)
    {
      if (width < v1 || maxSize.height < v2)
      {
        if (width / maxSize.height >= v1 / v2)
        {
          height = maxSize.height;
          v4 = maxSize.height * v1 / v2;
        }
        else
        {
          v4 = width;
          height = width * v2 / v1;
        }
      }
      else
      {
        v4 = v1;
        height = v2;
      }
    }
  }
  v7 = height;
  result.height = v7;
  result.width = v4;
  return result;
}

uint64_t dispatch thunk of FloatingTabBarNavigationPresentable.floatingTabBarPresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t PickerView.items.getter()
{
  OUTLINED_FUNCTION_13();
  return sub_1B16B9740();
}

uint64_t sub_1B156D1DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + qword_1EEF33A70);
  swift_beginAccess();
  *a2 = *v3;
  return sub_1B16B9740();
}

void sub_1B156D230()
{
  uint64_t v0;

  v0 = sub_1B16B9740();
  PickerView.items.setter(v0);
}

void PickerView.items.setter(uint64_t a1)
{
  char *v1;
  char *v3;

  v3 = &v1[qword_1EEF33A70];
  OUTLINED_FUNCTION_13();
  *(_QWORD *)v3 = a1;
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_reloadAllComponents);
  OUTLINED_FUNCTION_90();
}

void (*PickerView.items.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  return sub_1B156D2F4;
}

void sub_1B156D2F4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) != 0)
    OUTLINED_FUNCTION_0_0();
  else
    objc_msgSend(*(id *)(a1 + 24), sel_reloadAllComponents);
}

void PickerView.selectedItem.getter(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  if (((unint64_t)objc_msgSend(v1, sel_selectedRowInComponent_, 0) & 0x8000000000000000) != 0)
  {
    __swift_storeEnumTagSinglePayload(a1, 1, 1, *(_QWORD *)(v3 + 80));
  }
  else
  {
    OUTLINED_FUNCTION_13();
    v4 = *(_QWORD *)(v3 + 80);
    sub_1B16B9C98();
    swift_endAccess();
    __swift_storeEnumTagSinglePayload(a1, 0, 1, v4);
    OUTLINED_FUNCTION_90();
  }
}

uint64_t sub_1B156D3F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1B16BA328();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v8 - v4, a1);
  return PickerView.selectedItem.setter((uint64_t)v5);
}

uint64_t PickerView.selectedItem.setter(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_91();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void (*PickerView.selectedItem.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_1_91();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  PickerView.selectedItem.getter((uint64_t)v7);
  return sub_1B156D548;
}

void sub_1B156D548(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    PickerView.selectedItem.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PickerView.selectedItem.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

id PickerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PickerView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = qword_1EEF33A70;
  *(_QWORD *)&v0[v1] = sub_1B16B9BD8();
  v2 = qword_1EEF33A78;
  OUTLINED_FUNCTION_2_78();
  swift_getFunctionTypeMetadata1();
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_7_53();

  sub_1B16BA724();
  __break(1u);
}

void sub_1B156D6D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  PickerView.init(coder:)();
}

id PickerView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id PickerView.init(frame:)()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  objc_super *v6;
  SEL v7;
  id v8;

  OUTLINED_FUNCTION_57();
  ObjectType = swift_getObjectType();
  v2 = qword_1EEF33A70;
  v3 = v0;
  *(_QWORD *)&v0[v2] = sub_1B16B9BD8();
  v4 = qword_1EEF33A78;
  OUTLINED_FUNCTION_2_78();
  swift_getFunctionTypeMetadata1();
  *(_QWORD *)&v3[v4] = OUTLINED_FUNCTION_7_53();

  v5 = OUTLINED_FUNCTION_54();
  v8 = objc_msgSendSuper2(v6, v7, v5, v3, ObjectType);
  objc_msgSend(v8, sel_setDelegate_, v8);
  objc_msgSend(v8, sel_setDataSource_, v8);

  return v8;
}

id sub_1B156D820()
{
  return PickerView.init(frame:)();
}

Swift::Int __swiftcall PickerView.numberOfComponents(in:)(UIPickerView *in)
{
  return 1;
}

uint64_t sub_1B156D848()
{
  return 1;
}

Swift::Int __swiftcall PickerView.pickerView(_:numberOfRowsInComponent:)(UIPickerView *_, Swift::Int numberOfRowsInComponent)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;

  v3 = *MEMORY[0x1E0DEEDD8] & *v2;
  OUTLINED_FUNCTION_13();
  v4 = *(_QWORD *)(v3 + 80);
  v5 = sub_1B16B9740();
  v6 = MEMORY[0x1B5E1D5A0](v5, v4);
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Int sub_1B156D8D0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  UIPickerView *v5;
  Swift::Int v6;
  Swift::Int v7;

  v4 = a3;
  v5 = a1;
  v7 = PickerView.pickerView(_:numberOfRowsInComponent:)(v5, v6);

  return v7;
}

Swift::String_optional __swiftcall PickerView.pickerView(_:titleForRow:forComponent:)(UIPickerView *_, Swift::Int titleForRow, Swift::Int forComponent)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  Swift::String_optional result;
  uint64_t v15;

  v4 = *MEMORY[0x1E0DEEDD8] & *v3;
  v5 = *(_QWORD *)(v4 + 0x50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](_, titleForRow);
  v8 = (char *)&v15 - v7;
  OUTLINED_FUNCTION_13();
  sub_1B16B9C98();
  swift_endAccess();
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 88) + 8))(v5);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v9;
  v13 = v11;
  result.value._object = v13;
  result.value._countAndFlagsBits = v12;
  return result;
}

id sub_1B156D9F8(void *a1, uint64_t a2, void *a3, Swift::Int a4)
{
  id v6;
  UIPickerView *v7;
  Swift::Int v8;
  void *object;
  void *v10;

  v6 = a3;
  v7 = a1;
  object = PickerView.pickerView(_:titleForRow:forComponent:)(v7, a4, v8).value._object;

  if (object)
  {
    v10 = (void *)sub_1B16B983C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  return v10;
}

Swift::Void __swiftcall PickerView.pickerView(_:didSelectRow:inComponent:)(UIPickerView *_, Swift::Int didSelectRow, Swift::Int inComponent)
{
  uint64_t v3;

  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_2_78();
  swift_getFunctionTypeMetadata1();
  v3 = OUTLINED_FUNCTION_9_7();
  sub_1B16B9740();
  MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF38], v3);
  sub_1B16B9AA0();
  swift_bridgeObjectRelease();
}

uint64_t sub_1B156DB38(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void (**v4)(char *);
  uint64_t v5;
  char *v6;
  void (*v7)(char *);
  uint64_t v9;

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x50);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (void (**)(char *))MEMORY[0x1E0C80A78](a1, a2);
  v6 = (char *)&v9 - v5;
  v7 = *v4;
  swift_beginAccess();
  sub_1B16B9C98();
  swift_endAccess();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_1B156DC14(void *a1, uint64_t a2, void *a3, Swift::Int a4)
{
  id v6;
  Swift::Int v7;
  UIPickerView *v8;

  v6 = a3;
  v8 = a1;
  PickerView.pickerView(_:didSelectRow:inComponent:)(v8, a4, v7);

}

id PickerView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B156DC9C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PickerView.onSelect(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *MEMORY[0x1E0DEEDD8] & *v2;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = *(_QWORD *)(v5 + 80);
  v6[3] = *(_QWORD *)(v5 + 88);
  v6[4] = a1;
  v6[5] = a2;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_2_78();
  swift_getFunctionTypeMetadata1();
  OUTLINED_FUNCTION_9_7();
  swift_retain();
  sub_1B16B9C2C();
  return swift_endAccess();
}

uint64_t sub_1B156DDA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1B156DB38(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1B156DDC0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B156DDE4()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 32))();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B156DE10(uint64_t a1@<X8>)
{
  PickerView.selectedItem.getter(a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t dispatch thunk of PickerViewItemType.pickerItemTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B156DE40()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PickerView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PickerView);
}

uint64_t sub_1B156DE90(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(char *);
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v4 = v3;
  v35 = a1;
  v36 = a2;
  sub_1B13ECA5C(0, (unint64_t *)&qword_1ED17E140, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_1B16B7D60();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  OUTLINED_FUNCTION_47_0();
  v33 = v13;
  result = MEMORY[0x1E0C80A78](v14, v15);
  v37 = (char *)&v28 - v17;
  v38 = MEMORY[0x1E0DEE9D8];
  v34 = *(_QWORD *)(a3 + 16);
  if (v34)
  {
    v18 = 0;
    v29 = a3;
    v31 = v9;
    v32 = v11;
    while (v18 < *(_QWORD *)(a3 + 16))
    {
      v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v20 = *(_QWORD *)(v11 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, a3 + v19 + v20 * v18, v10);
      OUTLINED_FUNCTION_45_13((uint64_t)v9, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
        goto LABEL_15;
      v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v22 = v37;
      v21(v37, v9, v10);
      v23 = v35(v22);
      if (v4)
      {
        OUTLINED_FUNCTION_52_14(*(uint64_t (**)(_QWORD, uint64_t))(v32 + 8));
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if ((v23 & 1) != 0)
      {
        v21(v33, v37, v10);
        v24 = v38;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v30 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B141E4C0(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v24 = v38;
        }
        v27 = *(_QWORD *)(v24 + 16);
        v26 = *(_QWORD *)(v24 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1B141E4C0(v26 > 1, v27 + 1, 1);
          v24 = v38;
        }
        *(_QWORD *)(v24 + 16) = v27 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v24 + v19 + v27 * v20, v33, v10);
        v38 = v24;
        a3 = v29;
        v4 = v30;
        v11 = v32;
      }
      else
      {
        v11 = v32;
        result = OUTLINED_FUNCTION_52_14(*(uint64_t (**)(_QWORD, uint64_t))(v32 + 8));
      }
      ++v18;
      v9 = v31;
      if (v34 == v18)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    OUTLINED_FUNCTION_45_13((uint64_t)v9, 1);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1B13EFECC((uint64_t)v9);
    return v38;
  }
  return result;
}

void sub_1B156E118(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  uint64_t v14;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = a1;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      sub_1B16B9740();
      v11 = v5(v18);
      if (v3)
      {
        swift_release();
        OUTLINED_FUNCTION_52();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B1490D34();
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1B1490D34();
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v9;
        v4 = a3;
        v5 = a1;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
}

void sub_1B156E284()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_48_13();
  if (v3 >> 62)
    goto LABEL_17;
  for (i = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = OUTLINED_FUNCTION_28_25())
  {
    OUTLINED_FUNCTION_29_22();
    while (1)
    {
      if (v18)
        OUTLINED_FUNCTION_50_13();
      if (v2 >= *(_QWORD *)(v17 + 16))
        break;
      v5 = *(id *)(v1 + 8 * v2 + 32);
      v13 = v5;
      v14 = v2 + 1;
      if (__OFADD__(v2, 1))
        goto LABEL_16;
      v15 = OUTLINED_FUNCTION_17_28((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v16, v17, 0, v19);
      if (v0)
      {
        OUTLINED_FUNCTION_52();

        swift_release();
        goto LABEL_19;
      }
      if ((v15 & 1) != 0)
      {
        sub_1B16BA61C();
        OUTLINED_FUNCTION_8_49();
        OUTLINED_FUNCTION_9_51();
        sub_1B16BA628();
      }
      else
      {

      }
      ++v2;
      if (v14 == i)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    ;
  }
LABEL_18:
  OUTLINED_FUNCTION_52();
LABEL_19:
  OUTLINED_FUNCTION_11_40();
}

void BlueprintSectionCollapsibleStateManager.state(for:)()
{
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_49_0();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_49_0();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
}

{
  OUTLINED_FUNCTION_20_34();
  OUTLINED_FUNCTION_20_34();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_38_2();
}

uint64_t sub_1B156E434()
{
  BOOL *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = BlueprintSection.identifier.getter();
  BlueprintSectionCollapsibleStateManager.state(for:)(v1, v2, v0);
  return OUTLINED_FUNCTION_52();
}

uint64_t BlueprintSectionCollapsibleStateManager.onStateChange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  OUTLINED_FUNCTION_13();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  sub_1B13B9100(v6);
  swift_retain();
  return OUTLINED_FUNCTION_32();
}

BOOL static BlueprintSectionCollapsibleStateManager.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintSectionCollapsibleStateManager.State.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t BlueprintSectionCollapsibleStateManager.State.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return OUTLINED_FUNCTION_115();
}

uint64_t sub_1B156E55C()
{
  sub_1B16BAA48();
  BlueprintSectionCollapsibleStateManager.State.hash(into:)();
  return sub_1B16BAA78();
}

uint64_t BlueprintSectionCollapsibleStateManager.__allocating_init(blueprintProvider:collapsedSectionsKey:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  BlueprintSectionCollapsibleStateManager.init(blueprintProvider:collapsedSectionsKey:)(a1, a2, a3);
  return v6;
}

char *BlueprintSectionCollapsibleStateManager.init(blueprintProvider:collapsedSectionsKey:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *(_QWORD *)v3;
  *(_QWORD *)&v3[*(_QWORD *)(*(_QWORD *)v3 + 112)] = MEMORY[0x1E0DEE9E8];
  v8 = &v3[*(_QWORD *)(*(_QWORD *)v3 + 120)];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = *(_QWORD *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(&v3[*(_QWORD *)(*(_QWORD *)v3 + 104)], a1, v9);
  *((_QWORD *)v3 + 2) = a2;
  *((_QWORD *)v3 + 3) = a3;
  v11 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_119_0();
  v12 = objc_msgSend(v11, sel_standardUserDefaults);
  v13 = (void *)sub_1B16B983C();
  OUTLINED_FUNCTION_52();
  v14 = objc_msgSend(v12, sel_stringArrayForKey_, v13);

  if (v14)
  {
    v15 = sub_1B16B9B54();

  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v16 = sub_1B142AC18(v15);
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(a1, v9);
  OUTLINED_FUNCTION_7_54();
  *a1 = v16;
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Void __swiftcall BlueprintSectionCollapsibleStateManager.reset()()
{
  _QWORD *v0;
  id v1;
  void *v2;

  OUTLINED_FUNCTION_7_54();
  *v0 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_1B16B983C();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);

}

void sub_1B156E860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 - 144) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v2;
  OUTLINED_FUNCTION_39_13();
}

void sub_1B156E894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = sub_1B16BA328();
  *(_QWORD *)(v5 - 152) = v7;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v8, v9);
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v10, v11);
  BlueprintProviderType.blueprint.getter(v2, v4);
  type metadata accessor for BlueprintItem(0, v3, v1, v12);
  BlueprintItem.identifier.getter();
  Blueprint.section(forItem:)();
}

void sub_1B156E938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_52();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 144) + 8))(v4, v3);
  if (__swift_getEnumTagSinglePayload(v0, 1, v2) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 160) + 32))(v1, v0, v2);
    BlueprintSectionCollapsibleStateManager.state(for:)();
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 168) + 8))(v0, *(_QWORD *)(v5 - 152));
  **(_BYTE **)(v5 - 128) = 1;
  OUTLINED_FUNCTION_47();
}

uint64_t BlueprintSectionCollapsibleStateManager.state(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  uint64_t result;

  v7 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112));
  OUTLINED_FUNCTION_13();
  v8 = *v7;
  sub_1B16B9740();
  sub_1B13FD970(a1, a2, v8);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  *a3 = (a2 & 1) == 0;
  return result;
}

void BlueprintSectionCollapsibleStateManager.toggle(section:)()
{
  OUTLINED_FUNCTION_19_35();
  OUTLINED_FUNCTION_19_35();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_39_13();
}

void sub_1B156EAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = sub_1B16BA328();
  *(_QWORD *)(v13 - 216) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v13 - 208) = v14;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v15, v16);
  *(_QWORD *)(v13 - 168) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v11;
  *(_QWORD *)(v13 - 88) = v12;
  OUTLINED_FUNCTION_38_2();
}

void sub_1B156EB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;

  *(_QWORD *)(v13 - 184) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 176) = a1;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v14, v15);
  *(_QWORD *)(v13 - 192) = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v16, v17);
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v18;
  v19 = (uint64_t *)(v9 + *(_QWORD *)(v11 + 112));
  OUTLINED_FUNCTION_13();
  v20 = *v19;
  OUTLINED_FUNCTION_119_0();
  v21 = BlueprintSection.identifier.getter();
  sub_1B13FD970(v21, v22, v20);
  v24 = v23;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_52();
  v25 = BlueprintSection.identifier.getter();
  v27 = v26;
  OUTLINED_FUNCTION_13();
  if ((v24 & 1) != 0)
  {
    sub_1B13CBED8(v25, v27);
    OUTLINED_FUNCTION_33_16();
    OUTLINED_FUNCTION_52();
  }
  else
  {
    sub_1B14274DC((uint64_t *)(v13 - 128), v25, v27);
    OUTLINED_FUNCTION_33_16();
  }
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_119_0();
  sub_1B148C8A0();
  OUTLINED_FUNCTION_52();
  v29 = (void *)sub_1B16B9B48();
  swift_release();
  v30 = (void *)sub_1B16B983C();
  objc_msgSend(v28, sel_setObject_forKey_, v29, v30);

  BlueprintProviderType.blueprint.getter(v12, *(_QWORD *)(v13 - 160));
  BlueprintSection.identifier.getter();
  Blueprint.subscript.getter();
}

void sub_1B156ED20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t);
  void (*v9)(uint64_t);

  OUTLINED_FUNCTION_52();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 184) + 8))(v4, v2);
  if (__swift_getEnumTagSinglePayload(v3, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v3, *(_QWORD *)(v5 - 208));
  }
  else
  {
    v7 = *(_QWORD *)(v5 - 200);
    v6 = *(_QWORD *)(v5 - 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v3, v1);
    v8 = (void (**)(uint64_t))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
    OUTLINED_FUNCTION_13();
    v9 = *v8;
    if (*v8)
    {
      OUTLINED_FUNCTION_33_16();
      OUTLINED_FUNCTION_32();
      v9(v7);
      sub_1B13B9100((uint64_t)v9);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v1);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v1);
      OUTLINED_FUNCTION_33_16();
    }
  }
  OUTLINED_FUNCTION_47();
}

void BlueprintSectionCollapsibleStateManager.sanitize(diff:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[44];

  v1 = *v0;
  v2 = sub_1B16B7D60();
  v13[28] = *(_QWORD *)(v2 - 8);
  v13[29] = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4, v5);
  v13[13] = (char *)v13 - v6;
  v8 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  v9 = OUTLINED_FUNCTION_21_27();
  v10 = OUTLINED_FUNCTION_21_27();
  v11 = OUTLINED_FUNCTION_72();
  v13[26] = v8;
  v13[27] = v7;
  v12 = OUTLINED_FUNCTION_72();
  v13[39] = v9;
  v13[40] = v10;
  v13[41] = v11;
  v13[42] = v12;
  type metadata accessor for Blueprint();
}

void sub_1B156EEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 240) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 232) = a1;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v14, v15);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for BlueprintSection();
}

void sub_1B156EF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t *v78;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v80;
  void (*v81)(uint64_t *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  *(_QWORD *)(v11 - 256) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v11 - 248) = a1;
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15);
  *(_QWORD *)(v11 - 144) = (char *)&a9 - v16;
  sub_1B140A844(0);
  *(_QWORD *)(v11 - 184) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&a9 - v22;
  sub_1B13ECA5C(0, qword_1ED183090, v24);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&a9 - v27;
  v29 = sub_1B16B7CB8();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29, v31);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  v34 = MEMORY[0x1E0C80A78](v32, v33);
  v36 = (char *)&a9 - v35;
  MEMORY[0x1E0C80A78](v34, v37);
  v39 = (char *)&a9 - v38;
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    *(_QWORD *)(v11 - 152) = v18;
    *(_QWORD *)(v11 - 384) = v9;
    sub_1B16B7CAC();
    *(_QWORD *)(v11 - 376) = v39;
    v40 = v10[3];
    v41 = v10[4];
    *(_QWORD *)(v11 - 352) = v10;
    __swift_project_boxed_opaque_existential_1(v10, v40);
    v42 = *(void (**)(uint64_t, uint64_t))(v41 + 32);
    v43 = v29;
    *(_QWORD *)(v11 - 160) = v42;
    v42(v40, v41);
    v44 = sub_1B16B7C88();
    *(_QWORD *)(v11 - 368) = v30;
    v45 = *(void (**)(uint64_t))(v30 + 8);
    OUTLINED_FUNCTION_53_14((uint64_t)v36);
    *(_QWORD *)(v11 - 192) = v45;
    *(_QWORD *)(v11 - 392) = v43;
    *(_QWORD *)(v11 - 400) = v36;
    if ((v44 & 1) == 0)
    {
      v46 = *(_QWORD *)(v11 - 360);
      (*(void (**)(uint64_t, uint64_t))(v11 - 160))(v40, v41);
      sub_1B16B7C1C();
      v47 = v46;
      v45 = *(void (**)(uint64_t))(v11 - 192);
      OUTLINED_FUNCTION_53_14(v47);
      v44 = *(_QWORD *)(v11 - 376);
      OUTLINED_FUNCTION_53_14(v44);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 368) + 32))(v44, v36, v43);
    }
    v48 = *(_QWORD **)(v11 - 352);
    v49 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v49 + 72));
    OUTLINED_FUNCTION_120_2();
    if (v44)
    {
      v50 = v48[4];
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      v51 = OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 72));
      *(_QWORD *)(v11 - 408) = OUTLINED_FUNCTION_36_13((uint64_t (*)(char *))sub_1B156FAB8, v52, v51);
    }
    else
    {
      *(_QWORD *)(v11 - 408) = MEMORY[0x1E0DEE9D8];
    }
    v53 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 88));
    OUTLINED_FUNCTION_120_2();
    if (v44)
    {
      v54 = v48[4];
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      v55 = OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 88));
      *(_QWORD *)(v11 - 416) = OUTLINED_FUNCTION_36_13((uint64_t (*)(char *))sub_1B156FAB8, v56, v55);
    }
    else
    {
      *(_QWORD *)(v11 - 416) = MEMORY[0x1E0DEE9D8];
    }
    v57 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 56));
    OUTLINED_FUNCTION_120_2();
    if (v44)
    {
      v58 = v48[4];
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      v59 = OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v58 + 56));
      *(_QWORD *)(v11 - 296) = OUTLINED_FUNCTION_36_13((uint64_t (*)(char *))sub_1B156FAB8, v60, v59);
    }
    else
    {
      *(_QWORD *)(v11 - 296) = MEMORY[0x1E0DEE9D8];
    }
    v61 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 64));
    OUTLINED_FUNCTION_120_2();
    if (v44)
    {
      v62 = v48[4];
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      v63 = OUTLINED_FUNCTION_0_109(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 64));
      *(_QWORD *)(v11 - 304) = OUTLINED_FUNCTION_36_13((uint64_t (*)(char *))sub_1B156FAB8, v64, v63);
    }
    else
    {
      *(_QWORD *)(v11 - 304) = MEMORY[0x1E0DEE9D8];
    }
    v65 = v48[3];
    v66 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v65);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 80))(v65, v66);
    v68 = *(_QWORD *)(v67 + 16);
    *(_QWORD *)(v11 - 424) = v67;
    if (v68)
    {
      *(_QWORD *)(v11 - 288) = *(_QWORD *)(v11 - 168) + *(_QWORD *)(**(_QWORD **)(v11 - 168) + 104);
      v69 = *(_QWORD *)(v11 - 152);
      v70 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      *(_QWORD *)(v11 - 344) = v70;
      v71 = v67 + v70;
      *(_QWORD *)(v11 - 176) = *(_QWORD *)(v69 + 72);
      *(_QWORD *)(v11 - 312) = MEMORY[0x1E0DEE9D8];
      v72 = *(_QWORD *)(v11 - 184);
      *(_QWORD *)(v11 - 272) = v28;
      *(_QWORD *)(v11 - 280) = v14;
      sub_1B154FD14(v67 + v70, (uint64_t)v28);
      OUTLINED_FUNCTION_46_11((uint64_t)v28, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v72) != 1)
      {
        *(_QWORD *)(v11 - 160) = v68;
        *(_QWORD *)(v11 - 152) = v71;
        sub_1B156FAD0((uint64_t)v28, (uint64_t)v23);
        BlueprintProviderType.blueprint.getter(*(_QWORD *)(v11 - 224), *(_QWORD *)(v11 - 216));
        v73 = sub_1B16B7D48();
        OUTLINED_FUNCTION_40_14(v73);
      }
    }
    else
    {
      *(_QWORD *)(v11 - 312) = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_46_11((uint64_t)v28, 1);
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_39();
    v74 = *(_QWORD *)(v11 - 400);
    OUTLINED_FUNCTION_32_4();
    OUTLINED_FUNCTION_12_39();
    v75 = *(_QWORD *)(v11 - 360);
    OUTLINED_FUNCTION_32_4();
    OUTLINED_FUNCTION_12_39();
    v76 = (*(uint64_t (**)(char *, uint64_t))(v68 + 48))(v23, v68);
    v77 = (int *)type metadata accessor for Diff();
    v78 = *(uint64_t **)(v11 - 384);
    v78[3] = (uint64_t)v77;
    v78[4] = sub_1B13AD67C(&qword_1ED182F40, (uint64_t (*)(uint64_t))type metadata accessor for Diff, (uint64_t)&protocol conformance descriptor for Diff);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v78);
    sub_1B16B7CAC();
    v80 = *(_QWORD *)(v11 - 368);
    v81 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v80 + 32);
    v82 = v74;
    v83 = *(_QWORD *)(v11 - 392);
    v81(boxed_opaque_existential_0, v82, v83);
    v81((uint64_t *)((char *)boxed_opaque_existential_0 + v77[5]), v75, v83);
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 16))((char *)boxed_opaque_existential_0 + v77[6], *(_QWORD *)(v11 - 376), v83);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v77[8]) = v76;
    OUTLINED_FUNCTION_26_24(v77[9]);
    OUTLINED_FUNCTION_26_24(v77[10]);
    OUTLINED_FUNCTION_26_24(v77[11]);
    OUTLINED_FUNCTION_26_24(v77[12]);
    OUTLINED_FUNCTION_26_24(v77[13]);
    v84 = OUTLINED_FUNCTION_49_0();
    v45(v84);
    OUTLINED_FUNCTION_47();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B156F808()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
}

void sub_1B156F8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v3;
  *(_QWORD *)(v6 - 96) = v4;
  *(_QWORD *)(v6 - 88) = v5;
  type metadata accessor for Blueprint();
}

void sub_1B156F910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1, a2);
  BlueprintProviderType.blueprint.getter(v3, v2);
  Blueprint.subscript.getter(*(_QWORD *)(v4 - 120), a1);
}

void sub_1B156F96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  BlueprintSectionCollapsibleStateManager.state(for:)();
}

uint64_t sub_1B156F98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  return *(unsigned __int8 *)(v3 - 112);
}

void sub_1B156F9C0()
{
  sub_1B16B7D48();
  sub_1B156F808();
}

uint64_t sub_1B156F9E8(char a1)
{
  return a1 & 1;
}

uint64_t *BlueprintSectionCollapsibleStateManager.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  swift_bridgeObjectRelease();
  sub_1B13B9100(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)));
  return v0;
}

uint64_t BlueprintSectionCollapsibleStateManager.__deallocating_deinit()
{
  BlueprintSectionCollapsibleStateManager.deinit();
  return swift_deallocClassInstance();
}

void sub_1B156FA8C()
{
  sub_1B156F808();
}

uint64_t sub_1B156FAA4(char a1)
{
  return a1 & 1;
}

void sub_1B156FAB8()
{
  OUTLINED_FUNCTION_25_27();
}

uint64_t sub_1B156FAC4(char a1)
{
  return a1 & 1;
}

uint64_t sub_1B156FAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B140A844(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B156FB14()
{
  JUMPOUT(0x1B5E1F0E8);
}

uint64_t method lookup function for BlueprintSectionCollapsibleStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintSectionCollapsibleStateManager.__allocating_init(blueprintProvider:collapsedSectionsKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B156FB38(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B156FB84 + 4 * byte_1B16D1745[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B156FBB8 + 4 * asc_1B16D1740[v4]))();
}

uint64_t sub_1B156FBB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B156FBC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B156FBC8);
  return result;
}

uint64_t sub_1B156FBD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B156FBDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B156FBE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B156FBE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for BlueprintSectionCollapsibleStateManager.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BlueprintSectionCollapsibleStateManager.State);
}

uint64_t sub_1B156FC00(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v28;

  v2 = v1;
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_1B16BAA48();
    v8 = *(_QWORD *)(a1 + 16);
    v9 = *(_QWORD *)(a1 + 24);
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B98FC();
    swift_bridgeObjectRelease();
    v10 = OUTLINED_FUNCTION_115();
    v11 = -1 << *(_BYTE *)(v4 + 32);
    v12 = v10 & ~v11;
    OUTLINED_FUNCTION_41_4();
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(v4 + 48);
      v15 = *(_QWORD *)(v14 + 8 * v12);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      v18 = v16 == v8 && v17 == v9;
      if (v18 || (OUTLINED_FUNCTION_30_23(v16, v17) & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_17_7();
        OUTLINED_FUNCTION_31_5();
        if (!v20)
        {
          sub_1B14D4D20();
          v19 = v28;
        }
        v7 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v12);
        sub_1B156FF54(v12);
        *v2 = v28;
        goto LABEL_16;
      }
      v21 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v21;
        OUTLINED_FUNCTION_41_4();
        if ((v22 & 1) == 0)
          break;
        v23 = *(_QWORD *)(v14 + 8 * v12);
        v24 = *(_QWORD *)(v23 + 16);
        v25 = *(_QWORD *)(v23 + 24);
        v26 = v24 == v8 && v25 == v9;
        if (v26 || (OUTLINED_FUNCTION_30_23(v24, v25) & 1) != 0)
          goto LABEL_13;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 < 0)
    v5 = *v2;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  sub_1B16B9740();
  OUTLINED_FUNCTION_32();
  v6 = sub_1B16BA4E4();
  swift_release();
  if ((v6 & 1) == 0)
    goto LABEL_25;
  v7 = sub_1B156FDA0(v5, a1);
LABEL_16:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B156FDA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t result;
  uint64_t v26;

  v3 = v2;
  swift_bridgeObjectRelease();
  sub_1B16BA4B4();
  swift_unknownObjectRetain();
  v5 = sub_1B14D2A84();
  v26 = v5;
  sub_1B16BAA48();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  swift_retain();
  sub_1B16B9740();
  sub_1B16B98FC();
  swift_bridgeObjectRelease();
  v8 = sub_1B16BAA78();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v5 + 48);
    v12 = *(_QWORD *)(v11 + 8 * v10);
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    v15 = v13 == v6 && v14 == v7;
    if (v15 || (sub_1B16BA910(v13, v14, v6, v7, 0) & 1) != 0)
    {
LABEL_14:
      swift_release();
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v10);
      sub_1B156FF54(v10);
      v22 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v21 + 24);
      v24 = v6 == v22 && v7 == v23;
      if (v24 || (sub_1B16BA910(v6, v7, v22, v23, 0) & 1) != 0)
      {
        *v3 = v26;
        return v21;
      }
      __break(1u);
    }
    else
    {
      v16 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v16;
        if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          break;
        v17 = *(_QWORD *)(v11 + 8 * v10);
        v18 = *(_QWORD *)(v17 + 16);
        v19 = *(_QWORD *)(v17 + 24);
        v20 = v18 == v6 && v19 == v7;
        if (v20 || (sub_1B16BA910(v18, v19, v6, v7, 0) & 1) != 0)
          goto LABEL_14;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1B156FF54(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1B16BA454();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1B16BAA48();
        swift_retain();
        sub_1B16B9740();
        sub_1B16B98FC();
        swift_bridgeObjectRelease();
        v10 = sub_1B16BAA78();
        swift_release();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = (_QWORD *)(v14 + 8 * v2);
            v16 = (_QWORD *)(v14 + 8 * v6);
            v17 = v2 != v6 || v15 >= v16 + 1;
            v2 = v6;
            if (v17)
            {
              *v15 = *v16;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

BOOL CardSplitViewPresentation.isSticky.getter()
{
  unsigned __int8 *v0;

  return *v0 > 0xBFu;
}

BOOL static CardSplitViewPresentation.Navigation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CardSplitViewPresentation.Navigation.hash(into:)()
{
  return sub_1B16BAA54();
}

unint64_t sub_1B157018C()
{
  unint64_t result;

  result = qword_1EEF33BC0;
  if (!qword_1EEF33BC0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardSplitViewPresentation.Navigation, &type metadata for CardSplitViewPresentation.Navigation);
    atomic_store(result, (unint64_t *)&qword_1EEF33BC0);
  }
  return result;
}

unint64_t sub_1B15701CC()
{
  unint64_t result;

  result = qword_1EEF33BC8;
  if (!qword_1EEF33BC8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardSplitViewPresentation.Pane, &type metadata for CardSplitViewPresentation.Pane);
    atomic_store(result, (unint64_t *)&qword_1EEF33BC8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CardSplitViewPresentation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x1D)
  {
    if (a2 + 227 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 227) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 228;
    return v5 + 1;
  }
LABEL_17:
  v5 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v5 >= 0x1C)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for CardSplitViewPresentation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 227 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 227) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1C)
    return ((uint64_t (*)(void))((char *)&loc_1B15702EC + 4 * byte_1B16D1855[v4]))();
  *a1 = a2 - 29;
  return ((uint64_t (*)(void))((char *)sub_1B1570320 + 4 * byte_1B16D1850[v4]))();
}

uint64_t sub_1B1570320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1570328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1570330);
  return result;
}

uint64_t sub_1B1570348(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1570350);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_1B1570354(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B157035C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1570368(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

_BYTE *sub_1B1570374(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

void type metadata accessor for CardSplitViewPresentation.Navigation()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t _s5TeaUI25CardSplitViewPresentationO10NavigationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15703E0 + 4 * byte_1B16D185F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1570414 + 4 * byte_1B16D185A[v4]))();
}

uint64_t sub_1B1570414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B157041C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1570424);
  return result;
}

uint64_t sub_1B1570430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1570438);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B157043C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1570444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CardSplitViewPresentation.Pane()
{
  OUTLINED_FUNCTION_11_0();
}

void __swiftcall UIViewController.findSourceView(identifier:)(UIView_optional *__return_ptr retstr, Swift::String identifier)
{
  void *v2;
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  UIView_optional *v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  object = identifier._object;
  countAndFlagsBits = identifier._countAndFlagsBits;
  sub_1B13D5C64();
  sub_1B157062C();
  v5 = v2;
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1B13C06D0(v20, (uint64_t)v22);
    v6 = v23;
    v7 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v8 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 8))(countAndFlagsBits, object, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    if (v8)
      return;
  }
  else
  {
    v21 = 0;
    memset(v20, 0, sizeof(v20));
    sub_1B1570680((uint64_t)v20);
  }
  v9 = objc_msgSend(v5, sel_childViewControllers);
  v10 = sub_1B16B9B54();

  if (v10 >> 62)
    goto LABEL_18;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v11)
  {
    v12 = 4;
    while (1)
    {
      v13 = (v10 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1B5E1DF60](v12 - 4, v10)
          : *(id *)(v10 + 8 * v12);
      v15 = v13;
      v16 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
        break;
      v17._countAndFlagsBits = countAndFlagsBits;
      v17._object = object;
      UIViewController.findSourceView(identifier:)(v14, v17);
      v19 = v18;

      if (v19)
      {
        OUTLINED_FUNCTION_52();
        return;
      }
      ++v12;
      if (v16 == v11)
        goto LABEL_14;
    }
    __break(1u);
LABEL_18:
    sub_1B16B9740();
    v11 = sub_1B16BA76C();
    OUTLINED_FUNCTION_52();
  }
LABEL_14:
  OUTLINED_FUNCTION_52();
}

unint64_t sub_1B157062C()
{
  unint64_t result;

  result = qword_1ED1872E8;
  if (!qword_1ED1872E8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1872E8);
  }
  return result;
}

uint64_t sub_1B1570680(uint64_t a1)
{
  uint64_t v2;

  sub_1B15706BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B15706BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1875B8)
  {
    sub_1B157062C();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1875B8);
  }
}

uint64_t dispatch thunk of TransitionSourceViewProviding.sourceView(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void BackBarButtonItem.__allocating_init(target:action:)(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v4 = OUTLINED_FUNCTION_13_1();
  sub_1B13C0F64();
  v5 = objc_msgSend((id)objc_opt_self(), sel_configurationWithWeight_, 6);
  sub_1B13AAB04(0xD000000000000010, 0x80000001B16EDC90, v5);
  v7 = v6;
  v8 = objc_msgSend(v4, sel_initWithImage_style_target_action_, v6, 0, a1, a2);

  v9 = v8;
  objc_msgSend(v9, sel_setWidth_, 40.0);

  OUTLINED_FUNCTION_31();
}

id BackBarButtonItem.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

id BackBarButtonItem.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BackBarButtonItem.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);

  return v2;
}

id BackBarButtonItem.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_4();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id BackBarButtonItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BackBarButtonItem()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SchemaViewValue()
{
  return &type metadata for SchemaViewValue;
}

uint64_t sub_1B157095C(uint64_t result)
{
  __objc2_class *v1;

  v1 = *(__objc2_class **)result;
  if (*(__objc2_class **)result != _TtC5TeaUI20JSONSchemaValueArray)
  {
    if (v1 == _TtC5TeaUI19JSONSchemaValueBool)
    {
      return result | 0x2000000000000000;
    }
    else if (v1 == _TtC5TeaUI22JSONSchemaValueInteger)
    {
      return result | 0x4000000000000000;
    }
    else if (v1 == _TtC5TeaUI21JSONSchemaValueNumber)
    {
      return result | 0x6000000000000000;
    }
    else if (v1 == _TtC5TeaUI21JSONSchemaValueString)
    {
      return result | 0x8000000000000000;
    }
    else if (v1 == _TtC5TeaUI21JSONSchemaValueObject)
    {
      return result | 0xA000000000000000;
    }
    else
    {
      result = sub_1B16BA724();
      __break(1u);
    }
  }
  return result;
}

void sub_1B1570A4C(_QWORD *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B16BAAE4();
  __asm { BR              X10 }
}

uint64_t sub_1B1570AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4[13];

  *(_QWORD *)(v1 - 40) = v0;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v4[3]);
  v2 = OUTLINED_FUNCTION_120_0();
  type metadata accessor for JSONSchemaValueArray(v2);
  sub_1B1570BEC(&qword_1EEF33BF8, type metadata accessor for JSONSchemaValueArray);
  sub_1B16BA958();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

void sub_1B1570BD4(_QWORD *a1)
{
  uint64_t *v1;

  sub_1B1570A4C(a1, *v1);
}

uint64_t sub_1B1570BEC(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1B5E1F0E8](&unk_1B16C69F4, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PageType<>.pageMarker()()
{
  return sub_1B16B81B0();
}

uint64_t dispatch thunk of PageType.viewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PageType.pageMarker()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

id sub_1B1570C48(uint64_t a1, double a2, double a3)
{
  id v3;
  id result;
  BOOL v8;
  objc_super v9;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for PassthroughView();
  result = objc_msgSendSuper2(&v9, sel_hitTest_withEvent_, a1, a2, a3);
  if (result)
    v8 = result == v3;
  else
    v8 = 0;
  if (v8)
  {

    return 0;
  }
  return result;
}

id PassthroughView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id PassthroughView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id PassthroughView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PassthroughView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id PassthroughView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double PillSize.cornerRadius(for:)(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double v5;

  v5 = 14.0;
  if (*(unsigned __int8 *)(v4 + 32) <= 1u)
    return CGRectGetHeight(*(CGRect *)&a1) * 0.5;
  return v5;
}

double static UIEdgeInsets.pillViewSmall.getter()
{
  if (qword_1EEF2F840 != -1)
    swift_once();
  return *(double *)&xmmword_1EEF33C00;
}

double static UIEdgeInsets.pillViewMedium.getter()
{
  if (qword_1ED17D678 != -1)
    swift_once();
  return *(double *)&xmmword_1ED17D898;
}

double PillSize.edgeInsets.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double PillSize.minHeight.getter()
{
  uint64_t v0;

  return dbl_1B16D1A80[*(char *)(v0 + 32)];
}

double sub_1B1570F1C()
{
  double result;

  result = 4.0;
  xmmword_1EEF33C00 = xmmword_1B16D1A50;
  *(_OWORD *)&qword_1EEF33C10 = xmmword_1B16D1A50;
  return result;
}

double sub_1B1570F34()
{
  double result;

  result = 4.0;
  xmmword_1ED17D898 = xmmword_1B16D1A50;
  *(_OWORD *)&qword_1ED17D8A8 = xmmword_1B16D1A50;
  return result;
}

double sub_1B1570F4C()
{
  double result;

  result = 4.0;
  xmmword_1EEF33C20 = xmmword_1B16D1A50;
  *(_OWORD *)&qword_1EEF33C30 = xmmword_1B16D1A50;
  return result;
}

double static UIEdgeInsets.pillViewLarge.getter()
{
  if (qword_1EEF2F850 != -1)
    swift_once();
  return *(double *)&xmmword_1EEF33C20;
}

uint64_t getEnumTagSinglePayload for PillSize(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B1571034(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1B157103C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PillSize()
{
  return &type metadata for PillSize;
}

BOOL sub_1B1571054()
{
  uint64_t v1;
  uint64_t v2;

  sub_1B16B7D60();
  sub_1B1575B3C();
  sub_1B16B9E48();
  sub_1B16B9EB4();
  return v2 == v1;
}

void BlueprintCollectionViewDragDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_68();
  v0 = OUTLINED_FUNCTION_109_0();
  BlueprintCollectionViewDragDelegate.init(blueprintProvider:blueprintLayoutProvider:)(v0, v1);
  OUTLINED_FUNCTION_31();
}

void BlueprintCollectionViewDragDelegate.collectionView(_:itemsForBeginning:at:)()
{
  void *v0;

  OUTLINED_FUNCTION_28_8();
  v0 = (void *)OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_26_12((uint64_t)v0, sel_deselectItemAtIndexPath_animated_);

  OUTLINED_FUNCTION_30_24();
  OUTLINED_FUNCTION_6_33();
}

void sub_1B157112C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v5, v6);
  sub_1B16B7D0C();
  v7 = a3;
  swift_unknownObjectRetain();
  v8 = a1;
  BlueprintCollectionViewDragDelegate.collectionView(_:itemsForBeginning:at:)();
}

id sub_1B15711BC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  sub_1B13A1BE4(0, (unint64_t *)&qword_1EEF33F00);
  v5 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  return v5;
}

void BlueprintCollectionViewDragDelegate.collectionView(_:itemsForAddingTo:at:point:)()
{
  void *v0;

  OUTLINED_FUNCTION_28_8();
  v0 = (void *)OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_26_12((uint64_t)v0, sel_deselectItemAtIndexPath_animated_);

  OUTLINED_FUNCTION_30_24();
  OUTLINED_FUNCTION_6_33();
}

void sub_1B1571274(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1B1572418(a1, a2, a3, a4, a5, (void (*)(void *))BlueprintCollectionViewDragDelegate.collectionView(_:itemsForAddingTo:at:point:));
}

void BlueprintCollectionViewDragDelegate.collectionView(_:dragPreviewParametersForItemAt:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22_25();
  OUTLINED_FUNCTION_111_2();
  OUTLINED_FUNCTION_16_38();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_54_0();
  v3 = OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_82_8(v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v7, v8);
  v9 = (void *)OUTLINED_FUNCTION_81_9();
  v10 = OUTLINED_FUNCTION_6_12(v0, sel_cellForItemAtIndexPath_);

  if (v10)
  {
    OUTLINED_FUNCTION_75_10();
    OUTLINED_FUNCTION_42_2();
    v11 = OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_67_10(v11);
  }
  OUTLINED_FUNCTION_20_35();
}

id sub_1B1571560(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B15727E0(a1, a2, a3, a4, (uint64_t (*)(id, uint64_t))BlueprintCollectionViewDragDelegate.collectionView(_:dragPreviewParametersForItemAt:));
}

id BlueprintCollectionViewDragDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BlueprintCollectionViewDragDelegate.init()()
{
  OUTLINED_FUNCTION_29_2();
  __break(1u);
}

void sub_1B15715B0()
{
  BlueprintCollectionViewDragDelegate.init()();
}

uint64_t sub_1B15715C0(char *a1)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1);
  (*(void (**)(char *))(*(_QWORD *)(v3[10] - 8) + 8))(&a1[v3[14]]);
  return (*(uint64_t (**)(char *))(*(_QWORD *)(v3[11] - 8) + 8))(&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1)
                                                                                             + 0x78)]);
}

uint64_t sub_1B1571630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_initialIndexPath;
  v2 = sub_1B16B7D60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

void BlueprintCollectionViewDragDelegate2.delegate.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_23_6();
  *v0 = v2;
  v2[4] = v1;
  v2[5] = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x80);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B15716E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_31();
}

void BlueprintCollectionViewDragDelegate2.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  OUTLINED_FUNCTION_0_68();
  OUTLINED_FUNCTION_109_0();
  BlueprintCollectionViewDragDelegate2.init(blueprintProvider:blueprintLayoutProvider:)();
  OUTLINED_FUNCTION_31();
}

uint64_t BlueprintCollectionViewDragDelegate2.registerDiffableDropDelegate(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[40];

  sub_1B13B4DC0(a1, (uint64_t)v5);
  OUTLINED_FUNCTION_49_1();
  v3 = v1 + v2;
  OUTLINED_FUNCTION_13();
  sub_1B157178C((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1B157178C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13E44E0(0, &qword_1EEF33C40, &qword_1EEF33C48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void BlueprintCollectionViewDragDelegate2.targetIndexPathToReorderItem(from:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_3_12();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_16_38();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_16_38();
  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_85_5();
}

void sub_1B15718F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_54_0();
  *(_QWORD *)(v6 - 128) = v5;
  *(_QWORD *)(v6 - 120) = v4;
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v3;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1571924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v5 - 224) += *(_QWORD *)(v2 + 136);
  BlueprintProviderType.blueprint.getter(v4, v3);
  v6 = sub_1B16B7D48();
  OUTLINED_FUNCTION_135_4(v6);
}

void sub_1B1571980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_57_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_79_0(*(_QWORD *)(v4 - 240), v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 232) + 16));
  v5 = OUTLINED_FUNCTION_21_2(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_197(v5, &qword_1EEF33C50);
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_118_7();
    sub_1B14ED8A8();
  }
  *(_QWORD *)(v4 - 144) = 0;
  *(_OWORD *)(v4 - 176) = 0u;
  *(_OWORD *)(v4 - 160) = 0u;
  sub_1B15757C0(v4 - 176, &qword_1EEF33C58, &qword_1EEF33C50);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v4 - 216) + 16))(*(_QWORD *)(v4 - 200), *(_QWORD *)(v4 - 192), *(_QWORD *)(v4 - 208));
  OUTLINED_FUNCTION_47();
}

void BlueprintCollectionViewDragDelegate2.reorderItem(from:to:)()
{
  sub_1B1574A44();
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dragSessionWillBegin:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1571C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  *(_QWORD *)(v12 - 192) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&a9 - v16;
  v18 = OUTLINED_FUNCTION_3_12();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  OUTLINED_FUNCTION_77();
  v23 = v22 - v21;
  if (objc_msgSend(v10, sel_localContext))
  {
    sub_1B16BA3AC();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v12 - 176) = 0u;
    *(_OWORD *)(v12 - 160) = 0u;
  }
  sub_1B14088A0(v12 - 176, v12 - 128, (uint64_t (*)(_QWORD))sub_1B1406008);
  if (*(_QWORD *)(v12 - 104))
  {
    OUTLINED_FUNCTION_143_2();
    if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
    {
      *(_QWORD *)(v12 - 200) = a1;
      OUTLINED_FUNCTION_79_0(v23, *(_QWORD *)(v12 - 88)+ OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_initialIndexPath, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
      v24 = (void *)sub_1B16B7CDC();
      OUTLINED_FUNCTION_14_3(v23, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
      v25 = objc_msgSend(*(id *)(v12 - 184), sel_cellForItemAtIndexPath_, v24);

      if (v25)
      {
        *(_QWORD *)(v12 - 88) = v25;
        v27 = OUTLINED_FUNCTION_5(v26, (unint64_t *)&qword_1ED183830);
        OUTLINED_FUNCTION_197(v27, (unint64_t *)&unk_1EEF33C80);
        v28 = v25;
        v29 = OUTLINED_FUNCTION_3_0();
        *(_QWORD *)(v12 - 184) = v28;
        if ((v29 & 1) != 0)
        {
          OUTLINED_FUNCTION_118_7();
          v30 = *(_QWORD *)(v12 - 104);
          v31 = *(_QWORD *)(v12 - 96);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v12 - 128), v30);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v31 + 8))(0, v30, v31);
          __swift_destroy_boxed_opaque_existential_1(v12 - 128);
        }
        else
        {
          *(_QWORD *)(v12 - 144) = 0;
          *(_OWORD *)(v12 - 176) = 0u;
          *(_OWORD *)(v12 - 160) = 0u;
          sub_1B15757C0(v12 - 176, (unint64_t *)&unk_1EEF32510, (unint64_t *)&unk_1EEF33C80);
        }
        v32 = *(_QWORD *)(v12 - 200);
        v33 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        objc_msgSend(v33, sel_postNotificationName_object_, CFSTR("TUBlueprintDidBeginItemDraggingNotification"), 0);

        OUTLINED_FUNCTION_40_6();
        v35 = v9 + v34;
        OUTLINED_FUNCTION_30();
        v36 = MEMORY[0x1B5E1F2F8](v35);
        if (v36)
        {
          v37 = (void *)v36;
          OUTLINED_FUNCTION_115_6();
          v38 = OUTLINED_FUNCTION_27_4();
          BlueprintProviderType.blueprint.getter(v38, v39);
          (*(void (**)(char *, _QWORD))(*(_QWORD *)(v11 + 120) + 184))(v17, *(_QWORD *)(v11 + 96));

          OUTLINED_FUNCTION_47_1();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 192) + 8))(v17, v32);
        }
        else
        {
          OUTLINED_FUNCTION_47_1();

        }
      }
      else
      {
        OUTLINED_FUNCTION_47_1();
      }
    }
  }
  else
  {
    sub_1B13E0BC4(v12 - 128, (uint64_t (*)(_QWORD))sub_1B1406008);
  }
  OUTLINED_FUNCTION_47();
}

uint64_t type metadata accessor for DragSessionData()
{
  uint64_t result;

  result = qword_1EEF33E10;
  if (!qword_1EEF33E10)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B1571FA0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B15741F0(a1, a2, a3, a4, (void (*)(uint64_t))BlueprintCollectionViewDragDelegate2.collectionView(_:dragSessionWillBegin:));
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dragSessionDidEnd:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_13_5();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1572054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_54_0();
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v8, sel_postNotificationName_object_, CFSTR("TUBlueprintDidEndItemDraggingNotification"), 0);

  OUTLINED_FUNCTION_40_6();
  v10 = v3 + v9;
  OUTLINED_FUNCTION_30();
  v11 = MEMORY[0x1B5E1F2F8](v10);
  if (v11)
  {
    v12 = (void *)v11;
    BlueprintProviderType.blueprint.getter(v4, v2);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 + 120) + 192))(v5, *(_QWORD *)(v6 + 96));

    OUTLINED_FUNCTION_21_2(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  OUTLINED_FUNCTION_47();
}

void sub_1B157213C(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  swift_unknownObjectRetain();
  a1;
  BlueprintCollectionViewDragDelegate2.collectionView(_:dragSessionDidEnd:)();
}

void sub_1B1572178()
{
  void *v0;
  void *v1;

  swift_unknownObjectRelease();
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForBeginning:at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_3_12();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  OUTLINED_FUNCTION_23_3();
  v10 = (void *)sub_1B16B7CDC();
  objc_msgSend(v6, sel_deselectItemAtIndexPath_animated_, v10, 0);

  OUTLINED_FUNCTION_44_4(v0, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  OUTLINED_FUNCTION_143_2();
  v11 = swift_allocObject();
  OUTLINED_FUNCTION_44_4(v11 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_initialIndexPath, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  *(_QWORD *)(v11 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_sourceView) = v6;
  v12 = v6;
  objc_msgSend(v4, sel_setLocalContext_, v11);
  OUTLINED_FUNCTION_47_1();
  sub_1B14ED8A8();
}

void sub_1B15722A4()
{
  OUTLINED_FUNCTION_47();
}

void sub_1B15722B0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v5, v6);
  sub_1B16B7D0C();
  v7 = a3;
  swift_unknownObjectRetain();
  v8 = a1;
  BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForBeginning:at:)();
}

id sub_1B1572344()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  sub_1B13A1BE4(0, (unint64_t *)&qword_1EEF33F00);
  v5 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  return v5;
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForAddingTo:at:point:)()
{
  void *v0;

  OUTLINED_FUNCTION_28_8();
  v0 = (void *)OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_26_12((uint64_t)v0, sel_deselectItemAtIndexPath_animated_);

  OUTLINED_FUNCTION_115_6();
  OUTLINED_FUNCTION_6_33();
}

void sub_1B157240C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1B1572418(a1, a2, a3, a4, a5, (void (*)(void *))BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForAddingTo:at:point:));
}

void sub_1B1572418(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(void *))
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v9 = OUTLINED_FUNCTION_3_12();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_77();
  sub_1B16B7D0C();
  v11 = a3;
  OUTLINED_FUNCTION_127_6();
  v12 = a1;
  a6(a3);
  JUMPOUT(0x1B1572498);
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dragPreviewParametersForItemAt:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22_25();
  OUTLINED_FUNCTION_111_2();
  OUTLINED_FUNCTION_16_38();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_54_0();
  v3 = OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_82_8(v3, v4, v5, v6);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v7, v8);
  v9 = (void *)OUTLINED_FUNCTION_81_9();
  v10 = OUTLINED_FUNCTION_6_12(v0, sel_cellForItemAtIndexPath_);

  if (v10)
  {
    OUTLINED_FUNCTION_75_10();
    OUTLINED_FUNCTION_42_2();
    v11 = OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_67_10(v11);
  }
  OUTLINED_FUNCTION_20_35();
}

id sub_1B15727D4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B15727E0(a1, a2, a3, a4, (uint64_t (*)(id, uint64_t))BlueprintCollectionViewDragDelegate2.collectionView(_:dragPreviewParametersForItemAt:));
}

id sub_1B15727E0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;

  v9 = OUTLINED_FUNCTION_3_12();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  OUTLINED_FUNCTION_23_3();
  sub_1B16B7D0C();
  v12 = a3;
  v13 = a1;
  v14 = (void *)a5(v12, v5);

  OUTLINED_FUNCTION_120(v5, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  return OUTLINED_FUNCTION_23_28(v14);
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_103_3();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_89(v2);
  OUTLINED_FUNCTION_103_3();
  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_85_5();
}

void sub_1B1572960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_71(a1, v14 - 56);
  *(_QWORD *)(v14 - 320) = v15;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_29_23((uint64_t)&a9 - v18);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_89(v21);
  *(_QWORD *)(v14 - 264) = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v22, v23);
  v24 = OUTLINED_FUNCTION_3_12();
  v25 = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v14 - 248) = v24;
  *(_QWORD *)(v14 - 240) = v25;
  MEMORY[0x1E0C80A78](v24, v26);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v27, v28);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v29, v30);
  *(_QWORD *)(v14 - 256) = (char *)&a9 - v31;
  *(_QWORD *)(v14 - 152) = v9;
  *(_QWORD *)(v14 - 144) = v10;
  *(_QWORD *)(v14 - 136) = v11;
  *(_QWORD *)(v14 - 128) = v13;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1572A44(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;

  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8, v9);
  v10 = (char *)v3 + *(_QWORD *)(v4 + 128);
  OUTLINED_FUNCTION_30();
  v11 = (void *)MEMORY[0x1B5E1F2F8](v10);

  if (v11)
  {
    v12 = objc_msgSend(v2, sel_localDragSession);
    if (v12)
    {
      v13 = v12;
      if (objc_msgSend(v12, sel_localContext))
      {
        sub_1B16BA3AC();
        swift_unknownObjectRelease();
      }
      else
      {
        *(_OWORD *)(v7 - 192) = 0u;
        *(_OWORD *)(v7 - 176) = 0u;
      }
      sub_1B14088A0(v7 - 192, v7 - 152, (uint64_t (*)(_QWORD))sub_1B1406008);
      if (*(_QWORD *)(v7 - 128))
      {
        OUTLINED_FUNCTION_143_2();
        if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
        {
          v14 = *(_QWORD *)(v7 - 224);
          if (*(_QWORD *)(v14 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_sourceView) == *(_QWORD *)(v7 - 232))
          {
            *(_QWORD *)(v7 - 232) = v13;
            *(_QWORD *)(v7 - 368) = (char *)v3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x88);
            BlueprintProviderType.blueprint.getter(v6, v5);
            v15 = OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_initialIndexPath;
            *(_QWORD *)(v7 - 352) = v14;
            v16 = v14 + v15;
            v17 = *(void (**)(uint64_t))(*(_QWORD *)(v7 - 240) + 16);
            v18 = *(_QWORD *)(v7 - 256);
            *(_QWORD *)(v7 - 384) = v16;
            *(_QWORD *)(v7 - 376) = v17;
            v17(v18);
            Blueprint.contains(indexPath:)();
          }
          OUTLINED_FUNCTION_118_1();
          swift_release();
        }
        else
        {
          OUTLINED_FUNCTION_118_1();
        }
      }
      else
      {
        OUTLINED_FUNCTION_118_1();
        sub_1B13E0BC4(v7 - 152, (uint64_t (*)(_QWORD))sub_1B1406008);
      }
    }
  }
  OUTLINED_FUNCTION_0_43(objc_allocWithZone(MEMORY[0x1E0DC3608]), sel_initWithDropOperation_);
  OUTLINED_FUNCTION_47();
}

void sub_1B1572C3C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t);

  v7 = OUTLINED_FUNCTION_83_8();
  *(_QWORD *)(v5 - 360) = v8;
  v8(v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_79_0(v1, *(_QWORD *)(v5 - 368), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 264) + 16));
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v5 - 376))(*(_QWORD *)(v5 - 256), *(_QWORD *)(v5 - 384), *(_QWORD *)(v5 - 248));
    sub_1B14ED8A8();
  }
  OUTLINED_FUNCTION_0_43(objc_allocWithZone(MEMORY[0x1E0DC3608]), sel_initWithDropOperation_);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_32_22();
  JUMPOUT(0x1B1572BA4);
}

void sub_1B1572E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v4(v0, v2);
  OUTLINED_FUNCTION_44_4(*(_QWORD *)(v5 - 296), v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 304) + 16));
  OUTLINED_FUNCTION_42_1();
  v7 = OUTLINED_FUNCTION_78_1(v3, v6);
  OUTLINED_FUNCTION_197(v7, &qword_1EEF33C50);
  OUTLINED_FUNCTION_97_9();
  if (OUTLINED_FUNCTION_3_0())
  {
    v8 = OUTLINED_FUNCTION_146_5();
    OUTLINED_FUNCTION_5(v8, &qword_1EEF33CA0);
    v9 = v1;
    v10 = *(_QWORD *)(v5 - 128);
    v11 = *(_QWORD *)(v5 - 120);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 152), v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    v12 = *(_BYTE *)(v5 - 176);
    *(_OWORD *)(v5 - 224) = *(_OWORD *)(v5 - 192);
    *(_BYTE *)(v5 - 208) = v12;
    v13 = *(_QWORD *)(v5 - 256);
    v14 = *(_QWORD *)(v5 - 248);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 376);
    v15(v13, *(_QWORD *)(v5 - 384), v14);
    v16 = *(_QWORD *)(v5 - 344);
    v15(v16, v9, v14);
    sub_1B1629274(v5 - 224, v13, v16);
    OUTLINED_FUNCTION_229();
    OUTLINED_FUNCTION_32_22();
    OUTLINED_FUNCTION_68_11();
    __swift_destroy_boxed_opaque_existential_1(v5 - 152);
    JUMPOUT(0x1B1572BA4);
  }
  OUTLINED_FUNCTION_90_7();
  OUTLINED_FUNCTION_145_0(v17, &qword_1EEF33C58, &qword_1EEF33C50);
  OUTLINED_FUNCTION_123_6(objc_allocWithZone(MEMORY[0x1E0DC3608]), sel_initWithDropOperation_intent_);
  OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_32_22();
  JUMPOUT(0x1B1572FB8);
}

void sub_1B1572FE8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;

  sub_1B14107A8();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    sub_1B16B7D0C();
    v12 = sub_1B16B7D60();
    v13 = 0;
  }
  else
  {
    v12 = sub_1B16B7D60();
    v13 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v11, v13, 1, v12);
  v14 = a3;
  swift_unknownObjectRetain();
  v15 = a1;
  BlueprintCollectionViewDragDelegate2.collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:)();
}

id sub_1B15730A8(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;

  swift_unknownObjectRelease();
  sub_1B13E0BC4(v2, (uint64_t (*)(_QWORD))sub_1B14107A8);
  return a1;
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:performDropWith:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[34];

  OUTLINED_FUNCTION_22_25();
  v8[12] = v0;
  v1 = OUTLINED_FUNCTION_42_2();
  v8[8] = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_89((uint64_t)v8 - v4);
  v5 = OUTLINED_FUNCTION_42_2();
  v6 = OUTLINED_FUNCTION_41();
  v7 = OUTLINED_FUNCTION_41();
  v8[25] = v1;
  v8[26] = v5;
  v8[27] = v6;
  v8[28] = v7;
  OUTLINED_FUNCTION_85_5();
}

void sub_1B15731E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_71(a1, v5 - 88);
  *(_QWORD *)(v5 - 352) = v6;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_89(v9);
  *(_QWORD *)(v5 - 320) = v4;
  *(_QWORD *)(v5 - 200) = v4;
  *(_QWORD *)(v5 - 192) = v2;
  *(_QWORD *)(v5 - 184) = v3;
  *(_QWORD *)(v5 - 176) = v1;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1573224(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  char v47;
  id v48;
  unint64_t v49;
  void (*v50)(uint64_t);
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, _QWORD, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  double v68;
  double v69;
  double MidY;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[144];
  CGRect v80;

  OUTLINED_FUNCTION_71(a1, v6 - 112);
  *(_QWORD *)(v6 - 376) = v11;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_29_23(v14);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_136_0();
  v19 = v17 - v18;
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = &v79[-v24];
  v26 = OUTLINED_FUNCTION_3_12();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v28);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v29, v30);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v31, v32);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v33, v34);
  *(_QWORD *)(v6 - 248) = &v79[-v35];
  v36 = *(_QWORD *)(v4 + 128);
  *(_QWORD *)(v6 - 312) = v2;
  v37 = v2 + v36;
  OUTLINED_FUNCTION_30();
  v38 = MEMORY[0x1B5E1F2F8](v37);
  if (!v38)
    return;
  *(_QWORD *)(v6 - 256) = v38;
  *(_QWORD *)(v6 - 296) = v27;
  *(_QWORD *)(v6 - 288) = v3;
  v39 = OUTLINED_FUNCTION_101_2(v38, sel_items);
  sub_1B1573A2C();
  OUTLINED_FUNCTION_27_4();
  v40 = sub_1B16B9B54();

  if (!(v40 >> 62))
  {
    if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_26:
    OUTLINED_FUNCTION_77_7();
    OUTLINED_FUNCTION_101_0();
    return;
  }
  sub_1B16B9740();
  v77 = sub_1B16BA76C();
  OUTLINED_FUNCTION_101_0();
  if (!v77)
    goto LABEL_26;
LABEL_4:
  sub_1B13C6B9C(0, (v40 & 0xC000000000000001) == 0, v40);
  if ((v40 & 0xC000000000000001) != 0)
  {
    v41 = MEMORY[0x1B5E1DF60](0, v40);
  }
  else
  {
    v41 = *(_QWORD *)(v40 + 32);
    swift_unknownObjectRetain();
  }
  OUTLINED_FUNCTION_101_0();
  v42 = *(void **)(v6 - 288);
  v43 = objc_msgSend(v42, sel_destinationIndexPath);
  if (!v43)
  {
    OUTLINED_FUNCTION_161((uint64_t)v25, 1);
    goto LABEL_15;
  }
  v44 = v43;
  sub_1B16B7D0C();

  v45 = *(void (**)(uint64_t))(*(_QWORD *)(v6 - 296) + 32);
  v46 = OUTLINED_FUNCTION_126_3();
  v45(v46);
  OUTLINED_FUNCTION_161((uint64_t)v25, 0);
  OUTLINED_FUNCTION_18_4((uint64_t)v25, 1, v26);
  if (v47)
  {
LABEL_15:
    OUTLINED_FUNCTION_229();
    OUTLINED_FUNCTION_77_7();
    v55 = (uint64_t)v25;
LABEL_31:
    sub_1B13E0BC4(v55, (uint64_t (*)(_QWORD))sub_1B14107A8);
    return;
  }
  ((void (*)(_QWORD, _BYTE *, uint64_t))v45)(*(_QWORD *)(v6 - 248), v25, v26);
  v48 = objc_msgSend(v42, sel_items);
  v49 = sub_1B16B9B54();

  if (!(v49 >> 62))
  {
    if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_29:
    OUTLINED_FUNCTION_20_0();
    v57 = *(_QWORD *)(v6 - 272);
    OUTLINED_FUNCTION_161(v57, 1);
    v53 = *(_QWORD *)(v6 - 296);
LABEL_30:
    OUTLINED_FUNCTION_229();
    OUTLINED_FUNCTION_77_7();
    OUTLINED_FUNCTION_14_3(*(_QWORD *)(v6 - 248), *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
    v55 = v57;
    goto LABEL_31;
  }
  sub_1B16B9740();
  v78 = sub_1B16BA76C();
  OUTLINED_FUNCTION_20_0();
  if (!v78)
    goto LABEL_29;
LABEL_10:
  v50 = v45;
  sub_1B13C6B9C(0, (v49 & 0xC000000000000001) == 0, v49);
  if ((v49 & 0xC000000000000001) != 0)
  {
    v51 = (void *)MEMORY[0x1B5E1DF60](0, v49);
  }
  else
  {
    v51 = *(void **)(v49 + 32);
    swift_unknownObjectRetain();
  }
  OUTLINED_FUNCTION_20_0();
  v52 = objc_msgSend(v51, sel_sourceIndexPath);
  swift_unknownObjectRelease();
  v53 = *(_QWORD *)(v6 - 296);
  if (v52)
  {
    sub_1B16B7D0C();

    v54 = 0;
  }
  else
  {
    v54 = 1;
  }
  OUTLINED_FUNCTION_161(v19, v54);
  v56 = v19;
  v57 = *(_QWORD *)(v6 - 272);
  sub_1B14088A0(v56, v57, (uint64_t (*)(_QWORD))sub_1B14107A8);
  OUTLINED_FUNCTION_18_4(v57, 1, v26);
  if (v47)
    goto LABEL_30;
  *(_QWORD *)(v6 - 400) = v41;
  ((void (*)(_QWORD, uint64_t, uint64_t))v50)(*(_QWORD *)(v6 - 280), v57, v26);
  *(_QWORD *)(v6 - 272) = swift_allocBox();
  v58 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v53 + 16);
  v60 = v59;
  v61 = v58(v59, *(_QWORD *)(v6 - 248), v26);
  v62 = *(_QWORD *)(v6 - 304);
  v63 = OUTLINED_FUNCTION_101_2(v61, sel_collectionViewLayout);
  v64 = (void *)sub_1B16B983C();
  v65 = (void *)sub_1B16B7CDC();
  v66 = objc_msgSend(v63, sel_layoutAttributesForSupplementaryViewOfKind_atIndexPath_, v64, v65);

  v67 = *(void **)(v6 - 288);
  if (!v66)
    goto LABEL_24;
  objc_msgSend(v66, sel_frame);
  OUTLINED_FUNCTION_13_2();

  objc_msgSend(objc_msgSend(v67, sel_session), sel_locationInView_, v62);
  v69 = v68;
  swift_unknownObjectRelease();
  v80.origin.x = v7;
  v80.origin.y = v8;
  v80.size.width = v9;
  v80.size.height = v10;
  MidY = CGRectGetMidY(v80);
  v58(*(_QWORD *)(v6 - 392), *(_QWORD *)(v6 - 248), v26);
  if (v69 >= MidY)
  {
    OUTLINED_FUNCTION_52_15();
LABEL_24:
    BlueprintProviderType.blueprint.getter(v1, v5);
    v76 = OUTLINED_FUNCTION_89_1();
    Blueprint.subscript.getter(v76, *(_QWORD *)(v6 - 368));
  }
  v71 = sub_1B16B7D48();
  OUTLINED_FUNCTION_52_15();
  if (v71 <= 0)
    goto LABEL_24;
  v72 = sub_1B16B7D48();
  v73 = v72 - 1;
  if (!__OFSUB__(v72, 1))
  {
    v74 = OUTLINED_FUNCTION_6_12(*(id *)(v6 - 304), sel_numberOfItemsInSection_);
    v75 = *(_QWORD *)(v6 - 264);
    MEMORY[0x1B5E1B6BC](v74, v73);
    OUTLINED_FUNCTION_79_0(v60, v75, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 296) + 40));
    goto LABEL_24;
  }
  __break(1u);
}

unint64_t sub_1B1573A2C()
{
  unint64_t result;

  result = qword_1EEF33CA8;
  if (!qword_1EEF33CA8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF33CA8);
  }
  return result;
}

void sub_1B1573A80(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[10];
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v26 = a6;
  v27 = a5;
  v25 = a4;
  v6 = *MEMORY[0x1E0DEEDD8] & *a1;
  v23 = type metadata accessor for BlueprintViewAction.Action(0);
  MEMORY[0x1E0C80A78](v23, v7);
  v24 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 104);
  v10 = *(_QWORD *)(v6 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for BlueprintItem(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v30 = *(_QWORD *)(v14 - 8);
  v31 = v14;
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v28 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v18);
  v29 = (char *)v22 - v19;
  v20 = swift_getAssociatedTypeWitness();
  v22[8] = v9;
  v22[6] = v10;
  v21 = swift_getAssociatedConformanceWitness();
  v32 = v20;
  v33 = AssociatedTypeWitness;
  v22[4] = AssociatedTypeWitness;
  v34 = v21;
  v35 = AssociatedConformanceWitness;
  v22[3] = AssociatedConformanceWitness;
  type metadata accessor for Blueprint();
}

void sub_1B1573C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v12 - 256) = a1;
  *(_QWORD *)(v12 - 264) = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v12 - 328) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v12 - 360) = v14;
  MEMORY[0x1E0C80A78](v13, v15);
  *(_QWORD *)(v12 - 280) = (char *)&a9 - v16;
  v17 = sub_1B16B7D60();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v12 - 224) = swift_projectBox();
  v22 = v9 + *(_QWORD *)(v10 + 152);
  swift_beginAccess();
  sub_1B15757E8(v22, v12 - 192);
  v23 = *(_QWORD *)(v12 - 168);
  *(_QWORD *)(v12 - 344) = v21;
  if (v23)
  {
    sub_1B13C06D0((__int128 *)(v12 - 192), v12 - 128);
    v24 = v17;
    v25 = *(_QWORD *)(v12 - 104);
    v26 = *(_QWORD *)(v12 - 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v12 - 128), v25);
    v27 = *(_QWORD *)(v12 - 224);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v27, v24);
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v26 + 8))(v11, v21, v25, v26);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v24);
    __swift_destroy_boxed_opaque_existential_1(v12 - 128);
  }
  else
  {
    sub_1B15757C0(v12 - 192, &qword_1EEF33C40, &qword_1EEF33C48);
  }
  BlueprintProviderType.blueprint.getter(*(_QWORD *)(v12 - 352), *(_QWORD *)(v12 - 336));
  Blueprint.subscript.getter();
}

uint64_t sub_1B1573E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;

  *(_QWORD *)(v12 - 376) = type metadata accessor for BlueprintViewActionRequest(0, *(_QWORD *)(v12 - 368), *(_QWORD *)(v12 - 376), a4);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v12 - 240) + 16))(*(_QWORD *)(v12 - 272), v4, *(_QWORD *)(v12 - 232));
  sub_1B1505AD0();
  v14 = v10;
  v15 = *(_QWORD *)(v12 - 312);
  v16 = v15 + *(int *)(v13 + 48);
  *(_QWORD *)(v12 - 384) = v11;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v17(v15, v14, v5);
  *(_QWORD *)(v12 - 368) = v17;
  *(_QWORD *)(v12 - 392) = v5;
  v18 = *(_QWORD *)(v12 - 224);
  swift_beginAccess();
  v17(v16, v18, v5);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v12 - 192) = 4;
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = v7;
  v21 = *(_QWORD *)(v12 - 264);
  v22 = *(_QWORD *)(v12 - 328);
  v23 = *(_QWORD *)(v12 - 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v22, v20, v23);
  v24 = (*(unsigned __int8 *)(v21 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = v6;
  *((_QWORD *)v25 + 3) = v9[11];
  v26 = v9[12];
  *((_QWORD *)v25 + 4) = v26;
  *((_QWORD *)v25 + 5) = v8;
  *((_QWORD *)v25 + 6) = v9[14];
  v27 = v9[15];
  *((_QWORD *)v25 + 7) = v27;
  *((_QWORD *)v25 + 8) = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(&v25[v24], v22, v23);
  BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)(*(_QWORD *)(v12 - 272), v15, (char *)(v12 - 192), 0, (uint64_t)sub_1B1575A48, (uint64_t)v25);
  v29 = v28;
  v30 = *(_QWORD *)(v12 - 280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 208))(v30, v26, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 72))(v30, v29, v26, v27);
  v31 = objc_msgSend(*(id *)(v12 - 296), sel_dragItem);
  v32 = *(_QWORD *)(v12 - 224);
  swift_beginAccess();
  v33 = *(_QWORD *)(v12 - 344);
  v34 = *(_QWORD *)(v12 - 392);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 - 368))(v33, v32, v34);
  v35 = (void *)sub_1B16B7CDC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 384) + 8))(v33, v34);
  v36 = objc_msgSend(*(id *)(v12 - 288), sel_dropItem_toItemAtIndexPath_, v31, v35);
  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v12 - 240) + 8))(*(_QWORD *)(v12 - 248), *(_QWORD *)(v12 - 232));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 264) + 8))(v30, v23);
}

void sub_1B157412C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  char *v14;
  void *v15;

  v11 = a2 + 16;
  swift_beginAccess();
  v12 = (_QWORD *)MEMORY[0x1B5E1F2F8](v11);
  if (v12)
  {
    v13 = v12;
    v14 = (char *)v12 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v12) + 0x80);
    swift_beginAccess();
    v15 = (void *)MEMORY[0x1B5E1F2F8](v14);

    if (v15)
    {
      (*(void (**)(uint64_t, uint64_t))(a9 + 216))(a3, a6);

    }
  }
}

void sub_1B15741E4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B15741F0(a1, a2, a3, a4, (void (*)(uint64_t))BlueprintCollectionViewDragDelegate2.collectionView(_:performDropWith:));
}

void sub_1B15741F0(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v7;
  uint64_t v8;

  v7 = a3;
  OUTLINED_FUNCTION_127_6();
  a1;
  v8 = OUTLINED_FUNCTION_27_4();
  a5(v8);
  JUMPOUT(0x1B1574230);
}

void BlueprintCollectionViewDragDelegate2.init()()
{
  OUTLINED_FUNCTION_29_2();
  __break(1u);
}

void sub_1B1574278()
{
  BlueprintCollectionViewDragDelegate2.init()();
}

void sub_1B1574288()
{
  char *v0;

  OUTLINED_FUNCTION_76_7();
  OUTLINED_FUNCTION_18_33();
  OUTLINED_FUNCTION_19_36();
  v0 = OUTLINED_FUNCTION_93_5();
  sub_1B15757C0((uint64_t)v0, &qword_1EEF33C40, &qword_1EEF33C48);
  OUTLINED_FUNCTION_31();
}

void sub_1B15742E8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  OUTLINED_FUNCTION_89_8(*a1);
  OUTLINED_FUNCTION_30();
  *a2 = MEMORY[0x1B5E1F2F8](v2);
  OUTLINED_FUNCTION_48();
}

void sub_1B157432C(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_89_8(*a2);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_48();
}

void _s5TeaUI36BlueprintCollectionViewDragDelegate2C8delegateq0_Sgvg_0()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void BlueprintCollectionViewDragDelegate3.delegate.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_23_6();
  *v0 = v2;
  v2[4] = v1;
  v2[5] = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x80);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B1574410(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_31();
}

void BlueprintCollectionViewDragDelegate3.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  OUTLINED_FUNCTION_0_68();
  OUTLINED_FUNCTION_109_0();
  BlueprintCollectionViewDragDelegate3.init(blueprintProvider:blueprintLayoutProvider:)();
  OUTLINED_FUNCTION_31();
}

void BlueprintCollectionViewDragDelegate3.init(blueprintProvider:blueprintLayoutProvider:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;

  v5 = (objc_class *)OUTLINED_FUNCTION_62_9();
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_47_18();
  OUTLINED_FUNCTION_49_1();
  v8 = (uint64_t)v2 + v7;
  v9 = OUTLINED_FUNCTION_3_12();
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *(_QWORD *)((char *)v2 + *(_QWORD *)((*v6 & *v2) + 0xA0)) = 0;
  OUTLINED_FUNCTION_8_50();
  v10 = OUTLINED_FUNCTION_9_52();
  v17.receiver = v2;
  v17.super_class = v5;
  OUTLINED_FUNCTION_7_1(v10, sel_init, v11, v12, v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_95_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_120(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_18_1();
}

Swift::Void __swiftcall BlueprintCollectionViewDragDelegate3.register(in:)(UICollectionView *in)
{
  void *v1;
  id v3;
  id v4;
  _QWORD v5[4];

  v5[3] = OUTLINED_FUNCTION_4();
  v5[0] = v1;
  objc_allocWithZone(MEMORY[0x1E0DC39C8]);
  v3 = v1;
  v4 = sub_1B151BDE0(v5, (uint64_t)sel_handleLongPressWithGestureRecognizer_);
  -[UICollectionView addGestureRecognizer:](in, sel_addGestureRecognizer_, v4);

}

void BlueprintCollectionViewDragDelegate3.targetIndexPathToReorderItem(from:to:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_27_28();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_27_28();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_85_5();
}

void sub_1B1574664(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 - 272) = a1;
  *(_QWORD *)(v5 - 280) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_54_0();
  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 144) = v2;
  *(_QWORD *)(v5 - 136) = v3;
  *(_QWORD *)(v5 - 128) = v1;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B157469C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  char v36;
  uint64_t v37;

  OUTLINED_FUNCTION_71(a1, v10 - 32);
  *(_QWORD *)(v10 - 296) = v11;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v12, v13);
  sub_1B14107A8();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v19 = OUTLINED_FUNCTION_3_12();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v21);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_1();
  v24 = MEMORY[0x1E0C80A78](v22, v23);
  v26 = (char *)&a9 - v25;
  v28 = MEMORY[0x1E0C80A78](v24, v27);
  v30 = (char *)&a9 - v29;
  v31 = v28;
  OUTLINED_FUNCTION_30();
  v32 = OUTLINED_FUNCTION_27_4();
  sub_1B14107FC(v32, v33);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v35 = *(_QWORD *)(v10 - 208);
  *(_QWORD *)(v10 - 304) = v34;
  v34(v26, v35, v31);
  OUTLINED_FUNCTION_18_4(v18, 1, v31);
  *(_QWORD *)(v10 - 240) = v30;
  *(_QWORD *)(v10 - 232) = v31;
  *(_QWORD *)(v10 - 312) = v20;
  if (v36)
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v30, v26, v31);
    sub_1B13E0BC4(v18, (uint64_t (*)(_QWORD))sub_1B14107A8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v31);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v30, v18, v31);
  }
  BlueprintProviderType.blueprint.getter(v9, *(_QWORD *)(v10 - 264));
  v37 = OUTLINED_FUNCTION_98_8();
  OUTLINED_FUNCTION_135_4(v37);
}

void sub_1B1574840()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t (*v6)(uint64_t, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_42_1();
  OUTLINED_FUNCTION_57_0(v2, v5);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 256) + 16))(*(_QWORD *)(v4 - 248), v1, v3);
  OUTLINED_FUNCTION_42_1();
  v7 = OUTLINED_FUNCTION_78_1(v1, v6);
  OUTLINED_FUNCTION_197(v7, &qword_1EEF33C50);
  OUTLINED_FUNCTION_97_9();
  if (OUTLINED_FUNCTION_3_0())
  {
    OUTLINED_FUNCTION_146_5();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 128));
    OUTLINED_FUNCTION_32_4();
    v9 = *(_QWORD *)(v4 - 192);
    v8 = *(_QWORD *)(v4 - 184);
    if (*(_BYTE *)(v4 - 176) == 1)
    {
      if (v9 | v8)
      {
        if (!(v9 ^ 1 | v8))
        {
          OUTLINED_FUNCTION_42_1();
          v11 = *(_QWORD *)(v4 - 240);
LABEL_14:
          OUTLINED_FUNCTION_57_0(v11, v10);
LABEL_17:
          OUTLINED_FUNCTION_117_7();
LABEL_22:
          __swift_destroy_boxed_opaque_existential_1(v4 - 152);
          goto LABEL_23;
        }
        v21 = OUTLINED_FUNCTION_98_8();
        v22 = *(_QWORD *)(v4 - 240);
        if (v21 == sub_1B16B7D48())
        {
          OUTLINED_FUNCTION_42_1();
          v11 = v22;
          goto LABEL_14;
        }
        v19 = *(_QWORD *)(v4 - 216);
        v20 = v22;
      }
      else
      {
        v19 = *(_QWORD *)(v4 - 216);
        v20 = *(_QWORD *)(v4 - 240);
      }
      v24 = *(_QWORD *)(v4 - 232);
LABEL_21:
      v0(v19, v20, v24);
      goto LABEL_22;
    }
    v13 = sub_1B16B7D48();
    v14 = OUTLINED_FUNCTION_98_8();
    v15 = *(void (**)(_QWORD, uint64_t))(v4 - 320);
    v16 = *(_QWORD *)(v4 - 232);
    OUTLINED_FUNCTION_117_7();
    if (v13 == v14)
    {
      v17 = sub_1B16B7D3C();
      if (v17 < v9)
      {
        OUTLINED_FUNCTION_40_15();
LABEL_16:
        v15(*(_QWORD *)(v4 - 240), v16);
        goto LABEL_17;
      }
      v23 = v17;
      OUTLINED_FUNCTION_40_15();
      if (v8 < v23)
        goto LABEL_16;
    }
    else
    {
      OUTLINED_FUNCTION_42_1();
      OUTLINED_FUNCTION_95_0((uint64_t)v15, v18);
    }
    v19 = *(_QWORD *)(v4 - 216);
    v20 = *(_QWORD *)(v4 - 240);
    v24 = v16;
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_90_7();
  OUTLINED_FUNCTION_145_0(v12, &qword_1EEF33C58, &qword_1EEF33C50);
  v0(*(_QWORD *)(v4 - 216), *(_QWORD *)(v4 - 240), *(_QWORD *)(v4 - 232));
LABEL_23:
  OUTLINED_FUNCTION_47();
}

void BlueprintCollectionViewDragDelegate3.reorderItem(from:to:)()
{
  sub_1B1574A44();
}

void sub_1B1574A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_6();
  type metadata accessor for BlueprintViewAction.Action(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_2();
  v2 = OUTLINED_FUNCTION_72_7();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for BlueprintItem(0, v2, AssociatedConformanceWitness, v4);
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_47_0();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_72_7();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1574B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 - 176) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  *(_QWORD *)(v4 - 224) = v2;
  BlueprintProviderType.blueprint.getter(v3, v1);
  *(_QWORD *)(v4 - 168) = a1;
  Blueprint.subscript.getter();
}

void sub_1B1574BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;

  type metadata accessor for BlueprintViewActionRequest(0, v7, v4, a4);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 128) + 16);
  v10 = *(_QWORD *)(v8 - 216);
  *(_QWORD *)(v8 - 208) = v6;
  *(_QWORD *)(v8 - 200) = v5;
  v9(v10, v6, v5);
  sub_1B1505AD0();
  v12 = *(_QWORD *)(v8 - 184);
  v13 = v12 + *(int *)(v11 + 48);
  v14 = OUTLINED_FUNCTION_3_12();
  v15 = *(void (**)(uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16 = OUTLINED_FUNCTION_126_3();
  v15(v16);
  ((void (*)(uint64_t, _QWORD, uint64_t))v15)(v13, *(_QWORD *)(v8 - 152), v14);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v8 - 112) = *(_DWORD *)(v8 - 140);
  BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)(v10, v12, (char *)(v8 - 112), 0, *(_QWORD *)(v8 - 136), 0);
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1574CBC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (a1)
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 - 224) + 120) + 72))(v2, v1, *(_QWORD *)(*(_QWORD *)(v3 - 224) + 96));
    swift_release();

  }
  else
  {
    swift_release();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 128) + 8))(*(_QWORD *)(v3 - 208), *(_QWORD *)(v3 - 200));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 176) + 8))(v2, *(_QWORD *)(v3 - 168));
  OUTLINED_FUNCTION_47();
}

void sub_1B1574D24()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_27_28();
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_27_28();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_85_5();
}

void sub_1B1574E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 256) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 248) = a1;
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_89(v8);
  *(_QWORD *)(v5 - 144) = v4;
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v1;
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1574E44(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  double v38;
  double v39;
  double MidX;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  void *v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t);
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t ObjectType;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[112];
  CGRect v65;

  *(_QWORD *)(v4 - 272) = a1;
  *(_QWORD *)(v4 - 280) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_9();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_29_23(v7);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_136_0();
  v12 = v10 - v11;
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = &v64[-v16];
  MEMORY[0x1E0C80A78](v15, v18);
  OUTLINED_FUNCTION_190();
  *(_QWORD *)(v4 - 216) = v19;
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = &v64[-v22];
  v24 = OUTLINED_FUNCTION_3_12();
  *(_QWORD *)(v4 - 200) = v24;
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v26);
  OUTLINED_FUNCTION_136_0();
  v29 = v27 - v28;
  v32 = MEMORY[0x1E0C80A78](v30, v31);
  *(_QWORD *)(v4 - 224) = &v64[-v33];
  v34 = OUTLINED_FUNCTION_101_2(v32, sel_view);
  if (v34)
  {
    v35 = v34;
    objc_opt_self();
    v36 = swift_dynamicCastObjCClass();
    if (!v36)
      goto LABEL_18;
    *(_QWORD *)(v4 - 304) = v25;
    v37 = (void *)v36;
    objc_msgSend(v1, sel_locationInView_, v36);
    v39 = v38;
    *(_QWORD *)(v4 - 296) = v37;
    objc_msgSend(v37, sel_bounds);
    MidX = CGRectGetMidX(v65);
    v42 = (char *)OUTLINED_FUNCTION_101_2(v41, sel_state);
    if ((unint64_t)(v42 - 3) >= 2)
    {
      v43 = *(_QWORD *)(v4 - 200);
      if (v42 != (char *)2)
      {
        if (v42 == (char *)1)
        {
          v44 = objc_msgSend(*(id *)(v4 - 296), sel_indexPathForItemAtPoint_, MidX, v39);
          *(_QWORD *)(v4 - 312) = v35;
          if (v44)
          {
            v45 = v44;
            sub_1B16B7D0C();

            v46 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 304) + 32);
            v46(v23, v29, v43);
            OUTLINED_FUNCTION_40((uint64_t)v23, 0);
            OUTLINED_FUNCTION_18_4((uint64_t)v23, 1, v43);
            if (!v47)
            {
              v46(*(_BYTE **)(v4 - 224), (uint64_t)v23, v43);
              BlueprintProviderType.blueprint.getter(v3, v2);
              v48 = OUTLINED_FUNCTION_89_1();
              Blueprint.subscript.getter(v48, *(_QWORD *)(v4 - 272));
            }
          }
          else
          {
            OUTLINED_FUNCTION_40((uint64_t)v23, 1);
          }
          OUTLINED_FUNCTION_28_26();
          v52 = (uint64_t)v23;
          goto LABEL_21;
        }
LABEL_18:

        return;
      }
      v53 = *(_QWORD *)(v4 - 208);
      OUTLINED_FUNCTION_49_1();
      v55 = v53 + v54;
      OUTLINED_FUNCTION_30();
      sub_1B14107FC(v55, (uint64_t)v17);
      OUTLINED_FUNCTION_18_4((uint64_t)v17, 1, v43);
      if (!v47)
      {
        sub_1B13E0BC4((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1B14107A8);
        OUTLINED_FUNCTION_119_5();
        objc_msgSend(*(id *)(v4 - 296), sel_updateInteractiveMovementTargetPosition_, MidX, v39 - *(double *)(v53 + v63));
        goto LABEL_18;
      }

      v52 = (uint64_t)v17;
LABEL_21:
      sub_1B13E0BC4(v52, (uint64_t (*)(_QWORD))sub_1B14107A8);
      return;
    }
    OUTLINED_FUNCTION_49_1();
    v51 = v50 + v49;
    OUTLINED_FUNCTION_30();
    sub_1B14107FC(v51, v12);
    OUTLINED_FUNCTION_18_4(v12, 1, *(_QWORD *)(v4 - 200));
    if (v47)
    {

      v52 = v12;
      goto LABEL_21;
    }
    sub_1B13E0BC4(v12, (uint64_t (*)(_QWORD))sub_1B14107A8);
    v56 = *(void **)(v4 - 296);
    objc_msgSend(v56, sel_endInteractiveMovement);
    v57 = objc_msgSend(v56, sel_collectionViewLayout);
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional((uint64_t)v57))
    {
      v60 = v59;
      ObjectType = swift_getObjectType();
      v62 = *(_QWORD *)(v4 - 216);
      OUTLINED_FUNCTION_40(v62, 1);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v62, ObjectType, v60);
    }

  }
}

void sub_1B15754FC(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  a1;
  sub_1B1574D24();
}

void sub_1B1575534()
{
  void *v0;
  void *v1;

}

void BlueprintCollectionViewDragDelegate3.init()()
{
  OUTLINED_FUNCTION_29_2();
  __break(1u);
}

void sub_1B1575574()
{
  BlueprintCollectionViewDragDelegate3.init()();
}

void sub_1B1575584()
{
  char *v0;

  OUTLINED_FUNCTION_76_7();
  OUTLINED_FUNCTION_18_33();
  OUTLINED_FUNCTION_19_36();
  v0 = OUTLINED_FUNCTION_93_5();
  sub_1B13E0BC4((uint64_t)v0, (uint64_t (*)(_QWORD))sub_1B14107A8);
  OUTLINED_FUNCTION_31();
}

void sub_1B15755D4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1B15742E8(a1, a2);
}

void sub_1B15755E8(uint64_t a1, uint64_t *a2)
{
  sub_1B157432C(a1, a2);
}

void sub_1B1575604(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1B15742E8(a1, a2);
}

void sub_1B1575618(uint64_t a1, uint64_t *a2)
{
  sub_1B157432C(a1, a2);
}

uint64_t method lookup function for BlueprintCollectionViewDragDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCollectionViewDragDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t OUTLINED_FUNCTION_143_2()
{
  return type metadata accessor for DragSessionData();
}

uint64_t sub_1B1575650()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B16B7D60();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BlueprintCollectionViewDragDelegate2()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCollectionViewDragDelegate2.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_1B15756DC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_1B14107A8();
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

void type metadata accessor for BlueprintCollectionViewDragDelegate3()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t method lookup function for BlueprintCollectionViewDragDelegate3()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCollectionViewDragDelegate3.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

void sub_1B15757C0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v3;

  sub_1B13E44E0(0, a2, a3);
  OUTLINED_FUNCTION_20_1(v3);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15757E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13E44E0(0, &qword_1EEF33C40, &qword_1EEF33C48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B1575844()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B1575868()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_83_8();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_83_8();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1575900(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v2 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v2 + 40))
    __swift_destroy_boxed_opaque_existential_1(v1 + v2 + 16);
  type metadata accessor for BlueprintSection();
}

void sub_1B1575964()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B1575974()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B1575984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B16B848C();
  OUTLINED_FUNCTION_56_0(v2);
  type metadata accessor for BlueprintItem(255, v0, v1, v3);
  OUTLINED_FUNCTION_20_2();
}

uint64_t sub_1B15759C8()
{
  uint64_t v0;
  uint64_t v1;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v0);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v0);
  v1 = sub_1B16B875C();
  OUTLINED_FUNCTION_56_0(v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1B1575A48()
{
  OUTLINED_FUNCTION_69_9();
  OUTLINED_FUNCTION_69_9();
  OUTLINED_FUNCTION_83_8();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_83_8();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1575AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_1B157412C(v5, *(_QWORD *)(v2 + 64), v2 + ((v7 + 72) & ~v7), v1, v6, v9, v3, v8, v4);
}

unint64_t sub_1B1575B3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF33F08[0];
  if (!qword_1EEF33F08[0])
  {
    v1 = sub_1B16B7D60();
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB1690], v1);
    atomic_store(result, qword_1EEF33F08);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_118_7()
{
  uint64_t v0;

  return sub_1B13C06D0((__int128 *)(v0 - 176), v0 - 128);
}

uint64_t OUTLINED_FUNCTION_120_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B13C06D0((__int128 *)(v0 + 32), v1 - 176);
}

id OUTLINED_FUNCTION_123_6(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 3, 0);
}

uint64_t OUTLINED_FUNCTION_124_5()
{
  return sub_1B16B7D48();
}

uint64_t OUTLINED_FUNCTION_126_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_127_6()
{
  return swift_unknownObjectRetain();
}

id OUTLINED_FUNCTION_130_7(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_131_8()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(*(_QWORD *)(v2 - 248), v1);
}

void OUTLINED_FUNCTION_135_4(uint64_t a1)
{
  uint64_t v1;

  Blueprint.subscript.getter(a1, v1);
}

void OUTLINED_FUNCTION_145_0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v3;

  sub_1B15757C0(v3 - 192, a2, a3);
}

uint64_t OUTLINED_FUNCTION_146_5()
{
  uint64_t v0;

  return sub_1B13C06D0((__int128 *)(v0 - 192), v0 - 152);
}

uint64_t dispatch thunk of ContextMenuPreviewable.setContextMenuPreviewing(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void KeyCommandTraverseProvider.invalidator.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1575C38()
{
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.invalidator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_24_8();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_90();
}

void KeyCommandTraverseProvider.invalidator.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_23_6();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B1575CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_31();
}

void sub_1B1575CE0()
{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_16_17();
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_24_5();
  }
  else
  {
    OUTLINED_FUNCTION_24_5();
    OUTLINED_FUNCTION_63_0();
  }
  OUTLINED_FUNCTION_10_2(v0);
}

uint64_t sub_1B1575D2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 32;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v4);
  v6 = *(_QWORD *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1B1575D84(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  return swift_unknownObjectWeakAssign();
}

void KeyCommandTraverseProvider.delegate.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_23();
}

void sub_1B1575E00()
{
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_24_8();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_90();
}

void KeyCommandTraverseProvider.delegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_23_6();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_23();
}

void sub_1B1575E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_31();
}

void sub_1B1575EA8()
{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_16_17();
  *(_QWORD *)(v2 + 40) = v3;
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_24_5();
  }
  else
  {
    OUTLINED_FUNCTION_24_5();
    OUTLINED_FUNCTION_63_0();
  }
  OUTLINED_FUNCTION_10_2(v0);
}

void KeyCommandTraverseProvider.traverseDirections.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_30();
  *a1 = *(_QWORD *)(v1 + 48);
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.traverseDirections.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v1 + 48) = v2;
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.traverseDirections.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void KeyCommandTraverseProvider.traverseBehavior.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_30();
  *a1 = *(_BYTE *)(v1 + 56);
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.traverseBehavior.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  OUTLINED_FUNCTION_13();
  *(_BYTE *)(v1 + 56) = v2;
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.traverseBehavior.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void KeyCommandTraverseProvider.startBehavior.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_30();
  *a1 = *(_BYTE *)(v1 + 57);
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.startBehavior.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  OUTLINED_FUNCTION_13();
  *(_BYTE *)(v1 + 57) = v2;
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.startBehavior.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t KeyCommandTraverseProvider.scrollToItemWhileTraversing.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30();
  return *(unsigned __int8 *)(v0 + 58);
}

void KeyCommandTraverseProvider.scrollToItemWhileTraversing.setter(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_13();
  *(_BYTE *)(v1 + 58) = a1;
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.scrollToItemWhileTraversing.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

BOOL static KeyCommandTraverseProvider.StartBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t KeyCommandTraverseProvider.StartBehavior.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t KeyCommandTraverseProvider.StartBehavior.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t sub_1B15761CC()
{
  sub_1B16BAA48();
  KeyCommandTraverseProvider.StartBehavior.hash(into:)();
  return sub_1B16BAA78();
}

uint64_t KeyCommandTraverseProvider.__allocating_init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_47_2();
  v0 = swift_allocObject();
  KeyCommandTraverseProvider.init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)();
  return v0;
}

uint64_t *KeyCommandTraverseProvider.init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_47_2();
  v6 = *v1;
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  v1[5] = 0;
  swift_unknownObjectWeakInit();
  if (qword_1ED184A48 != -1)
    swift_once();
  v1[6] = qword_1ED181858;
  *((_WORD *)v1 + 28) = 0;
  *((_BYTE *)v1 + 58) = 1;
  *((_BYTE *)v1 + *(_QWORD *)(*v1 + 192)) = 1;
  *((_BYTE *)v1 + *(_QWORD *)(*v1 + 200)) = 0;
  OUTLINED_FUNCTION_54_14();
  OUTLINED_FUNCTION_3_12();
  v7 = OUTLINED_FUNCTION_81_10();
  __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 160), v5);
  *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 168)) = v4;
  v10 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 176));
  *v10 = v3;
  v10[1] = v2;
  sub_1B13E4428(v0, (uint64_t)v1 + *(_QWORD *)(*v1 + 184));
  return v1;
}

void KeyCommandTraverseProvider.selectedIndexPath.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_54_14();
  v2 = v0 + v1;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_70_10(v2);
  OUTLINED_FUNCTION_48();
}

void sub_1B15763B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1B16B7D60();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_31();
}

void sub_1B1576408(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v6 - v4;
  sub_1B14107FC(a1, (uint64_t)&v6 - v4);
  KeyCommandTraverseProvider.selectedIndexPath.setter((uint64_t)v5);
}

void KeyCommandTraverseProvider.selectedIndexPath.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_13_37(a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v8 - v5;
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_BYTE *)(v1 + v7) = 0;
  OUTLINED_FUNCTION_62_10(a1);
  sub_1B1576504((uint64_t)v6);
  OUTLINED_FUNCTION_138();
  *(_BYTE *)(v1 + v7) = 1;
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B1576504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1B15766E4();
  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 208);
  swift_beginAccess();
  sub_1B157A0B4(a1, v3);
  swift_endAccess();
  sub_1B1576AE0();
  return sub_1B13EFECC(a1);
}

void KeyCommandTraverseProvider.selectedIndexPath.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;

  *a1 = v1;
  OUTLINED_FUNCTION_13_37((uint64_t)a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  a1[2] = malloc(v4);
  KeyCommandTraverseProvider.selectedIndexPath.getter();
  OUTLINED_FUNCTION_31();
}

void sub_1B15765E0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_70_10((uint64_t)v3);
    KeyCommandTraverseProvider.selectedIndexPath.setter((uint64_t)v2);
    OUTLINED_FUNCTION_44_13();
  }
  else
  {
    KeyCommandTraverseProvider.selectedIndexPath.setter((uint64_t)v3);
  }
  free(v3);
  OUTLINED_FUNCTION_10_2(v2);
}

void KeyCommandTraverseProvider.selectionBehavior.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 200));
  OUTLINED_FUNCTION_30();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

void KeyCommandTraverseProvider.selectionBehavior.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 200));
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  OUTLINED_FUNCTION_90();
}

void KeyCommandTraverseProvider.selectionBehavior.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15766E4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = (_QWORD *)*v0;
  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v18 - v9;
  v11 = sub_1B16B7D60();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)v1 + v2[26];
  swift_beginAccess();
  sub_1B14107FC(v16, (uint64_t)v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
    return sub_1B13EFECC((uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  if (((*(uint64_t (**)(char *, _QWORD))(v2[12] + 16))(v15, v2[10]) & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v15, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
    sub_1B157688C((uint64_t)v7);
    sub_1B13EFECC((uint64_t)v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_1B157688C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);

  v2 = v1;
  v4 = (_QWORD *)*v1;
  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_1B16B7D60();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B14107FC(a1, (uint64_t)v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
    return sub_1B13EFECC((uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 192)) == 1
    && ((*(uint64_t (**)(char *, _QWORD))(v4[12] + 16))(v13, v4[10]) & 1) != 0)
  {
    v15 = v4[13];
    v16 = v4[11];
    v25 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 56);
    v17 = (void *)v25(v16, v15);
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 112);
    v20 = swift_checkMetadataState();
    LOBYTE(v19) = v19(v20, AssociatedConformanceWitness);

    if ((v19 & 1) == 0)
    {
      v21 = (void *)v25(v16, v15);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 128))(v20, AssociatedConformanceWitness);

      if ((v22 & 1) == 0)
      {
        v23 = (void *)v25(v16, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(AssociatedConformanceWitness + 184))(v13, 0, v20, AssociatedConformanceWitness);

      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B1576AE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v9[24];

  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = &v9[-v3];
  v5 = (uint64_t)v0 + *(_QWORD *)(*v0 + 208);
  swift_beginAccess();
  sub_1B14107FC(v5, (uint64_t)v4);
  sub_1B1576BD0((uint64_t)v4, 1);
  sub_1B13EFECC((uint64_t)v4);
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v0 + 2);
  if (result)
  {
    v7 = v0[3];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B1576BD0(uint64_t a1, char a2)
{
  _QWORD *v2;
  _BYTE *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t AssociatedConformanceWitness;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);

  v3 = v2;
  v6 = (_QWORD *)*v2;
  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12);
  v14 = (char *)&v29 - v13;
  v15 = sub_1B16B7D60();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B14107FC(a1, (uint64_t)v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
    return sub_1B13EFECC((uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  if (v3[*(_QWORD *)(*(_QWORD *)v3 + 192)] == 1
    && ((*(uint64_t (**)(char *, _QWORD))(v6[12] + 16))(v19, v6[10]) & 1) != 0)
  {
    v21 = v6[13];
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 56);
    v23 = v6[11];
    v32 = *(_QWORD *)&v3[*(_QWORD *)(*(_QWORD *)v3 + 168)];
    v33 = v22;
    v24 = (void *)v22(v23, v21);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v19, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v15);
    swift_getAssociatedTypeWitness();
    v29 = v21;
    v31 = v23;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(AssociatedConformanceWitness + 176);
    v27 = swift_checkMetadataState();
    v30 = AssociatedConformanceWitness;
    v26(v11, 0, v27, AssociatedConformanceWitness);

    sub_1B13EFECC((uint64_t)v11);
    if ((a2 & 1) != 0)
    {
      swift_beginAccess();
      if (v3[58] == 1)
      {
        v28 = (void *)v33(v31, v29);
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 192))(v19, 1, v27);

      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

void KeyCommandTraverseProvider.register(in:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t (**v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t AssociatedTypeWitness;
  uint64_t v48;
  void (*v49)(__int128 *__return_ptr, char *, void *);
  char v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  uint64_t (*v64)(uint64_t, uint64_t);
  void *v65;
  void (*v66)(void);
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  _QWORD v84[6];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  id v96;
  void *v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  char v101[24];
  uint64_t (**v102)(uint64_t, uint64_t);
  uint64_t v103;
  char v104[8];
  char v105[8];

  v3 = (uint64_t)v1;
  v5 = (_QWORD *)*v1;
  OUTLINED_FUNCTION_13_37(a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_47_0();
  v91 = v8;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_59_8();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_190();
  v92 = v13;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v84 - v16;
  v18 = OUTLINED_FUNCTION_3_12();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  OUTLINED_FUNCTION_47_0();
  v89 = v21;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v22, v23);
  OUTLINED_FUNCTION_190();
  v90 = v24;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v25, v26);
  v94 = (char *)v84 - v27;
  v28 = v5[13];
  v29 = *(uint64_t (**)(void))(v28 + 56);
  v30 = v5[11];
  v95 = *(_QWORD *)((char *)v1 + v5[21]);
  v31 = (void *)OUTLINED_FUNCTION_104_0(v29);
  v96 = objc_msgSend(v31, sel_window);

  if (!v96)
    goto LABEL_27;
  if (!objc_msgSend(v96, sel_isKeyWindow))
  {

    return;
  }
  v86 = v2;
  v87 = v19;
  sub_1B16B9860();
  OUTLINED_FUNCTION_4_7();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v32 = (_QWORD *)OUTLINED_FUNCTION_9_53();
  v88 = v18;
  v33 = v5[10];
  v32[2] = v33;
  v32[3] = v30;
  v34 = v5[12];
  v35 = v33;
  v32[4] = v34;
  v32[5] = v28;
  v32[6] = v3;
  sub_1B144849C();
  OUTLINED_FUNCTION_8_51();
  swift_release();
  OUTLINED_FUNCTION_45();
  swift_bridgeObjectRelease();
  sub_1B16B9860();
  OUTLINED_FUNCTION_22_26();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v36 = (_QWORD *)OUTLINED_FUNCTION_9_53();
  OUTLINED_FUNCTION_16_39(v36);
  OUTLINED_FUNCTION_5_65();
  OUTLINED_FUNCTION_8_51();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_52();
  sub_1B16B9860();
  OUTLINED_FUNCTION_22_26();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v37 = (_QWORD *)OUTLINED_FUNCTION_9_53();
  OUTLINED_FUNCTION_16_39(v37);
  OUTLINED_FUNCTION_5_65();
  OUTLINED_FUNCTION_8_51();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_52();
  sub_1B16B9860();
  OUTLINED_FUNCTION_22_26();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v38 = (_QWORD *)OUTLINED_FUNCTION_9_53();
  OUTLINED_FUNCTION_16_39(v38);
  OUTLINED_FUNCTION_5_65();
  OUTLINED_FUNCTION_8_51();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_45();
  v39 = v88;
  swift_bridgeObjectRelease();
  v40 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 208);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_62_10(v40);
  OUTLINED_FUNCTION_18_4((uint64_t)v17, 1, v39);
  if (!v41)
  {
    v84[3] = a1;
    v42 = v94;
    v84[0] = *(_QWORD *)(v87 + 32);
    ((void (*)(char *, char *, uint64_t))v84[0])(v94, v17, v39);
    v84[1] = v3 + *(_QWORD *)(*(_QWORD *)v3 + 160);
    OUTLINED_FUNCTION_74_9();
    v43 = v102;
    v44 = v103;
    OUTLINED_FUNCTION_52_16();
    v45 = OUTLINED_FUNCTION_24_23();
    v84[5] = v35;
    v46 = (void *)v45;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v48 = OUTLINED_FUNCTION_39_14(AssociatedTypeWitness, (uint64_t)v105);
    v49 = *(void (**)(__int128 *__return_ptr, char *, void *))(v44 + 56);
    v85 = v48;
    v49(&v98, v42, v46);

    if (*((_QWORD *)&v99 + 1))
    {
      sub_1B13C06D0(&v98, (uint64_t)v104);
      OUTLINED_FUNCTION_51_12();
      OUTLINED_FUNCTION_2_79();
      v50 = OUTLINED_FUNCTION_36_6(v43[1]);
      v51 = v87;
      if ((v50 & 1) != 0)
      {
        OUTLINED_FUNCTION_4_7();
        swift_unownedRetain();
        swift_unownedRetain();
        swift_release();
        v52 = (_QWORD *)OUTLINED_FUNCTION_9_53();
        OUTLINED_FUNCTION_16_39(v52);
        OUTLINED_FUNCTION_20_36();
        OUTLINED_FUNCTION_8_51();
        swift_release();
        OUTLINED_FUNCTION_45();
        OUTLINED_FUNCTION_2_79();
        if ((OUTLINED_FUNCTION_36_6(v43[2]) & 1) != 0)
        {
          OUTLINED_FUNCTION_4_7();
          swift_unownedRetain();
          swift_unownedRetain();
          swift_release();
          v52 = (_QWORD *)OUTLINED_FUNCTION_9_53();
          OUTLINED_FUNCTION_16_39(v52);
          OUTLINED_FUNCTION_20_36();
          OUTLINED_FUNCTION_8_51();
          swift_release();
          OUTLINED_FUNCTION_45();
        }
        OUTLINED_FUNCTION_2_79();
        v53 = v43[4]((uint64_t)v52, (uint64_t)v43);
        v54 = *(_QWORD *)(v53 + 16);
        if (v54)
        {
          v55 = v53 + 32;
          do
          {
            sub_1B1578B10(v55, v3);
            v55 += 136;
            --v54;
          }
          while (v54);
        }
        swift_bridgeObjectRelease();
      }
      v56 = (void *)OUTLINED_FUNCTION_24_23();
      v57 = v85;
      v58 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 72);
      v59 = OUTLINED_FUNCTION_53_16();
      v60 = (uint64_t)v94;
      v58(v94, v59, v57);
      OUTLINED_FUNCTION_56_2();
      if (v56)
      {
        v97 = v56;
        sub_1B15069EC();
        sub_1B13CC6B4(0, (unint64_t *)&qword_1ED1816F8);
        v61 = v56;
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_1B13C06D0(&v98, (uint64_t)v101);
          OUTLINED_FUNCTION_52_16();
          v62 = OUTLINED_FUNCTION_49_0();
          v63(v62);
          sub_1B148B9CC();
          OUTLINED_FUNCTION_52();

          OUTLINED_FUNCTION_51_12();
        }
        else
        {
          v100 = 0;
          v98 = 0u;
          v99 = 0u;

          sub_1B13F15EC((uint64_t)&v98, (unint64_t *)&qword_1ED181700, (unint64_t *)&qword_1ED1816F8);
        }
      }
      v75 = v92;
      v76 = v88;
      OUTLINED_FUNCTION_119(v92, v60, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
      __swift_storeEnumTagSinglePayload(v75, 0, 1, v76);
      sub_1B1576BD0(v75, 0);
      OUTLINED_FUNCTION_10_46();
      OUTLINED_FUNCTION_67_2();
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v60, v76);
      goto LABEL_25;
    }
    sub_1B13F15EC((uint64_t)&v98, &qword_1EEF313F8, &qword_1ED180E78);
    OUTLINED_FUNCTION_51_12();
    OUTLINED_FUNCTION_12_40();
    v84[4] = OUTLINED_FUNCTION_2_79();
    v64 = v93;
    v65 = (void *)v93(v30, v28);
    OUTLINED_FUNCTION_80_8();
    v66();

    v67 = OUTLINED_FUNCTION_81_10();
    OUTLINED_FUNCTION_18_4(v67, v68, v88);
    if (v41)
    {
      OUTLINED_FUNCTION_199();
      OUTLINED_FUNCTION_6_68();
      OUTLINED_FUNCTION_12_40();
      OUTLINED_FUNCTION_2_79();
      v69 = (void *)v64(v30, v28);
      v70 = v94;
      OUTLINED_FUNCTION_80_8();
      v71 = v88;
      v72();

      v73 = OUTLINED_FUNCTION_81_10();
      OUTLINED_FUNCTION_18_4(v73, v74, v71);
      if (v41)
      {
        (*(void (**)(char *, uint64_t))(v87 + 8))(v70, v71);
        OUTLINED_FUNCTION_10_46();
        OUTLINED_FUNCTION_199();
LABEL_25:
        OUTLINED_FUNCTION_6_68();
        goto LABEL_27;
      }
      v81 = v89;
      OUTLINED_FUNCTION_40_16(v89);
      OUTLINED_FUNCTION_6_68();
      v82 = OUTLINED_FUNCTION_58_11();
      OUTLINED_FUNCTION_119(v82, v81, v83);
      OUTLINED_FUNCTION_32_23();
      OUTLINED_FUNCTION_10_46();
      OUTLINED_FUNCTION_63_7(v81);
      v80 = (uint64_t)v70;
    }
    else
    {
      v77 = v90;
      OUTLINED_FUNCTION_40_16(v90);
      OUTLINED_FUNCTION_6_68();
      v78 = OUTLINED_FUNCTION_58_11();
      OUTLINED_FUNCTION_119(v78, v77, v79);
      OUTLINED_FUNCTION_32_23();
      OUTLINED_FUNCTION_10_46();
      OUTLINED_FUNCTION_63_7(v77);
      v80 = (uint64_t)v94;
    }
    OUTLINED_FUNCTION_63_7(v80);
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_10_46();
  OUTLINED_FUNCTION_44_13();
LABEL_27:
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B1577748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v10))
  {
    v11 = *(_QWORD *)(a1 + 40);
    swift_release();
    ObjectType = swift_getObjectType();
    v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if ((v14 & 2) != 0)
  {
    KeyCommandTraverseProvider.traverse(_:)(0);
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v10))
    {
      v15 = *(_QWORD *)(a1 + 40);
      swift_release();
      v16 = swift_getObjectType();
      v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 0, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B15778E8()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1B157790C()
{
  return sub_1B15783D0(sub_1B1577748);
}

void KeyCommandTraverseProvider.traverse(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, _QWORD, void *, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t ObjectType;
  _QWORD v126[2];
  void (*v127)(_QWORD *__return_ptr, _QWORD, uint64_t);
  void (*v128)(_QWORD *__return_ptr, _QWORD *, _QWORD);
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(uint64_t);
  uint64_t (*v132)(uint64_t, uint64_t);
  _QWORD *v133;
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD v143[3];
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v3 = v1;
  v4 = a1;
  v5 = (_QWORD *)*v1;
  OUTLINED_FUNCTION_13_37(a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_47_0();
  v137 = v8;
  OUTLINED_FUNCTION_45_0();
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (char *)v126 - v12;
  MEMORY[0x1E0C80A78](v11, v14);
  OUTLINED_FUNCTION_59_8();
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  v19 = (char *)v126 - v18;
  MEMORY[0x1E0C80A78](v17, v20);
  OUTLINED_FUNCTION_190();
  v135 = v21;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v22, v23);
  OUTLINED_FUNCTION_190();
  v136 = v24;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v25, v26);
  OUTLINED_FUNCTION_190();
  v141 = v27;
  OUTLINED_FUNCTION_45_0();
  v30 = MEMORY[0x1E0C80A78](v28, v29);
  v32 = (char *)v126 - v31;
  MEMORY[0x1E0C80A78](v30, v33);
  v35 = (char *)v126 - v34;
  v36 = OUTLINED_FUNCTION_3_12();
  v142 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36, v37);
  OUTLINED_FUNCTION_136_0();
  MEMORY[0x1E0C80A78](v38, v39);
  OUTLINED_FUNCTION_190();
  v41 = v40;
  OUTLINED_FUNCTION_45_0();
  v44 = MEMORY[0x1E0C80A78](v42, v43);
  MEMORY[0x1E0C80A78](v44, v45);
  v139 = (char *)v126 - v48;
  if (v4 != 1)
  {
    v137 = v47;
    v140 = v3;
    if (v4)
    {
      v143[0] = v4;
      sub_1B16BA994();
      __break(1u);
      return;
    }
    v3 = v140;
    v51 = (uint64_t)v140 + v5[26];
    OUTLINED_FUNCTION_30();
    sub_1B14107FC(v51, (uint64_t)v35);
    v52 = OUTLINED_FUNCTION_81_10();
    v53 = v36;
    OUTLINED_FUNCTION_18_4(v52, v54, v36);
    if (v71)
    {
      OUTLINED_FUNCTION_199();
      sub_1B157960C(v2);
      OUTLINED_FUNCTION_18_4(v2, 1, v36);
      if (v71)
      {
        OUTLINED_FUNCTION_14_33();
        OUTLINED_FUNCTION_2_79();
        OUTLINED_FUNCTION_147();
        OUTLINED_FUNCTION_6_68();
        sub_1B13EFECC(v2);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v19, v2, v36);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v36);
      }
      OUTLINED_FUNCTION_19_37((uint64_t)v19);
      goto LABEL_33;
    }
    v138 = 0;
    v83 = v139;
    v134 = *(void (**)(char *, char *, uint64_t))(v142 + 32);
    v134(v139, v35, v36);
    v84 = OUTLINED_FUNCTION_26_25();
    v126[1] = v51;
    v128 = (void (*)(_QWORD *__return_ptr, _QWORD *, _QWORD))v84;
    v129 = v85;
    OUTLINED_FUNCTION_74_9();
    v87 = v144;
    v86 = v145;
    v133 = __swift_project_boxed_opaque_existential_1(v143, v144);
    v88 = v5[13];
    v89 = *(uint64_t (**)(void))(v88 + 56);
    v90 = v5[11];
    v131 = *(uint64_t (**)(uint64_t))((char *)v3 + *(_QWORD *)(*v3 + 168));
    v91 = (void *)OUTLINED_FUNCTION_104_0(v89);
    v92 = OUTLINED_FUNCTION_69_10();
    v93 = OUTLINED_FUNCTION_39_14(v92, (uint64_t)&v147);
    v94 = v83;
    v95 = v93;
    (*(void (**)(char *, _QWORD, void *, uint64_t, uint64_t, uint64_t))(v86 + 40))(v94, 0, v91, v93, v87, v86);

    OUTLINED_FUNCTION_18_4((uint64_t)v32, 1, v53);
    v97 = v53;
    if (v96)
    {
      v98 = (void (*)(uint64_t, uint64_t, uint64_t))v134;
      OUTLINED_FUNCTION_44_13();
      OUTLINED_FUNCTION_6_68();
      v99 = v132(v90, v88);
      v100 = (uint64_t)v139;
      v101 = sub_1B16B7D48();
      v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 104);
      v103 = OUTLINED_FUNCTION_53_16();
      v104 = v101;
      v105 = v99;
      v102(v104, v103, v95);
      OUTLINED_FUNCTION_56_2();
      v106 = v88;
      v107 = v90;
      if (v105 < 1)
      {
        v119 = v135;
        v3 = v140;
        sub_1B157960C(v135);
        OUTLINED_FUNCTION_18_4(v119, 1, v97);
        if (v71)
        {
          v127(v143, v128, v129);
          v120 = v106;
          v121 = v144;
          OUTLINED_FUNCTION_3_65();
          v108 = v136;
          v122 = v121;
          v106 = v120;
          OUTLINED_FUNCTION_71_8(v122);
          OUTLINED_FUNCTION_6_68();
          OUTLINED_FUNCTION_67_2();
        }
        else
        {
          v108 = v136;
          v98(v136, v119, v97);
          OUTLINED_FUNCTION_25_28(v108);
        }
        v4 = v138;
        v100 = (uint64_t)v139;
      }
      else
      {
        v108 = v141;
        OUTLINED_FUNCTION_66_1(v141, v100, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 16));
        OUTLINED_FUNCTION_25_28(v108);
        v4 = v138;
        v3 = v140;
      }
      OUTLINED_FUNCTION_19_37(v108);
      OUTLINED_FUNCTION_30();
      if (MEMORY[0x1B5E1F2F8](v3 + 4))
      {
        v123 = v106;
        v124 = v3[5];
        ObjectType = swift_getObjectType();
        (*(void (**)(_QWORD *, _QWORD, void (*)(_QWORD *__return_ptr, _QWORD *, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 24))(v3, 0, v128, v107, v129, v123, ObjectType, v124);
        OUTLINED_FUNCTION_63_0();
      }
      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v100, v97);
      goto LABEL_33;
    }
    v112 = v137;
    v134((char *)v137, v32, v53);
    OUTLINED_FUNCTION_6_68();
    OUTLINED_FUNCTION_66_1(v141, v112, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 16));
    v113 = OUTLINED_FUNCTION_76_8();
    OUTLINED_FUNCTION_19_37(v113);
    OUTLINED_FUNCTION_79_7(v112);
    v111 = (uint64_t)v139;
    goto LABEL_20;
  }
  v138 = 1;
  v139 = v46;
  v49 = (uint64_t)v3 + v5[26];
  OUTLINED_FUNCTION_30();
  sub_1B14107FC(v49, (uint64_t)v13);
  OUTLINED_FUNCTION_18_4((uint64_t)v13, 1, v36);
  if (!v71)
  {
    v55 = v41;
    v132 = *(uint64_t (**)(uint64_t, uint64_t))(v142 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v132)(v41, v13, v36);
    v56 = OUTLINED_FUNCTION_26_25();
    v127 = (void (*)(_QWORD *__return_ptr, _QWORD, uint64_t))v13;
    v133 = (_QWORD *)v56;
    v134 = v57;
    OUTLINED_FUNCTION_74_9();
    v59 = v144;
    v58 = v145;
    v135 = v36;
    __swift_project_boxed_opaque_existential_1(v143, v144);
    v60 = v5[13];
    v61 = v5[11];
    v130 = *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 168));
    OUTLINED_FUNCTION_49_0();
    v63 = (void *)OUTLINED_FUNCTION_104_0(v62);
    v64 = OUTLINED_FUNCTION_69_10();
    v65 = OUTLINED_FUNCTION_39_14(v64, (uint64_t)&v146);
    v140 = v3;
    v66 = v65;
    v67 = *(void (**)(uint64_t, _QWORD, void *, uint64_t, uint64_t, uint64_t))(v58 + 48);
    v68 = v137;
    v136 = v55;
    v69 = v58;
    v70 = v135;
    v67(v55, 0, v63, v65, v59, v69);

    OUTLINED_FUNCTION_18_4(v68, 1, v70);
    if (v71)
    {
      v72 = v142;
      sub_1B13EFECC(v68);
      OUTLINED_FUNCTION_6_68();
      v73 = OUTLINED_FUNCTION_49_0();
      v74 = v131(v73);
      v75 = v136;
      v76 = sub_1B16B7D48();
      v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 104);
      v78 = OUTLINED_FUNCTION_53_16();
      v77(v76, v78, v66);
      OUTLINED_FUNCTION_56_2();
      v79 = v75;
      v80 = v60;
      v81 = v61;
      if (v74 < 1)
      {
        v128(v143, v133, v134);
        v114 = v144;
        OUTLINED_FUNCTION_3_65();
        v115 = v141;
        OUTLINED_FUNCTION_71_8(v114);
        v3 = v140;
        OUTLINED_FUNCTION_19_37(v115);
        OUTLINED_FUNCTION_6_68();
      }
      else
      {
        v82 = v141;
        OUTLINED_FUNCTION_66_1(v141, v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 16));
        OUTLINED_FUNCTION_25_28(v82);
        v3 = v140;
        OUTLINED_FUNCTION_19_37(v82);
      }
      OUTLINED_FUNCTION_30();
      v116 = MEMORY[0x1B5E1F2F8](v3 + 4);
      v4 = v138;
      if (v116)
      {
        v117 = v3[5];
        v118 = swift_getObjectType();
        (*(void (**)(_QWORD *, uint64_t, _QWORD *, uint64_t, void (*)(char *, char *, uint64_t), uint64_t, uint64_t, uint64_t))(v117 + 24))(v3, 1, v133, v81, v134, v80, v118, v117);
        OUTLINED_FUNCTION_63_0();
      }
      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v79, v70);
      goto LABEL_33;
    }
    v109 = (uint64_t)v139;
    ((void (*)(char *, uint64_t, uint64_t))v132)(v139, v68, v70);
    OUTLINED_FUNCTION_6_68();
    OUTLINED_FUNCTION_66_1(v141, v109, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 16));
    v110 = OUTLINED_FUNCTION_76_8();
    v3 = v140;
    OUTLINED_FUNCTION_19_37(v110);
    OUTLINED_FUNCTION_79_7(v109);
    v111 = v136;
LABEL_20:
    OUTLINED_FUNCTION_79_7(v111);
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_78_8();
  OUTLINED_FUNCTION_14_33();
  OUTLINED_FUNCTION_2_79();
  v50 = v141;
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_19_37(v50);
  OUTLINED_FUNCTION_6_68();
LABEL_21:
  v4 = v138;
LABEL_33:
  OUTLINED_FUNCTION_30();
  if (*((_BYTE *)v3 + 56) == 1)
    sub_1B157876C();
  sub_1B1579370(v4);
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B1578224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v10))
  {
    v11 = *(_QWORD *)(a1 + 40);
    swift_release();
    ObjectType = swift_getObjectType();
    v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if ((v14 & 8) != 0)
  {
    KeyCommandTraverseProvider.traverse(_:)(0);
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v10))
    {
      v15 = *(_QWORD *)(a1 + 40);
      swift_release();
      v16 = swift_getObjectType();
      v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 0, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B15783C4()
{
  return sub_1B15783D0(sub_1B1578224);
}

uint64_t sub_1B15783D0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1B15783E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v10))
  {
    v11 = *(_QWORD *)(a1 + 40);
    swift_release();
    ObjectType = swift_getObjectType();
    v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if ((v14 & 1) != 0)
  {
    KeyCommandTraverseProvider.traverse(_:)(1);
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v10))
    {
      v15 = *(_QWORD *)(a1 + 40);
      swift_release();
      v16 = swift_getObjectType();
      v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 1, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B1578584()
{
  return sub_1B15783D0(sub_1B15783E4);
}

uint64_t sub_1B1578590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v10))
  {
    v11 = *(_QWORD *)(a1 + 40);
    swift_release();
    ObjectType = swift_getObjectType();
    v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if ((v14 & 4) != 0)
  {
    KeyCommandTraverseProvider.traverse(_:)(1);
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v10))
    {
      v15 = *(_QWORD *)(a1 + 40);
      swift_release();
      v16 = swift_getObjectType();
      v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 1, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B1578730()
{
  return sub_1B15783D0(sub_1B1578590);
}

uint64_t sub_1B157873C()
{
  return sub_1B1578748((void (*)(uint64_t))sub_1B157876C);
}

uint64_t sub_1B1578748(void (*a1)(uint64_t))
{
  uint64_t *v1;

  return sub_1B1578928(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1B157876C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  _BYTE v18[24];

  v1 = v0;
  v2 = (_QWORD *)*v0;
  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = &v18[-v5];
  v7 = sub_1B16B7D60();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (uint64_t)v1 + v2[26];
  swift_beginAccess();
  sub_1B14107FC(v12, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    return sub_1B13EFECC((uint64_t)v6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v6, v7);
  v14 = v2[12];
  v15 = v2[10];
  if (((*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v11, v15, v14) & 1) != 0)
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v1 + 4))
    {
      v16 = v1[5];
      ObjectType = swift_getObjectType();
      (*(void (**)(_QWORD *, _BYTE *, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 8))(v1, v11, v15, v2[11], v14, v2[13], ObjectType, v16);
      swift_unknownObjectRelease();
    }
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B1578928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7;

  v7 = swift_unownedRetainStrong();
  a6(v7);
  return swift_release();
}

uint64_t sub_1B1578954()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  _BYTE v18[24];

  v1 = v0;
  v2 = (_QWORD *)*v0;
  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = &v18[-v5];
  v7 = sub_1B16B7D60();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (uint64_t)v1 + v2[26];
  swift_beginAccess();
  sub_1B14107FC(v12, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    return sub_1B13EFECC((uint64_t)v6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v6, v7);
  v14 = v2[12];
  v15 = v2[10];
  if (((*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v11, v15, v14) & 1) != 0)
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v1 + 4))
    {
      v16 = v1[5];
      ObjectType = swift_getObjectType();
      (*(void (**)(_QWORD *, _BYTE *, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 16))(v1, v11, v15, v2[11], v14, v2[13], ObjectType, v16);
      swift_unknownObjectRelease();
    }
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B1578B10(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  __int128 v9[2];
  _BYTE __src[136];
  _BYTE v11[48];
  uint64_t v12;

  v2 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 176));
  v3 = *v2;
  if (*v2)
  {
    v4 = result;
    v5 = v2[1];
    sub_1B13E4484(a2 + *(_QWORD *)(*(_QWORD *)a2 + 184), (uint64_t)__src);
    if (*(_QWORD *)&__src[24])
    {
      sub_1B13C06D0((__int128 *)__src, (uint64_t)v11);
      v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 104);
      v7 = swift_unknownObjectRetain();
      if ((v6(v7, v5) & 1) != 0)
      {
        v12 = *(_QWORD *)(v4 + 40);
        sub_1B16B9740();
        (*(void (**)(uint64_t, uint64_t))(v4 + 120))(v3, v5);
        sub_1B1579FCC(v4, (uint64_t)__src);
        sub_1B13B4DC0((uint64_t)v11, (uint64_t)v9);
        v8 = (_QWORD *)swift_allocObject();
        memcpy(v8 + 2, __src, 0x88uLL);
        v8[19] = v3;
        v8[20] = v5;
        sub_1B13C06D0(v9, (uint64_t)(v8 + 21));
        swift_unknownObjectRetain();
        sub_1B144849C();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      return sub_1B13F15EC((uint64_t)__src, &qword_1ED17E900, (unint64_t *)&qword_1ED17E8F0);
    }
  }
  return result;
}

uint64_t sub_1B1578CE0()
{
  return sub_1B1578748((void (*)(uint64_t))sub_1B1578954);
}

uint64_t sub_1B1578CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 88);
  HIBYTE(v20) = 8;
  sub_1B13B4DC0(a4, (uint64_t)v17);
  v21 = 0u;
  v22 = 0u;
  LOBYTE(v23) = 1;
  type metadata accessor for CommandExecutionSource();
  v7 = swift_allocObject();
  v8 = v18;
  v9 = v19;
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  MEMORY[0x1E0C80A78](v10, v10);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  sub_1B164D160((uint64_t)&v20 + 7, (uint64_t)v12, 0, (uint64_t)&v21, 0, 0, 0, v7, v8, v9, v17[0], v17[1], v17[2], v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22,
    *((uint64_t *)&v22 + 1),
    v23,
    v24);
  v15 = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  v6(a2, a3, v15);
  return swift_release();
}

uint64_t KeyCommandTraverseProvider.shouldForceClearState.getter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v2 = (_QWORD *)*v1;
  OUTLINED_FUNCTION_13_37(a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_136_0();
  v7 = v5 - v6;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)v30 - v10;
  v12 = OUTLINED_FUNCTION_3_12();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)v1 + v2[26];
  OUTLINED_FUNCTION_30();
  sub_1B14107FC(v17, (uint64_t)v11);
  OUTLINED_FUNCTION_18_4((uint64_t)v11, 1, v12);
  if (v18)
  {
    sub_1B13EFECC((uint64_t)v11);
    return 0;
  }
  else
  {
    v20 = OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_119(v20, v21, v22);
    v23 = v2[10];
    if (((*(uint64_t (**)(char *, _QWORD, _QWORD))(v2[12] + 16))(v16, v2[10], v2[12]) & 1) != 0)
    {
      OUTLINED_FUNCTION_71_8(v23);
      v24 = v31;
      v25 = v32;
      v26 = __swift_project_boxed_opaque_existential_1(v30, v31);
      OUTLINED_FUNCTION_13_37((uint64_t)v26, (unint64_t *)&qword_1ED183950, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v27 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1B16C51D0;
      OUTLINED_FUNCTION_119(v28 + v27, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 64))(v28, v24, v25);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_42_16();
      OUTLINED_FUNCTION_18_4(v7, 1, v12);
      if (v18)
        v19 = 1;
      else
        v19 = 0;
      OUTLINED_FUNCTION_138();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    else
    {
      OUTLINED_FUNCTION_42_16();
      return 1;
    }
  }
  return v19;
}

Swift::Void __swiftcall KeyCommandTraverseProvider.clearState()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE v23[24];

  v2 = v1;
  v3 = (_QWORD *)*v1;
  OUTLINED_FUNCTION_13_37(v0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_136_0();
  v8 = v6 - v7;
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = &v23[-v11];
  v13 = OUTLINED_FUNCTION_3_12();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = (uint64_t)v2 + v3[26];
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_55_13();
  OUTLINED_FUNCTION_18_4((uint64_t)v12, 1, v13);
  if (v19)
  {
    OUTLINED_FUNCTION_78_8();
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v17, v12, v13);
    if (((*(uint64_t (**)(_BYTE *, _QWORD))(v3[12] + 16))(v17, v3[10]) & 1) == 0)
    {
      v20 = OUTLINED_FUNCTION_61_11();
      sub_1B1576504(v20);
    }
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
  }
  v21 = (char *)v2 + *(_QWORD *)(*v2 + 200);
  OUTLINED_FUNCTION_30();
  if ((*v21 & 1) == 0)
  {
    OUTLINED_FUNCTION_62_10(v18);
    sub_1B157688C(v8);
    OUTLINED_FUNCTION_44_13();
    v22 = OUTLINED_FUNCTION_61_11();
    sub_1B1576504(v22);
  }
  OUTLINED_FUNCTION_27();
}

void KeyCommandTraverseProvider.startTraversing(direction:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  __int128 v17;
  void *v18;
  uint64_t AssociatedConformanceWitness;
  void (*v20)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  _OWORD v22[2];

  v2 = v1;
  v4 = *v1;
  OUTLINED_FUNCTION_13_37(a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_136_0();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v22 - v12;
  v14 = (uint64_t)v2 + *(_QWORD *)(v4 + 208);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_55_13();
  v15 = OUTLINED_FUNCTION_3_12();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  OUTLINED_FUNCTION_78_8();
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_30();
    v17 = *(_OWORD *)(v4 + 96);
    v22[0] = *(_OWORD *)(v4 + 80);
    v22[1] = v17;
    type metadata accessor for KeyCommandTraverseProvider.StartBehavior();
  }
  v18 = (void *)(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 104) + 56))(*(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 104));
  sub_1B14107FC(v14, v9);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(AssociatedConformanceWitness + 176);
  v21 = swift_checkMetadataState();
  v20(v9, 0, v21, AssociatedConformanceWitness);

  OUTLINED_FUNCTION_67_2();
  sub_1B1579370(a1);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_1B1579370(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;

  v3 = (_QWORD *)*v1;
  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v21 - v6;
  v8 = sub_1B16B7D60();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + v3[26];
  swift_beginAccess();
  sub_1B14107FC(v13, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
    return sub_1B13EFECC((uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  v15 = (void *)(*(uint64_t (**)(_QWORD, _QWORD))(v3[13] + 56))(v3[11], v3[13]);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  v18 = swift_checkMetadataState();
  v19 = (void *)v17(v12, v18, AssociatedConformanceWitness);

  if (v19)
  {
    v21 = &unk_1EEFC1678;
    v20 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v20)
      objc_msgSend(v20, sel_startTraversingWithDirection_, a1);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

Swift::Void __swiftcall KeyCommandTraverseProvider.continueTraversing()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_13_37(v0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v9 - v4;
  OUTLINED_FUNCTION_54_14();
  v7 = v1 + v6;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_70_10(v7);
  v8 = OUTLINED_FUNCTION_3_12();
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v8);
  OUTLINED_FUNCTION_138();
  if ((_DWORD)v7 != 1)
    sub_1B1579370(0);
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B157960C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v38)(uint64_t, uint64_t, double, double, double, double);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(_QWORD *__return_ptr);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char *v65;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;

  v2 = v1;
  v4 = (_QWORD *)*v1;
  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5, v6);
  v76 = (uint64_t)v66 - v7;
  v8 = sub_1B16B7D60();
  v74 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v9);
  v75 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)((char *)v1 + v4[21]);
  v12 = v4[13];
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 56);
  v14 = v4[11];
  v15 = (void *)v13(v14, v12);
  objc_msgSend(v15, sel_bounds);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v24 = (void *)v13(v14, v12);
  objc_msgSend(v24, sel_adjustedContentInset);
  v26 = v25;
  v28 = v27;

  v72 = v11;
  v73 = v13;
  v29 = (void *)v13(v14, v12);
  v30 = UIEdgeInsetsInsetRect(v17, v19, v21, v23, v26, v28);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v38 = *(uint64_t (**)(uint64_t, uint64_t, double, double, double, double))(AssociatedConformanceWitness + 48);
  v39 = swift_checkMetadataState();
  v40 = v38(v39, AssociatedConformanceWitness, v30, v32, v34, v36);

  if (!v40)
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v8);
  v69 = AssociatedConformanceWitness;
  v71 = a1;
  v41 = (char *)v2 + *(_QWORD *)(*v2 + 160);
  v42 = v4[12];
  v43 = *(void (**)(_QWORD *__return_ptr))(v42 + 8);
  v68 = v4[10];
  v70 = (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v43;
  v43(v82);
  v44 = v83;
  v45 = v84;
  __swift_project_boxed_opaque_existential_1(v82, v83);
  v46 = v8;
  v47 = v76;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 64))(v40, v44, v45);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v47, 1, v46) == 1)
  {
    sub_1B13EFECC(v76);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    return __swift_storeEnumTagSinglePayload(v71, 1, 1, v46);
  }
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
  v50 = v75;
  v51 = v76;
  v76 = v46;
  v66[0] = v49;
  v49(v75, v51, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  v66[1] = v41;
  v52 = v68;
  v67 = v42;
  v70(v79, v68, v42);
  v53 = v80;
  v54 = v81;
  __swift_project_boxed_opaque_existential_1(v79, v80);
  v55 = (void *)v73(v14, v12);
  v56 = v69;
  (*(void (**)(__int128 *__return_ptr, char *, void *, uint64_t, uint64_t, uint64_t))(v54 + 56))(&v77, v50, v55, v69, v53, v54);

  if (!v78)
  {
    sub_1B13F15EC((uint64_t)&v77, &qword_1EEF313F8, &qword_1ED180E78);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
LABEL_10:
    v70(v82, v52, v67);
    v62 = v83;
    v63 = v84;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    v64 = (void *)v73(v14, v12);
    v65 = v75;
    (*(void (**)(char *, _QWORD, void *, uint64_t, uint64_t, uint64_t))(v63 + 40))(v75, 0, v64, v56, v62, v63);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v65, v76);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  }
  sub_1B13C06D0(&v77, (uint64_t)v82);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  v57 = v83;
  v58 = v84;
  __swift_project_boxed_opaque_existential_1(v82, v83);
  v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
  v60 = v71;
  if ((v59 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    goto LABEL_10;
  }
  v61 = v76;
  ((void (*)(uint64_t, char *, uint64_t))v66[0])(v71, v75, v76);
  __swift_storeEnumTagSinglePayload(v60, 0, 1, v61);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
}

void type metadata accessor for KeyCommandTraverseProvider.StartBehavior()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t *KeyCommandTraverseProvider.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  sub_1B13C076C((uint64_t)(v0 + 2));
  sub_1B13C076C((uint64_t)(v0 + 4));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 160));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B13F15EC((uint64_t)v0 + *(_QWORD *)(*v0 + 184), &qword_1ED17E900, (unint64_t *)&qword_1ED17E8F0);
  OUTLINED_FUNCTION_54_14();
  sub_1B13EFECC((uint64_t)v0 + v2);
  return v0;
}

uint64_t KeyCommandTraverseProvider.__deallocating_deinit()
{
  KeyCommandTraverseProvider.deinit();
  return swift_deallocClassInstance();
}

void sub_1B1579C74()
{
  JUMPOUT(0x1B5E1F0E8);
}

void sub_1B1579C8C(void **a1)
{
  *a1 = malloc(0x28uLL);
  KeyCommandTraverseProvider.invalidator.modify();
}

uint64_t (*sub_1B1579CB4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_1B13C6B28;
}

uint64_t (*sub_1B1579CE0(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  KeyCommandTraverseProvider.selectedIndexPath.modify(v2);
  v2[4] = v3;
  return sub_1B13C6B28;
}

void sub_1B1579D28(uint64_t a1)
{
  KeyCommandTraverseProvider.startTraversing(direction:)(a1);
}

void sub_1B1579D48()
{
  KeyCommandTraverseProvider.continueTraversing()();
}

void sub_1B1579D68(uint64_t a1)
{
  KeyCommandTraverseProvider.traverse(_:)(a1);
}

void sub_1B1579DAC()
{
  KeyCommandTraverseProvider.selectedIndexPath.getter();
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProvider<A, B>(_:didSelectAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProvider<A, B>(_:commitDeleteAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProvider<A, B>(_:didTraversePastEdgeOfContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProviderDidTraverse<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of KeyCommandTraverserType.startTraversing(direction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of KeyCommandTraverserType.continueTraversing()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of KeyCommandTraverserType.traverse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void sub_1B1579E10()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1B15763B8(319, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

void type metadata accessor for KeyCommandTraverseProvider()
{
  JUMPOUT(0x1B5E1F034);
}

uint64_t method lookup function for KeyCommandTraverseProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyCommandTraverseProvider.__allocating_init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t sub_1B1579F10(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1579F5C + 4 * byte_1B16D1C15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1579F90 + 4 * asc_1B16D1C10[v4]))();
}

uint64_t sub_1B1579F90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1579F98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1579FA0);
  return result;
}

uint64_t sub_1B1579FAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1579FB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1579FB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1579FC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1579FCC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for KeyCommandItem(a2, a1);
  return a2;
}

uint64_t sub_1B157A008()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1B157A068(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocObject();
}

uint64_t sub_1B157A068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a6 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1B157A0A4()
{
  uint64_t v0;

  return sub_1B1578CEC(v0 + 16, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), v0 + 168);
}

uint64_t sub_1B157A0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B15763B8(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:shouldAllowState:)()
{
  return 1;
}

uint64_t dispatch thunk of CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:willTransitionTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:didTransitionTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:shouldAllowState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

TeaUI::ErrorModel __swiftcall ErrorModel.init(title:description:)(Swift::String title, Swift::String description)
{
  Swift::String *v2;
  TeaUI::ErrorModel result;

  *v2 = title;
  v2[1] = description;
  result.description.value = description;
  result.title.value = title;
  return result;
}

uint64_t ErrorModel.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B16B9740();
  return v1;
}

uint64_t ErrorModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1B16B9740();
  return v1;
}

TeaUI::ErrorModel __swiftcall ErrorModel.init(description:)(Swift::String description)
{
  Swift::String *v1;
  TeaUI::ErrorModel result;

  v1->_countAndFlagsBits = 0;
  v1->_object = 0;
  v1[1] = description;
  result.title.value = description;
  return result;
}

TeaUI::ErrorModel __swiftcall ErrorModel.init(title:)(Swift::String title)
{
  Swift::String *v1;
  TeaUI::ErrorModel result;

  *v1 = title;
  v1[1]._countAndFlagsBits = 0;
  v1[1]._object = 0;
  result.title.value = title;
  return result;
}

uint64_t static ErrorModel.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  BOOL v13;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1;
  v10 = v9 == *a2 && v3 == v6;
  if (v10 || (v11 = sub_1B16BA910(v9, v3, *a2), result = 0, (v11 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8)
      {
        v13 = v4 == v7 && v5 == v8;
        if (v13 || (sub_1B16BA910(v4, v5, v7) & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ErrorModel(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorModel()
{
  return &type metadata for ErrorModel;
}

uint64_t dispatch thunk of AlertPresenter.onAccept(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AlertPresenter.onReject(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AlertPresenter.onNeutral(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AlertPresenter.present(from:animated:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of CommandType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B157A368(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_handoffUserActivityType);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B16B9860();

  return v3;
}

uint64_t SharedImageCache.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_25();
  SharedImageCache.init()();
  return v0;
}

uint64_t SharedImageCache.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t SharedImageCache.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall SharedImageCache.cache(_:forKey:immediately:)(UIImage _, Swift::String forKey, Swift::Bool immediately)
{
  OUTLINED_FUNCTION_0_112(_, forKey._countAndFlagsBits, (uint64_t)forKey._object);
}

Swift::Void __swiftcall SharedImageCache.cache(_:forKey:)(UIImage _, Swift::String forKey)
{
  OUTLINED_FUNCTION_0_112(_, forKey._countAndFlagsBits, (uint64_t)forKey._object);
}

uint64_t method lookup function for SharedImageCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharedImageCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

BOOL static ErrorPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ErrorPosition.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t ErrorPosition.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

unint64_t sub_1B157A5F0()
{
  unint64_t result;

  result = qword_1EEF33F90;
  if (!qword_1EEF33F90)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ErrorPosition, &type metadata for ErrorPosition);
    atomic_store(result, (unint64_t *)&qword_1EEF33F90);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ErrorPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B157A678 + 4 * byte_1B16D1EFD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B157A6AC + 4 * byte_1B16D1EF8[v4]))();
}

uint64_t sub_1B157A6AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B157A6B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B157A6BCLL);
  return result;
}

uint64_t sub_1B157A6C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B157A6D0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B157A6D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B157A6DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ErrorPosition()
{
  return &type metadata for ErrorPosition;
}

uint64_t sub_1B157A6F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B157A750(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CardViewScrollViewCoordinator.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  OUTLINED_FUNCTION_13();
  return MEMORY[0x1B5E1F2F8](v1);
}

void (*CardViewScrollViewCoordinator.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_13();
  v6 = MEMORY[0x1B5E1F2F8](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1B14A03C4;
}

uint64_t CardViewScrollViewCoordinator.isEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  OUTLINED_FUNCTION_13();
  return *v1;
}

uint64_t CardViewScrollViewCoordinator.isEnabled.setter(char a1)
{
  _BYTE *v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_1_92();
  *v1 = a1;
  return result;
}

uint64_t (*CardViewScrollViewCoordinator.isEnabled.modify())()
{
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

id CardViewScrollViewCoordinator.__allocating_init(scrollView:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CardViewScrollViewCoordinator.init(scrollView:)(a1);
}

id CardViewScrollViewCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CardViewScrollViewCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CardViewScrollViewCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B157AA20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v7[6];

  v1 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer))
  {
    v2 = (void *)objc_opt_self();
    v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v7[4] = sub_1B157B050;
    v7[5] = v3;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 1107296256;
    v7[2] = sub_1B13A2674;
    v7[3] = &block_descriptor_43;
    v4 = _Block_copy(v7);
    swift_release();
    v5 = objc_msgSend(v2, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v4, 0.1);
    _Block_release(v4);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;

  }
}

uint64_t sub_1B157AB70()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;
  BOOL v3;
  __int128 v4[3];
  char v5;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  result = swift_beginAccess();
  if (*v1 == 1)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48))
      v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) == 1;
    else
      v3 = 0;
    if (v3)
    {
      LOBYTE(v4[0]) = 1;
      result = sub_1B13D9764((char *)v4);
      if ((result & 1) != 0)
      {
        memset(v4, 0, sizeof(v4));
        v5 = 2;
        return sub_1B13D94DC(v4);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall CardViewScrollViewCoordinator.cardViewAnimationDidTransitionTo(interactiveState:)(TeaUI::CardViewInteractiveState interactiveState)
{
  uint64_t v1;
  unsigned int v2;
  BOOL v3;
  unsigned int v4;

  v2 = *(unsigned __int8 *)interactiveState;
  v3 = v2 >= 2;
  v4 = v2 - 2;
  if (v3)
  {
    if (v4 >= 2)
    {
      *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning) = 0;
    }
    else
    {
      *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning) = 1;
      OUTLINED_FUNCTION_0_113();
    }
  }
  else
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning) = 1;
    sub_1B157ACA0();
  }
}

void sub_1B157ACA0()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  __int128 v3[3];
  char v4;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  swift_beginAccess();
  if (*v1 == 1 && *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) < 2u)
  {
    LOBYTE(v3[0]) = 1;
    if ((sub_1B13D9764((char *)v3) & 1) != 0)
    {
      memset(v3, 0, sizeof(v3));
      v4 = 2;
      sub_1B13D94DC(v3);
      v2 = *(id *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView);
      objc_msgSend(v2, sel_contentOffset);
      objc_msgSend(v2, sel_setContentOffset_animated_, 0);

    }
  }
}

Swift::Void __swiftcall CardViewScrollViewCoordinator.cardViewAnimationWillTransitionTo(presentationState:)(TeaUI::CardViewPresentationState presentationState)
{
  if (*(unsigned __int8 *)presentationState > 1u)
    OUTLINED_FUNCTION_0_113();
  else
    sub_1B157AD80();
}

uint64_t sub_1B157AD80()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;
  BOOL v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  result = swift_beginAccess();
  if (*v1 == 1)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48))
      v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) == 1;
    else
      v3 = 0;
    if (!v3)
    {
      v4 = sub_1B13D96C8(0);
      v6 = v5;
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView), sel_adjustedContentInset);
      *(double *)&v11 = v4;
      *((_QWORD *)&v11 + 1) = v6;
      v12 = v7;
      v13 = v8;
      v14 = v9;
      v15 = v10;
      v16 = 1;
      return sub_1B13D94DC(&v11);
    }
  }
  return result;
}

uint64_t method lookup function for CardViewScrollViewCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CardViewScrollViewCoordinator.__allocating_init(scrollView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CardViewScrollViewCoordinator.ScrollLock(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardViewScrollViewCoordinator.ScrollLock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B157AF00(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1B157AF18(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CardViewScrollViewCoordinator.ScrollLock()
{
  return &type metadata for CardViewScrollViewCoordinator.ScrollLock;
}

uint64_t sub_1B157AF50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B157AF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1B5E1F2F8](v2);
  if (v3)
  {
    v4 = (_BYTE *)v3;
    v5 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView;
    if (!objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView), sel_isTracking)|| v4[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning] == 1)
    {
      v6 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer;
      v7 = *(void **)&v4[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer];
      if (v7)
      {
        objc_msgSend(v7, sel_invalidate);
        v8 = *(void **)&v4[v6];
      }
      else
      {
        v8 = 0;
      }
      *(_QWORD *)&v4[v6] = 0;

    }
    if ((objc_msgSend(*(id *)&v4[v5], sel_isTracking) & 1) == 0
      && (v4[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning] & 1) == 0)
    {
      sub_1B157ACA0();
    }

  }
}

void sub_1B157B050(uint64_t a1)
{
  uint64_t v1;

  sub_1B157AF74(a1, v1);
}

__n128 MotionData.attitude.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void MotionData.rotationRate.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_2_81(a1, v1[5].n128_f64[0], v1[4]);
}

void MotionData.gravity.getter(__n128 *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_81(a1, *(double *)(v1 + 104), *(__n128 *)(v1 + 88));
}

void MotionData.userAcceleration.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_2_81(a1, v1[8].n128_f64[0], v1[7]);
}

uint64_t MotionData.deviceOrientation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

double Attitude.normalizedPitchDegrees.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_1_93(*(double *)(v0 + 32), 57.2957795);
}

double Attitude.normalizedRollDegrees.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_1_93(*(double *)(v0 + 24), 57.2957795);
}

uint64_t sub_1B157B0B8()
{
  uint64_t result;

  result = sub_1B157B0D4();
  qword_1ED17B4F0 = result;
  return result;
}

uint64_t sub_1B157B0D4()
{
  _QWORD v1[3];
  _QWORD v2[3];
  __int128 v3;
  uint64_t v4;
  _OWORD v5[3];

  v5[0] = xmmword_1B16D2020;
  v5[1] = xmmword_1B16D2030;
  v5[2] = xmmword_1B16D2040;
  v3 = 0uLL;
  v4 = 0;
  memset(v2, 0, sizeof(v2));
  type metadata accessor for MotionData();
  memset(v1, 0, sizeof(v1));
  swift_allocObject();
  return sub_1B1400FE4((uint64_t)v5, &v3, (uint64_t)v2, (uint64_t)v1, 0, 1);
}

uint64_t static MotionData.fixed.getter()
{
  if (qword_1ED17B4F8 != -1)
    swift_once();
  return swift_retain();
}

double MotionData.xTranslate(to:inverted:)()
{
  double result;

  OUTLINED_FUNCTION_3_68();
  OUTLINED_FUNCTION_48();
  return result;
}

double MotionData.yTranslate(to:inverted:)()
{
  double result;

  OUTLINED_FUNCTION_3_68();
  OUTLINED_FUNCTION_48();
  return result;
}

BOOL static MotionData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float64x2_t v4;
  float64x2_t v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  float64x2_t v13[3];
  float64x2_t v14[3];

  v4 = *(float64x2_t *)(a1 + 32);
  v14[0] = *(float64x2_t *)(a1 + 16);
  v14[1] = v4;
  v14[2] = *(float64x2_t *)(a1 + 48);
  v5 = *(float64x2_t *)(a2 + 32);
  v13[0] = *(float64x2_t *)(a2 + 16);
  v13[1] = v5;
  v13[2] = *(float64x2_t *)(a2 + 48);
  if (static Attitude.== infix(_:_:)(v14, v13)
    && (*(double *)(a1 + 64) == *(double *)(a2 + 64) ? (v6 = *(double *)(a1 + 72) == *(double *)(a2 + 72)) : (v6 = 0),
        v6 ? (v7 = *(double *)(a1 + 80) == *(double *)(a2 + 80)) : (v7 = 0),
        v7
     && (*(double *)(a1 + 88) == *(double *)(a2 + 88) ? (v8 = *(double *)(a1 + 96) == *(double *)(a2 + 96)) : (v8 = 0),
         v8 ? (v9 = *(double *)(a1 + 104) == *(double *)(a2 + 104)) : (v9 = 0),
         v9
      && (*(double *)(a1 + 112) == *(double *)(a2 + 112)
        ? (v10 = *(double *)(a1 + 120) == *(double *)(a2 + 120))
        : (v10 = 0),
          v10 ? (v11 = *(double *)(a1 + 128) == *(double *)(a2 + 128)) : (v11 = 0),
          v11 && *(_QWORD *)(a1 + 136) == *(_QWORD *)(a2 + 136)))))
  {
    return *(_QWORD *)(a1 + 144) == *(_QWORD *)(a2 + 144);
  }
  else
  {
    return 0;
  }
}

BOOL static Attitude.== infix(_:_:)(float64x2_t *a1, float64x2_t *a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0])
  {
    return a1[2].f64[1] == a2[2].f64[1];
  }
  return result;
}

BOOL _s5TeaUI12RotationRateV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

double Attitude.pitch.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double Attitude.yaw.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double Attitude.normalizedRoll.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double Attitude.normalizedPitch.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double Attitude.normalizedYaw.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double Attitude.rollDegrees.getter()
{
  double *v0;

  return OUTLINED_FUNCTION_1_93(*v0, 57.2957795);
}

double Attitude.pitchDegrees.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_1_93(*(double *)(v0 + 8), 57.2957795);
}

double Attitude.yawDegrees.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_1_93(*(double *)(v0 + 16), 57.2957795);
}

double Attitude.normalizedYawDegrees.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_1_93(*(double *)(v0 + 40), 57.2957795);
}

double static Attitude.fixed.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *a1 = xmmword_1B16D2020;
  a1[1] = xmmword_1B16D2030;
  result = 0.698131701;
  a1[2] = xmmword_1B16D2040;
  return result;
}

double Acceleration.y.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double Acceleration.z.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void static Acceleration.fixed.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t method lookup function for MotionData()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for Attitude(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Attitude(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for Attitude()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for RotationRate()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t getEnumTagSinglePayload for Acceleration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Acceleration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for Acceleration()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t EmptyStateModel.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B16B9740();
  return v1;
}

uint64_t EmptyStateModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1B16B9740();
  return v1;
}

void *EmptyStateModel.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t EmptyStateModel.init(title:description:image:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t EmptyStateModel.init(description:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = result;
  a3[3] = a2;
  a3[4] = 0;
  return result;
}

uint64_t EmptyStateModel.init(title:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[3] = 0;
  a3[4] = 0;
  a3[2] = 0;
  return result;
}

uint64_t static EmptyStateModel.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  uint64_t result;
  char v16;
  id v17;
  id v18;
  char v19;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (void *)a1[4];
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = (void *)a2[4];
  if (!v3)
  {
    if (v7)
      return 0;
    goto LABEL_10;
  }
  if (!v7)
    return 0;
  v11 = *a1;
  v12 = v11 == *a2 && v3 == v7;
  if (v12 || (v13 = sub_1B16BA910(v11, v3, *a2), result = 0, (v13 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (!v9)
        return 0;
      if (v4 != v8 || v5 != v9)
      {
        v16 = sub_1B16BA910(v4, v5, v8);
        result = 0;
        if ((v16 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v6)
    {
      if (v10)
      {
        sub_1B13C0F64();
        v17 = v10;
        v18 = v6;
        v19 = sub_1B16BA214();

        if ((v19 & 1) != 0)
          return 1;
      }
    }
    else if (!v10)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void destroy for EmptyStateModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for EmptyStateModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  sub_1B16B9740();
  sub_1B16B9740();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for EmptyStateModel(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for EmptyStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for EmptyStateModel(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmptyStateModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyStateModel()
{
  return &type metadata for EmptyStateModel;
}

uint64_t ActivityEligibilityOption.hash(into:)()
{
  return sub_1B16BAA54();
}

BOOL static ActivityEligibilityOption.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void ActivityEligibilityOption.hashValue.getter()
{
  sub_1B16BAA48();
  OUTLINED_FUNCTION_159();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

unint64_t sub_1B157B940()
{
  unint64_t result;

  result = qword_1ED187EC8;
  if (!qword_1ED187EC8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for ActivityEligibilityOption, &type metadata for ActivityEligibilityOption);
    atomic_store(result, (unint64_t *)&qword_1ED187EC8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityEligibilityOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B157B9CC + 4 * byte_1B16D2205[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B157BA00 + 4 * asc_1B16D2200[v4]))();
}

uint64_t sub_1B157BA00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B157BA08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B157BA10);
  return result;
}

uint64_t sub_1B157BA1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B157BA24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B157BA28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B157BA30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityEligibilityOption()
{
  return &type metadata for ActivityEligibilityOption;
}

void sub_1B157BA4C()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_48();
}

void sub_1B157BA90(void *a1)
{
  void *v1;
  id v3;

  OUTLINED_FUNCTION_0_21();
  v3 = a1;
  sub_1B13E9730();
  OUTLINED_FUNCTION_7_55();
  OUTLINED_FUNCTION_5_67();
  objc_msgSend(v1, sel_addSubview_, v3);
  OUTLINED_FUNCTION_11();
}

void sub_1B157BAF0(void *a1)
{
  void *v1;
  id v3;
  id v4;

  OUTLINED_FUNCTION_0_21();
  v3 = a1;
  sub_1B13E9730();
  OUTLINED_FUNCTION_7_55();
  OUTLINED_FUNCTION_5_67();
  v4 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v4, sel_addSublayer_, v3);

  OUTLINED_FUNCTION_11();
}

void sub_1B157BB6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  OUTLINED_FUNCTION_0_21();
  v8 = a1;
  sub_1B13E9730();
  v9 = *(_QWORD *)(*v4 + 16);
  sub_1B13E9724(v9);
  v10 = *v4;
  *(_QWORD *)(v10 + 16) = v9 + 1;
  v11 = v10 + 16 * v9;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = a4;
  swift_endAccess();
  v12 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v12, sel_insertSublayer_atIndex_, v8, a2);

  OUTLINED_FUNCTION_11();
}

void sub_1B157BC14()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B157BC4C(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_isMotionEnabled);
  OUTLINED_FUNCTION_13();
  *v3 = a1;
  return sub_1B157BD0C();
}

void (*sub_1B157BC9C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  return sub_1B157BCE0;
}

void sub_1B157BCE0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B157BD0C();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B157BD0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_motionTransforms);
  result = swift_beginAccess();
  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_isMotionEnabled);
    sub_1B16B9740();
    swift_beginAccess();
    v6 = (uint64_t *)(v3 + 40);
    do
    {
      v7 = *v6;
      ObjectType = swift_getObjectType();
      v9 = *v5;
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
      swift_unknownObjectRetain();
      v10(v9, ObjectType, v7);
      swift_unknownObjectRelease();
      v6 += 2;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id MotionContainerView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id MotionContainerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MotionContainerView.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI19MotionContainerView_motionTransforms] = MEMORY[0x1E0DEE9D8];
  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_8_52(OBJC_IVAR____TtC5TeaUI19MotionContainerView_isMotionEnabled);
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id MotionContainerView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MotionContainerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B157BF34(_BYTE *a1@<X8>)
{
  char v2;

  sub_1B157BC14();
  *a1 = v2 & 1;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B157BF5C(char *a1)
{
  sub_1B157BC4C(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t method lookup function for MotionContainerView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MotionContainerView.shouldReceiveMotionEvents.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MotionContainerView.addMotionSubview<A>(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MotionContainerView.addMotionSublayer<A>(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MotionContainerView.insertMotionSublayer<A>(_:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MotionContainerView.isMotionEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MotionContainerView.isMotionEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MotionContainerView.isMotionEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

void *RightArrow.arrowColor.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor);
  OUTLINED_FUNCTION_13();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void RightArrow.arrowColor.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor);
  OUTLINED_FUNCTION_13();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*RightArrow.arrowColor.modify())()
{
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

id RightArrow.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id RightArrow.init(frame:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  double v2;
  objc_super *v3;
  SEL v4;
  id v5;
  uint64_t v7;

  OUTLINED_FUNCTION_57();
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor) = 0;
  v7 = ObjectType;
  v2 = OUTLINED_FUNCTION_54();
  v5 = objc_msgSendSuper2(v3, v4, v2, v0, v7);
  objc_msgSend(v5, sel_setOpaque_, 0);
  return v5;
}

id RightArrow.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void RightArrow.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor] = 0;

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall RightArrow.draw(_:)(__C::CGRect a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  CGContext *v7;
  CGContext *v8;
  CGContextRef v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const CGPath *v14;
  id *v15;
  id v16;
  CGColor *v17;
  uint64_t v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  OUTLINED_FUNCTION_57();
  v2 = sub_1B16B7FF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = UIGraphicsGetCurrentContext();
  if (v7)
  {
    v8 = v7;
    v19.origin.x = OUTLINED_FUNCTION_54();
    CGContextClearRect(v9, v19);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
    OUTLINED_FUNCTION_4_68();
    v20.origin.x = OUTLINED_FUNCTION_54();
    CGRectGetMinY(v20);
    OUTLINED_FUNCTION_3_69(v11, sel_moveToPoint_);
    v21.origin.x = OUTLINED_FUNCTION_54();
    CGRectGetMaxX(v21);
    OUTLINED_FUNCTION_2_83();
    OUTLINED_FUNCTION_3_69(v12, sel_addLineToPoint_);
    OUTLINED_FUNCTION_4_68();
    OUTLINED_FUNCTION_2_83();
    OUTLINED_FUNCTION_3_69(v13, sel_addLineToPoint_);
    v14 = (const CGPath *)objc_msgSend(v10, sel_CGPath);
    CGContextAddPath(v8, v14);

    v15 = (id *)(v1 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor);
    OUTLINED_FUNCTION_13();
    if (*v15)
    {
      v16 = *v15;
      v17 = (CGColor *)objc_msgSend(v16, sel_CGColor);
      CGContextSetFillColorWithColor(v8, v17);

    }
    CGContextClosePath(v8);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0C9B8A0], v2);
    sub_1B16BA004();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

id RightArrow.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RightArrow()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of NavigationItemStylable.navigationItemStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void BarView.style.getter(void **a1@<X8>)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC5TeaUI7BarView_style);
  OUTLINED_FUNCTION_30();
  v4 = *v3;
  *a1 = *v3;
  sub_1B13FBE70(v4);
  OUTLINED_FUNCTION_48();
}

id sub_1B157C5A4@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC5TeaUI7BarView_style);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return sub_1B13FBE70(v4);
}

void sub_1B157C5F8(void **a1)
{
  void *v1;

  v1 = *a1;
  sub_1B13FBE70(v1);
  BarView.style.setter(&v1);
}

void (*BarView.style.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  return sub_1B157C674;
}

void sub_1B157C674(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B13FBCBC();
}

void BarView.separator.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI7BarView_separator);
  OUTLINED_FUNCTION_30();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B157C6E0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC5TeaUI7BarView_separator);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B157C730(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  BarView.separator.setter(&v1);
}

void (*BarView.separator.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI7BarView_separator);
  OUTLINED_FUNCTION_30();
  *((_BYTE *)v3 + 32) = *v4;
  return sub_1B157C7C8;
}

void sub_1B157C7C8(uint64_t a1, char a2)
{
  void *v2;
  unsigned __int8 *v3;
  char v4;
  char v5;

  v2 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    v4 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v3 = (unsigned __int8 *)&v4;
  }
  else
  {
    v5 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v3 = (unsigned __int8 *)&v5;
  }
  BarView.separator.setter(v3);
  free(v2);
}

id BarView.__allocating_init(effect:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEffect_, a1);

  return v3;
}

void sub_1B157C858()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI7BarView_style] = 2;
  v0[OBJC_IVAR____TtC5TeaUI7BarView_separator] = 0;
  v1 = OBJC_IVAR____TtC5TeaUI7BarView_tintView;
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_);
  v2 = OBJC_IVAR____TtC5TeaUI7BarView_separatorView;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_0_5(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_);

  sub_1B16BA724();
  __break(1u);
}

id BarView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_4();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t BlueprintPipeline.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13();
  return MEMORY[0x1B5E1F2F8](v0 + 16);
}

void BlueprintPipeline.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_13();
  v4 = MEMORY[0x1B5E1F2F8](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B157CA58()
{
  swift_retain();
  swift_retain();
  sub_1B16B8948();
  swift_release();
  return swift_release();
}

void BlueprintPipeline.__allocating_init(blueprintProvider:integrator:name:)()
{
  OUTLINED_FUNCTION_104();
  BlueprintPipeline.init(blueprintProvider:integrator:name:)();
}

void sub_1B157CAF4()
{
  OUTLINED_FUNCTION_67();
}

void BlueprintPipeline.__allocating_init(blueprintProvider:integrator:name:useDiffableDataSource:)()
{
  OUTLINED_FUNCTION_104();
  BlueprintPipeline.init(blueprintProvider:integrator:name:useDiffableDataSource:)();
}

void sub_1B157CB48()
{
  OUTLINED_FUNCTION_67();
}

Swift::Void __swiftcall BlueprintPipeline.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  type metadata accessor for BlueprintPipelineToken();
  OUTLINED_FUNCTION_25();
  sub_1B157CA58();
  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  v2 = *(id *)(v1 + 24);
  sub_1B144B184((uint64_t)v2);

  v3 = *(id *)(v1 + 16);
  sub_1B144B184((uint64_t)v3);

}

uint64_t sub_1B157CBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;

  v4 = sub_1B14501B0();
  sub_1B144FA2C(v4);
  result = swift_release();
  if (!v2)
  {
    v6 = *(_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 136));
    v7 = *(id *)(v6 + 16);
    sub_1B144FAA0(v7);

    v8 = *(id *)(v6 + 24);
    sub_1B144FAA0(v8);

    sub_1B144FD44();
  }
  return result;
}

uint64_t sub_1B157CC84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  NSObject *v5;

  v3 = sub_1B14501B0();
  sub_1B144FA2C(v3);
  result = swift_release();
  if (!v1)
  {
    v5 = *(id *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 136)) + 24);
    sub_1B144FAA0(v5);

    sub_1B144FD44();
  }
  return result;
}

uint64_t sub_1B157CD3C(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = sub_1B14501B0();
  sub_1B144FA2C(v2);
  swift_release();
  v3 = *(id *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 136)) + 24);
  sub_1B144B184((uint64_t)v3);

  return sub_1B144B4F8(0);
}

void sub_1B157CDF0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned __int8 *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v23 = a1;
  v13 = a1;
  sub_1B13D19B8(0, (unint64_t *)&qword_1ED1839E0);
  if (swift_dynamicCast())
  {
    if (v22 == 1)
    {
      sub_1B15580A4(v20, v21, v22);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 48))(a6, a7);
      v15 = sub_1B13EEFB4(2, v14);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        BlueprintPipeline.modify<A>(with:completion:)(a3, (uint64_t)a4, a5, a6, a7, v16, v17, v18, v20, v21, v22, (uint64_t)v23, v24, v25, v26, v27, v28, v29, v30,
          v31);
    }
    else
    {
      sub_1B15580A4(v20, v21, v22);
    }
  }

  v20 = (uint64_t)a1;
  v19 = a1;
  sub_1B13DDB60(a4, a5, &v20);

}

uint64_t BlueprintPipeline.relayoutPromise()()
{
  sub_1B144B9A8(0, &qword_1ED17DB70);
  OUTLINED_FUNCTION_29_0();
  return sub_1B16B8A2C();
}

void sub_1B157CF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_retain();
  swift_retain();
  BlueprintPipeline.relayout(completion:)();
}

uint64_t sub_1B157CFE0()
{
  return swift_release();
}

void BlueprintPipeline.relayout(completion:)()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_29_24();
  MEMORY[0x1E0C80A78](v0, v0);
  swift_storeEnumTagMultiPayload();
  BlueprintPipeline.relayout(bookmark:completion:)();
}

uint64_t sub_1B157D060()
{
  uint64_t v0;

  return sub_1B140BB84(v0);
}

void BlueprintPipeline.relayout(bookmark:completion:)()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;

  OUTLINED_FUNCTION_6();
  v22[1] = v1;
  v22[2] = v2;
  v4 = v3;
  v5 = (_QWORD *)*v0;
  v6 = OUTLINED_FUNCTION_29_24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  v10 = (_QWORD *)((char *)v0 + v5[19]);
  v11 = *v10;
  v23 = v10[1];
  v12 = *(_QWORD *)((char *)v0 + v5[17]);
  v13 = *(void **)(v12 + 32);
  LOWORD(v24) = 257;
  v25 = v11;
  v26 = v23;
  v27 = (uint64_t)v13;
  v28 = 256;
  sub_1B16B9740();
  v22[3] = v13;
  v14 = sub_1B1450050(0x74756F79616C6572, 0xE800000000000000, (uint64_t)&v24);
  v22[0] = *(id *)(v12 + 24);
  sub_1B140B98C(v4, (uint64_t)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v5[10];
  v16[3] = v5[11];
  v16[4] = v5[12];
  v16[5] = v5[13];
  v16[6] = v14;
  sub_1B144E9F4((uint64_t)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v16 + v15);
  v17 = OUTLINED_FUNCTION_74_10();
  v18 = OUTLINED_FUNCTION_74_10();
  v19 = OUTLINED_FUNCTION_100_2();
  v20 = OUTLINED_FUNCTION_100_2();
  v21 = v22[0];
  OUTLINED_FUNCTION_116();
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  type metadata accessor for BlueprintPipelineProcessingResult();
}

void sub_1B157D220()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_117_8();

  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_116();
  v2 = (void *)sub_1B16B8918();
  sub_1B16B8990();
  OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_123();

  OUTLINED_FUNCTION_116();
  v3 = (void *)sub_1B16B8918();
  sub_1B16B8A08();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_123();

  v4 = (void *)sub_1B16B8120();
  v5 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_90_8(v5);
  OUTLINED_FUNCTION_83_8();
  sub_1B16B899C();
  OUTLINED_FUNCTION_58_0();

  swift_release();
  v6 = (void *)sub_1B16B8120();
  v7 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_90_8(v7);
  OUTLINED_FUNCTION_83_8();
  sub_1B16B89C0();

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_123();
  OUTLINED_FUNCTION_0_9();
  OUTLINED_FUNCTION_45();

  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_47();
}

void sub_1B157D384()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintModifierResult();
}

uint64_t sub_1B157D464(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;

  *(_QWORD *)(v6 - 160) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 152) = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v6 - 128) = v3;
  v7 = sub_1B14501B0();
  v8 = *(_QWORD *)(v6 - 72);
  sub_1B144FA2C(v7);
  swift_release();
  if (!v8)
  {
    v9 = *(id *)(*(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) + 24);
    sub_1B144FAA0(v9);

    v10 = *(_QWORD *)(v6 - 120);
    *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 144);
    *(_QWORD *)(v6 - 104) = v10;
    *(_QWORD *)(v6 - 96) = v5;
    *(_QWORD *)(v6 - 88) = v4;
    type metadata accessor for Blueprint();
  }
  return v2;
}

uint64_t sub_1B157D5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = sub_1B14501B0();
  sub_1B144FA2C(v1);
  result = swift_release();
  if (!v0)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    sub_1B144B604();
  }
  return result;
}

void sub_1B157D698(void *a1, uint64_t a2, void (*a3)(unsigned __int8 *), uint64_t a4)
{
  id v7;
  void *v8;

  v8 = a1;
  v7 = a1;
  sub_1B13DDB60(a3, a4, (uint64_t *)&v8);

}

uint64_t *BlueprintPipeline.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B13C076C((uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_23_25(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8));
  OUTLINED_FUNCTION_23_25(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8));
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t BlueprintPipeline.__deallocating_deinit()
{
  BlueprintPipeline.deinit();
  return swift_deallocClassInstance();
}

void sub_1B157D7C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  _QWORD v20[9];
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v24 = a1;
  v25 = a2;
  v3 = *v2;
  v22 = sub_1B16B9644();
  v26 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v4);
  v27 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B16B95D8();
  v7 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  v29 = v7;
  MEMORY[0x1E0C80A78](v6, v8);
  v20[6] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B16B9620();
  v20[8] = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v10);
  v20[7] = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B16B95E4();
  v20[5] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v13);
  v14 = *(_QWORD *)(v3 + 168);
  v23 = v2;
  v15 = (_QWORD *)((char *)v2 + v14);
  swift_beginAccess();
  v34 = *v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedConformanceWitness();
  aBlock = AssociatedTypeWitness;
  v31 = v17;
  v32 = AssociatedConformanceWitness;
  v33 = v19;
  type metadata accessor for BlueprintPipelineProcessor();
}

void sub_1B157E054()
{
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintModifierResult();
}

void sub_1B157E0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  MEMORY[0x1E0C80A78](a1, a2);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&a9 - v11, v9);
  sub_1B15487FC();
}

uint64_t sub_1B157E150()
{
  sub_1B16B9740();
  return sub_1B16B9740();
}

void sub_1B157E180()
{
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintPipelineUpdate();
}

void sub_1B157E21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(_QWORD, void (*)(), char *, _QWORD, uint64_t);
  uint64_t v24;

  v8 = *(_QWORD *)(a1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v24 - v10;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    *(_QWORD *)(v6 - 192) = a1;
    *(_QWORD *)(v6 - 184) = v5;
    *(_QWORD *)(v6 - 144) = v2;
    v12 = *(_QWORD *)(v6 + 40);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 40))(*(_QWORD *)(v6 - 128), v5, v12);
    (*(void (**)(char *, _QWORD, _QWORD))(v8 + 16))(v11, *(_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 192));
    v15 = (*(unsigned __int8 *)(v8 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v17 = (char *)swift_allocObject();
    v18 = *(_QWORD *)(v6 - 192);
    v19 = *(_QWORD *)(v6 - 184);
    *((_QWORD *)v17 + 2) = *(_QWORD *)(v6 - 168);
    *((_QWORD *)v17 + 3) = v19;
    *((_QWORD *)v17 + 4) = v3;
    *((_QWORD *)v17 + 5) = v4;
    *((_QWORD *)v17 + 6) = *(_QWORD *)(v6 - 176);
    *((_QWORD *)v17 + 7) = v12;
    v20 = *(_QWORD *)(v6 - 144);
    *((_QWORD *)v17 + 8) = *(_QWORD *)(v6 - 136);
    *((_QWORD *)v17 + 9) = v20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v15], v11, v18);
    v21 = &v17[v16];
    v22 = *(_QWORD *)(v6 - 152);
    *(_QWORD *)v21 = *(_QWORD *)(v6 - 160);
    *((_QWORD *)v21 + 1) = v22;
    v23 = *(void (**)(_QWORD, void (*)(), char *, _QWORD, uint64_t))(v12 + 48);
    swift_retain();
    swift_retain();
    v23(*(_QWORD *)(v6 - 128), sub_1B157FF1C, v17, *(_QWORD *)(v6 - 184), v12);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1B154F5F8();
    v13 = (void *)swift_allocError();
    *(_QWORD *)v14 = 0;
    *(_QWORD *)(v14 + 8) = 0;
    *(_BYTE *)(v14 + 16) = 2;
    swift_willThrow();
    (*(void (**)(void *))(v6 - 136))(v13);

  }
}

void sub_1B157E3EC()
{
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintPipelineUpdate.Action();
}

void sub_1B157E718()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 0;
  JUMPOUT(0x1B157E6F0);
}

uint64_t sub_1B157E720()
{
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B13D19B8(0, (unint64_t *)&qword_1ED1839E0);
  sub_1B16BA6B8();
  sub_1B1403674(6, 0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B157E7CC(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1B16B9740();
  return sub_1B1580020;
}

uint64_t sub_1B157E824(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  void (*v9)(_QWORD *);
  _QWORD v10[2];

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v7 = result;
    sub_1B16B9740();
    for (i = a3 + 40; ; i += 16)
    {
      v9 = *(void (**)(_QWORD *))(i - 8);
      v10[0] = v7;
      v10[1] = a2;
      swift_retain();
      v9(v10);
      if (v3)
        break;
      swift_release();
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B157E8CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = *a1;
  v6 = a1[1];
  v8 = (uint64_t *)(a3 + 16);
  if (*((_BYTE *)a1 + 32))
  {
    if (*((_BYTE *)a1 + 32) == 1)
    {
      v11 = a1[2];
      v10 = a1[3];
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v7;
      *(_QWORD *)(v12 + 24) = v6;
      swift_beginAccess();
      swift_retain_n();
      swift_retain();
      sub_1B1481CF0();
      v13 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
      sub_1B1481D80(v13);
      v14 = *(_QWORD *)(a4 + 16);
      *(_QWORD *)(v14 + 16) = v13 + 1;
      v15 = v14 + 16 * v13;
      *(_QWORD *)(v15 + 32) = sub_1B1580FD8;
      *(_QWORD *)(v15 + 40) = v12;
      swift_endAccess();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v11;
      *(_QWORD *)(v16 + 24) = v10;
      swift_beginAccess();
      swift_retain();
      sub_1B13FFB14();
      v17 = *(_QWORD *)(*v8 + 16);
      sub_1B13FFB08(v17);
      v18 = *v8;
      *(_QWORD *)(v18 + 16) = v17 + 1;
      v19 = v18 + 16 * v17;
      *(_QWORD *)(v19 + 32) = sub_1B140AA30;
      *(_QWORD *)(v19 + 40) = v16;
      swift_endAccess();
      swift_release();
      swift_release();
    }
    else
    {
      swift_beginAccess();
      *(_BYTE *)(a2 + 16) = 0;
    }
  }
  else
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v7;
    *(_QWORD *)(v20 + 24) = v6;
    swift_beginAccess();
    swift_retain();
    sub_1B13FFB14();
    v21 = *(_QWORD *)(*v8 + 16);
    sub_1B13FFB08(v21);
    v22 = *v8;
    *(_QWORD *)(v22 + 16) = v21 + 1;
    v23 = v22 + 16 * v21;
    *(_QWORD *)(v23 + 32) = sub_1B149DB30;
    *(_QWORD *)(v23 + 40) = v20;
    swift_endAccess();
  }
  dispatch_group_leave(a5);
}

void sub_1B157EAD4()
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1B16B9740();
  type metadata accessor for BlueprintPipelineProcessor();
}

uint64_t sub_1B157ECC8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v5[2];

  v5[0] = a1;
  v5[1] = a2;
  sub_1B16B9740();
  sub_1B16B9740();
  a3(v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B157ED24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v29 = a7;
  v30 = a8;
  v34 = a5;
  v28 = a3;
  v11 = *a6;
  v12 = sub_1B16B95D8();
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B16B9620();
  v31 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  sub_1B1404978();
  swift_retain();
  v21 = (void *)sub_1B16BA0DC();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v11 + 80);
  *(_OWORD *)(v23 + 24) = *(_OWORD *)(v11 + 88);
  *(_QWORD *)(v23 + 40) = *(_QWORD *)(v11 + 104);
  *(_QWORD *)(v23 + 48) = v22;
  v24 = v29;
  *(_QWORD *)(v23 + 56) = v28;
  *(_QWORD *)(v23 + 64) = a4;
  *(_QWORD *)(v23 + 72) = v24;
  *(_QWORD *)(v23 + 80) = sub_1B1580FF0;
  v25 = v30;
  *(_QWORD *)(v23 + 88) = v20;
  *(_QWORD *)(v23 + 96) = v25;
  aBlock[4] = sub_1B1581030;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = &block_descriptor_120;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B16B95F0();
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1B149AF00();
  sub_1B14049B4(0, (unint64_t *)&qword_1ED183708, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B149AF40();
  sub_1B16BA448();
  sub_1B16BA094();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v32);
  swift_release();
  return swift_release();
}

void sub_1B157EFC8(uint64_t a1, void (*a2)(void))
{
  void *v3;
  uint64_t v4;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    sub_1B16B9740();
    type metadata accessor for BlueprintPipelineProcessor();
  }
  sub_1B154F5F8();
  v3 = (void *)swift_allocError();
  *(_OWORD *)v4 = xmmword_1B16D2540;
  *(_BYTE *)(v4 + 16) = 2;
  a2();

}

uint64_t sub_1B157F24C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B157F280(uint64_t a1)
{
  return sub_1B13B6BA8(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1B157CC84);
}

uint64_t sub_1B157F29C(uint64_t a1)
{
  return sub_1B157CD3C(a1);
}

uint64_t sub_1B157F2B0()
{
  uint64_t v0;

  return sub_1B157CBB8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1B157F2D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B144B540(a1, a2, v2[4], v2[2], v2[3], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B144EB30);
}

uint64_t sub_1B157F2F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B157F318()
{
  sub_1B16BA154();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B157F33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_35_18();
  sub_1B157CDF0(v3, v4, v0 + v1, *(void (**)(unsigned __int8 *))(v0 + v2), *(_QWORD *)(v0 + v2 + 8), v5, v6);
}

void sub_1B157F374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B157CF78(a1, a2, a3, a4);
}

uint64_t sub_1B157F37C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  OUTLINED_FUNCTION_29_24();
  OUTLINED_FUNCTION_107_0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v0 = OUTLINED_FUNCTION_3_12();
      if (!OUTLINED_FUNCTION_76_9(v0))
      {
        v1 = OUTLINED_FUNCTION_106_4();
        goto LABEL_6;
      }
      break;
    case 1u:
      OUTLINED_FUNCTION_3_12();
      v1 = OUTLINED_FUNCTION_127_7();
LABEL_6:
      v2(v1);
      break;
    case 2u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      break;
    default:
      return OUTLINED_FUNCTION_6_0();
  }
  return OUTLINED_FUNCTION_6_0();
}

void sub_1B157F424()
{
  type metadata accessor for BlueprintBookmark();
  sub_1B157D384();
}

uint64_t sub_1B157F470()
{
  return sub_1B157D5C0();
}

uint64_t sub_1B157F488(uint64_t a1)
{
  return sub_1B157CD3C(a1);
}

void sub_1B157F494(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_51_13(a1, *(_QWORD *)(v8 + 24), a3, a4, a5, a6, a7, a8, v9, v10);
  OUTLINED_FUNCTION_7();
}

void sub_1B157F4C4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B157D698(a1, a2, *(void (**)(unsigned __int8 *))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1B157F4D4()
{
  return 32;
}

__n128 sub_1B157F4E0(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintPipelineError()
{
  return &type metadata for BlueprintPipelineError;
}

uint64_t method lookup function for BlueprintPipeline()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintPipeline.__allocating_init(blueprintProvider:integrator:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of BlueprintPipeline.__allocating_init(blueprintProvider:integrator:name:useDiffableDataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1B157F518()
{
  return sub_1B157E720();
}

void sub_1B157F520()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_29_4();
  v0 = OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_56_13(v0);
}

void sub_1B157F584(uint64_t a1)
{
  OUTLINED_FUNCTION_119_6(*(_QWORD *)(a1 - 8));
  OUTLINED_FUNCTION_78_3();
  OUTLINED_FUNCTION_36_14();
}

void sub_1B157F9CC()
{
  OUTLINED_FUNCTION_26_26();
  OUTLINED_FUNCTION_107_1();
  OUTLINED_FUNCTION_107_1();
  OUTLINED_FUNCTION_113_3();
}

void sub_1B157FA34()
{
  OUTLINED_FUNCTION_35_18();
  sub_1B157E180();
}

void sub_1B157FA78()
{
  OUTLINED_FUNCTION_18_3();
}

void sub_1B157FA80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_29_4();
  v0 = OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_56_13(v0);
}

void sub_1B157FAE4(uint64_t a1)
{
  OUTLINED_FUNCTION_119_6(*(_QWORD *)(a1 - 8));
  OUTLINED_FUNCTION_198_0();
  OUTLINED_FUNCTION_36_14();
}

void sub_1B157FF1C()
{
  OUTLINED_FUNCTION_26_26();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_113_3();
}

void sub_1B157FF90()
{
  OUTLINED_FUNCTION_35_18();
  sub_1B157E3EC();
}

void sub_1B157FFC8()
{
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_1B157FFD0(uint64_t a1)
{
  destroy for BlueprintAnimation(a1);
  return a1;
}

uint64_t sub_1B1580004()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B1580020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B157E824(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1B1580038()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_83_8();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_29_4();
  type metadata accessor for Blueprint();
}

void sub_1B15800D0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v2 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  OUTLINED_FUNCTION_107_0();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v2 + 40))
    __swift_destroy_boxed_opaque_existential_1(v1 + v2 + 16);
  type metadata accessor for BlueprintSection();
}

void sub_1B1580140()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B1580150()
{
  OUTLINED_FUNCTION_20_2();
}

void sub_1B1580160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B16B848C();
  OUTLINED_FUNCTION_56_0(v2);
  type metadata accessor for BlueprintItem(255, v0, v1, v3);
  OUTLINED_FUNCTION_20_2();
}

void sub_1B15801A4()
{
  OUTLINED_FUNCTION_9_9();
}

void sub_1B15801B4()
{
  OUTLINED_FUNCTION_9_9();
}

uint64_t sub_1B15801C4()
{
  uint64_t v0;

  v0 = sub_1B16B875C();
  OUTLINED_FUNCTION_56_0(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B1580228()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_83_8();
  OUTLINED_FUNCTION_107_1();
  OUTLINED_FUNCTION_107_1();
  OUTLINED_FUNCTION_62_11();
}

void sub_1B1580298(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  v2 = v1
     + ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80));
  switch(OUTLINED_FUNCTION_123_7())
  {
    case 0u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 1u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 2u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 3u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 4u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 5u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 6u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 7u:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 8u:
    case 0xCu:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    case 9u:
      OUTLINED_FUNCTION_29_24();
      switch(OUTLINED_FUNCTION_123_7())
      {
        case 0u:
          v3 = OUTLINED_FUNCTION_3_12();
          if (!OUTLINED_FUNCTION_76_9(v3))
          {
            v4 = OUTLINED_FUNCTION_106_4();
            goto LABEL_38;
          }
          break;
        case 1u:
          OUTLINED_FUNCTION_3_12();
          v4 = OUTLINED_FUNCTION_127_7();
LABEL_38:
          v5(v4);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          goto LABEL_39;
      }
      break;
    case 0xAu:

      break;
    case 0xBu:
      OUTLINED_FUNCTION_10_47();
      if (*(_QWORD *)(v2 + 40))
        OUTLINED_FUNCTION_25_29();
      OUTLINED_FUNCTION_6_72();
    default:
      break;
  }
LABEL_39:
  swift_deallocObject();
  OUTLINED_FUNCTION_47();
}

void sub_1B1580D80()
{
  OUTLINED_FUNCTION_26_26();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_62_11();
}

void sub_1B1580E00()
{
  sub_1B157E054();
}

void sub_1B1580E38()
{
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_1B1580E40(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 64))(*a1, a1[1]);
}

void sub_1B1580E70()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_1ED186010)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1B14049B4(255, &qword_1ED183768, 255, (uint64_t (*)(uint64_t))sub_1B13FFB34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B14049B4(255, &qword_1ED186008, 255, (uint64_t (*)(uint64_t))sub_1B14D5CEC, v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED186010);
  }
}

uint64_t sub_1B1580F1C()
{
  return swift_deallocObject();
}

uint64_t sub_1B1580F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1B157ED24(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1B1580F38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

void sub_1B1580F54()
{
  sub_1B16BA154();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B1580F70()
{
  sub_1B157EAD4();
}

uint64_t sub_1B1580F7C()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_82();
  swift_release();

  OUTLINED_FUNCTION_30_1();
  return swift_deallocObject();
}

void sub_1B1580FAC(uint64_t *a1)
{
  uint64_t v1;

  sub_1B157E8CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_1B1580FB8()
{
  OUTLINED_FUNCTION_82();
  return swift_deallocObject();
}

uint64_t sub_1B1580FD8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B15F5078(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_1B1580FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B157ECC8(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t sub_1B1580FF8()
{
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_78_3();
  OUTLINED_FUNCTION_198_0();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B1581030()
{
  uint64_t v0;

  sub_1B157EFC8(*(_QWORD *)(v0 + 48), *(void (**)(void))(v0 + 56));
}

void sub_1B1581070(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_1B1581080()
{
  OUTLINED_FUNCTION_78_3();
  return swift_deallocObject();
}

uint64_t sub_1B15810A0()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B15810BC()
{
  OUTLINED_FUNCTION_198_0();
  return swift_deallocObject();
}

uint64_t objectdestroy_122Tm()
{
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_11_27();
  OUTLINED_FUNCTION_30_1();
  return swift_deallocObject();
}

uint64_t sub_1B158114C(uint64_t a1, uint64_t a2)
{
  return sub_1B13B6220(a1, a2);
}

uint64_t sub_1B1581160(uint64_t a1, uint64_t a2)
{
  return sub_1B157F2D0(a1, a2);
}

void OUTLINED_FUNCTION_113_3()
{
  type metadata accessor for BlueprintPipelineUpdate();
}

uint64_t OUTLINED_FUNCTION_118_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = a1;
  return v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
}

uint64_t OUTLINED_FUNCTION_120_6()
{
  return type metadata accessor for BlueprintPipelineToken();
}

dispatch_group_t OUTLINED_FUNCTION_121_6()
{
  return dispatch_group_create();
}

uint64_t OUTLINED_FUNCTION_123_7()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_125_5()
{
  return sub_1B16B8A08();
}

uint64_t OUTLINED_FUNCTION_127_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_129_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_130_8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_134_5()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1B1581218()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  sub_1B15069EC();
  sub_1B1581360();
  do
  {
    v2 = v1;
    if ((swift_dynamicCast() & 1) == 0)
    {
      v9 = 0;
      v7 = 0u;
      v8 = 0u;
LABEL_7:
      sub_1B15813B4((uint64_t)&v7);
      goto LABEL_8;
    }
    if (!*((_QWORD *)&v8 + 1))
      goto LABEL_7;
    sub_1B13C06D0(&v7, (uint64_t)v10);
    v3 = v11;
    v4 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    if ((v5 & 1) != 0)
    {

      return 1;
    }
LABEL_8:
    v1 = objc_msgSend(v2, sel_superview);

  }
  while (v1);
  return 0;
}

uint64_t ContextMenuCancellable.shouldCancelContextMenu.getter()
{
  return 1;
}

uint64_t dispatch thunk of ContextMenuCancellable.shouldCancelContextMenu.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B158133C()
{
  return OUTLINED_FUNCTION_105() & 1;
}

unint64_t sub_1B1581360()
{
  unint64_t result;

  result = qword_1ED17D720;
  if (!qword_1ED17D720)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED17D720);
  }
  return result;
}

uint64_t sub_1B15813B4(uint64_t a1)
{
  uint64_t v2;

  sub_1B15813F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B15813F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED17DA18)
  {
    sub_1B1581360();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED17DA18);
  }
}

void static BlueprintModifierResult.reload<A, B>(blueprint:)()
{
  sub_1B15815BC();
}

void static BlueprintModifierResult.reloadWithAnimation<A, B>(blueprint:animation:)()
{
  OUTLINED_FUNCTION_3_71();
}

void sub_1B15814B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_44_2();
  v13 = v10 + *(int *)(OUTLINED_FUNCTION_15_32() + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v10, v11, a1);
  swift_storeEnumTagMultiPayload();
  sub_1B1581554(a10, v13);
  type metadata accessor for BlueprintModifierResult();
}

void sub_1B158153C()
{
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1B1581554(__int128 *a1, uint64_t a2)
{
  initializeWithCopy for BlueprintAnimation(a2, a1);
  return a2;
}

void static BlueprintModifierResult.reloadNoAnimation<A, B>(blueprint:)()
{
  sub_1B15815BC();
}

void sub_1B15815BC()
{
  OUTLINED_FUNCTION_3_71();
}

void sub_1B1581608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_84();
  v3 = OUTLINED_FUNCTION_40_18();
  v4(v3, v1, a1);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_23_29();
}

void sub_1B1581668()
{
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_60();
}

void sub_1B1581690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  if ((OUTLINED_FUNCTION_6_73(va) & 1) != 0)
    OUTLINED_FUNCTION_8_54();
  OUTLINED_FUNCTION_3_71();
}

void sub_1B15816C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_10_48();
  v1 = OUTLINED_FUNCTION_1_95();
  OUTLINED_FUNCTION_27_29(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_26_27();
  type metadata accessor for BlueprintModifierResult();
}

void sub_1B1581714()
{
  JUMPOUT(0x1B158171CLL);
}

void static BlueprintModifierResult.changesWithAnimation<A, B>(newBlueprint:oldBlueprint:bookmark:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_33_18(a1, a2, a3, a4);
  OUTLINED_FUNCTION_43_16();
}

{
  OUTLINED_FUNCTION_33_18(a1, a2, a3, a4);
  - infix<A, B>(_:_:)();
}

void sub_1B1581764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_29_25();
  if ((v5 & 1) != 0)
  {
    *(_QWORD *)(v4 - 152) = v1;
    *(_QWORD *)(v4 - 144) = v0;
    *(_QWORD *)(v4 - 136) = v3;
    *(_QWORD *)(v4 - 128) = v2;
    OUTLINED_FUNCTION_8_54();
  }
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_13_40();
  *(_QWORD *)(v7 - 48) = *(_QWORD *)"blueprint diff bookmark animation ";
  strcpy((char *)(v7 - 38), "diff bookmark animation ");
  *(_QWORD *)(v4 - 152) = v1;
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v2;
  OUTLINED_FUNCTION_3_71();
}

void sub_1B15817EC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  *(_QWORD *)(v1 - 144) = OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  *(_QWORD *)(v1 - 136) = OUTLINED_FUNCTION_44_2();
  *(_QWORD *)(v1 - 128) = &type metadata for BlueprintAnimation;
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_12_41();
}

void sub_1B1581824(uint64_t a1)
{
  OUTLINED_FUNCTION_30_26(a1);
  OUTLINED_FUNCTION_44_14();
  OUTLINED_FUNCTION_46_13();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_38_19();
}

void sub_1B1581894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_29_25();
  if ((v5 & 1) != 0)
  {
    *(_QWORD *)(v4 - 152) = v1;
    *(_QWORD *)(v4 - 144) = v0;
    *(_QWORD *)(v4 - 136) = v3;
    *(_QWORD *)(v4 - 128) = v2;
    OUTLINED_FUNCTION_8_54();
  }
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_13_40();
  *(_QWORD *)(v7 - 48) = *(_QWORD *)"blueprint diff bookmark animation ";
  strcpy((char *)(v7 - 38), "diff bookmark animation ");
  *(_QWORD *)(v4 - 152) = v1;
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v2;
  OUTLINED_FUNCTION_3_71();
}

void sub_1B158191C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  *(_QWORD *)(v1 - 144) = OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  *(_QWORD *)(v1 - 136) = OUTLINED_FUNCTION_44_2();
  *(_QWORD *)(v1 - 128) = &type metadata for BlueprintAnimation;
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_12_41();
}

void sub_1B1581954(uint64_t a1)
{
  OUTLINED_FUNCTION_30_26(a1);
  OUTLINED_FUNCTION_44_14();
  OUTLINED_FUNCTION_46_13();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_38_19();
}

void sub_1B1581998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  if ((OUTLINED_FUNCTION_6_73(va) & 1) != 0)
    OUTLINED_FUNCTION_8_54();
  OUTLINED_FUNCTION_3_71();
}

void sub_1B15819CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_10_48();
  v1 = OUTLINED_FUNCTION_1_95();
  OUTLINED_FUNCTION_27_29(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_26_27();
  type metadata accessor for BlueprintModifierResult();
}

void sub_1B1581A1C()
{
  JUMPOUT(0x1B1581A24);
}

void static BlueprintModifierResult.viewAction<A, B>(newBlueprint:oldBlueprint:response:)()
{
  OUTLINED_FUNCTION_3_71();
}

void sub_1B1581A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  OUTLINED_FUNCTION_37_18();
  OUTLINED_FUNCTION_15_32();
  v3 = OUTLINED_FUNCTION_40_18();
  v4(v3, v1, a1);
  OUTLINED_FUNCTION_43_16();
}

void sub_1B1581AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_23_29();
}

void sub_1B1581B08()
{
  swift_storeEnumTagMultiPayload();
  swift_retain();
  OUTLINED_FUNCTION_20();
}

void static BlueprintModifierResult.viewActionWithAnimation<A, B>(newBlueprint:oldBlueprint:response:animation:)()
{
  OUTLINED_FUNCTION_3_71();
}

void sub_1B1581BB8(uint64_t a1)
{
  OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  OUTLINED_FUNCTION_37_18();
  OUTLINED_FUNCTION_24_24();
  type metadata accessor for Blueprint();
}

void sub_1B1581C24()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);

  v1 = OUTLINED_FUNCTION_40_18();
  v2(v1, v0);
  - infix<A, B>(_:_:)();
}

void sub_1B1581C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 *a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v12 + v14) = v11;
  sub_1B1581554(a11, v13);
  OUTLINED_FUNCTION_23_29();
}

uint64_t sub_1B1581C78()
{
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

void static BlueprintModifierResult.moved(newBlueprint:oldBlueprint:)()
{
  OUTLINED_FUNCTION_17_31();
  - infix<A, B>(_:_:)();
}

void sub_1B1581CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;

  v18 = a17;
  v19 = a18;
  __swift_project_boxed_opaque_existential_1(&a14, a17);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 96))(v18, v19) & 1) != 0)
    OUTLINED_FUNCTION_8_54();
  OUTLINED_FUNCTION_3_71();
}

void sub_1B1581D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  va_list va;

  va_start(va, a6);
  OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  v9 = v6 + *(int *)(OUTLINED_FUNCTION_16_41() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v6, v7, a1);
  sub_1B13B4DC0((uint64_t)va, v9);
  type metadata accessor for BlueprintModifierResult();
}

void sub_1B1581D90()
{
  JUMPOUT(0x1B1581D98);
}

void static BlueprintModifierResult.applySnapshot(newBlueprint:oldBlueprint:response:animated:bookmark:)()
{
  OUTLINED_FUNCTION_3_71();
}

void sub_1B1581E4C(uint64_t a1)
{
  OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  sub_1B13ECA5C(255, &qword_1EEF331F8, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_24_24();
  type metadata accessor for Blueprint();
}

void sub_1B1581ED8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);

  v1 = OUTLINED_FUNCTION_40_18();
  v2(v1, v0);
  - infix<A, B>(_:_:)();
}

void sub_1B1581F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v15 + v17) = a11;
  *(_BYTE *)(v15 + v14) = a13;
  sub_1B140B98C(a14, v16);
  OUTLINED_FUNCTION_23_29();
}

uint64_t sub_1B1581F38()
{
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

void static BlueprintModifierResult.applyReloadSnapshot(newBlueprint:oldBlueprint:)()
{
  OUTLINED_FUNCTION_3_71();
}

void sub_1B1581FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_69(a1, qword_1ED17F018);
  OUTLINED_FUNCTION_84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
  - infix<A, B>(_:_:)();
}

void sub_1B1582024()
{
  type metadata accessor for BlueprintModifierResult();
}

void sub_1B1582038()
{
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_60();
}

uint64_t sub_1B1582050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (uint64_t)v9 + ((v6 + 16) & ~(unint64_t)v6);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        v8 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v8)
        {
          *(_QWORD *)(a1 + 40) = v8;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
        }
        else
        {
          v35 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v35;
        }
        type metadata accessor for Blueprint();
      case 1u:
        v10 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v10;
        v11 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v11)
        {
          *(_QWORD *)(a1 + 40) = v11;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16, v11);
        }
        else
        {
          v36 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v36;
        }
        type metadata accessor for Blueprint();
      case 2u:
        v12 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v12;
        v13 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v13)
        {
          *(_QWORD *)(a1 + 40) = v13;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 16, a2 + 16, v13);
        }
        else
        {
          v37 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v37;
        }
        type metadata accessor for Blueprint();
      case 3u:
        v14 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v14;
        v15 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v15)
        {
          *(_QWORD *)(a1 + 40) = v15;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))(a1 + 16, a2 + 16, v15);
        }
        else
        {
          v38 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v38;
        }
        type metadata accessor for Blueprint();
      case 4u:
        v16 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v16;
        v17 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v17)
        {
          *(_QWORD *)(a1 + 40) = v17;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))(a1 + 16, a2 + 16, v17);
        }
        else
        {
          v39 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v39;
        }
        type metadata accessor for Blueprint();
      case 5u:
        v18 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v18;
        v19 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v19)
        {
          *(_QWORD *)(a1 + 40) = v19;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))(a1 + 16, a2 + 16, v19);
        }
        else
        {
          v40 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v40;
        }
        type metadata accessor for Blueprint();
      case 6u:
        v20 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v20;
        v21 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v21)
        {
          *(_QWORD *)(a1 + 40) = v21;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))(a1 + 16, a2 + 16, v21);
        }
        else
        {
          v41 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v41;
        }
        type metadata accessor for Blueprint();
      case 7u:
        v22 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v22;
        v23 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v23)
        {
          *(_QWORD *)(a1 + 40) = v23;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))(a1 + 16, a2 + 16, v23);
        }
        else
        {
          v42 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v42;
        }
        type metadata accessor for Blueprint();
      case 8u:
        v24 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v24;
        v25 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v25)
        {
          *(_QWORD *)(a1 + 40) = v25;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 16, a2 + 16, v25);
        }
        else
        {
          v43 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v43;
        }
        type metadata accessor for Blueprint();
      case 9u:
        v26 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v27 = sub_1B16B7D60();
            if (__swift_getEnumTagSinglePayload(a2, 1, v27))
            {
              sub_1B13ECA5C(0, (unint64_t *)&qword_1ED17E140, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
              memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
              __swift_storeEnumTagSinglePayload(a1, 0, 1, v27);
            }
            goto LABEL_58;
          case 1u:
            v46 = sub_1B16B7D60();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(a1, a2, v46);
            sub_1B140E774();
            *(_OWORD *)(a1 + *(int *)(v47 + 48)) = *(_OWORD *)(a2 + *(int *)(v47 + 48));
            goto LABEL_58;
          case 2u:
          case 3u:
            v48 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v48;
            *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
            sub_1B16B9740();
            goto LABEL_58;
          case 4u:
            v49 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v49;
            sub_1B16B9740();
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
            break;
        }
        goto LABEL_59;
      case 0xAu:
        v29 = *(void **)a2;
        v30 = v29;
        *(_QWORD *)a1 = v29;
LABEL_59:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v31 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v31;
        v32 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v32)
        {
          *(_QWORD *)(a1 + 40) = v32;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))(a1 + 16, a2 + 16, v32);
        }
        else
        {
          v44 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v44;
        }
        type metadata accessor for Blueprint();
      case 0xCu:
        v33 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v33;
        v34 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v34)
        {
          *(_QWORD *)(a1 + 40) = v34;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8))(a1 + 16, a2 + 16, v34);
        }
        else
        {
          v45 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v45;
        }
        type metadata accessor for Blueprint();
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B1584530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v6 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v6)
        {
          *(_QWORD *)(a1 + 40) = v6;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16, v6);
        }
        else
        {
          v22 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v22;
        }
        type metadata accessor for Blueprint();
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v7 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v7)
        {
          *(_QWORD *)(a1 + 40) = v7;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16, v7);
        }
        else
        {
          v23 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v23;
        }
        type metadata accessor for Blueprint();
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v8 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v8)
        {
          *(_QWORD *)(a1 + 40) = v8;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
        }
        else
        {
          v24 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v24;
        }
        type metadata accessor for Blueprint();
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v9 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v9)
        {
          *(_QWORD *)(a1 + 40) = v9;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
        }
        else
        {
          v25 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v25;
        }
        type metadata accessor for Blueprint();
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v10 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v10)
        {
          *(_QWORD *)(a1 + 40) = v10;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16, v10);
        }
        else
        {
          v26 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v26;
        }
        type metadata accessor for Blueprint();
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v11 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v11)
        {
          *(_QWORD *)(a1 + 40) = v11;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16, v11);
        }
        else
        {
          v27 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v27;
        }
        type metadata accessor for Blueprint();
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v12 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v12)
        {
          *(_QWORD *)(a1 + 40) = v12;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 16, a2 + 16, v12);
        }
        else
        {
          v28 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v28;
        }
        type metadata accessor for Blueprint();
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v13 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v13)
        {
          *(_QWORD *)(a1 + 40) = v13;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 16, a2 + 16, v13);
        }
        else
        {
          v29 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v29;
        }
        type metadata accessor for Blueprint();
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v14 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v14)
        {
          *(_QWORD *)(a1 + 40) = v14;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))(a1 + 16, a2 + 16, v14);
        }
        else
        {
          v30 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v30;
        }
        type metadata accessor for Blueprint();
      case 9u:
        v15 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v16 = sub_1B16B7D60();
            if (__swift_getEnumTagSinglePayload(a2, 1, v16))
            {
              sub_1B13ECA5C(0, (unint64_t *)&qword_1ED17E140, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
              memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
              __swift_storeEnumTagSinglePayload(a1, 0, 1, v16);
            }
            goto LABEL_57;
          case 1u:
            v33 = sub_1B16B7D60();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
            sub_1B140E774();
            *(_OWORD *)(a1 + *(int *)(v34 + 48)) = *(_OWORD *)(a2 + *(int *)(v34 + 48));
            goto LABEL_57;
          case 2u:
          case 3u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
            sub_1B16B9740();
            goto LABEL_57;
          case 4u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            sub_1B16B9740();
LABEL_57:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        goto LABEL_58;
      case 0xAu:
        v18 = *(void **)a2;
        v19 = v18;
        *(_QWORD *)a1 = v18;
LABEL_58:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v20 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v20)
        {
          *(_QWORD *)(a1 + 40) = v20;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))(a1 + 16, a2 + 16, v20);
        }
        else
        {
          v31 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v31;
        }
        type metadata accessor for Blueprint();
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v21 = *(_QWORD *)(a2 + 40);
        sub_1B16B9740();
        if (v21)
        {
          *(_QWORD *)(a1 + 40) = v21;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))(a1 + 16, a2 + 16, v21);
        }
        else
        {
          v32 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v32;
        }
        type metadata accessor for Blueprint();
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1B1586B38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 1u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 2u:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 3u:
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 4u:
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 5u:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 6u:
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 7u:
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 8u:
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 9u:
      v17 = type metadata accessor for BlueprintBookmark();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v21 = sub_1B16B7D60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        sub_1B140E774();
        *(_OWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 48));
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_22;
        }
        v19 = sub_1B16B7D60();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v19))
        {
          sub_1B13ECA5C(0, (unint64_t *)&qword_1ED17E140, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v19);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xBu:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    case 0xCu:
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      a1[2] = a2[2];
      type metadata accessor for Blueprint();
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_OWORD *sub_1B15888E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 1u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 2u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 3u:
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 4u:
        v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 5u:
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 6u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 7u:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 8u:
        v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 9u:
        v17 = type metadata accessor for BlueprintBookmark();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v21 = sub_1B16B7D60();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
          sub_1B140E774();
          *(_OWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 48));
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            goto LABEL_23;
          }
          v19 = sub_1B16B7D60();
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v19))
          {
            sub_1B13ECA5C(0, (unint64_t *)&qword_1ED17E140, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          }
          else
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v19);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      case 0xCu:
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        a1[2] = a2[2];
        type metadata accessor for Blueprint();
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1B158A648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_0_116();
  v12 = OUTLINED_FUNCTION_25();
  v13 = (uint64_t *)OUTLINED_FUNCTION_1_96();
  sub_1B158A728(v13, v14, v15, v16, v17, v18, v19, a8, v21, v22, a11);
  return v12;
}

uint64_t sub_1B158A6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v21;
  uint64_t v22;

  OUTLINED_FUNCTION_0_116();
  v12 = OUTLINED_FUNCTION_25();
  v13 = (uint64_t *)OUTLINED_FUNCTION_1_96();
  sub_1B158AE90(v13, v14, v15, v16, v17, v18, v19, a8, v21, v22, a11, a12);
  return v12;
}

void sub_1B158A728(uint64_t *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v38[5];
  char v39;
  char v40;

  v16 = OUTLINED_FUNCTION_9_55(a1);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  OUTLINED_FUNCTION_23_5();
  v19 = *a4;
  v20 = *(void **)a5;
  v34 = *a8;
  v33 = *((_BYTE *)a8 + 8);
  LOBYTE(a5) = *(_BYTE *)(a5 + 8);
  sub_1B13F279C(0, v21, v22, v23);
  OUTLINED_FUNCTION_13_41((uint64_t)objc_msgSend(objc_allocWithZone(v24), sel_init));
  v25 = v20;
  v31 = v20;
  sub_1B1494B94(v20, a5);
  sub_1B16B7BD4();
  v26 = sub_1B16B7BBC();
  v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v16);
  v38[0] = v26;
  v38[1] = v28;
  v38[2] = a2;
  v38[3] = a3;
  v38[4] = v25;
  v39 = a5;
  v40 = v19;
  OUTLINED_FUNCTION_3_72(MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_7_58();
  v29 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_30_0();
  v30 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v30 + 16) = a10;
  *(_QWORD *)(v30 + 24) = a11;
  *(_QWORD *)(v30 + 32) = v29;
  *(_QWORD *)(v30 + 40) = a2;
  *(_QWORD *)(v30 + 48) = a3;
  *(_QWORD *)(v30 + 56) = v31;
  *(_BYTE *)(v30 + 64) = a5;
  *(_BYTE *)(v30 + 65) = v19;
  *(_QWORD *)(v30 + 72) = v35;
  *(_QWORD *)(v30 + 80) = a6;
  *(_QWORD *)(v30 + 88) = a7;
  *(_QWORD *)(v30 + 96) = v34;
  *(_BYTE *)(v30 + 104) = v33;
  sub_1B16B9C68();
  OUTLINED_FUNCTION_0();
  swift_retain();
  swift_retain();
  sub_1B16B82E8();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_6_74();
  OUTLINED_FUNCTION_11_42();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_5_70();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  OUTLINED_FUNCTION_47();
}

void sub_1B158A92C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t *v47;
  uint64_t v48;
  int v49;
  void *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[5];
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  _QWORD v60[8];

  v54 = sub_1B16B7BE0();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54, v21);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v26 = Strong;
    v48 = a4;
    v50 = a5;
    v46 = a12;
    v45 = a11;
    v52 = a3;
    v49 = a6;
    v51 = a7 & 1;
    v55[0] = v24;
    sub_1B1494B94(a5, a6);
    v27 = sub_1B16B9C68();
    MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF38], v27);
    v28 = sub_1B16B9A34();
    v47 = &v44;
    v55[0] = v60[0];
    v30 = MEMORY[0x1E0C80A78](v28, v29);
    *(&v44 - 8) = a13;
    *(&v44 - 7) = a14;
    *(&v44 - 6) = a8;
    *(&v44 - 5) = a9;
    v31 = v45;
    *(&v44 - 4) = a10;
    *(&v44 - 3) = v31;
    *((_BYTE *)&v44 - 16) = v46 & 1;
    MEMORY[0x1E0C80A78](v30, v32);
    *(&v44 - 4) = a13;
    *(&v44 - 3) = a14;
    *(&v44 - 2) = (uint64_t)sub_1B158B92C;
    *(&v44 - 1) = v33;
    v34 = sub_1B16BA760();
    v35 = sub_1B1494488();
    v36 = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DECC68], v34);
    v38 = sub_1B1494088((uint64_t)sub_1B158B95C, (uint64_t)(&v44 - 6), v34, v35, MEMORY[0x1E0DEDCE8], v36, MEMORY[0x1E0DEDD18], v37);
    swift_bridgeObjectRelease();
    v39 = v48;
    sub_1B16B9740();
    sub_1B16B7BD4();
    v40 = sub_1B16B7BBC();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v54);
    v55[0] = v40;
    v55[1] = v42;
    v55[2] = v52;
    v55[3] = v39;
    v55[4] = v50;
    v56 = v49;
    v57 = v51;
    v58 = v38;
    v59 = 1;
    sub_1B158B6E4((uint64_t)v55, (uint64_t)v60);
    swift_beginAccess();
    sub_1B158B7F4((uint64_t)v60, v26 + 24);
    swift_endAccess();
    v43 = *(id *)(v26 + 16);
    _s5TeaUI6ActionC7triggeryyF_0();
    swift_release();

  }
}

void sub_1B158AC64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, char a6@<W6>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v13 = *(_QWORD *)(*(_QWORD *)a3 + 88);
  v14 = sub_1B16BA328();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v21 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))((char *)&v21 - v16, a2, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v13);
  a4(a2);
  v18 = 0;
  v19 = 0;
  v20 = 0;
  if ((a6 & 1) != 0)
    goto LABEL_6;
  if (!__OFADD__(a1, 1))
  {
    if (a1 + 1 > 9)
    {
      v18 = 0;
      v19 = 0;
      v20 = 0;
    }
    else
    {
      v22 = a1 + 1;
      v18 = sub_1B16BA8B0();
      v20 = a5;
    }
LABEL_6:
    v22 = v18;
    v23 = v19;
    v24 = v20;
    v21 = 0;
    a7[3] = (uint64_t)&type metadata for MenuItem;
    a7[4] = (uint64_t)&protocol witness table for MenuItem;
    *a7 = swift_allocObject();
    swift_retain();
    MenuItem.init<A>(command:context:title:key:alternate:)();
    return;
  }
  __break(1u);
}

uint64_t sub_1B158ADF0(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v4 = *(_QWORD *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

void sub_1B158AE90(uint64_t *a1, uint64_t a2, uint64_t a3, char *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD v38[5];
  char v39;
  char v40;

  v17 = OUTLINED_FUNCTION_9_55(a1);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  OUTLINED_FUNCTION_23_5();
  v34 = *a4;
  v20 = *a5;
  v21 = *(void **)a6;
  v33 = *a9;
  v32 = *((_BYTE *)a9 + 8);
  LOBYTE(a5) = *(_BYTE *)(a6 + 8);
  sub_1B13F279C(0, v22, v23, v24);
  OUTLINED_FUNCTION_13_41((uint64_t)objc_msgSend(objc_allocWithZone(v25), sel_init));
  sub_1B1494B94(v21, a5);
  sub_1B16B7BD4();
  v26 = sub_1B16B7BBC();
  v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v12, v17);
  v38[0] = v26;
  v38[1] = v28;
  v38[2] = a2;
  v38[3] = a3;
  v38[4] = v21;
  v39 = (char)a5;
  v40 = v20;
  OUTLINED_FUNCTION_3_72(MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_7_58();
  v29 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_30_0();
  v30 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v30 + 16) = a11;
  *(_QWORD *)(v30 + 24) = a12;
  *(_QWORD *)(v30 + 32) = v29;
  *(_QWORD *)(v30 + 40) = a2;
  *(_QWORD *)(v30 + 48) = a3;
  *(_QWORD *)(v30 + 56) = v21;
  *(_BYTE *)(v30 + 64) = (_BYTE)a5;
  *(_BYTE *)(v30 + 65) = v20;
  *(_QWORD *)(v30 + 72) = v35;
  *(_QWORD *)(v30 + 80) = a7;
  *(_QWORD *)(v30 + 88) = a8;
  *(_BYTE *)(v30 + 96) = v34;
  *(_QWORD *)(v30 + 104) = v33;
  *(_BYTE *)(v30 + 112) = v32;
  sub_1B16B9C68();
  OUTLINED_FUNCTION_0();
  swift_retain();
  swift_retain();
  sub_1B16B82E8();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_6_74();
  OUTLINED_FUNCTION_11_42();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_5_70();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  OUTLINED_FUNCTION_47();
}

void sub_1B158B0A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t *v52;
  uint64_t v53;
  int v54;
  void *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[5];
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  _QWORD v65[8];

  v59 = a3;
  v21 = *a8;
  v58 = sub_1B16B7BE0();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58, v22);
  v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v27 = Strong;
    v55 = a5;
    v53 = a4;
    v51 = a13;
    v50 = a12;
    v49 = a10;
    v48 = a9;
    v54 = a6;
    v56 = a7 & 1;
    v60[0] = v25;
    sub_1B1494B94(a5, a6);
    v28 = sub_1B16B9C68();
    MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEAF38], v28);
    v29 = sub_1B16B9A34();
    v52 = &v47;
    v60[0] = v65[0];
    v31 = MEMORY[0x1E0C80A78](v29, v30);
    *(&v47 - 8) = a14;
    *(&v47 - 7) = a15;
    v32 = v48;
    *(&v47 - 6) = (uint64_t)a8;
    *(&v47 - 5) = v32;
    *(&v47 - 4) = v49;
    *((_BYTE *)&v47 - 24) = a11 & 1;
    *(&v47 - 2) = v50;
    *((_BYTE *)&v47 - 8) = v51 & 1;
    MEMORY[0x1E0C80A78](v31, v33);
    v34 = *(_QWORD *)(v21 + 144);
    v35 = *(_QWORD *)(v21 + 152);
    *(&v47 - 6) = a14;
    *(&v47 - 5) = v34;
    *(&v47 - 4) = a15;
    *(&v47 - 3) = v35;
    *(&v47 - 2) = (uint64_t)sub_1B158B798;
    *(&v47 - 1) = v36;
    v37 = sub_1B16BA760();
    v38 = sub_1B1494488();
    v39 = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DECC68], v37);
    v41 = sub_1B1494088((uint64_t)sub_1B158B7D0, (uint64_t)(&v47 - 8), v37, v38, MEMORY[0x1E0DEDCE8], v39, MEMORY[0x1E0DEDD18], v40);
    swift_bridgeObjectRelease();
    v42 = v53;
    sub_1B16B9740();
    sub_1B16B7BD4();
    v43 = sub_1B16B7BBC();
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v58);
    v60[0] = v43;
    v60[1] = v45;
    v60[2] = v59;
    v60[3] = v42;
    v60[4] = v55;
    v61 = v54;
    v62 = v56;
    v63 = v41;
    v64 = 1;
    sub_1B158B6E4((uint64_t)v60, (uint64_t)v65);
    swift_beginAccess();
    sub_1B158B7F4((uint64_t)v65, v27 + 24);
    swift_endAccess();
    v46 = *(id *)(v27 + 16);
    _s5TeaUI6ActionC7triggeryyF_0();
    swift_release();

  }
}

void sub_1B158B40C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, char a5@<W5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t *a8@<X8>)
{
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v22[0] = a6;
  v13 = a5 & 1;
  v14 = *(_QWORD *)(*(_QWORD *)a3 + 136);
  v15 = sub_1B16BA328();
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)v22 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))((char *)v22 - v17, a2, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v14);
  a4(a2);
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v26 = v13;
  if ((a7 & 1) != 0)
    goto LABEL_6;
  if (!__OFADD__(a1, 1))
  {
    if (a1 + 1 > 9)
    {
      v19 = 0;
      v20 = 0;
      v21 = 0;
    }
    else
    {
      v23 = a1 + 1;
      v19 = sub_1B16BA8B0();
      v21 = v22[0];
    }
LABEL_6:
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v22[1] = 0;
    a8[3] = (uint64_t)&type metadata for MenuItem;
    a8[4] = (uint64_t)&protocol witness table for MenuItem;
    *a8 = swift_allocObject();
    swift_retain();
    MenuItem.init<A, B>(command:context:title:state:key:alternate:)();
    return;
  }
  __break(1u);
}

uint64_t sub_1B158B5A4(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v4 = *(_QWORD *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_1B158B640()
{
  uint64_t v0;

  sub_1B1493B00(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DynamicMenuGroupOptionProvider()
{
  return objc_opt_self();
}

id sub_1B158B68C()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1B158B698@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + 24;
  swift_beginAccess();
  return sub_1B1493ACC(v3, a1);
}

uint64_t sub_1B158B6E4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

uint64_t sub_1B158B720()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B158B744()
{
  return objectdestroy_2Tm_4();
}

void sub_1B158B74C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_14_35();
  sub_1B158B0A0(v1, v2, v3, v4, v5, *(unsigned __int8 *)(v0 + 64), v6, *(uint64_t **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112), v7, v8);
}

void sub_1B158B798(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_1B158B40C(a1, a2, *(_QWORD *)(v3 + 32), *(void (**)(uint64_t))(v3 + 40), *(_BYTE *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_BYTE *)(v3 + 72), a3);
}

uint64_t sub_1B158B7D0(char *a1)
{
  uint64_t v1;

  return sub_1B158B5A4(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 48));
}

uint64_t sub_1B158B7F4(uint64_t a1, uint64_t a2)
{
  assignWithTake for MenuGroup(a2, a1);
  return a2;
}

uint64_t sub_1B158B830()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = v0 + 16;
  switch(*(_BYTE *)(v0 + 73))
  {
    case 0:
      swift_release();
      return swift_deallocObject();
    case 1:
    case 3:
      goto LABEL_2;
    case 2:
      v2 = *(unsigned __int8 *)(v0 + 72);
      if (v2 == 2)
      {
        OUTLINED_FUNCTION_25_1();
        v1 = v0 + 32;
LABEL_2:
        __swift_destroy_boxed_opaque_existential_1(v1);
      }
      else
      {
        if (v2 == 1)
        {
          OUTLINED_FUNCTION_25_1();
          swift_bridgeObjectRelease();
          sub_1B1494C38(*(id *)(v0 + 48), *(_BYTE *)(v0 + 56));
        }
        else
        {
          if (*(_BYTE *)(v0 + 72))
            return swift_deallocObject();

          OUTLINED_FUNCTION_25_1();
        }
        swift_bridgeObjectRelease();
      }
      return swift_deallocObject();
    default:
      return swift_deallocObject();
  }
}

uint64_t sub_1B158B8E0()
{
  return objectdestroy_2Tm_4();
}

void sub_1B158B8E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_14_35();
  sub_1B158A92C(v1, v2, v3, v4, v5, *(unsigned __int8 *)(v0 + 64), v6, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104), v7, v8);
}

void sub_1B158B92C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_1B158AC64(a1, a2, *(_QWORD *)(v3 + 32), *(void (**)(uint64_t))(v3 + 40), *(_QWORD *)(v3 + 56), *(_BYTE *)(v3 + 64), a3);
}

uint64_t sub_1B158B95C(char *a1)
{
  uint64_t v1;

  return sub_1B158ADF0(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 32));
}

char *SidebarButtonView.__allocating_init(target:action:accessibilityDelegate:)()
{
  objc_class *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_7_7();
  v1 = objc_allocWithZone(v0);
  swift_getObjectType();
  v2 = OUTLINED_FUNCTION_2_85();
  return OUTLINED_FUNCTION_1_97(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B158B9B8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1)
    return 2;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_displayMode);

  return v3 == (id)1;
}

uint64_t SidebarButtonAccessibilityDelegate.isSidebarHidden(for:)()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1)
    return 2;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_displayMode);

  return v3 == (id)1;
}

void sub_1B158BA70()
{
  void *v0;
  id v1;
  id v2;

  if (qword_1ED17B400 != -1)
    swift_once();
  v0 = (void *)qword_1ED179FE0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 5, 3, 17.0);
  v2 = objc_msgSend(v0, sel_imageByApplyingSymbolConfiguration_, v1);

  if (v2)
  {
    qword_1ED1903F0 = (uint64_t)v2;
    OUTLINED_FUNCTION_0_0();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B158BB18()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();

  OUTLINED_FUNCTION_0_117();
  __break(1u);
}

id sub_1B158BBCC()
{
  if (qword_1ED17D650 != -1)
    swift_once();
  return objc_msgSend((id)qword_1ED1903F0, sel_size);
}

uint64_t sub_1B158BC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate;
  v2 = MEMORY[0x1B5E1F2F8](v0 + OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    if ((*(unsigned __int8 (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v0, ObjectType, v4) != 2)
    {
      type metadata accessor for Localized();
      swift_getObjCClassFromMetadata();
      v9 = (void *)objc_opt_self();
      v7 = OUTLINED_FUNCTION_8_31(v9, sel_bundleForClass_);
      OUTLINED_FUNCTION_6_11();
      OUTLINED_FUNCTION_5_71();
      v8 = sub_1B16B79B8();

      goto LABEL_6;
    }

  }
  type metadata accessor for Localized();
  swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = OUTLINED_FUNCTION_8_31(v6, sel_bundleForClass_);
  OUTLINED_FUNCTION_6_11();
  OUTLINED_FUNCTION_5_71();
  v8 = sub_1B16B79B8();
LABEL_6:

  return v8;
}

uint64_t sub_1B158BE68()
{
  return swift_bridgeObjectRelease();
}

void SidebarButton.init(frame:)()
{
  sub_1B158C25C();
}

id SidebarButton.__deallocating_deinit()
{
  return sub_1B15219E8(type metadata accessor for SidebarButton);
}

char *SidebarButtonView.init(target:action:accessibilityDelegate:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_7();
  swift_getObjectType();
  v0 = OUTLINED_FUNCTION_2_85();
  return OUTLINED_FUNCTION_1_97(v0, v1, v2, v3, v4, v5);
}

id SidebarButtonView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = OUTLINED_FUNCTION_8_31(objc_allocWithZone(v1), sel_initWithCoder_);

  return v3;
}

void SidebarButtonView.init(coder:)()
{
  OUTLINED_FUNCTION_0_117();
  __break(1u);
}

id sub_1B158BFA0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button), sel_alpha);
}

id sub_1B158BFFC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button), sel_setAlpha_);
}

id (*sub_1B158C014(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button);
  a1[1] = v3;
  objc_msgSend(v3, sel_alpha);
  *a1 = v4;
  return sub_1B158C05C;
}

id sub_1B158C05C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setAlpha_, *(double *)a1);
}

double sub_1B158C0AC()
{
  void *v0;
  double v2;

  objc_msgSend(v0, sel_transform);
  return v2;
}

id sub_1B158C120(uint64_t a1, double a2)
{
  void *v2;
  __int128 v5;
  double v6;

  OUTLINED_FUNCTION_3_73(a1, sel_transform);
  v6 = a2;
  return objc_msgSend(v2, sel_setTransform_, &v5);
}

void (*sub_1B158C174(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v5;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  OUTLINED_FUNCTION_3_73((uint64_t)v3, sel_transform);
  v3[6] = v5;
  return sub_1B158C1D4;
}

void sub_1B158C1D4(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  void *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  v1 = *(_OWORD **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  OUTLINED_FUNCTION_3_73(a1, sel_transform);
  *v1 = v4;
  v1[1] = v5;
  *((_QWORD *)v1 + 4) = v6;
  *((_QWORD *)v1 + 5) = v2;
  objc_msgSend(v3, sel_setTransform_, v1);
  free(v1);
}

void SidebarButtonView.init(frame:)()
{
  sub_1B158C25C();
}

void sub_1B158C25C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SidebarButtonView.__deallocating_deinit()
{
  return sub_1B15219E8(type metadata accessor for SidebarButtonView);
}

char *sub_1B158C2A8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  char *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v42;
  id v43;
  objc_super v45;
  _QWORD v46[4];

  sub_1B1405FC4(a1, (uint64_t)v46);
  v11 = (char *)objc_allocWithZone((Class)type metadata accessor for SidebarButton());
  v12 = a4;
  v13 = a3;
  v14 = sub_1B158C7D0((uint64_t)v46, a2, v13, v11, a5, a6);
  v15 = OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button] = v14;

  objc_msgSend(*(id *)&v12[v15], sel_frame);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v45.receiver = v12;
  v45.super_class = (Class)type metadata accessor for SidebarButtonView();
  v24 = (char *)objc_msgSendSuper2(&v45, sel_initWithFrame_, v17, v19, v21, v23);
  v25 = OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button;
  v26 = *(void **)&v24[OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button];
  v27 = v24;
  objc_msgSend(v27, sel_addSubview_, v26);
  objc_msgSend(v27, sel_setAutoresizesSubviews_, 0);
  objc_msgSend(v27, sel_setAutoresizingMask_, 0);
  objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v42 = (id)objc_opt_self();
  sub_1B13C2E28(0, (unint64_t *)&qword_1ED186F90, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1B16C95E0;
  v29 = objc_msgSend(v26, sel_widthAnchor);
  if (qword_1ED17D650 != -1)
    swift_once();
  objc_msgSend((id)qword_1ED1903F0, sel_size, v42);
  v30 = objc_msgSend(v29, sel_constraintEqualToConstant_);

  *(_QWORD *)(v28 + 32) = v30;
  v31 = objc_msgSend(*(id *)&v24[v25], sel_heightAnchor);
  objc_msgSend((id)qword_1ED1903F0, sel_size);
  v33 = objc_msgSend(v31, sel_constraintEqualToConstant_, v32);

  *(_QWORD *)(v28 + 40) = v33;
  v34 = objc_msgSend(*(id *)&v24[v25], sel_centerXAnchor);
  v35 = objc_msgSend(v27, sel_centerXAnchor);
  v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(_QWORD *)(v28 + 48) = v36;
  v37 = objc_msgSend(*(id *)&v24[v25], sel_centerYAnchor);
  v38 = objc_msgSend(v27, sel_centerYAnchor);
  v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(_QWORD *)(v28 + 56) = v39;
  v46[0] = v28;
  sub_1B16B9B78();
  sub_1B158C9C4();
  v40 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_activateConstraints_, v40);

  sub_1B13F77F4(a1);
  return v27;
}

uint64_t type metadata accessor for SidebarButton()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SidebarButtonView()
{
  return objc_opt_self();
}

void sub_1B158C678(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1B158BFA0();
  *a1 = v2;
  OUTLINED_FUNCTION_0_0();
}

void sub_1B158C69C()
{
  sub_1B158BFFC();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B158C6BC(double *a1@<X8>)
{
  *a1 = sub_1B158C0AC();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B158C6E0(double *a1)
{
  sub_1B158C120((uint64_t)a1, *a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t method lookup function for SidebarButton()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for SidebarButtonView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SidebarButtonView.__allocating_init(target:action:accessibilityDelegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SidebarButtonView.contentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SidebarButtonView.contentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SidebarButtonView.contentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SidebarButtonView.verticalOffset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SidebarButtonView.verticalOffset.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SidebarButtonView.verticalOffset.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SidebarButtonAccessibilityDelegate.isSidebarHidden(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id sub_1B158C7D0(uint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t a5, uint64_t a6)
{
  void **p_vtable;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  char *v25;
  id v26;
  _QWORD v28[3];
  uint64_t v29;
  objc_super v30;

  p_vtable = &OBJC_METACLASS____TtC5TeaUI10RightArrow.vtable;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  if (qword_1ED17D650 != -1)
    swift_once();
  v12 = qword_1ED1903F0;
  objc_msgSend((id)qword_1ED1903F0, sel_size);
  v14 = v13;
  v16 = v15;
  v30.receiver = a4;
  v30.super_class = (Class)type metadata accessor for SidebarButton();
  v17 = objc_msgSendSuper2(&v30, sel_initWithFrame_, 0.0, 0.0, v14, v16);
  objc_msgSend(v17, sel_setBackgroundImage_forState_, v12, 0);
  sub_1B1405FC4(a1, (uint64_t)v28);
  v18 = v29;
  if (v29)
  {
    v19 = __swift_project_boxed_opaque_existential_1(v28, v29);
    v20 = *(_QWORD *)(v18 - 8);
    MEMORY[0x1E0C80A78](v19, v19);
    v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v22);
    v23 = v17;
    v24 = sub_1B16BA8F8();
    v25 = v22;
    p_vtable = (void **)(&OBJC_METACLASS____TtC5TeaUI10RightArrow + 24);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    v26 = v17;
    v24 = 0;
  }
  objc_msgSend(v17, sel_addTarget_action_forControlEvents_, v24, a2, 64);
  swift_unknownObjectRelease();

  sub_1B13F77F4(a1);
  *(_QWORD *)((char *)p_vtable[6] + (_QWORD)v17 + 8) = a6;
  swift_unknownObjectWeakAssign();

  return v17;
}

unint64_t sub_1B158C9C4()
{
  unint64_t result;

  result = qword_1ED17B5D0;
  if (!qword_1ED17B5D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED17B5D0);
  }
  return result;
}

uint64_t sub_1B158CA00(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_71(a1, 1, 29, 0x80000001B16EE6E0, &qword_1EEF340A0);
}

uint64_t static Settings.TeaUIModule.Debug.enableDebugMenu.getter()
{
  return sub_1B13A3A8C(&qword_1EEF2F858);
}

uint64_t sub_1B158CA40(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_71(a1, 0, 28, 0x80000001B16EE6C0, &qword_1EEF340A8);
}

uint64_t static Settings.TeaUIModule.Debug.showAllBundles.getter()
{
  return sub_1B13A3A8C(&qword_1EEF2F860);
}

uint64_t sub_1B158CA80(uint64_t a1)
{
  return sub_1B158CAA8(a1, 1, 0xD000000000000025, 0x80000001B16EE690, &qword_1EEF340B0);
}

uint64_t sub_1B158CAA8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[16];

  v8 = OUTLINED_FUNCTION_14_36();
  OUTLINED_FUNCTION_8_55();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1B16B7F28();
  MEMORY[0x1E0C80A78](v13, v14);
  (*(void (**)(_BYTE *, _QWORD))(v16 + 104))(&v18[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v12, *MEMORY[0x1E0DB5800], v8);
  v18[15] = a2;
  sub_1B158D354();
  swift_allocObject();
  result = sub_1B16B7F7C();
  *a5 = result;
  return result;
}

uint64_t static Settings.TeaUIModule.Debug.enableDebugContextMenu.getter()
{
  return sub_1B13A3A8C(qword_1EEF2F868);
}

void sub_1B158CBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_14_36();
  OUTLINED_FUNCTION_8_55();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_1_98();
  OUTLINED_FUNCTION_13_42();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_15_33(v4, qword_1ED17D8F0, (void (*)(void))sub_1B1489014);
  v6 = OUTLINED_FUNCTION_5_72(v5, *MEMORY[0x1E0DB57E8]);
  OUTLINED_FUNCTION_9_56(v6, &qword_1ED17DA90);
  OUTLINED_FUNCTION_3_74();
  *(_OWORD *)(OUTLINED_FUNCTION_11_43() + 16) = xmmword_1B16C6D10;
  OUTLINED_FUNCTION_0_118();
  OUTLINED_FUNCTION_0_118();
  v7 = OUTLINED_FUNCTION_0_118();
  OUTLINED_FUNCTION_6_75(v7, *MEMORY[0x1E0DB5800]);
  sub_1B158D318();
  OUTLINED_FUNCTION_12_42(46);
  qword_1ED17D8D8 = sub_1B16B7F58();
  OUTLINED_FUNCTION_47();
}

uint64_t static Settings.TeaUIModule.Debug.contextMenuPosition.getter()
{
  return sub_1B13A3A8C(&qword_1ED17D8E0);
}

void sub_1B158CD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_14_36();
  OUTLINED_FUNCTION_8_55();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_1_98();
  OUTLINED_FUNCTION_13_42();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_15_33(v4, &qword_1EEF340C0, (void (*)(void))sub_1B1489050);
  v6 = OUTLINED_FUNCTION_5_72(v5, *MEMORY[0x1E0DB57E8]);
  OUTLINED_FUNCTION_9_56(v6, &qword_1EEF340C8);
  OUTLINED_FUNCTION_3_74();
  *(_OWORD *)(OUTLINED_FUNCTION_11_43() + 16) = xmmword_1B16C6D10;
  OUTLINED_FUNCTION_0_118();
  sub_1B16B7F40();
  v7 = OUTLINED_FUNCTION_0_118();
  OUTLINED_FUNCTION_6_75(v7, *MEMORY[0x1E0DB5800]);
  sub_1B158D244();
  OUTLINED_FUNCTION_12_42(27);
  qword_1EEF340B8 = sub_1B16B7F58();
  OUTLINED_FUNCTION_47();
}

uint64_t static Settings.TeaUIModule.Debug.menuActivation.getter()
{
  return sub_1B13A3A8C(&qword_1EEF2F878);
}

TeaUI::DebugContextMenuPosition_optional __swiftcall DebugContextMenuPosition.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  TeaUI::DebugContextMenuPosition_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B16BA7F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DebugContextMenuPosition.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696461656CLL;
  if (*v0 != 1)
    v1 = 0x676E696C69617274;
  if (*v0)
    return v1;
  else
    return 0x6E6564646968;
}

void sub_1B158D008(char *a1, unsigned __int8 *a2)
{
  sub_1B14AB628(*a1, *a2);
}

unint64_t sub_1B158D018()
{
  unint64_t result;

  result = qword_1ED17DA38;
  if (!qword_1ED17DA38)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for DebugContextMenuPosition, &type metadata for DebugContextMenuPosition);
    atomic_store(result, (unint64_t *)&qword_1ED17DA38);
  }
  return result;
}

void sub_1B158D054()
{
  sub_1B1679378();
}

uint64_t sub_1B158D05C()
{
  return sub_1B149EE44();
}

void sub_1B158D064()
{
  sub_1B167972C();
}

TeaUI::DebugContextMenuPosition_optional sub_1B158D06C(Swift::String *a1)
{
  return DebugContextMenuPosition.init(rawValue:)(*a1);
}

uint64_t sub_1B158D078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DebugContextMenuPosition.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B158D09C()
{
  sub_1B14891D0();
  return sub_1B16B9AE8();
}

uint64_t sub_1B158D0DC()
{
  sub_1B14891D0();
  return sub_1B16B9ADC();
}

uint64_t sub_1B158D124()
{
  sub_1B14891D0();
  return sub_1B16B9AD0();
}

void type metadata accessor for Settings.TeaUIModule()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for Settings.TeaUIModule.Debug()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t storeEnumTagSinglePayload for DebugContextMenuPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B158D1C8 + 4 * byte_1B16D2935[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B158D1FC + 4 * asc_1B16D2930[v4]))();
}

uint64_t sub_1B158D1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B158D204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B158D20CLL);
  return result;
}

uint64_t sub_1B158D218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B158D220);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B158D224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B158D22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for DebugContextMenuPosition()
{
  OUTLINED_FUNCTION_11_0();
}

unint64_t sub_1B158D244()
{
  unint64_t result;

  result = qword_1EEF340D8;
  if (!qword_1EEF340D8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for DebugWindowActivation, &type metadata for DebugWindowActivation);
    atomic_store(result, (unint64_t *)&qword_1EEF340D8);
  }
  return result;
}

void sub_1B158D280(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1B158D2D4(255, a3);
    v4 = sub_1B16BA8BC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1B158D2D4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1B16B7F4C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1B158D318()
{
  unint64_t result;

  result = qword_1ED17DA28;
  if (!qword_1ED17DA28)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for DebugContextMenuPosition, &type metadata for DebugContextMenuPosition);
    atomic_store(result, (unint64_t *)&qword_1ED17DA28);
  }
  return result;
}

void sub_1B158D354()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF340E0)
  {
    v0 = sub_1B16B7F70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF340E0);
  }
}

void CoverViewManager.__allocating_init()()
{
  OUTLINED_FUNCTION_6_1();
  swift_allocObject();
  CoverViewManager.init()();
  OUTLINED_FUNCTION_0_0();
}

Swift::Void __swiftcall CoverViewManager.register(in:)(UIViewController *in)
{
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1B158D3D8(unsigned __int8 *a1)
{
  unsigned __int8 __dst[88];

  sub_1B13E3404(a1, (char *)__dst);
  return CoverViewManager.cover.setter(__dst);
}

void CoverViewManager.cover.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 24);
  OUTLINED_FUNCTION_32();
  v3[5] = sub_1B16B85A0();
  OUTLINED_FUNCTION_31();
}

void CoverViewManager.$cover.getter()
{
  OUTLINED_FUNCTION_32();
  sub_1B16B85C4();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B158D488()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 32);
  v2 = (void *)objc_opt_self();
  v3 = v2;
  if (v1)
  {
    v4 = v1;
    v5 = objc_msgSend(v3, sel_defaultCenter);
    v6 = (void *)sub_1B16B983C();
    sub_1B13D6584(0, (unint64_t *)&qword_1ED186F80, (uint64_t (*)(uint64_t))sub_1B1455660, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
    sub_1B16BA520();
    v8 = MEMORY[0x1B5E1F2F8](v0 + 16);
    sub_1B13D6584(0, (unint64_t *)&unk_1ED184940, (uint64_t (*)(uint64_t))sub_1B13D5C64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    *(_QWORD *)(inited + 96) = v9;
    *(_QWORD *)(inited + 72) = v8;
    v10 = sub_1B16B9728();
    sub_1B13FD260((uint64_t)v6, 0, v10, v5);

  }
  else
  {
    v5 = objc_msgSend(v2, sel_defaultCenter);
    v6 = (void *)sub_1B16B983C();
    sub_1B13D6584(0, (unint64_t *)&qword_1ED186F80, (uint64_t (*)(uint64_t))sub_1B1455660, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_1B16C51D0;
    sub_1B16BA520();
    v12 = MEMORY[0x1B5E1F2F8](v0 + 16);
    sub_1B13D6584(0, (unint64_t *)&unk_1ED184940, (uint64_t (*)(uint64_t))sub_1B13D5C64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    *(_QWORD *)(v11 + 96) = v13;
    *(_QWORD *)(v11 + 72) = v12;
    v14 = sub_1B16B9728();
    sub_1B13FD260((uint64_t)v6, 0, v14, v5);
  }

}

uint64_t static CoverViewManager.didStartCovering.getter()
{
  return OUTLINED_FUNCTION_2_86();
}

uint64_t static CoverViewManager.didEndCovering.getter()
{
  return OUTLINED_FUNCTION_2_86();
}

void sub_1B158D744(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;
  v3 = a1;

  sub_1B158D488();
}

uint64_t sub_1B158D780(void *a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[6];

  result = MEMORY[0x1B5E1F2F8](v1 + 16);
  if (result)
  {
    v4 = (void *)result;
    objc_msgSend(a1, sel_setAutoresizingMask_, 18);
    v5 = (void *)objc_opt_self();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_1B158E0B0;
    *(_QWORD *)(v7 + 24) = v6;
    v11[4] = sub_1B140AA30;
    v11[5] = v7;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 1107296256;
    v11[2] = sub_1B140AA14;
    v11[3] = &block_descriptor_45;
    v8 = _Block_copy(v11);
    v9 = a1;
    v10 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_performWithoutAnimation_, v8);

    _Block_release(v8);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v10 & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_1B158D8F0(void *a1, unsigned __int8 *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  int v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  int v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  _QWORD *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id (*v39)();
  _QWORD *v40;

  v8 = *a2;
  v9 = (void *)MEMORY[0x1B5E1F2F8](v4 + 16);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_view);

    if (!v11)
    {
      __break(1u);
      goto LABEL_22;
    }
    v12 = objc_msgSend(v11, sel_window);

    if (v12)
    {
      v13 = objc_msgSend(v12, sel_windowScene);

      if (v13)
      {
        v14 = objc_msgSend(v13, sel_activationState);

        v15 = (unint64_t)v14 < 2 ? v8 : 0;
        if (v15 == 1)
        {
          objc_msgSend(a1, sel_setAlpha_, 0.0);
          v16 = (void *)MEMORY[0x1B5E1F2F8](v4 + 16);
          if (!v16)
          {
LABEL_12:
            sub_1B158D780(a1);
            v19 = *(void **)(v4 + 32);
            v20 = v19;
            v21 = a1;
            sub_1B158D744(a1);
            v22 = (void *)objc_opt_self();
            v23 = swift_allocObject();
            *(_QWORD *)(v23 + 16) = v21;
            v39 = sub_1B158E0E8;
            v40 = (_QWORD *)v23;
            v24 = MEMORY[0x1E0C809B0];
            v35 = MEMORY[0x1E0C809B0];
            v36 = 1107296256;
            v37 = sub_1B13F00E4;
            v38 = &block_descriptor_9_1;
            v25 = _Block_copy(&v35);
            v26 = v21;
            swift_release();
            v27 = (_QWORD *)swift_allocObject();
            v27[2] = v19;
            v27[3] = a3;
            v27[4] = a4;
            v39 = sub_1B158E124;
            v40 = v27;
            v35 = v24;
            v36 = 1107296256;
            v37 = sub_1B13F8544;
            v38 = &block_descriptor_15;
            v28 = _Block_copy(&v35);
            v29 = v20;
            sub_1B13C4AEC((uint64_t)a3);
            swift_release();
            objc_msgSend(v22, sel_animateWithDuration_delay_options_animations_completion_, 2, v25, v28, 0.15, 0.0);

            _Block_release(v28);
            _Block_release(v25);
            return;
          }
          v17 = v16;
          v18 = objc_msgSend(v16, sel_view);

          if (v18)
          {
            objc_msgSend(v18, sel_addSubview_, a1);

            goto LABEL_12;
          }
          goto LABEL_23;
        }
      }
    }
  }
  v30 = (void *)MEMORY[0x1B5E1F2F8](v4 + 16);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, sel_view);

    if (v32)
    {
      objc_msgSend(v32, sel_addSubview_, a1);

      goto LABEL_16;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
LABEL_16:
  sub_1B158D780(a1);
  v33 = *(void **)(v4 + 32);
  if (v33)
    objc_msgSend(v33, sel_removeFromSuperview);
  v34 = a1;
  sub_1B158D744(a1);
  if (a3)
    a3();
}

uint64_t CoverViewManager.styleCoverView(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6[8];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  _BYTE v18[40];
  uint64_t v19;
  uint64_t v20;
  char v21;

  v0 = CoverViewManager.cover.getter();
  if (v21 == 4)
  {
    OUTLINED_FUNCTION_6_76(v0, v1);
    v11 = v19;
    v12 = v20;
    v2 = 4;
    goto LABEL_5;
  }
  if (v21 == 3)
  {
    OUTLINED_FUNCTION_6_76(v0, v1);
    v2 = 3;
LABEL_5:
    OUTLINED_FUNCTION_0_119((UIView_optional *)v2, v4, v5, SWORD2(v5), SBYTE6(v5), HIBYTE(v5), v6[0], v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
    sub_1B13E3664((uint64_t)v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  return sub_1B13E3664((uint64_t)v18);
}

id sub_1B158DCA0(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + 32);
  if (result)
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  return result;
}

void sub_1B158DCBC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v4;

  v4 = *(void **)(a2 + 32);
  if (v4)
    objc_msgSend(v4, sel_removeFromSuperview);
  sub_1B158D744(0);
  if (a3)
    a3();
}

id sub_1B158DD10(void *a1, id a2)
{
  id result;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  result = objc_msgSend(a2, sel_view);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    return objc_msgSend(a1, sel_setFrame_, v6, v8, v10, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CoverViewManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  swift_release();

  return v0;
}

uint64_t CoverViewManager.__deallocating_deinit()
{
  CoverViewManager.deinit();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocClassInstance();
}

void CoverViewManagerNotification.viewController.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  OUTLINED_FUNCTION_0_0();
}

uint64_t CoverViewManagerNotification.init(notification:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  __int128 v7;
  __int128 v8;

  if (!sub_1B16B7904())
  {
    v5 = sub_1B16B7910();
    OUTLINED_FUNCTION_40_0(v5);
    v7 = 0u;
    v8 = 0u;
    goto LABEL_7;
  }
  strcpy((char *)&v7, "viewController");
  HIBYTE(v7) = -18;
  sub_1B16BA520();
  sub_1B146AD18();
  swift_bridgeObjectRelease();
  v2 = sub_1B16B7910();
  OUTLINED_FUNCTION_40_0(v2);
  sub_1B148EA44((uint64_t)v6);
  if (!*((_QWORD *)&v8 + 1))
  {
LABEL_7:
    result = sub_1B13F77F4((uint64_t)&v7);
    v4 = 0;
    goto LABEL_8;
  }
  sub_1B13D5C64();
  result = swift_dynamicCast();
  v4 = v6[0];
  if (!(_DWORD)result)
    v4 = 0;
LABEL_8:
  *a1 = v4;
  return result;
}

uint64_t sub_1B158DF0C()
{
  return CoverViewManager.cover.getter();
}

uint64_t method lookup function for CoverViewManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoverViewManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void **initializeBufferWithCopyOfBuffer for CoverViewManagerNotification(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for CoverViewManagerNotification(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for CoverViewManagerNotification(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CoverViewManagerNotification(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverViewManagerNotification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverViewManagerNotification()
{
  return &type metadata for CoverViewManagerNotification;
}

uint64_t sub_1B158E088()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();

  return swift_deallocObject();
}

id sub_1B158E0B0()
{
  uint64_t v0;

  return sub_1B158DD10(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1B158E0B8()
{
  return swift_deallocObject();
}

uint64_t sub_1B158E0C8()
{
  OUTLINED_FUNCTION_43_0();
  return swift_deallocObject();
}

id sub_1B158E0E8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

uint64_t sub_1B158E0FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocObject();
}

id sub_1B158E124()
{
  uint64_t v0;
  uint64_t (*v1)(id);
  id result;

  v1 = *(uint64_t (**)(id))(v0 + 24);
  result = objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
  if (v1)
    return (id)v1(result);
  return result;
}

id sub_1B158E158()
{
  uint64_t v0;

  return sub_1B158DCA0(v0);
}

uint64_t sub_1B158E160()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocObject();
}

void sub_1B158E18C(uint64_t a1)
{
  uint64_t v1;

  sub_1B158DCBC(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t BlueprintLayoutSection.framePosition.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = v2 + *(int *)(a1 + 52);
  v4 = *(_QWORD *)v3;
  *(_QWORD *)a2 = *(_QWORD *)v3;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(a2 + 8) = v5;
  return sub_1B14033B0(v4, v5);
}

void BlueprintLayoutSection.append(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = type metadata accessor for BlueprintLayoutItem(0, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 40), a4);
  MEMORY[0x1E0C80A78](v5, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v9 - v8, a1, v5);
  sub_1B16B9C68();
  sub_1B16B9C2C();
  sub_1B16B9740();
  BlueprintLayoutSectionViewState.init<A>(items:)();
}

void sub_1B158E290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v2 - 112) = *(_OWORD *)(v2 - 88);
  v3 = *(_QWORD *)(v2 - 72);
  v4 = v0 + *(int *)(v1 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)v4 = *(_OWORD *)(v2 - 112);
  *(_QWORD *)(v4 + 16) = v3;
  OUTLINED_FUNCTION_27();
}

double BlueprintLayoutSection.maxItemHeight.getter(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  char v8;
  double result;
  _OWORD v10[4];

  v2 = *(_OWORD *)(a1 + 32);
  v10[1] = *(_OWORD *)(a1 + 16);
  v10[2] = v2;
  v3 = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutSection<A, B>, a1);
  v5 = sub_1B14821DC((void (*)(char *, uint64_t))sub_1B158E3A8, (uint64_t)v10, a1, MEMORY[0x1E0DEF040], MEMORY[0x1E0DEDCE8], v3, MEMORY[0x1E0DEDD18], v4);
  v6 = COERCE_DOUBLE(sub_1B158E364(v5));
  v8 = v7;
  swift_bridgeObjectRelease();
  result = v6;
  if ((v8 & 1) != 0)
    return 0.0;
  return result;
}

uint64_t sub_1B158E364(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

void sub_1B158E3A8(double *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(double (**)(_QWORD))(*(_QWORD *)(v1 + 40) + 8))(*(_QWORD *)(v1 + 24));
}

void sub_1B158E414(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  *a2 = BlueprintLayoutSection.index(after:)(*a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B158E438(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutSection<A, B>, a1);
  return sub_1B16B9ED8();
}

uint64_t sub_1B158E46C(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutSection<A, B>, a1);
  return sub_1B16B9F08();
}

uint64_t *sub_1B158E4A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (char *)v4 + v6;
    v11 = (char *)a2 + v6;
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)v13;
    v15 = *(_BYTE *)(v13 + 8);
    sub_1B14033B0(*(_QWORD *)v13, v15);
    *(_QWORD *)v12 = v14;
    *(_BYTE *)(v12 + 8) = v15;
    v16 = (_QWORD *)((unint64_t)(v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)((unint64_t)(v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v16 = *v17;
    v16[1] = v17[1];
    v16[2] = v17[2];
    *(_QWORD *)(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFF8);
    sub_1B16B9740();
    sub_1B16B9740();
  }
  return v4;
}

uint64_t sub_1B158E5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v5) = *(_BYTE *)(v10 + 8);
  sub_1B14033B0(*(_QWORD *)v10, v5);
  v12 = *(_QWORD *)v9;
  *(_QWORD *)v9 = v11;
  v13 = *(_BYTE *)(v9 + 8);
  *(_BYTE *)(v9 + 8) = v5;
  sub_1B14032D0(v12, v13);
  v14 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFF8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B158E6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  v12 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_OWORD *)v12 = v14;
  *(_QWORD *)((v12 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + 31) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B158E748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = *(_BYTE *)(v10 + 8);
  v12 = *(_QWORD *)v9;
  *(_QWORD *)v9 = v11;
  v13 = *(_BYTE *)(v9 + 8);
  *(_BYTE *)(v9 + 8) = v10;
  sub_1B14032D0(v12, v13);
  v14 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

BOOL sub_1B158E80C()
{
  double *v0;

  return v0[4] == 0.0
      && v0[5] == 0.0
      && v0[6] == 0.0
      && v0[7] == 0.0
      && v0[8] == 0.0
      && v0[9] == 0.0
      && v0[10] == 0.0
      && v0[11] == 0.0;
}

double sub_1B158E878()
{
  uint64_t v0;
  char v1;
  double MinX;
  double MaxX;
  double MinY;
  double MaxY;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double result;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  v15 = *(_QWORD *)(v0 + 24);
  v16 = *(_QWORD *)(v0 + 16);
  v17.origin.x = OUTLINED_FUNCTION_0_120();
  MinX = CGRectGetMinX(v17);
  if ((v1 & 1) == 0 && *(double *)(v0 + 32) < MinX)
    MinX = *(double *)(v0 + 32);
  v14 = MinX;
  v18.origin.x = OUTLINED_FUNCTION_0_120();
  MaxX = CGRectGetMaxX(v18);
  if ((v1 & 1) == 0 && MaxX <= *(double *)(v0 + 40))
    MaxX = *(double *)(v0 + 40);
  v13 = MaxX;
  v19.origin.x = OUTLINED_FUNCTION_0_120();
  MinY = CGRectGetMinY(v19);
  if ((v1 & 1) == 0 && *(double *)(v0 + 48) < MinY)
    MinY = *(double *)(v0 + 48);
  v12 = MinY;
  v20.origin.x = OUTLINED_FUNCTION_0_120();
  MaxY = CGRectGetMaxY(v20);
  if ((v1 & 1) == 0 && MaxY <= *(double *)(v0 + 56))
    MaxY = *(double *)(v0 + 56);
  sub_1B158E80C();
  v6 = OUTLINED_FUNCTION_2_87();
  if ((v1 & 1) == 0 && *(double *)(v0 + 64) < v6)
    v6 = *(double *)(v0 + 64);
  sub_1B158E80C();
  v7 = OUTLINED_FUNCTION_2_87();
  if ((v1 & 1) == 0 && v7 <= *(double *)(v0 + 72))
    v7 = *(double *)(v0 + 72);
  sub_1B158E80C();
  v8 = OUTLINED_FUNCTION_1_100();
  if ((v1 & 1) == 0 && *(double *)(v0 + 80) < v8)
    v8 = *(double *)(v0 + 80);
  sub_1B158E80C();
  v9 = OUTLINED_FUNCTION_1_100();
  if ((v1 & 1) == 0 && v9 <= *(double *)(v0 + 88))
    v9 = *(double *)(v0 + 88);
  v10 = OUTLINED_FUNCTION_3_25();
  *(_QWORD *)(v10 + 16) = v16;
  *(_QWORD *)(v10 + 24) = v15;
  *(double *)(v10 + 32) = v14;
  *(double *)(v10 + 40) = v13;
  result = v12;
  *(double *)(v10 + 48) = v12;
  *(double *)(v10 + 56) = MaxY;
  *(double *)(v10 + 64) = v6;
  *(double *)(v10 + 72) = v7;
  *(double *)(v10 + 80) = v8;
  *(double *)(v10 + 88) = v9;
  return result;
}

__n128 sub_1B158E9F0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __int128 v10;
  __int128 v11;

  v10 = *(_OWORD *)(v2 + 48);
  v11 = *(_OWORD *)(v2 + 32);
  v9 = *(__n128 *)(v2 + 64);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v2 + 88);
  v7 = OUTLINED_FUNCTION_3_25();
  *(double *)(v7 + 16) = a1;
  *(double *)(v7 + 24) = a2;
  *(_OWORD *)(v7 + 32) = v11;
  *(_OWORD *)(v7 + 48) = v10;
  result = v9;
  *(__n128 *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 80) = v5;
  *(_QWORD *)(v7 + 88) = v6;
  return result;
}

uint64_t BlueprintLayoutCollectionSectionCursor.deinit()
{
  uint64_t v0;

  return v0;
}

BOOL static BlueprintLayoutCollectionSectionCursor.== infix(_:_:)(double *a1, double *a2)
{
  BOOL v2;

  v2 = a1[2] == a2[2] && a1[3] == a2[3];
  return v2
      && a1[4] == a2[4]
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7]
      && a1[8] == a2[8]
      && a1[9] == a2[9]
      && a1[10] == a2[10]
      && a1[11] == a2[11];
}

BOOL sub_1B158EB04(double **a1, double **a2)
{
  return static BlueprintLayoutCollectionSectionCursor.== infix(_:_:)(*a1, *a2);
}

uint64_t method lookup function for BlueprintLayoutCollectionSectionCursor()
{
  return swift_lookUpClassMethod();
}

double HiddenNavigationBarCompressionAnimation.topOffset.getter()
{
  return 0.0;
}

uint64_t HiddenNavigationBarCompressionAnimation.shouldAlwaysScrollToTopOnTap.getter()
{
  return 1;
}

double HiddenNavigationBarCompressionAnimation.maximumBarHeight(for:)()
{
  return 0.0;
}

id HiddenNavigationBarCompressionAnimation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id HiddenNavigationBarCompressionAnimation.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id HiddenNavigationBarCompressionAnimation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HiddenNavigationBarCompressionAnimation()
{
  return objc_opt_self();
}

uint64_t StateCommand.__deallocating_deinit()
{
  Command.deinit();
  return swift_deallocClassInstance();
}

void UISearchController.presenterWillAppear(_:)(uint64_t a1)
{
  sub_1B158ED4C(a1, (SEL *)&selRef_presenterWillAppear_);
}

void sub_1B158ECA4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B158ECC8(a1, a2, a3, UISearchController.presenterWillAppear(_:));
}

void UISearchController.presenterWillDisappear(_:)(uint64_t a1)
{
  sub_1B158ED4C(a1, (SEL *)&selRef_presenterWillDisappear_);
}

void sub_1B158ECBC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B158ECC8(a1, a2, a3, UISearchController.presenterWillDisappear(_:));
}

void sub_1B158ECC8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();

}

void UISearchController.presenterDidDisappear(_:)(uint64_t a1)
{
  sub_1B158ED4C(a1, (SEL *)&selRef_presenterDidDisappear_);
}

void sub_1B158ED34(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B158ECC8(a1, a2, a3, UISearchController.presenterDidDisappear(_:));
}

void UISearchController.presenterDidAppear(_:)(uint64_t a1)
{
  sub_1B158ED4C(a1, (SEL *)&selRef_presenterDidAppear_);
}

void sub_1B158ED4C(uint64_t a1, SEL *a2)
{
  void *v2;
  id v5;
  void *v6;
  void *v7;

  v5 = objc_msgSend(v2, sel_searchResultsController);
  if (v5)
  {
    v6 = v5;
    v7 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v7)
      objc_msgSend(v7, *a2, a1);

  }
}

void sub_1B158EDC8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B158ECC8(a1, a2, a3, UISearchController.presenterDidAppear(_:));
}

void static UIWindow.keyWindowScene.getter()
{
  if (qword_1ED1889F0 != -1)
    swift_once();
  JUMPOUT(0x1B5E1F2F8);
}

void (*static UIWindow.keyWindowScene.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  if (qword_1ED1889F0 != -1)
    swift_once();
  *a1 = MEMORY[0x1B5E1F2F8](&unk_1ED188570);
  return sub_1B158EE78;
}

void sub_1B158EE78(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    static UIWindow.keyWindowScene.setter(v2);

  }
  else
  {
    static UIWindow.keyWindowScene.setter(*a1);
  }
}

Swift::Void __swiftcall UIWindow.didBecomeKeyWindow()()
{
  void *v0;

  swift_getObjectType();
  static UIWindow.keyWindowScene.setter(objc_msgSend(v0, sel_windowScene));
}

void sub_1B158EF10(void *a1)
{
  id v1;

  v1 = a1;
  UIWindow.didBecomeKeyWindow()();

}

id static UIWindow.didBecomeKeyWindowScene.getter()
{
  if (qword_1ED188DC8 != -1)
    swift_once();
  return (id)qword_1ED188DB8;
}

BOOL static TabBarSplitViewState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TabBarSplitViewState.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t TabBarSplitViewState.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

BOOL sub_1B158EFFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static TabBarSplitViewState.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B158F008()
{
  return TabBarSplitViewState.hashValue.getter();
}

uint64_t sub_1B158F010()
{
  return TabBarSplitViewState.hash(into:)();
}

unint64_t sub_1B158F01C()
{
  unint64_t result;

  result = qword_1EEF34110;
  if (!qword_1EEF34110)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for TabBarSplitViewState, &type metadata for TabBarSplitViewState);
    atomic_store(result, (unint64_t *)&qword_1EEF34110);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TabBarSplitViewState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B158F0A4 + 4 * byte_1B16D2E05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B158F0D8 + 4 * asc_1B16D2E00[v4]))();
}

uint64_t sub_1B158F0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B158F0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B158F0E8);
  return result;
}

uint64_t sub_1B158F0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B158F0FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B158F100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B158F108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabBarSplitViewState()
{
  return &type metadata for TabBarSplitViewState;
}

uint64_t BlueprintCollectionViewDataSource.dragReorderDelegate.getter()
{
  OUTLINED_FUNCTION_30();
  return swift_unknownObjectRetain();
}

void BlueprintCollectionViewDataSource.dragReorderDelegate.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintCollectionViewDataSource.sectionCollapsibleStateManager.getter()
{
  OUTLINED_FUNCTION_30();
  swift_retain();
  OUTLINED_FUNCTION_55_3();
}

uint64_t BlueprintCollectionViewDataSource.sectionCollapsibleStateManager.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8));
  OUTLINED_FUNCTION_13();
  *v3 = a1;
  return swift_release();
}

void BlueprintCollectionViewDataSource.sectionCollapsibleStateManager.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id BlueprintCollectionViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:blueprintViewSupplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_13_1();
  return BlueprintCollectionViewDataSource.init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:blueprintViewSupplementaryViewProvider:)(a1, a2, a3, a4);
}

void sub_1B158F30C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t ObjCClassFromMetadata;
  id v6;

  sub_1B13ECEB0(0, (unint64_t *)&unk_1ED17D040, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionViewCell);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1B13ECDF0(a1, a2, (unint64_t *)&unk_1ED17D040, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionViewCell);
  v6 = (id)sub_1B16B983C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_registerClass_forCellWithReuseIdentifier_, ObjCClassFromMetadata, v6);

}

uint64_t sub_1B158F3B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B158F3D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v1, v0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

void sub_1B158F6F8()
{
  uint64_t v0;
  char v1;
  void *v2;

  v1 = *(_BYTE *)(v0 - 112);
  v2 = (void *)sub_1B16B9B48();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    objc_msgSend(*(id *)(v0 - 208), sel_insertItemsAtIndexPaths_, v2);
  else
    objc_msgSend(*(id *)(v0 - 208), sel_deleteItemsAtIndexPaths_, v2);

  JUMPOUT(0x1B158F73CLL);
}

uint64_t sub_1B158F764()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1B158F798()
{
  sub_1B158F3D4();
}

Swift::Void __swiftcall BlueprintCollectionViewDataSource.registerDiffableDataSource(in:)(UICollectionView *in)
{
  _QWORD *v1;
  _QWORD *v3;
  UICollectionView *v4;

  v3 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v1);
  v4 = in;
  (*(void (**)(UICollectionView **, _QWORD))(v3[16] + 56))(&v4, v3[12]);
  OUTLINED_FUNCTION_139_0();
  v4 = in;
  (*(void (**)(UICollectionView **, _QWORD))(v3[17] + 80))(&v4, v3[13]);
  sub_1B13ECCF4(0, 0, 0);
  OUTLINED_FUNCTION_47_20();
}

void sub_1B158F87C()
{
  OUTLINED_FUNCTION_22_27();
  sub_1B1549BB0();
}

void sub_1B158F89C()
{
  OUTLINED_FUNCTION_22_27();
  sub_1B1549EE4();
}

uint64_t sub_1B158F8BC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = *a1;
  v4 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v4);
  if (result)
  {
    v6 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B158F93C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
}

uint64_t sub_1B158FA08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1, a2);
  sub_1B13F834C(0, (unint64_t *)&qword_1ED17E140, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v7, v8);
  v9 = sub_1B16B7D60();
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v5 + 16))
  {
    *(_QWORD *)(v6 - 168) = v2;
    BlueprintProviderType.blueprint.getter(v3, v4);
    Blueprint.indexPath(for:)();
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B158FC4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1B158FC80()
{
  sub_1B158F93C();
}

void sub_1B158FCB0()
{
  OUTLINED_FUNCTION_55_3();
}

uint64_t sub_1B158FCB8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B158FCDC(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1B158F8BC(a1, v1);
}

void sub_1B158FCE4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED17A020)
  {
    sub_1B16B7D60();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED17A020);
  }
}

BOOL BlueprintCollectionViewDataSource.collectionView(_:canMoveItemAt:)()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98));
  OUTLINED_FUNCTION_30();
  return *v1 != 0;
}

BOOL sub_1B158FDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  BOOL v5;
  uint64_t v7;

  v0 = sub_1B16B7D60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B16B7D0C();
  v5 = BlueprintCollectionViewDataSource.collectionView(_:canMoveItemAt:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

uint64_t BlueprintCollectionViewDataSource.collectionView(_:moveItemAt:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = (_QWORD *)((char *)v3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x98));
  result = OUTLINED_FUNCTION_30();
  if (*v6)
  {
    v8 = v6[1];
    ObjectType = swift_getObjectType();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16);
    swift_unknownObjectRetain();
    v10(a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B158FEE0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v5 = sub_1B16B7D60();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)&v18 - v12;
  sub_1B16B7D0C();
  sub_1B16B7D0C();
  v14 = a3;
  v15 = a1;
  BlueprintCollectionViewDataSource.collectionView(_:moveItemAt:to:)((uint64_t)v15, (uint64_t)v13, (uint64_t)v10);

  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v10, v5);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v5);
}

void BlueprintCollectionViewDataSource.collectionView(_:indexPathForIndexTitle:at:)()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_27_30();
  OUTLINED_FUNCTION_27_30();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_56();
}

void sub_1B1590814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v1, v0);
  OUTLINED_FUNCTION_26_28();
  JUMPOUT(0x1B159047CLL);
}

void sub_1B1590850()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
}

void sub_1B159091C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v6 - 112) = v3;
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 96) = v5;
  *(_QWORD *)(v6 - 88) = v2;
  type metadata accessor for Blueprint();
}

void sub_1B1590960(uint64_t a1)
{
  uint64_t v1;

  Blueprint.subscript.getter(v1, a1);
}

BOOL sub_1B1590970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, v1);
  v3 = sub_1B16B9F44();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  return (v3 & 1) == 0;
}

void sub_1B15909D0()
{
  sub_1B1590850();
}

uint64_t sub_1B15909FC(char a1)
{
  return a1 & 1;
}

uint64_t sub_1B1590A0C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;
  __int128 v17[2];
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v17 - v5, a1, AssociatedTypeWitness);
  sub_1B13D19B8(0, &qword_1EEF34188);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1B13C06D0(v17, (uint64_t)v19);
    v6 = v20;
    v7 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    v8 = sub_1B16B98D8();
    v10 = v9;
    swift_bridgeObjectRelease();
    v11 = sub_1B16B98D8();
    if (v8 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease_n();
      v15 = 1;
    }
    else
    {
      v14 = sub_1B16BA910(v8, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v14 ^ 1;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_1B1402F6C((uint64_t)v17, (unint64_t *)&unk_1EEF34190, &qword_1EEF34188);
    v15 = 0;
  }
  return v15 & 1;
}

void sub_1B1590BD4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1590CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  if ((sub_1B16B9F44() & 1) != 0)
    goto LABEL_9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v2, v3);
  sub_1B13D19B8(0, &qword_1EEF34188);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)(v5 - 128) = 0;
    *(_OWORD *)(v5 - 160) = 0u;
    *(_OWORD *)(v5 - 144) = 0u;
    sub_1B1402F6C(v5 - 160, (unint64_t *)&unk_1EEF34190, &qword_1EEF34188);
LABEL_9:
    v15 = 0;
    return v15 & 1;
  }
  sub_1B13C06D0((__int128 *)(v5 - 160), v5 - 120);
  v6 = *(_QWORD *)(v5 - 96);
  v7 = *(_QWORD *)(v5 - 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 120), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  v8 = sub_1B16B98D8();
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = sub_1B16B98D8();
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n();
    v15 = 1;
  }
  else
  {
    v14 = sub_1B16BA910(v8, v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v14 ^ 1;
  }
  __swift_destroy_boxed_opaque_existential_1(v5 - 120);
  return v15 & 1;
}

uint64_t sub_1B1590E48(uint64_t a1)
{
  return sub_1B1590ECC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1590BD4) & 1;
}

void sub_1B1590E68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(a1, MEMORY[0x1E0DEB418]);
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B1590EAC(uint64_t a1)
{
  return sub_1B1590ECC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1590A0C) & 1;
}

uint64_t sub_1B1590ECC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[11], v2[12], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]) & 1;
}

void sub_1B1590F10(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = sub_1B16B7D60();
  MEMORY[0x1E0C80A78](v5, v6);
  sub_1B16B9860();
  v7 = a3;
  v8 = a1;
  BlueprintCollectionViewDataSource.collectionView(_:indexPathForIndexTitle:at:)();
}

id BlueprintCollectionViewDataSource.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

void BlueprintCollectionViewDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B1591030()
{
  BlueprintCollectionViewDataSource.init()();
}

uint64_t sub_1B1591040(_QWORD *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t *)(*MEMORY[0x1E0DEEDD8] & *a1);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v3 + 160), v2[10]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v4 + 168), v2[11]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v5 + 176), v2[12]);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_92((uint64_t)a1 + *(_QWORD *)(v6 + 184), v2[13]);
  OUTLINED_FUNCTION_1_26();
  swift_release();
  OUTLINED_FUNCTION_1_26();
  return swift_release();
}

void (*sub_1B15910F4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  BlueprintCollectionViewDataSource.dragReorderDelegate.modify();
  v2[4] = v3;
  return sub_1B13C6AF0;
}

id HiddenView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id HiddenView.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);

  return v2;
}

id HiddenView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_4();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

uint64_t method lookup function for BlueprintCollectionViewDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCollectionViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:blueprintViewSupplementaryViewProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t PillViewAssetHandles.x1.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B13B4DC0(v1, a1);
}

uint64_t PillViewAssetHandles.x2.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B13B4DC0(v1 + 40, a1);
}

uint64_t PillViewAssetHandles.x3.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B13B4DC0(v1 + 80, a1);
}

void *PillViewAssetHandles.color.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 120);
  v2 = v1;
  return v1;
}

uint64_t PillViewAssetHandles.init(x1:x2:x3:color:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  sub_1B13C06D0(a1, a5);
  sub_1B13C06D0(a2, a5 + 40);
  result = sub_1B13C06D0(a3, a5 + 80);
  *(_QWORD *)(a5 + 120) = a4;
  return result;
}

uint64_t static PillViewAssetHandles.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202[80];
  _QWORD v203[3];
  _BYTE v204[40];
  _QWORD v205[3];
  _BYTE v206[40];
  _QWORD v207[3];

  v3 = OUTLINED_FUNCTION_1_101(a1);
  v5 = v4;
  v6 = OUTLINED_FUNCTION_2_88(a2);
  if (v3 == v6 && v5 == v7)
  {
    v21 = OUTLINED_FUNCTION_6_77();
    v22 = OUTLINED_FUNCTION_3_76(v21, (uint64_t)v206);
    OUTLINED_FUNCTION_4_72(v22, (uint64_t)v204);
  }
  else
  {
    OUTLINED_FUNCTION_0_122(v6);
    OUTLINED_FUNCTION_5_1();
    v9 = OUTLINED_FUNCTION_7_0();
    v10 = OUTLINED_FUNCTION_3_76(v9, (uint64_t)v206);
    OUTLINED_FUNCTION_4_72(v10, (uint64_t)v204);
    if ((v3 & 1) == 0)
    {
      OUTLINED_FUNCTION_11_45();
      v11 = OUTLINED_FUNCTION_9_57();
      v12 = OUTLINED_FUNCTION_3_76(v11, (uint64_t)v202);
      v13 = OUTLINED_FUNCTION_4_72(v12, (uint64_t)&v186);
LABEL_13:
      v31 = OUTLINED_FUNCTION_12_43(v13, v14, v15, v16, v17, v18, v19, v20, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164,
              v165,
              v166,
              v167,
              v168,
              (uint64_t)v169,
              v170,
              v171,
              v172,
              v173,
              v174,
              v175,
              v176,
              v177,
              v178,
              v179,
              v180,
              v181,
              v182,
              v183,
              v184,
              (uint64_t)v185,
              v186,
              v187,
              v188,
              v189,
              v190,
              v191,
              v192,
              v193,
              v194,
              v195,
              v196,
              v197,
              v198,
              v199,
              v200,
              v201,
              v202[0]);
      v39 = OUTLINED_FUNCTION_10_49(v31, v32, v33, v34, v35, v36, v37, v38, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164,
              v165,
              v166,
              v167,
              v168,
              (uint64_t)v169,
              v170,
              v171,
              v172,
              v173,
              v174,
              v175,
              v176,
              v177,
              v178,
              v179,
              v180,
              v181,
              v182,
              v183,
              v184,
              (uint64_t)v185,
              v186);
      v40 = OUTLINED_FUNCTION_3_76(v39, (uint64_t)&v170);
      v41 = OUTLINED_FUNCTION_4_72(v40, (uint64_t)&v154);
LABEL_20:
      v75 = OUTLINED_FUNCTION_8_57(v41, v42, v43, v44, v45, v46, v47, v48, v154);
      OUTLINED_FUNCTION_7_60(v75, v76, v77, v78, v79, v80, v81, v82, v154, v155, v156, v157, v158, v159, v160, v161);
LABEL_29:
      v106 = 0;
      return v106 & 1;
    }
  }
  v23 = OUTLINED_FUNCTION_1_101(v207);
  v25 = v24;
  v26 = OUTLINED_FUNCTION_2_88(v205);
  if (v23 == v26 && v25 == v27)
  {
    OUTLINED_FUNCTION_6_77();
    OUTLINED_FUNCTION_11_45();
    v49 = OUTLINED_FUNCTION_9_57();
    v50 = OUTLINED_FUNCTION_3_76(v49, (uint64_t)v202);
    OUTLINED_FUNCTION_4_72(v50, (uint64_t)&v186);
  }
  else
  {
    OUTLINED_FUNCTION_0_122(v26);
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_11_45();
    v29 = OUTLINED_FUNCTION_9_57();
    v30 = OUTLINED_FUNCTION_3_76(v29, (uint64_t)v202);
    v13 = OUTLINED_FUNCTION_4_72(v30, (uint64_t)&v186);
    if ((v23 & 1) == 0)
      goto LABEL_13;
  }
  v51 = OUTLINED_FUNCTION_1_101(v203);
  v53 = v52;
  v54 = OUTLINED_FUNCTION_2_88(&v196);
  if (v51 == v54 && v53 == v55)
  {
    v83 = OUTLINED_FUNCTION_6_77();
    v91 = OUTLINED_FUNCTION_12_43(v83, v84, v85, v86, v87, v88, v89, v90, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164,
            v165,
            v166,
            v167,
            v168,
            (uint64_t)v169,
            v170,
            v171,
            v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            (uint64_t)v185,
            v186,
            v187,
            v188,
            v189,
            v190,
            v191,
            v192,
            v193,
            v194,
            v195,
            v196,
            v197,
            v198,
            v199,
            v200,
            v201,
            v202[0]);
    v99 = OUTLINED_FUNCTION_10_49(v91, v92, v93, v94, v95, v96, v97, v98, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164,
            v165,
            v166,
            v167,
            v168,
            (uint64_t)v169,
            v170,
            v171,
            v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            (uint64_t)v185,
            v186);
    v100 = OUTLINED_FUNCTION_3_76(v99, (uint64_t)&v170);
    OUTLINED_FUNCTION_4_72(v100, (uint64_t)&v154);
  }
  else
  {
    OUTLINED_FUNCTION_0_122(v54);
    OUTLINED_FUNCTION_5_1();
    v57 = OUTLINED_FUNCTION_7_0();
    v65 = OUTLINED_FUNCTION_12_43(v57, v58, v59, v60, v61, v62, v63, v64, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164,
            v165,
            v166,
            v167,
            v168,
            (uint64_t)v169,
            v170,
            v171,
            v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            (uint64_t)v185,
            v186,
            v187,
            v188,
            v189,
            v190,
            v191,
            v192,
            v193,
            v194,
            v195,
            v196,
            v197,
            v198,
            v199,
            v200,
            v201,
            v202[0]);
    v73 = OUTLINED_FUNCTION_10_49(v65, v66, v67, v68, v69, v70, v71, v72, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164,
            v165,
            v166,
            v167,
            v168,
            (uint64_t)v169,
            v170,
            v171,
            v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            (uint64_t)v185,
            v186);
    v74 = OUTLINED_FUNCTION_3_76(v73, (uint64_t)&v170);
    v41 = OUTLINED_FUNCTION_4_72(v74, (uint64_t)&v154);
    if ((v51 & 1) == 0)
      goto LABEL_20;
  }
  v101 = v185;
  v102 = v169;
  if (!v185)
  {
    v122 = v169;
    v130 = OUTLINED_FUNCTION_8_57((uint64_t)v122, v123, v124, v125, v126, v127, v128, v129, v154);
    OUTLINED_FUNCTION_7_60(v130, v131, v132, v133, v134, v135, v136, v137, v154, v155, v156, v157, v158, v159, v160, v161);
    if (!v102)
    {
      v106 = 1;
      return v106 & 1;
    }
LABEL_28:

    goto LABEL_29;
  }
  if (!v169)
  {
    v122 = v185;
    v145 = OUTLINED_FUNCTION_8_57((uint64_t)v122, v138, v139, v140, v141, v142, v143, v144, v154);
    OUTLINED_FUNCTION_7_60(v145, v146, v147, v148, v149, v150, v151, v152, v154, v155, v156, v157, v158, v159, v160, v161);
    goto LABEL_28;
  }
  sub_1B13A2864();
  v103 = v102;
  v104 = v101;
  v105 = sub_1B16BA214();
  v106 = v105;
  v114 = OUTLINED_FUNCTION_8_57(v105, v107, v108, v109, v110, v111, v112, v113, v154);
  OUTLINED_FUNCTION_7_60(v114, v115, v116, v117, v118, v119, v120, v121, v154, v155, v156, v157, v158, v159, v160, v161);

  return v106 & 1;
}

uint64_t sub_1B1591534(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PillViewAssetHandles(a2, a1);
  return a2;
}

uint64_t sub_1B1591568(uint64_t a1)
{
  destroy for PillViewAssetHandles(a1);
  return a1;
}

void destroy for PillViewAssetHandles(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);

}

uint64_t initializeWithCopy for PillViewAssetHandles(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  id v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v7;
  v8 = v7;
  return a1;
}

uint64_t *assignWithCopy for PillViewAssetHandles(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  __swift_assign_boxed_opaque_existential_1(a1 + 10, a2 + 10);
  v4 = (void *)a1[15];
  v5 = (void *)a2[15];
  a1[15] = (uint64_t)v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for PillViewAssetHandles(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(void **)(a1 + 120);
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for PillViewAssetHandles(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillViewAssetHandles(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PillViewAssetHandles()
{
  return &type metadata for PillViewAssetHandles;
}

#error "1B15918A0: call analysis failed (funcsize=57)"

uint64_t sub_1B15918C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B15918E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[7];
  BOOL v63;
  __int128 v64;

  OUTLINED_FUNCTION_6();
  v22 = v21;
  v24 = v23;
  v56 = v25;
  v57 = v23;
  v58 = v26;
  v59 = v27;
  v29 = v28;
  v53 = v28;
  v31 = v30;
  v33 = v32;
  v60 = a21;
  v61 = v34;
  v35 = *(_QWORD *)(*(_QWORD *)v30 + 88);
  v36 = sub_1B16BA328();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36, v38);
  v40 = (char *)&v52 - v39;
  v43 = type metadata accessor for Command(0, v35, v41, v42);
  v44 = v56;
  if (!v24)
    v44 = v22;
  v54 = v43;
  v55 = v44;
  if (v24)
    v45 = v22;
  else
    v45 = 0;
  v56 = v45;
  v63 = v24 != 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v40, v29, v36);
  v46 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v47 = OUTLINED_FUNCTION_11_46();
  *(_QWORD *)(v47 + 16) = v35;
  *(_QWORD *)(v47 + 24) = v31;
  OUTLINED_FUNCTION_8_58(v47 + v46, (uint64_t)v40);
  OUTLINED_FUNCTION_8_58((uint64_t)v40, v53);
  v48 = OUTLINED_FUNCTION_11_46();
  *(_QWORD *)(v48 + 16) = v35;
  *(_QWORD *)(v48 + 24) = v31;
  OUTLINED_FUNCTION_8_58(v48 + v46, (uint64_t)v40);
  *(_QWORD *)v33 = v31;
  *(_OWORD *)(v33 + 8) = v64;
  *(_QWORD *)(v33 + 24) = v54;
  *(_QWORD *)(v33 + 32) = &protocol witness table for Command<A>;
  v49 = v59;
  *(_QWORD *)(v33 + 40) = v58;
  *(_QWORD *)(v33 + 48) = v49;
  v50 = v57;
  *(_QWORD *)(v33 + 56) = v55;
  *(_QWORD *)(v33 + 64) = v50;
  *(_QWORD *)(v33 + 72) = v56;
  *(_BYTE *)(v33 + 80) = v63;
  *(_DWORD *)(v33 + 81) = *(_DWORD *)v62;
  *(_DWORD *)(v33 + 84) = *(_DWORD *)&v62[3];
  *(_QWORD *)(v33 + 88) = sub_1B1592510;
  *(_QWORD *)(v33 + 96) = v47;
  *(_QWORD *)(v33 + 104) = sub_1B1592604;
  *(_QWORD *)(v33 + 112) = v48;
  v51 = v60;
  *(_QWORD *)(v33 + 120) = v61;
  *(_QWORD *)(v33 + 128) = v51;
  swift_retain_n();
  OUTLINED_FUNCTION_47();
}

void KeyCommandItem.init<A, B>(command:context:input:discoverabilityInput:modifierFlags:title:)()
{
  __int128 *v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v37 = v2;
  v38 = v3;
  v35 = v4;
  v36 = v5;
  v33 = v7;
  v34 = v6;
  v39 = v8;
  v10 = v9;
  v11 = *v9;
  v12 = *(_QWORD *)(*v9 + 136);
  v13 = sub_1B16BA328();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v17 = MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&v29 - v20;
  v22 = *((_QWORD *)v1 + 2);
  v31 = *((_QWORD *)v1 + 3);
  v32 = v22;
  v29 = *v1;
  OUTLINED_FUNCTION_10_50((uint64_t)&v29 - v20);
  OUTLINED_FUNCTION_10_50((uint64_t)v18);
  v23 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = v12;
  *((_QWORD *)v24 + 3) = *(_QWORD *)(v11 + 144);
  *((_QWORD *)v24 + 4) = *(_QWORD *)(v11 + 152);
  *((_QWORD *)v24 + 5) = v10;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v24[v23], v18, v13);
  v25 = &v24[(v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_OWORD *)v25 = v29;
  v26 = v31;
  *((_QWORD *)v25 + 2) = v32;
  *((_QWORD *)v25 + 3) = v26;
  v27 = swift_retain();
  sub_1B15918E8(v27, (uint64_t)v21, v34, v35, v36, v37, v38, (uint64_t)sub_1B1591DB8, (uint64_t)v24, v28, v29, *((uint64_t *)&v29 + 1), v30, v31, v32, v33, v34, v35, v36,
    v37,
    v38);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v39, v13);
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B1591C14(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a7;
  v27 = a8;
  v25 = a6;
  v12 = *a3;
  v13 = *(_QWORD *)(*a3 + 144);
  v14 = sub_1B16BA328();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v24 - v17;
  ObjectType = swift_getObjectType();
  v20 = *(_QWORD *)(v12 + 136);
  v21 = *(_QWORD *)(v12 + 152);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 80))(a3, a4, v20, v13, v21, ObjectType, a2);
  v28 = a5;
  v29 = v25;
  v30 = v26;
  v31 = v27;
  v22 = type metadata accessor for StateCommandValue(0, v13, MEMORY[0x1E0DEA968], v21);
  StateCommandValue.value(for:)((uint64_t)v18, v22, (uint64_t)&v32);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  return v32;
}

uint64_t sub_1B1591D3C()
{
  OUTLINED_FUNCTION_6_78();
  swift_release();
  if (!OUTLINED_FUNCTION_4_73())
    OUTLINED_FUNCTION_2_7();
  swift_release();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B1591DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_3_77() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1B1591C14(v2, v0, *(uint64_t **)(v1 + 40), v1 + v4, *v5, v5[1], v5[2], v5[3]);
}

#error "1B1591EF4: call analysis failed (funcsize=62)"

void sub_1B1591F18(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v22 = a6;
  v23 = a7;
  v20 = a4;
  v21 = a5;
  v9 = *a3;
  v10 = *(_QWORD *)(*a3 + 144);
  v11 = sub_1B16BA328();
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x1E0C80A78](v11, v12);
  v13 = *(_QWORD *)(v9 + 136);
  v24 = sub_1B16BA328();
  MEMORY[0x1E0C80A78](v24, v14);
  v16 = (char *)&v19 - v15;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 72))(a3, v13, ObjectType, a2);
  v18 = *(_QWORD *)(v9 + 152);
  (*(void (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 80))(a3, v16, v13, v10, v18, ObjectType, a2);
  v31 = v20;
  v32 = v21;
  v33 = v22;
  v34 = v23;
  v27 = v10;
  v28 = v13;
  v29 = MEMORY[0x1E0DEA968];
  v30 = v18;
  type metadata accessor for StateCommandContextValue();
}

uint64_t sub_1B1592050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  StateCommandContextValue.value(for:context:)(v1, v3, a1, v4 - 144);
  if (*(_QWORD *)(v4 - 136))
    v5 = *(_QWORD *)(v4 - 144);
  else
    v5 = 0;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 160) + 8))(v1, *(_QWORD *)(v4 - 152));
  (*(void (**)(uint64_t, _QWORD))(v2 + 8))(v3, *(_QWORD *)(v4 - 168));
  return v5;
}

uint64_t sub_1B15920C4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B15920F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B1591F18(a1, a2, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1B1592108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    sub_1B16B9740();
  return sub_1B16B9740();
}

uint64_t destroy for KeyCommandItem(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1B157A068(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for KeyCommandItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_BYTE *)(a2 + 80);
  sub_1B1592108(v5, v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 128);
  v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  *(_QWORD *)(a1 + 128) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for KeyCommandItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_BYTE *)(a2 + 80);
  sub_1B1592108(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_BYTE *)(a1 + 80) = v9;
  sub_1B157A068(v10, v11, v12, v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v16;
  swift_retain();
  swift_release();
  v17 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v17;
  swift_retain();
  swift_release();
  v18 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v18;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for KeyCommandItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_BYTE *)(a1 + 80);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 80) = v6;
  sub_1B157A068(v7, v8, v9, v10, v11, v12);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyCommandItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyCommandItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyCommandItem()
{
  return &type metadata for KeyCommandItem;
}

uint64_t sub_1B1592478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t ObjectType;

  v9 = *a4;
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a2 + 8))(a4, a5, a3, *(_QWORD *)(v9 + 88), ObjectType, a2);
}

uint64_t sub_1B1592510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  OUTLINED_FUNCTION_5_13();
  OUTLINED_FUNCTION_9_58();
  return sub_1B1592478(a1, a2, a3, *(uint64_t **)(v3 + 24), v3 + v7);
}

uint64_t sub_1B159255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return CommandCenterType.canExecute<A>(command:context:)(a3, a4, ObjectType, a2) & 1;
}

uint64_t objectdestroy_8Tm_0()
{
  OUTLINED_FUNCTION_6_78();
  swift_release();
  if (!OUTLINED_FUNCTION_4_73())
    OUTLINED_FUNCTION_2_7();
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B1592604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_3_77();
  OUTLINED_FUNCTION_9_58();
  return sub_1B159255C(v2, v0, *(_QWORD *)(v1 + 24), v1 + v3);
}

uint64_t dispatch thunk of Refreshable.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t static Commands.back.getter()
{
  if (qword_1ED1849B0 != -1)
    swift_once();
  return swift_retain();
}

id sub_1B1592684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;

  v0 = sub_1B16B77F0();
  MEMORY[0x1E0C80A78](v0, v1);
  v2 = sub_1B16B77B4();
  v3 = (uint64_t)OUTLINED_FUNCTION_52_0(v2, sel_isSelected);
  if ((_DWORD)v3)
  {
    sub_1B16B77E4();
    OUTLINED_FUNCTION_1_102();
    v3 = OUTLINED_FUNCTION_0_123();
  }
  v4 = (uint64_t)OUTLINED_FUNCTION_52_0(v3, sel_isHighlighted);
  if ((_DWORD)v4)
  {
    sub_1B16B77C0();
    OUTLINED_FUNCTION_1_102();
    v4 = OUTLINED_FUNCTION_0_123();
  }
  result = OUTLINED_FUNCTION_52_0(v4, sel_isFocused);
  if ((_DWORD)result)
  {
    sub_1B16B77CC();
    OUTLINED_FUNCTION_1_102();
    return (id)OUTLINED_FUNCTION_0_123();
  }
  return result;
}

void *BlueprintLayoutOptionsCommit.init(layoutOptions:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  _BYTE v11[528];

  v2 = sub_1B16B7BE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_3_78(v11);
  sub_1B16B7BD4();
  v7 = sub_1B16B7BBC();
  v9 = v8;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  result = memcpy(a1 + 2, v11, 0x20DuLL);
  *a1 = v7;
  a1[1] = v9;
  return result;
}

void BlueprintLayoutOptions.kind.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_23_30(a1);
}

void BlueprintLayoutOptions.layoutViewportConfiguration.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_23_30(a1);
}

double BlueprintLayoutOptions.readableViewport.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double BlueprintLayoutOptions.readableViewportFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t BlueprintLayoutOptions.appState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

double BlueprintLayoutOptions.unadjustedLayoutMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 192);
}

void BlueprintLayoutOptions.layoutOrientation.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_23_30(a1);
}

id BlueprintLayoutOptions.isValid.getter(uint64_t a1)
{
  id result;

  result = OUTLINED_FUNCTION_32_0(a1, sel_horizontalSizeClass);
  if (result)
    return (id)(OUTLINED_FUNCTION_32_0((uint64_t)result, sel_verticalSizeClass) != 0);
  return result;
}

void *BlueprintLayoutOptions.rendererOptions.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return memcpy(a1, (const void *)(v1 + 392), 0x85uLL);
}

BOOL static BlueprintLayoutOptions.ViewportConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void BlueprintLayoutOptions.ViewportConfiguration.hash(into:)()
{
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_0_0();
}

void _s5TeaUI26BlueprintLayoutOptionsKindO9hashValueSivg_0()
{
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_159();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

BOOL static BlueprintLayoutOptions.ViewportOrientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void BlueprintLayoutOptions.ViewportOrientation.hash(into:)()
{
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutOptions.ViewportOrientation.hashValue.getter()
{
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_159();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks __swiftcall BlueprintLayoutOptions.ViewportDimensionChecks.init(rawValue:)(TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks rawValue)
{
  TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t BlueprintLayoutOptions.ViewportDimensionChecks.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks sub_1B159299C(Swift::Int *a1)
{
  return BlueprintLayoutOptions.ViewportDimensionChecks.init(rawValue:)(*a1);
}

TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks sub_1B15929A4@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks result;

  result.rawValue = BlueprintLayoutOptions.ViewportDimensionChecks.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1B15929CC(uint64_t *a1@<X8>)
{
  *a1 = BlueprintLayoutOptions.ViewportDimensionChecks.rawValue.getter();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutOptions.init(kind:layoutViewportConfiguration:viewport:windowSize:readableViewportFrame:visibleViewportFrame:screenScale:screenNativeSize:traitCollection:appTraitCollection:appState:contentSizeCategory:layoutMargins:unadjustedLayoutMargins:layoutDirection:safeAreaInsets:rendererOptions:compositionalLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  const void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  const void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  char v100;
  __int128 v101;
  char v102;
  __int128 v103;
  char v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  _BYTE v111[128];
  _BYTE v112[136];

  OUTLINED_FUNCTION_93_0();
  v92 = v48;
  v98 = v49;
  v51 = v50;
  v97 = v52;
  v54 = v53;
  v56 = v55;
  v96 = v57;
  v95 = v58;
  v94 = v59;
  v93 = v60;
  v91 = v61;
  v90 = v62;
  v89 = v63;
  v65 = v64;
  v67 = v66;
  v87 = *v69;
  v88 = *v68;
  OUTLINED_FUNCTION_25_31(a48, (uint64_t)v111);
  OUTLINED_FUNCTION_25_31((uint64_t)v111, (uint64_t)v112);
  if (sub_1B1593C10((uint64_t)v112) == 1)
  {
    v70 = qword_1ED185228;
    v71 = v56;
    v72 = v54;
    v73 = v51;
    v74 = v51;
    if (v70 != -1)
      swift_once();
    OUTLINED_FUNCTION_5_73(&v99, &qword_1ED1851A8);
    sub_1B1558978((uint64_t)&v99);

  }
  else
  {
    v73 = v51;
    sub_1B1593C2C((uint64_t)v111, (uint64_t)&v99, &qword_1EEF341B0);
  }
  v75 = v110;
  v76 = v108;
  v77 = v109;
  v78 = v107;
  v85 = v106;
  v86 = v105;
  v79 = v104;
  v83 = v101;
  v84 = v103;
  v80 = v102;
  v82 = v99;
  v81 = v100;
  LOBYTE(v99) = v109;
  OUTLINED_FUNCTION_8_59((void *)(v67 + 392), v92);
  *(_QWORD *)(v67 + 8) = v65;
  *(_QWORD *)(v67 + 16) = v89;
  *(_BYTE *)v67 = v88;
  *(_BYTE *)(v67 + 1) = v87;
  *(_QWORD *)(v67 + 24) = v90;
  *(_QWORD *)(v67 + 32) = v91;
  *(_QWORD *)(v67 + 40) = v93;
  *(_QWORD *)(v67 + 48) = v94;
  *(_QWORD *)(v67 + 56) = v95;
  *(_QWORD *)(v67 + 64) = v96;
  *(_QWORD *)(v67 + 72) = a29;
  *(_QWORD *)(v67 + 80) = a30;
  *(_QWORD *)(v67 + 88) = a31;
  *(_QWORD *)(v67 + 96) = a32;
  *(_QWORD *)(v67 + 104) = a33;
  *(_QWORD *)(v67 + 112) = a34;
  *(_QWORD *)(v67 + 120) = a35;
  *(_QWORD *)(v67 + 128) = v56;
  *(_QWORD *)(v67 + 136) = v54;
  *(_QWORD *)(v67 + 144) = v97;
  *(_QWORD *)(v67 + 152) = v73;
  *(_QWORD *)(v67 + 160) = a36;
  *(_QWORD *)(v67 + 168) = a37;
  *(_QWORD *)(v67 + 176) = a38;
  *(_QWORD *)(v67 + 184) = a39;
  *(_QWORD *)(v67 + 192) = a40;
  *(_QWORD *)(v67 + 200) = a41;
  *(_QWORD *)(v67 + 208) = a42;
  *(_QWORD *)(v67 + 216) = a43;
  *(_QWORD *)(v67 + 224) = v98;
  *(_OWORD *)(v67 + 232) = v82;
  *(_BYTE *)(v67 + 248) = v81;
  *(_OWORD *)(v67 + 256) = v83;
  *(_BYTE *)(v67 + 272) = v80;
  *(_OWORD *)(v67 + 280) = v84;
  *(_BYTE *)(v67 + 296) = v79;
  *(_OWORD *)(v67 + 304) = v86;
  *(_OWORD *)(v67 + 320) = v85;
  *(_QWORD *)(v67 + 336) = v78;
  *(_QWORD *)(v67 + 344) = v76;
  *(_BYTE *)(v67 + 352) = v77;
  *(_BYTE *)(v67 + 353) = v75;
  *(_QWORD *)(v67 + 360) = a44;
  *(_QWORD *)(v67 + 368) = a45;
  *(_QWORD *)(v67 + 376) = a46;
  *(_QWORD *)(v67 + 384) = a47;
  OUTLINED_FUNCTION_26_1();
}

void BlueprintLayoutOptions.init(layoutViewportConfiguration:viewport:windowSize:readableViewportFrame:visibleViewportFrame:screenScale:screenNativeSize:traitCollection:appTraitCollection:contentSizeCategory:layoutMargins:unadjustedLayoutMargins:layoutDirection:safeAreaInsets:compositionalLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  char v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  char v185;
  _BYTE v186[128];
  _BYTE v187[136];
  _BYTE v188[136];

  OUTLINED_FUNCTION_93_0();
  v169 = v48;
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v163 = v55;
  v166 = v56;
  v157 = v57;
  v160 = v58;
  v151 = v59;
  v154 = v60;
  v144 = v61;
  v139 = v62;
  v64 = v63;
  HIDWORD(v136) = *v65;
  sub_1B1593C2C(v66, (uint64_t)v186, &qword_1EEF341B0);
  v67 = qword_1ED185CD0;
  v68 = v54;
  v69 = v52;
  v70 = v50;
  if (v67 != -1)
    swift_once();
  OUTLINED_FUNCTION_8_59(v187, &xmmword_1ED185888);
  sub_1B1593C2C((uint64_t)v186, (uint64_t)v188, &qword_1EEF341B0);
  if (sub_1B1593C10((uint64_t)v188) == 1)
  {
    if (qword_1ED185228 != -1)
      swift_once();
    OUTLINED_FUNCTION_5_73(&v172, &qword_1ED1851A8);
    sub_1B1558978((uint64_t)&v172);

  }
  else
  {

    v71 = sub_1B1593C2C((uint64_t)v186, (uint64_t)&v172, &qword_1EEF341B0);
  }
  v79 = v185;
  v80 = v183;
  v81 = v184;
  v82 = v182;
  v83 = OUTLINED_FUNCTION_18_35(v71, v72, v73, v74, v75, v76, v77, v78, v97, v100, v102, v105, v107, v110, v112, v114, v115, v117, a36,
          a37,
          a38,
          a39,
          a40,
          a41,
          a42,
          a43,
          a44,
          v136,
          v139,
          a45,
          v144,
          a46,
          a47,
          v151,
          v154,
          v157,
          v160,
          v163,
          v166,
          v169,
          v172,
          *((uint64_t *)&v172 + 1),
          v173,
          v174,
          *((uint64_t *)&v174 + 1),
          v175,
          v176,
          v177,
          v178,
          v179,
          v180,
          v181);
  v104 = OUTLINED_FUNCTION_16_42(v84, v85, v86, v87, v88, v89, v90, v91, v98, v101, v103, v106, v108, v111, v83.n128_i64[0], v83.n128_i64[1], v92, v93, v118,
           v120,
           v122,
           v124,
           v126,
           v128,
           v130,
           v132,
           v134,
           v137,
           v140,
           v142,
           v145,
           v147,
           v149,
           v152,
           v155,
           v158,
           v161,
           v164,
           v167,
           v170,
           v172,
           *((uint64_t *)&v172 + 1),
           v173,
           v174);
  v109 = v94;
  v95 = v175;
  v99 = v172;
  v96 = v173;
  LOBYTE(v172) = v81;
  OUTLINED_FUNCTION_8_59((void *)(v64 + 392), v187);
  *(_QWORD *)(v64 + 8) = v141;
  *(_QWORD *)(v64 + 16) = v146;
  *(_BYTE *)v64 = 1;
  *(_BYTE *)(v64 + 1) = v138;
  *(_QWORD *)(v64 + 24) = v153;
  *(_QWORD *)(v64 + 32) = v156;
  *(_QWORD *)(v64 + 40) = v159;
  *(_QWORD *)(v64 + 48) = v162;
  *(_QWORD *)(v64 + 56) = v165;
  *(_QWORD *)(v64 + 64) = v168;
  *(_QWORD *)(v64 + 72) = a29;
  *(_QWORD *)(v64 + 80) = a30;
  *(_QWORD *)(v64 + 88) = a31;
  *(_QWORD *)(v64 + 96) = a32;
  *(_QWORD *)(v64 + 104) = a33;
  *(_QWORD *)(v64 + 112) = a34;
  *(_QWORD *)(v64 + 120) = a35;
  *(_QWORD *)(v64 + 128) = v68;
  *(_QWORD *)(v64 + 136) = v69;
  *(_QWORD *)(v64 + 144) = 0;
  *(_QWORD *)(v64 + 152) = v70;
  *(_QWORD *)(v64 + 160) = v119;
  *(_QWORD *)(v64 + 168) = v121;
  *(_QWORD *)(v64 + 176) = v123;
  *(_QWORD *)(v64 + 184) = v125;
  *(_QWORD *)(v64 + 192) = v127;
  *(_QWORD *)(v64 + 200) = v129;
  *(_QWORD *)(v64 + 208) = v131;
  *(_QWORD *)(v64 + 216) = v133;
  *(_QWORD *)(v64 + 224) = v171;
  *(_OWORD *)(v64 + 232) = v99;
  *(_BYTE *)(v64 + 248) = v96;
  *(__n128 *)(v64 + 256) = v104;
  *(_BYTE *)(v64 + 272) = v95;
  *(_OWORD *)(v64 + 280) = v109;
  *(_BYTE *)(v64 + 296) = v47;
  *(_OWORD *)(v64 + 304) = v116;
  *(_OWORD *)(v64 + 320) = v113;
  *(_QWORD *)(v64 + 336) = v82;
  *(_QWORD *)(v64 + 344) = v80;
  *(_BYTE *)(v64 + 352) = v81;
  *(_BYTE *)(v64 + 353) = v79;
  *(_QWORD *)(v64 + 360) = v135;
  *(_QWORD *)(v64 + 368) = v143;
  *(_QWORD *)(v64 + 376) = v148;
  *(_QWORD *)(v64 + 384) = v150;
  OUTLINED_FUNCTION_26_1();
}

BOOL BlueprintLayoutOptions.isValid(layoutOptions:)(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;

  v2 = *(double *)(a1 + 8);
  v3 = *(double *)(a1 + 168);
  v4 = *(double *)(a1 + 184);
  v5 = v1[1];
  v6 = v1[21];
  v7 = v1[23];
  v8 = objc_msgSend(*(id *)(a1 + 128), sel_horizontalSizeClass);
  return v8 == OUTLINED_FUNCTION_32_0((uint64_t)v8, sel_horizontalSizeClass) && v2 == v5 && v3 == v6 && v4 == v7;
}

void static BlueprintLayoutOptions.zero.getter(void *a1@<X8>)
{
  _BYTE v2[528];

  if (qword_1ED184918 != -1)
    swift_once();
  OUTLINED_FUNCTION_3_78(v2);
  OUTLINED_FUNCTION_3_78(a1);
  sub_1B1424D1C((uint64_t)v2);
  OUTLINED_FUNCTION_17_32();
}

void BlueprintLayoutOptionsCommit.identifier.getter()
{
  sub_1B16B9740();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutOptionsCommit.layoutOptions.getter(void *a1@<X8>)
{
  _BYTE v2[528];

  OUTLINED_FUNCTION_3_78(v2);
  OUTLINED_FUNCTION_3_78(a1);
  sub_1B1424D1C((uint64_t)v2);
  OUTLINED_FUNCTION_17_32();
}

Swift::Bool __swiftcall BlueprintLayoutOptionsProviderType.isValidCommit(view:)(UIView *view)
{
  uint64_t v1;
  int v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v11;
  _BYTE v12[544];
  _BYTE v13[24];
  double v14;
  double v15;

  (*(void (**)())(v1 + 16))();
  sub_1B16B82DC();
  swift_release();
  OUTLINED_FUNCTION_24_25((uint64_t)&v11, (uint64_t)v12);
  OUTLINED_FUNCTION_24_25((uint64_t)v12, (uint64_t)v13);
  v3 = sub_1B147DDC0((uint64_t)v13);
  if (v3 != 1)
  {
    v4 = v14;
    v5 = v15;
    -[UIView bounds](view, sel_bounds);
    v7 = v6;
    v9 = v8;
    sub_1B1593C78((uint64_t)v12);
    LOBYTE(v3) = v4 == v7 && v5 == v9;
  }
  return v3;
}

void BlueprintLayoutOptionsProvider.margins.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_13();
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_48();
}

void BlueprintLayoutOptionsProvider.margins.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutOptionsProvider.layoutViewportConfiguration.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintLayoutOptionsProvider.layoutViewportDimensionChecks.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

uint64_t BlueprintLayoutOptionsProvider.__allocating_init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_13_43();
  OUTLINED_FUNCTION_22_28(a1, a2);
  return v4;
}

uint64_t BlueprintLayoutOptionsProvider.init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;
  _BYTE v17[544];

  v5 = v4;
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 1;
  *(_BYTE *)(v4 + 40) = 1;
  *(_QWORD *)(v4 + 48) = 1;
  sub_1B1593E08(v17);
  sub_1B1593C2C((uint64_t)v17, (uint64_t)&v16, (unint64_t *)&qword_1ED1869A8);
  sub_1B13C6E80();
  swift_allocObject();
  *(_QWORD *)(v4 + 56) = sub_1B16B82D0();
  *(_QWORD *)(v4 + 32) = a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  *(_QWORD *)(v4 + 64) = sub_1B1593E44;
  *(_QWORD *)(v4 + 72) = v10;
  sub_1B141C2B0(a2, v4 + 80);
  objc_opt_self();
  v11 = (void *)swift_dynamicCastObjCClass();
  if (v11)
    v12 = a1;
  objc_allocWithZone((Class)type metadata accessor for RendererEnvironment());
  v13 = a1;
  v14 = RendererEnvironment.init(scrollView:testing:)(v11, 0);
  sub_1B141C22C(a2);
  *(_QWORD *)(v5 + 120) = v14;
  return v5;
}

id sub_1B1593484(uint64_t (*a1)(void), int a2, id a3)
{
  id v3;
  id v4;
  void *v5;
  void *v7;
  void *v8;

  if (a1)
  {
    v3 = objc_msgSend((id)a1(), sel_traitCollection);
    swift_unknownObjectRelease();
    return v3;
  }
  v4 = objc_msgSend(a3, sel_window);
  if (v4)
  {
    v5 = v4;
    v3 = objc_msgSend(v4, sel_traitCollection);

    return v3;
  }
  sub_1B13A1818(0, (unint64_t *)&qword_1ED1837C8);
  static UIWindowScene.activeScene.getter();
  if (v7)
  {
    v8 = v7;
    v3 = objc_msgSend(v7, sel_traitCollection);

    if (v3)
      return v3;
  }
  return objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
}

uint64_t BlueprintLayoutOptionsProvider.__allocating_init(view:contentSizeCategoryProvider:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE v7[40];

  sub_1B141C2B0(a3, (uint64_t)v7);
  v5 = OUTLINED_FUNCTION_13_43();
  OUTLINED_FUNCTION_22_28(a1, (uint64_t)v7);
  swift_unknownObjectRelease();
  sub_1B141C22C(a3);
  return v5;
}

void BlueprintLayoutOptionsProvider.createLayoutOptions(bounds:kind:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  __int128 v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  char v162;
  _QWORD v163[3];
  uint64_t v164;
  uint64_t v165;
  _BYTE v166[168];

  OUTLINED_FUNCTION_93_0();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  HIDWORD(v139) = *v7;
  v149 = *(_QWORD *)&v8;
  *(double *)&v11 = sub_1B1593A64(*(void **)(v0 + 32), v9, v10, v3, v8);
  v135 = v12;
  v137 = v11;
  v131 = v14;
  v133 = v13;
  v15 = (void *)(*(uint64_t (**)(void))(v0 + 64))();
  v16 = sub_1B1593B4C(v0, (SEL *)&selRef_layoutMargins);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  *(double *)&v23 = sub_1B1593B4C(v0, (SEL *)&selRef_safeAreaInsets);
  v145 = v24;
  v147 = v23;
  v141 = v26;
  v143 = v25;
  v27 = OUTLINED_FUNCTION_13();
  HIDWORD(v129) = *(unsigned __int8 *)(v0 + 40);
  v28 = OUTLINED_FUNCTION_11_2(v27, sel_window);
  if (!v28)
    UIView.mostParentView.getter();
  v29 = v28;
  objc_msgSend(v28, sel_bounds);
  v125 = v31;
  v127 = v30;

  v33 = OUTLINED_FUNCTION_11_2(v32, sel_readableContentGuide);
  objc_msgSend(v33, sel_layoutFrame);
  v121 = v35;
  v123 = v34;
  v117 = v37;
  v119 = v36;

  v38 = (void *)objc_opt_self();
  v39 = objc_msgSend(v38, sel_mainScreen);
  objc_msgSend(v39, sel_scale);
  v115 = v40;

  v41 = objc_msgSend(v38, sel_mainScreen);
  objc_msgSend(v41, sel_nativeBounds);
  v43 = v42;
  v45 = v44;

  v47 = OUTLINED_FUNCTION_11_2(v46, sel_traitCollection);
  v48 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v113 = objc_msgSend(v48, sel_applicationState);

  v50 = OUTLINED_FUNCTION_11_2(v49, sel_traitCollection);
  v51 = objc_msgSend(v50, sel_preferredContentSizeCategory);

  v52 = (void *)objc_opt_self();
  v111 = objc_msgSend(v52, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, OUTLINED_FUNCTION_11_2((uint64_t)v52, sel_semanticContentAttribute));
  RendererEnvironment.rendererOptions.getter((uint64_t)v166);
  sub_1B141C2B0(v2 + 80, (uint64_t)v163);
  v53 = v164;
  if (v164)
  {
    v54 = v47;
    v55 = v165;
    __swift_project_boxed_opaque_existential_1(v163, v164);
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t, uint64_t))(v55 + 8))(&v151, v15, v53, v55);
    v56 = v152;
    v91 = v151;
    v96 = (__n128)v153;
    v57 = v154;
    v1 = v156;
    v109 = v157;
    v101 = v155;
    v106 = v158;
    v58 = v159;
    v59 = v160;
    v60 = v161;
    v61 = v162;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v163);
  }
  else
  {
    sub_1B141C22C((uint64_t)v163);
    v62 = qword_1ED185228;
    v54 = v47;
    v63 = v47;
    v64 = v15;
    v65 = v51;
    if (v62 != -1)
      swift_once();
    OUTLINED_FUNCTION_5_73(&v151, &qword_1ED1851A8);
    sub_1B1558978((uint64_t)&v151);

    v61 = v162;
    v59 = v160;
    v60 = v161;
    v58 = v159;
    v74 = OUTLINED_FUNCTION_18_35(v66, v67, v68, v69, v70, v71, v72, v73, v86, (uint64_t)v15, v90, v93, v95, v98, v100, v103, v105, v107, v108,
            v110,
            (uint64_t)v111,
            (uint64_t)v113,
            v115,
            v117,
            v119,
            v121,
            v123,
            v125,
            v127,
            v129,
            v131,
            v133,
            v135,
            v137,
            v139,
            v141,
            v143,
            v145,
            v147,
            v149,
            v151,
            *((uint64_t *)&v151 + 1),
            v152,
            v153,
            *((uint64_t *)&v153 + 1),
            v154,
            v155,
            *((uint64_t *)&v155 + 1),
            v156,
            v157,
            *((uint64_t *)&v157 + 1),
            v158);
    v96 = OUTLINED_FUNCTION_16_42(v75, v76, v77, v78, v79, v80, v81, v82, v87, v88, v92, v94, v97, v99, v102, v104, v74.n128_i64[0], v74.n128_i64[1], v83,
            v84,
            v112,
            v114,
            v116,
            v118,
            v120,
            v122,
            v124,
            v126,
            v128,
            v130,
            v132,
            v134,
            v136,
            v138,
            v140,
            v142,
            v144,
            v146,
            v148,
            v150,
            v151,
            *((uint64_t *)&v151 + 1),
            v152,
            v153);
    v101 = v85;
    v57 = v154;
    v91 = v151;
    v56 = v152;
    v15 = v89;
  }
  LOBYTE(v151) = v60;
  OUTLINED_FUNCTION_8_59((void *)(v6 + 392), v166);
  *(_BYTE *)v6 = BYTE4(v139);
  *(_BYTE *)(v6 + 1) = BYTE4(v129);
  *(double *)(v6 + 8) = v4;
  *(_QWORD *)(v6 + 16) = v149;
  *(_QWORD *)(v6 + 24) = v127;
  *(_QWORD *)(v6 + 32) = v125;
  *(_QWORD *)(v6 + 40) = v123;
  *(_QWORD *)(v6 + 48) = v121;
  *(_QWORD *)(v6 + 56) = v119;
  *(_QWORD *)(v6 + 64) = v117;
  *(_QWORD *)(v6 + 72) = v137;
  *(_QWORD *)(v6 + 80) = v135;
  *(_QWORD *)(v6 + 88) = v133;
  *(_QWORD *)(v6 + 96) = v131;
  *(_QWORD *)(v6 + 104) = v115;
  *(_QWORD *)(v6 + 112) = v43;
  *(_QWORD *)(v6 + 120) = v45;
  *(_QWORD *)(v6 + 128) = v54;
  *(_QWORD *)(v6 + 136) = v15;
  *(_QWORD *)(v6 + 144) = v113;
  *(_QWORD *)(v6 + 152) = v51;
  *(double *)(v6 + 160) = v16;
  *(_QWORD *)(v6 + 168) = v18;
  *(_QWORD *)(v6 + 176) = v20;
  *(_QWORD *)(v6 + 184) = v22;
  *(double *)(v6 + 192) = v16;
  *(_QWORD *)(v6 + 200) = v18;
  *(_QWORD *)(v6 + 208) = v20;
  *(_QWORD *)(v6 + 216) = v22;
  *(_QWORD *)(v6 + 224) = v111;
  *(_OWORD *)(v6 + 232) = v91;
  *(_BYTE *)(v6 + 248) = v56;
  *(__n128 *)(v6 + 256) = v96;
  *(_BYTE *)(v6 + 272) = v57;
  *(_OWORD *)(v6 + 280) = v101;
  *(_BYTE *)(v6 + 296) = v1;
  *(_OWORD *)(v6 + 304) = v109;
  *(_OWORD *)(v6 + 320) = v106;
  *(_QWORD *)(v6 + 336) = v58;
  *(_QWORD *)(v6 + 344) = v59;
  *(_BYTE *)(v6 + 352) = v60;
  *(_BYTE *)(v6 + 353) = v61;
  *(_QWORD *)(v6 + 360) = v147;
  *(_QWORD *)(v6 + 368) = v145;
  *(_QWORD *)(v6 + 376) = v143;
  *(_QWORD *)(v6 + 384) = v141;
  OUTLINED_FUNCTION_26_1();
}

double sub_1B1593A64(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = (void *)v9;
    v11 = a1;
    v12 = objc_msgSend(v10, sel_bounds);
    v14 = v13;
    v16 = v15;
    v17 = sub_1B141C380((uint64_t)v12);
    v19 = v18;

    return UIEdgeInsetsInsetRect(v14, v16, a4, a5, v17, v19);
  }
  return a2;
}

double sub_1B1593B4C(uint64_t a1, SEL *a2)
{
  double v2;
  double v3;

  objc_msgSend(*(id *)(a1 + 32), *a2);
  OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_9_59();
  v3 = v2;
  OUTLINED_FUNCTION_9_59();
  return v3;
}

uint64_t BlueprintLayoutOptionsProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1B141C22C(v0 + 80);

  return v0;
}

uint64_t BlueprintLayoutOptionsProvider.__deallocating_deinit()
{
  BlueprintLayoutOptionsProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1593C10(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 121);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_1B1593C2C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1B150A754(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B1593C78(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v7 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 272);
  v6 = *(_OWORD *)(a1 + 288);
  v3 = *(_OWORD *)(a1 + 240);
  v4 = *(_OWORD *)(a1 + 256);
  sub_1B1593D5C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(void **)(a1 + 144),
    *(void **)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(void **)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    SBYTE8(v4),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    SBYTE8(v7));
  return a1;
}

uint64_t sub_1B1593D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();

    sub_1B14262CC(a32, a33, a34);
    sub_1B14262CC(a35, a36, a37);
    return sub_1B14262CC(a38, a39, a40);
  }
  return result;
}

void sub_1B1593E08(void *a1)
{
  bzero(a1, 0x21DuLL);
}

uint64_t sub_1B1593E10()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

id sub_1B1593E44()
{
  uint64_t v0;

  return sub_1B1593484(*(uint64_t (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32));
}

void sub_1B1593E50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED185498[0])
  {
    sub_1B1456E9C();
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, qword_1ED185498);
  }
}

unint64_t sub_1B1593EA8()
{
  unint64_t result;

  result = qword_1EEF341B8;
  if (!qword_1EEF341B8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutOptionsKind, &type metadata for BlueprintLayoutOptionsKind);
    atomic_store(result, (unint64_t *)&qword_1EEF341B8);
  }
  return result;
}

unint64_t sub_1B1593EE8()
{
  unint64_t result;

  result = qword_1EEF341C0;
  if (!qword_1EEF341C0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutOptions.ViewportConfiguration, &type metadata for BlueprintLayoutOptions.ViewportConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EEF341C0);
  }
  return result;
}

unint64_t sub_1B1593F28()
{
  unint64_t result;

  result = qword_1EEF341C8;
  if (!qword_1EEF341C8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutOptions.ViewportOrientation, &type metadata for BlueprintLayoutOptions.ViewportOrientation);
    atomic_store(result, (unint64_t *)&qword_1EEF341C8);
  }
  return result;
}

unint64_t sub_1B1593F68()
{
  unint64_t result;

  result = qword_1EEF341D0;
  if (!qword_1EEF341D0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutOptions.ViewportDimensionChecks, &type metadata for BlueprintLayoutOptions.ViewportDimensionChecks);
    atomic_store(result, (unint64_t *)&qword_1EEF341D0);
  }
  return result;
}

unint64_t sub_1B1593FA8()
{
  unint64_t result;

  result = qword_1EEF341D8;
  if (!qword_1EEF341D8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintLayoutOptions.ViewportDimensionChecks, &type metadata for BlueprintLayoutOptions.ViewportDimensionChecks);
    atomic_store(result, (unint64_t *)&qword_1EEF341D8);
  }
  return result;
}

void type metadata accessor for BlueprintLayoutOptionsKind()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t assignWithCopy for BlueprintLayoutOptions(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v4 = (_BYTE *)(a2 + 353);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v5 = *(void **)(a2 + 128);
  v6 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v5;
  v7 = v5;

  v8 = *(void **)(a2 + 136);
  v9 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v11 = *(void **)(a2 + 152);
  v12 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v14 = *(_QWORD *)(a2 + 232);
  v15 = *(_QWORD *)(a2 + 240);
  v16 = *(_BYTE *)(a2 + 248);
  sub_1B14267E4(v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 232);
  v18 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 232) = v14;
  *(_QWORD *)(a1 + 240) = v15;
  v19 = *(_BYTE *)(a1 + 248);
  *(_BYTE *)(a1 + 248) = v16;
  sub_1B14262CC(v17, v18, v19);
  v20 = *(_QWORD *)(a2 + 256);
  v21 = *(_QWORD *)(a2 + 264);
  v22 = *(_BYTE *)(a2 + 272);
  sub_1B14267E4(v20, v21, v22);
  v23 = *(_QWORD *)(a1 + 256);
  v24 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v20;
  *(_QWORD *)(a1 + 264) = v21;
  v25 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v22;
  sub_1B14262CC(v23, v24, v25);
  v26 = *(_QWORD *)(a2 + 280);
  v27 = *(_QWORD *)(a2 + 288);
  v28 = *(_BYTE *)(a2 + 296);
  sub_1B14267E4(v26, v27, v28);
  v29 = *(_QWORD *)(a1 + 280);
  v30 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 280) = v26;
  *(_QWORD *)(a1 + 288) = v27;
  v31 = *(_BYTE *)(a1 + 296);
  *(_BYTE *)(a1 + 296) = v28;
  sub_1B14262CC(v29, v30, v31);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v32 = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v32;
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(a2 + 353);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = v4[167];
  *(_BYTE *)(a1 + 521) = v4[168];
  *(_BYTE *)(a1 + 522) = v4[169];
  *(_BYTE *)(a1 + 523) = v4[170];
  *(_BYTE *)(a1 + 524) = v4[171];
  return a1;
}

void *__swift_memcpy525_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x20DuLL);
}

uint64_t assignWithTake for BlueprintLayoutOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v4 = a2 + 280;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v5 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  v6 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  v7 = *(_QWORD *)(a2 + 152);
  v8 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v7;

  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  v11 = *(_QWORD *)(a2 + 240);
  v12 = *(_BYTE *)(a2 + 248);
  v13 = *(_QWORD *)(a1 + 232);
  v14 = *(_QWORD *)(a1 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = v11;
  v15 = *(_BYTE *)(a1 + 248);
  *(_BYTE *)(a1 + 248) = v12;
  sub_1B14262CC(v13, v14, v15);
  v16 = *(_BYTE *)(a2 + 272);
  v17 = *(_QWORD *)(a1 + 256);
  v18 = *(_QWORD *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v19 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v16;
  sub_1B14262CC(v17, v18, v19);
  v20 = *(_BYTE *)(a2 + 296);
  v21 = *(_QWORD *)(a1 + 280);
  v22 = *(_QWORD *)(a1 + 288);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)v4;
  v23 = *(_BYTE *)(a1 + 296);
  *(_BYTE *)(a1 + 296) = v20;
  sub_1B14262CC(v21, v22, v23);
  v24 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v24;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(v4 + 73);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v25 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v25;
  v26 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v26;
  v27 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v27;
  v28 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v28;
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(v4 + 240);
  *(_BYTE *)(a1 + 521) = *(_BYTE *)(v4 + 241);
  *(_BYTE *)(a1 + 522) = *(_BYTE *)(v4 + 242);
  *(_BYTE *)(a1 + 523) = *(_BYTE *)(v4 + 243);
  *(_BYTE *)(a1 + 524) = *(_BYTE *)(v4 + 244);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 525))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 128);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5TeaUI26BlueprintLayoutOptionsKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1594508 + 4 * byte_1B16D3015[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B159453C + 4 * asc_1B16D3010[v4]))();
}

uint64_t sub_1B159453C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1594544(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B159454CLL);
  return result;
}

uint64_t sub_1B1594558(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1594560);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1594564(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B159456C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutOptions.ViewportOrientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15945C4 + 4 * byte_1B16D301F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15945F8 + 4 * byte_1B16D301A[v4]))();
}

uint64_t sub_1B15945F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1594600(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1594608);
  return result;
}

uint64_t sub_1B1594614(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B159461CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1594620(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1594628(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *__swift_memcpy541_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x21DuLL);
}

uint64_t assignWithTake for BlueprintLayoutOptionsCommit(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v4 = a2 + 296;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v6 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);

  v7 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);

  v8 = *(_QWORD *)(a2 + 168);
  v9 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v8;

  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  v11 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v11;
  v12 = *(_QWORD *)(a2 + 256);
  v13 = *(_BYTE *)(a2 + 264);
  v14 = *(_QWORD *)(a1 + 248);
  v15 = *(_QWORD *)(a1 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 256) = v12;
  v16 = *(_BYTE *)(a1 + 264);
  *(_BYTE *)(a1 + 264) = v13;
  sub_1B14262CC(v14, v15, v16);
  v17 = *(_BYTE *)(a2 + 288);
  v18 = *(_QWORD *)(a1 + 272);
  v19 = *(_QWORD *)(a1 + 280);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  v20 = *(_BYTE *)(a1 + 288);
  *(_BYTE *)(a1 + 288) = v17;
  sub_1B14262CC(v18, v19, v20);
  v21 = *(_BYTE *)(a2 + 312);
  v22 = *(_QWORD *)(a1 + 296);
  v23 = *(_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)v4;
  v24 = *(_BYTE *)(a1 + 312);
  *(_BYTE *)(a1 + 312) = v21;
  sub_1B14262CC(v22, v23, v24);
  v25 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v25;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_BYTE *)(a1 + 369) = *(_BYTE *)(v4 + 73);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v26 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v26;
  v27 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v27;
  v28 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v28;
  v29 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v29;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(v4 + 240);
  *(_BYTE *)(a1 + 537) = *(_BYTE *)(v4 + 241);
  *(_BYTE *)(a1 + 538) = *(_BYTE *)(v4 + 242);
  *(_BYTE *)(a1 + 539) = *(_BYTE *)(v4 + 243);
  *(_BYTE *)(a1 + 540) = *(_BYTE *)(v4 + 244);
  return a1;
}

void type metadata accessor for BlueprintLayoutOptionsCommit()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.layoutOptionsCommit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.layoutViewportConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.layoutViewportDimensionChecks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.createLayoutOptions(bounds:kind:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t method lookup function for BlueprintLayoutOptionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProvider.__allocating_init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1B159483C()
{
  uint64_t result;

  sub_1B1514CAC();
  swift_allocObject();
  result = sub_1B16B84B0();
  qword_1ED17B608 = result;
  return result;
}

Swift::Void __swiftcall UIImageView.ts_clearImage()()
{
  void *v0;

  objc_msgSend(v0, sel_setImage_, 0);
  if (qword_1ED17B5A0 != -1)
    swift_once();
  swift_unknownObjectRetain();
  sub_1B16B84D4();
}

uint64_t UIImageView.ts_image(from:with:completion:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, uint64_t (*)(void *, uint64_t), _QWORD *, uint64_t, uint64_t);
  id v19;
  id v20;

  v5 = v4;
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  v12 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v13 = qword_1ED17B5A0;
  v14 = v12;
  if (v13 != -1)
    swift_once();
  swift_unknownObjectRetain();
  sub_1B16B84D4();
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = (_QWORD *)OUTLINED_FUNCTION_25();
  v17[2] = v5;
  v17[3] = v14;
  v17[4] = a3;
  v17[5] = a4;
  v18 = *(void (**)(_QWORD *, uint64_t (*)(void *, uint64_t), _QWORD *, uint64_t, uint64_t))(v16 + 8);
  v19 = v14;
  v20 = v5;
  swift_retain();
  v18(a2, sub_1B1594CB0, v17, v15, v16);

  return swift_release();
}

uint64_t sub_1B1594A2C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v10 = sub_1B16B95D8();
  v28 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B16B9620();
  v26 = *(_QWORD *)(v14 - 8);
  v27 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED188560);
  v18 = (void *)sub_1B16BA0DC();
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v19;
  v20[3] = a4;
  v20[4] = a5;
  v20[5] = a6;
  v20[6] = a1;
  aBlock[4] = sub_1B15950AC;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B13F00E4;
  aBlock[3] = &block_descriptor_18_2;
  v21 = _Block_copy(aBlock);
  v22 = a1;
  v23 = a4;
  swift_retain();
  swift_release();
  sub_1B16B95F0();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1B13AD67C((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1B141793C();
  sub_1B13AD67C((unint64_t *)&qword_1ED183710, (uint64_t (*)(uint64_t))sub_1B141793C, MEMORY[0x1E0DEAF38]);
  sub_1B16BA448();
  MEMORY[0x1B5E1DA80](0, v17, v13, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v17, v27);
}

uint64_t sub_1B1594C80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1594CB0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B1594A2C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_1B1594CBC(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;

  v8 = a1 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x1B5E1F2F8](v8);
  if (v9)
  {
    v10 = (void *)v9;
    if (qword_1ED17B5A0 != -1)
      swift_once();
    v11 = (void *)sub_1B16B84C8();

    if (v11)
    {
      sub_1B13A1BE4(0, &qword_1ED184B70);
      v12 = a2;
      v13 = v11;
      v14 = sub_1B16BA214();

      if ((v14 & 1) != 0)
        a3(a5);
    }
  }
}

void UIImageView.ts_crossFadeImage(_:animated:completion:)(void *a1, char a2, void (*a3)(void), uint64_t a4)
{
  void *v4;
  void *v5;
  id v9;
  void *v10;
  char aBlock;
  void *v12;
  id v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  if (a1)
  {
    v9 = a1;
    v20 = v9;
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v5, sel_setAlpha_, 0.0);
      objc_msgSend(v5, sel_setImage_, v20);
      v10 = (void *)objc_opt_self();
      *(_QWORD *)(OUTLINED_FUNCTION_25() + 16) = v5;
      aBlock = MEMORY[0x1E0C809B0];
      v12 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13F00E4, v18, (uint64_t)v20, MEMORY[0x1E0C809B0], 1107296256, v23, v25);
      v13 = v5;
      swift_release();
      v14 = (_QWORD *)OUTLINED_FUNCTION_25();
      v14[2] = v13;
      v14[3] = a3;
      v14[4] = a4;
      v15 = OUTLINED_FUNCTION_24_0((uint64_t)sub_1B13F8544, v19, (uint64_t)v21, aBlock, 1107296256, v24, v26);
      v16 = v13;
      sub_1B13C4AEC((uint64_t)a3);
      swift_release();
      objc_msgSend(v10, sel_animateWithDuration_delay_options_animations_completion_, 65538, v12, v15, 0.25, 0.0);

      _Block_release(v15);
      _Block_release(v12);
    }
    else
    {
      objc_msgSend(v5, sel_setImage_, v9);
      v17 = objc_msgSend(v5, sel_setAlpha_, 1.0);
      if (a3)
        ((void (*)(id))a3)(v17);

    }
  }
  else if (a3)
  {
    a3();
  }
}

uint64_t sub_1B1594FC4()
{
  OUTLINED_FUNCTION_43_0();
  return swift_deallocObject();
}

uint64_t sub_1B1594FE4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

id sub_1B1595014()
{
  uint64_t v0;
  uint64_t (*v1)(id);
  id result;

  v1 = *(uint64_t (**)(id))(v0 + 24);
  result = objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
  if (v1)
    return (id)v1(result);
  return result;
}

uint64_t sub_1B159504C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B1595070()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1B15950AC()
{
  uint64_t v0;

  sub_1B1594CBC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void *BlueprintLayoutCollectionPinAdjuster.init(layoutOptions:layoutDirection:)@<X0>(const void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *result;
  uint64_t v11;

  v5 = *a2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v7 = sub_1B142A1BC(v6);
  if (v8)
  {
    if (v7 == 0xD000000000000010 && v8 == 0x80000001B16E7C10)
      v9 = 1;
    else
      v9 = OUTLINED_FUNCTION_28(v7, v8, 0xD000000000000010, 0x80000001B16E7C10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  result = OUTLINED_FUNCTION_10_0((void *)a3, a1);
  *(_BYTE *)(a3 + 525) = v5;
  v11 = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(a3 + 526) = v9 & 1;
  *(_QWORD *)(a3 + 528) = v11;
  *(_QWORD *)(a3 + 536) = v11;
  *(_QWORD *)(a3 + 544) = v11;
  *(_QWORD *)(a3 + 552) = v11;
  *(_QWORD *)(a3 + 560) = v11;
  return result;
}

void BlueprintLayoutCollectionPinAdjuster.shouldInvalidateLayoutAttributes(for:offset:insets:contentSize:hasViewOnScreen:)()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t (*v3)(char *);
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  unint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  char v30;
  uint64_t v31;
  char v32;
  id v33;
  void *v34;
  char *v35;
  char *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  char *v53;
  char *v54;
  char *v55;
  _BOOL4 v56;
  uint64_t (*v57)(char *);
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  __int128 v61;
  char v62;
  uint64_t v63;
  int64_t v64;
  char v65;
  uint64_t v66;
  _BYTE v67[528];
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  _BYTE v74[536];
  CGRect v75;
  CGRect v76;

  OUTLINED_FUNCTION_93_0();
  v57 = v3;
  OUTLINED_FUNCTION_9_60();
  OUTLINED_FUNCTION_10_0(v74, (const void *)v0);
  v73 = *(_BYTE *)(v0 + 525);
  v65 = *(_BYTE *)(v0 + 526);
  v62 = *(_BYTE *)(v0 + 527);
  v4 = *(_OWORD *)(v0 + 528);
  v66 = *(_QWORD *)(v0 + 544);
  v72 = *(_OWORD *)(v0 + 552);
  v71 = MEMORY[0x1E0DEE9D8];
  v61 = v4;
  v58 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v59 = (unint64_t)(v5 + 63) >> 6;
  v60 = v4;
  v8 = v1 <= 0.0;
  if (v2 <= 0.0)
    v8 = 1;
  v56 = v8;
  sub_1B16B9740();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v63 = (v7 - 1) & v7;
      v64 = v9;
      v10 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_22;
    }
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_67;
    if (v11 >= v59)
      break;
    v12 = *(_QWORD *)(v58 + 8 * v11);
    v13 = v9 + 1;
    if (!v12)
    {
      v13 = v9 + 2;
      if (v9 + 2 >= v59)
        break;
      v12 = *(_QWORD *)(v58 + 8 * v13);
      if (!v12)
      {
        v13 = v9 + 3;
        if (v9 + 3 >= v59)
          break;
        v12 = *(_QWORD *)(v58 + 8 * v13);
        if (!v12)
        {
          v14 = v9 + 4;
          if (v9 + 4 >= v59)
            break;
          v12 = *(_QWORD *)(v58 + 8 * v14);
          if (!v12)
          {
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_68;
              if (v13 >= v59)
                goto LABEL_65;
              v12 = *(_QWORD *)(v58 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_21;
            }
          }
          v13 = v9 + 4;
        }
      }
    }
LABEL_21:
    v63 = (v12 - 1) & v12;
    v64 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_22:
    v15 = *(_QWORD *)(*(_QWORD *)(v60 + 48) + 8 * v10);
    v16 = *(_QWORD *)(*(_QWORD *)(v60 + 56) + 8 * v10);
    if (v16 >> 62)
    {
      OUTLINED_FUNCTION_25_32();
      v17 = sub_1B16BA76C();
      if (!v17)
      {
LABEL_37:
        OUTLINED_FUNCTION_113();
        if (*(_QWORD *)(v66 + 16))
        {
          v25 = sub_1B1425D68(v15);
          if ((v30 & 1) != 0
            && OUTLINED_FUNCTION_20_37(v26, v27, v28, v29, *(double *)(*(_QWORD *)(v66 + 56) + 32 * v25), *(double *)(*(_QWORD *)(v66 + 56) + 32 * v25 + 8), *(double *)(*(_QWORD *)(v66 + 56) + 32 * v25 + 16), *(double *)(*(_QWORD *)(v66 + 56) + 32 * v25 + 24))&& v17)
          {
            if (v17 < 1)
              goto LABEL_69;
            v31 = 0;
            v32 = v73;
            do
            {
              if ((v16 & 0xC000000000000001) != 0)
                v33 = (id)MEMORY[0x1B5E1DF60](v31, v16);
              else
                v33 = *(id *)(v16 + 8 * v31 + 32);
              v34 = v33;
              OUTLINED_FUNCTION_10_0(v67, v74);
              v67[525] = v73;
              v67[526] = v65;
              v67[527] = v62;
              v68 = v61;
              v69 = v66;
              v70 = v72;
              BlueprintLayoutCollectionPinAdjuster.adjusted(layoutAttributes:offset:insets:contentSize:)();
              v36 = v35;
              if ((v32 & 1) == 0)
              {
                v54 = v35;
                OUTLINED_FUNCTION_32_26();
              }
              OUTLINED_FUNCTION_31_24();
              OUTLINED_FUNCTION_30_27();
              if (OUTLINED_FUNCTION_20_37(v37, v38, v39, v40, v41, v42, v43, v44))
              {
                OUTLINED_FUNCTION_31_24();
                v46 = v45;
                v48 = v47;
                v50 = v49;
                v52 = v51;
                objc_msgSend(v34, sel_frame);
                OUTLINED_FUNCTION_30_27();
                v75.origin.x = v46;
                v75.origin.y = v48;
                v75.size.width = v50;
                v75.size.height = v52;
                if (!CGRectEqualToRect(v75, v76)
                  || (v57(v36) & 1) == 0
                  || (v65 & 1) != 0
                  || v56
                  && (v53 = &v36[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandEdge],
                      OUTLINED_FUNCTION_30(),
                      *v53 != 3))
                {
                  v55 = v36;
                  OUTLINED_FUNCTION_32_26();
                }
                OUTLINED_FUNCTION_24_26();
              }
              ++v31;

            }
            while (v17 != v31);
          }
        }
        OUTLINED_FUNCTION_113();
        v7 = v63;
        v9 = v64;
        continue;
      }
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_25_32();
      if (!v17)
        goto LABEL_37;
    }
    v18 = 4;
    while (1)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v19 = (char *)MEMORY[0x1B5E1DF60](v18 - 4, v16);
      else
        v19 = (char *)*(id *)(v16 + 8 * v18);
      v20 = v19;
      v21 = v18 - 3;
      if (__OFADD__(v18 - 4, 1))
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        JUMPOUT(0x1B159576CLL);
      }
      v22 = &v19[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_pinTrait];
      OUTLINED_FUNCTION_30();
      if (!v22[8])
      {
        if ((*v22 & 1) == 0)
          goto LABEL_58;
        v23 = OUTLINED_FUNCTION_28(0x676E696C69617274, 0xE800000000000000, 0x676E696461656CLL, 0xE700000000000000);
        swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
        {
          OUTLINED_FUNCTION_113();

          goto LABEL_62;
        }
        if (!v22[8])
          break;
      }

LABEL_36:
      ++v18;
      if (v21 == v17)
        goto LABEL_37;
    }
    if ((*v22 & 1) == 0)
    {
      v24 = OUTLINED_FUNCTION_28(0x676E696461656CLL, 0xE700000000000000, 0x676E696C69617274, 0xE800000000000000);

      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_61;
      goto LABEL_36;
    }
LABEL_58:
    OUTLINED_FUNCTION_113();

LABEL_61:
    swift_bridgeObjectRelease();
LABEL_62:
    v7 = v63;
    v9 = v64;
    sub_1B1429104(v16);
  }
LABEL_65:
  swift_release();
  OUTLINED_FUNCTION_26_1();
}

__C::CGRect __swiftcall BlueprintLayoutCollectionPinAdjuster.frameForSection(index:)(Swift::Int index)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  unint64_t v4;
  double v5;
  double v6;
  double v7;
  char v8;
  uint64_t v9;
  double v10;
  __C::CGRect result;

  v2 = *(_QWORD *)(v1 + 544);
  v3 = 0.0;
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = sub_1B1425D68(index);
    v5 = 0.0;
    v6 = 0.0;
    v7 = 0.0;
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(v2 + 56) + 32 * v4;
      v6 = *(double *)v9;
      v7 = *(double *)(v9 + 8);
      v3 = *(double *)(v9 + 16);
      v5 = *(double *)(v9 + 24);
    }
  }
  else
  {
    v5 = 0.0;
    v6 = 0.0;
    v7 = 0.0;
  }
  v10 = v3;
  result.size.height = v5;
  result.size.width = v10;
  result.origin.y = v7;
  result.origin.x = v6;
  return result;
}

double sub_1B15957F4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  uint64_t v18;
  double v19;
  double v21;
  double Width;
  double v23;
  double v24;

  v19 = a1;
  if ((*(_BYTE *)(v18 + 525) & 1) != 0)
  {
    CGRectGetHeight(*(CGRect *)&a1);
  }
  else
  {
    v21 = *(double *)(v18 + 168);
    Width = CGRectGetWidth(*(CGRect *)&a1);
    v23 = v21 + a6 + a9 + a12;
    if (v23 >= v19)
    {
      v24 = v19 + a5 - Width;
      if (v24 >= v23)
        return v21 + a6 + a9 + a12;
      else
        return v24;
    }
  }
  return v19;
}

uint64_t destroy for BlueprintLayoutCollectionPinAdjuster(uint64_t a1)
{

  sub_1B14262CC(*(_QWORD *)(a1 + 232), *(_QWORD *)(a1 + 240), *(_BYTE *)(a1 + 248));
  sub_1B14262CC(*(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264), *(_BYTE *)(a1 + 272));
  sub_1B14262CC(*(_QWORD *)(a1 + 280), *(_QWORD *)(a1 + 288), *(_BYTE *)(a1 + 296));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v4 = *(void **)(a2 + 128);
  v5 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v4;
  *(_QWORD *)(a1 + 136) = v5;
  v6 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v6;
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  v9 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v10 = *(_QWORD *)(a2 + 240);
  v11 = *(_BYTE *)(a2 + 248);
  v12 = v4;
  v13 = v5;
  v14 = v6;
  sub_1B14267E4(v9, v10, v11);
  *(_QWORD *)(a1 + 232) = v9;
  *(_QWORD *)(a1 + 240) = v10;
  *(_BYTE *)(a1 + 248) = v11;
  v15 = *(_QWORD *)(a2 + 256);
  v16 = *(_QWORD *)(a2 + 264);
  v17 = *(_BYTE *)(a2 + 272);
  sub_1B14267E4(v15, v16, v17);
  *(_QWORD *)(a1 + 256) = v15;
  *(_QWORD *)(a1 + 264) = v16;
  *(_BYTE *)(a1 + 272) = v17;
  v18 = *(_QWORD *)(a2 + 280);
  v19 = *(_QWORD *)(a2 + 288);
  v20 = *(_BYTE *)(a2 + 296);
  sub_1B14267E4(v18, v19, v20);
  *(_QWORD *)(a1 + 280) = v18;
  *(_QWORD *)(a1 + 288) = v19;
  *(_BYTE *)(a1 + 296) = v20;
  v21 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v21;
  v22 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v22;
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  v23 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v23;
  memcpy((void *)(a1 + 392), (const void *)(a2 + 392), 0x87uLL);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v4 = (_BYTE *)(a2 + 353);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v5 = *(void **)(a2 + 128);
  v6 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v5;
  v7 = v5;

  v8 = *(void **)(a2 + 136);
  v9 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v11 = *(void **)(a2 + 152);
  v12 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v14 = *(_QWORD *)(a2 + 232);
  v15 = *(_QWORD *)(a2 + 240);
  v16 = *(_BYTE *)(a2 + 248);
  sub_1B14267E4(v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 232);
  v18 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 232) = v14;
  *(_QWORD *)(a1 + 240) = v15;
  v19 = *(_BYTE *)(a1 + 248);
  *(_BYTE *)(a1 + 248) = v16;
  sub_1B14262CC(v17, v18, v19);
  v20 = *(_QWORD *)(a2 + 256);
  v21 = *(_QWORD *)(a2 + 264);
  v22 = *(_BYTE *)(a2 + 272);
  sub_1B14267E4(v20, v21, v22);
  v23 = *(_QWORD *)(a1 + 256);
  v24 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v20;
  *(_QWORD *)(a1 + 264) = v21;
  v25 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v22;
  sub_1B14262CC(v23, v24, v25);
  v26 = *(_QWORD *)(a2 + 280);
  v27 = *(_QWORD *)(a2 + 288);
  v28 = *(_BYTE *)(a2 + 296);
  sub_1B14267E4(v26, v27, v28);
  v29 = *(_QWORD *)(a1 + 280);
  v30 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 280) = v26;
  *(_QWORD *)(a1 + 288) = v27;
  v31 = *(_BYTE *)(a1 + 296);
  *(_BYTE *)(a1 + 296) = v28;
  sub_1B14262CC(v29, v30, v31);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v32 = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v32;
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(a2 + 353);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = v4[167];
  *(_BYTE *)(a1 + 521) = v4[168];
  *(_BYTE *)(a1 + 522) = v4[169];
  *(_BYTE *)(a1 + 523) = v4[170];
  *(_BYTE *)(a1 + 524) = v4[171];
  *(_BYTE *)(a1 + 525) = v4[172];
  *(_BYTE *)(a1 + 526) = v4[173];
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy568_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x238uLL);
}

uint64_t assignWithTake for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v4 = a2 + 280;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v5 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  v6 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  v7 = *(_QWORD *)(a2 + 152);
  v8 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v7;

  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  v11 = *(_QWORD *)(a2 + 240);
  v12 = *(_BYTE *)(a2 + 248);
  v13 = *(_QWORD *)(a1 + 232);
  v14 = *(_QWORD *)(a1 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = v11;
  v15 = *(_BYTE *)(a1 + 248);
  *(_BYTE *)(a1 + 248) = v12;
  sub_1B14262CC(v13, v14, v15);
  v16 = *(_BYTE *)(a2 + 272);
  v17 = *(_QWORD *)(a1 + 256);
  v18 = *(_QWORD *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v19 = *(_BYTE *)(a1 + 272);
  *(_BYTE *)(a1 + 272) = v16;
  sub_1B14262CC(v17, v18, v19);
  v20 = *(_BYTE *)(a2 + 296);
  v21 = *(_QWORD *)(a1 + 280);
  v22 = *(_QWORD *)(a1 + 288);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)v4;
  v23 = *(_BYTE *)(a1 + 296);
  *(_BYTE *)(a1 + 296) = v20;
  sub_1B14262CC(v21, v22, v23);
  v24 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v24;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(v4 + 73);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v25 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v25;
  v26 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v26;
  v27 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v27;
  v28 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v28;
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(v4 + 240);
  *(_BYTE *)(a1 + 521) = *(_BYTE *)(v4 + 241);
  *(_BYTE *)(a1 + 522) = *(_BYTE *)(v4 + 242);
  *(_BYTE *)(a1 + 523) = *(_BYTE *)(v4 + 243);
  *(_BYTE *)(a1 + 524) = *(_BYTE *)(v4 + 244);
  *(_BYTE *)(a1 + 525) = *(_BYTE *)(v4 + 245);
  *(_BYTE *)(a1 + 526) = *(_BYTE *)(v4 + 246);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 568))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 128);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutCollectionPinAdjuster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 568) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 128) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 568) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionPinAdjuster()
{
  return &type metadata for BlueprintLayoutCollectionPinAdjuster;
}

uint64_t sub_1B15961A4(double a1, double a2)
{
  float v3;
  float v4;
  float v5;

  v3 = a2;
  v4 = a1;
  v5 = atan2f(v3, v4);
  if (a2 > 0.0 && v5 > 0.7854 && v5 < 2.3562)
    return 1;
  if (v5 < -0.7854 && v5 > -2.3562 && a2 < 0.0)
    return 0;
  else
    return 2;
}

id sub_1B1596228()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.63, 0.63, 0.63, 1.0);
  qword_1EEF341E0 = (uint64_t)result;
  return result;
}

id sub_1B159626C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.87, 0.87, 0.87, 1.0);
  qword_1EEF341E8 = (uint64_t)result;
  return result;
}

char *sub_1B15962B0(uint64_t a1, double a2)
{
  char *v2;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  char *v18;
  id v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  id v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v40;
  uint64_t v41;
  char v42;
  objc_class *v43;
  unsigned int v44;
  __int128 v45;
  objc_super v46;

  v43 = (objc_class *)OUTLINED_FUNCTION_4();
  v6 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  v44 = v7;
  v42 = *(_BYTE *)(a1 + 17);
  v9 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v40 = *(_QWORD *)(a1 + 64);
  v41 = *(_QWORD *)(a1 + 40);
  v10 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  v11 = (void *)objc_opt_self();
  v12 = v2;
  *(_QWORD *)&v2[v10] = objc_msgSend(v11, sel_buttonWithType_, 0);
  v13 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_onTap;
  sub_1B13F279C(0, v14, v15, v16);
  v45 = *(_OWORD *)(a1 + 48);
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  v18 = &v12[OBJC_IVAR____TtC5TeaUI15SwipeActionView_swipeAction];
  *(_QWORD *)v18 = v6;
  *((_QWORD *)v18 + 1) = v5;
  v18[16] = v7;
  v18[17] = v42;
  *((_QWORD *)v18 + 3) = v9;
  *((_QWORD *)v18 + 4) = v8;
  *((_QWORD *)v18 + 5) = v41;
  *((_OWORD *)v18 + 3) = v45;
  *((_QWORD *)v18 + 8) = v40;
  v6;
  v19 = v5;
  sub_1B16B9740();
  sub_1B16B9740();
  swift_retain();

  v46.receiver = v12;
  v46.super_class = v43;
  v20 = (char *)objc_msgSendSuper2(&v46, sel_initWithFrame_, 0.0, 0.0, a2, a2);
  v21 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  v22 = *(void **)&v20[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
  v23 = v20;
  objc_msgSend(v22, sel_setFrame_, 0.0, 0.0, a2, a2);
  v24 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v24, sel_setCornerRadius_, a2 * 0.5);

  v25 = *(_QWORD **)&v20[v21];
  v26 = (void *)objc_opt_self();
  v27 = v25;
  v28 = objc_msgSend(v26, sel_whiteColor);
  objc_msgSend(v27, sel_setTintColor_, v28);

  v29 = *(void **)&v20[v21];
  objc_msgSend(v29, sel_setAdjustsImageWhenHighlighted_, 0);
  objc_msgSend(v29, sel_setEnabled_, v44);
  v30 = v29;
  sub_1B16B9740();
  sub_1B15969F4(v9, v8, v30);

  OUTLINED_FUNCTION_29();
  v31 = *(void **)&v20[v21];
  if (objc_msgSend(v31, sel_isEnabled))
  {
    objc_msgSend(v31, sel_setBackgroundColor_, v19);
    OUTLINED_FUNCTION_2_90();
  }
  else
  {
    v25 = off_1EEF2F888;
    v32 = v31;
    if (v25 != (_QWORD *)-1)
      swift_once();
    objc_msgSend(v32, sel_setBackgroundColor_, qword_1EEF341E0);

    v33 = objc_msgSend(*(id *)&v20[v21], sel_imageView);
    OUTLINED_FUNCTION_2_90();
    if (v34)
    {
      v35 = v34;
      if (qword_1EEF2F890 != -1)
        swift_once();
      objc_msgSend(v35, sel_setTintColor_, qword_1EEF341E8);

    }
  }
  UIImage.scaleImage(to:scaling:)();
  v37 = v36;
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29();

  v38 = *(void **)&v20[v21];
  objc_msgSend(v38, sel_setImage_forState_, v37, 0);
  objc_msgSend(v38, sel_addTarget_action_forControlEvents_, *(_QWORD *)&v23[v25[63]], sel_handleAction, 64);
  objc_msgSend(v23, sel_addSubview_, v38);

  return v23;
}

void sub_1B15966CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;

  v1 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v2 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_onTap;
  sub_1B13F279C(0, v3, v4, v5);
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(v6), sel_init);

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15967A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;

  v1 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v2 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_onTap;
  sub_1B13F279C(0, v3, v4, v5);
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(v6), sel_init);

  sub_1B16BA724();
  __break(1u);
}

id sub_1B159686C()
{
  char *v0;
  void *v1;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidX;
  objc_super v8;
  CGRect v9;
  CGRect v10;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_4();
  objc_msgSendSuper2(&v8, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
  objc_msgSend(v0, sel_bounds);
  x = v9.origin.x;
  y = v9.origin.y;
  width = v9.size.width;
  height = v9.size.height;
  MidX = CGRectGetMidX(v9);
  v10.origin.x = x;
  v10.origin.y = y;
  v10.size.width = width;
  v10.size.height = height;
  return objc_msgSend(v1, sel_setCenter_, MidX, CGRectGetMidY(v10));
}

uint64_t type metadata accessor for SwipeActionView()
{
  return objc_opt_self();
}

void sub_1B15969F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1B16B983C();
  objc_msgSend(a3, sel_setAccessibilityIdentifier_, v4);

}

uint64_t sub_1B1596A38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  OUTLINED_FUNCTION_3_80(a1, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v17 - v10;
  sub_1B1596DE4();
  v13 = &v11[*(int *)(v12 + 48)];
  v14 = OUTLINED_FUNCTION_55();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, a1, v14);
  *(_QWORD *)v13 = a2;
  *((_QWORD *)v13 + 1) = a3;
  v13[16] = a4 & 1;
  v15 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v15);
  return sub_1B1596FCC((uint64_t)v11);
}

uint64_t sub_1B1596B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  v3 = MEMORY[0x1E0C80A78](v1, v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_3_80(v3, &qword_1ED185FD0, v6);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v13 - v9;
  v11 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  OUTLINED_FUNCTION_30();
  if (__swift_getEnumTagSinglePayload(v11, 1, v1))
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v1);
  }
  else
  {
    sub_1B15977B8(v11, (uint64_t)v5);
    sub_1B15971D0((uint64_t)v10);
    sub_1B15977FC((uint64_t)v5);
  }
  return sub_1B1596FCC((uint64_t)v10);
}

BOOL BlueprintCollectionViewLayoutTransition.isTransitioning.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  OUTLINED_FUNCTION_3_80(a1, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_4_74();
  v3 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  v5 = OUTLINED_FUNCTION_7_62(v3, v4, v3);
  if (v5 != 1)
  {
    v6 = OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_20_1(v6);
  }
  return v5 != 1;
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutTransition.State(uint64_t a1)
{
  return sub_1B140F6EC(a1, (uint64_t *)&unk_1ED185FC0);
}

uint64_t sub_1B1596CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13ECA5C(0, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BlueprintCollectionViewLayoutTransition.targetContentOffset.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_3_80(a1, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v11 - v3;
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_4_74();
  v5 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  if (OUTLINED_FUNCTION_7_62(v5, v6, v5) == 1)
    return 0;
  sub_1B1596DE4();
  v7 = *(_QWORD *)&v4[*(int *)(v8 + 48)];
  v9 = OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_20_1(v9);
  return v7;
}

void sub_1B1596DE4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED185F50)
  {
    sub_1B16B7BE0();
    sub_1B13ECA5C(255, (unint64_t *)&qword_1ED186018, type metadata accessor for CGPoint);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED185F50);
  }
}

uint64_t sub_1B1596E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  int EnumTagSinglePayload;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];

  sub_1B13ECA5C(0, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = &v16[-v3];
  v5 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  swift_beginAccess();
  sub_1B1596CC8(v5, (uint64_t)v4);
  v6 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6);
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks);
  if (EnumTagSinglePayload == 1)
  {
    swift_beginAccess();
    v9 = *v8;
    *v8 = MEMORY[0x1E0DEE9D8];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = v9 + 40;
      do
      {
        v12 = *(void (**)(uint64_t))(v11 - 8);
        v13 = swift_retain();
        v12(v13);
        swift_release();
        v11 += 16;
        --v10;
      }
      while (v10);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    *v8 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v15 = sub_1B16B7BE0();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v4, v15);
  }
}

uint64_t sub_1B1596FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  swift_beginAccess();
  sub_1B1597838(a1, v3);
  swift_endAccess();
  sub_1B1596E64();
  return sub_1B159735C(a1);
}

uint64_t BlueprintCollectionViewLayoutTransition.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  v2 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  OUTLINED_FUNCTION_83(v1, v3, v4, v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks) = MEMORY[0x1E0DEE9D8];
  return v0;
}

uint64_t BlueprintCollectionViewLayoutTransition.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  v2 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  OUTLINED_FUNCTION_83(v1, v3, v4, v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks) = MEMORY[0x1E0DEE9D8];
  return v0;
}

uint64_t BlueprintCollectionViewLayoutTransition.onCompletion(block:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!BlueprintCollectionViewLayoutTransition.isTransitioning.getter((uint64_t)a1))
    return a1();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks);
  swift_beginAccess();
  swift_retain();
  sub_1B13FFB14();
  v7 = *(_QWORD *)(*v6 + 16);
  sub_1B13FFB08(v7);
  v8 = *v6;
  *(_QWORD *)(v8 + 16) = v7 + 1;
  v9 = v8 + 16 * v7;
  *(_QWORD *)(v9 + 32) = sub_1B140AA30;
  *(_QWORD *)(v9 + 40) = v5;
  return swift_endAccess();
}

uint64_t sub_1B15971AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15971D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v15;

  v3 = sub_1B16B7BE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B15977B8(v1, (uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v11, v3);
  v12 = sub_1B16B7BC8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  if ((v12 & 1) != 0)
  {
    v13 = 1;
  }
  else
  {
    sub_1B15977B8(v1, a1);
    v13 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a1, v13, 1, v8);
}

uint64_t BlueprintCollectionViewLayoutTransition.deinit()
{
  uint64_t v0;

  sub_1B159735C(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintCollectionViewLayoutTransition.__deallocating_deinit()
{
  uint64_t v0;

  sub_1B159735C(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B159735C(uint64_t a1)
{
  uint64_t v2;

  sub_1B13ECA5C(0, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B15973A8()
{
  return type metadata accessor for BlueprintCollectionViewLayoutTransition(0);
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutTransition(uint64_t a1)
{
  return sub_1B140F6EC(a1, (uint64_t *)&unk_1ED185FE0);
}

void sub_1B15973C4()
{
  unint64_t v0;

  sub_1B13ECA5C(319, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for BlueprintCollectionViewLayoutTransition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayoutTransition.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *sub_1B1597460(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1B16B7BE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_1B1596DE4();
    v8 = *(int *)(v7 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }
  return a1;
}

uint64_t sub_1B15974F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B16B7BE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1B1597528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1B16B7BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  sub_1B1596DE4();
  v6 = *(int *)(v5 + 48);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_1B1597590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = sub_1B16B7BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  sub_1B1596DE4();
  v6 = *(int *)(v5 + 48);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = *(_BYTE *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_BYTE *)(v7 + 16) = v9;
  return a1;
}

uint64_t sub_1B15975F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1B16B7BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  sub_1B1596DE4();
  v6 = *(int *)(v5 + 48);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_1B1597660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1B16B7BE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  sub_1B1596DE4();
  v6 = *(int *)(v5 + 48);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_1B15976C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1596DE4();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_1B15976FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1B1596DE4();
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v6);
}

uint64_t sub_1B1597740(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = sub_1B16B7BE0();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1B15977B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B15977FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B1597838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13ECA5C(0, &qword_1ED185FD0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void static CardViewBehavior.default.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9E8];
  *(_WORD *)(a1 + 8) = 1025;
  *(_BYTE *)(a1 + 10) = 1;
}

BOOL static CardViewBehavior.DismissTrait.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void CardViewBehaviorProviding<>.updateCardViewBehavior()(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  id v6;

  UIViewController.cardContainerController.getter();
  if (v5)
  {
    v6 = (id)v5;
    sub_1B14CA6D4(v2, v5, a1, a2);

  }
}

BOOL static CardViewBehavior.SnapPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CardViewBehavior.SnapPosition.hash(into:)()
{
  return OUTLINED_FUNCTION_5_3();
}

void CardViewBehavior.SnapPosition.hashValue.getter()
{
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_159();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

uint64_t CardViewBehavior.DismissTrait.hash(into:)()
{
  return OUTLINED_FUNCTION_5_3();
}

uint64_t CardViewBehavior.positions.getter()
{
  return sub_1B16B9740();
}

void CardViewBehavior.dimissTrait.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

void CardViewBehavior.stackTrait.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

uint64_t CardViewBehavior.hasOverscrollToDismissTrait.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

unint64_t sub_1B15979E4()
{
  unint64_t result;

  result = qword_1EEF34230;
  if (!qword_1EEF34230)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardViewBehavior.Errors, &type metadata for CardViewBehavior.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEF34230);
  }
  return result;
}

unint64_t sub_1B1597A24()
{
  unint64_t result;

  result = qword_1EEF34238;
  if (!qword_1EEF34238)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardViewBehavior.Errors, &type metadata for CardViewBehavior.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEF34238);
  }
  return result;
}

unint64_t sub_1B1597A64()
{
  unint64_t result;

  result = qword_1EEF34240;
  if (!qword_1EEF34240)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CardViewBehavior.DismissTrait, &type metadata for CardViewBehavior.DismissTrait);
    atomic_store(result, (unint64_t *)&qword_1EEF34240);
  }
  return result;
}

uint64_t sub_1B1597AA4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  sub_1B16B9740();
  return a1;
}

uint64_t assignWithCopy for CardViewBehavior(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  return a1;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for CardViewBehavior(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  return a1;
}

void type metadata accessor for CardViewBehavior.Errors()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t storeEnumTagSinglePayload for CardViewBehavior.SnapPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1597BF8 + 4 * byte_1B16D3635[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1597C2C + 4 * byte_1B16D3630[v4]))();
}

uint64_t sub_1B1597C2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1597C34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1597C3CLL);
  return result;
}

uint64_t sub_1B1597C48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1597C50);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1597C54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1597C5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s5TeaUI16CardViewBehaviorV12DismissTraitOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1597CB4 + 4 * byte_1B16D363F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1597CE8 + 4 * byte_1B16D363A[v4]))();
}

uint64_t sub_1B1597CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1597CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1597CF8);
  return result;
}

uint64_t sub_1B1597D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1597D0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1597D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1597D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for CardViewBehavior.StackTrait(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 4)
      return v7 - 3;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B1597D74 + 4 * byte_1B16D3644[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for CardViewBehavior.StackTrait(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B1597E20 + 4 * byte_1B16D364E[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B1597E54 + 4 * byte_1B16D3649[v5]))();
}

uint64_t sub_1B1597E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1597E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1597E64);
  return result;
}

uint64_t sub_1B1597E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1597E78);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B1597E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1597E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1597E90(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

uint64_t dispatch thunk of CardViewBehaviorProviding.cardViewBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id Bootstrapper.__allocating_init(mainViewControllerFactory:onboardingViewControllerFactory:onboardingViewDismissalAnimator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return Bootstrapper.init(mainViewControllerFactory:onboardingViewControllerFactory:onboardingViewDismissalAnimator:)(a1, a2, a3);
}

Swift::Void __swiftcall Bootstrapper.startBootstrapping(window:shouldOnboard:)(UIWindow *window, Swift::Bool shouldOnboard)
{
  CGSize_optional *v2;
  Swift::Bool v3;

  OUTLINED_FUNCTION_0_124(window, shouldOnboard, 0, v2, v3);
}

id sub_1B1597FC8(void *a1, void *a2)
{
  id result;
  void *v4;

  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, sel_setHidden_, 0);

    return objc_msgSend(a2, sel_setBackgroundColor_, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Bootstrapper.didFinishOnboarding(window:)(UIWindow *window)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  UIViewController *v9;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  UIViewController *v14;

  v2 = v1;
  v14 = -[UIWindow rootViewController](window, sel_rootViewController);
  if (!v14)
    goto LABEL_7;
  type metadata accessor for BootstrapperViewController();
  v3 = swift_dynamicCastClass();
  if (!v3)
  {

LABEL_7:
    sub_1B16BA724();
    __break(1u);
    return;
  }
  v4 = v3;
  sub_1B1562364();
  if (v5)
  {
    v7 = v5;
    MEMORY[0x1E0C80A78](v5, v6);
    sub_1B16B8A8C();
    v8 = (_QWORD *)OUTLINED_FUNCTION_25();
    v8[2] = v4;
    v8[3] = v7;
    v8[4] = v2;
    v9 = v14;
    v10 = v7;
    v11 = v2;
    v12 = (void *)sub_1B16B8918();
    sub_1B16B89FC();

    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    v13 = *(id *)&v1[OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup];
    dispatch_group_leave(v13);

  }
}

uint64_t sub_1B15981F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_1B13B4DC0(a1 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_onboardingViewDismissalAnimator, (uint64_t)v8);
  v3 = v9;
  v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v5 = sub_1B1561C7C();
  v6 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v4 + 8))(a2, v5, v3, v4);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

void sub_1B15982A0(int a1, id a2, uint64_t a3)
{
  objc_msgSend(a2, sel_removeFromSuperview);
  UIAccessibilityPostNotification(*MEMORY[0x1E0DC45C0], 0);
  dispatch_group_leave(*(dispatch_group_t *)(a3 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup));
}

uint64_t sub_1B15982EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1598310()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B1598334()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B1598368()
{
  uint64_t v0;

  return sub_1B15981F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B1598384()
{
  id *v0;

  return swift_deallocObject();
}

void sub_1B15983B8()
{
  uint64_t v0;

  sub_1B15982A0(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id Bootstrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Bootstrapper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Bootstrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of ViewControllerFactoryType.createViewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewTransitionAnimatorType.animateTransition(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for Bootstrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Bootstrapper.__allocating_init(mainViewControllerFactory:onboardingViewControllerFactory:onboardingViewDismissalAnimator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B159855C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B1598580()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B15985AC()
{
  uint64_t v0;

  return sub_1B1597FC8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

TeaUI::FloatingTabBarNavigationPresentation __swiftcall FloatingTabBarNavigationPresentation.init(compact:regular:)(TeaUI::FloatingTabBarNavigationVisibility_optional compact, TeaUI::FloatingTabBarNavigationVisibility_optional regular)
{
  TeaUI::FloatingTabBarNavigationVisibility_optional *v2;
  TeaUI::FloatingTabBarNavigationPresentation result;

  v2->value = compact.value;
  v2[1].value = regular.value;
  result.compactTabBarVisibility = compact;
  return result;
}

TeaUI::FloatingTabBarNavigationVisibility_optional __swiftcall FloatingTabBarNavigationPresentation.tabBarVisibility(traitCollection:)(UITraitCollection traitCollection)
{
  TeaUI::FloatingTabBarNavigationVisibility *v1;
  TeaUI::FloatingTabBarNavigationVisibility_optional v2;
  TeaUI::FloatingTabBarNavigationVisibility v3;
  id v4;
  TeaUI::FloatingTabBarNavigationVisibility_optional v5;

  v2.value = *v1;
  v3 = *((_BYTE *)v1 + 1);
  v4 = -[objc_class horizontalSizeClass](traitCollection.super.isa, sel_horizontalSizeClass);
  if (!v4)
    return (TeaUI::FloatingTabBarNavigationVisibility_optional)2;
  if (v4 == (id)2)
    v5.value = v3;
  else
    v5.value = TeaUI_FloatingTabBarNavigationVisibility_unknownDefault;
  if (v4 == (id)1)
    return v2;
  else
    return v5;
}

uint64_t getEnumTagSinglePayload for FloatingTabBarNavigationPresentation(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 65282 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65282 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (v4)
        goto LABEL_15;
    }
    else
    {
      if (v3 == 2)
      {
        v4 = a1[1];
        if (!a1[1])
          goto LABEL_17;
LABEL_15:
        v5 = (*a1 | (v4 << 16)) - 65283;
        return (v5 + 1);
      }
      v4 = *((unsigned __int8 *)a1 + 2);
      if (*((_BYTE *)a1 + 2))
        goto LABEL_15;
    }
  }
LABEL_17:
  if (*(unsigned __int8 *)a1 <= 2u)
    v6 = 2;
  else
    v6 = *(unsigned __int8 *)a1;
  v7 = v6 - 3;
  if (*(unsigned __int8 *)a1 < 2u)
    v5 = -1;
  else
    v5 = v7;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FloatingTabBarNavigationPresentation(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15986F4 + 4 * byte_1B16D38D5[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1B1598728 + 4 * byte_1B16D38D0[v4]))();
}

uint64_t sub_1B1598728(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1B1598730(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1B1598738);
  return result;
}

uint64_t sub_1B1598744(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1B159874CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1598750(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1B1598758(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FloatingTabBarNavigationPresentation()
{
  return &type metadata for FloatingTabBarNavigationPresentation;
}

uint64_t SharingPlaceholderHanlder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SharingPlaceholderHanlder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SharingPlaceholderHanlder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for SharingPlaceholderHanlder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingPlaceholderHanlder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ScrollViewObservable.observableScrollView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:width:traits:traitCollection:)(uint64_t a1, uint64_t a2, char a3, int a4, double a5, double a6, double a7)
{
  char v11;
  id v12;
  double v13;
  double v14;

  v11 = a3 & 1;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, a1);
  OUTLINED_FUNCTION_8_31(v12, sel_scaledValueForValue_compatibleWithTraitCollection_);
  v14 = v13;

  if (v14 < a6)
    a6 = v14;
  OUTLINED_FUNCTION_1_105();
  static UIFont.systemFont(ofSize:weight:width:traits:)(a2, v11, a4, a6, a7);
}

void static UIFont.scaledFontNamed(_:style:size:maxSize:traitCollection:)(double a1, double a2)
{
  id v3;
  double v4;
  double v5;

  v3 = OUTLINED_FUNCTION_6_12(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_);
  OUTLINED_FUNCTION_8_31(v3, sel_scaledValueForValue_compatibleWithTraitCollection_);
  v5 = v4;

  if (v5 < a2)
    a2 = v5;
  OUTLINED_FUNCTION_1_105();
  static UIFont.fontNamed(_:size:)(a2);
  OUTLINED_FUNCTION_0_125();
}

void static UIFont.preferredFont(for:weight:)()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v0 = OUTLINED_FUNCTION_6_12(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_);
  v1 = (void *)objc_opt_self();
  v2 = OUTLINED_FUNCTION_6_12(v1, sel_preferredFontDescriptorWithTextStyle_);
  v3 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_pointSize);
  v4 = objc_msgSend(v3, sel_systemFontOfSize_weight_);
  v5 = OUTLINED_FUNCTION_3_82(v0, sel_scaledFontForFont_);

  OUTLINED_FUNCTION_0_125();
}

void static UIFont.preferredFont(for:weight:compatibleWith:)(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = OUTLINED_FUNCTION_3_82(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_);
  v4 = (void *)objc_opt_self();
  v5 = OUTLINED_FUNCTION_3_82(v4, sel_preferredFontDescriptorWithTextStyle_);
  v6 = (void *)objc_opt_self();
  objc_msgSend(v5, sel_pointSize);
  v7 = objc_msgSend(v6, sel_systemFontOfSize_weight_);
  v8 = objc_msgSend(v3, sel_scaledFontForFont_compatibleWithTraitCollection_, v7, a2);

  OUTLINED_FUNCTION_0_125();
}

void static UIFont.scaledMonospacedDigitSystemFont(ofSize:style:maxSize:weight:traits:traitCollection:)(double a1, double a2, double a3, uint64_t a4, int a5)
{
  id v8;
  double v9;
  double v10;

  v8 = OUTLINED_FUNCTION_3_82(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_);
  OUTLINED_FUNCTION_8_31(v8, sel_scaledValueForValue_compatibleWithTraitCollection_);
  v10 = v9;

  if (v10 < a2)
    a2 = v10;
  OUTLINED_FUNCTION_1_105();
  static UIFont.monospacedDigitSystemFont(ofSize:weight:traits:)(a5, a2, a3);
  OUTLINED_FUNCTION_2_91();
}

void sub_1B1598B28()
{
  OUTLINED_FUNCTION_27_0();
}

void sub_1B1598B98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
  type metadata accessor for BlueprintImpression();
}

uint64_t sub_1B1598BC4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v16 = v6 + a1[13];
  v17 = type metadata accessor for BlueprintItem(0, v10, v9, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, v8, v17);
  v18 = v6 + a1[14];
  v19 = OUTLINED_FUNCTION_3_43();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v18, v7, v19);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v6 + a1[15], v24, v19);
  *(_BYTE *)(v6 + a1[16]) = v5;
  *(_BYTE *)(v6 + a1[17]) = v4;
  v22 = (_QWORD *)(v6 + a1[18]);
  *v22 = v25;
  v22[1] = v26;
  v23 = (_QWORD *)(v6 + a1[19]);
  *v23 = v14;
  v23[1] = v13;
  v23[2] = v12;
  v23[3] = v11;
  return result;
}

void BlueprintImpressionTrigger.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintImpression.blueprint.getter()
{
  OUTLINED_FUNCTION_4_75();
}

uint64_t sub_1B1598CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t BlueprintImpression.item.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  type metadata accessor for BlueprintItem(0, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), a4);
  v4 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v4, v5, v6, v7);
}

uint64_t BlueprintImpression.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_43();
  v0 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t BlueprintImpression.endDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_43();
  v0 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

void BlueprintImpression.startTrigger.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_9_8(a1);
}

void BlueprintImpression.endTrigger.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_9_8(a1);
}

uint64_t BlueprintImpression.sessionIdentifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 72));
  sub_1B16B9740();
  return v2;
}

double BlueprintImpression.frame.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 76));
}

void BlueprintImpression<>.rank.getter()
{
  OUTLINED_FUNCTION_4_75();
}

void sub_1B1598E14()
{
  Blueprint<>.rank(inclusiveFor:)();
}

uint64_t BlueprintImpressionSession.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B16B9740();
  return v1;
}

uint64_t BlueprintImpressionSession.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_3_43();
  v0 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

uint64_t type metadata accessor for BlueprintImpressionSession()
{
  uint64_t result;

  result = qword_1ED181260;
  if (!qword_1ED181260)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t BlueprintImpressionSession.endDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_83();
  OUTLINED_FUNCTION_3_43();
  v0 = OUTLINED_FUNCTION_10_4();
  return OUTLINED_FUNCTION_9_2(v0, v1, v2, v3);
}

void BlueprintImpressionSession.startTrigger.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_3_83() + 28));
  OUTLINED_FUNCTION_0_0();
}

void BlueprintImpressionSession.endTrigger.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_3_83() + 32));
  OUTLINED_FUNCTION_0_0();
}

uint64_t BlueprintImpressionSession.number.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for BlueprintImpressionSession() + 36));
}

unint64_t sub_1B1598F5C()
{
  unint64_t result;

  result = qword_1EEF34288;
  if (!qword_1EEF34288)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintImpressionTrigger, &type metadata for BlueprintImpressionTrigger);
    atomic_store(result, (unint64_t *)&qword_1EEF34288);
  }
  return result;
}

unint64_t sub_1B1598F9C()
{
  unint64_t result;

  result = qword_1EEF34290;
  if (!qword_1EEF34290)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintImpressionSessionTrigger, &type metadata for BlueprintImpressionSessionTrigger);
    atomic_store(result, (unint64_t *)&qword_1EEF34290);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionTrigger(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintImpressionTrigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1B15990B4 + 4 * byte_1B16D3975[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1B15990E8 + 4 * byte_1B16D3970[v4]))();
}

uint64_t sub_1B15990E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15990F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15990F8);
  return result;
}

uint64_t sub_1B1599104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B159910CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1B1599110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1599118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BlueprintImpressionTrigger()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionTriggerSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x1F)
  {
    if (a2 + 225 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 225) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 226;
    return v5 + 1;
  }
LABEL_17:
  v5 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v5 >= 0x1E)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for BlueprintImpressionTriggerSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 225 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 225) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1E)
    return ((uint64_t (*)(void))((char *)&loc_1B1599214 + 4 * byte_1B16D397F[v4]))();
  *a1 = a2 - 31;
  return ((uint64_t (*)(void))((char *)sub_1B1599248 + 4 * byte_1B16D397A[v4]))();
}

uint64_t sub_1B1599248(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1599250(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1599258);
  return result;
}

uint64_t sub_1B1599270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1599278);
  *(_BYTE *)result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1B159927C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1599284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1599290(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_1B159929C(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_1B15992AC(_BYTE *result, char a2)
{
  *result = *result & 7 | (a2 << 7);
  return result;
}

void type metadata accessor for BlueprintImpressionTriggerSource()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B15992CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2 + 2;
    v8 = a2[5];
    sub_1B16B9740();
    if (v8)
    {
      *(_QWORD *)(a1 + 40) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, (uint64_t)(a2 + 2), v8);
    }
    else
    {
      v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v7;
      *(_OWORD *)(a1 + 32) = v11;
    }
    type metadata accessor for Blueprint();
  }
  v9 = *a2;
  *(_QWORD *)a1 = *a2;
  v10 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v10;
}

void sub_1B159956C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  type metadata accessor for Blueprint();
}

void sub_1B15995C8()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B15995E8(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  v15 = v1 + *(int *)(v4 + 60);
  v16 = type metadata accessor for BlueprintItem(255, v3, v5, v9);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v16);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v16);
  v10 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v15, v10);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1 + v2[13], v3);
  v11 = v1 + v2[14];
  v12 = sub_1B16B7BB0();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v1 + v2[15], v12);
  return swift_bridgeObjectRelease();
}

void sub_1B1599750(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 2;
  v5 = a2[5];
  sub_1B16B9740();
  if (v5)
  {
    *(_QWORD *)(a1 + 40) = v5;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v5 - 8))(a1 + 16, v4, v5);
  }
  else
  {
    v6 = v4[1];
    *(_OWORD *)(a1 + 16) = *v4;
    *(_OWORD *)(a1 + 32) = v6;
  }
  type metadata accessor for Blueprint();
}

void sub_1B15997DC()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1599808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v33, v31, v8);
  v9 = *(int *)(v6 + 60);
  v32 = v2 + v9;
  v34 = v1 + v9;
  v36 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v36);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v36);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v34, v32, v11);
  *(_QWORD *)(v1 + *(int *)(v35 + 64)) = *(_QWORD *)(v2 + *(int *)(v35 + 64));
  v12 = v3[13];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  swift_retain();
  v15(v13, v14, v4);
  v16 = v3[14];
  v17 = v1 + v16;
  v18 = v2 + v16;
  v19 = sub_1B16B7BB0();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(v1 + v3[15], v2 + v3[15], v19);
  v21 = v3[17];
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v21) = *(_BYTE *)(v2 + v21);
  v22 = v3[18];
  v23 = v3[19];
  v24 = (_QWORD *)(v1 + v22);
  v25 = (_QWORD *)(v2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_OWORD *)(v1 + v23);
  v28 = (_OWORD *)(v2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  sub_1B16B9740();
  return v1;
}

void sub_1B15999C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 40) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
LABEL_8:
  type metadata accessor for Blueprint();
}

void sub_1B1599A84()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1599AB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v26, v24, v8);
  v9 = *(int *)(v6 + 60);
  v25 = v2 + v9;
  v27 = v1 + v9;
  v29 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v29);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v29);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v27, v25, v11);
  *(_QWORD *)(v1 + *(int *)(v28 + 64)) = *(_QWORD *)(v2 + *(int *)(v28 + 64));
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(v1 + v3[13], v2 + v3[13], v4);
  v12 = v3[14];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = sub_1B16B7BB0();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(v1 + v3[15], v2 + v3[15], v15);
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v3[17]) = *(_BYTE *)(v2 + v3[17]);
  v17 = v3[18];
  v18 = (_QWORD *)(v1 + v17);
  v19 = (_QWORD *)(v2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v20 = v3[19];
  v21 = (_QWORD *)(v1 + v20);
  v22 = (_QWORD *)(v2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v21[3] = v22[3];
  return v1;
}

void sub_1B1599CA4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  type metadata accessor for Blueprint();
}

void sub_1B1599CFC()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1599D28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v25, v23, v8);
  v9 = *(int *)(v6 + 60);
  v24 = v2 + v9;
  v26 = v1 + v9;
  v28 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v28);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v28);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v26, v24, v11);
  *(_QWORD *)(v1 + *(int *)(v27 + 64)) = *(_QWORD *)(v2 + *(int *)(v27 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v1 + v3[13], v2 + v3[13], v4);
  v12 = v3[14];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = sub_1B16B7BB0();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(v1 + v3[15], v2 + v3[15], v15);
  v17 = v3[17];
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v17) = *(_BYTE *)(v2 + v17);
  v18 = v3[19];
  *(_OWORD *)(v1 + v3[18]) = *(_OWORD *)(v2 + v3[18]);
  v19 = (_OWORD *)(v1 + v18);
  v20 = (_OWORD *)(v2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  return v1;
}

void sub_1B1599ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  type metadata accessor for Blueprint();
}

void sub_1B1599F40()
{
  type metadata accessor for BlueprintSection();
}

uint64_t sub_1B1599F6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  v8 = sub_1B16B848C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v30, v28, v8);
  v9 = *(int *)(v6 + 60);
  v29 = v2 + v9;
  v31 = v1 + v9;
  v33 = type metadata accessor for BlueprintItem(255, v4, v5, v10);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintSection<A, B>, a1);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v33);
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for BlueprintItem<A>, v33);
  v11 = sub_1B16B875C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v31, v29, v11);
  *(_QWORD *)(v1 + *(int *)(v32 + 64)) = *(_QWORD *)(v2 + *(int *)(v32 + 64));
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v1 + v3[13], v2 + v3[13], v4);
  v12 = v3[14];
  v13 = v1 + v12;
  v14 = v2 + v12;
  v15 = sub_1B16B7BB0();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(v1 + v3[15], v2 + v3[15], v15);
  v17 = v3[17];
  *(_BYTE *)(v1 + v3[16]) = *(_BYTE *)(v2 + v3[16]);
  *(_BYTE *)(v1 + v17) = *(_BYTE *)(v2 + v17);
  v18 = v3[18];
  v19 = (_QWORD *)(v1 + v18);
  v20 = (uint64_t *)(v2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v3[19];
  v24 = (_OWORD *)(v1 + v23);
  v25 = (_OWORD *)(v2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  return v1;
}

void sub_1B159A12C()
{
  OUTLINED_FUNCTION_27_0();
}

void sub_1B159A1F4()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t storeEnumTagSinglePayload for BlueprintImpressionSessionTrigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B159A318 + 4 * byte_1B16D3989[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B159A34C + 4 * byte_1B16D3984[v4]))();
}

uint64_t sub_1B159A34C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B159A354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B159A35CLL);
  return result;
}

uint64_t sub_1B159A368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B159A370);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B159A374(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B159A37C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionSessionTriggerSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3F)
  {
    if (a2 + 193 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 193) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 194;
    return v5 + 1;
  }
LABEL_17:
  v5 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
  if (v5 >= 0x3E)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for BlueprintImpressionSessionTriggerSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 193 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 193) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3E)
    return ((uint64_t (*)(void))((char *)&loc_1B159A46C + 4 * byte_1B16D3993[v4]))();
  *a1 = a2 - 63;
  return ((uint64_t (*)(void))((char *)sub_1B159A4A0 + 4 * byte_1B16D398E[v4]))();
}

uint64_t sub_1B159A4A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B159A4A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B159A4B0);
  return result;
}

uint64_t sub_1B159A4C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B159A4D0);
  *(_BYTE *)result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_1B159A4D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B159A4DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1B159A4E8(_BYTE *result, char a2)
{
  *result = *result & 3 | (a2 << 7);
  return result;
}

void type metadata accessor for BlueprintImpressionSessionTriggerSource()
{
  OUTLINED_FUNCTION_11_0();
}

char *initializeBufferWithCopyOfBuffer for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1B16B7BB0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1B16B9740();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v13 = a3[8];
    v4[a3[7]] = a2[a3[7]];
    v4[v13] = a2[v13];
    *(_QWORD *)&v4[a3[9]] = *(_QWORD *)&a2[a3[9]];
  }
  return v4;
}

uint64_t destroy for BlueprintImpressionSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B16B7BB0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

char *initializeWithCopy for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B16B7BB0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_1B16B9740();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v12] = a2[v12];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *assignWithCopy for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B16B7BB0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *initializeWithTake for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B16B7BB0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v11] = a2[v11];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B16B7BB0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v12] = a2[v12];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionSession()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B159A948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7;

  if ((_DWORD)a2 == 0x7FFFFFFF)
    return OUTLINED_FUNCTION_10_6(*(_QWORD *)(a1 + 8));
  v7 = OUTLINED_FUNCTION_3_43();
  return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v7);
}

uint64_t storeEnumTagSinglePayload for BlueprintImpressionSession()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B159A9B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_3_43();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B159AA20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B16B7BB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t DecorationToolbarItem.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t DecorationToolbarItem.init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t DecorationToolbarItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DecorationToolbarItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B159AB44(uint64_t a1)
{
  uint64_t result;

  result = sub_1B159ABCC(&qword_1ED185730, (uint64_t)&protocol conformance descriptor for DecorationToolbarItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for DecorationToolbarItem()
{
  return objc_opt_self();
}

uint64_t sub_1B159AB98(uint64_t a1)
{
  uint64_t result;

  result = sub_1B159ABCC(&qword_1ED184720, (uint64_t)&protocol conformance descriptor for DecorationToolbarItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B159ABCC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DecorationToolbarItem();
    result = MEMORY[0x1B5E1F0E8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B159AC08()
{
  return ToolbarItem.identifier.getter();
}

uint64_t sub_1B159AC28(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if ((a4 & 1) == 0)
    v4 = a1;
  return sub_1B16B9740();
}

uint64_t destroy for DecorationToolbarItem.Decoration(uint64_t a1)
{
  return sub_1B159AC68(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1B159AC68(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DecorationToolbarItem.Decoration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B159AC28(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DecorationToolbarItem.Decoration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B159AC28(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1B159AC68(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DecorationToolbarItem.Decoration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1B159AC68(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DecorationToolbarItem.Decoration(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DecorationToolbarItem.Decoration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B159AE30(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1B159AE38(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

void StateCommandValue.value(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (**v3)(char *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = sub_1B16BA328();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v18 - v12;
  v14 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v11, v15);
  v17 = (char *)&v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, a1, v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 16))(a3, (char *)v3 + *(int *)(a2 + 44));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, v7);
    (*v3)(v17);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v7);
  }
  OUTLINED_FUNCTION_47();
}

void StateCommandValue.init(default:block:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  v14 = *(_QWORD *)(a5 - 8);
  v15 = MEMORY[0x1E0C80A78](a1, a2);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  v19 = type metadata accessor for StateCommandValue(0, a4, a5, a6);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&a7[*(int *)(v19 + 44)], v17, a5);
  *(_QWORD *)a7 = a2;
  *((_QWORD *)a7 + 1) = a3;
  OUTLINED_FUNCTION_47();
}

uint64_t type metadata accessor for StateCommandValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateCommandValue);
}

void StateCommandValue<>.init(off:on:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(unsigned __int8 *a1)@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(unsigned __int8 *);
  uint64_t v17;

  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = type metadata accessor for StateCommandValue(0, MEMORY[0x1E0DEAFA0], v10, (uint64_t)&protocol witness table for Bool);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)a4 + *(int *)(v11 + 44), a1, a3);
  OUTLINED_FUNCTION_2_92((uint64_t)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v9 + v12 + v13) & ~v12;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  OUTLINED_FUNCTION_2_92(v15 + v13, a2);
  OUTLINED_FUNCTION_2_92(v15 + v14, (uint64_t)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t (*)(unsigned __int8 *))OUTLINED_FUNCTION_25();
  *((_QWORD *)v16 + 2) = a3;
  *((_QWORD *)v16 + 3) = sub_1B159B1C4;
  *((_QWORD *)v16 + 4) = v15;
  *a4 = sub_1B159B224;
  a4[1] = v16;
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B159B154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_3_84();
  v5 = (v3 + v2 + v4) & ~v2;
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v0 + v4, v1);
  v7(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_1B159B1C4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = (*(_QWORD *)(v3 + 64) + v4 + v5) & ~v4;
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  if ((a1 & 1) != 0)
    v8 = v5;
  else
    v8 = v6;
  return v7(a2, v2 + v8);
}

uint64_t sub_1B159B200()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B159B224(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 24))(*a1);
}

uint64_t (*StateCommandValue<>.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(unsigned __int8 *)@<X8>))(unsigned __int8 *)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t (*result)(unsigned __int8 *);
  uint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = type metadata accessor for StateCommandValue(0, MEMORY[0x1E0DEAFA0], a2, (uint64_t)&protocol witness table for Bool);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)a3 + *(int *)(v8 + 44), a1, a2);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  v9((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  v9((char *)(v11 + v10), (uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  result = (uint64_t (*)(unsigned __int8 *))OUTLINED_FUNCTION_25();
  *((_QWORD *)result + 2) = a2;
  *((_QWORD *)result + 3) = sub_1B159B3AC;
  *((_QWORD *)result + 4) = v11;
  *a3 = sub_1B159BAD0;
  a3[1] = result;
  return result;
}

uint64_t sub_1B159B360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_84();
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v1);
  return swift_deallocObject();
}

uint64_t sub_1B159B3AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_1B159B3D0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1B159B44C(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (_QWORD *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1B159B510(uint64_t a1, uint64_t a2)
{
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

_QWORD *sub_1B159B554(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_1B159B5C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_OWORD *sub_1B159B634(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_1B159B684(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1B159B6EC(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 16) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(_WORD *)((char *)a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v8 + 16) & ~v8, v6, v4);
      v16 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((_BYTE *)a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B159B7C0 + 4 * byte_1B16D3D40[(v10 - 1)]))();
}

void sub_1B159B82C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t (*sub_1B159BA1C@<X0>(uint64_t (*a1)@<X0>(uint64_t *a1@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)@<X0>(uint64_t *a1@<X8>)@<X8>))@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (*result)@<X0>(uint64_t *@<X8>);

  result = (uint64_t (*)@<X0>(uint64_t *@<X8>))OUTLINED_FUNCTION_25();
  *((_QWORD *)result + 2) = a4;
  *((_QWORD *)result + 3) = a5;
  *((_QWORD *)result + 4) = a2;
  *((_QWORD *)result + 5) = a3;
  *a6 = sub_1B159BAA8;
  a6[1] = result;
  a6[2] = a1;
  return result;
}

uint64_t sub_1B159BA84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B159BAA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of BlueprintLayoutCollectionLayoutAttributesBroadcasting.registerForChanges(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AccessibilitySupplementaryActions.accessibilitySupplementaryActions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccessibilitySupplementaryActions.accessibilitySupplementaryActions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AccessibilitySupplementaryActions.accessibilitySupplementaryActions.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

BOOL SegmentedColorViewDirection.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_1B159BB20@<W0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _BOOL8 result;
  char v4;

  result = SegmentedColorViewDirection.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1B159BB50(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

id SegmentedColorView.startColor.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___TUSegmentedColorView_startColor);
  OUTLINED_FUNCTION_30();
  return OUTLINED_FUNCTION_5_8(*v1);
}

void SegmentedColorView.startColor.setter()
{
  sub_1B159BD80();
}

id sub_1B159BC04@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___TUSegmentedColorView_startColor);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1B159BC54(id *a1)
{
  id v1;

  v1 = *a1;
  SegmentedColorView.startColor.setter();
}

void SegmentedColorView.startColor.modify()
{
  void *v0;
  id v1;
  id v2;

  v0 = OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_132_1((uint64_t)v0);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_10_52();
  v2 = v1;
  OUTLINED_FUNCTION_31();
}

void sub_1B159BCCC(void **a1, char a2)
{
  sub_1B159BF28(a1, a2, (void (*)(id))SegmentedColorView.startColor.setter);
}

id SegmentedColorView.endColor.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___TUSegmentedColorView_endColor);
  OUTLINED_FUNCTION_30();
  return OUTLINED_FUNCTION_5_8(*v1);
}

void SegmentedColorView.endColor.setter()
{
  sub_1B159BD80();
}

void sub_1B159BD80()
{
  _QWORD *v0;
  void *v1;
  void **v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_1_106();
  v3 = *v2;
  *v2 = v1;
  v4 = v1;
  sub_1B159BE50((uint64_t)v3, v0);

}

id sub_1B159BDD8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___TUSegmentedColorView_endColor);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1B159BE28(id *a1)
{
  id v1;

  v1 = *a1;
  SegmentedColorView.endColor.setter();
}

void sub_1B159BE50(uint64_t a1, _QWORD *a2)
{
  char *v2;
  void *v3;
  void **v4;
  void *v5;
  id v6;
  char v7;

  v3 = v2;
  v4 = (void **)&v2[*a2];
  OUTLINED_FUNCTION_30();
  v5 = *v4;
  sub_1B13A2864();
  v6 = v5;
  v7 = sub_1B16BA214();

  if ((v7 & 1) == 0)
    objc_msgSend(v3, sel_setNeedsDisplay);
  OUTLINED_FUNCTION_90();
}

void SegmentedColorView.endColor.modify()
{
  void *v0;
  id v1;
  id v2;

  v0 = OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_132_1((uint64_t)v0);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_10_52();
  v2 = v1;
  OUTLINED_FUNCTION_31();
}

void sub_1B159BF1C(void **a1, char a2)
{
  sub_1B159BF28(a1, a2, (void (*)(id))SegmentedColorView.endColor.setter);
}

void sub_1B159BF28(void **a1, char a2, void (*a3)(id))
{
  void *v3;
  id v4;
  id *v5;

  v3 = *a1;
  v5 = (id *)((char *)*a1 + 24);
  v4 = *v5;
  if ((a2 & 1) != 0)
  {
    a3(v4);

  }
  else
  {
    a3(v4);
  }
  free(v3);
}

void SegmentedColorView.numberOfSegments.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_48();
}

void SegmentedColorView.numberOfSegments.setter()
{
  sub_1B159C160();
}

uint64_t sub_1B159C01C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___TUSegmentedColorView_numberOfSegments);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void SegmentedColorView.numberOfSegments.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_132_1((uint64_t)v0);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_10_52();
  OUTLINED_FUNCTION_31();
}

void sub_1B159C0B4(uint64_t a1, uint64_t a2)
{
  sub_1B159C284(a1, a2, (void (*)(_QWORD))SegmentedColorView.numberOfSegments.setter);
}

void SegmentedColorView.direction.getter()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_48();
}

void SegmentedColorView.direction.setter()
{
  sub_1B159C160();
}

void sub_1B159C160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_106();
  v3 = *v2;
  *v2 = v1;
  sub_1B159C1E0(v3, v0);
  OUTLINED_FUNCTION_90();
}

uint64_t sub_1B159C190@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___TUSegmentedColorView_direction);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B159C1E0(uint64_t a1, _QWORD *a2)
{
  char *v2;
  char *v4;

  v4 = &v2[*a2];
  OUTLINED_FUNCTION_30();
  if (*(_QWORD *)v4 != a1)
    objc_msgSend(v2, sel_setNeedsDisplay);
  OUTLINED_FUNCTION_90();
}

void SegmentedColorView.direction.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_132_1((uint64_t)v0);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_10_52();
  OUTLINED_FUNCTION_31();
}

void sub_1B159C278(uint64_t a1, uint64_t a2)
{
  sub_1B159C284(a1, a2, (void (*)(_QWORD))SegmentedColorView.direction.setter);
}

void sub_1B159C284(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void *v3;

  v3 = *(void **)a1;
  a3(*(_QWORD *)(*(_QWORD *)a1 + 24));
  free(v3);
}

id SegmentedColorView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id SegmentedColorView.init(frame:)()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  double v6;
  objc_super *v7;
  SEL v8;
  id v9;

  OUTLINED_FUNCTION_57();
  ObjectType = swift_getObjectType();
  v2 = OBJC_IVAR___TUSegmentedColorView_startColor;
  v3 = (void *)objc_opt_self();
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_whiteColor);
  v5 = OBJC_IVAR___TUSegmentedColorView_endColor;
  *(_QWORD *)&v4[v5] = objc_msgSend(v3, sel_blackColor);
  *(_QWORD *)&v4[OBJC_IVAR___TUSegmentedColorView_numberOfSegments] = 5;
  *(_QWORD *)&v4[OBJC_IVAR___TUSegmentedColorView_direction] = 0;

  v6 = OUTLINED_FUNCTION_54();
  v9 = objc_msgSendSuper2(v7, v8, v6, v4, ObjectType);
  objc_msgSend(v9, sel_setClipsToBounds_, 1);
  return v9;
}

void sub_1B159C404()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = OBJC_IVAR___TUSegmentedColorView_startColor;
  v2 = (void *)objc_opt_self();
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_whiteColor);
  v3 = OBJC_IVAR___TUSegmentedColorView_endColor;
  *(_QWORD *)&v0[v3] = objc_msgSend(v2, sel_blackColor);
  *(_QWORD *)&v0[OBJC_IVAR___TUSegmentedColorView_numberOfSegments] = 5;
  *(_QWORD *)&v0[OBJC_IVAR___TUSegmentedColorView_direction] = 0;

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall SegmentedColorView.draw(_:)(__C::CGRect a1)
{
  uint64_t v1;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGContext *v6;
  CGContext *v7;
  id *v8;
  CGColor *v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  id *v23;
  uint64_t v24;
  CGFloat v25;
  CGColor *v26;
  uint64_t v27;
  double v31;
  double v32;
  double v33;
  double v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  double MaxY;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  double v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  height = a1.size.height;
  width = a1.size.width;
  y = a1.origin.y;
  x = a1.origin.x;
  v6 = UIGraphicsGetCurrentContext();
  if (v6)
  {
    v7 = v6;
    v8 = (id *)(v1 + OBJC_IVAR___TUSegmentedColorView_endColor);
    OUTLINED_FUNCTION_30();
    v9 = (CGColor *)objc_msgSend(*v8, sel_CGColor);
    CGContextSetFillColorWithColor(v7, v9);

    v44 = x;
    v45.origin.x = x;
    v45.origin.y = y;
    v45.size.width = width;
    v45.size.height = height;
    CGContextFillRect(v7, v45);
    v10 = (uint64_t *)(v1 + OBJC_IVAR___TUSegmentedColorView_numberOfSegments);
    OUTLINED_FUNCTION_30();
    if (*v10 >= 1)
    {
      v11 = (_QWORD *)(v1 + OBJC_IVAR___TUSegmentedColorView_direction);
      OUTLINED_FUNCTION_30();
      if (*v11 == 1)
      {
        v20 = OUTLINED_FUNCTION_7_63(*(CGRect *)&v12, v16, v17, v18, v19, x);
      }
      else
      {
        if (*v11)
          goto LABEL_22;
        v20 = OUTLINED_FUNCTION_8_61(x);
      }
      v21 = *v10;
      if (*v10 < 0)
      {
LABEL_21:
        __break(1u);
        while (1)
        {
LABEL_22:
          sub_1B16BA994();
          __break(1u);
        }
      }
      if (v21)
      {
        v22 = v20 / (double)v21;
        v23 = (id *)(v1 + OBJC_IVAR___TUSegmentedColorView_startColor);
        OUTLINED_FUNCTION_30();
        v24 = 0;
        v25 = 0.0;
        while (v21 != v24)
        {
          v26 = (CGColor *)objc_msgSend(*v23, sel_CGColor);
          CGContextSetFillColorWithColor(v7, v26);

          if (__OFSUB__(*v10, v24))
            goto LABEL_20;
          CGContextSetAlpha(v7, (double)(*v10 - v24) / (double)*v10);
          if (*v11 == 1)
          {
            v46.size.width = OUTLINED_FUNCTION_8_61(v44);
            v46.origin.x = 0.0;
            v46.origin.y = v25;
            v46.size.height = v22;
            v47 = CGRectIntegral(v46);
            v35 = v47.origin.x;
            v36 = v47.origin.y;
            v37 = v47.size.width;
            v38 = v47.size.height;
            CGContextFillRect(v7, v47);
            v48.origin.x = v35;
            v48.origin.y = v36;
            v48.size.width = v37;
            v48.size.height = v38;
            MaxY = CGRectGetMaxY(v48);
          }
          else
          {
            if (*v11)
              goto LABEL_22;
            v49.size.height = OUTLINED_FUNCTION_7_63(*(CGRect *)&v27, v31, v32, v33, v34, v44);
            v49.origin.y = 0.0;
            v49.origin.x = v25;
            v49.size.width = v22;
            v50 = CGRectIntegral(v49);
            v40 = v50.origin.x;
            v41 = v50.origin.y;
            v42 = v50.size.width;
            v43 = v50.size.height;
            CGContextFillRect(v7, v50);
            v51.origin.x = v40;
            v51.origin.y = v41;
            v51.size.width = v42;
            v51.size.height = v43;
            MaxY = CGRectGetMaxX(v51);
          }
          v25 = MaxY;
          if (v21 == ++v24)
            goto LABEL_17;
        }
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
LABEL_17:

  }
}

id SegmentedColorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B159C868()
{
  unint64_t result;

  result = qword_1EEF342D0;
  if (!qword_1EEF342D0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for SegmentedColorViewDirection, &type metadata for SegmentedColorViewDirection);
    atomic_store(result, (unint64_t *)&qword_1EEF342D0);
  }
  return result;
}

void sub_1B159C8B8()
{
  SegmentedColorView.numberOfSegments.setter();
}

void sub_1B159C8E0()
{
  SegmentedColorView.direction.setter();
}

ValueMetadata *type metadata accessor for SegmentedColorViewDirection()
{
  return &type metadata for SegmentedColorViewDirection;
}

uint64_t type metadata accessor for SegmentedColorView()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of BlueprintPipelineDelegate.blueprintPipeline<A, B>(_:didChangeStateFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t sub_1B159C97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for os_unfair_lock_s(255);
  sub_1B16BA5F8();
  v4 = sub_1B16BA5EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t DebouncedSet.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  DebouncedSet.init(_:)(a1, v3, v4, v5);
  return v2;
}

_QWORD *DebouncedSet.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  sub_1B159D8DC(255, a2, a3, a4);
  OUTLINED_FUNCTION_3_85();
  swift_getTupleTypeMetadata2();
  sub_1B16B9BD8();
  v8 = *(_QWORD *)(v6 + 88);
  OUTLINED_FUNCTION_3_85();
  v12[0] = a1;
  v12[1] = sub_1B16B9728();
  v10 = type metadata accessor for DebouncedSet.State(0, v7, v8, v9);
  v4[2] = sub_1B159CADC((uint64_t)v12, v10);
  return v4;
}

uint64_t sub_1B159CADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  v7 = sub_1B159C97C((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

void DebouncedSet.insert(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  OUTLINED_FUNCTION_5_74();
  v6[4] = v1;
  v5 = type metadata accessor for DebouncedSet.State(0, v2, v3, v4);
  OUTLINED_FUNCTION_1_107((void (*)(uint64_t))sub_1B159D934, (uint64_t)v6, v0, v5, MEMORY[0x1E0DEE9C0] + 8);
}

uint64_t sub_1B159CBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v8, v11);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(v12 + 8);
  sub_1B159D8DC(0, v16, v17, v18);
  MEMORY[0x1B5E1D12C](&v23, a2, v15, a3, v19, a4);
  if (v23)
  {
    v20 = *(void **)(v23 + 40);
    if (v20)
      objc_msgSend(v20, sel_invalidate);
    swift_release();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, a3);
  sub_1B16B9DE8();
  sub_1B16B9DB8();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, a3);
}

void DebouncedSet.remove(_:after:wasRemoved:)(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  double v21;
  _QWORD *v22;
  void (*v23)(_QWORD);
  uint64_t v24;
  char v25;

  v9 = *v4;
  v10 = *(_QWORD *)(*v4 + 80);
  v11 = sub_1B16BA328();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = &v19[-v14];
  v16 = v4[2];
  v20 = a1;
  v21 = a4;
  v22 = v4;
  v23 = a2;
  v24 = a3;
  v18 = type metadata accessor for DebouncedSet.State(0, v10, *(_QWORD *)(v9 + 88), v17);
  OUTLINED_FUNCTION_1_107((void (*)(uint64_t))sub_1B159D950, (uint64_t)v19, v16, v18, MEMORY[0x1E0DEAFA0]);
  if (v25 == 1)
  {
    if (a2)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v10);
      a2(v15);
      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
    }
  }
}

uint64_t sub_1B159CE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>, double a7@<D0>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v45 = a3;
  v46 = a4;
  v13 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v47 = v15;
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 + 88);
  result = sub_1B16B9DDC();
  if ((result & 1) != 0)
  {
    v42 = a5;
    v43 = a6;
    v44 = v7;
    v23 = *(_QWORD *)(a1 + 8);
    v41 = a1 + 8;
    sub_1B159D8DC(0, v20, v21, v22);
    v40 = v24;
    MEMORY[0x1B5E1D12C](&v48, a2, v23, v13);
    if (v48)
    {
      v25 = *(void **)(v48 + 40);
      if (v25)
        objc_msgSend(v25, sel_invalidate);
      swift_release();
    }
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v37(v16, a2, v13);
    v26 = *(unsigned __int8 *)(v14 + 80);
    v39 = v26 | 7;
    v27 = (char *)swift_allocObject();
    *((_QWORD *)v27 + 2) = v13;
    *((_QWORD *)v27 + 3) = v18;
    v36 = a2;
    *((_QWORD *)v27 + 4) = v45;
    v38 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v38(&v27[(v26 + 40) & ~v26], v16, v13);
    swift_allocObject();
    v28 = sub_1B150DA60((uint64_t)sub_1B159DAD4, (uint64_t)v27, a7);
    v29 = v37;
    v37(v16, a2, v13);
    v48 = v28;
    sub_1B16B9788();
    swift_retain();
    swift_retain();
    sub_1B16B97AC();
    v29(v16, v36, v13);
    v30 = (v26 + 48) & ~v26;
    v31 = (char *)swift_allocObject();
    *((_QWORD *)v31 + 2) = v13;
    *((_QWORD *)v31 + 3) = v18;
    v32 = v46;
    v33 = v42;
    *((_QWORD *)v31 + 4) = v46;
    *((_QWORD *)v31 + 5) = v33;
    v38(&v31[v30], v16, v13);
    sub_1B13C4AEC(v32);
    sub_1B150CF18((uint64_t)sub_1B159DB54, (uint64_t)v31);
    swift_release();
    result = swift_release();
    v34 = 0;
    a6 = v43;
  }
  else
  {
    v34 = 1;
  }
  *a6 = v34;
  return result;
}

void sub_1B159D0C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[2];
  v5 = *(_QWORD *)(*a1 + 88);
  v8 = *(_QWORD *)(*a1 + 80);
  v9 = v5;
  v10 = a2;
  v6 = type metadata accessor for DebouncedSet.State(0, v8, v5, a4);
  sub_1B159DBE4((void (*)(uint64_t))sub_1B159DB74, (uint64_t)&v7, v4, v6, MEMORY[0x1E0DEE9C0] + 8);
}

uint64_t sub_1B159D138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B16BA328();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v17 - v11;
  sub_1B16B9DE8();
  sub_1B16B9DC4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  v17[3] = 0;
  sub_1B159D8DC(255, v13, v14, v15);
  sub_1B16B9788();
  return sub_1B16B97AC();
}

uint64_t sub_1B159D26C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v7 = sub_1B16BA328();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)&v13 - v11;
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v12, a3, a4);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, a4);
    a1(v12);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  return result;
}

uint64_t DebouncedSet.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t DebouncedSet.__deallocating_deinit()
{
  DebouncedSet.deinit();
  return swift_deallocClassInstance();
}

uint64_t DebouncedSet.startIndex.getter()
{
  return sub_1B159D384((void (*)(uint64_t))sub_1B159D974);
}

uint64_t DebouncedSet.endIndex.getter()
{
  return sub_1B159D384((void (*)(uint64_t))sub_1B159D994);
}

uint64_t sub_1B159D384(void (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];

  v3 = *v1;
  v4 = v1[2];
  v5 = *(_QWORD *)(v3 + 88);
  v13[2] = *(_QWORD *)(v3 + 80);
  v13[3] = v5;
  OUTLINED_FUNCTION_3_85();
  v10 = type metadata accessor for DebouncedSet.State(v6, v7, v8, v9);
  OUTLINED_FUNCTION_3_85();
  v11 = sub_1B16B9D94();
  OUTLINED_FUNCTION_1_107(a1, (uint64_t)v13, v4, v10, v11);
  return v13[5];
}

uint64_t sub_1B159D408@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = a2(*a1);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v6 & 1;
  return result;
}

void DebouncedSet.subscript.getter(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];
  char v11;

  v5 = *v4;
  v6 = v4[2];
  v8 = *(_QWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 88);
  v10[2] = v8;
  v10[3] = v7;
  v10[4] = a1;
  v10[5] = a2;
  v11 = a3 & 1;
  v9 = type metadata accessor for DebouncedSet.State(0, v8, v7, a4);
  OUTLINED_FUNCTION_1_107((void (*)(uint64_t))sub_1B159D9B4, (uint64_t)v10, v6, v9, v8);
}

uint64_t DebouncedSet.index(after:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v5 = v4[2];
  v6 = *(_QWORD *)(*v4 + 88);
  v11 = *(_QWORD *)(*v4 + 80);
  v12 = v6;
  v13 = a1;
  v14 = a2;
  v15 = a3 & 1;
  v7 = type metadata accessor for DebouncedSet.State(0, v11, v6, a4);
  v8 = sub_1B16B9D94();
  OUTLINED_FUNCTION_1_107((void (*)(uint64_t))sub_1B159D9EC, (uint64_t)&v10, v5, v7, v8);
  return v16;
}

uint64_t sub_1B159D548@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = sub_1B16B9DAC();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_1B159D594@<X0>(uint64_t a1@<X8>)
{
  return sub_1B159D5AC(DebouncedSet.startIndex.getter, a1);
}

uint64_t sub_1B159D5A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1B159D5AC(DebouncedSet.endIndex.getter, a1);
}

uint64_t sub_1B159D5AC@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  result = a1();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  return result;
}

void (*sub_1B159D5DC(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B159D630(v4, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
  return sub_1B13E3774;
}

void (*sub_1B159D630(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(_QWORD *a1)
{
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = a4 & 1;
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  *a1 = v8;
  a1[1] = v9;
  a1[2] = malloc(*(_QWORD *)(v9 + 64));
  DebouncedSet.subscript.getter(a2, a3, v7, v10);
  return sub_1B13E379C;
}

void sub_1B159D6B8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -2;
}

uint64_t sub_1B159D6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = DebouncedSet.index(after:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), a2);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v6 & 1;
  return result;
}

uint64_t sub_1B159D71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;

  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  v8 = DebouncedSet.index(after:)(*(_QWORD *)a1, v6, v7, a4);
  v10 = v9;
  v12 = v11;
  result = sub_1B14A8A24(v5, v6, v7);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v12 & 1;
  return result;
}

uint64_t sub_1B159D794@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t result;

  v3 = *v1;
  swift_retain();
  v4 = DebouncedSet.startIndex.getter();
  v6 = v5;
  v8 = v7;
  result = swift_release();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v8 & 1;
  return result;
}

uint64_t sub_1B159D7F4(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for DebouncedSet<A>, a1);
  return sub_1B16B9ED8();
}

uint64_t sub_1B159D828(uint64_t a1)
{
  MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for DebouncedSet<A>, a1);
  return sub_1B16B9F08();
}

uint64_t DebouncedSet.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[7];

  OUTLINED_FUNCTION_5_74();
  v4 = type metadata accessor for DebouncedSet.State(0, v1, v2, v3);
  OUTLINED_FUNCTION_1_107((void (*)(uint64_t))sub_1B159DA0C, (uint64_t)v6, v0, v4, MEMORY[0x1E0DEA968]);
  return v6[6];
}

uint64_t sub_1B159D8BC()
{
  return DebouncedSet.description.getter();
}

void sub_1B159D8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED17E070)
  {
    v4 = type metadata accessor for Debounce(0, MEMORY[0x1E0DEE9C0] + 8, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED17E070);
  }
}

uint64_t type metadata accessor for DebouncedSet.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebouncedSet.State);
}

uint64_t sub_1B159D934(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B159CBC8(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1B159D950@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1B159CE14(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2, *(double *)(v2 + 24));
}

uint64_t sub_1B159D974@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B159D408(a1, MEMORY[0x1E0DEB218], a2);
}

uint64_t sub_1B159D994@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B159D408(a1, MEMORY[0x1E0DEB348], a2);
}

uint64_t sub_1B159D9B4()
{
  return sub_1B16B9E00();
}

uint64_t sub_1B159D9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B159D548(a1);
}

uint64_t sub_1B159DA0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B16B9D70();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B159DA40()
{
  JUMPOUT(0x1B5E1F0E8);
}

void sub_1B159DA50()
{
  JUMPOUT(0x1B5E1F0E8);
}

uint64_t type metadata accessor for DebouncedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebouncedSet);
}

uint64_t method lookup function for DebouncedSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebouncedSet.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1B159DA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  v2 = (v1 + 40) & ~v1;
  swift_release();
  OUTLINED_FUNCTION_4_76(v0 + v2);
  OUTLINED_FUNCTION_3_85();
  return OUTLINED_FUNCTION_6_0();
}

void sub_1B159DAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) - 8) + 80);
  sub_1B159D0C0(*(_QWORD **)(v4 + 32), v4 + ((v5 + 40) & ~v5), a3, a4);
}

uint64_t sub_1B159DAF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  OUTLINED_FUNCTION_4_76(v0 + ((v1 + 48) & ~v1));
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B159DB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1B159D26C(*(void (**)(char *))(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_1B159DB74(uint64_t a1)
{
  uint64_t v1;

  return sub_1B159D138(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B159DB90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2);
}

void sub_1B159DBE4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1B159DC4C(a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_1B159DC4C(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t sub_1B159DCCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B159DB90(a1, a2);
}

id sub_1B159DCE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id __dst[16];

  v2 = v0;
  v3 = type metadata accessor for PillViewIconURL();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)__dst - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PillViewImage();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_7_3();
  sub_1B159E1E4(v2, (uint64_t)v1);
  v10 = OUTLINED_FUNCTION_1_108();
  if (v10)
  {
    if (v10 == 1)
    {
      sub_1B159E228((uint64_t)v1, (uint64_t)v7);
      v11 = *(id *)&v7[*(int *)(v3 + 28)];
      v12 = v11;
      sub_1B1406858((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PillViewIconURL);
    }
    else
    {
      memcpy(__dst, v1, sizeof(__dst));
      v11 = __dst[15];
      v13 = __dst[15];
      sub_1B1591568((uint64_t)__dst);
    }
  }
  else
  {
    v11 = (id)v1[2];
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t static PillViewImage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t (*v30)(_QWORD);
  void *v31;
  BOOL v32;
  id v33;
  id v34;
  char v35;
  _QWORD __dst[16];

  type metadata accessor for PillViewIconURL();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_7_3();
  type metadata accessor for PillViewImage();
  OUTLINED_FUNCTION_1_0();
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v11 = (_QWORD *)((char *)__dst - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v9, v12);
  v15 = (char *)__dst - v14;
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (_QWORD *)((char *)__dst - v17);
  sub_1B159E184();
  OUTLINED_FUNCTION_1_0();
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = (char *)__dst - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &v23[*(int *)(v21 + 48)];
  sub_1B159E1E4(a1, (uint64_t)v23);
  sub_1B159E1E4(a2, (uint64_t)v24);
  v25 = OUTLINED_FUNCTION_1_108();
  if (!v25)
  {
    sub_1B159E1E4((uint64_t)v23, (uint64_t)v18);
    v26 = *v18;
    v27 = v18[1];
    v28 = (void *)v18[2];
    if (OUTLINED_FUNCTION_1_108())
    {
      OUTLINED_FUNCTION_52();

      goto LABEL_12;
    }
    v31 = (void *)*((_QWORD *)v24 + 2);
    v32 = v26 == *(_QWORD *)v24 && v27 == *((_QWORD *)v24 + 1);
    if (v32 || (sub_1B16BA910(v26, v27, *(_QWORD *)v24) & 1) != 0)
    {
      if (!v28)
      {
        OUTLINED_FUNCTION_52();
        OUTLINED_FUNCTION_20_0();
        if (!v31)
          goto LABEL_23;
LABEL_27:

LABEL_29:
        v29 = 0;
        goto LABEL_30;
      }
      if (v31)
      {
        sub_1B13A2864();
        v33 = v31;
        v34 = v28;
        v35 = OUTLINED_FUNCTION_7_64();
        OUTLINED_FUNCTION_52();
        OUTLINED_FUNCTION_20_0();

        if ((v35 & 1) == 0)
          goto LABEL_29;
LABEL_23:
        v29 = 1;
        goto LABEL_30;
      }
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_20_0();
    }
    else
    {
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_20_0();

    }
    v31 = v28;
    goto LABEL_27;
  }
  if (v25 != 1)
  {
    sub_1B159E1E4((uint64_t)v23, (uint64_t)v11);
    if (OUTLINED_FUNCTION_1_108() != 2)
    {
      sub_1B1591568((uint64_t)v11);
      goto LABEL_12;
    }
    memcpy(__dst, v24, sizeof(__dst));
    v29 = static PillViewAssetHandles.== infix(_:_:)(v11, __dst);
    sub_1B1591568((uint64_t)__dst);
    sub_1B1591568((uint64_t)v11);
LABEL_30:
    v30 = (uint64_t (*)(_QWORD))type metadata accessor for PillViewImage;
    goto LABEL_31;
  }
  sub_1B159E1E4((uint64_t)v23, (uint64_t)v15);
  if (OUTLINED_FUNCTION_1_108() == 1)
  {
    sub_1B159E228((uint64_t)v24, v2);
    if ((MEMORY[0x1B5E1B428](v15, v2) & 1) != 0)
      OUTLINED_FUNCTION_6_80();
    OUTLINED_FUNCTION_3_86(v2);
    OUTLINED_FUNCTION_3_86((uint64_t)v15);
    goto LABEL_29;
  }
  sub_1B1406858((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for PillViewIconURL);
LABEL_12:
  v29 = 0;
  v30 = (uint64_t (*)(_QWORD))sub_1B159E184;
LABEL_31:
  sub_1B1406858((uint64_t)v23, v30);
  return v29 & 1;
}

uint64_t type metadata accessor for PillViewImage()
{
  uint64_t result;

  result = qword_1ED17C698;
  if (!qword_1ED17C698)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B159E184()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF342D8)
  {
    type metadata accessor for PillViewImage();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF342D8);
  }
}

uint64_t sub_1B159E1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PillViewImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B159E228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PillViewIconURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for PillViewImage(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);
  int *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v14;
      (**(void (***)(uint64_t, uint64_t *))(v14 - 8))(a1, a2);
      v15 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 64) = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 40, (uint64_t)(a2 + 5));
      v16 = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 104) = v16;
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 80, (uint64_t)(a2 + 10));
      v17 = (void *)a2[15];
      *(_QWORD *)(a1 + 120) = v17;
      v18 = v17;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1B16B7AE4();
      v8 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for PillViewIconURL();
      v8(a1 + v9[5], (uint64_t *)((char *)a2 + v9[5]), v7);
      v8(a1 + v9[6], (uint64_t *)((char *)a2 + v9[6]), v7);
      v10 = v9[7];
      v11 = *(void **)((char *)a2 + v10);
      *(_QWORD *)(a1 + v10) = v11;
      v12 = v11;
    }
    else
    {
      v19 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v19;
      v20 = (void *)a2[2];
      *(_QWORD *)(a1 + 16) = v20;
      sub_1B16B9740();
      v21 = v20;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for PillViewImage(uint64_t a1)
{
  int EnumCaseMultiPayload;
  id *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
    v3 = (id *)(a1 + 120);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v4 = sub_1B16B7AE4();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    v6 = (int *)type metadata accessor for PillViewIconURL();
    v5(a1 + v6[5], v4);
    v5(a1 + v6[6], v4);
    v3 = (id *)(a1 + v6[7]);
  }
  else
  {
    if (EnumCaseMultiPayload)
      return;
    swift_bridgeObjectRelease();
    v3 = (id *)(a1 + 16);
  }

}

uint64_t initializeWithCopy for PillViewImage(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  void *v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
    v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 40, a2 + 40);
    v13 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 80, a2 + 80);
    v14 = *(void **)(a2 + 120);
    *(_QWORD *)(a1 + 120) = v14;
    v15 = v14;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1B16B7AE4();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    v7 = (int *)type metadata accessor for PillViewIconURL();
    v6(a1 + v7[5], a2 + v7[5], v5);
    v6(a1 + v7[6], a2 + v7[6], v5);
    v8 = v7[7];
    v9 = *(void **)(a2 + v8);
    *(_QWORD *)(a1 + v8) = v9;
    v10 = v9;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v16;
    v17 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v17;
    sub_1B16B9740();
    v18 = v17;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for PillViewImage(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD *, uint64_t);
  int *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;

  if (a1 != a2)
  {
    sub_1B1406858((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PillViewImage);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = a2[3];
      a1[3] = v11;
      a1[4] = a2[4];
      (**(void (***)(_QWORD *, _QWORD *))(v11 - 8))(a1, a2);
      v12 = a2[8];
      a1[8] = v12;
      a1[9] = a2[9];
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
      v13 = a2[13];
      a1[13] = v13;
      a1[14] = a2[14];
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
      v14 = (void *)a2[15];
      a1[15] = v14;
      v15 = v14;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1B16B7AE4();
      v6 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
      v6(a1, a2, v5);
      v7 = (int *)type metadata accessor for PillViewIconURL();
      v6((_QWORD *)((char *)a1 + v7[5]), (_QWORD *)((char *)a2 + v7[5]), v5);
      v6((_QWORD *)((char *)a1 + v7[6]), (_QWORD *)((char *)a2 + v7[6]), v5);
      v8 = v7[7];
      v9 = *(void **)((char *)a2 + v8);
      *(_QWORD *)((char *)a1 + v8) = v9;
      v10 = v9;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v16 = (void *)a2[2];
      a1[2] = v16;
      sub_1B16B9740();
      v17 = v16;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for PillViewImage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B16B7AE4();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for PillViewIconURL();
    v7(&a1[v8[5]], &a2[v8[5]], v6);
    v7(&a1[v8[6]], &a2[v8[6]], v6);
    *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for PillViewImage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;

  if (a1 != a2)
  {
    sub_1B1406858((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PillViewImage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B16B7AE4();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for PillViewIconURL();
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      v7(&a1[v8[6]], &a2[v8[6]], v6);
      *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B159E9B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PillViewIconURL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t < infix(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  BOOL v11;
  _BOOL4 v13;
  BOOL v14;
  int v15;
  unsigned int v16;
  uint64_t result;

  v6 = *a2;
  v7 = *((unsigned __int8 *)a2 + 8);
  v8 = *a4;
  v9 = *((unsigned __int8 *)a4 + 8);
  sub_1B13EAE58();
  if (!v7)
  {
    v13 = v6 < v8;
    if (v8)
      v14 = 1;
    else
      v14 = v6 < a3;
LABEL_27:
    v15 = v14;
    if (v9 == 2)
      v16 = v15;
    else
      v16 = 1;
    if (v9)
      return v16;
    else
      return v13;
  }
  if (v7 == 2 && v6 == 0)
  {
    v13 = v8 > a1;
    if (v8)
      v14 = 1;
    else
      v14 = a1 < a3;
    goto LABEL_27;
  }
  if (!v9 || v9 == 2 && !v8)
    return 0;
  if (v7 == 1)
    return 0;
  v11 = v7 == 2 && v6 == 1;
  if (v11 || v9 == 1)
    return 0;
  if (v9 == 2 && v8 == 1)
    return 0;
  result = sub_1B16BA904();
  __break(1u);
  return result;
}

uint64_t static VisualRank.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((_BYTE *)a1 + 8))
  {
    if (*((_BYTE *)a2 + 8))
      return 0;
    return v2 == v3;
  }
  if (*((_BYTE *)a1 + 8) == 1)
  {
    if (v4 != 1)
      return 0;
    return v2 == v3;
  }
  if (v2)
  {
    if (v4 != 2 || v3 != 1)
      return 0;
  }
  else if (v4 != 2 || v3 != 0)
  {
    return 0;
  }
  return 1;
}

uint64_t dispatch thunk of VisualRankable.visualRankValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1B159EB7C()
{
  swift_retain();
  sub_1B159EBF8();
}

uint64_t sub_1B159EBA4()
{
  OUTLINED_FUNCTION_13();
  return swift_retain();
}

void sub_1B159EBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_64_2();
  v3 = (_QWORD *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0x60));
  OUTLINED_FUNCTION_13();
  *v3 = v0;
  swift_release();
  OUTLINED_FUNCTION_48();
}

void sub_1B159EC48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2, v3);
  sub_1B14107FC(a1, (uint64_t)&v5 - v4);
  sub_1B159ECD4();
}

void sub_1B159ECD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_71_11(v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_104_5();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_48();
}

uint64_t (*sub_1B159ED10())()
{
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

uint64_t sub_1B159ED60()
{
  return swift_retain();
}

uint64_t sub_1B159ED80(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70)) = a1;
  return swift_release();
}

uint64_t sub_1B159EDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1B141E46C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1B159EDD8(uint64_t a1)
{
  return sub_1B13FAF80(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t BlueprintCollectionViewLayout.blueprintLayoutCollectionProvider.getter@<X0>(uint64_t a1@<X8>)
{
  char *v1;

  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1)
                                                                            + 0x50)
                                                                - 8)
                                                    + 16))(a1, &v1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1) + 0x80)]);
}

void sub_1B159EE38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_95_9();
  OUTLINED_FUNCTION_72_8(v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_100_9();
  OUTLINED_FUNCTION_48();
}

void sub_1B159EE70()
{
  uint64_t v0;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_72_8(v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_104_5();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_48();
}

void sub_1B159EEAC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[1184];

  OUTLINED_FUNCTION_95_9();
  sub_1B15A209C(v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v1) + 0x90), (uint64_t)v2);
  OUTLINED_FUNCTION_94_5((uint64_t)v2);
  sub_1B15A2DC4(v2, sub_1B141FB7C);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B159EF04(uint64_t a1)
{
  _QWORD *v1;
  _BYTE v2[1176];
  _BYTE v3[1184];

  sub_1B15A209C(a1, (uint64_t)v2);
  sub_1B15A209C((uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90), (uint64_t)v3);
  OUTLINED_FUNCTION_94_5((uint64_t)v2);
  sub_1B15A2DC4(v3, sub_1B140FEB8);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B159EF68()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  _BYTE v4[1176];

  OUTLINED_FUNCTION_95_9();
  v3 = (const void *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0x98));
  OUTLINED_FUNCTION_4_8(v4, v3);
  OUTLINED_FUNCTION_4_8(v0, v3);
  sub_1B1448894((uint64_t)v4);
  OUTLINED_FUNCTION_17_32();
}

void sub_1B159EFC4()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _BYTE v5[1176];

  OUTLINED_FUNCTION_64_2();
  v3 = (void *)(v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v2) + 0x98));
  OUTLINED_FUNCTION_4_8(v5, v3);
  v4 = OUTLINED_FUNCTION_4_8(v3, v0);
  OUTLINED_FUNCTION_56_14((uint64_t)v4);
  OUTLINED_FUNCTION_17_32();
}

void sub_1B159F01C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA0);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;

}

void BlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)()
{
  OUTLINED_FUNCTION_13_1();
  BlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)();
  OUTLINED_FUNCTION_0_0();
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutCache()
{
  return objc_opt_self();
}

uint64_t sub_1B159F088(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  void *v8;
  _BYTE v9[1176];
  _BYTE __dst[1176];

  memcpy(__dst, a2, sizeof(__dst));
  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1B5E1F2F8](v4);
  if (v5)
  {
    v6 = (void *)v5;
    memcpy(v9, __dst, sizeof(v9));
    sub_1B1448894((uint64_t)__dst);
    sub_1B159EFC4();

  }
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v4);
  if (result)
  {
    v8 = (void *)result;
    sub_1B159ED60();

    memcpy(v9, __dst, sizeof(v9));
    sub_1B159F160();
    return swift_release();
  }
  return result;
}

void sub_1B159F160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[9];
  _BYTE v26[1184];

  OUTLINED_FUNCTION_6();
  v2 = v0;
  v4 = v3;
  v24 = sub_1B16B95D8();
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = sub_1B16B9620();
  OUTLINED_FUNCTION_58_12();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  OUTLINED_FUNCTION_4_8(v26, v4);
  OUTLINED_FUNCTION_13();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
  {
    type metadata accessor for BlueprintCollectionViewLayoutCache.Token();
    v16 = OUTLINED_FUNCTION_25();
    v23 = v15;
    *(_QWORD *)(v2 + 24) = v16;
    v17 = v16;
    swift_retain();
    swift_release();
    v18 = *(_QWORD *)(v2 + 16);
    OUTLINED_FUNCTION_13();
    sub_1B15A3214(0, &qword_1ED187610, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA000]);
    sub_1B16B9740();
    sub_1B16B9764();
    swift_endAccess();
    v19 = OUTLINED_FUNCTION_25();
    swift_weakInit();
    v20 = (_QWORD *)OUTLINED_FUNCTION_25();
    v20[2] = v19;
    v20[3] = v18;
    OUTLINED_FUNCTION_4_8(v20 + 4, v26);
    v20[151] = v17;
    v25[4] = sub_1B15A3204;
    v25[5] = v20;
    v25[0] = MEMORY[0x1E0C809B0];
    v25[1] = 1107296256;
    v25[2] = sub_1B13F00E4;
    v25[3] = &block_descriptor_66;
    v21 = _Block_copy(v25);
    swift_retain();
    swift_retain();
    sub_1B1448894((uint64_t)v26);
    sub_1B16B95F0();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1B13DE5B0(0, (unint64_t *)&qword_1ED183708, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B13FF59C((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v22);
    sub_1B16BA448();
    MEMORY[0x1B5E1DA80](0, v23, v9, v21);
    _Block_release(v21);
    swift_release();
    OUTLINED_FUNCTION_36_1(v9, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v23, v10);
    swift_release();
    OUTLINED_FUNCTION_45();
  }
  OUTLINED_FUNCTION_47();
}

void BlueprintCollectionViewLayout.__allocating_init(coder:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_0_0();
}

void BlueprintCollectionViewLayout.init(coder:)()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE v11[1176];

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (uint64_t)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68);
  v4 = OUTLINED_FUNCTION_3_12();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  OUTLINED_FUNCTION_20_38();
  v6 = *(_QWORD *)(v5 + 112);
  type metadata accessor for BlueprintCollectionViewLayoutCache();
  v7 = OUTLINED_FUNCTION_25();
  sub_1B15A1EA0();
  *(_QWORD *)((char *)v1 + v6) = v7;
  OUTLINED_FUNCTION_20_38();
  v9 = (char *)v1 + *(_QWORD *)(v8 + 120);
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v1 + *(_QWORD *)((*v2 & *v1) + 0x88), 1, 1, v4);
  v10 = (uint64_t)v1 + *(_QWORD *)((*v2 & *v1) + 0x90);
  sub_1B15A2094(v11);
  sub_1B15A209C((uint64_t)v11, v10);
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0xA0)) = 0;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B159F5C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  BlueprintCollectionViewLayout.init(coder:)();
}

void sub_1B159F5D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  char *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v3;
  v6 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3);
  v7 = v6[10];
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v15 - v9;
  v12 = type metadata accessor for BlueprintCollectionViewLayout(0, v7, v6[11], v11);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v4[v6[16]], v7);
  BlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)();
  v14 = v13;
  sub_1B159F6FC(v13);
  a3[3] = v12;
  *a3 = v14;
}

uint64_t sub_1B159F6A0(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[4];

  v1 = a1;
  sub_1B159F5D8((uint64_t)v1, v2, v5);

  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3 = sub_1B16BA8F8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

void sub_1B159F6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BYTE v6[1176];
  uint64_t v7;
  _BYTE v8[1176];

  OUTLINED_FUNCTION_9_1(a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1, v2);
  sub_1B140FE80();
  sub_1B159ECD4();
  v3 = sub_1B159ED60();
  sub_1B159ED80(v3);
  sub_1B159EEAC();
  sub_1B15A209C((uint64_t)&v7, (uint64_t)v8);
  sub_1B15A209C((uint64_t)v8, (uint64_t)v6);
  OUTLINED_FUNCTION_81_12((uint64_t)v6);
  sub_1B159EE38();
  OUTLINED_FUNCTION_85_7();
  sub_1B159EBA4();
  sub_1B159EBF8();
  v4 = sub_1B141E46C();
  if ((v5 & 1) == 0)
    sub_1B13FAF74(*(double *)&v4);
  OUTLINED_FUNCTION_67();
}

uint64_t sub_1B159F7F8()
{
  uint64_t v0;
  uint64_t v2;

  sub_1B159F01C(0);
  OUTLINED_FUNCTION_2_0(v0, sel_copy);
  sub_1B16BA3AC();
  swift_unknownObjectRelease();
  sub_1B15A2124();
  swift_dynamicCast();
  return v2;
}

uint64_t sub_1B159F86C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_13();
  v1 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v1 + 16) && (OUTLINED_FUNCTION_54(), v2 = sub_1B142037C(), (v3 & 1) != 0))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
    swift_retain();
  }
  else
  {
    v4 = 0;
  }
  OUTLINED_FUNCTION_55_0();
  return v4;
}

uint64_t sub_1B159F8E8(uint64_t result)
{
  if (result)
  {
    if (*(_BYTE *)(result + 72) == 1)
    {
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_13();
      swift_retain();
      OUTLINED_FUNCTION_54();
      sub_1B141FD68();
      OUTLINED_FUNCTION_55_0();
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_1B159F97C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_23_32();
  OUTLINED_FUNCTION_39_19(v1);
  sub_1B141FAD8();
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_7;
  OUTLINED_FUNCTION_14_39();
  OUTLINED_FUNCTION_107_5();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_20_0();
LABEL_7:
    OUTLINED_FUNCTION_22_29();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_54_17();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_105_6();
  v4 = v3;
  OUTLINED_FUNCTION_7_0();
  if (!v4)
    goto LABEL_7;
  v5 = BlueprintLayoutCollectionLayoutAttributes.requiresPinning.getter();
  if (!v5)
    goto LABEL_7;
  OUTLINED_FUNCTION_13_45(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  sub_1B14F80B0(v0);
  OUTLINED_FUNCTION_5_75();
  OUTLINED_FUNCTION_12_0();
  sub_1B14F81A0(v0);
  OUTLINED_FUNCTION_22_29();
LABEL_8:
  OUTLINED_FUNCTION_10_53();
}

void (*sub_1B159FA34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t, uint64_t, uint64_t)
{
  return sub_1B13B1F20(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B159F97C);
}

id sub_1B159FA40(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  objc_super *v39;
  SEL v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  unint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  BOOL v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  int EnumTagSinglePayload;
  unint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  unint64_t v95;
  char v96;
  unint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char v113;
  char v114;
  uint64_t v115;
  char v116;
  char v117;
  uint64_t v118;
  char v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  int64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  int64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, unint64_t, uint64_t);
  unint64_t v147;
  uint64_t v148;
  void *v149;
  id result;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  id v158;
  char *v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  void (*v167)(_QWORD, _QWORD, _QWORD);
  char *v168;
  __int128 v169;
  uint64_t v170;
  char *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  double v175;
  double v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  _BYTE v180[568];
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _BYTE v185[616];

  v174 = *(_QWORD *)&a5;
  v175 = a4;
  v176 = a3;
  v177 = *(_QWORD *)&a2;
  v7 = *MEMORY[0x1E0DEEDD8] & *v5;
  OUTLINED_FUNCTION_9_1(a1, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_47_0();
  v161 = v10;
  OUTLINED_FUNCTION_45_0();
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v15 = (char *)&v151 - v14;
  MEMORY[0x1E0C80A78](v13, v16);
  v154 = (char *)&v151 - v17;
  v18 = OUTLINED_FUNCTION_3_12();
  v178 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_47_0();
  v160 = v20;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_190();
  v156 = v23;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v24, v25);
  OUTLINED_FUNCTION_190();
  v153 = v26;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v27, v28);
  OUTLINED_FUNCTION_190();
  v170 = v29;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v30, v31);
  OUTLINED_FUNCTION_190();
  v162 = v32;
  OUTLINED_FUNCTION_45_0();
  MEMORY[0x1E0C80A78](v33, v34);
  v171 = (char *)&v151 - v35;
  v37 = type metadata accessor for BlueprintCollectionViewLayout(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v36);
  v181 = v5;
  v182 = v37;
  v38 = OUTLINED_FUNCTION_54();
  v163 = objc_msgSendSuper2(v39, v40, v38);
  sub_1B141E150((uint64_t)v163, (uint64_t)&v183);
  sub_1B141FAD8();
  v158 = v5;
  sub_1B15A0814(v5);
  memcpy(v180, v185, sizeof(v180));
  sub_1B14F80B0((uint64_t)v185);
  OUTLINED_FUNCTION_50_15();
  BlueprintLayoutCollectionPinAdjuster.shouldInvalidateLayoutAttributes(for:offset:insets:contentSize:hasViewOnScreen:)();
  v42 = v41;
  sub_1B14F81A0((uint64_t)v185);
  sub_1B1448694((uint64_t)&v184);
  v43 = v42;
  swift_release();
  if (v42 >> 62)
    goto LABEL_108;
  v44 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v44)
  {
LABEL_109:
    swift_bridgeObjectRelease();
    return v163;
  }
LABEL_3:
  v152 = v15;
  v173 = v43 & 0xC000000000000001;
  v15 = (char *)MEMORY[0x1E0DEE9E0];
  v45 = 4;
  v168 = "eneConnect";
  *(_QWORD *)&v169 = v43;
  v165 = MEMORY[0x1E0DEE9D8];
  v166 = 0x80000001B16E4CF0;
  v159 = "entKindSectionHeader";
  v157 = 0x80000001B16E4D20;
  v177 = MEMORY[0x1E0DEE9D8];
  v174 = MEMORY[0x1E0DEE9D8];
  v175 = *(double *)&v18;
  v172 = v44;
  do
  {
    if (v173)
      v46 = (char *)MEMORY[0x1B5E1DF60](v45 - 4, v43);
    else
      v46 = (char *)*(id *)(v43 + 8 * v45);
    v47 = v46;
    v48 = v45 - 3;
    if (__OFADD__(v45 - 4, 1))
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      sub_1B16B9740();
      v44 = sub_1B16BA76C();
      OUTLINED_FUNCTION_17();
      if (!v44)
        goto LABEL_109;
      goto LABEL_3;
    }
    v49 = OUTLINED_FUNCTION_29_6((uint64_t)v46, sel_representedElementKind);
    if (v49)
    {
      v50 = v49;
      v51 = sub_1B16B9860();
      v53 = v52;

      if (v51 == 0xD000000000000024 && v53 == v166 || (OUTLINED_FUNCTION_18_37() & 1) != 0)
      {
        v54 = swift_bridgeObjectRelease();
        v55 = OUTLINED_FUNCTION_29_6(v54, sel_indexPath);
        sub_1B16B7D0C();

        v56 = v177;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v43 = v169;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v56 = OUTLINED_FUNCTION_26_4();
        v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v56 + 16);
        v58 = *(_QWORD *)(v56 + 24);
        v177 = v56;
        if ((unint64_t)v59 >= v58 >> 1)
        {
          v111 = OUTLINED_FUNCTION_15_30(v58);
          v177 = sub_1B140A8BC(v111, v112, v113, v177);
        }
        v60 = OUTLINED_FUNCTION_0_126();
        v61 = (uint64_t)v171;
        goto LABEL_17;
      }
      if (v51 == 0xD000000000000024 && v53 == v157)
      {
        v49 = (id)swift_bridgeObjectRelease();
        v43 = v169;
LABEL_22:
        v63 = OUTLINED_FUNCTION_29_6((uint64_t)v49, sel_indexPath);
        sub_1B16B7D0C();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v165 = sub_1B140A8BC(0, *(_QWORD *)(v165 + 16) + 1, 1, v165);
        v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v165 + 16);
        v64 = *(_QWORD *)(v165 + 24);
        if ((unint64_t)v59 >= v64 >> 1)
        {
          v117 = OUTLINED_FUNCTION_15_30(v64);
          v165 = sub_1B140A8BC(v117, v118, v119, v165);
        }
        v60 = OUTLINED_FUNCTION_0_126();
        v61 = v162;
LABEL_17:
        OUTLINED_FUNCTION_82_10(v60, v61);

        goto LABEL_58;
      }
      v62 = OUTLINED_FUNCTION_18_37();
      v49 = (id)OUTLINED_FUNCTION_7_0();
      v43 = v169;
      if ((v62 & 1) != 0)
        goto LABEL_22;
    }
    v65 = OUTLINED_FUNCTION_29_6((uint64_t)v49, sel_indexPath);
    sub_1B16B7D0C();

    v66 = v174;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v66 = OUTLINED_FUNCTION_26_4();
    v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v66 + 16);
    v67 = *(_QWORD *)(v66 + 24);
    v174 = v66;
    if ((unint64_t)v59 >= v67 >> 1)
    {
      v114 = OUTLINED_FUNCTION_15_30(v67);
      v174 = sub_1B140A8BC(v114, v115, v116, v174);
    }
    v68 = OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_82_10(v68, v170);
    v69 = &v47[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_pinTrait];
    v70 = OUTLINED_FUNCTION_13();
    v71 = v69[8] == 3 && *(_QWORD *)v69 == 1;
    if (v71 || OUTLINED_FUNCTION_29_6(v70, sel_representedElementCategory) != (id)2)
    {
      v85 = &v47[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isPlugin];
      OUTLINED_FUNCTION_13();
      if (*v85 != 1)
        goto LABEL_57;
      v86 = objc_msgSend(v158, sel_collectionView);
      if (v86)
      {
        v87 = v86;
        v167 = v59;
        v88 = OUTLINED_FUNCTION_29_6((uint64_t)v86, sel_indexPath);
        v89 = v156;
        sub_1B16B7D0C();

        v90 = (void *)OUTLINED_FUNCTION_57_16();
        (*(void (**)(uint64_t, double))(v178 + 8))(v89, COERCE_DOUBLE(*(_QWORD *)&v175));
        v91 = objc_msgSend(v87, sel_cellForItemAtIndexPath_, v90);

        if (v91)
        {
          v92 = (void *)sub_1B15A4300(v91);
          if (v92)
          {
            v93 = v92;
            v94 = objc_msgSend(v92, sel_collectionViewLayout);
            objc_msgSend(v94, sel_invalidateLayout);

          }
        }
        else
        {

        }
        v18 = *(_QWORD *)&v175;
        v43 = v169;
        v59 = v167;
      }
      else
      {

        v18 = *(_QWORD *)&v175;
      }
    }
    else
    {
      v72 = OUTLINED_FUNCTION_29_6(2, sel_representedElementKind);
      if (!v72)
        goto LABEL_57;
      v73 = v72;
      v167 = v59;
      v164 = sub_1B16B9860();
      v75 = v74;

      v77 = OUTLINED_FUNCTION_29_6(v76, sel_indexPath);
      v78 = (uint64_t)v154;
      sub_1B16B7D0C();

      OUTLINED_FUNCTION_45_13(v78, 0);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v78, 1, v18);
      v155 = v75;
      if (EnumTagSinglePayload == 1)
      {
        sub_1B141076C(v78, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
        sub_1B16B9740();
        v80 = OUTLINED_FUNCTION_49_15();
        v82 = v81;
        swift_bridgeObjectRelease();
        if ((v82 & 1) != 0)
        {
          swift_isUniquelyReferenced_nonNull_native();
          v179 = v15;
          sub_1B15A2A2C();
          OUTLINED_FUNCTION_38_22();
          v15 = v179;
          swift_bridgeObjectRelease();
          v83 = (uint64_t)v152;
          v59 = v167;
          v167(v152, *((_QWORD *)v15 + 7) + v80 * *(_QWORD *)&v176, v18);
          sub_1B16BA700();
          swift_bridgeObjectRelease();
          v84 = 0;
          v43 = v169;
        }
        else
        {
          v84 = 1;
          v83 = (uint64_t)v152;
          v43 = v169;
          v59 = v167;
        }
        OUTLINED_FUNCTION_45_13(v83, v84);
        swift_bridgeObjectRelease();
        sub_1B141076C(v83, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
LABEL_57:

        goto LABEL_58;
      }
      v167(v153, v78, v18);
      swift_isUniquelyReferenced_nonNull_native();
      v179 = v15;
      v95 = OUTLINED_FUNCTION_49_15();
      if (__OFADD__(*((_QWORD *)v15 + 2), (v96 & 1) == 0))
      {
        __break(1u);
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      v97 = v95;
      v98 = v96;
      sub_1B15A2A2C();
      v99 = OUTLINED_FUNCTION_38_22();
      v59 = v167;
      v100 = v164;
      if ((v99 & 1) != 0)
      {
        v101 = sub_1B14477CC();
        if ((v98 & 1) != (v102 & 1))
          goto LABEL_113;
        v97 = v101;
      }
      v103 = v179;
      if ((v98 & 1) != 0)
      {
        v104 = *((_QWORD *)v179 + 7) + v97 * *(_QWORD *)&v176;
        v18 = *(_QWORD *)&v175;
        (*(void (**)(unint64_t, uint64_t, double))(v178 + 40))(v104, v153, COERCE_DOUBLE(*(_QWORD *)&v175));
      }
      else
      {
        *(_QWORD *)&v179[8 * (v97 >> 6) + 64] |= 1 << v97;
        v105 = (uint64_t *)(v103[6] + 16 * v97);
        v106 = v155;
        *v105 = v100;
        v105[1] = v106;
        v107 = v103[7] + v97 * *(_QWORD *)&v176;
        v18 = *(_QWORD *)&v175;
        OUTLINED_FUNCTION_82_10(v107, v153);
        v108 = v103[2];
        v109 = __OFADD__(v108, 1);
        v110 = v108 + 1;
        if (v109)
          goto LABEL_111;
        v103[2] = v110;
        sub_1B16B9740();
      }
      v15 = v179;

      OUTLINED_FUNCTION_17();
      swift_bridgeObjectRelease();
      v43 = v169;
    }
LABEL_58:
    ++v45;
  }
  while (v48 != v172);
  OUTLINED_FUNCTION_17();
  if (*(_QWORD *)(v174 + 16))
  {
    v120 = (void *)OUTLINED_FUNCTION_78_10();
    swift_bridgeObjectRelease();
    objc_msgSend(v163, sel_invalidateItemsAtIndexPaths_, v120);

  }
  else
  {
    OUTLINED_FUNCTION_7_0();
  }
  v43 = v165;
  v167 = v59;
  if (*(_QWORD *)(v177 + 16))
  {
    v121 = (void *)OUTLINED_FUNCTION_52_18();
    v122 = (void *)OUTLINED_FUNCTION_78_10();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_37_20();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v43 + 16))
  {
    v123 = (void *)OUTLINED_FUNCTION_52_18();
    v124 = (void *)OUTLINED_FUNCTION_78_10();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_37_20();

  }
  else
  {
    OUTLINED_FUNCTION_17();
  }
  if (!*((_QWORD *)v15 + 2))
    goto LABEL_109;
  v125 = *((_QWORD *)v15 + 8);
  v177 = (uint64_t)(v15 + 64);
  v126 = 1 << v15[32];
  v127 = -1;
  if (v126 < 64)
    v127 = ~(-1 << v126);
  v128 = v127 & v125;
  v129 = (unint64_t)(v126 + 63) >> 6;
  v171 = (char *)(((v6 + 32) & ~(unint64_t)v6) + *(_QWORD *)&v176);
  v172 = (v6 + 32) & ~(unint64_t)v6;
  v170 = v6 | 7;
  sub_1B16B9740();
  v18 = 0;
  v6 = &qword_1ED17E140;
  v169 = xmmword_1B16C51D0;
  v130 = v161;
  v164 = (uint64_t)v15;
  v174 = v129;
  while (2)
  {
    if (v128)
    {
      v131 = __clz(__rbit64(v128));
      v128 &= v128 - 1;
      v132 = v131 | (v18 << 6);
      goto LABEL_96;
    }
    v133 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_107;
    if (v133 >= v129)
    {
LABEL_104:
      swift_release();
      goto LABEL_109;
    }
    v134 = *(_QWORD *)(v177 + 8 * v133);
    ++v18;
    if (v134)
      goto LABEL_95;
    v18 = v133 + 1;
    if (v133 + 1 >= v129)
      goto LABEL_104;
    OUTLINED_FUNCTION_70_13();
    if (v134)
      goto LABEL_95;
    v18 = v135 + 2;
    if (v135 + 2 >= v129)
      goto LABEL_104;
    OUTLINED_FUNCTION_70_13();
    if (v134)
      goto LABEL_95;
    v18 = v136 + 3;
    if (v136 + 3 >= v129)
      goto LABEL_104;
    OUTLINED_FUNCTION_70_13();
    if (v134)
      goto LABEL_95;
    v18 = v137 + 4;
    if (v137 + 4 >= v129)
      goto LABEL_104;
    OUTLINED_FUNCTION_70_13();
    if (v134)
    {
LABEL_95:
      v128 = (v134 - 1) & v134;
      v132 = __clz(__rbit64(v134)) + (v18 << 6);
LABEL_96:
      if (*((_QWORD *)v15 + 2))
      {
        v43 = *(_QWORD *)(*((_QWORD *)v15 + 6) + 16 * v132);
        sub_1B16B9740();
        v141 = sub_1B14477CC();
        if ((v142 & 1) != 0)
        {
          v143 = *(_QWORD *)&v175;
          v144 = *((_QWORD *)v15 + 7) + *(_QWORD *)&v176 * v141;
          v145 = v178;
          v146 = *(void (**)(uint64_t, unint64_t, uint64_t))(v178 + 16);
          v146(v130, v144, *(_QWORD *)&v175);
          __swift_storeEnumTagSinglePayload(v130, 0, 1, v143);
          if (__swift_getEnumTagSinglePayload(v130, 1, v143) != 1)
          {
            v147 = v160;
            v167(v160, v130, v143);
            v173 = sub_1B16B983C();
            OUTLINED_FUNCTION_61();
            sub_1B13DE5B0(0, (unint64_t *)&qword_1ED183950, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v148 = swift_allocObject();
            *(_OWORD *)(v148 + 16) = v169;
            v146(v148 + v172, v147, v143);
            v43 = sub_1B16B9B48();
            v130 = v161;
            swift_bridgeObjectRelease();
            v149 = (void *)v173;
            objc_msgSend(v163, sel_invalidateDecorationElementsOfKind_atIndexPaths_, v173, v43);

            (*(void (**)(unint64_t, uint64_t))(v145 + 8))(v147, v143);
            v15 = (char *)v164;
            v129 = v174;
            v6 = &qword_1ED17E140;
            continue;
          }
          OUTLINED_FUNCTION_61();
          v15 = (char *)v164;
          v129 = v174;
          v6 = &qword_1ED17E140;
        }
        else
        {
          OUTLINED_FUNCTION_40_21();
          OUTLINED_FUNCTION_61();
        }
      }
      else
      {
        OUTLINED_FUNCTION_40_21();
      }
      sub_1B141076C(v130, (unint64_t *)&qword_1ED17E140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
      continue;
    }
    break;
  }
  v139 = v138 + 5;
  if (v139 >= v129)
    goto LABEL_104;
  v134 = *(_QWORD *)(v177 + 8 * v139);
  if (v134)
  {
    v18 = v139;
    goto LABEL_95;
  }
  while (1)
  {
    v18 = v139 + 1;
    if (__OFADD__(v139, 1))
      break;
    if (v18 >= v129)
      goto LABEL_104;
    OUTLINED_FUNCTION_70_13();
    v139 = v140 + 1;
    if (v134)
      goto LABEL_95;
  }
LABEL_112:
  __break(1u);
LABEL_113:
  result = (id)sub_1B16BA9B8();
  __break(1u);
  return result;
}

uint64_t (*sub_1B15A0814(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = a1;
  return sub_1B15A32D4;
}

id sub_1B15A0868(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  id v10;

  v9 = a1;
  v10 = sub_1B159FA40((uint64_t)v9, a2, a3, a4, a5);

  return v10;
}

BOOL sub_1B15A08C8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[71];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[720];
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_23_32();
  v11 = v1;
  v12 = v2;
  sub_1B141E150(v2, (uint64_t)&v8);
  sub_1B141FAD8();
  sub_1B15A09F0(v0);
  memcpy(v7, v10, sizeof(v7));
  sub_1B14F80B0((uint64_t)v10);
  OUTLINED_FUNCTION_50_15();
  BlueprintLayoutCollectionPinAdjuster.shouldInvalidateLayoutAttributes(for:offset:insets:contentSize:hasViewOnScreen:)();
  v4 = v3;
  sub_1B14F81A0((uint64_t)v10);
  if (v4 >> 62)
  {
    sub_1B16B9740();
    v5 = sub_1B16BA76C();
    OUTLINED_FUNCTION_7_0();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_7_0();
  sub_1B1448694((uint64_t)&v9);
  swift_release();
  return v5 != 0;
}

uint64_t (*sub_1B15A09F0(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = a1;
  return sub_1B15A2D4C;
}

BOOL sub_1B15A0A44(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = sub_1B15A08C8();

  return v2;
}

id sub_1B15A0AA4()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  char *v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  objc_super v19;
  _BYTE v20[1136];
  char *v21;
  objc_super v22;

  v1 = v0;
  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v3 = (char *)v0 + v2[16];
  if (((*(uint64_t (**)(_QWORD, _QWORD))(v2[11] + 8))(v2[10], v2[11]) & 1) == 0)
  {
    v8 = OUTLINED_FUNCTION_57_16();
    v22.receiver = v1;
    v22.super_class = (Class)OUTLINED_FUNCTION_48_15(v8, v9, v10, v11);
    v12 = objc_msgSendSuper2(&v22, sel_initialLayoutAttributesForAppearingItemAtIndexPath_, v3);
LABEL_11:
    v7 = v12;
    goto LABEL_12;
  }
  sub_1B141FAD8();
  v3 = v21;
  if (!*((_QWORD *)v21 + 2) || (v4 = sub_1B1426900(), (v5 & 1) == 0))
  {
    sub_1B1448694((uint64_t)v20);
LABEL_10:
    v13 = OUTLINED_FUNCTION_57_16();
    v19.receiver = v1;
    v19.super_class = (Class)OUTLINED_FUNCTION_48_15(v13, v14, v15, v16);
    v12 = objc_msgSendSuper2(&v19, sel_initialLayoutAttributesForAppearingItemAtIndexPath_, v3);
    goto LABEL_11;
  }
  v3 = (char *)*(id *)(*((_QWORD *)v21 + 7) + 8 * v4);
  v6 = sub_1B1448694((uint64_t)v20);
  if ((v3[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_previousFrame + 32] & 1) != 0
    || (OUTLINED_FUNCTION_2_0(v6, sel_copy),
        sub_1B16BA3AC(),
        swift_unknownObjectRelease(),
        type metadata accessor for BlueprintLayoutCollectionLayoutAttributes(),
        (OUTLINED_FUNCTION_3_0() & 1) == 0))
  {

    goto LABEL_10;
  }
  v7 = v18;
  OUTLINED_FUNCTION_42_4(v7, sel_setFrame_);

LABEL_12:
  return v7;
}

void (*sub_1B15A0C5C(void *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  return sub_1B141F9E8(a1, a2, a3, (void (*)(uint64_t))sub_1B15A0AA4);
}

void sub_1B15A0C68()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  objc_super v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;

  OUTLINED_FUNCTION_6();
  v2 = v0;
  v4 = v3;
  v5 = *MEMORY[0x1E0DEEDD8] & *v0;
  v6 = OUTLINED_FUNCTION_3_12();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_0_1();
  if (((*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 + 88) + 8))(*(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88)) & 1) != 0)
  {
    sub_1B141FAD8();
    if (*(_QWORD *)(v25 + 16) && (v9 = sub_1B1426900(), (v10 & 1) != 0))
    {
      v11 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v9);
      v12 = v11;
    }
    else
    {
      v11 = 0;
    }
    sub_1B1448694((uint64_t)&v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v4, v6);
    if (!v11)
    {
      v18 = (void *)OUTLINED_FUNCTION_57_16();
      v22 = (objc_class *)OUTLINED_FUNCTION_65_9((uint64_t)v18, v19, v20, v21);
      v23.receiver = v2;
      v23.super_class = v22;
      objc_msgSendSuper2(&v23, sel_finalLayoutAttributesForDisappearingItemAtIndexPath_, v18);

    }
    OUTLINED_FUNCTION_36_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  else
  {
    v13 = (void *)sub_1B16B7CDC();
    v17 = (objc_class *)OUTLINED_FUNCTION_65_9((uint64_t)v13, v14, v15, v16);
    v26.receiver = v0;
    v26.super_class = v17;
    objc_msgSendSuper2(&v26, sel_finalLayoutAttributesForDisappearingItemAtIndexPath_, v13);

  }
  OUTLINED_FUNCTION_47();
}

void (*sub_1B15A0DC8(void *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  return sub_1B141F9E8(a1, a2, a3, (void (*)(uint64_t))sub_1B15A0C68);
}

void (*sub_1B15A0DD4())(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  return sub_1B15A0DF0();
}

void (*sub_1B15A0DF0())(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_3_12();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  v14 = sub_1B16B9860();
  v16 = v15;
  OUTLINED_FUNCTION_101_9();
  v17 = v7;
  v1(v14, v16, v13, v5, v3);
  OUTLINED_FUNCTION_60_1();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
  return v1;
}

void (*sub_1B15A0EC0())(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  return sub_1B15A0DF0();
}

id sub_1B15A0EDC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  _QWORD *v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v22;
  objc_super v23;
  objc_super v24;

  v6 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0x58) + 8))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0x58));
  v7 = (id)OUTLINED_FUNCTION_108_8();
  v8 = sub_1B16B7CDC();
  v12 = (void *)v8;
  if ((v6 & 1) != 0)
  {
    v13 = objc_msgSend(v5, *a4, v7, v8);

    if (v13)
    {
      type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
      v14 = (void *)swift_dynamicCastClass();
      if (v14)
      {
        if ((*((_BYTE *)v14 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_previousFrame + 32) & 1) == 0)
        {
          objc_msgSend(v14, sel_copy);
          sub_1B16BA3AC();
          swift_unknownObjectRelease();
          if ((OUTLINED_FUNCTION_3_0() & 1) != 0)
          {
            v7 = v22;
            OUTLINED_FUNCTION_42_4(v7, sel_setFrame_);
            v18 = v7;
            goto LABEL_8;
          }
        }
      }

    }
    v7 = (id)OUTLINED_FUNCTION_108_8();
    v13 = (id)sub_1B16B7CDC();
    v23.receiver = v5;
    v23.super_class = (Class)OUTLINED_FUNCTION_64_5((uint64_t)v13, v15, v16, v17);
    v18 = objc_msgSendSuper2(&v23, *a5, v7, v13);
  }
  else
  {
    v24.receiver = v5;
    v24.super_class = (Class)OUTLINED_FUNCTION_64_5(v8, v9, v10, v11);
    v18 = objc_msgSendSuper2(&v24, *a5, v7, v12);
    v13 = v12;
  }
LABEL_8:

  return v18;
}

void (*sub_1B15A10F0())(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  return sub_1B15A0DF0();
}

void sub_1B15A110C()
{
  _QWORD *v0;
  SEL *v1;
  SEL *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  SEL *v26;
  uint64_t v27;
  SEL *v28;
  void *v29;
  objc_super v30;
  objc_super v31;

  OUTLINED_FUNCTION_6();
  v28 = v1;
  v26 = v2;
  v4 = v3;
  v5 = *MEMORY[0x1E0DEEDD8] & *v0;
  v6 = OUTLINED_FUNCTION_3_12();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_77();
  v27 = v10 - v9;
  v29 = v0;
  v11 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 + 88) + 8))(*(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88));
  v12 = sub_1B16B983C();
  v13 = sub_1B16B7CDC();
  v17 = (void *)v13;
  if ((v11 & 1) != 0)
  {
    v18 = objc_msgSend(v0, *v26, v12, v13);
    OUTLINED_FUNCTION_83_10();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v27, v4, v6);
    if (!v11)
    {
      v19 = sub_1B16B983C();
      v20 = (void *)sub_1B16B7CDC();
      v30.receiver = v29;
      v30.super_class = (Class)OUTLINED_FUNCTION_63_9((uint64_t)v20, v21, v22, v23);
      v24 = objc_msgSendSuper2(&v30, *v28, v19, v20);
      OUTLINED_FUNCTION_83_10();

    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v27, v6);
  }
  else
  {
    v31.receiver = v0;
    v31.super_class = (Class)OUTLINED_FUNCTION_63_9(v13, v14, v15, v16);
    v25 = objc_msgSendSuper2(&v31, *v28, v12, v17);
    OUTLINED_FUNCTION_83_10();

  }
  OUTLINED_FUNCTION_47();
}

void (*sub_1B15A12AC())(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  return sub_1B15A0DF0();
}

void sub_1B15A12C8(void *a1, void *a2, uint64_t a3)
{
  void *v3;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  id v14;
  id v15;

  if (a3 != 1)
    goto LABEL_18;
  v3 = a1;
  if (!a1)
  {
    __break(1u);
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_31_3();
  if (v6 <= 0.0 || v5 <= 0.0)
  {
    if (a2)
    {
      OUTLINED_FUNCTION_76_10();
      if (v12 > 0.0 && v11 > 0.0)
      {
        v13 = OUTLINED_FUNCTION_25();
        *(_QWORD *)(v13 + 16) = v3;
        *(_QWORD *)(v13 + 24) = a2;
        v14 = v3;
        v3 = a2;
        goto LABEL_17;
      }
      goto LABEL_5;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_5:
  OUTLINED_FUNCTION_31_3();
  if (v8 <= 0.0 || v7 <= 0.0)
    goto LABEL_18;
  if (a2)
  {
    OUTLINED_FUNCTION_76_10();
    if (v10 > 0.0 && v9 > 0.0)
      goto LABEL_18;
    *(_QWORD *)(OUTLINED_FUNCTION_25() + 16) = v3;
LABEL_17:
    v15 = v3;
LABEL_18:
    OUTLINED_FUNCTION_67();
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_1B15A13D4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v8 = (void *)objc_opt_self();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1B15A2C98;
  *(_QWORD *)(v10 + 24) = v9;
  v25 = sub_1B140AA30;
  v26 = v10;
  v11 = MEMORY[0x1E0C809B0];
  v21 = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1B140AA14;
  v24 = &block_descriptor_29;
  v12 = _Block_copy(&v21);
  v13 = a4;
  swift_retain();
  v14 = a3;
  swift_release();
  objc_msgSend(v8, sel_performWithoutAnimation_, v12);
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a3;
    v25 = sub_1B15A2CBC;
    v26 = v16;
    v21 = v11;
    v22 = 1107296256;
    v23 = sub_1B13F00E4;
    v24 = &block_descriptor_35_0;
    v17 = _Block_copy(&v21);
    v18 = v14;
    swift_release();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a1;
    *(_QWORD *)(v19 + 24) = a2;
    v25 = sub_1B15A2CEC;
    v26 = v19;
    v21 = v11;
    v22 = 1107296256;
    v23 = sub_1B13F8544;
    v24 = &block_descriptor_41_1;
    v20 = _Block_copy(&v21);
    sub_1B13C4AEC(a1);
    swift_release();
    objc_msgSend(v8, sel_animateWithDuration_animations_completion_, v17, v20, 1.0);
    _Block_release(v20);
    _Block_release(v17);
    return swift_release();
  }
  return result;
}

id sub_1B15A1624(id result, id a2)
{
  void *v3;
  CGAffineTransform v4;

  if (result)
  {
    if (a2)
    {
      v3 = result;
      objc_msgSend(a2, sel_frame);
      objc_msgSend(v3, sel_setFrame_);
      objc_msgSend(a2, sel_center);
      objc_msgSend(v3, sel_setCenter_);
      objc_msgSend(v3, sel_setAlpha_, 0.0);
      CGAffineTransformMakeScale(&v4, 0.1, 0.1);
      return objc_msgSend(v3, sel_setTransform_, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1B15A16E8(id result)
{
  void *v1;
  _QWORD v2[6];

  if (result)
  {
    v1 = result;
    objc_msgSend(result, sel_setAlpha_, 1.0);
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(v1, sel_setTransform_, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B15A1748(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  _QWORD v12[6];

  v6 = objc_opt_self();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a1;
  v7[4] = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1B15A2D3C;
  *(_QWORD *)(v8 + 24) = v7;
  v12[4] = sub_1B149DB30;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1B140AA14;
  v12[3] = &block_descriptor_51_0;
  v9 = _Block_copy(v12);
  v10 = a3;
  sub_1B13C4AEC(a1);
  swift_retain();
  swift_release();
  objc_msgSend((id)v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

id sub_1B15A18A0(id result, uint64_t (*a2)(uint64_t))
{
  void *v3;

  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_frame);
    objc_msgSend(v3, sel_setFrame_);
    result = objc_msgSend(v3, sel_setAlpha_, 0.0);
    if (a2)
      return (id)a2(1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B15A1918(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[6];

  v8 = a1;
  v9 = a3;
  v10 = a4;
  sub_1B15A12C8(a3, a4, a5);
  v12 = v11;
  v14 = v13;

  if (v12)
  {
    v16[4] = v12;
    v16[5] = v14;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1B15A19DC;
    v16[3] = &block_descriptor_48;
    v12 = _Block_copy(v16);
    swift_release();
  }
  return v12;
}

uint64_t sub_1B15A19DC(uint64_t a1, void *aBlock)
{
  void (*v2)(void *, uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(void *, uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  if (v3)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
    v3 = sub_1B145E320;
  }
  else
  {
    v4 = 0;
  }
  swift_retain();
  v2(v3, v4);
  sub_1B13B9100((uint64_t)v3);
  return swift_release();
}

uint64_t sub_1B15A1A60()
{
  uint64_t v0;

  v0 = sub_1B159EBA4();
  BlueprintCollectionViewLayoutTransition.targetContentOffset.getter(v0);
  return OUTLINED_FUNCTION_45();
}

double sub_1B15A1AC0(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  sub_1B15A1A60();
  v3 = v2;

  return v3;
}

uint64_t sub_1B15A1B10()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v2 = v0;
  OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_58_12();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  result = (uint64_t)objc_msgSend(v2, sel_collectionView);
  if (result)
  {
    v9 = (void *)result;
    v10 = OUTLINED_FUNCTION_11_2(result, sel_representedElementKind);
    v11 = OUTLINED_FUNCTION_11_2((uint64_t)v10, sel_indexPath);
    sub_1B16B7D0C();

    v12 = (void *)sub_1B16B7CDC();
    OUTLINED_FUNCTION_36_1(v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    if (v10)
    {
      v13 = objc_msgSend(v9, sel_supplementaryViewForElementKind_atIndexPath_, v10, v12);

    }
    else
    {
      v13 = objc_msgSend(v9, sel_cellForItemAtIndexPath_, v12);
    }

    if (v13)
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

id BlueprintCollectionViewLayout.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

void BlueprintCollectionViewLayout.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B15A1C8C()
{
  BlueprintCollectionViewLayout.init()();
}

id BlueprintCollectionViewLayout.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for BlueprintCollectionViewLayout(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_1B15A1CE4(char *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[1176];
  _BYTE v8[1176];

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1;
  swift_release();
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_93_6((uint64_t)&a1[*(_QWORD *)(v4 + 104)]);
  OUTLINED_FUNCTION_20_38();
  swift_release();
  OUTLINED_FUNCTION_20_38();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(&a1[*(_QWORD *)(v5 + 128)]);
  OUTLINED_FUNCTION_93_6((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x88)]);
  sub_1B15A209C((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x90)], (uint64_t)v7);
  sub_1B15A2DC4(v7, sub_1B140FEB8);
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_4_8(v8, &a1[*(_QWORD *)(v6 + 152)]);
  sub_1B1448694((uint64_t)v8);

  OUTLINED_FUNCTION_67();
}

void (*sub_1B15A1DF8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B159ED10();
  return sub_1B13C6AF0;
}

uint64_t sub_1B15A1E3C()
{
  return sub_1B141E46C();
}

uint64_t sub_1B15A1E60()
{
  return sub_1B159EBA4();
}

uint64_t sub_1B15A1E80()
{
  return sub_1B159F7F8();
}

void sub_1B15A1EA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t (*v16)(uint64_t, uint64_t);
  unint64_t *v17;
  unint64_t *v18;
  uint64_t (*v19)(uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v2 = sub_1B16BA0D0();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  sub_1B16BA0B8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_0_1();
  sub_1B16B9620();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_23_3();
  v0[2] = MEMORY[0x1E0DEE9E0];
  type metadata accessor for BlueprintCollectionViewLayoutCache.Token();
  v12 = OUTLINED_FUNCTION_25();
  v0[3] = v12;
  OUTLINED_FUNCTION_5(v12, (unint64_t *)&qword_1ED188560);
  sub_1B16B95F0();
  sub_1B13B13B4(&qword_1ED183808, v7, MEMORY[0x1E0DEF828]);
  OUTLINED_FUNCTION_88_9();
  sub_1B13DE5B0(v13, v14, v15, v16);
  OUTLINED_FUNCTION_88_9();
  sub_1B13FF59C(v17, v18, v19);
  sub_1B16BA448();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v6, *MEMORY[0x1E0DEF8D0], v22);
  v0[4] = sub_1B16BA100();
  v20 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v20, sel_addObserver_selector_name_object_, v1, sel_didReceiveMemoryWarning, *MEMORY[0x1E0DC4778], 0);

  OUTLINED_FUNCTION_47();
}

void sub_1B15A2094(void *a1)
{
  bzero(a1, 0x498uLL);
}

uint64_t sub_1B15A209C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B154F800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B15A20E0()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B15A20FC()
{
  swift_release();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocObject();
}

uint64_t sub_1B15A2118(uint64_t a1, const void *a2)
{
  uint64_t v2;

  return sub_1B159F088(a1, a2, *(_QWORD *)(v2 + 32));
}

unint64_t sub_1B15A2124()
{
  unint64_t result;

  result = qword_1EEF342E0;
  if (!qword_1EEF342E0)
  {
    sub_1B13A1BE4(255, (unint64_t *)&qword_1ED1855C0);
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF342E0);
  }
  return result;
}

uint64_t sub_1B15A2190(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  unint64_t v28;
  int64_t v29;
  double *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double *v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  double v51;
  unint64_t v52;
  char v53;
  _QWORD *v54;
  uint64_t v55;
  double *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t (*v65)(uint64_t);
  char *v66;
  uint64_t v67;
  _DWORD v68[4];
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  int64_t v80;
  double v81;
  double v82;
  _QWORD v83[148];

  v78 = a3;
  v7 = sub_1B16B95D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B16B9620();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  result = swift_release();
  if (!Strong)
    return result;
  v69 = a4;
  v70 = v16;
  v71 = v13;
  v72 = v12;
  v73 = v11;
  v74 = v8;
  v75 = v7;
  v19 = *(_QWORD *)(a2 + 64);
  v79 = a2 + 64;
  v20 = 1 << *(_BYTE *)(a2 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v80 = (unint64_t)(v20 + 63) >> 6;
  v23 = v78 + 40;
  sub_1B16B9740();
  v24 = 0;
  v77 = MEMORY[0x1E0DEE9E0];
  while (v22)
  {
    v25 = __clz(__rbit64(v22));
    v22 &= v22 - 1;
    v26 = v25 | (v24 << 6);
LABEL_18:
    v30 = (double *)(*(_QWORD *)(a2 + 48) + 32 * v26);
    v32 = *v30;
    v31 = v30[1];
    v34 = v30[2];
    v33 = v30[3];
    v35 = *(double **)(*(_QWORD *)(a2 + 56) + 8 * v26);
    v36 = v35[3];
    v37 = v35[5];
    v81 = v35[4];
    v82 = v36;
    v39 = v35[6];
    v38 = v35[7];
    v40 = v35[8];
    memcpy(v83, v23, 0x20EuLL);
    swift_retain();
    sub_1B1425EB8();
    v42 = v41;
    v44 = v43;
    memcpy(v83, v78, 0x498uLL);
    v45 = sub_1B1426D18(v42, v44, v32, v31, v34, v33, v82, v81, v37, v39, v38, v40);
    if (v45)
    {
      v46 = v45;
      v47 = v77;
      v68[3] = swift_isUniquelyReferenced_nonNull_native();
      v83[0] = v47;
      *(_QWORD *)&v81 = sub_1B142037C();
      v48 = *(_QWORD *)(v47 + 16);
      LODWORD(v82) = v49;
      if (__OFADD__(v48, (v49 & 1) == 0))
        goto LABEL_37;
      sub_1B15A3214(0, (unint64_t *)&qword_1ED187660, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECB20]);
      v50 = sub_1B16BA6E8();
      v51 = v81;
      if ((v50 & 1) != 0)
      {
        v52 = sub_1B142037C();
        if ((LOBYTE(v82) & 1) != (v53 & 1))
          goto LABEL_39;
        v51 = *(double *)&v52;
      }
      v54 = (_QWORD *)v83[0];
      v77 = v83[0];
      if ((LOBYTE(v82) & 1) != 0)
      {
        v55 = *(_QWORD *)(v83[0] + 56);
        swift_release();
        *(_QWORD *)(v55 + 8 * *(_QWORD *)&v51) = v46;
      }
      else
      {
        *(_QWORD *)(v83[0] + 8 * (*(_QWORD *)&v51 >> 6) + 64) |= 1 << SLOBYTE(v51);
        v56 = (double *)(v54[6] + 32 * *(_QWORD *)&v51);
        *v56 = v32;
        v56[1] = v31;
        v56[2] = v34;
        v56[3] = v33;
        *(_QWORD *)(v54[7] + 8 * *(_QWORD *)&v51) = v46;
        v57 = v54[2];
        v27 = __OFADD__(v57, 1);
        v58 = v57 + 1;
        if (v27)
          goto LABEL_38;
        v54[2] = v58;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  v27 = __OFADD__(v24++, 1);
  if (v27)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v24 >= v80)
    goto LABEL_33;
  v28 = *(_QWORD *)(v79 + 8 * v24);
  if (v28)
  {
LABEL_17:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v24 << 6);
    goto LABEL_18;
  }
  v29 = v24 + 1;
  if (v24 + 1 >= v80)
    goto LABEL_33;
  v28 = *(_QWORD *)(v79 + 8 * v29);
  if (v28)
    goto LABEL_16;
  v29 = v24 + 2;
  if (v24 + 2 >= v80)
    goto LABEL_33;
  v28 = *(_QWORD *)(v79 + 8 * v29);
  if (v28)
    goto LABEL_16;
  v29 = v24 + 3;
  if (v24 + 3 >= v80)
  {
LABEL_33:
    swift_release();
    sub_1B13A1BE4(0, (unint64_t *)&qword_1ED188560);
    v59 = (void *)sub_1B16BA0DC();
    v60 = (_QWORD *)swift_allocObject();
    v61 = v77;
    v62 = v69;
    v60[2] = v76;
    v60[3] = v62;
    v60[4] = v61;
    v83[4] = sub_1B15A32C8;
    v83[5] = v60;
    v83[0] = MEMORY[0x1E0C809B0];
    v83[1] = 1107296256;
    v83[2] = sub_1B13F00E4;
    v83[3] = &block_descriptor_72_0;
    v63 = _Block_copy(v83);
    swift_retain();
    swift_retain();
    swift_release();
    v64 = v70;
    sub_1B16B95F0();
    v83[0] = MEMORY[0x1E0DEE9D8];
    v65 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1B13B13B4((unint64_t *)&qword_1ED183670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1B13DE5B0(0, (unint64_t *)&qword_1ED183708, v65, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B13FF59C((unint64_t *)&qword_1ED183710, (unint64_t *)&qword_1ED183708, v65);
    v66 = v73;
    v67 = v75;
    sub_1B16BA448();
    MEMORY[0x1B5E1DA80](0, v64, v66, v63);
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v66, v67);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v64, v72);
  }
  v28 = *(_QWORD *)(v79 + 8 * v29);
  if (v28)
  {
LABEL_16:
    v24 = v29;
    goto LABEL_17;
  }
  while (1)
  {
    v24 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v24 >= v80)
      goto LABEL_33;
    v28 = *(_QWORD *)(v79 + 8 * v24);
    ++v29;
    if (v28)
      goto LABEL_17;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  type metadata accessor for CGRect(0);
  result = sub_1B16BA9B8();
  __break(1u);
  return result;
}

uint64_t sub_1B15A278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v6 = *(_QWORD *)(result + 24);
  if (v6)
    v7 = v6 == a2;
  else
    v7 = 0;
  if (!v7)
    return swift_release();
  v8 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  result = sub_1B16B9740();
  v13 = 0;
  if (!v11)
    goto LABEL_11;
LABEL_10:
  for (v11 &= v11 - 1; ; v11 = (v15 - 1) & v15)
  {
    v17 = swift_retain_n();
    sub_1B159F8E8(v17);
    result = swift_release();
    if (v11)
      goto LABEL_10;
LABEL_11:
    v14 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v14 >= v12)
      goto LABEL_27;
    v15 = *(_QWORD *)(v8 + 8 * v14);
    ++v13;
    if (!v15)
    {
      v13 = v14 + 1;
      if (v14 + 1 >= v12)
        goto LABEL_27;
      v15 = *(_QWORD *)(v8 + 8 * v13);
      if (!v15)
      {
        v13 = v14 + 2;
        if (v14 + 2 >= v12)
          goto LABEL_27;
        v15 = *(_QWORD *)(v8 + 8 * v13);
        if (!v15)
          break;
      }
    }
LABEL_24:
    ;
  }
  v16 = v14 + 3;
  if (v16 >= v12)
  {
LABEL_27:
    swift_release();
    return swift_release();
  }
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
  {
    v13 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v13 >= v12)
      goto LABEL_27;
    v15 = *(_QWORD *)(v8 + 8 * v13);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B15A2960()
{
  swift_beginAccess();
  sub_1B15A3214(0, &qword_1ED187610, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA000]);
  sub_1B16B9764();
  return swift_endAccess();
}

uint64_t sub_1B15A29EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82();

  return v0;
}

uint64_t sub_1B15A2A14()
{
  sub_1B15A29EC();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocClassInstance();
}

void sub_1B15A2A2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF342E8)
  {
    sub_1B16B7D60();
    v0 = sub_1B16BA70C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF342E8);
  }
}

uint64_t sub_1B15A2A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B15A1748(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1B15A2A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B15A13D4(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1B15A2AA0(uint64_t *a1@<X8>)
{
  *a1 = sub_1B159EBA4();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15A2AD0()
{
  sub_1B140FE80();
  OUTLINED_FUNCTION_0_0();
}

uint64_t method lookup function for BlueprintCollectionViewLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.transition.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.reorderingIndexPath.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.reorderingIndexPath.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.reorderingIndexPath.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.dynamicPinHeight.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.copyProperties(toLayout:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.detachAndCreateTransitionLayout()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.dynamicInsetAdjustments(pinHeight:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.frameForSection(index:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutCache.Token()
{
  return objc_opt_self();
}

uint64_t sub_1B15A2C54()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B15A2C70()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();

  return swift_deallocObject();
}

id sub_1B15A2C98()
{
  uint64_t v0;

  return sub_1B15A1624(*(id *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1B15A2CA4()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

id sub_1B15A2CBC()
{
  uint64_t v0;

  return sub_1B15A16E8(*(id *)(v0 + 16));
}

uint64_t sub_1B15A2CC4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_82();
  return swift_deallocObject();
}

void sub_1B15A2CEC()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  v1 = *(void (**)(uint64_t))(v0 + 16);
  if (v1)
    v1(1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B15A2D14()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_0();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocObject();
}

id sub_1B15A2D3C()
{
  uint64_t v0;

  return sub_1B15A18A0(*(id *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1B15A2D4C()
{
  return sub_1B15A1B10() & 1;
}

unint64_t sub_1B15A2D70()
{
  unint64_t result;

  result = qword_1ED185170;
  if (!qword_1ED185170)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED185170);
  }
  return result;
}

#error "1B15A30A8: call analysis failed (funcsize=195)"

uint64_t sub_1B15A30D0()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_4_1();
  return swift_deallocObject();
}

uint64_t sub_1B15A30EC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B14262CC(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312), *(_BYTE *)(v0 + 320));
  sub_1B14262CC(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336), *(_BYTE *)(v0 + 344));
  sub_1B14262CC(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), *(_BYTE *)(v0 + 368));

  sub_1B14262CC(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 840), *(_BYTE *)(v0 + 848));
  sub_1B14262CC(*(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 864), *(_BYTE *)(v0 + 872));
  sub_1B14262CC(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 888), *(_BYTE *)(v0 + 896));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15A3204()
{
  uint64_t v0;

  return sub_1B15A2190(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (char *)(v0 + 32), *(_QWORD *)(v0 + 1208));
}

void sub_1B15A3214(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    type metadata accessor for CGRect(255);
    v7 = v6;
    v8 = type metadata accessor for BlueprintLayoutCollectionRectResult();
    sub_1B13B13B4(&qword_1ED187398, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C8]);
    v10 = a3(a1, v7, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
  OUTLINED_FUNCTION_67();
}

uint64_t sub_1B15A32A0()
{
  swift_release();
  OUTLINED_FUNCTION_82();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_1();
  return swift_deallocObject();
}

uint64_t sub_1B15A32C8()
{
  uint64_t *v0;

  return sub_1B15A278C(v0[2], v0[3], v0[4]);
}

uint64_t OUTLINED_FUNCTION_104_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B14100A4(v0, v1);
}

unint64_t OUTLINED_FUNCTION_107_5()
{
  return sub_1B14477CC();
}

void *ContextMenuBarButtonItem.__allocating_init(image:menuProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_13_1();
  return ContextMenuBarButtonItem.init(image:menuProvider:)(a1, a2, a3);
}

void *ContextMenuBarButtonItem.init(image:menuProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[6];
  objc_super v19;

  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for ContextMenuBarButtonItem();
  v7 = objc_msgSendSuper2(&v19, sel_init);
  v8 = v7;
  if (a1)
  {
    v9 = v7;
    v10 = a1;
  }
  else
  {
    v11 = qword_1EEF2F900;
    v12 = v7;
    if (v11 != -1)
      swift_once();
    v9 = (id)qword_1EEF522E8;
    v10 = (void *)qword_1EEF522E8;
  }
  v13 = v9;
  v14 = a1;
  objc_msgSend(v8, sel_setImage_, v10);

  objc_msgSend(v8, sel_setStyle_, 0);
  objc_msgSend(v8, sel_setSecondaryActionsArePrimary_, 1);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v18[4] = sub_1B140E614;
  v18[5] = v15;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1B15A3534;
  v18[3] = &block_descriptor_49;
  v16 = _Block_copy(v18);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel__setSecondaryActionsProvider_, v16);

  swift_release();
  _Block_release(v16);
  swift_release();

  return v8;
}

uint64_t type metadata accessor for ContextMenuBarButtonItem()
{
  return objc_opt_self();
}

id sub_1B15A3534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(__int128 *, uint64_t);
  void *v6;
  __int128 v8;
  __int128 v9;

  v3 = a3;
  v5 = *(uint64_t (**)(__int128 *, uint64_t))(a1 + 32);
  if (!a2)
  {
    v8 = 0u;
    v9 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v9 + 1) = swift_getObjectType();
  *(_QWORD *)&v8 = a2;
  if (v3)
  {
LABEL_3:
    sub_1B14BE5DC();
    v3 = sub_1B16B9B54();
  }
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  v6 = (void *)v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B13F77F4((uint64_t)&v8);
  return v6;
}

id ContextMenuBarButtonItem.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);

  return v2;
}

void ContextMenuBarButtonItem.init(coder:)()
{
  sub_1B16BA724();
  __break(1u);
}

id ContextMenuBarButtonItem.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_init);
}

void ContextMenuBarButtonItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ContextMenuBarButtonItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextMenuBarButtonItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B15A3710()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t method lookup function for ContextMenuBarButtonItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContextMenuBarButtonItem.__allocating_init(image:menuProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

id sub_1B15A3748(char a1, SEL *a2, SEL *a3)
{
  void *v3;
  uint64_t v5;
  id result;

  v5 = a1 & 1;
  result = objc_msgSend(v3, *a2);
  if ((_DWORD)result != (_DWORD)v5)
    return objc_msgSend(v3, *a3, v5);
  return result;
}

uint64_t UIView.first<A>(viewOfType:where:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  void *v4;

  return sub_1B15A45EC(a1, v4, a2, a3, a4);
}

uint64_t UIView.firstParent<A>(viewOfType:where:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  id v8;
  uint64_t v9;

  v8 = OUTLINED_FUNCTION_2_0(a1, sel_superview);
  v9 = sub_1B15A481C(a1, v8, a2, a3, a4);

  return v9;
}

Swift::Void __swiftcall UIView.ts_adjustLayoutMargins(to:padding:)(UILayoutGuide to, UIEdgeInsets padding)
{
  void *v2;
  double right;
  double bottom;
  double left;
  double top;
  double MinX;
  uint64_t v8;
  double v9;
  double v10;
  CGRect v11;

  right = padding.right;
  bottom = padding.bottom;
  left = padding.left;
  top = padding.top;
  -[objc_class layoutFrame](to.super.isa, sel_layoutFrame);
  MinX = CGRectGetMinX(v11);
  OUTLINED_FUNCTION_2_0(v8, sel_layoutMargins);
  v9 = MinX + left;
  if (v10 != v9)
  {
    objc_msgSend(v2, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
    objc_msgSend(v2, sel_setLayoutMargins_, top + 0.0, v9, bottom + 0.0, MinX + right);
    objc_msgSend(v2, sel_setNeedsLayout);
  }
}

void sub_1B15A38E4(char a1, void (*a2)(uint64_t), double a3, uint64_t a4, uint64_t (*a5)(), uint64_t a6, uint64_t a7, void (**a8)(_QWORD))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t (*v23)();
  uint64_t v24;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a8;
  if ((a1 & 1) != 0)
  {
    _Block_copy(a8);
    if (a2)
    {
      v15 = sub_1B13C4AEC((uint64_t)a2);
      a2(v15);
      sub_1B13B9100((uint64_t)a2);
    }
    v23 = sub_1B14CA87C;
    v24 = v14;
    v17 = MEMORY[0x1E0C809B0];
    v19 = MEMORY[0x1E0C809B0];
    v20 = 1107296256;
    v21 = sub_1B13F00E4;
    v22 = &block_descriptor_13_3;
    v18 = _Block_copy(&v19);
    swift_retain();
    swift_release();
    if (a5)
    {
      v23 = a5;
      v24 = a6;
      v19 = v17;
      v20 = 1107296256;
      v21 = sub_1B13F8544;
      v22 = &block_descriptor_16_1;
      a5 = (uint64_t (*)())_Block_copy(&v19);
      swift_retain();
      swift_release();
    }
    objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_animateWithDuration_animations_completion_, v18, a5, a3);
    _Block_release(a5);
    _Block_release(v18);
    swift_release();
    _Block_release(a8);
  }
  else
  {
    _Block_copy(a8);
    if (a2)
    {
      v16 = sub_1B13C4AEC((uint64_t)a2);
      a2(v16);
      sub_1B13B9100((uint64_t)a2);
    }
    a8[2](a8);
    if (a5)
    {
      swift_retain();
      ((void (*)(uint64_t))a5)(1);
      sub_1B13B9100((uint64_t)a5);
    }
    swift_release();
    _Block_release(a8);
  }
}

void static UIView.ts_execute(animated:duration:setupBlock:animationBlock:completion:)(uint64_t a1, void (*a2)(uint64_t), double a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void *a7)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((a1 & 1) != 0)
  {
    if (a2)
    {
      v11 = swift_retain();
      a2(v11);
      OUTLINED_FUNCTION_0_42();
    }
    v12 = MEMORY[0x1E0C809B0];
    v13 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F00E4, MEMORY[0x1E0C809B0], 1107296256, v15, v17);
    swift_retain();
    swift_release();
    if (a7)
    {
      a7 = OUTLINED_FUNCTION_9_3((uint64_t)sub_1B13F8544, v12, 1107296256, v16, v18);
      swift_retain();
      swift_release();
    }
    objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_animateWithDuration_animations_completion_, v13, a7, a3);
    _Block_release(a7);
    _Block_release(v13);
  }
  else
  {
    if (a2)
    {
      v14 = swift_retain();
      a2(v14);
      a1 = OUTLINED_FUNCTION_0_42();
    }
    a5(a1);
    if (a7)
    {
      swift_retain();
      ((void (*)(uint64_t))a7)(1);
      sub_1B13B9100((uint64_t)a7);
    }
  }
}

uint64_t sub_1B15A3C84(int a1, int a2, char a3, void *aBlock, double a5, const void *a6, const void *a7)
{
  void (*v11)(uint64_t);
  void *v12;
  uint64_t (*v13)();
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassMetadata;

  v11 = (void (*)(uint64_t))_Block_copy(aBlock);
  v12 = _Block_copy(a6);
  v13 = (uint64_t (*)())_Block_copy(a7);
  v14 = v13;
  if (!v11)
  {
    v15 = 0;
    if (v13)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  v11 = (void (*)(uint64_t))sub_1B1456244;
  if (!v14)
    goto LABEL_5;
LABEL_3:
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  v14 = (uint64_t (*)())sub_1B145E320;
LABEL_6:
  ObjCClassMetadata = swift_getObjCClassMetadata();
  _Block_copy(v12);
  _Block_copy(v12);
  sub_1B15A38E4(a3, v11, a5, v15, v14, v16, ObjCClassMetadata, (void (**)(_QWORD))v12);
  sub_1B13B9100((uint64_t)v14);
  _Block_release(v12);
  _Block_release(v12);
  return sub_1B13B9100((uint64_t)v11);
}

__C::CGRect __swiftcall UIView.adjustedFrameForPopover()()
{
  void *v0;
  double v1;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGRect v13;
  CGRect v14;
  __C::CGRect result;

  objc_msgSend(v0, sel_bounds);
  v13.origin.x = UIEdgeInsetsInsetRect_0(v1);
  x = v13.origin.x;
  y = v13.origin.y;
  width = v13.size.width;
  height = v13.size.height;
  v6 = v13.origin.x + -1.0;
  v7 = v13.origin.y + 2.0;
  v8 = CGRectGetWidth(v13);
  v14.origin.x = x;
  v14.origin.y = y;
  v14.size.width = width;
  v14.size.height = height;
  v9 = CGRectGetHeight(v14);
  v10 = v6;
  v11 = v7;
  v12 = v8;
  result.size.height = v9;
  result.size.width = v12;
  result.origin.y = v11;
  result.origin.x = v10;
  return result;
}

double sub_1B15A3E4C(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  v2 = UIView.frameUsingCenterAndBounds.getter();

  return v2;
}

double UIView.frameUsingCenterAndBounds.getter()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  id v12;

  v0 = OUTLINED_FUNCTION_0_128();
  objc_msgSend(v0, sel_anchorPoint);
  v2 = v1;
  v4 = v3;

  v5 = OUTLINED_FUNCTION_0_128();
  OUTLINED_FUNCTION_14_40(v5, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_);

  v6 = OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_2_0((uint64_t)v6, sel_center);
  v8 = v7;
  v9 = OUTLINED_FUNCTION_1_16();
  v11 = v8 - v10 * 0.5;
  OUTLINED_FUNCTION_2_0((uint64_t)v9, sel_center);
  OUTLINED_FUNCTION_1_16();
  v12 = OUTLINED_FUNCTION_0_128();
  objc_msgSend(v12, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_, v2, v4);

  return v11;
}

Swift::Void __swiftcall UIView.setFrameUsingCenterAndBounds(frame:)(__C::CGRect frame)
{
  void *v1;
  id v2;
  id v3;
  double v4;
  double v5;
  id v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id v11;
  double MinX;
  double MinY;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  OUTLINED_FUNCTION_57();
  v2 = OUTLINED_FUNCTION_0_128();
  objc_msgSend(v2, sel_transform);
  v30 = v33;
  v31 = v32;
  v28 = v35;
  v29 = v34;
  v26 = v37;
  v27 = v36;
  v25 = v38;
  v23 = *((_QWORD *)&v39 + 1);
  v24 = v39;

  v3 = OUTLINED_FUNCTION_0_128();
  objc_msgSend(v3, sel_anchorPoint);
  v21 = v5;
  v22 = v4;

  v6 = OUTLINED_FUNCTION_0_128();
  v7 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
  v32 = *MEMORY[0x1E0CD2610];
  v33 = v7;
  v8 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
  v34 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
  v35 = v8;
  v9 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
  v36 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
  v37 = v9;
  v10 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
  v38 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
  v39 = v10;
  objc_msgSend(v6, sel_setTransform_, &v32);

  v11 = OUTLINED_FUNCTION_0_128();
  OUTLINED_FUNCTION_14_40(v11, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_);

  v40.origin.x = OUTLINED_FUNCTION_54();
  MinX = CGRectGetMinX(v40);
  v20 = MinX + OUTLINED_FUNCTION_0_62() * 0.5;
  v41.origin.x = OUTLINED_FUNCTION_54();
  MinY = CGRectGetMinY(v41);
  v14 = MinY + OUTLINED_FUNCTION_6_2() * 0.5;
  OUTLINED_FUNCTION_1_16();
  v15 = CGRectGetMinX(v42);
  OUTLINED_FUNCTION_1_16();
  v16 = CGRectGetMinY(v43);
  v17 = OUTLINED_FUNCTION_0_62();
  objc_msgSend(v1, sel_setBounds_, v15, v16, v17, OUTLINED_FUNCTION_6_2());
  objc_msgSend(v1, sel_setCenter_, v20, v14);
  v18 = OUTLINED_FUNCTION_0_128();
  objc_msgSend(v18, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_, v22, v21);

  v19 = OUTLINED_FUNCTION_0_128();
  v32 = v31;
  v33 = v30;
  v34 = v29;
  v35 = v28;
  v36 = v27;
  v37 = v26;
  v38 = v25;
  *(_QWORD *)&v39 = v24;
  *((_QWORD *)&v39 + 1) = v23;
  objc_msgSend(v19, sel_setTransform_, &v32);

}

void sub_1B15A4208(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9;
  __C::CGRect v10;

  v9 = a1;
  v10.origin.x = a2;
  v10.origin.y = a3;
  v10.size.width = a4;
  v10.size.height = a5;
  UIView.setFrameUsingCenterAndBounds(frame:)(v10);

}

id UIView.scaleFrameBy(x:y:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGRect v14;
  CGRect v15;

  OUTLINED_FUNCTION_2_0(a1, sel_frame);
  x = v14.origin.x;
  y = v14.origin.y;
  width = v14.size.width;
  height = v14.size.height;
  v10 = v14.origin.x * a2;
  v11 = v14.origin.y * a3;
  v12 = CGRectGetWidth(v14) * a2;
  v15.origin.x = x;
  v15.origin.y = y;
  v15.size.width = width;
  v15.size.height = height;
  return objc_msgSend(v3, sel_setFrame_, v10, v11, v12, CGRectGetHeight(v15) * a3);
}

uint64_t sub_1B15A4300(void *a1)
{
  id v2;
  unint64_t v3;
  unint64_t v4;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;

  v2 = objc_msgSend(a1, sel_subviews);
  OUTLINED_FUNCTION_5((uint64_t)v2, (unint64_t *)&qword_1ED1838A0);
  v3 = sub_1B16B9B54();

  if (v3 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    while (__OFSUB__(v4--, 1))
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      sub_1B16B9740();
      v4 = sub_1B16BA76C();
      OUTLINED_FUNCTION_7_0();
      if (!v4)
        goto LABEL_11;
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = (id)MEMORY[0x1B5E1DF60](v4, v3);
      goto LABEL_9;
    }
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_16;
    if (v4 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_17;
    v6 = *(id *)(v3 + 32 + 8 * v4);
LABEL_9:
    v7 = v6;
    v8 = sub_1B15A4300();

    if (v8)
    {
      OUTLINED_FUNCTION_7_0();
      return v8;
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_7_0();
  objc_opt_self();
  v8 = OUTLINED_FUNCTION_15_3();
  if (v8)
    v9 = a1;
  return v8;
}

void *sub_1B15A4444(void *a1, void *a2)
{
  void *v2;
  id v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  id v9;
  void *v10;
  id v11;
  id v12;
  unsigned __int8 v13;

  v4 = a2;
  v5 = OUTLINED_FUNCTION_2_0((uint64_t)v4, sel_subviews);
  OUTLINED_FUNCTION_5((uint64_t)v5, (unint64_t *)&qword_1ED1838A0);
  v6 = sub_1B16B9B54();

  if (v6 >> 62)
    goto LABEL_20;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v7)
  {
    while (1)
    {
      if (__OFSUB__(v7--, 1))
      {
        __break(1u);
LABEL_17:

        return v2;
      }
      if ((v6 & 0xC000000000000001) != 0)
      {
        v9 = (id)MEMORY[0x1B5E1DF60](v7, v6);
        goto LABEL_9;
      }
      if ((v7 & 0x8000000000000000) == 0)
        break;
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      sub_1B16B9740();
      v7 = sub_1B16BA76C();
      OUTLINED_FUNCTION_20_0();
      if (!v7)
        goto LABEL_11;
    }
    if (v7 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_19;
    v9 = *(id *)(v6 + 32 + 8 * v7);
LABEL_9:
    v10 = v9;
    v11 = v4;
    v2 = (void *)sub_1B15A4444(v10, v11);

    if (v2)
    {

      OUTLINED_FUNCTION_20_0();
      return v2;
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_20_0();
  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
    goto LABEL_17;
  v12 = a1;
  v13 = sub_1B162EB18((uint64_t)v4, v2);

  if ((v13 & 1) == 0)
  {

    return 0;
  }
  return v2;
}

uint64_t sub_1B15A45EC(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;

  v10 = objc_msgSend(a2, sel_subviews);
  sub_1B13A1BE4(0, (unint64_t *)&qword_1ED1838A0);
  v11 = sub_1B16B9B54();

  if (v11 >> 62)
    goto LABEL_19;
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v12)
  {
    while (__OFSUB__(v12--, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B16B9740();
      v12 = sub_1B16BA76C();
      swift_bridgeObjectRelease();
      if (!v12)
        goto LABEL_11;
    }
    if ((v11 & 0xC000000000000001) != 0)
    {
      v14 = (id)MEMORY[0x1B5E1DF60](v12, v11);
      goto LABEL_9;
    }
    if ((v12 & 0x8000000000000000) != 0)
      goto LABEL_17;
    if (v12 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_18;
    v14 = *(id *)(v11 + 32 + 8 * v12);
LABEL_9:
    v15 = v14;
    v16 = sub_1B15A45EC(a1, v14, a3, a4, a5);

    if (v16)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v16 = swift_dynamicCastUnknownClass();
  if (v16)
  {
    v17 = a2;
    if ((a3(v16) & 1) == 0)
    {

      return 0;
    }
  }
  return v16;
}

void sub_1B15A479C(void *a1)
{
  id v2;
  id v3;
  id v4;

  if (a1)
  {
    objc_opt_self();
    if (OUTLINED_FUNCTION_15_3())
    {
      v2 = a1;
    }
    else
    {
      v3 = a1;
      v4 = objc_msgSend(v3, sel_superview);
      sub_1B15A479C();

    }
  }
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1B15A481C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;

  if (!a2)
    return 0;
  v10 = swift_dynamicCastUnknownClass();
  v11 = a2;
  if (!v10 || (a3(v10) & 1) == 0)
  {
    v12 = objc_msgSend(v11, sel_superview);
    v13 = sub_1B15A481C(a1, v12, a3, a4, a5);

    return v13;
  }
  return v10;
}

Swift::Void __swiftcall UIView.setCenterIfNeeded(_:)(CGPoint a1)
{
  uint64_t v1;
  void *v2;
  double y;
  double x;
  double v5;
  double v6;

  y = a1.y;
  x = a1.x;
  OUTLINED_FUNCTION_2_0(v1, sel_center);
  if (v6 != x || v5 != y)
    objc_msgSend(v2, sel_setCenter_, x, y);
}

uint64_t sub_1B15A492C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t ComplexImageProcessor.__allocating_init()()
{
  return swift_allocObject();
}

unint64_t sub_1B15A4978()
{
  unint64_t result;

  result = qword_1ED1867B8[0];
  if (!qword_1ED1867B8[0])
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1ED1867B8);
  }
  return result;
}

void sub_1B15A49CC(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1 + 5;
  v3 = a1[8];
  v4 = a1[9];
  __swift_project_boxed_opaque_existential_1(a1 + 5, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v5)
  {
    sub_1B13C0F64();
    sub_1B13C0FA0();
  }
  else
  {
    v7 = a1[8];
    v6 = a1[9];
    __swift_project_boxed_opaque_existential_1(v2, v7);
    (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v7, v6);
  }
}

void *sub_1B15A4A70(const void *a1, void *a2)
{
  __swift_memcpy148_8(a2, a1);
  return a2;
}

uint64_t sub_1B15A4AAC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_DWORD *)(a1 + 144));
  return a1;
}

id ComplexImageProcessor.process(_:imageFromCache:)(uint64_t a1, void *a2)
{
  id v2;
  id v4;
  uint64_t v6;
  _BYTE v7[40];

  sub_1B13B4DC0(a1, (uint64_t)v7);
  sub_1B15A4978();
  OUTLINED_FUNCTION_5_77();
  if (!OUTLINED_FUNCTION_3_19())
    return a2;
  if (*(_QWORD *)(v6 + 112))
    v2 = objc_msgSend(a2, sel_imageWithRenderingMode_);
  else
    v2 = a2;
  v4 = v2;
  OUTLINED_FUNCTION_0_9();
  return v4;
}

uint64_t ComplexImageProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ComplexImageProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *sub_1B15A4BBC(uint64_t a1)
{
  return ComplexImageProcessor.process(_:)(a1);
}

id sub_1B15A4BD0(uint64_t a1, void *a2)
{
  return ComplexImageProcessor.process(_:imageFromCache:)(a1, a2);
}

uint64_t method lookup function for ComplexImageProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ComplexImageProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

id SceneDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SceneDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SceneDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t BlueprintLayoutCollectionRectResult.layoutAttributes.getter()
{
  return sub_1B16B9740();
}

uint64_t BlueprintLayoutCollectionRectResult.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for BlueprintLayoutCollectionRectResult()
{
  return swift_lookUpClassMethod();
}

double SectionFooterViewLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double SectionFooterViewLayoutAttributes.separatorFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double SectionFooterViewLayoutAttributes.buttonFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t SectionFooterViewLayoutAttributes.layoutDirection.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

void SectionFooterViewLayoutAttributes.kind.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void sub_1B15A4CB0(_BYTE *a1@<X8>)
{
  SectionFooterViewLayoutAttributes.kind.getter(a1);
}

void *__swift_memcpy104_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t getEnumTagSinglePayload for SectionFooterViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 104))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SectionFooterViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 104) = v3;
  return result;
}

void CollapsingButton.isCollapsed.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  OUTLINED_FUNCTION_13();
  v4 = *v3;
  *v3 = a1;
  sub_1B15A50A0(v4);
  OUTLINED_FUNCTION_90();
}

void CollapsingButton.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  OUTLINED_FUNCTION_13();
  sub_1B15A5158(a1, v3);
  swift_endAccess();
  sub_1B15A53BC();
  sub_1B14F93D0(a1);
  OUTLINED_FUNCTION_90();
}

id CollapsingButton.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CollapsingButton.menu.setter(void *a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_setMenu_, a1);
  OUTLINED_FUNCTION_24(a1);
}

id CollapsingButton.onMenuPresentation.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button)
                           + OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation));
}

uint64_t sub_1B15A4E50@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B15A4EA8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CollapsingButton.animationDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  OUTLINED_FUNCTION_13();
  return MEMORY[0x1B5E1F2F8](v1);
}

void CollapsingButton.animationDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  OUTLINED_FUNCTION_13();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_90();
}

void CollapsingButton.animationDelegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_13();
  v6 = MEMORY[0x1B5E1F2F8](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_31();
}

uint64_t CollapsingButton.isCollapsed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  OUTLINED_FUNCTION_13();
  return *v1;
}

uint64_t sub_1B15A5050@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B15A50A0(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  swift_beginAccess();
  if (*v3 == v2)
  {
    v4 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v4))
    {
      v5 = *(_QWORD *)(v4 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(v1, ObjectType, v5);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1B15A51B4();
  }
}

uint64_t sub_1B15A5158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13D6584(0, (unint64_t *)&qword_1ED17CC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1B15A51B4()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  swift_beginAccess();
  if (*v1 == 1)
    sub_1B15A6078();
  else
    sub_1B15A651C();
}

void CollapsingButton.isCollapsed.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  OUTLINED_FUNCTION_13();
  *((_BYTE *)v3 + 32) = *v4;
  OUTLINED_FUNCTION_31();
}

void sub_1B15A526C(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  CollapsingButton.isCollapsed.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void CollapsingButton.configuration.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  OUTLINED_FUNCTION_13();
  sub_1B14F937C(v3, a1);
  OUTLINED_FUNCTION_48();
}

uint64_t sub_1B15A52DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  swift_beginAccess();
  return sub_1B14F937C(v3, a2);
}

void sub_1B15A5330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_1B13D6584(0, (unint64_t *)&qword_1ED17CC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v6 - v4;
  sub_1B14F937C(a1, (uint64_t)&v6 - v4);
  CollapsingButton.configuration.setter((uint64_t)v5);
}

uint64_t sub_1B15A53BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  double v28;
  double v29;
  double *v30;
  _BYTE *v31;
  _BYTE v33[24];

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B13D6584(0, &qword_1ED17C770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = &v33[-v5];
  sub_1B13D6584(0, (unint64_t *)&unk_1ED17C750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2628], v2);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = &v33[-v9];
  sub_1B13D6584(0, (unint64_t *)&qword_1ED17CC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], v2);
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x1E0C80A78](v13, v16);
  v19 = &v33[-v18];
  MEMORY[0x1E0C80A78](v17, v20);
  v22 = &v33[-v21];
  v23 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  swift_beginAccess();
  sub_1B14F937C(v23, (uint64_t)v22);
  v24 = sub_1B16BA2D4();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24))
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1B16B8DB0();
    v25 = sub_1B16B8DA4();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v25);
    sub_1B16BA2A4();
  }
  swift_beginAccess();
  sub_1B15A5158((uint64_t)v22, v23);
  swift_endAccess();
  sub_1B14F937C(v23, (uint64_t)v19);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v24))
  {
    v26 = sub_1B16B79A0();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v26);
    sub_1B16BA280();
  }
  v27 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button);
  sub_1B14F937C((uint64_t)v19, (uint64_t)v15);
  sub_1B16BA2EC();
  objc_msgSend(v27, sel_intrinsicContentSize);
  v30 = (double *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize);
  *v30 = ceil(v28);
  v30[1] = ceil(v29);
  v31 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  swift_beginAccess();
  if ((*v31 & 1) == 0)
  {
    sub_1B14F937C(v23, (uint64_t)v15);
    sub_1B16BA2EC();
  }
  sub_1B14F93D0((uint64_t)v19);
  return sub_1B14F93D0((uint64_t)v22);
}

id sub_1B15A56C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1B5E1F2F8](v2);
  if (v3 && (v4 = v3, v5 = objc_msgSend(v3, sel_tintColor), v4, v5))
    return v5;
  else
    return objc_msgSend((id)objc_opt_self(), sel_labelColor);
}

void CollapsingButton.configuration.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15A5798(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1B15A53BC();
  OUTLINED_FUNCTION_0_0();
}

id CollapsingButton.menu.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_menu);
}

void sub_1B15A57F0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  CollapsingButton.menu.setter(v1);
}

void CollapsingButton.menu.modify(_QWORD *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button);
  a1[1] = v3;
  *a1 = objc_msgSend(v3, sel_menu);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15A5868(void **a1)
{
  void *v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setMenu_);
  OUTLINED_FUNCTION_24(v1);
}

void CollapsingButton.anchor.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor);
  OUTLINED_FUNCTION_13();
  *a1 = *v3;
  OUTLINED_FUNCTION_48();
}

void CollapsingButton.anchor.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor);
  OUTLINED_FUNCTION_13();
  *v3 = v2;
  OUTLINED_FUNCTION_90();
}

void CollapsingButton.anchor.modify()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_0_0();
}

id sub_1B15A5954()
{
  id v0;
  double v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA0]), sel_initWithMass_stiffness_damping_initialVelocity_, 1.0, 250.0, 28.0, 0.0, 0.0);
  objc_msgSend(v0, sel_settlingDuration);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F38]), sel_initWithDuration_timingParameters_, v0, v1);

  return v2;
}

char *CollapsingButton.init()()
{
  _BYTE *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  objc_super v23;

  v1 = (objc_class *)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_73(OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate);
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed] = 1;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration];
  v3 = sub_1B16BA2D4();
  OUTLINED_FUNCTION_83(v2, v4, v5, v3);
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor] = 0;
  v6 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
  v7 = objc_allocWithZone((Class)type metadata accessor for ActionButton());
  v8 = v0;
  *(_QWORD *)&v0[v6] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v10 = &v8[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
  *v10 = 0;
  v10[1] = 0;
  v8[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 0;

  v23.receiver = v8;
  v23.super_class = v1;
  v11 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
  v13 = *(void **)&v11[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
  v14 = v11;
  objc_msgSend(v14, sel_addSubview_, v13);
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel]);
  objc_msgSend(v14, sel_setClipsToBounds_, 0);
  OUTLINED_FUNCTION_0_4(v13, sel_setClipsToBounds_);
  OUTLINED_FUNCTION_0_4(v13, sel_setShowsMenuAsPrimaryAction_);
  sub_1B13D6584(0, &qword_1ED186028, (uint64_t (*)(uint64_t))sub_1B1456258, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B16C51D0;
  v16 = sub_1B16B8BDC();
  v17 = MEMORY[0x1E0DC1F90];
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v17;
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v18 = v14;
  sub_1B16BA1E4();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_0_4(*(id *)&v11[v12], sel_setIsAccessibilityElement_);
  OUTLINED_FUNCTION_0_4(v18, sel_setShowsLargeContentViewer_);
  v19 = objc_allocWithZone(MEMORY[0x1E0DC3998]);
  v20 = v18;
  v21 = objc_msgSend(v19, sel_init);
  objc_msgSend(v20, sel_addInteraction_, v21);

  return v20;
}

uint64_t sub_1B15A5C7C()
{
  return swift_deallocObject();
}

id sub_1B15A5C8C(void *a1)
{
  return objc_msgSend(a1, sel_setNeedsLayout);
}

id CollapsingButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CollapsingButton.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_73(OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate);
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed] = 1;
  v1 = (uint64_t)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration];
  v2 = sub_1B16BA2D4();
  OUTLINED_FUNCTION_83(v1, v3, v4, v2);
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor] = 0;
  v5 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActionButton()), sel_init);
  v6 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v7 = &v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
  *v7 = 0;
  v7[1] = 0;
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 0;

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall CollapsingButton.layoutSubviews()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_7_1((uint64_t)v10.super_class, sel_layoutSubviews, v1, v2, v3, v4, v5, v6, v10);
  if (!v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState])
  {
    v7 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
    objc_msgSend(v7, sel_intrinsicContentSize);
    objc_msgSend(v7, sel_setFrame_, 0.0, 0.0, ceil(v8), ceil(v9));
  }
  OUTLINED_FUNCTION_7();
}

double CollapsingButton.intrinsicContentSize.getter()
{
  uint64_t v0;
  double v2;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState))
    return *(double *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_intrinsicContentSize);
  return ceil(v2);
}

Swift::Void __swiftcall CollapsingButton.didMoveToWindow()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_7_1((uint64_t)v8.super_class, sel_didMoveToWindow, v1, v2, v3, v4, v5, v6, v8);
  v7 = objc_msgSend(v0, sel_window);

  if (v7)
    objc_msgSend(v0, sel_sizeToFit);
  OUTLINED_FUNCTION_7();
}

void sub_1B15A6078()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double MinY;
  double v12;
  double v13;
  double v14;
  double v15;
  _BYTE *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  double MinX;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  CGFloat MaxX;
  id v30;
  id v31;
  void *v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v1 = v0;
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 1;
  objc_msgSend(v0, sel_sizeToFit);
  objc_msgSend(v0, sel_invalidateIntrinsicContentSize);
  v2 = &v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v2))
  {
    v3 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 8))(v0, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  v5 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
  v6 = objc_msgSend(v5, sel_titleLabel);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_frame);
    v9 = v8;
    MinY = v10;
    v13 = v12;
    v15 = v14;

  }
  else
  {
    v13 = 0.0;
    v15 = 0.0;
    v9 = 0.0;
    MinY = 0.0;
  }
  v16 = &v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor];
  swift_beginAccess();
  if ((*v16 & 1) != 0)
  {
    v17 = *(double *)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
    objc_msgSend(v5, sel_intrinsicContentSize);
    v19 = v17 - ceil(v18);
    objc_msgSend(v5, sel_intrinsicContentSize);
    objc_msgSend(v5, sel_setFrame_, v19, 0.0, ceil(v20), ceil(v21));
    v22 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
    objc_msgSend(v5, sel_frame);
    MinX = CGRectGetMinX(v54);
    v55.origin.x = v9;
    v55.origin.y = MinY;
    v55.size.width = v13;
    v55.size.height = v15;
    v24 = MinX + CGRectGetMinX(v55);
    v56.origin.x = v9;
    v56.origin.y = MinY;
    v56.size.width = v13;
    v56.size.height = v15;
    MinY = CGRectGetMinY(v56);
    v9 = v24;
  }
  else
  {
    v22 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
  }
  objc_msgSend(v22, sel_setFrame_, v9, MinY, v13, v15);
  v25 = objc_msgSend(v5, sel_titleLabel);
  v26 = objc_msgSend(v25, sel_attributedText);

  objc_msgSend(v22, sel_setAttributedText_, v26);
  objc_msgSend(v22, sel_setAlpha_, 1.0);
  v27 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v28 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
  MaxX = 0.0;
  v30 = sub_1B15BB298((uint64_t)sub_1B15A7850, v27, 0.12, 0.33, 0.0, 0.83, 1.0);
  objc_msgSend(v30, sel_startAnimation);
  v31 = objc_msgSend(v5, sel_imageView);
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, sel_frame);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v40 = v39;

    v57.origin.x = v34;
    v57.origin.y = v36;
    v57.size.width = v38;
    v57.size.height = v40;
    MaxX = CGRectGetMaxX(v57);
  }
  v41 = sub_1B15A5954();
  v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v42;
  *(CGFloat *)(v43 + 24) = MaxX;
  v52 = sub_1B15A7890;
  v53 = v43;
  v44 = MEMORY[0x1E0C809B0];
  v48 = MEMORY[0x1E0C809B0];
  v49 = 1107296256;
  v50 = sub_1B13F00E4;
  v51 = &block_descriptor_51;
  v45 = _Block_copy(&v48);
  swift_release();
  objc_msgSend(v41, sel_addAnimations_, v45);
  _Block_release(v45);
  v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v52 = sub_1B15A789C;
  v53 = v46;
  v48 = v44;
  v49 = 1107296256;
  v50 = sub_1B13F8544;
  v51 = &block_descriptor_20_1;
  v47 = _Block_copy(&v48);
  swift_release();
  objc_msgSend(v41, sel_addCompletion_, v47);
  _Block_release(v47);
  objc_msgSend(v41, sel_startAnimation);

}

void sub_1B15A651C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t ObjectType;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *aBlock;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v1 = v0;
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 2;
  v2 = &v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
  swift_beginAccess();
  if (MEMORY[0x1B5E1F2F8](v2))
  {
    v3 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v0, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button], sel_titleLabel);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_setAlpha_, 0.0);

  }
  v7 = objc_msgSend(v1, sel_tintColor);
  if (v7)
  {
    v8 = v7;
    v9 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
    v10 = objc_msgSend(v9, sel_attributedText);
    if (v10)
    {
      v11 = v10;
      v26 = (void *)sub_1B13A2864();
      aBlock = v8;
      v12 = v8;
      v13 = (void *)sub_1B16BA124();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v9, sel_setAttributedText_, v13);

  }
  v14 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
  v16 = sub_1B15BB298((uint64_t)sub_1B15A78A4, v14, 0.15, 0.33, 0.0, 0.83, 1.0);
  objc_msgSend(v16, sel_startAnimationAfterDelay_, 0.083);
  v17 = sub_1B15A5954();
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v27 = sub_1B15A78C0;
  v28 = v18;
  v19 = (void *)MEMORY[0x1E0C809B0];
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1B13F00E4;
  v26 = &block_descriptor_25_1;
  v20 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v17, sel_addAnimations_, v20);
  _Block_release(v20);
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v27 = sub_1B15A78C8;
  v28 = v21;
  aBlock = v19;
  v24 = 1107296256;
  v25 = sub_1B13F8544;
  v26 = &block_descriptor_29_0;
  v22 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v17, sel_addCompletion_, v22);
  _Block_release(v22);
  objc_msgSend(v17, sel_startAnimation);

}

uint64_t sub_1B15A6850(uint64_t a1, double a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t result;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  char v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  void *v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double MaxX;
  double v48;
  double v49;
  double v50;
  double v51;
  char *v52;
  uint64_t v53;
  uint64_t ObjectType;
  _BYTE v55[24];
  CGRect v56;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B13D6584(0, &qword_1ED17C770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = &v55[-v7];
  sub_1B13D6584(0, (unint64_t *)&qword_1ED17CC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], v4);
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = &v55[-v15];
  swift_beginAccess();
  result = MEMORY[0x1B5E1F2F8](a1 + 16);
  if (result)
  {
    v18 = (char *)result;
    v19 = result + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
    swift_beginAccess();
    sub_1B14F937C(v19, (uint64_t)v16);
    v20 = sub_1B16BA2D4();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v20))
    {
      v21 = sub_1B16B79A0();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v21);
      sub_1B16BA280();
    }
    v22 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
    v23 = *(void **)&v18[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
    sub_1B14F937C((uint64_t)v16, (uint64_t)v13);
    v24 = v23;
    sub_1B16BA2EC();

    v25 = &v18[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor];
    swift_beginAccess();
    v26 = *v25;
    v27 = *(id *)&v18[v22];
    v28 = v27;
    if ((v26 & 1) != 0)
    {
      objc_msgSend(v27, sel_intrinsicContentSize);
      objc_msgSend(v28, sel_setFrame_, 0.0, 0.0, ceil(v29), ceil(v30));
    }
    else
    {
      objc_msgSend(v27, sel_frame);
      v32 = v31;
      v34 = v33;
      objc_msgSend(v28, sel_intrinsicContentSize);
      objc_msgSend(v28, sel_setFrame_, v32, v34, ceil(v35), ceil(v36));

      v37 = objc_msgSend(*(id *)&v18[v22], sel_imageView);
      if (v37)
      {
        v38 = v37;
        objc_msgSend(v37, sel_frame);
        v40 = v39;
        v42 = v41;
        v44 = v43;
        v46 = v45;

        v56.origin.x = v40;
        v56.origin.y = v42;
        v56.size.width = v44;
        v56.size.height = v46;
        MaxX = CGRectGetMaxX(v56);
      }
      else
      {
        MaxX = 0.0;
      }
      v28 = *(id *)&v18[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
      objc_msgSend(v28, sel_frame);
      objc_msgSend(v28, sel_setFrame_, MaxX - a2 + v48, v49, v50, v51);
    }

    v52 = &v18[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v52))
    {
      v53 = *((_QWORD *)v52 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v18, ObjectType, v53);

      swift_unknownObjectRelease();
    }
    else
    {

    }
    return sub_1B14F93D0((uint64_t)v16);
  }
  return result;
}

void sub_1B15A6BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (char *)MEMORY[0x1B5E1F2F8](v2);
  if (v3)
  {
    v4 = v3;
    v5 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState;
    v6 = v3[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState];
    if (v6 == 1)
      LOBYTE(v6) = 0;
    v3[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = v6;
    objc_msgSend(v3, sel_sizeToFit);
    objc_msgSend(v4, sel_invalidateIntrinsicContentSize);
    if (v4[v5]
      || (v7 = &v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate],
          swift_beginAccess(),
          !MEMORY[0x1B5E1F2F8](v7)))
    {

    }
    else
    {
      v8 = *((_QWORD *)v7 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 24))(v4, ObjectType, v8);

      swift_unknownObjectRelease();
    }
  }
}

void sub_1B15A6CA4(double a1)
{
  char *Strong;
  id v3;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v3 = *(id *)&Strong[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];

  objc_msgSend(v3, sel_setAlpha_, a1);
}

void sub_1B15A6D0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  void *v23;
  double v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  id v31;
  double MinX;
  double v33;
  id v34;
  double v35;
  double v36;
  char *v37;
  uint64_t v38;
  uint64_t ObjectType;
  _BYTE v40[24];
  CGRect v41;
  CGRect v42;
  CGRect v43;

  sub_1B13D6584(0, (unint64_t *)&qword_1ED17CC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = &v40[-v4];
  swift_beginAccess();
  v6 = MEMORY[0x1B5E1F2F8](a1 + 16);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
    v9 = *(void **)(v6 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button);
    v10 = v6 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
    swift_beginAccess();
    sub_1B14F937C(v10, (uint64_t)v5);
    v11 = v9;
    sub_1B16BA2EC();

    v12 = objc_msgSend(*(id *)&v7[v8], sel_titleLabel);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_frame);
      v15 = v14;
      v17 = v16;
      v19 = v18;
      v21 = v20;

    }
    else
    {
      v19 = 0.0;
      v21 = 0.0;
      v15 = 0.0;
      v17 = 0.0;
    }
    v22 = &v7[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor];
    swift_beginAccess();
    v23 = *(void **)&v7[v8];
    if ((*v22 & 1) != 0)
    {
      v24 = *(double *)&v7[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
      v25 = v23;
      objc_msgSend(v25, sel_intrinsicContentSize);
      v27 = v24 - ceil(v26);
      objc_msgSend(v25, sel_intrinsicContentSize);
      objc_msgSend(v25, sel_setFrame_, v27, 0.0, ceil(v28), ceil(v29));

      v30 = *(void **)&v7[v8];
      v31 = *(id *)&v7[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
      objc_msgSend(v30, sel_frame);
      MinX = CGRectGetMinX(v41);
      v42.origin.x = v15;
      v42.origin.y = v17;
      v42.size.width = v19;
      v42.size.height = v21;
      v33 = MinX + CGRectGetMinX(v42);
      v43.origin.x = v15;
      v43.origin.y = v17;
      v43.size.width = v19;
      v43.size.height = v21;
      objc_msgSend(v31, sel_setFrame_, v33, CGRectGetMinY(v43), v19, v21);

    }
    else
    {
      v34 = v23;
      objc_msgSend(v34, sel_intrinsicContentSize);
      objc_msgSend(v34, sel_setFrame_, 0.0, 0.0, ceil(v35), ceil(v36));

      objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel], sel_setFrame_, v15, v17, v19, v21);
    }
    v37 = &v7[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
    swift_beginAccess();
    if (MEMORY[0x1B5E1F2F8](v37))
    {
      v38 = *((_QWORD *)v37 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 40))(v7, ObjectType, v38);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_1B15A7028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  void *v6;
  uint64_t v7;
  int v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1B5E1F2F8](v2);
  if (v3)
  {
    v4 = (_BYTE *)v3;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel), sel_setAlpha_, 0.0);
    v5 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button], sel_titleLabel);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_setAlpha_, 1.0);

    }
    v7 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState;
    v8 = v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState];
    if (v8 == 2)
      LOBYTE(v8) = 0;
    v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = v8;
    objc_msgSend(v4, sel_sizeToFit);
    objc_msgSend(v4, sel_invalidateIntrinsicContentSize);
    if (v4[v7]
      || (v9 = &v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate],
          swift_beginAccess(),
          !MEMORY[0x1B5E1F2F8](v9)))
    {

    }
    else
    {
      v10 = *((_QWORD *)v9 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v4, ObjectType, v10);

      swift_unknownObjectRelease();
    }
  }
}

BOOL static CollapsingButton.Anchor.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void CollapsingButton.Anchor.hash(into:)()
{
  sub_1B16BAA54();
  OUTLINED_FUNCTION_0_0();
}

uint64_t CollapsingButton.Anchor.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

uint64_t sub_1B15A71F8()
{
  return sub_1B1550D6C();
}

id CollapsingButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void CollapsingButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CollapsingButton.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_4();
  return OUTLINED_FUNCTION_7_1((uint64_t)v8.super_class, sel_dealloc, v1, v2, v3, v4, v5, v6, v8);
}

id CollapsingButton.isAccessibilityElement.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_isAccessibilityElement);
}

void CollapsingButton.isAccessibilityElement.modify(_BYTE *a1)
{
  uint64_t v1;

  *a1 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_isAccessibilityElement);
  OUTLINED_FUNCTION_0_0();
}

unint64_t CollapsingButton.accessibilityTraits.getter()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)OUTLINED_FUNCTION_4();
  v1 = (unint64_t)objc_msgSendSuper2(&v4, sel_accessibilityTraits);
  v2 = *MEMORY[0x1E0DC4660];
  if ((*MEMORY[0x1E0DC4660] & ~v1) == 0)
    v2 = 0;
  return v2 | v1;
}

void CollapsingButton.accessibilityTraits.modify(unint64_t *a1)
{
  *a1 = CollapsingButton.accessibilityTraits.getter();
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1B15A745C()
{
  unint64_t result;

  result = qword_1EEF343A0;
  if (!qword_1EEF343A0)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for CollapsingButton.Anchor, &type metadata for CollapsingButton.Anchor);
    atomic_store(result, (unint64_t *)&qword_1EEF343A0);
  }
  return result;
}

void sub_1B15A74A4(char *a1)
{
  CollapsingButton.isCollapsed.setter(*a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1B15A74CC(id *a1@<X8>)
{
  *a1 = CollapsingButton.menu.getter();
  OUTLINED_FUNCTION_0_0();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonWillCollapse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonAnimateAlongsideCollapse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonDidCollapse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonWillExpand(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonAnimateAlongsideExpand(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonDidExpand(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonIgnoredStateChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1B15A752C()
{
  return type metadata accessor for CollapsingButton();
}

uint64_t type metadata accessor for CollapsingButton()
{
  uint64_t result;

  result = qword_1ED17C868;
  if (!qword_1ED17C868)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B15A756C()
{
  unint64_t v0;

  sub_1B13D6584(319, (unint64_t *)&qword_1ED17CC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t storeEnumTagSinglePayload for CollapsingButton.Anchor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15A7674 + 4 * byte_1B16D4505[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15A76A8 + 4 * byte_1B16D4500[v4]))();
}

uint64_t sub_1B15A76A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15A76B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15A76B8);
  return result;
}

uint64_t sub_1B15A76C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15A76CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15A76D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15A76D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CollapsingButton.Anchor()
{
  return &type metadata for CollapsingButton.Anchor;
}

uint64_t storeEnumTagSinglePayload for CollapsingButton.AnimationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15A7740 + 4 * byte_1B16D450F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B15A7774 + 4 * byte_1B16D450A[v4]))();
}

uint64_t sub_1B15A7774(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15A777C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15A7784);
  return result;
}

uint64_t sub_1B15A7790(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15A7798);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B15A779C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15A77A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CollapsingButton.AnimationState()
{
  return &type metadata for CollapsingButton.AnimationState;
}

unint64_t sub_1B15A77C4()
{
  unint64_t result;

  result = qword_1EEF343A8;
  if (!qword_1EEF343A8)
  {
    result = MEMORY[0x1B5E1F0E8](&unk_1B16D46A8, &type metadata for CollapsingButton.AnimationState);
    atomic_store(result, (unint64_t *)&qword_1EEF343A8);
  }
  return result;
}

uint64_t sub_1B15A7800()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id sub_1B15A7824(uint64_t a1)
{
  uint64_t v1;

  return sub_1B15A56C0(a1, v1);
}

uint64_t sub_1B15A782C()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1B15A7850()
{
  sub_1B15A6CA4(0.0);
}

uint64_t sub_1B15A786C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15A7890()
{
  uint64_t v0;

  return sub_1B15A6850(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_1B15A789C(uint64_t a1)
{
  uint64_t v1;

  sub_1B15A6BB8(a1, v1);
}

void sub_1B15A78A4()
{
  sub_1B15A6CA4(1.0);
}

void sub_1B15A78C0()
{
  uint64_t v0;

  sub_1B15A6D0C(v0);
}

void sub_1B15A78C8(uint64_t a1)
{
  uint64_t v1;

  sub_1B15A7028(a1, v1);
}

uint64_t sub_1B15A78E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  void *v4;
  objc_class *v5;
  id v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13C9D14();
  result = sub_1B16B81BC();
  if (result)
  {
    v4 = (void *)result;
    v5 = (objc_class *)type metadata accessor for RendererEnvironment();
    v6 = objc_allocWithZone(v5);
    result = (uint64_t)RendererEnvironment.init(scrollView:testing:)(v4, 0);
    a2[3] = (uint64_t)v5;
    a2[4] = (uint64_t)&protocol witness table for RendererEnvironment;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B15A7990@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13D19B8(0, &qword_1ED188A48);
  result = sub_1B16B81EC();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1B13D19B8(0, &qword_1ED188A50);
    result = sub_1B16B81EC();
    if (v8)
    {
      v5 = type metadata accessor for PillViewRenderer();
      v6 = swift_allocObject();
      sub_1B13C06D0(&v9, v6 + 16);
      result = sub_1B13C06D0(&v7, v6 + 56);
      a2[3] = v5;
      a2[4] = (uint64_t)&protocol witness table for PillViewRenderer;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B15A7AA8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13D19B8(0, &qword_1ED188A38);
  result = sub_1B16B81C8();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1B13D19B8(0, &qword_1ED188A60);
    result = sub_1B16B81EC();
    if (v7)
    {
      v5 = type metadata accessor for PillViewImageRenderer();
      v6 = swift_allocObject();
      result = sub_1B13C06D0(&v9, v6 + 16);
      *(_QWORD *)(v6 + 56) = v7;
      *(_QWORD *)(v6 + 64) = v8;
      a2[3] = v5;
      a2[4] = (uint64_t)&protocol witness table for PillViewImageRenderer;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B15A7BCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PillViewImageRequestFactory();
  result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&protocol witness table for PillViewImageRequestFactory;
  return result;
}

uint64_t sub_1B15A7C08@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13D19B8(0, &qword_1ED188A58);
  result = sub_1B16B81EC();
  if (v7)
  {
    v4 = type metadata accessor for PillViewStyler();
    v5 = swift_allocObject();
    result = sub_1B13C06D0(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&protocol witness table for PillViewStyler;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B15A7CB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B13D19B8(0, &qword_1ED188A48);
  result = sub_1B16B81EC();
  if (v7)
  {
    v4 = type metadata accessor for PillViewLayoutAttributesFactory();
    v5 = swift_allocObject();
    result = sub_1B13C06D0(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E6337E50;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B15A7D68@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  if (qword_1EEF2F940 != -1)
    swift_once();
  v2 = (void *)qword_1EEF36208;
  v3 = (void *)unk_1EEF36210;
  v4 = (void *)qword_1EEF36218;
  v10 = (id)unk_1EEF36220;
  a1[3] = &type metadata for PillViewColorPalette;
  a1[4] = &protocol witness table for PillViewColorPalette;
  v5 = (_QWORD *)swift_allocObject();
  *a1 = v5;
  v5[2] = v2;
  v5[3] = v3;
  v5[4] = v4;
  v5[5] = v10;
  v6 = v2;
  v7 = v3;
  v8 = v4;
  return v10;
}

void sub_1B15A7E18(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD var48[10];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B15A80FC();
  v3 = sub_1B16B81E0();
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for ImageCache();
    v6 = type metadata accessor for ImageProcessor();
    v7 = swift_allocObject();
    v8 = type metadata accessor for ImageDownloader();
    v9 = swift_allocObject();
    ObjectType = swift_getObjectType();
    sub_1B14CF258(v4, (uint64_t)var48, (uint64_t)&v13, v5, ObjectType, v8, v6, (uint64_t)&protocol witness table for ImageDownloader, (uint64_t)&protocol witness table for ImageProcessor, v12, v9, v7, var48[1], var48[2], var48[3], var48[4], var48[5], var48[6], var48[7],
      var48[8],
      var48[9]);
    a2[3] = v5;
    a2[4] = &protocol witness table for ImageCache;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
}

void sub_1B15A7F1C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1B15A7F88(a1, (uint64_t (*)(_QWORD))type metadata accessor for SectionFooterViewRenderer, (uint64_t)&protocol witness table for SectionFooterViewRenderer, a2);
}

uint64_t sub_1B15A7F30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SectionFooterViewStyler();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E6314FD8;
  *a1 = result;
  return result;
}

void sub_1B15A7F74(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1B15A7F88(a1, (uint64_t (*)(_QWORD))type metadata accessor for SectionFooterViewLayoutAttributesFactory, (uint64_t)&protocol witness table for SectionFooterViewLayoutAttributesFactory, a2);
}

void sub_1B15A7F88(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  _BYTE v21[24];
  uint64_t v22;

  v7 = (uint64_t *)a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_17_2((uint64_t)v8, &qword_1ED188208);
  sub_1B16B81EC();
  if (v22)
  {
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    MEMORY[0x1E0C80A78](v9, v9);
    v11 = (_QWORD *)((char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    v13 = *v11;
    v14 = type metadata accessor for SectionFooterViewStyler();
    v20[3] = v14;
    v20[4] = &off_1E6314FD8;
    v20[0] = v13;
    v15 = a2(0);
    v16 = (_QWORD *)swift_allocObject();
    v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v14);
    MEMORY[0x1E0C80A78](v17, v17);
    OUTLINED_FUNCTION_23_3();
    (*(void (**)(uint64_t *))(v18 + 16))(v7);
    v19 = *v7;
    v16[5] = v14;
    v16[6] = &off_1E6314FD8;
    v16[2] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    a4[3] = v15;
    a4[4] = a3;
    *a4 = v16;
    OUTLINED_FUNCTION_47();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1B15A80FC()
{
  unint64_t result;

  result = qword_1ED17C6E8;
  if (!qword_1ED17C6E8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED17C6E8);
  }
  return result;
}

uint64_t sub_1B15A8150()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t dispatch thunk of MotionManagerObserver.motionManager(_:didUpdateMotionData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of MotionManagerObserver.motionManager(_:motionEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void sub_1B15A819C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  if (MEMORY[0x1B5E1F2F8](v2 + 16))
  {
    v6 = OUTLINED_FUNCTION_3_91();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 16))(a1, a2 & 1, v6, v3);
    OUTLINED_FUNCTION_3_38();
  }
  else
  {
    OUTLINED_FUNCTION_67();
  }
}

uint64_t sub_1B15A81F8()
{
  uint64_t v0;

  sub_1B13C076C(v0 + 16);
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

void sub_1B15A822C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.5);

  qword_1EEF343B0 = (uint64_t)v1;
}

uint64_t sub_1B15A8290()
{
  id v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  OUTLINED_FUNCTION_4_78((uint64_t)objc_msgSend(v0, sel_setAlignment_, 1), sel_setLineBreakMode_);
  sub_1B14F4814();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C6D10;
  v2 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
  v3 = qword_1EEF2F898;
  v4 = v2;
  if (v3 != -1)
    v4 = (id)swift_once();
  v5 = (void *)qword_1EEF343B0;
  v6 = OUTLINED_FUNCTION_5((uint64_t)v4, (unint64_t *)&qword_1ED1838C0);
  *(_QWORD *)(inited + 40) = v5;
  v7 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v7;
  v8 = OUTLINED_FUNCTION_5(v6, &qword_1ED1872A0);
  *(_QWORD *)(inited + 80) = v0;
  v9 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v9;
  v10 = (void *)objc_opt_self();
  v11 = *MEMORY[0x1E0DC1448];
  v12 = v5;
  v13 = v7;
  v14 = v0;
  v15 = v9;
  v16 = OUTLINED_FUNCTION_3_92((uint64_t)objc_msgSend(v10, sel_systemFontOfSize_weight_, 22.0, v11), (unint64_t *)&qword_1ED183898);
  OUTLINED_FUNCTION_1_110(v16);
  sub_1B14297F4();
  v17 = OUTLINED_FUNCTION_2_95();

  return v17;
}

uint64_t sub_1B15A8448()
{
  id v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  OUTLINED_FUNCTION_4_78((uint64_t)objc_msgSend(v0, sel_setAlignment_, 1), sel_setLineBreakMode_);
  sub_1B14F4814();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C6D10;
  v2 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
  v3 = qword_1EEF2F898;
  v4 = v2;
  if (v3 != -1)
    v4 = (id)swift_once();
  v5 = (void *)qword_1EEF343B0;
  v6 = OUTLINED_FUNCTION_5((uint64_t)v4, (unint64_t *)&qword_1ED1838C0);
  *(_QWORD *)(inited + 40) = v5;
  v7 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v7;
  v8 = OUTLINED_FUNCTION_5(v6, &qword_1ED1872A0);
  *(_QWORD *)(inited + 80) = v0;
  v9 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v9;
  v10 = (void *)objc_opt_self();
  v11 = v5;
  v12 = v7;
  v13 = v0;
  v14 = v9;
  v15 = OUTLINED_FUNCTION_3_92((uint64_t)objc_msgSend(v10, sel_systemFontOfSize_, 16.0), (unint64_t *)&qword_1ED183898);
  OUTLINED_FUNCTION_1_110(v15);
  sub_1B14297F4();
  v16 = OUTLINED_FUNCTION_2_95();

  return v16;
}

id sub_1B15A85E8(void *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v2, sel_setCornerRadius_, 9.0);

  v3 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v3, sel_setMasksToBounds_, 1);

  v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v4);

  return objc_msgSend(a1, sel_setOpaque_, 0);
}

id sub_1B15A86B0(id a1)
{
  id v2;
  id v3;
  char **v4;

  if (qword_1EEF2F898 != -1)
    swift_once();
  objc_msgSend(a1, sel_setTintColor_, qword_1EEF343B0);
  v2 = objc_msgSend(a1, sel_traitCollection);
  v3 = objc_msgSend(v2, sel_userInterfaceStyle);

  v4 = &selRef_ts_setPlusDCompositingFilter;
  if (v3 != (id)2)
    v4 = &selRef_ts_setPlusLCompositingFilter;
  return objc_msgSend(a1, *v4);
}

uint64_t type metadata accessor for OverlayAlertStyler()
{
  return objc_opt_self();
}

UIImageSymbolScale __swiftcall UIImageSymbolScale.capped(contentSizeCategory:)(__C::UIContentSizeCategory contentSizeCategory)
{
  UIImageSymbolScale v1;
  UIImageSymbolScale v2;
  UIImageSymbolScale v3;
  char v5;

  if ((unint64_t)(v1 + 1) >= 2)
  {
    v2 = v1;
    if (v1 == UIImageSymbolScaleSmall)
      return v2;
  }
  else
  {
    v2 = UIImageSymbolScaleMedium;
  }
  if ((sub_1B16BA160() & 1) == 0)
    return v2;
  if ((sub_1B16BA16C() & 1) != 0)
  {
    v3 = UIImageSymbolScaleSmall;
  }
  else
  {
    v5 = sub_1B16BA16C();
    v3 = UIImageSymbolScaleMedium;
    if ((v5 & 1) == 0)
      v3 = UIImageSymbolScaleLarge;
  }
  if (v3 >= v2)
    return v2;
  else
    return v3;
}

uint64_t dispatch thunk of AppEntityAnnotationProviding.appEntity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1B15A8824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    OUTLINED_FUNCTION_1_111();
    sub_1B16B87C8();
    OUTLINED_FUNCTION_4_79();
    while (1)
    {
      OUTLINED_FUNCTION_3_93();
      if (v3)
        break;
      OUTLINED_FUNCTION_6_82();
      OUTLINED_FUNCTION_2_96();
      OUTLINED_FUNCTION_5_78();
      sub_1B16BA628();
      v4 += v5;
      if (!--v6)
        goto LABEL_7;
    }
    swift_release();
  }
LABEL_7:
  OUTLINED_FUNCTION_0_131();
}

void sub_1B15A88C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B15A88F8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0DB48B0]);
}

void sub_1B15A88DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B15A88F8(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for BlueprintViewAction);
}

void sub_1B15A88F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(_QWORD *)(a3 + 16);
  if (v8)
  {
    OUTLINED_FUNCTION_1_111();
    a5(0);
    OUTLINED_FUNCTION_4_79();
    while (1)
    {
      OUTLINED_FUNCTION_3_93();
      if (v5)
        break;
      OUTLINED_FUNCTION_6_82();
      OUTLINED_FUNCTION_2_96();
      OUTLINED_FUNCTION_5_78();
      sub_1B16BA628();
      v6 += v7;
      if (!--v8)
        goto LABEL_7;
    }
    swift_release();
  }
LABEL_7:
  OUTLINED_FUNCTION_0_131();
}

uint64_t sub_1B15A8994(void (*a1)(__int128 *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int128 *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v50 = MEMORY[0x1E0DEE9D8];
    sub_1B1490EC8();
    result = v50;
    v8 = (__int128 *)(a3 + 72);
    while (1)
    {
      v30 = result;
      v26 = v5;
      v9 = *((_QWORD *)v8 + 2);
      v10 = *((_BYTE *)v8 + 24);
      v11 = *((_BYTE *)v8 + 25);
      v12 = *((_QWORD *)v8 + 4);
      v13 = *((_QWORD *)v8 + 7);
      v32 = *((_QWORD *)v8 - 5);
      v27 = *(v8 - 1);
      v33 = *(v8 - 2);
      v34 = v27;
      v35 = *v8;
      v36 = v9;
      v37 = v10;
      v38 = v11;
      v39 = v12;
      v40 = *(__int128 *)((char *)v8 + 40);
      v41 = v13;
      sub_1B16B9740();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      a1(&v42, &v32);
      if (v4)
        break;
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_58_0();
      swift_release();
      swift_bridgeObjectRelease();
      v14 = v42;
      v15 = v43;
      v16 = v44;
      v17 = v45;
      v18 = v46;
      v19 = v47;
      v20 = v48;
      v21 = v49;
      result = v30;
      v23 = *(_QWORD *)(v30 + 16);
      v22 = *(_QWORD *)(v30 + 24);
      v50 = v30;
      if (v23 >= v22 >> 1)
      {
        v31 = v42;
        v29 = v48;
        v28 = v43;
        sub_1B1490EC8();
        v15 = v28;
        v20 = v29;
        v14 = v31;
        result = v50;
      }
      *(_QWORD *)(result + 16) = v23 + 1;
      v24 = result + 72 * v23;
      *(_OWORD *)(v24 + 32) = v14;
      *(_BYTE *)(v24 + 48) = v15;
      *(_BYTE *)(v24 + 49) = v16;
      *(_QWORD *)(v24 + 56) = v17;
      *(_QWORD *)(v24 + 64) = v18;
      *(_QWORD *)(v24 + 72) = v19;
      *(_OWORD *)(v24 + 80) = v20;
      *(_QWORD *)(v24 + 96) = v21;
      v8 = (__int128 *)((char *)v8 + 104);
      v5 = v26 - 1;
      v4 = 0;
      if (v26 == 1)
        return result;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_58_0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B15A8BE8(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v6)
      break;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1B16BA640();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1B5E1DF60](v8, a3);
      else
        v9 = *(id *)(a3 + 8 * v8 + 32);
      v10 = v9;
      v11 = v9;
      a1(&v12, &v11);

      if (v3)
        return swift_release();
      ++v8;
      sub_1B16BA61C();
      sub_1B16BA64C();
      sub_1B16BA658();
      sub_1B16BA628();
      if (v6 == v8)
        return v13;
    }
    __break(1u);
LABEL_16:
    sub_1B16B9740();
    v6 = sub_1B16BA76C();
    swift_bridgeObjectRelease();
  }
  return result;
}

int64_t sub_1B15A8D50(void (*a1)(_QWORD *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t result;
  int v9;
  char v10;
  unint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _BYTE __dst[525];
  __int128 v21;
  _QWORD __src[67];
  uint64_t v23;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return v6;
  v7 = a3;
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1B1490F00();
  v6 = v23;
  result = sub_1B14A87D0(v7);
  if ((result & 0x8000000000000000) == 0)
  {
    v11 = result;
    if (result < 1 << *(_BYTE *)(v7 + 32))
    {
      v12 = v9;
      v18 = v7 + 56;
      v13 = v10 & 1;
      while (((*(_QWORD *)(v18 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        if (*(_DWORD *)(v7 + 36) != v12)
          goto LABEL_18;
        v21 = *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v11);
        a1(__src, &v21);
        if (v4)
        {
          OUTLINED_FUNCTION_58_0();
          return v6;
        }
        v14 = v7;
        memcpy(__dst, __src, sizeof(__dst));
        v23 = v6;
        v15 = *(_QWORD *)(v6 + 16);
        if (v15 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1B1490F00();
          v6 = v23;
        }
        *(_QWORD *)(v6 + 16) = v15 + 1;
        memcpy((void *)(v6 + 528 * v15 + 32), __dst, 0x20DuLL);
        v7 = v14;
        result = sub_1B15A9DA4(v11, v12, v13 & 1, v14);
        v11 = result;
        v12 = v16;
        v13 = v17 & 1;
        if (!--v5)
        {
          sub_1B14A8A24(result, v16, v17 & 1);
          return v6;
        }
        v4 = 0;
        if (result < 0 || result >= 1 << *(_BYTE *)(v7 + 32))
          goto LABEL_19;
      }
      __break(1u);
LABEL_18:
      __break(1u);
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1B15A8F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B15A8F40(a1, a2, a3);
}

uint64_t sub_1B15A8F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  __int128 v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1B1448A70();
    v5 = v12;
    for (i = a3 + 32; ; i += 40)
    {
      OUTLINED_FUNCTION_3_93();
      if (v3)
        break;
      v8 = v11;
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_1B1448A70();
        v8 = v11;
      }
      *(_QWORD *)(v12 + 16) = v9 + 1;
      *(_OWORD *)(v12 + 16 * v9 + 32) = v8;
      if (!--v4)
        return v5;
    }
    swift_release();
  }
  return v5;
}

uint64_t sub_1B15A9044()
{
  return EditingBlueprintCollectionViewLayout.isEditing.getter() & 1;
}

uint64_t EditingBlueprintCollectionViewLayout.isEditing.getter()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0));
}

uint64_t sub_1B15A9088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EditingBlueprintCollectionViewLayout.isEditing.setter(a3);
}

uint64_t EditingBlueprintCollectionViewLayout.isEditing.setter(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1C0)) = result;
  return result;
}

uint64_t (*EditingBlueprintCollectionViewLayout.isEditing.modify(uint64_t a1))(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1C0));
  return sub_1B15A9100;
}

uint64_t sub_1B15A9100(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)result) + 0x1C0)) = *(_BYTE *)(result + 8);
  return result;
}

uint64_t EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:editStyle:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_13_1();
  return EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:editStyle:)(a1, a2);
}

uint64_t EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:editStyle:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = *v6;
  *((_BYTE *)v2 + *(_QWORD *)(v8 + 448)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)((*v9 & *v2) + 0x1C8)) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - v10, a1, v4);
  BlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)();
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v12;
}

id EditingBlueprintCollectionViewLayout.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_13_1(), sel_initWithCoder_, a1);

  return v2;
}

void EditingBlueprintCollectionViewLayout.init(coder:)()
{
  _QWORD *v0;

  *((_BYTE *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0)) = 0;

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15A92DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  EditingBlueprintCollectionViewLayout.init(coder:)();
}

void EditingBlueprintCollectionViewLayout.copy()(_QWORD *a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  MEMORY[0x1E0C80A78](ObjectType, v6);
  v8 = (char *)&v12 - v7;
  (*(void (**)(char *, char *))(v10 + 16))((char *)&v12 - v7, &v2[*(_QWORD *)(v9 + 128)]);
  v13 = *(_QWORD *)&v2[*(_QWORD *)((*v5 & *(_QWORD *)v2) + 0x1C8)];
  v11 = (_QWORD *)EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:editStyle:)((uint64_t)v8, (uint64_t)&v13);
  *((_BYTE *)v11 + *(_QWORD *)((*v11 & *v5) + 0x1C0)) = v2[*(_QWORD *)((*v5 & *(_QWORD *)v2) + 0x1C0)];
  sub_1B159F6FC((uint64_t)v11);
  a1[3] = ObjectType;
  *a1 = v11;
}

uint64_t sub_1B15A93EC(void *a1)
{
  id v1;
  uint64_t v2;
  _QWORD v4[4];

  v1 = a1;
  EditingBlueprintCollectionViewLayout.copy()(v4);

  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2 = sub_1B16BA8F8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

Swift::OpaquePointer_optional __swiftcall EditingBlueprintCollectionViewLayout.layoutAttributesForElements(in:)(__C::CGRect in)
{
  void *v1;
  void *v2;
  double height;
  double width;
  double y;
  double x;
  id v7;
  void *v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Bool v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _QWORD v36[4];
  double v37;
  double v38;
  _BYTE v39[1176];
  _BYTE v40[1176];
  Swift::OpaquePointer_optional result;

  v2 = v1;
  height = in.size.height;
  width = in.size.width;
  y = in.origin.y;
  x = in.origin.x;
  sub_1B141FAD8();
  v7 = objc_msgSend(v1, sel_collectionView);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_contentOffset);
    v37 = v9;
    v38 = v10;

  }
  else
  {
    v37 = 0.0;
    v38 = 0.0;
  }
  v11 = OUTLINED_FUNCTION_7_66();
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_adjustedContentInset, *(_QWORD *)&v37, *(_QWORD *)&v38);
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;

  }
  else
  {
    v14 = *MEMORY[0x1E0DC49E8];
    v16 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v18 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v20 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  }
  memcpy(v39, &v40[40], 0x20EuLL);
  sub_1B1425EB8();
  v23 = v22;
  v25 = v24;
  memcpy(v39, v40, sizeof(v39));
  v26 = sub_1B1426D18(v23, v25, x, y, width, height, v37, v38, v14, v16, v18, v20);
  sub_1B1448694((uint64_t)v40);
  if (v26)
  {
    swift_retain();
    v28 = OUTLINED_FUNCTION_7_66();
    if (v28
      && (v29 = v28,
          v30 = objc_msgSend(v28, sel_indexPathsForSelectedItems),
          v29,
          v30))
    {
      sub_1B16B7D60();
      v31 = sub_1B16B9B54();

    }
    else
    {
      v31 = MEMORY[0x1E0DEE9D8];
    }
    sub_1B149B388(v31);
    v32 = *(_QWORD *)(v26 + 16);
    v36[2] = v2;
    v36[3] = MEMORY[0x1E0C80A78](v33, v34);
    sub_1B16B9740();
    v21 = sub_1B15A8BE8((void (*)(uint64_t *__return_ptr, id *))sub_1B15A9D0C, (uint64_t)v36, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    v21 = 0;
  }
  v35 = (void *)v21;
  result.value._rawValue = v35;
  result.is_nil = v27;
  return result;
}

char *sub_1B15A96D8@<X0>(id *a1@<X0>, uint64_t a2@<X2>, char **a3@<X8>)
{
  char *v5;
  char *v6;
  char *result;

  v5 = (char *)*a1;
  v6 = (char *)objc_msgSend(*a1, sel_representedElementCategory);
  if ((unint64_t)(v6 - 1) < 2 || v6)
  {
    *a3 = v5;
    return v5;
  }
  else
  {
    result = sub_1B15A9758(v5, a2);
    *a3 = result;
  }
  return result;
}

char *sub_1B15A9758(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  char v11;
  _QWORD *v12;
  char *v13;
  char v14;
  char *v15;
  char *v16;
  char v17;
  char *v18;
  char *v19;
  _BYTE v21[24];
  char *v22;
  CGAffineTransform v23;

  v5 = sub_1B16B7D60();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = objc_msgSend(a1, sel_indexPath);
  sub_1B16B7D0C();

  v11 = sub_1B14ADEF8((uint64_t)v9, a2);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (*((_BYTE *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1C0)) != 1 || (v11 & 1) != 0)
  {
    objc_msgSend(a1, sel_copy);
    sub_1B16BA3AC();
    swift_unknownObjectRelease();
    type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
    swift_dynamicCast();
    v13 = v22;
    v23.a = 1.0;
    v23.b = 0.0;
    v23.c = 0.0;
    v23.d = 1.0;
    v23.tx = 0.0;
    v23.ty = 0.0;
    objc_msgSend(v22, sel_setTransform_, &v23);
    v17 = *((_BYTE *)v2 + *(_QWORD *)((*v12 & *v2) + 0x1C0));
    v18 = &v13[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isEditing];
    swift_beginAccess();
    *v18 = v17;
    v19 = &v13[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isSelected];
    swift_beginAccess();
    *v19 = v11 & 1;
    v23.a = 1.0;
    v23.b = 0.0;
    v23.c = 0.0;
    v23.d = 1.0;
    v23.tx = 0.0;
    v23.ty = 0.0;
    objc_msgSend(v13, sel_setTransform_, &v23);
  }
  else
  {
    objc_msgSend(a1, sel_copy);
    sub_1B16BA3AC();
    swift_unknownObjectRelease();
    type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
    swift_dynamicCast();
    v13 = v22;
    v14 = *((_BYTE *)v2 + *(_QWORD *)((*v12 & *v2) + 0x1C0));
    v15 = &v22[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isEditing];
    swift_beginAccess();
    *v15 = v14;
    v16 = &v13[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isSelected];
    swift_beginAccess();
    *v16 = 0;
    CGAffineTransformMakeScale(&v23, *(CGFloat *)((char *)v2 + *(_QWORD *)((*v12 & *v2) + 0x1C8)), *(CGFloat *)((char *)v2 + *(_QWORD *)((*v12 & *v2) + 0x1C8)));
    objc_msgSend(v13, sel_setTransform_, &v23);
  }
  return v13;
}

id sub_1B15A9A2C(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9;
  unint64_t v10;
  void *v11;
  __C::CGRect v13;

  v9 = a1;
  v13.origin.x = a2;
  v13.origin.y = a3;
  v13.size.width = a4;
  v13.size.height = a5;
  v10 = (unint64_t)EditingBlueprintCollectionViewLayout.layoutAttributesForElements(in:)(v13);

  if (v10)
  {
    sub_1B141E5F0();
    v11 = (void *)sub_1B16B9B48();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  return v11;
}

char *EditingBlueprintCollectionViewLayout.layoutAttributesForItem(at:)()
{
  void *v0;
  void *v1;
  unint64_t v2;
  char v3;
  id v4;
  id v5;
  char *v6;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[1136];
  uint64_t v14;

  v1 = v0;
  sub_1B141FAD8();
  if (*(_QWORD *)(v14 + 16) && (v2 = sub_1B1426900(), (v3 & 1) != 0))
  {
    v4 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v2);
    sub_1B1448694((uint64_t)v13);
    v5 = v4;
    if (objc_msgSend(v5, sel_representedElementCategory))
    {

      return (char *)v5;
    }
    else
    {
      v8 = objc_msgSend(v1, sel_collectionView);
      if (v8
        && (v9 = v8,
            v10 = objc_msgSend(v8, sel_indexPathsForSelectedItems),
            v9,
            v10))
      {
        sub_1B16B7D60();
        v11 = sub_1B16B9B54();

      }
      else
      {
        v11 = MEMORY[0x1E0DEE9D8];
      }
      sub_1B149B388(v11);
      v6 = sub_1B15A9758(v5, v12);
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    sub_1B1448694((uint64_t)v13);
    return 0;
  }
  return v6;
}

char *sub_1B15A9BF8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v10;

  v2 = sub_1B16B7D60();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B16B7D0C();
  v7 = a1;
  v8 = EditingBlueprintCollectionViewLayout.layoutAttributesForItem(at:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

void EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)()
{
  OUTLINED_FUNCTION_13_1();
  EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)();
}

void EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EditingBlueprintCollectionViewLayout.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1B15A9D0C@<X0>(id *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;

  return sub_1B15A96D8(a1, *(_QWORD *)(v2 + 24), a2);
}

ValueMetadata *type metadata accessor for EditingBlueprintCollectionViewLayoutStyle()
{
  return &type metadata for EditingBlueprintCollectionViewLayoutStyle;
}

uint64_t sub_1B15A9D38()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for EditingBlueprintCollectionViewLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EditingBlueprintCollectionViewLayout);
}

uint64_t method lookup function for EditingBlueprintCollectionViewLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:editStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 464))();
}

int64_t sub_1B15A9DA4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_22;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_20;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      v9 = v5 + 3;
      if (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(v6 + 8 * v9);
        if (v10)
          return __clz(__rbit64(v10)) + (v9 << 6);
        while (v5 + 4 < v11)
        {
          v10 = *(_QWORD *)(a4 + 88 + 8 * v5++);
          if (v10)
          {
            v9 = v5 + 3;
            return __clz(__rbit64(v10)) + (v9 << 6);
          }
        }
      }
    }
  }
  return result;
}

void DebugBundle.name.getter()
{
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_0();
}

void DebugBundle.version.getter()
{
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_0();
}

void DebugBundle.build.getter()
{
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_0_0();
}

uint64_t DebugBundle.displayVersion.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B16B9740();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return v2;
}

void __swiftcall DebugBundle.init(bundle:)(TeaUI::DebugBundle *__return_ptr retstr, NSBundle bundle)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;

  OUTLINED_FUNCTION_7_67();
  sub_1B16B983C();
  v5 = OUTLINED_FUNCTION_1_112();
  OUTLINED_FUNCTION_15_4();
  if (v2)
  {
    OUTLINED_FUNCTION_2_97();
    v6 = OUTLINED_FUNCTION_90_0();
  }
  v8 = OUTLINED_FUNCTION_3_94(v6, v7);
  if (v40)
  {
    if (OUTLINED_FUNCTION_0_132())
    {
      v14 = v38;
      v15 = v39;
      goto LABEL_8;
    }
  }
  else
  {
    OUTLINED_FUNCTION_4_80(v8, v9, v10, v11, v12, v13);
  }
  v14 = 0;
  v15 = (void *)0xE000000000000000;
LABEL_8:
  sub_1B16B983C();
  v16 = OUTLINED_FUNCTION_1_112();
  OUTLINED_FUNCTION_15_4();
  if (v2)
  {
    OUTLINED_FUNCTION_2_97();
    v17 = OUTLINED_FUNCTION_90_0();
  }
  v19 = OUTLINED_FUNCTION_3_94(v17, v18);
  if (v40)
  {
    if (OUTLINED_FUNCTION_0_132())
    {
      v25 = v38;
      v26 = v39;
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_4_80(v19, v20, v21, v22, v23, v24);
  }
  v25 = 0;
  v26 = (void *)0xE000000000000000;
LABEL_15:
  OUTLINED_FUNCTION_7_67();
  sub_1B16B983C();
  v27 = OUTLINED_FUNCTION_1_112();
  OUTLINED_FUNCTION_15_4();
  if (v2)
  {
    OUTLINED_FUNCTION_2_97();
    v28 = OUTLINED_FUNCTION_90_0();
  }
  v30 = OUTLINED_FUNCTION_3_94(v28, v29);
  if (!v40)
  {
    OUTLINED_FUNCTION_4_80(v30, v31, v32, v33, v34, v35);
    goto LABEL_21;
  }
  if (!OUTLINED_FUNCTION_0_132())
  {
LABEL_21:

    v36 = 0;
    v37 = (void *)0xE000000000000000;
    goto LABEL_22;
  }
  v36 = v38;
  v37 = v39;

LABEL_22:
  retstr->name._countAndFlagsBits = v14;
  retstr->name._object = v15;
  retstr->version._countAndFlagsBits = v25;
  retstr->version._object = v26;
  retstr->build._countAndFlagsBits = v36;
  retstr->build._object = v37;
}

uint64_t destroy for DebugBundle()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for DebugBundle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DebugBundle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugBundle()
{
  return &type metadata for DebugBundle;
}

uint64_t sub_1B15AA268()
{
  return sub_1B146E354();
}

uint64_t BlueprintLayoutAttributesType.editingHeight.getter()
{
  return 0;
}

uint64_t sub_1B15AA290()
{
  return OUTLINED_FUNCTION_105();
}

uint64_t sub_1B15AA298(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_0_133(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_1B146E354();
}

uint64_t sub_1B15AA2C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_0_133(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return OUTLINED_FUNCTION_105() & 1;
}

uint64_t sub_1B15AA2F8()
{
  return BlueprintLayoutHeaderFooterAttributesType.footerHeight.getter();
}

uint64_t BlueprintLayoutHeaderFooterAttributesType.footerHeight.getter()
{
  return *MEMORY[0x1E0DC53D8];
}

double BlueprintLayoutHeaderFooterAttributesType.height.getter()
{
  return 0.0;
}

double HeightLayoutAttributes.height.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void HeightLayoutAttributes.init(height:)(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
}

void sub_1B15AA33C()
{
  qword_1EEF34438 = 0;
}

double static HeightLayoutAttributes.zero.getter@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_1EEF2F8A0 != -1)
    swift_once();
  result = *(double *)&qword_1EEF34438;
  *a1 = qword_1EEF34438;
  return result;
}

uint64_t sub_1B15AA39C()
{
  return sub_1B146E354();
}

uint64_t sub_1B15AA3B8()
{
  return OUTLINED_FUNCTION_105();
}

uint64_t dispatch thunk of BlueprintLayoutAttributesType.height.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintLayoutAttributesType.shouldIntegral.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t _s5TeaUI29BlueprintLayoutAttributesTypeP13editingHeight12CoreGraphics7CGFloatVSgvgTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintLayoutHeaderFooterAttributesType.footerHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for HeightLayoutAttributes()
{
  return &type metadata for HeightLayoutAttributes;
}

uint64_t sub_1B15AA430()
{
  return sub_1B146E354();
}

uint64_t sub_1B15AA450()
{
  return OUTLINED_FUNCTION_105();
}

id sub_1B15AA464()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1B16B983C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

uint64_t sub_1B15AA4D4()
{
  return sub_1B16B9950();
}

id JSONText.text.getter()
{
  id *v0;

  return *v0;
}

uint64_t JSONText.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  void **v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t (*v35)();

  v4 = sub_1B16B98A8();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = sub_1B16B7874();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0];
  MEMORY[0x1E0C80A78](v6, v8);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = OUTLINED_FUNCTION_3_95();
  MEMORY[0x1E0C80A78](v11, v11);
  OUTLINED_FUNCTION_23_3();
  (*(void (**)(uint64_t))(v12 + 16))(v2);
  v35 = sub_1B14EC93C(v2, v9, v10);
  v34 = v13;
  sub_1B16B78A4();
  swift_allocObject();
  v14 = sub_1B16B7898();
  OUTLINED_FUNCTION_5_79(v14, &qword_1EEF33120, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B16C6D10;
  sub_1B16B785C();
  sub_1B16B7868();
  sub_1B16B7850();
  v16 = sub_1B13AD67C(&qword_1EEF33128, v7, MEMORY[0x1E0CAE0F8]);
  OUTLINED_FUNCTION_5_79(v16, &qword_1EEF33130, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B153E42C();
  sub_1B16BA448();
  sub_1B16B7880();
  OUTLINED_FUNCTION_3_95();
  v18 = sub_1B16B788C();
  v20 = v19;
  sub_1B16B989C();
  sub_1B15AABE0();
  v21 = sub_1B16B9884();
  if (v22)
    v23 = v21;
  else
    v23 = 0;
  if (v22)
    v24 = v22;
  else
    v24 = 0xE000000000000000;
  sub_1B13DE5B0(0, (unint64_t *)&qword_1ED1839A8, (uint64_t (*)(uint64_t))sub_1B14DD4E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v26 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
  v27 = *v26;
  *(_QWORD *)(inited + 32) = *v26;
  v28 = (void *)objc_opt_self();
  v29 = v27;
  v30 = OUTLINED_FUNCTION_4_81((uint64_t)objc_msgSend(v28, sel_labelColor), (unint64_t *)&qword_1ED1838C0);
  OUTLINED_FUNCTION_2_98(v30);
  sub_1B13AD67C((unint64_t *)&qword_1ED183838, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1B16C48F0);
  OUTLINED_FUNCTION_1_113();
  v31 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v32 = OUTLINED_FUNCTION_6_83(v23, v24);
  sub_1B147A604(v18, v20);
  swift_release();
  *a2 = v32;
  a2[1] = v35;
  a2[2] = v34;
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

unint64_t sub_1B15AA998()
{
  unint64_t result;

  result = qword_1ED1839E0;
  if (!qword_1ED1839E0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1839E0);
  }
  return result;
}

uint64_t JSONText.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[4];

  v5 = sub_1B16B98A8();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_23_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B16BAAC0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1B15AAC1C();
    sub_1B16BA91C();
    sub_1B16B989C();
    sub_1B15AABE0();
    v7 = sub_1B16B9884();
    v9 = v8;
    sub_1B147A604(v14, v15);
    if (v9)
    {
      v10 = v9;
    }
    else
    {
      v7 = 0;
      v10 = 0xE000000000000000;
    }
    sub_1B13A1BE4(0, (unint64_t *)&qword_1ED184898);
    sub_1B16B9740();
    v11 = sub_1B15AA464();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v7;
    *(_QWORD *)(v12 + 24) = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    *a2 = v11;
    a2[1] = sub_1B15AAC98;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t JSONText.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B15AABB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return JSONText.init(from:)(a1, a2);
}

uint64_t sub_1B15AABCC()
{
  return JSONText.encode(to:)();
}

unint64_t sub_1B15AABE0()
{
  unint64_t result;

  result = qword_1EEF34440;
  if (!qword_1EEF34440)
  {
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB0368], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEF34440);
  }
  return result;
}

unint64_t sub_1B15AAC1C()
{
  unint64_t result;

  result = qword_1EEF34448;
  if (!qword_1EEF34448)
  {
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEF34448);
  }
  return result;
}

uint64_t sub_1B15AAC58()
{
  return sub_1B15AA4D4();
}

uint64_t sub_1B15AAC74()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B15AAC98()
{
  return sub_1B15AAC58();
}

uint64_t initializeBufferWithCopyOfBuffer for JSONText(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for JSONText(id *a1)
{

  return swift_release();
}

uint64_t assignWithCopy for JSONText(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSONText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for JSONText()
{
  return &type metadata for JSONText;
}

BOOL static AppWindowState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AppWindowState.hash(into:)()
{
  return OUTLINED_FUNCTION_5_3();
}

BOOL static AppEnvironment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AppEnvironment.hash(into:)()
{
  return OUTLINED_FUNCTION_5_3();
}

void AppEnvironment.hashValue.getter()
{
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_159();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_68();
}

uint64_t AppURLHandlerType.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1B15AAF00();
  v6 = sub_1B16B9728();
  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a3 + 16))(a1, v6, 0, 0, a2, a3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B15AAF00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED17CBE8;
  if (!qword_1ED17CBE8)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = MEMORY[0x1B5E1F0E8](&unk_1B16C4824, v1);
    atomic_store(result, (unint64_t *)&qword_1ED17CBE8);
  }
  return result;
}

void sub_1B15AAF40(char *a1)
{
  char v1;

  v1 = *a1;
  sub_1B15AAF74(&v1);
}

void sub_1B15AAF74(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  OUTLINED_FUNCTION_13();
  *(_BYTE *)(v1 + 72) = v2;
  OUTLINED_FUNCTION_48();
}

uint64_t App.__allocating_init(application:monitor:sceneProvider:environment:)(uint64_t a1, uint64_t a2, __int128 *a3, char *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  App.init(application:monitor:sceneProvider:environment:)(a1, a2, a3, a4);
  return v8;
}

void sub_1B15AB008(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v10[6];

  v7 = *(void **)(v4 + 64);
  v8 = (void *)sub_1B16B7A78();
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1B15AAF00();
  v9 = (void *)sub_1B16B96EC();
  if (a3)
  {
    v10[4] = a3;
    v10[5] = a4;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1B13F8544;
    v10[3] = &block_descriptor_52;
    a3 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v7, sel_openURL_options_completionHandler_, v8, v9, a3);
  _Block_release(a3);

}

void sub_1B15AB104(_BYTE *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(*(id *)(v1 + 64), sel_applicationState);
  if ((unint64_t)v3 >= 3)
  {
    sub_1B16BA724();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)v3;
    OUTLINED_FUNCTION_7();
  }
}

void sub_1B15AB188(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  unsigned int v8;

  v3 = v1[6];
  v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v5 && (v6 = v5, v7 = objc_msgSend(v5, sel_activationState), v6, (unint64_t)v7 + 1 <= 3))
    v8 = 0x4020103u >> (8 * ((_BYTE)v7 + 1));
  else
    LOBYTE(v8) = 0;
  *a1 = v8;
}

uint64_t App.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return v0;
}

uint64_t App.__deallocating_deinit()
{
  App.deinit();
  return swift_deallocClassInstance();
}

void sub_1B15AB260(_BYTE *a1@<X8>)
{
  sub_1B15AB104(a1);
}

void sub_1B15AB280(_BYTE *a1@<X8>)
{
  sub_1B15AB188(a1);
}

void sub_1B15AB2A0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1B15AB008(a1, a2, a3, a4);
}

BOOL AppMonitorEvent.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_1B15AB2E4@<W0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _BOOL8 result;
  char v4;

  result = AppMonitorEvent.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void AppMonitor.isActive.getter()
{
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_48();
}

uint64_t (*AppMonitor.isActive.modify())()
{
  OUTLINED_FUNCTION_13();
  return j__swift_endAccess;
}

void sub_1B15AB3D4(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___TSAppMonitor_isTracking);
  OUTLINED_FUNCTION_13();
  *v3 = a1;
  OUTLINED_FUNCTION_48();
}

id AppMonitor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AppMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B15AB4A8()
{
  unint64_t result;

  result = qword_1EEF34470;
  if (!qword_1EEF34470)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for AppState, &type metadata for AppState);
    atomic_store(result, (unint64_t *)&qword_1EEF34470);
  }
  return result;
}

unint64_t sub_1B15AB4E8()
{
  unint64_t result;

  result = qword_1EEF34478;
  if (!qword_1EEF34478)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for AppWindowState, &type metadata for AppWindowState);
    atomic_store(result, (unint64_t *)&qword_1EEF34478);
  }
  return result;
}

unint64_t sub_1B15AB528()
{
  unint64_t result;

  result = qword_1EEF34480;
  if (!qword_1EEF34480)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for AppEnvironment, &type metadata for AppEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EEF34480);
  }
  return result;
}

unint64_t sub_1B15AB568()
{
  unint64_t result;

  result = qword_1EEF34488;
  if (!qword_1EEF34488)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for AppMonitorEvent, &type metadata for AppMonitorEvent);
    atomic_store(result, (unint64_t *)&qword_1EEF34488);
  }
  return result;
}

void sub_1B15AB5A4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 112))(&v3);
  *a2 = v3;
  OUTLINED_FUNCTION_7();
}

uint64_t storeEnumTagSinglePayload for AppState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15AB62C + 4 * byte_1B16D4985[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B15AB660 + 4 * asc_1B16D4980[v4]))();
}

uint64_t sub_1B15AB660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AB668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15AB670);
  return result;
}

uint64_t sub_1B15AB67C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15AB684);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B15AB688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AB690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AppState()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t storeEnumTagSinglePayload for AppWindowState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B15AB6F4 + 4 * byte_1B16D498F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B15AB728 + 4 * byte_1B16D498A[v4]))();
}

uint64_t sub_1B15AB728(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AB730(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15AB738);
  return result;
}

uint64_t sub_1B15AB744(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15AB74CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B15AB750(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AB758(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AppWindowState()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t storeEnumTagSinglePayload for AppEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B15AB7BC + 4 * byte_1B16D4999[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B15AB7F0 + 4 * byte_1B16D4994[v4]))();
}

uint64_t sub_1B15AB7F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AB7F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15AB800);
  return result;
}

uint64_t sub_1B15AB80C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15AB814);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B15AB818(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AB820(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AppEnvironment()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t dispatch thunk of AppURLHandlerType.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AppURLHandlerType.open(_:options:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of AppType.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AppType.windowState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AppType.monitor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AppType.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t method lookup function for App()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of App.environment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of App.__allocating_init(application:monitor:sceneProvider:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of App.open(_:options:completionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of App.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of App.windowState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

void type metadata accessor for AppMonitorEvent()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t sub_1B15AB8F8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id WindowScene.__allocating_init(session:connectionOptions:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithSession_connectionOptions_, a1, a2);

  return v5;
}

id WindowScene.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WindowScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of Prefetchable.isPrefetchable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1B15AB9B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return;
  v3 = a1;
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1B1490D34();
  v4 = v34;
  v5 = sub_1B1418940(v3);
  if (v5 < 0)
    goto LABEL_54;
  v7 = v5;
  if (v5 >= 1 << *(_BYTE *)(v3 + 32))
    goto LABEL_54;
  v8 = v3 + 64;
  v9 = 1;
  v27 = v3 + 64;
  v28 = v3;
  v26 = v1;
  while ((*(_QWORD *)(v8 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
  {
    if (*(_DWORD *)(v3 + 36) != v6)
      goto LABEL_50;
    v29 = v6;
    v30 = v4;
    v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v7);
    v11 = *v10;
    v12 = v10[1];
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v7);
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16BA574();
    sub_1B16B9740();
    swift_bridgeObjectRelease();
    v33 = v12;
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    v31 = v2;
    if (v13 >> 62)
    {
      sub_1B16B9740();
      v14 = sub_1B16BA76C();
      if (!v14)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        v18 = v2;
        if ((v2 & 0x8000000000000000) == 0)
          goto LABEL_22;
        goto LABEL_45;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1B16B9740();
      if (!v14)
        goto LABEL_21;
    }
    if (v14 < 1)
      goto LABEL_55;
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v16 = MEMORY[0x1B5E1DF60](i, v13);
      }
      else
      {
        v16 = *(_QWORD *)(v13 + 8 * i + 32);
        swift_retain();
      }
      v17 = MEMORY[0x1B5E1F2F8](v16 + 32);
      swift_unknownObjectRelease();
      if (v17)
      {
        sub_1B16BA61C();
        sub_1B16BA64C();
        sub_1B16BA658();
        sub_1B16BA628();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v18 = v31;
    v2 = MEMORY[0x1E0DEE9D8];
    if ((v31 & 0x8000000000000000) == 0)
    {
LABEL_22:
      if ((v18 & 0x4000000000000000) == 0)
        goto LABEL_23;
    }
LABEL_45:
    sub_1B16B9740();
    sub_1B16BA76C();
    swift_release();
LABEL_23:
    swift_release();
    sub_1B16BA8B0();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    v32 = v2;
    if (v14)
    {
      sub_1B16B9740();
      for (j = 0; j != v14; ++j)
      {
        if ((v13 & 0xC000000000000001) != 0)
        {
          v20 = MEMORY[0x1B5E1DF60](j, v13);
        }
        else
        {
          v20 = *(_QWORD *)(v13 + 8 * j + 32);
          swift_retain();
        }
        v21 = MEMORY[0x1B5E1F2F8](v20 + 32);
        swift_unknownObjectRelease();
        if (v21)
        {
          swift_release();
        }
        else
        {
          sub_1B16BA61C();
          sub_1B16BA64C();
          sub_1B16BA658();
          sub_1B16BA628();
        }
      }
      swift_bridgeObjectRelease();
      v22 = v32;
      v2 = MEMORY[0x1E0DEE9D8];
      if ((v32 & 0x8000000000000000) == 0)
      {
LABEL_35:
        if ((v22 & 0x4000000000000000) == 0)
          goto LABEL_36;
      }
    }
    else
    {
      v22 = v2;
      if ((v2 & 0x8000000000000000) == 0)
        goto LABEL_35;
    }
    sub_1B16B9740();
    sub_1B16BA76C();
    swift_release();
LABEL_36:
    swift_release();
    sub_1B16BA8B0();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v30;
    v23 = *(_QWORD *)(v30 + 16);
    if (v23 >= *(_QWORD *)(v30 + 24) >> 1)
    {
      sub_1B1490D34();
      v4 = v30;
    }
    *(_QWORD *)(v4 + 16) = v23 + 1;
    v24 = v4 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v11;
    *(_QWORD *)(v24 + 40) = v33;
    v3 = v28;
    if ((uint64_t)v7 >= -(-1 << *(_BYTE *)(v28 + 32)))
      goto LABEL_51;
    v8 = v27;
    if ((*(_QWORD *)(v27 + 8 * (v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_52;
    if (*(_DWORD *)(v28 + 36) != v29)
      goto LABEL_53;
    v25 = sub_1B16BA460();
    if (v9 == v26)
      return;
    v7 = v25;
    if ((v25 & 0x8000000000000000) == 0)
    {
      v6 = *(_DWORD *)(v28 + 36);
      ++v9;
      if (v25 < 1 << *(_BYTE *)(v28 + 32))
        continue;
    }
    goto LABEL_54;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  __break(1u);
}

uint64_t sub_1B15ABEBC(uint64_t a1)
{
  int64_t v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  uint64_t v40;

  v32 = MEMORY[0x1E0DEE9E0];
  v40 = MEMORY[0x1E0DEE9E0];
  sub_1B13C5AF4(a1, v39);
  v33 = v39[1];
  v1 = v39[3];
  v2 = v39[4];
  v34 = (unint64_t)(v39[2] + 64) >> 6;
  v35 = v39[0];
  result = sub_1B16B9740();
  v4 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        v5 = __clz(__rbit64(v2));
        v2 &= v2 - 1;
        v6 = v5 | (v1 << 6);
      }
      else
      {
        v7 = v1 + 1;
        if (__OFADD__(v1, 1))
          goto LABEL_53;
        if (v7 >= v34)
          goto LABEL_51;
        v8 = *(_QWORD *)(v33 + 8 * v7);
        v9 = v1 + 1;
        if (!v8)
        {
          v9 = v1 + 2;
          if (v1 + 2 >= v34)
            goto LABEL_51;
          v8 = *(_QWORD *)(v33 + 8 * v9);
          if (!v8)
          {
            v9 = v1 + 3;
            if (v1 + 3 >= v34)
              goto LABEL_51;
            v8 = *(_QWORD *)(v33 + 8 * v9);
            if (!v8)
            {
              v9 = v1 + 4;
              if (v1 + 4 >= v34)
                goto LABEL_51;
              v8 = *(_QWORD *)(v33 + 8 * v9);
              if (!v8)
              {
                v9 = v1 + 5;
                if (v1 + 5 >= v34)
                  goto LABEL_51;
                v8 = *(_QWORD *)(v33 + 8 * v9);
                if (!v8)
                {
                  v10 = v1 + 6;
                  while (v10 < v34)
                  {
                    v8 = *(_QWORD *)(v33 + 8 * v10++);
                    if (v8)
                    {
                      v9 = v10 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_51:
                  sub_1B1488298();
                  return v32;
                }
              }
            }
          }
        }
LABEL_19:
        v2 = (v8 - 1) & v8;
        v6 = __clz(__rbit64(v8)) + (v9 << 6);
        v1 = v9;
      }
      v11 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v6);
      v12 = v11[1];
      v36 = *v11;
      v13 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v6);
      v38 = v4;
      if (v13 >> 62)
        break;
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      result = sub_1B16B9740();
      if (v14)
        goto LABEL_22;
LABEL_34:
      swift_bridgeObjectRelease();
      v19 = v4;
      if (v4 < 0)
        goto LABEL_38;
LABEL_35:
      if ((v19 & 0x4000000000000000) != 0)
        goto LABEL_38;
      if (*(_QWORD *)(v19 + 16))
        goto LABEL_39;
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
    }
    swift_bridgeObjectRetain_n();
    sub_1B16B9740();
    result = sub_1B16BA76C();
    v14 = result;
    if (!result)
      goto LABEL_34;
LABEL_22:
    if (v14 < 1)
      break;
    v37 = v2;
    v15 = v4;
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v17 = MEMORY[0x1B5E1DF60](i, v13);
      }
      else
      {
        v17 = *(_QWORD *)(v13 + 8 * i + 32);
        swift_retain();
      }
      v18 = MEMORY[0x1B5E1F2F8](v17 + 32);
      swift_unknownObjectRelease();
      if (v18)
      {
        sub_1B16BA61C();
        sub_1B16BA64C();
        sub_1B16BA658();
        sub_1B16BA628();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v4 = v15;
    v2 = v37;
    v19 = v38;
    if ((v38 & 0x8000000000000000) == 0)
      goto LABEL_35;
LABEL_38:
    swift_retain();
    v20 = sub_1B16BA76C();
    swift_release();
    if (!v20)
      goto LABEL_37;
LABEL_39:
    v21 = v32;
    if (*(_QWORD *)(v32 + 24) <= *(_QWORD *)(v32 + 16))
    {
      sub_1B1487C5C();
      v21 = v40;
    }
    sub_1B16BAA48();
    sub_1B16B98FC();
    result = sub_1B16BAA78();
    v22 = v21 + 64;
    v32 = v21;
    v23 = -1 << *(_BYTE *)(v21 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v21 + 64 + 8 * (v24 >> 6))) == 0)
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v28 || (v27 & 1) == 0)
      {
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v22 + 8 * v25);
        if (v30 != -1)
        {
          v26 = __clz(__rbit64(~v30)) + (v25 << 6);
          goto LABEL_50;
        }
      }
      goto LABEL_54;
    }
    v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v21 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_50:
    *(_QWORD *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * v26);
    *v31 = v36;
    v31[1] = v12;
    *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v26) = v19;
    ++*(_QWORD *)(v21 + 16);
    result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

Swift::Void __swiftcall CommandStateObserver.dispose()()
{
  swift_unknownObjectWeakAssign();
}

uint64_t CommandStateObserver.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1B13C076C(v0 + 32);
  return v0;
}

uint64_t CommandStateObserver.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1B13C076C(v0 + 32);
  return swift_deallocClassInstance();
}

void sub_1B15AC370()
{
  CommandStateObserver.dispose()();
}

void sub_1B15AC390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  OUTLINED_FUNCTION_13();
  v1 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v1 + 64);
  v3 = v1 + 64;
  v2 = v4;
  v5 = 1 << *(_BYTE *)(*(_QWORD *)(v0 + 16) + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v2;
  v8 = (unint64_t)(v5 + 63) >> 6;
  OUTLINED_FUNCTION_49();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  for (v7 &= v7 - 1; ; v7 = (v11 - 1) & v11)
  {
    sub_1B16B9740();
    sub_1B1404B40();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_5:
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v8)
      goto LABEL_25;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v8)
        goto LABEL_25;
      v11 = *(_QWORD *)(v3 + 8 * v9);
      if (!v11)
      {
        v9 = v10 + 2;
        if (v10 + 2 >= v8)
          goto LABEL_25;
        v11 = *(_QWORD *)(v3 + 8 * v9);
        if (!v11)
        {
          v9 = v10 + 3;
          if (v10 + 3 >= v8)
            goto LABEL_25;
          v11 = *(_QWORD *)(v3 + 8 * v9);
          if (!v11)
          {
            v9 = v10 + 4;
            if (v10 + 4 >= v8)
              goto LABEL_25;
            v11 = *(_QWORD *)(v3 + 8 * v9);
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  v12 = v10 + 5;
  if (v12 >= v8)
  {
LABEL_25:
    swift_release();
    OUTLINED_FUNCTION_23_1();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v8)
      goto LABEL_25;
    v11 = *(_QWORD *)(v3 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1B15AC514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13();
  v1 = OUTLINED_FUNCTION_49();
  v2 = sub_1B15ABEBC(v1);
  OUTLINED_FUNCTION_29();
  *(_QWORD *)(v0 + 16) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t CommandStateObserverStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CommandStateObserverStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t CommandStateObserverStore.description.getter()
{
  uint64_t v0;

  sub_1B16BA574();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13();
  v0 = OUTLINED_FUNCTION_49();
  sub_1B15AB9B4(v0);
  OUTLINED_FUNCTION_29();
  sub_1B141116C();
  sub_1B140462C();
  sub_1B16B9800();
  OUTLINED_FUNCTION_20_0();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return 0xD00000000000001FLL;
}

unint64_t sub_1B15AC6CC()
{
  return CommandStateObserverStore.description.getter();
}

uint64_t method lookup function for CommandStateObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for CommandStateObserverStore()
{
  return swift_lookUpClassMethod();
}

uint64_t CachedFont.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CachedFont.init(_:)(a1, a2);
  return v4;
}

void sub_1B15AC750()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 32) = 0;

}

uint64_t method lookup function for CachedFont()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CachedFont.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void RadialGradientSectionDecorationItem.Size.Value.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t static RadialGradientSectionDecorationItem.Size.Value.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

void sub_1B15AC84C(double *a1@<X0>, uint64_t a2@<X8>)
{
  RadialGradientSectionDecorationItem.Size.Value.init(floatLiteral:)(a2, *a1);
}

void RadialGradientSectionDecorationItem.Size.init(width:height:)(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_2_65(a1);
}

uint64_t static RadialGradientSectionDecorationItem.Size.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *(_BYTE *)(a2 + 8);
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t RadialGradientSectionDecorationItem.gradientDescriptor.getter@<X0>(void *a1@<X8>)
{
  const void *v1;
  _BYTE v4[144];

  OUTLINED_FUNCTION_1_114(v4, v1);
  OUTLINED_FUNCTION_1_114(a1, v1);
  return sub_1B1531D08((uint64_t)v4);
}

void RadialGradientSectionDecorationItem.gradientSize.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_2_65(a1);
}

void RadialGradientSectionDecorationItem.overscrollPinPosition.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 169);
}

void RadialGradientSectionDecorationItem.ordering.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_32_1(a1);
}

void RadialGradientSectionDecorationItem.pinTrait.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_32_1(a1);
}

void RadialGradientSectionDecorationItem.init(gradientDescriptor:ordering:pinTrait:)(const void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  OUTLINED_FUNCTION_1_114((void *)a4, a1);
  v7 = *a2;
  v8 = *a3;
  v9 = *((_BYTE *)a3 + 8);
  v10 = *((_BYTE *)a2 + 8);
  *(_QWORD *)(a4 + 144) = 0;
  *(_BYTE *)(a4 + 152) = 1;
  *(_QWORD *)(a4 + 160) = 0;
  *(_WORD *)(a4 + 168) = 769;
  *(_QWORD *)(a4 + 176) = v7;
  *(_BYTE *)(a4 + 184) = v10;
  *(_QWORD *)(a4 + 192) = v8;
  *(_BYTE *)(a4 + 200) = v9;
  OUTLINED_FUNCTION_90();
}

void RadialGradientSectionDecorationItem.init(gradientDescriptor:gradientSize:ordering:pinTrait:)(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  OUTLINED_FUNCTION_1_114((void *)a5, a1);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *a3;
  v12 = *a4;
  v13 = *((_BYTE *)a4 + 8);
  v9 = *(_BYTE *)(a2 + 8);
  v15 = *(_BYTE *)(a2 + 24);
  v14 = *((_BYTE *)a3 + 8);
  *(_QWORD *)(a5 + 144) = *(_QWORD *)a2;
  *(_BYTE *)(a5 + 152) = v9;
  *(_QWORD *)(a5 + 160) = v10;
  *(_BYTE *)(a5 + 168) = v15;
  *(_BYTE *)(a5 + 169) = 3;
  *(_QWORD *)(a5 + 176) = v11;
  *(_BYTE *)(a5 + 184) = v14;
  *(_QWORD *)(a5 + 192) = v12;
  *(_BYTE *)(a5 + 200) = v13;
  OUTLINED_FUNCTION_90();
}

void *RadialGradientSectionDecorationItem.init(gradientDescriptor:gradientSize:overscrollPinPosition:ordering:pinTrait:)@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  void *result;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  result = OUTLINED_FUNCTION_1_114((void *)a6, a1);
  v13 = *(_QWORD *)(a2 + 16);
  v14 = *a3;
  v15 = *a4;
  v16 = *a5;
  v17 = *((_BYTE *)a5 + 8);
  v12 = *(_BYTE *)(a2 + 8);
  v19 = *(_BYTE *)(a2 + 24);
  v18 = *((_BYTE *)a4 + 8);
  *(_QWORD *)(a6 + 144) = *(_QWORD *)a2;
  *(_BYTE *)(a6 + 152) = v12;
  *(_QWORD *)(a6 + 160) = v13;
  *(_BYTE *)(a6 + 168) = v19;
  *(_BYTE *)(a6 + 169) = v14;
  *(_QWORD *)(a6 + 176) = v15;
  *(_BYTE *)(a6 + 184) = v18;
  *(_QWORD *)(a6 + 192) = v16;
  *(_BYTE *)(a6 + 200) = v17;
  return result;
}

BOOL static RadialGradientSectionDecorationItem.== infix(_:_:)(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  double v6;
  char v7;
  double v8;
  char v9;
  int v10;
  double v11;
  int v12;
  double v13;
  int v14;
  int v15;
  BOOL v16;
  char v17;
  _BOOL8 result;
  char v19;
  char v20;
  _BOOL4 v22;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = a1[18];
  v7 = *((_BYTE *)a1 + 152);
  v8 = a1[20];
  v9 = *((_BYTE *)a1 + 168);
  v10 = *((unsigned __int8 *)a1 + 169);
  v11 = *(double *)(a2 + 144);
  v12 = *(unsigned __int8 *)(a2 + 152);
  v13 = *(double *)(a2 + 160);
  v14 = *(unsigned __int8 *)(a2 + 168);
  v15 = *(unsigned __int8 *)(a2 + 169);
  v16 = *(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == *(_QWORD *)(a2 + 8);
  if (v16 || (v17 = sub_1B16BA910(*(_QWORD *)&v4, v5, *(_QWORD *)a2), result = 0, (v17 & 1) != 0))
  {
    if ((v7 & 1) != 0)
    {
      if (!v12)
        return 0;
    }
    else
    {
      if (v6 == v11)
        v19 = v12;
      else
        v19 = 1;
      if ((v19 & 1) != 0)
        return 0;
    }
    if ((v9 & 1) != 0)
    {
      if (!v14)
        return 0;
    }
    else
    {
      if (v8 == v13)
        v20 = v14;
      else
        v20 = 1;
      if ((v20 & 1) != 0)
        return 0;
    }
    v22 = v15 != 3 && v10 == v15;
    if (v10 == 3)
      return v15 == 3;
    else
      return v22;
  }
  return result;
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.willMove(toSuperview:)(UIView_optional *toSuperview)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)OUTLINED_FUNCTION_4();
  -[UIView_optional willMoveToSuperview:](&v3, sel_willMoveToSuperview_, toSuperview);
  OUTLINED_FUNCTION_7();
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.didMoveToSuperview()()
{
  sub_1B14994C8((SEL *)&selRef_didMoveToSuperview);
}

id RadialGradientSectionDecorationView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

char *RadialGradientSectionDecorationView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  char *v5;
  double v6;
  objc_super *v7;
  SEL v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  double Width;
  CGRect v16;
  CGRect v17;

  OUTLINED_FUNCTION_57();
  v1 = OUTLINED_FUNCTION_4();
  v2 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  v3 = objc_allocWithZone((Class)type metadata accessor for RadialGradientView());
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = &v4[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  *((_QWORD *)v5 + 2) = 0;
  v5[24] = 1;
  v4[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] = 3;

  v6 = OUTLINED_FUNCTION_54();
  v9 = (char *)objc_msgSendSuper2(v7, v8, v6, v4, v1);
  v10 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  v11 = *(_QWORD *)&v9[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView];
  v12 = v9;
  objc_msgSend(v12, sel_addSubview_, v11);
  v13 = *(id *)&v9[v10];
  v16.origin.x = OUTLINED_FUNCTION_54();
  Width = CGRectGetWidth(v16);
  v17.origin.x = OUTLINED_FUNCTION_54();
  objc_msgSend(v13, sel_setFrame_, 0.0, 0.0, Width, CGRectGetHeight(v17));

  return v12;
}

id RadialGradientSectionDecorationView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void RadialGradientSectionDecorationView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RadialGradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = &v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *((_QWORD *)v2 + 2) = 0;
  v2[24] = 1;
  v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] = 3;

  sub_1B16BA724();
  __break(1u);
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.layoutSubviews()()
{
  char *v0;
  uint64_t v1;
  id v2;
  double MinX;
  double MinY;
  double *v5;
  double Width;
  int v7;
  uint64_t v8;
  double Height;
  int v13;
  uint64_t v14;
  objc_super v18[4];
  objc_super v19;
  objc_super v20;
  objc_super v21;
  CGRect v22;
  CGRect v23;

  v18[0].receiver = v0;
  v18[0].super_class = (Class)OUTLINED_FUNCTION_4();
  -[objc_super layoutSubviews](v18, sel_layoutSubviews);
  v1 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView], sel_transform);
  v18[1] = v19;
  v18[2] = v20;
  v18[3] = v21;
  v19 = (objc_super)0x3FF0000000000000uLL;
  v20.receiver = 0;
  v20.super_class = (Class)0x3FF0000000000000;
  v21 = (objc_super)0;
  if ((sub_1B16BA07C() & 1) != 0)
  {
    v2 = *(id *)&v0[v1];
    objc_msgSend(v2, sel_frame);
    MinX = CGRectGetMinX(v22);
    objc_msgSend(*(id *)&v0[v1], sel_frame);
    MinY = CGRectGetMinY(v23);
    v5 = (double *)&v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
    Width = *(double *)&v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
    v7 = v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize + 8];
    OUTLINED_FUNCTION_2_4();
    if (v7 == 1)
      Width = CGRectGetWidth(*(CGRect *)&v8);
    Height = v5[2];
    v13 = *((unsigned __int8 *)v5 + 24);
    OUTLINED_FUNCTION_2_4();
    if (v13 == 1)
      Height = CGRectGetHeight(*(CGRect *)&v14);
    objc_msgSend(v2, sel_setFrame_, MinX, MinY, Width, Height);

  }
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.apply(_:)(UICollectionViewLayoutAttributes *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  UICollectionViewLayoutAttributes *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  char v13;
  uint64_t v14;
  char v15;
  char *v16;
  _BYTE v17[144];
  _QWORD __dst[26];
  _BYTE v19[144];
  _BYTE __src[208];
  _BYTE v21[24];
  uint64_t v22;
  objc_super v23;

  v2 = v1;
  v23.receiver = v2;
  v23.super_class = (Class)swift_getObjectType();
  -[UICollectionViewLayoutAttributes applyLayoutAttributes:](&v23, sel_applyLayoutAttributes_, a1);
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = v4 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_model;
    swift_beginAccess();
    sub_1B1457354(v5, (uint64_t)v21);
    if (v22)
    {
      sub_1B1406A1C();
      v6 = a1;
      if ((swift_dynamicCast() & 1) != 0)
      {
        memcpy(__dst, __src, 0xC9uLL);
        v7 = *(void **)&v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView];
        OUTLINED_FUNCTION_1_114(v19, __src);
        nullsub_1(v19, v8, v9, v10, v11);
        sub_1B15AD390((uint64_t)v19, (uint64_t)v17);
        v12 = v7;
        sub_1B1531D08((uint64_t)__dst);
        RadialGradientView.gradientDescriptor.setter((uint64_t)v17);

        v13 = __dst[19];
        v14 = __dst[20];
        v15 = __dst[21];
        v16 = &v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
        *(_QWORD *)v16 = __dst[18];
        v16[8] = v13;
        *((_QWORD *)v16 + 2) = v14;
        v16[24] = v15;
        sub_1B15AD41C((uint64_t)__dst);
        v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] = BYTE1(__dst[21]);
      }
      else
      {

      }
    }
    else
    {
      sub_1B1497A44((uint64_t)v21);
    }
  }
}

void RadialGradientSectionDecorationView.__deallocating_deinit()
{
  sub_1B14994C8((SEL *)&selRef_dealloc);
}

BOOL RadialGradientSectionDecorationView.shouldMonitorScroll.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition) != 3;
}

uint64_t RadialGradientSectionDecorationView.shouldMonitorMotion.getter()
{
  return 0;
}

void RadialGradientSectionDecorationView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v4;

  if (v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] != 3)
  {
    v4 = *(id *)&v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView];
    sub_1B167467C(v4, v2, a2);

  }
}

uint64_t sub_1B15AD390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B15AD3D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B15AD3D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF344A8)
  {
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF344A8);
  }
}

uint64_t sub_1B15AD41C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for RadialGradientDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RadialGradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  return a1;
}

uint64_t assignWithCopy for RadialGradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 32);
  v5 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 88);
  v7 = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_1B16B9740();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v8;
  v9 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v9;
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  v10 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v10;
  v11 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v11;
  return a1;
}

void *__swift_memcpy201_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC9uLL);
}

uint64_t assignWithTake for RadialGradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for RadialGradientSectionDecorationItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 201))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RadialGradientSectionDecorationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 200) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 201) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 201) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RadialGradientSectionDecorationItem.Size()
{
  OUTLINED_FUNCTION_11_0();
}

void type metadata accessor for RadialGradientSectionDecorationItem.Size.Value()
{
  OUTLINED_FUNCTION_11_0();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.supplementarySolver.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.prepare(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.layout(frame:for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.adjust(frame:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.update(cursor:frame:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.commit(cursor:union:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.fill(initialCursor:cursor:unionFrame:headerUnionFrame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

id KeyCommandCenter.__allocating_init(commandCenter:commands:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_134());
  return KeyCommandCenter.init(commandCenter:commands:)();
}

id KeyCommandCenter.init(commandCenter:commands:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  objc_super v8;

  OUTLINED_FUNCTION_0_134();
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v1[OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_stagedTracker];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = &v1[OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter];
  *(_QWORD *)v6 = v3;
  *((_QWORD *)v6 + 1) = v2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandItems] = v0;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

void KeyCommandCenter.handleKeyCommand(sender:)(uint64_t a1)
{
  void *v1;
  _BYTE v2[32];

  sub_1B14297B8(a1, (uint64_t)v2);
  sub_1B15AD944();
  if (swift_dynamicCast())
  {
    sub_1B15AD980(v1);

  }
}

unint64_t sub_1B15AD944()
{
  unint64_t result;

  result = qword_1ED1837A8;
  if (!qword_1ED1837A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1837A8);
  }
  return result;
}

uint64_t sub_1B15AD980(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD, uint64_t);
  char v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[40];
  _BYTE v30[48];

  v3 = v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_stagedTracker;
  swift_beginAccess();
  sub_1B13E4484(v3, (uint64_t)&v27);
  if (!v28)
    return sub_1B13E418C((uint64_t)&v27);
  sub_1B13C06D0(&v27, (uint64_t)v29);
  sub_1B15AE2E4(a1, &v27);
  v26 = 8;
  sub_1B13B4DC0((uint64_t)v29, (uint64_t)v16);
  memset(v30, 0, 32);
  v30[32] = 1;
  type metadata accessor for CommandExecutionSource();
  v4 = swift_allocObject();
  v5 = v17;
  v6 = v18;
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
  MEMORY[0x1E0C80A78](v7, v7);
  v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  sub_1B164D160((uint64_t)&v26, (uint64_t)v9, 0, (uint64_t)v30, 0, 0, 0, v4, v5, v6, v15, v16[0], v16[1], v16[2], v17, v18, v19, v20, v21,
    v22,
    v23,
    v24);
  v12 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_1B15AE538((uint64_t)&v27, (uint64_t)v16);
  if (v17)
  {
    v13 = v25;
    swift_retain();
    sub_1B15AE58C((uint64_t)v16);
    v13(*(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter), *(_QWORD *)(v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter + 8), v12);
    swift_release();
    swift_release();
    sub_1B1406294((uint64_t)&v27, &qword_1EEF344C8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    swift_release();
    sub_1B1406294((uint64_t)&v27, &qword_1EEF344C8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return sub_1B1406294((uint64_t)v16, &qword_1EEF344C8);
  }
}

uint64_t KeyCommandCenter.keyCommands(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[40];

  sub_1B13B4DC0(a1, (uint64_t)v4);
  v2 = v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_stagedTracker;
  swift_beginAccess();
  sub_1B15ADC60((uint64_t)v4, v2);
  swift_endAccess();
  return sub_1B15ADD10();
}

uint64_t sub_1B15ADC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13DE5B0(0, &qword_1ED17E900, (uint64_t (*)(uint64_t))sub_1B15ADCBC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B15ADCBC()
{
  unint64_t result;

  result = qword_1ED17E8F0;
  if (!qword_1ED17E8F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED17E8F0);
  }
  return result;
}

uint64_t sub_1B15ADD10()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  _BYTE *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;

  result = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandItems);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    sub_1B16B9740();
    for (i = (_BYTE *)(v2 + 112); ; i += 136)
    {
      v5 = *((_QWORD *)i - 5);
      v6 = *((_QWORD *)i - 4);
      v7 = *((_QWORD *)i - 3);
      if ((*i & 1) != 0)
      {
        v9 = *((_QWORD *)i - 2);
        v8 = *((_QWORD *)i - 1);
        v10 = sub_1B15AE0E0((uint64_t)(i - 80), v5, v6, v8, 0);
        if (v10)
        {
          v11 = v10;
          v12 = sub_1B15AE0E0((uint64_t)(i - 80), v7, v9, v8, 1);
          if (v12)
          {
            v13 = v12;
            v11 = v11;
            MEMORY[0x1B5E1D4C8]();
            if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1B16B9BCC();
            sub_1B16B9C08();
            sub_1B16B9B78();
            v14 = v13;
            MEMORY[0x1B5E1D4C8]();
            if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1B16B9BCC();
            sub_1B16B9C08();
            sub_1B16B9B78();

          }
LABEL_15:

        }
      }
      else
      {
        v15 = sub_1B15AE0E0((uint64_t)(i - 80), v5, v6, *((_QWORD *)i - 3), 1);
        if (v15)
        {
          v11 = v15;
          MEMORY[0x1B5E1D4C8]();
          if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B16B9BCC();
          sub_1B16B9C08();
          sub_1B16B9B78();
          goto LABEL_15;
        }
      }
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
  }
  return result;
}

uint64_t KeyCommandCenter.canPerformAction(_:withSender:)()
{
  return sub_1B16B7D6C();
}

id KeyCommandCenter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void KeyCommandCenter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id KeyCommandCenter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of KeyCommandCenterType.handleKeyCommand(sender:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of KeyCommandCenterType.keyCommands(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for KeyCommandCenter()
{
  return objc_opt_self();
}

uint64_t method lookup function for KeyCommandCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyCommandCenter.__allocating_init(commandCenter:commands:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void *sub_1B15AE0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  char v20;

  v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter);
  v9 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter + 8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a1 + 104))(v8, v9) & 1) == 0)
    return 0;
  v20 = a5;
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 120))(v8, v9);
  v12 = v11;
  sub_1B13DE5B0(0, &qword_1ED17E0B0, (uint64_t (*)(uint64_t))sub_1B14AA8AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B16C51D0;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x80000001B16EFA40;
  v15 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v15);
  *(_QWORD *)(inited + 48) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
  *(_QWORD *)(inited + 56) = v16;
  sub_1B16B9728();
  sub_1B15AD944();
  sub_1B15AE5C0(0, (unint64_t *)&qword_1ED17E080);
  sub_1B16B9740();
  sub_1B16B9740();
  v19 = MEMORY[0x1E0DEE9D8];
  v17 = (void *)sub_1B16BA010();
  if ((v20 & 1) != 0)
  {
    sub_1B14E8EF8(v10, v12, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setAttributes_, 4, v19, 0, 0, 0, 0);
  }
  return v17;
}

void sub_1B15AE2E4(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15[17];
  _OWORD v16[2];

  if (objc_msgSend(a1, sel_propertyList))
  {
    sub_1B16BA3AC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1B13F77B0((uint64_t)v16, (uint64_t)v15);
  if (!v15[3])
    goto LABEL_17;
  sub_1B15AE5C0(0, &qword_1EEF344D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    bzero(a2, 0x88uLL);
    return;
  }
  sub_1B146AC30();
  swift_bridgeObjectRelease();
  if (!v15[3])
  {
LABEL_17:
    sub_1B1406294((uint64_t)v15, (unint64_t *)&qword_1ED188590);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_18;
  v4 = *((_QWORD *)&v16[0] + 1);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandItems);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)&v16[0];
    v8 = v5 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1B1579FCC(v8, (uint64_t)v15);
      v9 = v15[3];
      v10 = v15[4];
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      if (v11 == v7 && v12 == v4)
        break;
      v14 = sub_1B16BA910(v11, v12, v7);
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_22;
      sub_1B15AE58C((uint64_t)v15);
      v8 += 136;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    memcpy(a2, v15, 0x88uLL);
  }
  else
  {
    sub_1B16B9740();
LABEL_20:
    bzero(a2, 0x88uLL);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1B15AE538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B13F4318(0, &qword_1EEF344C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B15AE58C(uint64_t a1)
{
  destroy for KeyCommandItem(a1);
  return a1;
}

void sub_1B15AE5C0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1B16B9788();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void DebugDataSource.__allocating_init()()
{
  swift_allocObject();
  DebugDataSource.init()();
  OUTLINED_FUNCTION_0_0();
}

uint64_t DebugDataSource.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  sub_1B1426CBC();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B16C95E0;
  v3 = type metadata accessor for DebugSection();
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 24) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v2 + 32) = v4;
  v6 = OUTLINED_FUNCTION_1_115();
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v2 + 40) = v6;
  v7 = OUTLINED_FUNCTION_1_115();
  *(_QWORD *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 16) = 2;
  *(_QWORD *)(v2 + 48) = v7;
  v8 = OUTLINED_FUNCTION_1_115();
  *(_QWORD *)(v8 + 24) = v5;
  *(_BYTE *)(v8 + 16) = 3;
  *(_QWORD *)(v2 + 56) = v8;
  sub_1B16B9B78();
  sub_1B13B13B4(&qword_1ED1878B0, (uint64_t (*)(uint64_t))type metadata accessor for DebugSection, (uint64_t)&unk_1B16E1434);
  v10 = v9;
  sub_1B13B13B4(&qword_1ED1878A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugSection, (uint64_t)&unk_1B16E140C);
  MEMORY[0x1B5E1BD88](v2, v3, v10, v11);
  return v1;
}

void sub_1B15AE774(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v15 = a4;
  v18 = a2;
  v14 = a1;
  OUTLINED_FUNCTION_5_80();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a3;
  v19 = a3[5];
  v12 = *((unsigned __int8 *)a3 + 48);
  v13 = v4 + OBJC_IVAR____TtC5TeaUI15DebugDataSource_sections;
  OUTLINED_FUNCTION_30();
  v17 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v13, v7);
  __asm { BR              X9 }
}

void sub_1B15AE854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_0_135();
  *(_QWORD *)(v8 - 224) = v0;
  *(_QWORD *)(v8 - 216) = v2;
  v9 = v7;
  v10 = v6;
  v11 = v4;
  v12 = *(_QWORD *)(v8 - 208);
  sub_1B16B9740();
  sub_1B16B8498();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 232) + 8))(v5, v1);
  if (*(_QWORD *)(v8 - 120))
  {
    *(_QWORD *)(v8 - 192) = *(_QWORD *)(v8 - 256);
    *(_QWORD *)(v8 - 184) = v12;
    *(_QWORD *)(v8 - 176) = v11;
    *(_QWORD *)(v8 - 168) = v3;
    *(_QWORD *)(v8 - 160) = v10;
    *(_QWORD *)(v8 - 152) = v9;
    v14 = *(_QWORD *)(v8 - 224);
    v13 = *(_QWORD *)(v8 - 216);
    v15 = *(_QWORD *)(v8 - 200);
    *(_QWORD *)(v8 - 144) = v13;
    *(_QWORD *)(v8 - 136) = v15;
    *(_BYTE *)(v8 - 128) = v14;
    sub_1B1679BD0((uint64_t *)(v8 - 192), *(_DWORD *)(v8 - 244) & 1);
    swift_bridgeObjectRelease();
    swift_release();
    v16 = OUTLINED_FUNCTION_6_84();
    v20 = v13;
    v21 = v15;
    LOBYTE(v22) = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = OUTLINED_FUNCTION_6_84();
    v22 = *(_QWORD *)(v8 - 224);
    v20 = *(_QWORD *)(v8 - 216);
    v21 = *(_QWORD *)(v8 - 200);
  }
  sub_1B15AED18(v16, v17, v18, v19, v20, v21, v22);
  OUTLINED_FUNCTION_47();
}

void sub_1B15AE960()
{
  sub_1B16B9740();
  sub_1B16B9740();
  sub_1B16B9740();
  JUMPOUT(0x1B15AE868);
}

void sub_1B15AE98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  __int128 v4;
  _OWORD v5[3];
  char v6;

  v3 = *(_BYTE *)(a3 + 48);
  v4 = *(_OWORD *)(a3 + 16);
  v5[0] = *(_OWORD *)a3;
  v5[1] = v4;
  v5[2] = *(_OWORD *)(a3 + 32);
  v6 = v3;
  sub_1B15AE774(a1, a2, (uint64_t *)v5, 1);
}

void sub_1B15AE9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD);
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36[4];
  uint64_t v37;

  sub_1B15AEE6C();
  v2 = v1;
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_5_80();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v10 = MEMORY[0x1E0C80A78](v6, v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v10, v13);
  v16 = (char *)&v33 - v15;
  MEMORY[0x1E0C80A78](v14, v17);
  v35 = (char *)&v33 - v18;
  v19 = v0 + OBJC_IVAR____TtC5TeaUI15DebugDataSource_sections;
  OUTLINED_FUNCTION_30();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v34 = v19;
  v20(v16, v19, v7);
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1B13B13B4(&qword_1EEF344E0, (uint64_t (*)(uint64_t))sub_1B13B1310, MEMORY[0x1E0DB3DB8]);
  sub_1B16B99EC();
  v21 = &v5[*(int *)(v2 + 36)];
  sub_1B13B13B4(&qword_1EEF38080, (uint64_t (*)(uint64_t))sub_1B13B1310, MEMORY[0x1E0DB3DC0]);
  while (1)
  {
    v22 = *(_QWORD *)v21;
    sub_1B16B9EB4();
    if (v22 == v36[0])
      break;
    v23 = (void (*)(uint64_t *, _QWORD))sub_1B16B9FA4();
    v25 = *v24;
    swift_retain();
    v23(v36, 0);
    v20(v12, (uint64_t)v5, v7);
    sub_1B16B9EC0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    OUTLINED_FUNCTION_30();
    if (*(_QWORD *)(*(_QWORD *)(v25 + 24) + 16))
    {
      sub_1B16BA61C();
      sub_1B16BA64C();
      sub_1B16BA658();
      sub_1B16BA628();
    }
    else
    {
      swift_release();
    }
  }
  sub_1B15AEEE4((uint64_t)v5);
  v26 = v37;
  v27 = type metadata accessor for DebugSection();
  sub_1B13B13B4(&qword_1ED1878B0, (uint64_t (*)(uint64_t))type metadata accessor for DebugSection, (uint64_t)&unk_1B16E1434);
  v29 = v28;
  sub_1B13B13B4(&qword_1ED1878A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugSection, (uint64_t)&unk_1B16E140C);
  v30 = v35;
  MEMORY[0x1B5E1BD88](v26, v27, v29, v31);
  v32 = v34;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v32, v30, v7);
  swift_endAccess();
  OUTLINED_FUNCTION_47();
}

void DebugDataSource.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_80();
  OUTLINED_FUNCTION_20_1(v0);
  OUTLINED_FUNCTION_0_0();
}

uint64_t DebugDataSource.__deallocating_deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_80();
  OUTLINED_FUNCTION_20_1(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_1B15AED18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 8:
    case 10:
    case 11:
    case 12:
    case 13:
      return swift_release();
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      return swift_release();
    case 6:
      goto LABEL_5;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B15AEDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 8:
    case 10:
    case 11:
    case 12:
    case 13:
      return swift_retain();
    case 1:
    case 3:
      sub_1B16B9740();
      return swift_retain();
    case 6:
      goto LABEL_5;
    case 9:
      sub_1B16B9740();
      sub_1B16B9740();
LABEL_5:
      result = sub_1B16B9740();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B15AEE38()
{
  return type metadata accessor for DebugDataSource();
}

uint64_t method lookup function for DebugDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebugDataSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DebugDataSource.add(_:_:sort:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DebugDataSource.add(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void sub_1B15AEE6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF344D8)
  {
    sub_1B13B1310();
    sub_1B13B13B4(&qword_1EEF38080, (uint64_t (*)(uint64_t))sub_1B13B1310, MEMORY[0x1E0DB3DC0]);
    v0 = sub_1B16BA6C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF344D8);
  }
}

uint64_t sub_1B15AEEE4(uint64_t a1)
{
  uint64_t v2;

  sub_1B15AEE6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RestorationEvent.fromState.getter(char a1)
{
  return sub_1B14C951C((uint64_t)*(&off_1E63228D0 + a1));
}

uint64_t RestorationEvent.toState.getter(int a1)
{
  return (a1 + 1);
}

BOOL static RestorationEvent.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t RestorationEvent.hash(into:)()
{
  return sub_1B16BAA54();
}

void _s5TeaUI16RestorationStateO9hashValueSivg_0()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

BOOL sub_1B15AEFB8(char *a1, char *a2)
{
  return static RestorationEvent.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B15AEFC4()
{
  unsigned __int8 *v0;

  return RestorationEvent.hashValue.getter(*v0);
}

uint64_t sub_1B15AEFCC()
{
  return RestorationEvent.hash(into:)();
}

void sub_1B15AEFD4()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  sub_1B16BAA78();
  OUTLINED_FUNCTION_68();
}

uint64_t sub_1B15AF00C()
{
  char *v0;

  return RestorationEvent.fromState.getter(*v0);
}

uint64_t sub_1B15AF014@<X0>(_BYTE *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = RestorationEvent.toState.getter(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_1B15AF040()
{
  unint64_t result;

  result = qword_1EEF344E8;
  if (!qword_1EEF344E8)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for RestorationEvent, &type metadata for RestorationEvent);
    atomic_store(result, (unint64_t *)&qword_1EEF344E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RestorationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B15AF0C8 + 4 * byte_1B16D5035[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B15AF0FC + 4 * byte_1B16D5030[v4]))();
}

uint64_t sub_1B15AF0FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AF104(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15AF10CLL);
  return result;
}

uint64_t sub_1B15AF118(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15AF120);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B15AF124(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AF12C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RestorationState()
{
  return &type metadata for RestorationState;
}

uint64_t storeEnumTagSinglePayload for RestorationEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B15AF194 + 4 * byte_1B16D503F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B15AF1C8 + 4 * byte_1B16D503A[v4]))();
}

uint64_t sub_1B15AF1C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AF1D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15AF1D8);
  return result;
}

uint64_t sub_1B15AF1E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15AF1ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B15AF1F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AF1F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RestorationEvent()
{
  return &type metadata for RestorationEvent;
}

id ActionButton.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_57();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_54();
  return objc_msgSend(v3, v4, v2);
}

id ActionButton.onTap.getter()
{
  return OUTLINED_FUNCTION_4_4(OBJC_IVAR____TtC5TeaUI12ActionButton_onTap);
}

id ActionButton.onMenuPresentation.getter()
{
  return OUTLINED_FUNCTION_4_4(OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation);
}

id ActionButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ActionButton.init(coder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  objc_class *v6;
  objc_class *v7;
  uint64_t v8;

  v5 = OBJC_IVAR____TtC5TeaUI12ActionButton_onTap;
  sub_1B13F279C(0, a2, a3, a4);
  v7 = v6;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(v6), sel_init);
  v8 = OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation;
  *(_QWORD *)&v4[v8] = objc_msgSend(objc_allocWithZone(v7), sel_init);

  sub_1B16BA724();
  __break(1u);
}

void sub_1B15AF378()
{
  uint64_t v0;

}

id ActionButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActionButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ActionButton.prepareForReuse()()
{
  id v0;

  v0 = sub_1B14AEB58();
  OUTLINED_FUNCTION_1_35(v0);
}

void sub_1B15AF444()
{
  ActionButton.prepareForReuse()();
}

void sub_1B15AF464(_BYTE *a1@<X8>)
{
  sub_1B145C488(a1);
}

void CommandStateType.commandState.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t getEnumTagSinglePayload for CommandState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1B15AF4C8 + 4 * byte_1B16D5200[v4]))();
}

uint64_t storeEnumTagSinglePayload for CommandState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B15AF574 + 4 * byte_1B16D520A[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B15AF5A8 + 4 * byte_1B16D5205[v5]))();
}

uint64_t sub_1B15AF5A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AF5B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B15AF5B8);
  return result;
}

uint64_t sub_1B15AF5C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B15AF5CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B15AF5D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AF5D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B15AF5E4(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_1B15AF600(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for CommandState()
{
  return &type metadata for CommandState;
}

uint64_t dispatch thunk of CommandStateType.commandState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1B15AF630(_BYTE *a1@<X8>)
{
  CommandStateType.commandState.getter(a1);
}

uint64_t sub_1B15AF644(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1B16B7DB4();
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2;
  return v2;
}

BOOL static JSONSchemaView.JSONSaveMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSONSchemaView.JSONSaveMode.hash(into:)()
{
  return sub_1B16BAA54();
}

uint64_t JSONSchemaView.JSONSaveMode.hashValue.getter()
{
  sub_1B16BAA48();
  sub_1B16BAA54();
  return sub_1B16BAA78();
}

void JSONSchemaView.init(schema:jsonSaveMode:onJSONSave:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t KeyPath;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  uint64_t v36;

  OUTLINED_FUNCTION_6();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B13D6584(0, &qword_1EEF2FFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v32 - v13;
  v15 = *v5;
  v16 = (int *)OUTLINED_FUNCTION_7_68();
  LOBYTE(v33) = 0;
  sub_1B16B9434();
  OUTLINED_FUNCTION_4_82();
  OUTLINED_FUNCTION_12_45();
  OUTLINED_FUNCTION_4_82();
  OUTLINED_FUNCTION_12_45();
  OUTLINED_FUNCTION_4_82();
  OUTLINED_FUNCTION_12_45();
  OUTLINED_FUNCTION_4_82();
  v17 = v9 + v16[10];
  v33 = 0;
  v34 = 0xE000000000000000;
  OUTLINED_FUNCTION_57_2();
  v18 = v36;
  *(_OWORD *)v17 = v35;
  *(_QWORD *)(v17 + 16) = v18;
  v19 = (uint64_t *)(v9 + v16[11]);
  KeyPath = swift_getKeyPath();
  *v19 = KeyPath;
  OUTLINED_FUNCTION_41_1(KeyPath, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  swift_storeEnumTagMultiPayload();
  sub_1B15B8228(v7, v9, type metadata accessor for JSONSchema);
  v21 = (_QWORD *)(v9 + v16[14]);
  *v21 = v3;
  v21[1] = v1;
  *(_BYTE *)(v9 + v16[5]) = 1;
  v22 = v9 + v16[13];
  *(_QWORD *)v22 = 0;
  *(_QWORD *)(v22 + 8) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_BYTE *)(v22 + 24) = -1;
  v23 = sub_1B16B87C8();
  OUTLINED_FUNCTION_83((uint64_t)v14, v24, v25, v23);
  swift_retain();
  sub_1B1476F7C((uint64_t)v14);
  v27 = v26;
  sub_1B15B8F64((uint64_t)v14, &qword_1EEF2FFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], v10);
  v28 = sub_1B157095C(v27);
  v29 = (uint64_t *)(v9 + v16[12]);
  *v29 = v28;
  v29[1] = 0;
  if ((v15 & 1) != 0)
  {
    swift_release();
    sub_1B13E0BC4(v7, type metadata accessor for JSONSchema);
  }
  else
  {
    v30 = v28;
    swift_retain();
    sub_1B13E0BC4(v7, type metadata accessor for JSONSchema);
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = v30;
    v31[3] = 0;
    v31[4] = v3;
    v31[5] = v1;
    off_1EEF2F9B0 = sub_1B15B4AB4;
    qword_1EEF2F9B8 = (uint64_t)v31;
    swift_release();
  }
  OUTLINED_FUNCTION_47();
}

uint64_t type metadata accessor for JSONSchemaView()
{
  uint64_t result;

  result = qword_1EEF347B8;
  if (!qword_1EEF347B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B15AF9A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;

  swift_retain();
  swift_retain();
  v6 = sub_1B15AFB34(a1, a2);
  a3(v6);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1B15AFB34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19[0] = a2;
  v3 = sub_1B16B98A8();
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B16B7874();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0];
  MEMORY[0x1E0C80A78](v7, v9);
  sub_1B16B78A4();
  swift_allocObject();
  sub_1B16B7898();
  sub_1B13D6584(0, &qword_1EEF33120, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B16C51E0;
  sub_1B16B785C();
  sub_1B16B7850();
  v20 = v10;
  sub_1B13B13B4(&qword_1EEF33128, v8, MEMORY[0x1E0CAE0F8]);
  sub_1B13D6584(0, &qword_1EEF33130, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B153E42C();
  sub_1B16BA448();
  sub_1B16B7880();
  v20 = a1;
  v21 = v19[0];
  sub_1B13C2E28(0, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v20 = v22;
  sub_1B15B8728();
  v11 = v19[1];
  v12 = sub_1B16B788C();
  if (v11)
  {
    swift_release();
    swift_release();
    return (uint64_t)v6;
  }
  v14 = v12;
  v15 = v13;
  swift_release();
  sub_1B16B989C();
  v6 = (char *)sub_1B16B9878();
  v17 = v16;
  result = sub_1B147A604(v14, v15);
  if (v17)
  {
    swift_release();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

void sub_1B15AFDAC()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t KeyPath;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;

  OUTLINED_FUNCTION_6();
  v47 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  OUTLINED_FUNCTION_41_1(v9, &qword_1EEF2FFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v13, v14);
  v45 = (uint64_t)&v45 - v15;
  v16 = OUTLINED_FUNCTION_25_33();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_2();
  v46 = v18;
  v19 = (int *)OUTLINED_FUNCTION_7_68();
  LOBYTE(v48) = 0;
  sub_1B16B9434();
  OUTLINED_FUNCTION_4_82();
  OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_4_82();
  OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_4_82();
  OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_4_82();
  v20 = v12 + v19[10];
  v48 = 0;
  v49 = 0xE000000000000000;
  OUTLINED_FUNCTION_57_2();
  v21 = v51;
  *(_OWORD *)v20 = v50;
  *(_QWORD *)(v20 + 16) = v21;
  v22 = (uint64_t *)(v12 + v19[11]);
  KeyPath = swift_getKeyPath();
  *v22 = KeyPath;
  OUTLINED_FUNCTION_41_1(KeyPath, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
  swift_storeEnumTagMultiPayload();
  sub_1B15B8228(v10, v12, type metadata accessor for JSONSchema);
  v24 = v12 + v19[13];
  *(_QWORD *)v24 = v8;
  *(_QWORD *)(v24 + 8) = v6;
  *(_QWORD *)(v24 + 16) = v4;
  *(_BYTE *)(v24 + 24) = v2;
  *(_BYTE *)(v12 + v19[5]) = 0;
  v25 = (_QWORD *)(v12 + v19[14]);
  *v25 = 0;
  v25[1] = 0;
  v26 = v10;
  v27 = v10;
  v29 = v46;
  v28 = v47;
  sub_1B15B8228(v27, v46, type metadata accessor for JSONSchema);
  if ((~v28 & 0xF000000000000007) == 0)
  {
    v30 = sub_1B16B87C8();
    v31 = v45;
    OUTLINED_FUNCTION_83(v45, v32, v33, v30);
    v34 = OUTLINED_FUNCTION_58_13();
    sub_1B15B8358(v34, v35, v36, v37);
    sub_1B1476F7C(v31);
    v39 = v38;
    sub_1B15B8F64(v31, &qword_1EEF2FFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v28 = sub_1B157095C(v39);
    v40 = OUTLINED_FUNCTION_58_13();
    sub_1B15B8370(v40, v41, v42, v43);
  }
  sub_1B13E0BC4(v26, type metadata accessor for JSONSchema);
  sub_1B13E0BC4(v29, type metadata accessor for JSONSchema);
  v44 = (uint64_t *)(v12 + v19[12]);
  *v44 = v28;
  v44[1] = 0;
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15B0010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v0 = sub_1B16B98A8();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  v5 = sub_1B16B7874();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0];
  MEMORY[0x1E0C80A78](v5, v7);
  OUTLINED_FUNCTION_77();
  sub_1B16B78A4();
  swift_allocObject();
  v8 = sub_1B16B7898();
  OUTLINED_FUNCTION_52_19(v8, &qword_1EEF33120, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B16C51E0;
  sub_1B16B785C();
  sub_1B16B7850();
  sub_1B13B13B4(&qword_1EEF33128, v6, MEMORY[0x1E0CAE0F8]);
  OUTLINED_FUNCTION_52_19(v10, &qword_1EEF33130, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B153E42C();
  sub_1B16BA448();
  sub_1B16B7880();
  type metadata accessor for JSONSchemaView();
  sub_1B13C2E28(0, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  sub_1B15B8728();
  v12 = sub_1B16B788C();
  if (v19)
  {
    swift_release();
    swift_release();
    return v4;
  }
  v14 = v12;
  v15 = v13;
  swift_release();
  sub_1B16B989C();
  v4 = sub_1B16B9878();
  v17 = v16;
  result = sub_1B147A604(v14, v15);
  if (v17)
  {
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

void JSONSchemaView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  uint64_t v116;

  OUTLINED_FUNCTION_6();
  a19 = v21;
  a20 = v22;
  v101 = v23;
  v24 = OUTLINED_FUNCTION_7_68();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  MEMORY[0x1E0C80A78](v24, v27);
  v108 = (uint64_t)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B15B4AC0();
  OUTLINED_FUNCTION_71(v28, (uint64_t)&a10);
  OUTLINED_FUNCTION_40_2(v29);
  MEMORY[0x1E0C80A78](v30, v31);
  OUTLINED_FUNCTION_77();
  v34 = v33 - v32;
  sub_1B15B5278(0);
  OUTLINED_FUNCTION_71(v35, (uint64_t)&a12);
  OUTLINED_FUNCTION_40_2(v36);
  MEMORY[0x1E0C80A78](v37, v38);
  OUTLINED_FUNCTION_77();
  v91 = v40 - v39;
  sub_1B15B5B34(0);
  OUTLINED_FUNCTION_71(v41, (uint64_t)&a15);
  OUTLINED_FUNCTION_40_2(v42);
  MEMORY[0x1E0C80A78](v43, v44);
  OUTLINED_FUNCTION_2();
  v106 = v45;
  sub_1B15B5CE4(0);
  OUTLINED_FUNCTION_71(v46, (uint64_t)&a17);
  OUTLINED_FUNCTION_40_2(v47);
  MEMORY[0x1E0C80A78](v48, v49);
  OUTLINED_FUNCTION_2();
  v96 = v50;
  v107 = v20;
  v110 = v20;
  OUTLINED_FUNCTION_41_1(v51, &qword_1EEF34518, (uint64_t (*)(uint64_t))sub_1B15B4B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
  sub_1B15B5220();
  sub_1B16B92E4();
  v52 = *(int *)(v24 + 24);
  v90 = v24;
  v53 = (char *)(v20 + v52);
  v54 = *v53;
  v55 = *((_QWORD *)v53 + 1);
  v115 = v54;
  v116 = v55;
  sub_1B13C2E28(0, &qword_1EEF34728, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  v105 = v56;
  sub_1B16B9458();
  v57 = v108;
  sub_1B15B8228(v20, v108, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  v58 = *(unsigned __int8 *)(v25 + 80);
  v103 = ((v58 + 16) & ~v58) + v26;
  v104 = (v58 + 16) & ~v58;
  v59 = v104;
  v102 = v58 | 7;
  v60 = swift_allocObject();
  sub_1B15B82E8(v57, v60 + v59, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  sub_1B15B5EA8(0, &qword_1EEF34600, (void (*)(uint64_t))sub_1B15B5340);
  v62 = v61;
  sub_1B13B13B4(&qword_1EEF346C0, (uint64_t (*)(uint64_t))sub_1B15B4AC0, MEMORY[0x1E0CDD950]);
  v87 = v63;
  v88 = sub_1B15B5ADC();
  OUTLINED_FUNCTION_38_23();
  v64 = v92;
  sub_1B16B938C();
  OUTLINED_FUNCTION_37_21();
  swift_release();
  OUTLINED_FUNCTION_47_1();
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v34, v64);
  OUTLINED_FUNCTION_14_41(*(int *)(v24 + 28));
  v65 = OUTLINED_FUNCTION_48_16();
  sub_1B15B8228(v65, v66, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  v67 = swift_allocObject();
  sub_1B15B82E8(v64, v67 + v104, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  sub_1B15B5C64();
  v69 = v68;
  v111 = v64;
  v112 = v62;
  v113 = v87;
  v114 = v88;
  v70 = OUTLINED_FUNCTION_23_33();
  sub_1B13B13B4(&qword_1EEF346E0, (uint64_t (*)(uint64_t))sub_1B15B5C64, MEMORY[0x1E0CD8558]);
  v72 = v71;
  v73 = v69;
  OUTLINED_FUNCTION_38_23();
  v74 = v94;
  v75 = v91;
  sub_1B16B938C();
  OUTLINED_FUNCTION_37_21();
  swift_release();
  OUTLINED_FUNCTION_47_1();
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v75, v74);
  OUTLINED_FUNCTION_14_41(*(int *)(v90 + 32));
  v76 = OUTLINED_FUNCTION_48_16();
  sub_1B15B8228(v76, v77, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  v78 = swift_allocObject();
  sub_1B15B82E8((uint64_t)sub_1B15B5C64, v78 + v104, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  sub_1B15B5E78(0);
  v80 = v79;
  v111 = v74;
  v112 = v73;
  v113 = v70;
  v114 = v72;
  v85 = OUTLINED_FUNCTION_23_33();
  v86 = sub_1B15B5F40(&qword_1EEF34710, sub_1B15B5E78, (uint64_t)sub_1B15B5FA0, MEMORY[0x1E0CE0798]);
  v81 = v96;
  v82 = v97;
  v83 = v106;
  sub_1B16B938C();
  OUTLINED_FUNCTION_37_21();
  swift_release();
  OUTLINED_FUNCTION_47_1();
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v83, v82);
  v109 = v107;
  sub_1B13D6584(0, &qword_1EEF34730, (uint64_t (*)(uint64_t))sub_1B15B610C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
  v111 = v82;
  v112 = v80;
  v113 = v85;
  v114 = v86;
  OUTLINED_FUNCTION_23_33();
  sub_1B15B61E4();
  v84 = v99;
  sub_1B16B93A4();
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v81, v84);
  OUTLINED_FUNCTION_47();
}

void sub_1B15B07E0(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[23];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v38;

  v26[16] = a2;
  sub_1B13D6584(0, &qword_1EEF34530, (uint64_t (*)(uint64_t))sub_1B15B4C10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  v26[20] = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v26 - v8;
  v10 = a1[1];
  v11 = a1[3];
  v12 = a1[5];
  v13 = a1[7];
  v14 = a1[9];
  if (v10 || v11 || v12 || v13 || v14)
  {
    v34 = a1[8];
    v36 = a1[6];
    v35 = a1[4];
    v28 = a1[2];
    v27 = *a1;
    v29 = v14;
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
  }
  else
  {
    v27 = 0;
    v28 = 0;
    v11 = 0;
    v35 = 0;
    v12 = 0;
    v36 = 0;
    v13 = 0;
    v34 = 0;
    v29 = 0;
    v10 = 1;
  }
  v15 = type metadata accessor for JSONSchemaView();
  v16 = (char *)a1 + *(int *)(v15 + 52);
  v17 = v16[24];
  v18 = v17 == 255 || (v17 & 1) == 0;
  v33 = v13;
  v32 = v12;
  v31 = v11;
  v30 = v10;
  if (v18)
  {
    sub_1B15B4C10();
    v24 = v19;
    v25 = 1;
  }
  else
  {
    v20 = *((_QWORD *)v16 + 2);
    v21 = sub_1B16B9170();
    MEMORY[0x1E0C80A78](v21, v22);
    v26[-2] = a1;
    v26[-1] = v20;
    sub_1B15B4C74(0);
    sub_1B13B13B4(&qword_1EEF348A8, (uint64_t (*)(uint64_t))sub_1B15B4C74, MEMORY[0x1E0CDFB10]);
    sub_1B16B9548();
    sub_1B15B4C10();
    v24 = v23;
    v25 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v9, v25, 1, v24);
  v38 = *(_OWORD *)((char *)a1 + *(int *)(v15 + 48));
  sub_1B13C2E28(0, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v26[17] = v15;
  v26[19] = v9;
  __asm { BR              X10 }
}

uint64_t sub_1B15B0AE0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int128 v8;
  __int128 v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  __int16 v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int16 v57;
  int v58;
  int v59;
  int v60;
  int v61;

  *(_QWORD *)(v4 - 256) = v0;
  type metadata accessor for JSONSchemaValueArray(0);
  swift_retain();
  sub_1B16B9434();
  v5 = *(_QWORD *)(v4 - 176);
  v6 = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v4 - 176) = v5;
  *(_QWORD *)(v4 - 168) = v6;
  *(_QWORD *)(v4 - 416) = v5;
  *(_QWORD *)(v4 - 424) = v6;
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  *(_BYTE *)(v4 - 112) = 0;
  sub_1B15B8938();
  sub_1B15B8974();
  swift_retain();
  swift_retain();
  sub_1B16B91B8();
  v7 = *(_BYTE *)(v4 - 192);
  v8 = *(_OWORD *)(v4 - 240);
  *v1 = *(_OWORD *)(v4 - 256);
  v1[1] = v8;
  v9 = *(_OWORD *)(v4 - 208);
  v1[2] = *(_OWORD *)(v4 - 224);
  v1[3] = v9;
  *(_WORD *)(v4 - 112) = v7;
  v10 = MEMORY[0x1E0CDB880];
  sub_1B15B585C(0, &qword_1EEF345D8, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1E632B6D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
  sub_1B15B585C(0, &qword_1EEF345E0, (uint64_t)&unk_1E632B648, (uint64_t)&unk_1E632B5B8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v10);
  sub_1B15B88B0();
  sub_1B15B89B0();
  sub_1B16B91B8();
  v11 = *(_QWORD *)(v4 - 328);
  v12 = *(_QWORD *)(v4 - 320);
  v13 = *(_QWORD *)(v4 - 312);
  v14 = *(_QWORD *)(v4 - 304);
  v15 = *(_QWORD *)(v4 - 296);
  v16 = *(_QWORD *)(v4 - 288);
  v17 = v3;
  v18 = *(_QWORD *)(v4 - 280);
  v19 = *(_QWORD *)(v4 - 272);
  v20 = *(unsigned __int8 *)(v4 - 264);
  v21 = *(_BYTE *)(v4 - 263);
  if (v21)
    v22 = 256;
  else
    v22 = 0;
  *(_QWORD *)(v4 - 256) = v11;
  *(_QWORD *)(v4 - 248) = v12;
  *(_QWORD *)(v4 - 528) = v11;
  *(_QWORD *)(v4 - 448) = v12;
  *(_QWORD *)(v4 - 480) = v13;
  *(_QWORD *)(v4 - 240) = v13;
  *(_QWORD *)(v4 - 232) = v14;
  *(_QWORD *)(v4 - 224) = v15;
  *(_QWORD *)(v4 - 216) = v16;
  *(_QWORD *)(v4 - 496) = v16;
  *(_QWORD *)(v4 - 208) = v18;
  *(_QWORD *)(v4 - 200) = v19;
  *(_QWORD *)(v4 - 512) = v19;
  *(_WORD *)(v4 - 192) = v22 | v20;
  *(_BYTE *)(v4 - 190) = 0;
  sub_1B15B8D24(v11, v12, v13, v14, v15, v16, v18, v19, v20, v21, v58, (char)sub_1B15B8C10, (unint64_t)sub_1B15B8C10 >> 32, v17);
  sub_1B15B5174();
  sub_1B15B585C(0, &qword_1EEF345E8, (uint64_t)&unk_1E632B528, (uint64_t)&type metadata for JSObjectValueView, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
  sub_1B15B8848();
  sub_1B15B8AB0();
  sub_1B16B91B8();
  swift_release();
  sub_1B15B8D24(*(_QWORD *)(v4 - 528), *(_QWORD *)(v4 - 448), *(_QWORD *)(v4 - 480), v14, v15, *(_QWORD *)(v4 - 496), v18, *(_QWORD *)(v4 - 512), v20, v21, v59, (char)sub_1B15B8D4C, (unint64_t)sub_1B15B8D4C >> 32, (char)sub_1B15B8DC4);
  swift_release();
  swift_release();
  *(_OWORD *)(v4 - 480) = *(_OWORD *)(v4 - 128);
  *(_OWORD *)(v4 - 496) = *(_OWORD *)(v4 - 144);
  *(_OWORD *)(v4 - 512) = *(_OWORD *)(v4 - 160);
  *(_OWORD *)(v4 - 528) = *(_OWORD *)(v4 - 176);
  *(_DWORD *)(v4 - 416) = *(unsigned __int16 *)(v4 - 112);
  *(_DWORD *)(v4 - 424) = *(unsigned __int8 *)(v4 - 110);
  v23 = *(_QWORD *)(v4 - 456);
  v24 = (char *)(v2 + *(int *)(v23 + 24));
  v25 = *v24;
  v26 = *((_QWORD *)v24 + 1);
  *(_BYTE *)(v4 - 256) = v25;
  *(_QWORD *)(v4 - 248) = v26;
  sub_1B13C2E28(0, &qword_1EEF34728, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9458();
  *(_QWORD *)(v4 - 448) = *(_QWORD *)(v4 - 176);
  *(_QWORD *)(v4 - 544) = *(_QWORD *)(v4 - 168);
  *(_DWORD *)(v4 - 536) = *(unsigned __int8 *)(v4 - 160);
  v27 = (char *)(v2 + *(int *)(v23 + 28));
  v28 = *v27;
  v29 = *((_QWORD *)v27 + 1);
  *(_BYTE *)(v4 - 256) = v28;
  *(_QWORD *)(v4 - 248) = v29;
  sub_1B16B9458();
  v30 = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v4 - 568) = *(_QWORD *)(v4 - 176);
  *(_DWORD *)(v4 - 556) = *(unsigned __int8 *)(v4 - 160);
  v31 = *(_QWORD *)(v4 - 432);
  sub_1B15B8F24(*(_QWORD *)(v4 - 440), v31, &qword_1EEF34530, (uint64_t (*)(uint64_t))sub_1B15B4C10);
  v32 = *(_QWORD **)(v4 - 464);
  v33 = *(_QWORD *)(v4 - 384);
  *v32 = *(_QWORD *)(v4 - 408);
  v32[1] = v33;
  v34 = *(_QWORD *)(v4 - 376);
  v32[2] = *(_QWORD *)(v4 - 400);
  v32[3] = v34;
  v35 = *(_QWORD *)(v4 - 368);
  v32[4] = *(_QWORD *)(v4 - 344);
  v32[5] = v35;
  v36 = *(_QWORD *)(v4 - 360);
  v32[6] = *(_QWORD *)(v4 - 336);
  v32[7] = v36;
  v37 = *(_QWORD *)(v4 - 392);
  v32[8] = *(_QWORD *)(v4 - 352);
  v32[9] = v37;
  *(_QWORD *)(v4 - 392) = v37;
  sub_1B15B4B54();
  v39 = v38;
  sub_1B15B8F24(v31, (uint64_t)v32 + *(int *)(v38 + 48), &qword_1EEF34530, (uint64_t (*)(uint64_t))sub_1B15B4C10);
  v40 = (char *)v32 + *(int *)(v39 + 64);
  v41 = *(_OWORD *)(v4 - 528);
  *(_QWORD *)(v4 - 576) = *(_QWORD *)(v4 - 520);
  v42 = v41;
  *(_QWORD *)(v4 - 552) = v41;
  v43 = *(_OWORD *)(v4 - 512);
  *(_QWORD *)(v4 - 456) = *(_QWORD *)(v4 - 512);
  *(_OWORD *)v40 = v41;
  *((_OWORD *)v40 + 1) = v43;
  *(_QWORD *)(v4 - 528) = *((_QWORD *)&v43 + 1);
  v44 = *(_OWORD *)(v4 - 496);
  v45 = v44;
  *(_QWORD *)(v4 - 584) = *((_QWORD *)&v44 + 1);
  v46 = *(_OWORD *)(v4 - 480);
  v47 = *(_QWORD *)(v4 - 480);
  *(_QWORD *)(v4 - 512) = v47;
  *((_OWORD *)v40 + 2) = v44;
  *((_OWORD *)v40 + 3) = v46;
  v48 = *((_QWORD *)&v46 + 1);
  LODWORD(v31) = *(_DWORD *)(v4 - 416);
  *((_WORD *)v40 + 32) = v31;
  *(_DWORD *)(v4 - 416) = v31;
  v49 = *(_DWORD *)(v4 - 424);
  v40[66] = v49;
  *(_DWORD *)(v4 - 424) = v49;
  v50 = (char *)v32 + *(int *)(v39 + 80);
  v51 = *(_QWORD *)(v4 - 544);
  *(_QWORD *)v50 = *(_QWORD *)(v4 - 448);
  *((_QWORD *)v50 + 1) = v51;
  v50[16] = *(_DWORD *)(v4 - 536);
  *((_QWORD *)v50 + 3) = *(_QWORD *)(v4 - 568);
  *((_QWORD *)v50 + 4) = v30;
  v50[40] = *(_DWORD *)(v4 - 556);
  sub_1B15B8BB0(*(_QWORD *)(v4 - 408), *(_QWORD *)(v4 - 384));
  v57 = v31;
  v52 = v42;
  v53 = *(_QWORD *)(v4 - 576);
  v54 = *(_QWORD *)(v4 - 528);
  v55 = *(_QWORD *)(v4 - 584);
  sub_1B15B8CD0(v52, v53, *(_QWORD *)(v4 - 456), v54, v45, v55, v47, v48, v57, SHIBYTE(v57), v49, v60, (char)sub_1B15B8C10, (unint64_t)sub_1B15B8C10 >> 32, (char)sub_1B15B8C7C, (uint64_t (*)(void))sub_1B15B87DC);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B15B8F64(*(_QWORD *)(v4 - 440), &qword_1EEF34530, (uint64_t (*)(uint64_t))sub_1B15B4C10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B15B8CD0(*(_QWORD *)(v4 - 552), v53, *(_QWORD *)(v4 - 456), v54, v45, v55, *(_QWORD *)(v4 - 512), v48, *(_DWORD *)(v4 - 416), BYTE1(*(_DWORD *)(v4 - 416)), *(_DWORD *)(v4 - 424), v61, (char)sub_1B15B8D4C, (unint64_t)sub_1B15B8D4C >> 32, (char)sub_1B15B8DC4, (uint64_t (*)(void))sub_1B15B8B38);
  sub_1B15B8F64(*(_QWORD *)(v4 - 432), &qword_1EEF34530, (uint64_t (*)(uint64_t))sub_1B15B4C10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  return sub_1B15B8E18(*(_QWORD *)(v4 - 408), *(_QWORD *)(v4 - 384));
}

uint64_t sub_1B15B1E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  *(_QWORD *)a3 = sub_1B16B9128();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  sub_1B15B8EA8();
  return sub_1B15B1EAC(a1, a2, (char *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_1B15B1EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(char *, uint64_t);
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  __int128 v55;
  uint64_t v56;

  v48 = a2;
  v54 = a3;
  v4 = type metadata accessor for JSONSchemaView();
  v45[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v45[1] = v6;
  v46 = (uint64_t)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1B15B5018();
  MEMORY[0x1E0C80A78](v47, v7);
  v9 = (_QWORD *)((char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B13D6584(0, (unint64_t *)&qword_1EEF34560, (uint64_t (*)(uint64_t))sub_1B15B4D3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v53 = (uint64_t)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v49 = (char *)v45 - v15;
  sub_1B15B585C(0, &qword_1EEF34558, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], MEMORY[0x1E0CE0618]);
  v17 = v16;
  v51 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v52 = (char *)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v21);
  v23 = (char *)v45 - v22;
  sub_1B16B9170();
  v24 = a1 + *(int *)(v4 + 40);
  v25 = *(_OWORD *)v24;
  v26 = *(_QWORD *)(v24 + 16);
  v55 = v25;
  v56 = v26;
  sub_1B13C2E28(0, &qword_1EEF34838, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9458();
  v50 = v23;
  v27 = v48;
  sub_1B16B9590();
  if (v27)
  {
    v28 = v46;
    sub_1B15B8228(a1, v46, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
    v29 = (*(unsigned __int8 *)(v45[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45[0] + 80);
    v30 = swift_allocObject();
    sub_1B15B82E8(v28, v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
    *v9 = v27;
    v9[1] = sub_1B15B8F8C;
    v9[2] = v30;
    v31 = (_QWORD *)((char *)v9 + *(int *)(v47 + 64));
    *v31 = swift_getKeyPath();
    sub_1B13D6584(0, &qword_1EEF348B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD8E80], MEMORY[0x1E0CD87D0]);
    swift_storeEnumTagMultiPayload();
    sub_1B15B4E04(0);
    sub_1B13B13B4(&qword_1EEF345B0, (uint64_t (*)(uint64_t))sub_1B15B4E04, MEMORY[0x1E0CDFB10]);
    sub_1B13B13B4(&qword_1EEF345B8, (uint64_t (*)(uint64_t))sub_1B15B5018, (uint64_t)&unk_1B16DAE30);
    sub_1B16B9740();
    v32 = (uint64_t)v49;
    sub_1B16B8FD8();
    v33 = 0;
  }
  else
  {
    v33 = 1;
    v32 = (uint64_t)v49;
  }
  sub_1B15B4D3C();
  __swift_storeEnumTagSinglePayload(v32, v33, 1, v34);
  v36 = v51;
  v35 = v52;
  v37 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v38 = v50;
  v37(v52, v50, v17);
  v39 = v53;
  sub_1B15B8F24(v32, v53, (unint64_t *)&qword_1EEF34560, (uint64_t (*)(uint64_t))sub_1B15B4D3C);
  v40 = v54;
  v37(v54, v35, v17);
  sub_1B15B4C98();
  sub_1B15B8F24(v39, (uint64_t)&v40[*(int *)(v41 + 48)], (unint64_t *)&qword_1EEF34560, (uint64_t (*)(uint64_t))sub_1B15B4D3C);
  v42 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B15B8F64(v32, (unint64_t *)&qword_1EEF34560, (uint64_t (*)(uint64_t))sub_1B15B4D3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v43 = *(void (**)(char *, uint64_t))(v36 + 8);
  v43(v38, v17);
  sub_1B15B8F64(v39, (unint64_t *)&qword_1EEF34560, (uint64_t (*)(uint64_t))sub_1B15B4D3C, v42);
  return ((uint64_t (*)(char *, uint64_t))v43)(v35, v17);
}

uint64_t sub_1B15B2330()
{
  type metadata accessor for JSONSchemaView();
  sub_1B13C2E28(0, &qword_1EEF34838, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9740();
  return sub_1B16B944C();
}

uint64_t sub_1B15B23C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_1B16B9128();
  v3 = sub_1B16B9404();
  v4 = sub_1B16B93C8();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = result;
  *(_QWORD *)(a1 + 56) = v4;
  return result;
}

uint64_t sub_1B15B2438()
{
  sub_1B15B5340();
  sub_1B15B5AC0();
  return sub_1B16B902C();
}

uint64_t sub_1B15B248C()
{
  sub_1B16B92A8();
  sub_1B15B8500(0, &qword_1EEF34610, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
  sub_1B15B59A0();
  return sub_1B16B8F78();
}

uint64_t sub_1B15B2508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t OpaqueTypeConformance2;
  uint64_t v61;
  __int16 v62;
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char v75;
  __int128 v76;
  __int128 v77;
  char v78;

  v67 = a2;
  sub_1B15B8500(0, &qword_1EEF34848, MEMORY[0x1E0CDB848]);
  v65 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)v63 - v5;
  v7 = sub_1B16B9164();
  MEMORY[0x1E0C80A78](v7, v8);
  sub_1B15B53B0(0);
  v66 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = a1;
  v14 = (void *)sub_1B167F334((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B15B8580);
  v16 = v15;
  v18 = v17;
  sub_1B16B9158();
  sub_1B16B914C();
  if ((v18 & 1) != 0)
  {
    v71 = (uint64_t)v14;
    v42 = v14;
    sub_1B15AA998();
    sub_1B16B98B4();
    sub_1B16B9140();
    swift_bridgeObjectRelease();
    sub_1B16B914C();
    sub_1B16B917C();
    v43 = sub_1B16B9314();
    v45 = v44;
    v47 = v46;
    v49 = v48 & 1;
    v50 = sub_1B16B92B4();
    *(_QWORD *)v6 = v43;
    *((_QWORD *)v6 + 1) = v45;
    v64 = v43;
    v6[16] = v49;
    *((_QWORD *)v6 + 3) = v47;
    v6[32] = v50;
    *(_OWORD *)(v6 + 40) = 0u;
    *(_OWORD *)(v6 + 56) = 0u;
    v6[72] = 1;
    swift_storeEnumTagMultiPayload();
    sub_1B15B859C(v43, v45, v49);
    sub_1B15B585C(0, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v52 = v51;
    sub_1B15B54B0(255);
    v65 = v16;
    v54 = v53;
    v55 = sub_1B15B5920();
    sub_1B15B5544(255);
    v57 = v56;
    v58 = (uint64_t)v14;
    v59 = sub_1B15B5F40(&qword_1EEF34698, sub_1B15B5544, (uint64_t)sub_1B15B5904, MEMORY[0x1E0CE0790]);
    sub_1B16B9740();
    v71 = v57;
    v72 = v59;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v71 = v52;
    v72 = v54;
    v73 = v55;
    v74 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_1B16B91B8();
    sub_1B15B85AC(v58, v65, 1, MEMORY[0x1E0DEEBF0]);
    sub_1B15B85AC(v64, v45, v49, MEMORY[0x1E0DEEE30]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B16B9140();
    sub_1B16B914C();
    sub_1B16B917C();
    v62 = 256;
    v19 = sub_1B16B9314();
    v21 = v20;
    v64 = v10;
    v22 = v16;
    v24 = v23;
    v26 = v25;
    v27 = sub_1B16B92B4();
    v63[1] = v63;
    v71 = v19;
    v72 = v21;
    LOBYTE(v73) = v24 & 1;
    v74 = v26;
    v75 = v27;
    v76 = 0u;
    v77 = 0u;
    v78 = 1;
    MEMORY[0x1E0C80A78](v27, v28);
    v63[-4] = a1;
    v63[-3] = v14;
    v61 = v22;
    v29 = v22;
    sub_1B15B585C(0, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v31 = v30;
    sub_1B15B54B0(0);
    v33 = v32;
    v34 = sub_1B15B5920();
    sub_1B15B5544(255);
    v36 = v35;
    v37 = sub_1B15B5F40(&qword_1EEF34698, sub_1B15B5544, (uint64_t)sub_1B15B5904, MEMORY[0x1E0CE0790]);
    v69 = v36;
    v70 = v37;
    v38 = swift_getOpaqueTypeConformance2();
    sub_1B16B9398();
    sub_1B15B85AC(v71, v72, v73, MEMORY[0x1E0DEEE30]);
    swift_bridgeObjectRelease();
    sub_1B15B85AC((uint64_t)v14, v29, 0, MEMORY[0x1E0DEEBF0]);
    v39 = v64;
    v40 = v66;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v6, v13, v66);
    swift_storeEnumTagMultiPayload();
    v71 = v31;
    v72 = v33;
    v73 = v34;
    v74 = v38;
    swift_getOpaqueTypeConformance2();
    sub_1B16B91B8();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v40);
  }
}

uint64_t sub_1B15B2A3C@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = sub_1B15B0010();
  if (v2)
  {
    *a1 = v2;
  }
  else
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

void sub_1B15B2A80(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v59 = a2;
  v60 = a3;
  v63 = a4;
  sub_1B15B557C();
  v61 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B15B57DC();
  v9 = v8;
  v62 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B16B9200();
  MEMORY[0x1E0C80A78](v13, v14);
  sub_1B15B55E8();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B15B5544(0);
  v22 = v21;
  v24 = MEMORY[0x1E0C80A78](v21, v23);
  v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v27);
  v29 = (char *)&v52 - v28;
  v30 = *(int *)(type metadata accessor for JSONSchemaView() + 20);
  v58 = a1;
  if (*(_BYTE *)(a1 + v30) == 1)
  {
    v31 = sub_1B16B91E8();
    v54 = v9;
    MEMORY[0x1E0C80A78](v31, v32);
    v52 = v17;
    v53 = v16;
    v56 = v12;
    v33 = v59;
    v34 = v17;
    v35 = v60;
    *(&v52 - 2) = v59;
    *(&v52 - 1) = v35;
    sub_1B15B5660();
    v55 = v22;
    sub_1B13B13B4(&qword_1EEF34678, (uint64_t (*)(uint64_t))sub_1B15B5660, MEMORY[0x1E0CE05D0]);
    sub_1B16B9080();
    v36 = sub_1B16B91F4();
    MEMORY[0x1E0C80A78](v36, v37);
    *(&v52 - 4) = v58;
    *(&v52 - 3) = v33;
    *(&v52 - 2) = v35;
    sub_1B15B585C(0, &qword_1EEF34688, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
    sub_1B15B58A4();
    v38 = v56;
    sub_1B16B9080();
    v22 = v55;
    v39 = &v57[*(int *)(v61 + 48)];
    v40 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v41 = v53;
    v40(v57, v20, v53);
    v42 = v62;
    v43 = v38;
    v44 = v54;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v39, v43, v54);
    sub_1B16B9194();
    sub_1B15B5560(0);
    v46 = v45;
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v45);
    sub_1B15B5904();
    MEMORY[0x1B5E1CBB0](v26, v46, v47);
    sub_1B13E0BC4((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1B15B5544);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v56, v44);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v41);
  }
  else
  {
    sub_1B15B5560(0);
    v49 = v48;
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v48);
    sub_1B15B5904();
    MEMORY[0x1B5E1CBB0](v26, v49, v50);
    sub_1B13E0BC4((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1B15B5544);
  }
  v51 = sub_1B15B5F40(&qword_1EEF34698, sub_1B15B5544, (uint64_t)sub_1B15B5904, MEMORY[0x1E0CE0790]);
  MEMORY[0x1B5E1CBA4](v29, v22, v51);
  sub_1B13E0BC4((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1B15B5544);
}

uint64_t sub_1B15B2E98()
{
  sub_1B16B9740();
  return sub_1B16B9578();
}

uint64_t sub_1B15B2F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v14[2];

  v14[0] = a2;
  v14[1] = a4;
  v6 = type metadata accessor for JSONSchemaView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  sub_1B16B9170();
  sub_1B15B8228(a1, (uint64_t)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  sub_1B15B82E8((uint64_t)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  v12 = (_QWORD *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v12 = v14[0];
  v12[1] = a3;
  sub_1B16B9740();
  return sub_1B16B947C();
}

void sub_1B15B3030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (**v14)(uint64_t, uint64_t);
  char *v15;
  char v16;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19;

  v6 = sub_1B16B9074();
  MEMORY[0x1E0C80A78](v6, v7);
  sub_1B15B4A64(0);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for JSONSchemaView();
  v14 = (void (**)(uint64_t, uint64_t))(a1 + *(int *)(v13 + 56));
  if (*v14)
    (*v14)(a2, a3);
  v15 = (char *)(a1 + *(int *)(v13 + 24));
  v16 = *v15;
  v17 = *((_QWORD *)v15 + 1);
  v18[16] = v16;
  v19 = v17;
  v18[15] = 0;
  sub_1B13C2E28(0, &qword_1EEF34728, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B944C();
  sub_1B16199C4((uint64_t)v12);
  MEMORY[0x1B5E1CE80](v9);
  sub_1B16B9068();
  sub_1B16B9500();
  sub_1B13E0BC4((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1B15B4A64);
}

uint64_t sub_1B15B31A0()
{
  sub_1B16B92A8();
  sub_1B15B585C(0, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
  sub_1B15B5920();
  return sub_1B16B8F78();
}

double sub_1B15B322C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double result;

  v2 = sub_1B16B9164();
  MEMORY[0x1E0C80A78](v2, v3);
  sub_1B16B9158();
  sub_1B16B914C();
  type metadata accessor for JSONSchema(0);
  sub_1B16B8798();
  sub_1B16B9140();
  swift_bridgeObjectRelease();
  sub_1B16B914C();
  sub_1B16B917C();
  v4 = sub_1B16B9314();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_1B16B92B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_BYTE *)(a1 + 72) = 1;
  return result;
}

void sub_1B15B335C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v46 = a2;
  v41 = type metadata accessor for JSONSchema.SchemaType.ObjectType(0);
  MEMORY[0x1E0C80A78](v41, v3);
  v42 = (uint64_t)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject(0);
  MEMORY[0x1E0C80A78](v5, v6);
  v43 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B15B8270(0, &qword_1EEF34840, MEMORY[0x1E0CDB848]);
  v44 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)v39 - v10;
  sub_1B15B5E78(0);
  MEMORY[0x1E0C80A78](v12, v13);
  v45 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B15B5EA8(0, &qword_1EEF34700, (void (*)(uint64_t))type metadata accessor for JSONSchemaView);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v18);
  v20 = (char *)v39 - v19;
  v21 = type metadata accessor for JSONSchemaView();
  v22 = a1;
  v23 = (uint64_t *)(a1 + *(int *)(v21 + 48));
  v24 = *v23;
  v25 = v23[1];
  v47 = *v23;
  v48 = v25;
  sub_1B13C2E28(0, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  v26 = sub_1B16B9440();
  v28 = v49;
  if (!(v49 >> 61))
  {
    MEMORY[0x1E0C80A78](v26, v27);
    v39[-2] = v28;
    v39[-1] = v22;
    sub_1B15B5F24();
    sub_1B16B902C();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v11, v20, v16);
    swift_storeEnumTagMultiPayload();
    sub_1B15B6000();
    v29 = (uint64_t)v45;
    sub_1B16B91B8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    sub_1B15B5E94(0);
    __swift_storeEnumTagSinglePayload(v29, 0, 1, v30);
    sub_1B15B82E8(v29, v46, (uint64_t (*)(_QWORD))sub_1B15B5E78);
    return;
  }
  v39[1] = v21;
  v40 = v22;
  v31 = (uint64_t)v43;
  v32 = (uint64_t)v45;
  swift_release();
  v47 = v24;
  v48 = v25;
  sub_1B16B9440();
  v33 = v49 & 0x1FFFFFFFFFFFFFFFLL;
  if (v49 >> 61 == 5)
  {
    v34 = v42;
    sub_1B15B8228(v33 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueObject_object, v42, type metadata accessor for JSONSchema.SchemaType.ObjectType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B15B82E8(v34, v31, type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject);
      MEMORY[0x1E0C80A78](v35, v36);
      v39[-4] = v31;
      v39[-3] = v33;
      v39[-2] = v40;
      sub_1B15B5F24();
      sub_1B16B902C();
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v11, v20, v16);
      swift_storeEnumTagMultiPayload();
      sub_1B15B6000();
      sub_1B16B91B8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      sub_1B15B5E94(0);
      __swift_storeEnumTagSinglePayload(v32, 0, 1, v37);
      sub_1B15B82E8(v32, v46, (uint64_t (*)(_QWORD))sub_1B15B5E78);
      sub_1B13E0BC4(v31, type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject);
      return;
    }
    swift_release();
    sub_1B13E0BC4(v34, type metadata accessor for JSONSchema.SchemaType.ObjectType);
  }
  else
  {
    swift_release();
  }
  sub_1B15B5E94(0);
  __swift_storeEnumTagSinglePayload(v46, 1, 1, v38);
}

void sub_1B15B37D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for JSONSchemaView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4, v7);
  v8 = type metadata accessor for JSONSchema(0);
  MEMORY[0x1E0C80A78](v8, v9);
  sub_1B15B8228(a1 + OBJC_IVAR____TtC5TeaUI20JSONSchemaValueArray_items, (uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_1B15B8228(a2, (uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1B15B82E8((uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  swift_retain();
  sub_1B15AFDAC();
}

void sub_1B15B391C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B15B3960()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  swift_getKeyPath();
  sub_1B13B13B4(&qword_1EEF31060, type metadata accessor for JSONSchemaValueArray, (uint64_t)&unk_1B16C6944);
  swift_retain();
  sub_1B16B7D90();
  swift_release();
  swift_getKeyPath();
  sub_1B16B7DA8();
  swift_release();
  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5TeaUI20JSONSchemaValueArray__value);
  v2 = swift_beginAccess();
  MEMORY[0x1B5E1D4C8](v2);
  sub_1B13DA560(*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_1B16B9C08();
  sub_1B16B9B78();
  swift_endAccess();
  sub_1B1483E5C();
  swift_getKeyPath();
  sub_1B16B7D9C();
  swift_release();
  type metadata accessor for JSONSchemaView();
  sub_1B13C2E28(0, &qword_1EEF34728, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  return sub_1B16B944C();
}

void sub_1B15B3AEC()
{
  JUMPOUT(0x1B15B3968);
}

void sub_1B15B3AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for JSONSchemaView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  v10 = type metadata accessor for JSONSchema(0);
  MEMORY[0x1E0C80A78](v10, v11);
  sub_1B15B8228(a1, (uint64_t)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  sub_1B15B8228(a3, (uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  sub_1B15B82E8((uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
  type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject(0);
  sub_1B16B9740();
  swift_retain();
  sub_1B15AFDAC();
}

void sub_1B15B3C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1B15B3CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1B13D6584(0, &qword_1EEF302F0, type metadata accessor for JSONSchemaValue, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for JSONSchemaValueObject.EnablableValue);
  swift_allocObject();
  swift_retain();
  sub_1B16B9740();
  v3 = sub_1B15AF644(v0 & 0x1FFFFFFFFFFFFFFFLL, 1);
  swift_getKeyPath();
  sub_1B13B13B4(&qword_1EEF31088, type metadata accessor for JSONSchemaValueObject, (uint64_t)&unk_1B16C68D4);
  sub_1B16B7D90();
  swift_release();
  swift_getKeyPath();
  sub_1B16B7DA8();
  swift_release();
  swift_beginAccess();
  sub_1B148A750(v3, v2, v1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1B1483E5C();
  swift_getKeyPath();
  sub_1B16B7D9C();
  swift_release();
  type metadata accessor for JSONSchemaView();
  sub_1B13C2E28(0, &qword_1EEF34728, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  return sub_1B16B944C();
}

void sub_1B15B3E6C()
{
  JUMPOUT(0x1B15B3CA8);
}

void sub_1B15B3E74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  unint64_t v86;

  v80 = a2;
  v74 = type metadata accessor for JSONSchema.SchemaType.ObjectType(0);
  MEMORY[0x1E0C80A78](v74, v3);
  v75 = (uint64_t)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for JSONSchemaView();
  v78 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v78 + 64);
  MEMORY[0x1E0C80A78](v5, v7);
  v8 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B15B6170();
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v11, v14);
  v17 = (char *)v73 - v16;
  v19 = MEMORY[0x1E0C80A78](v15, v18);
  v21 = (char *)v73 - v20;
  v23 = MEMORY[0x1E0C80A78](v19, v22);
  v25 = (char *)v73 - v24;
  v27 = MEMORY[0x1E0C80A78](v23, v26);
  v84 = (uint64_t)v73 - v28;
  MEMORY[0x1E0C80A78](v27, v29);
  v31 = (char *)v73 - v30;
  v79 = (char *)v5;
  v32 = a1;
  v77 = (char *)*(int *)(v5 + 48);
  v85 = *(_OWORD *)&v77[a1];
  sub_1B13C2E28(0, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1B16B9440();
  v82 = v17;
  v83 = v13;
  v81 = v21;
  v76 = v6;
  if (v86 >> 61)
  {
    v39 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_release();
    v40 = 1;
    v35 = v32;
    v36 = v78;
  }
  else
  {
    swift_release();
    v33 = sub_1B16B9170();
    v73[1] = v34;
    v73[2] = v33;
    v35 = a1;
    sub_1B15B8228(a1, (uint64_t)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
    v36 = v78;
    v37 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    v38 = swift_allocObject() + v37;
    v39 = v8;
    sub_1B15B82E8((uint64_t)v8, v38, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
    sub_1B16B947C();
    v40 = 0;
  }
  v41 = v77;
  sub_1B15B585C(0, &qword_1EEF34688, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
  v43 = v42;
  __swift_storeEnumTagSinglePayload((uint64_t)v31, v40, 1, v42);
  v85 = *(_OWORD *)&v41[v35];
  sub_1B16B9440();
  if (v86 >> 61 == 5)
  {
    v44 = v75;
    sub_1B15B8228((v86 & 0x1FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueObject_object, v75, type metadata accessor for JSONSchema.SchemaType.ObjectType);
    v45 = (uint64_t)v39;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B13E0BC4(v44, type metadata accessor for JSONSchema.SchemaType.ObjectType);
      sub_1B16B9170();
      v75 = v46;
      v77 = v25;
      v78 = v43;
      sub_1B15B8228(v35, (uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
      v47 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      v48 = swift_allocObject() + v47;
      v45 = (uint64_t)v39;
      sub_1B15B82E8((uint64_t)v39, v48, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
      v25 = v77;
      v43 = v78;
      sub_1B16B947C();
      swift_release();
      v49 = 0;
    }
    else
    {
      swift_release();
      sub_1B13E0BC4(v44, type metadata accessor for JSONSchema.SchemaType.ObjectType);
      v49 = 1;
    }
  }
  else
  {
    swift_release();
    v49 = 1;
    v45 = (uint64_t)v39;
  }
  v50 = 1;
  __swift_storeEnumTagSinglePayload(v84, v49, 1, v43);
  v51 = v35 + *((int *)v79 + 13);
  v52 = *(unsigned __int8 *)(v51 + 24);
  if (v52 != 255)
  {
    v53 = v52 & 1;
    v78 = v43;
    v55 = *(_QWORD *)(v51 + 8);
    v54 = *(_QWORD *)(v51 + 16);
    v56 = v36;
    v57 = *(_QWORD *)v51;
    sub_1B15B6638(*(_QWORD *)v51, v55, v54, v52 & 1);
    sub_1B16B9170();
    v77 = v58;
    v79 = v31;
    LODWORD(v74) = v59;
    v75 = v60;
    sub_1B15B8228(v35, v45, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
    v61 = v45;
    v62 = v25;
    v63 = (*(unsigned __int8 *)(v56 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v64 = swift_allocObject();
    *(_QWORD *)(v64 + 16) = v57;
    *(_QWORD *)(v64 + 24) = v55;
    v43 = v78;
    *(_QWORD *)(v64 + 32) = v54;
    *(_BYTE *)(v64 + 40) = v53;
    v65 = v64 + v63;
    v25 = v62;
    sub_1B15B82E8(v61, v65, (uint64_t (*)(_QWORD))type metadata accessor for JSONSchemaView);
    v31 = v79;
    sub_1B16B947C();
    v50 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v25, v50, 1, v43);
  v66 = (uint64_t)v81;
  sub_1B15B8228((uint64_t)v31, (uint64_t)v81, (uint64_t (*)(_QWORD))sub_1B15B6170);
  v67 = v84;
  v68 = (uint64_t)v82;
  sub_1B15B8228(v84, (uint64_t)v82, (uint64_t (*)(_QWORD))sub_1B15B6170);
  v69 = (uint64_t)v83;
  sub_1B15B8228((uint64_t)v25, (uint64_t)v83, (uint64_t (*)(_QWORD))sub_1B15B6170);
  v70 = v80;
  sub_1B15B8228(v66, v80, (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B15B610C();
  v72 = v71;
  sub_1B15B8228(v68, v70 + *(int *)(v71 + 48), (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B15B8228(v69, v70 + *(int *)(v72 + 64), (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B13E0BC4((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B13E0BC4(v67, (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B13E0BC4((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B13E0BC4(v69, (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B13E0BC4(v68, (uint64_t (*)(_QWORD))sub_1B15B6170);
  sub_1B13E0BC4(v66, (uint64_t (*)(_QWORD))sub_1B15B6170);
}

uint64_t sub_1B15B44CC()
{
  OUTLINED_FUNCTION_7_68();
  sub_1B13C2E28(0, &qword_1EEF34728, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  return sub_1B16B944C();
}

uint64_t sub_1B15B4544(void (*a1)(), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t (*v9)(void);

  type metadata accessor for JSONSchemaView();
  if ((a4 & 1) != 0)
  {
    v9 = MEMORY[0x1E0CDF9A8];
    sub_1B13C2E28(0, &qword_1EEF34838, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
    swift_retain();
    sub_1B16B9440();
    sub_1B13C2E28(0, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(_QWORD, uint64_t))v9);
    sub_1B16B9440();
    a1();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1B13C2E28(0, &qword_1EEF34830, (uint64_t)&type metadata for SchemaViewValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
    swift_retain();
    sub_1B16B9440();
    a1();
    swift_release();
    return sub_1B15B6064((uint64_t)a1, a2, a3, 0);
  }
}

void sub_1B15B46D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_6();
  v2 = v1;
  sub_1B15B7F0C();
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x1E0C80A78](v5, v8);
  v11 = &v20[-v10];
  v13 = MEMORY[0x1E0C80A78](v9, v12);
  v15 = &v20[-v14];
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = &v20[-v17];
  v22 = v0;
  sub_1B15B585C(0, &qword_1EEF34688, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
  sub_1B15B58A4();
  OUTLINED_FUNCTION_61_14();
  v21 = v0;
  OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_50_16((uint64_t)v11, (uint64_t)v18);
  OUTLINED_FUNCTION_50_16((uint64_t)v7, (uint64_t)v15);
  OUTLINED_FUNCTION_50_16(v2, (uint64_t)v11);
  sub_1B15B800C();
  OUTLINED_FUNCTION_50_16(v2 + *(int *)(v19 + 48), (uint64_t)v7);
  OUTLINED_FUNCTION_90_1((uint64_t)v15);
  OUTLINED_FUNCTION_90_1((uint64_t)v18);
  OUTLINED_FUNCTION_90_1((uint64_t)v7);
  OUTLINED_FUNCTION_90_1((uint64_t)v11);
  OUTLINED_FUNCTION_47();
}

uint64_t sub_1B15B4854()
{
  sub_1B13C2E28(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDFDB8]);
  return sub_1B16B9500();
}

uint64_t sub_1B15B48BC(uint64_t *a1)
{
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  uint64_t v6;
  uint64_t v7;

  sub_1B16B9170();
  v2 = *a1;
  v6 = a1[3];
  v7 = v2;
  v3 = (_OWORD *)swift_allocObject();
  v4 = *((_OWORD *)a1 + 1);
  v3[1] = *(_OWORD *)a1;
  v3[2] = v4;
  *(_OWORD *)((char *)v3 + 41) = *(_OWORD *)((char *)a1 + 25);
  sub_1B15B8078((uint64_t)&v7);
  swift_retain();
  sub_1B15B8078((uint64_t)&v6);
  swift_retain();
  return sub_1B16B947C();
}

uint64_t sub_1B15B4998()
{
  sub_1B13C2E28(0, (unint64_t *)&qword_1EEF34828, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDFDB8]);
  return sub_1B16B9500();
}

void sub_1B15B4A08()
{
  sub_1B15B46D8();
}

uint64_t sub_1B15B4A44()
{
  return sub_1B16B90C8();
}

void sub_1B15B4A64(uint64_t a1)
{
  sub_1B13D6584(a1, &qword_1EEF34508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9F98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDFDB8]);
}

uint64_t sub_1B15B4A80()
{
  OUTLINED_FUNCTION_20_27();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B15B4AB4()
{
  uint64_t v0;

  return sub_1B15AF9A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

void sub_1B15B4AC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34510)
  {
    sub_1B13D6584(255, &qword_1EEF34518, (uint64_t (*)(uint64_t))sub_1B15B4B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1B15B5220();
    v0 = sub_1B16B92F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34510);
  }
}

void sub_1B15B4B54()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_1EEF34520)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    sub_1B13C2E28(255, &qword_1EEF34528, (uint64_t)&type metadata for JSMetadataView, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1B13D6584(255, &qword_1EEF34530, (uint64_t (*)(uint64_t))sub_1B15B4C10, v0);
    sub_1B15B50F0();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EEF34520);
  }
}

void sub_1B15B4C10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34538)
  {
    sub_1B15B4C74(255);
    v0 = sub_1B16B9560();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34538);
  }
}

void sub_1B15B4C74(uint64_t a1)
{
  sub_1B15B4E28(a1, &qword_1EEF34540, &qword_1EEF34548, (uint64_t (*)(uint64_t))sub_1B15B4C98);
}

void sub_1B15B4C98()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF34550)
  {
    sub_1B15B585C(255, &qword_1EEF34558, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], MEMORY[0x1E0CE0618]);
    sub_1B13D6584(255, (unint64_t *)&qword_1EEF34560, (uint64_t (*)(uint64_t))sub_1B15B4D3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF34550);
  }
}

void sub_1B15B4D3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34568)
  {
    sub_1B15B4E04(255);
    sub_1B15B5018();
    sub_1B13B13B4(&qword_1EEF345B0, (uint64_t (*)(uint64_t))sub_1B15B4E04, MEMORY[0x1E0CDFB10]);
    sub_1B13B13B4(&qword_1EEF345B8, (uint64_t (*)(uint64_t))sub_1B15B5018, (uint64_t)&unk_1B16DAE30);
    v0 = sub_1B16B8FE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34568);
  }
}

void sub_1B15B4E04(uint64_t a1)
{
  sub_1B15B4E28(a1, &qword_1EEF34570, &qword_1EEF34578, (uint64_t (*)(uint64_t))sub_1B15B4E94);
}

void sub_1B15B4E28(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1B13D6584(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    OUTLINED_FUNCTION_51_15();
    v5 = sub_1B16B94A0();
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_31();
}

void sub_1B15B4E94()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF34580)
  {
    sub_1B15B4EF8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF34580);
  }
}

void sub_1B15B4EF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34588)
  {
    sub_1B15B4F54();
    v0 = sub_1B16B9020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34588);
  }
}

void sub_1B15B4F54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34590)
  {
    sub_1B13C2E28(255, &qword_1EEF34598, MEMORY[0x1E0CDF5D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1B16B9290();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34590);
  }
}

unint64_t sub_1B15B4FC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF345A0;
  if (!qword_1EEF345A0)
  {
    sub_1B13D6584(255, &qword_1EEF34578, (uint64_t (*)(uint64_t))sub_1B15B4E94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CE0680], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF345A0);
  }
  return result;
}

uint64_t sub_1B15B5018()
{
  uint64_t result;

  result = qword_1EEF345A8;
  if (!qword_1EEF345A8)
    type metadata accessor for JSONSchemaPresetSelectorView();
  return result;
}

unint64_t sub_1B15B5098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF345C0;
  if (!qword_1EEF345C0)
  {
    sub_1B13D6584(255, &qword_1EEF34548, (uint64_t (*)(uint64_t))sub_1B15B4C98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CE0680], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF345C0);
  }
  return result;
}

void sub_1B15B50F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF345C8)
  {
    sub_1B15B5174();
    sub_1B15B585C(255, &qword_1EEF345E8, (uint64_t)&unk_1E632B528, (uint64_t)&type metadata for JSObjectValueView, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v0 = sub_1B16B91C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF345C8);
  }
}

void sub_1B15B5174()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EEF345D0)
  {
    v0 = MEMORY[0x1E0CDB880];
    sub_1B15B585C(255, &qword_1EEF345D8, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1E632B6D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    sub_1B15B585C(255, &qword_1EEF345E0, (uint64_t)&unk_1E632B648, (uint64_t)&unk_1E632B5B8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v0);
    v1 = sub_1B16B91C4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EEF345D0);
  }
}

unint64_t sub_1B15B5220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF345F0;
  if (!qword_1EEF345F0)
  {
    sub_1B13D6584(255, &qword_1EEF34518, (uint64_t (*)(uint64_t))sub_1B15B4B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CE0680], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF345F0);
  }
  return result;
}

void sub_1B15B5278(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_1EEF345F8)
  {
    sub_1B15B4AC0();
    v3 = v2;
    sub_1B15B5EA8(255, &qword_1EEF34600, (void (*)(uint64_t))sub_1B15B5340);
    v5 = v4;
    sub_1B13B13B4(&qword_1EEF346C0, (uint64_t (*)(uint64_t))sub_1B15B4AC0, MEMORY[0x1E0CDD950]);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v6;
    v9[3] = sub_1B15B5ADC();
    v7 = MEMORY[0x1B5E1F088](a1, v9, MEMORY[0x1E0CDEF60], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_1EEF345F8);
  }
}

void sub_1B15B5340()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34608)
  {
    sub_1B15B8500(255, &qword_1EEF34610, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    sub_1B15B59A0();
    v0 = sub_1B16B8F6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34608);
  }
}

void sub_1B15B53B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_1EEF34618)
  {
    sub_1B15B585C(255, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v3 = v2;
    sub_1B15B54B0(255);
    v5 = v4;
    v6 = sub_1B15B5920();
    sub_1B15B5544(255);
    sub_1B15B5F40(&qword_1EEF34698, sub_1B15B5544, (uint64_t)sub_1B15B5904, MEMORY[0x1E0CE0790]);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v6;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x1B5E1F088](a1, v9, MEMORY[0x1E0CDF0E8], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_1EEF34618);
  }
}

void sub_1B15B54B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1EEF34628)
  {
    sub_1B15B5544(255);
    v5[0] = v2;
    v5[1] = sub_1B15B5F40(&qword_1EEF34698, sub_1B15B5544, (uint64_t)sub_1B15B5904, MEMORY[0x1E0CE0790]);
    v3 = MEMORY[0x1B5E1F088](a1, v5, MEMORY[0x1E0CDBE10], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF34628);
  }
}

void sub_1B15B5544(uint64_t a1)
{
  sub_1B13D6584(a1, &qword_1EEF34630, (uint64_t (*)(uint64_t))sub_1B15B5560, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1B15B5560(uint64_t a1)
{
  sub_1B13D6584(a1, &qword_1EEF34638, (uint64_t (*)(uint64_t))sub_1B15B557C, MEMORY[0x1E0CDB5A8]);
}

void sub_1B15B557C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF34640)
  {
    sub_1B15B55E8();
    sub_1B15B57DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF34640);
  }
}

void sub_1B15B55E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34648)
  {
    sub_1B15B5660();
    sub_1B13B13B4(&qword_1EEF34678, (uint64_t (*)(uint64_t))sub_1B15B5660, MEMORY[0x1E0CE05D0]);
    v0 = sub_1B16B908C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34648);
  }
}

void sub_1B15B5660()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EEF34650)
  {
    sub_1B13C2E28(255, &qword_1EEF34658, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEC628]);
    sub_1B16B920C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CDBD08];
    sub_1B15B5748();
    sub_1B13B13B4(&qword_1EEF34668, v0, MEMORY[0x1E0CDBD00]);
    sub_1B15B57A0();
    v1 = sub_1B16B9584();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EEF34650);
  }
}

unint64_t sub_1B15B5748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF34660;
  if (!qword_1EEF34660)
  {
    sub_1B13C2E28(255, &qword_1EEF34658, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEC628]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0DEC650], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF34660);
  }
  return result;
}

unint64_t sub_1B15B57A0()
{
  unint64_t result;

  result = qword_1EEF34670;
  if (!qword_1EEF34670)
  {
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CA88D0], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EEF34670);
  }
  return result;
}

void sub_1B15B57DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34680)
  {
    sub_1B15B585C(255, &qword_1EEF34688, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
    sub_1B15B58A4();
    v0 = sub_1B16B908C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34680);
  }
}

void sub_1B15B585C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1B15B58A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF34690;
  if (!qword_1EEF34690)
  {
    sub_1B15B585C(255, &qword_1EEF34688, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDFA58], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF34690);
  }
  return result;
}

void sub_1B15B5904()
{
  sub_1B13B13B4(&qword_1EEF346A0, (uint64_t (*)(uint64_t))sub_1B15B5560, MEMORY[0x1E0CDB5C0]);
}

unint64_t sub_1B15B5920()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEF346A8;
  if (!qword_1EEF346A8)
  {
    sub_1B15B585C(255, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEF346A8);
  }
  return result;
}

unint64_t sub_1B15B59A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  result = qword_1EEF346B0;
  if (!qword_1EEF346B0)
  {
    sub_1B15B8500(255, &qword_1EEF34610, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
    v2 = v1;
    sub_1B15B585C(255, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v4 = v3;
    sub_1B15B54B0(255);
    v6 = v5;
    v7 = sub_1B15B5920();
    sub_1B15B5544(255);
    sub_1B15B5F40(&qword_1EEF34698, sub_1B15B5544, (uint64_t)sub_1B15B5904, MEMORY[0x1E0CE0790]);
    v8[2] = v4;
    v8[3] = v6;
    v8[4] = v7;
    v8[5] = swift_getOpaqueTypeConformance2();
    v8[0] = swift_getOpaqueTypeConformance2();
    v8[1] = v7;
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v8);
    atomic_store(result, (unint64_t *)&qword_1EEF346B0);
  }
  return result;
}

void sub_1B15B5AC0()
{
  sub_1B13B13B4(&qword_1EEF346B8, (uint64_t (*)(uint64_t))sub_1B15B5340, MEMORY[0x1E0CD8558]);
}

unint64_t sub_1B15B5ADC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF346C8;
  if (!qword_1EEF346C8)
  {
    sub_1B15B5EA8(255, &qword_1EEF34600, (void (*)(uint64_t))sub_1B15B5340);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CD9C70], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF346C8);
  }
  return result;
}

void sub_1B15B5B34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!qword_1EEF346D0)
  {
    sub_1B15B5278(255);
    v3 = v2;
    sub_1B15B5C64();
    v5 = v4;
    sub_1B15B4AC0();
    sub_1B15B5EA8(255, &qword_1EEF34600, (void (*)(uint64_t))sub_1B15B5340);
    sub_1B13B13B4(&qword_1EEF346C0, (uint64_t (*)(uint64_t))sub_1B15B4AC0, MEMORY[0x1E0CDD950]);
    sub_1B15B5ADC();
    v6 = MEMORY[0x1E0CDEF60];
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1B13B13B4(&qword_1EEF346E0, (uint64_t (*)(uint64_t))sub_1B15B5C64, MEMORY[0x1E0CD8558]);
    v11[0] = v3;
    v11[1] = v5;
    v11[2] = OpaqueTypeConformance2;
    v11[3] = v8;
    v9 = MEMORY[0x1B5E1F088](a1, v11, v6, 0);
    if (!v10)
      atomic_store(v9, (unint64_t *)&qword_1EEF346D0);
  }
}

void sub_1B15B5C64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF346D8)
  {
    sub_1B15B585C(255, &qword_1EEF34620, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CD9778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    sub_1B15B5920();
    v0 = sub_1B16B8F6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF346D8);
  }
}

void sub_1B15B5CE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_1EEF346E8)
  {
    sub_1B15B5B34(255);
    v3 = v2;
    sub_1B15B5E78(255);
    v5 = v4;
    sub_1B15B5278(255);
    sub_1B15B5C64();
    sub_1B15B4AC0();
    sub_1B15B5EA8(255, &qword_1EEF34600, (void (*)(uint64_t))sub_1B15B5340);
    sub_1B13B13B4(&qword_1EEF346C0, (uint64_t (*)(uint64_t))sub_1B15B4AC0, MEMORY[0x1E0CDD950]);
    sub_1B15B5ADC();
    v6 = MEMORY[0x1E0CDEF60];
    swift_getOpaqueTypeConformance2();
    sub_1B13B13B4(&qword_1EEF346E0, (uint64_t (*)(uint64_t))sub_1B15B5C64, MEMORY[0x1E0CD8558]);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = swift_getOpaqueTypeConformance2();
    v9[3] = sub_1B15B5F40(&qword_1EEF34710, sub_1B15B5E78, (uint64_t)sub_1B15B5FA0, MEMORY[0x1E0CE0798]);
    v7 = MEMORY[0x1B5E1F088](a1, v9, v6, 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_1EEF346E8);
  }
}

void sub_1B15B5E78(uint64_t a1)
{
  sub_1B13D6584(a1, &qword_1EEF346F0, (uint64_t (*)(uint64_t))sub_1B15B5E94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1B15B5E94(uint64_t a1)
{
  sub_1B15B8270(a1, &qword_1EEF346F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB880]);
}

void sub_1B15B5EA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1B16B8FF0();
    a3(255);
    OUTLINED_FUNCTION_51_15();
    v5 = sub_1B16B9038();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1B15B5F24()
{
  sub_1B13B13B4(&qword_1EEF34708, (uint64_t (*)(uint64_t))type metadata accessor for JSONSchemaView, (uint64_t)&protocol conformance descriptor for JSONSchemaView);
}

uint64_t sub_1B15B5F40(unint64_t *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    a2(255);
    v8 = OUTLINED_FUNCTION_51_15();
    result = MEMORY[0x1B5E1F0E8](a4, v4, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B15B5FA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF34718;
  if (!qword_1EEF34718)
  {
    sub_1B15B5E94(255);
    v2 = v1;
    v3[0] = sub_1B15B6000();
    v3[1] = v3[0];
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF34718);
  }
  return result;
}

unint64_t sub_1B15B6000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF34720;
  if (!qword_1EEF34720)
  {
    sub_1B15B5EA8(255, &qword_1EEF34700, (void (*)(uint64_t))type metadata accessor for JSONSchemaView);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CD9C70], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF34720);
  }
  return result;
}

void sub_1B15B6058(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1B15B07E0(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1B15B6064(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_release();
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1B15B60A0()
{
  return sub_1B15B60BC((uint64_t (*)(uint64_t))sub_1B15B2438);
}

uint64_t sub_1B15B60B0()
{
  return sub_1B15B60BC((uint64_t (*)(uint64_t))sub_1B15B31A0);
}

uint64_t sub_1B15B60BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_7_68();
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return a1(v2);
}

uint64_t sub_1B15B60F8()
{
  return sub_1B15B60BC((uint64_t (*)(uint64_t))sub_1B15B335C);
}

void sub_1B15B6104(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1B15B3E74(*(_QWORD *)(v1 + 16), a1);
}

void sub_1B15B610C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EEF34738)
  {
    sub_1B15B6170();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EEF34738);
  }
}

void sub_1B15B6170()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF34740)
  {
    sub_1B15B585C(255, &qword_1EEF34688, MEMORY[0x1E0CDDD78], MEMORY[0x1E0CDDD58], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
    v0 = sub_1B16BA328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF34740);
  }
}

unint64_t sub_1B15B61E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF34748;
  if (!qword_1EEF34748)
  {
    sub_1B13D6584(255, &qword_1EEF34730, (uint64_t (*)(uint64_t))sub_1B15B610C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1B5E1F0E8](MEMORY[0x1E0CE0680], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF34748);
  }
  return result;
}

unint64_t sub_1B15B6240()
{
  unint64_t result;

  result = qword_1EEF34750;
  if (!qword_1EEF34750)
  {
    result = MEMORY[0x1B5E1F0E8](&protocol conformance descriptor for JSONSchemaView.JSONSaveMode, &type metadata for JSONSchemaView.JSONSaveMode);
    atomic_store(result, (unint64_t *)&qword_1EEF34750);
  }
  return result;
}

uint64_t sub_1B15B627C()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for JSONSchemaView(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  _QWORD *v68;
  char *v69;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v47 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v47 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    a1[10] = a2[10];
    v12 = (int *)type metadata accessor for JSONSchema(0);
    v13 = v12[6];
    v66 = (char *)a2 + v13;
    v67 = (char *)v4 + v13;
    v14 = sub_1B16B87C8();
    v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    sub_1B16B9740();
    swift_retain();
    v65(v67, v66, v14);
    v15 = v12[7];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_1B16B7BE0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = v12[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_1B16B7AE4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    *v24 = *v25;
    *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
    v26 = a3[7];
    v27 = a3[8];
    v28 = (char *)v4 + v26;
    v29 = (char *)a2 + v26;
    *v28 = *v29;
    *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
    v30 = (char *)v4 + v27;
    v31 = (char *)a2 + v27;
    *v30 = *v31;
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    v32 = a3[9];
    v33 = a3[10];
    v34 = (char *)v4 + v32;
    v35 = (char *)a2 + v32;
    *v34 = *v35;
    *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
    v36 = (_QWORD *)((char *)v4 + v33);
    v37 = (_QWORD *)((char *)a2 + v33);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v36[2] = v37[2];
    v39 = a3[11];
    v68 = (_QWORD *)((char *)v4 + v39);
    v40 = (_QWORD *)((char *)a2 + v39);
    sub_1B13D6584(0, &qword_1EEF34500, (uint64_t (*)(uint64_t))sub_1B15B4A64, MEMORY[0x1E0CD87D0]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B16B9740();
    swift_retain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v68 = *v40;
    if (EnumCaseMultiPayload == 1)
    {
      v68[1] = v40[1];
      sub_1B15B4A64(0);
      v43 = *(int *)(v42 + 32);
      v69 = (char *)v68 + v43;
      v44 = (char *)v40 + v43;
      v45 = sub_1B16B9074();
      v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
      swift_retain();
      swift_retain();
      v46(v69, v44, v45);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v48 = a3[12];
    v49 = a3[13];
    v50 = (_QWORD *)((char *)v4 + v48);
    v51 = (_QWORD *)((char *)a2 + v48);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = (char *)v4 + v49;
    v54 = (char *)a2 + v49;
    v55 = *((unsigned __int8 *)a2 + v49 + 24);
    swift_retain();
    swift_retain();
    if (v55 == 255)
    {
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 9) = *(_OWORD *)(v54 + 9);
    }
    else
    {
      v56 = v55 & 1;
      v57 = *(_QWORD *)v54;
      v58 = *((_QWORD *)v54 + 1);
      v59 = *((_QWORD *)v54 + 2);
      sub_1B15B6638(v57, v58, v59, v56);
      *(_QWORD *)v53 = v57;
      *((_QWORD *)v53 + 1) = v58;
      *((_QWORD *)v53 + 2) = v59;
      v53[24] = v56;
    }
    v60 = a3[14];
    v61 = (char *)v4 + v60;
    v62 = (char *)a2 + v60;
    if (!*(_QWORD *)v62)
    {
      *(_OWORD *)v61 = *(_OWORD *)v62;
      return v4;
    }
    v63 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = v63;
  }
  swift_retain();
  return v4;
}

