@implementation Z56EQKitMathMLParserConvertNamedColorStringToRGBFloatValuesRKNSt3

uint64_t **___Z56EQKitMathMLParserConvertNamedColorStringToRGBFloatValuesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERdS8_S8__block_invoke()
{
  unsigned __int8 v0;
  uint64_t **result;
  uint64_t **v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 *v6;

  v0 = atomic_load((unsigned __int8 *)&_ZGVZZ56EQKitMathMLParserConvertNamedColorStringToRGBFloatValuesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERdS8_S8_EUb_E11_HTMLColors);
  if ((v0 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZZ56EQKitMathMLParserConvertNamedColorStringToRGBFloatValuesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERdS8_S8_EUb_E11_HTMLColors))
  {
    std::string::basic_string[abi:nn180100]<0>(&_ZZZ56EQKitMathMLParserConvertNamedColorStringToRGBFloatValuesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERdS8_S8_EUb_E11_HTMLColors, "aliceblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21578, "#f0f8ff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21590, "antiquewhite");
    std::string::basic_string[abi:nn180100]<0>(qword_254F215A8, "#faebd7");
    std::string::basic_string[abi:nn180100]<0>(qword_254F215C0, "aqua");
    std::string::basic_string[abi:nn180100]<0>(qword_254F215D8, "#00ffff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F215F0, "aquamarine");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21608, "#7fffd4");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21620, "azure");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21638, "#f0ffff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21650, "beige");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21668, "#f5f5dc");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21680, "bisque");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21698, "#ffe4c4");
    std::string::basic_string[abi:nn180100]<0>(qword_254F216B0, "black");
    std::string::basic_string[abi:nn180100]<0>(qword_254F216C8, "#000000");
    std::string::basic_string[abi:nn180100]<0>(qword_254F216E0, "blanchedalmond");
    std::string::basic_string[abi:nn180100]<0>(qword_254F216F8, "#ffebcd");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21710, "blue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21728, "#0000ff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21740, "blueviolet");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21758, "#8a2be2");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21770, "brown");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21788, "#a52a2a");
    std::string::basic_string[abi:nn180100]<0>(qword_254F217A0, "burlywood");
    std::string::basic_string[abi:nn180100]<0>(qword_254F217B8, "#deb887");
    std::string::basic_string[abi:nn180100]<0>(qword_254F217D0, "cadetblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F217E8, "#5f9ea0");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21800, "chartreuse");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21818, "#7fff00");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21830, "chocolate");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21848, "#d2691e");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21860, "coral");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21878, "#ff7f50");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21890, "cornflowerblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F218A8, "#6495ed");
    std::string::basic_string[abi:nn180100]<0>(qword_254F218C0, "cornsilk");
    std::string::basic_string[abi:nn180100]<0>(qword_254F218D8, "#fff8dc");
    std::string::basic_string[abi:nn180100]<0>(qword_254F218F0, "crimson");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21908, "#dc143c");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21920, "cyan");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21938, "#00ffff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21950, "darkblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21968, "#00008b");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21980, "darkcyan");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21998, "#008b8b");
    std::string::basic_string[abi:nn180100]<0>(qword_254F219B0, "darkgoldenrod");
    std::string::basic_string[abi:nn180100]<0>(qword_254F219C8, "#b8860b");
    std::string::basic_string[abi:nn180100]<0>(qword_254F219E0, "darkgray");
    std::string::basic_string[abi:nn180100]<0>(qword_254F219F8, "#a9a9a9");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21A10, "darkgrey");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21A28, "#a9a9a9");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21A40, "darkgreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21A58, "#006400");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21A70, "darkkhaki");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21A88, "#bdb76b");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21AA0, "darkmagenta");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21AB8, "#8b008b");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21AD0, "darkolivegreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21AE8, "#556b2f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21B00, "darkorange");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21B18, "#ff8c00");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21B30, "darkorchid");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21B48, "#9932cc");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21B60, "darkred");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21B78, "#8b0000");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21B90, "darksalmon");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21BA8, "#e9967a");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21BC0, "darkseagreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21BD8, "#8fbc8f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21BF0, "darkslateblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21C08, "#483d8b");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21C20, "darkslategray");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21C38, "#2f4f4f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21C50, "darkslategrey");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21C68, "#2f4f4f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21C80, "darkturquoise");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21C98, "#00ced1");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21CB0, "darkviolet");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21CC8, "#9400d3");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21CE0, "deeppink");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21CF8, "#ff1493");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21D10, "deepskyblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21D28, "#00bfff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21D40, "dimgray");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21D58, "#696969");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21D70, "dimgrey");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21D88, "#696969");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21DA0, "dodgerblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21DB8, "#1e90ff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21DD0, "firebrick");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21DE8, "#b22222");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21E00, "floralwhite");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21E18, "#fffaf0");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21E30, "forestgreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21E48, "#228b22");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21E60, "fuchsia");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21E78, "#ff00ff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21E90, "gainsboro");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21EA8, "#dcdcdc");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21EC0, "ghostwhite");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21ED8, "#f8f8ff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21EF0, "gold");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21F08, "#ffd700");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21F20, "goldenrod");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21F38, "#daa520");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21F50, "gray");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21F68, "#808080");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21F80, "grey");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21F98, "#808080");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21FB0, "green");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21FC8, "#008000");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21FE0, "greenyellow");
    std::string::basic_string[abi:nn180100]<0>(qword_254F21FF8, "#adff2f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22010, "honeydew");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22028, "#f0fff0");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22040, "hotpink");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22058, "#ff69b4");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22070, "indianred ");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22088, "#cd5c5c");
    std::string::basic_string[abi:nn180100]<0>(qword_254F220A0, "indigo ");
    std::string::basic_string[abi:nn180100]<0>(qword_254F220B8, "#4b0082");
    std::string::basic_string[abi:nn180100]<0>(qword_254F220D0, "ivory");
    std::string::basic_string[abi:nn180100]<0>(qword_254F220E8, "#fffff0");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22100, "khaki");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22118, "#f0e68c");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22130, "lavender");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22148, "#e6e6fa");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22160, "lavenderblush");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22178, "#fff0f5");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22190, "lawngreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F221A8, "#7cfc00");
    std::string::basic_string[abi:nn180100]<0>(qword_254F221C0, "lemonchiffon");
    std::string::basic_string[abi:nn180100]<0>(qword_254F221D8, "#fffacd");
    std::string::basic_string[abi:nn180100]<0>(qword_254F221F0, "lightblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22208, "#add8e6");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22220, "lightcoral");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22238, "#f08080");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22250, "lightcyan");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22268, "#e0ffff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22280, "lightgoldenrodyellow");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22298, "#fafad2");
    std::string::basic_string[abi:nn180100]<0>(qword_254F222B0, "lightgray");
    std::string::basic_string[abi:nn180100]<0>(qword_254F222C8, "#d3d3d3");
    std::string::basic_string[abi:nn180100]<0>(qword_254F222E0, "lightgrey");
    std::string::basic_string[abi:nn180100]<0>(qword_254F222F8, "#d3d3d3");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22310, "lightgreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22328, "#90ee90");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22340, "lightpink");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22358, "#ffb6c1");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22370, "lightsalmon");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22388, "#ffa07a");
    std::string::basic_string[abi:nn180100]<0>(qword_254F223A0, "lightseagreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F223B8, "#20b2aa");
    std::string::basic_string[abi:nn180100]<0>(qword_254F223D0, "lightskyblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F223E8, "#87cefa");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22400, "lightslategray");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22418, "#778899");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22430, "lightslategrey");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22448, "#778899");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22460, "lightsteelblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22478, "#b0c4de");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22490, "lightyellow");
    std::string::basic_string[abi:nn180100]<0>(qword_254F224A8, "#ffffe0");
    std::string::basic_string[abi:nn180100]<0>(qword_254F224C0, "lime");
    std::string::basic_string[abi:nn180100]<0>(qword_254F224D8, "#00ff00");
    std::string::basic_string[abi:nn180100]<0>(qword_254F224F0, "limegreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22508, "#32cd32");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22520, "linen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22538, "#faf0e6");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22550, "magenta");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22568, "#ff00ff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22580, "maroon");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22598, "#800000");
    std::string::basic_string[abi:nn180100]<0>(qword_254F225B0, "mediumaquamarine");
    std::string::basic_string[abi:nn180100]<0>(qword_254F225C8, "#66cdaa");
    std::string::basic_string[abi:nn180100]<0>(qword_254F225E0, "mediumblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F225F8, "#0000cd");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22610, "mediumorchid");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22628, "#ba55d3");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22640, "mediumpurple");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22658, "#9370d8");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22670, "mediumseagreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22688, "#3cb371");
    std::string::basic_string[abi:nn180100]<0>(qword_254F226A0, "mediumslateblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F226B8, "#7b68ee");
    std::string::basic_string[abi:nn180100]<0>(qword_254F226D0, "mediumspringgreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F226E8, "#00fa9a");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22700, "mediumturquoise");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22718, "#48d1cc");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22730, "mediumvioletred");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22748, "#c71585");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22760, "midnightblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22778, "#191970");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22790, "mintcream");
    std::string::basic_string[abi:nn180100]<0>(qword_254F227A8, "#f5fffa");
    std::string::basic_string[abi:nn180100]<0>(qword_254F227C0, "mistyrose");
    std::string::basic_string[abi:nn180100]<0>(qword_254F227D8, "#ffe4e1");
    std::string::basic_string[abi:nn180100]<0>(qword_254F227F0, "moccasin");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22808, "#ffe4b5");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22820, "navajowhite");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22838, "#ffdead");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22850, "navy");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22868, "#000080");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22880, "oldlace");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22898, "#fdf5e6");
    std::string::basic_string[abi:nn180100]<0>(qword_254F228B0, "olive");
    std::string::basic_string[abi:nn180100]<0>(qword_254F228C8, "#808000");
    std::string::basic_string[abi:nn180100]<0>(qword_254F228E0, "olivedrab");
    std::string::basic_string[abi:nn180100]<0>(qword_254F228F8, "#6b8e23");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22910, "orange");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22928, "#ffa500");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22940, "orangered");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22958, "#ff4500");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22970, "orchid");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22988, "#da70d6");
    std::string::basic_string[abi:nn180100]<0>(qword_254F229A0, "palegoldenrod");
    std::string::basic_string[abi:nn180100]<0>(qword_254F229B8, "#eee8aa");
    std::string::basic_string[abi:nn180100]<0>(qword_254F229D0, "palegreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F229E8, "#98fb98");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22A00, "paleturquoise");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22A18, "#afeeee");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22A30, "palevioletred");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22A48, "#d87093");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22A60, "papayawhip");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22A78, "#ffefd5");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22A90, "peachpuff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22AA8, "#ffdab9");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22AC0, "peru");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22AD8, "#cd853f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22AF0, "pink");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22B08, "#ffc0cb");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22B20, "plum");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22B38, "#dda0dd");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22B50, "powderblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22B68, "#b0e0e6");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22B80, "purple");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22B98, "#800080");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22BB0, "red");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22BC8, "#ff0000");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22BE0, "rosybrown");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22BF8, "#bc8f8f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22C10, "royalblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22C28, "#4169e1");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22C40, "saddlebrown");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22C58, "#8b4513");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22C70, "salmon");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22C88, "#fa8072");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22CA0, "sandybrown");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22CB8, "#f4a460");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22CD0, "seagreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22CE8, "#2e8b57");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22D00, "seashell");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22D18, "#fff5ee");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22D30, "sienna");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22D48, "#a0522d");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22D60, "silver");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22D78, "#c0c0c0");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22D90, "skyblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22DA8, "#87ceeb");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22DC0, "slateblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22DD8, "#6a5acd");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22DF0, "slategray");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22E08, "#708090");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22E20, "slategrey");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22E38, "#708090");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22E50, "snow");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22E68, "#fffafa");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22E80, "springgreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22E98, "#00ff7f");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22EB0, "steelblue");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22EC8, "#4682b4");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22EE0, "tan");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22EF8, "#d2b48c");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22F10, "teal");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22F28, "#008080");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22F40, "thistle");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22F58, "#d8bfd8");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22F70, "tomato");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22F88, "#ff6347");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22FA0, "turquoise");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22FB8, "#40e0d0");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22FD0, "violet");
    std::string::basic_string[abi:nn180100]<0>(qword_254F22FE8, "#ee82ee");
    std::string::basic_string[abi:nn180100]<0>(qword_254F23000, "wheat");
    std::string::basic_string[abi:nn180100]<0>(qword_254F23018, "#f5deb3");
    std::string::basic_string[abi:nn180100]<0>(qword_254F23030, "white");
    std::string::basic_string[abi:nn180100]<0>(qword_254F23048, "#ffffff");
    std::string::basic_string[abi:nn180100]<0>(qword_254F23060, "whitesmoke");
    std::string::basic_string[abi:nn180100]<0>(qword_254F23078, "#f5f5f5");
    std::string::basic_string[abi:nn180100]<0>(qword_254F23090, "yellow");
    std::string::basic_string[abi:nn180100]<0>(qword_254F230A8, "#ffff00");
    std::string::basic_string[abi:nn180100]<0>(qword_254F230C0, "yellowgreen");
    std::string::basic_string[abi:nn180100]<0>(qword_254F230D8, "#9acd32");
    __cxa_guard_release(&_ZGVZZ56EQKitMathMLParserConvertNamedColorStringToRGBFloatValuesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERdS8_S8_EUb_E11_HTMLColors);
  }
  result = (uint64_t **)operator new(0x18uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    v2 = result;
    result[2] = 0;
    result[1] = 0;
    *result = (uint64_t *)(result + 1);
    v3 = &_ZZZ56EQKitMathMLParserConvertNamedColorStringToRGBFloatValuesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERdS8_S8_EUb_E11_HTMLColors;
    v4 = 147;
    do
    {
      v6 = (__int128 *)v3;
      v5 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v2, (const void **)v3, (uint64_t)&std::piecewise_construct, &v6);
      result = (uint64_t **)std::string::operator=((std::string *)(v5 + 7), (const std::string *)v3 + 1);
      v3 += 6;
      --v4;
    }
    while (v4);
    EQKitMathMLParserConvertNamedColorStringToRGBFloatValues(std::string const&,double &,double &,double &)::sMap = (uint64_t)v2;
  }
  return result;
}

@end
